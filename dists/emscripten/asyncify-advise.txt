[asyncify] invoke_vii is an import that can change the state
[asyncify] emscripten_sleep is an import that can change the state
[asyncify] invoke_viiii is an import that can change the state
[asyncify] invoke_iii is an import that can change the state
[asyncify] invoke_ii is an import that can change the state
[asyncify] invoke_vi is an import that can change the state
[asyncify] invoke_iiiii is an import that can change the state
[asyncify] invoke_iiii is an import that can change the state
[asyncify] _dlopen_js is an import that can change the state
[asyncify] __wasi_fd_sync is an import that can change the state
[asyncify] Adl::DataBlock_PC::createReadStream\28\29\20const can change the state due to initial scan
[asyncify] Adl::DataBlock_PC::read\28Common::SeekableReadStream&\2c\20unsigned\20char*\2c\20unsigned\20int\29\20const can change the state due to initial scan
[asyncify] Adl::getVersion_WOZ\28Common::File&\29 can change the state due to initial scan
[asyncify] Adl::detectDOS33\28Common::SeekableReadStream&\2c\20unsigned\20int\29 can change the state due to initial scan
[asyncify] Adl::DiskImage::createReadStream\28unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int\29\20const can change the state due to initial scan
[asyncify] Adl::readImage_NIB\28Common::File&\2c\20bool\2c\20unsigned\20int\29 can change the state due to initial scan
[asyncify] Adl::DiskImage::open\28Common::String\20const&\29 can change the state due to initial scan
[asyncify] Adl::readTrack_WOZ\28Common::File&\2c\20unsigned\20int\2c\20bool\29 can change the state due to initial scan
[asyncify] Adl::readImage_WOZ\28Common::File&\2c\20bool\2c\20unsigned\20int\29 can change the state due to initial scan
[asyncify] Adl::decodeTrack\28Common::SeekableReadStream&\2c\20unsigned\20int\2c\20bool\2c\20unsigned\20char*\2c\20unsigned\20int\2c\20Common::Array<bool>&\29 can change the state due to initial scan
[asyncify] Adl::Files_AppleDOS::~Files_AppleDOS\28\29 can change the state due to initial scan
[asyncify] Adl::Files_Plain::createReadStream\28Common::String\20const&\2c\20unsigned\20int\29\20const can change the state due to initial scan
[asyncify] Adl::Files_AppleDOS::readSectorList\28Adl::Files_AppleDOS::TrackSector\2c\20Common::Array<Adl::Files_AppleDOS::TrackSector>&\29 can change the state due to initial scan
[asyncify] Adl::computeMD5\28Common::FSNode\20const&\2c\20Common::String&\2c\20unsigned\20int\29 can change the state due to initial scan
[asyncify] Adl::Files_AppleDOS::createReadStreamBinary\28Adl::Files_AppleDOS::TOCEntry\20const&\29\20const can change the state due to initial scan
[asyncify] Adl::Files_AppleDOS::createReadStream\28Common::String\20const&\2c\20unsigned\20int\29\20const can change the state due to initial scan
[asyncify] Adl::Files_AppleDOS::createReadStreamText\28Adl::Files_AppleDOS::TOCEntry\20const&\29\20const can change the state due to initial scan
[asyncify] Adl::Files_AppleDOS::readVTOC\28\29 can change the state due to initial scan
[asyncify] Adl::Files::DataBlock::createReadStream\28\29\20const can change the state due to initial scan
[asyncify] Common::BasePtrTrackerImpl<Adl::DiskImage::DataBlock>::destructObject\28\29 can change the state due to initial scan
[asyncify] Common::BasePtrTrackerImpl<Adl::Files::DataBlock>::destructObject\28\29 can change the state due to initial scan
[asyncify] Agi::WagProperty::read\28Common::SeekableReadStream&\29 can change the state due to initial scan
[asyncify] Agi::WagFileParser::checkWagVersion\28Common::SeekableReadStream&\29 can change the state due to initial scan
[asyncify] Agi::WagFileParser::parse\28Common::FSNode\20const&\29 can change the state due to initial scan
[asyncify] Agi::WagFileParser::endOfProperties\28Common::SeekableReadStream\20const&\29\20const can change the state due to initial scan
[asyncify] Common::HashMap<Common::String\2c\20Common::FSNode\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>::~HashMap\28\29 can change the state due to initial scan
[asyncify] AGSMetaEngineDetection::fallbackDetect\28Common::HashMap<Common::String\2c\20Common::FSNode\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>\20const&\2c\20Common::FSList\20const&\2c\20ADDetectedGameExtraInfo**\29\20const can change the state due to initial scan
[asyncify] AGSMetaEngineDetection::detectGames\28Common::FSList\20const&\2c\20unsigned\20int\2c\20bool\29 can change the state due to initial scan
[asyncify] AgiMetaEngineDetection::fallbackDetect\28Common::HashMap<Common::String\2c\20Common::FSNode\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>\20const&\2c\20Common::FSList\20const&\2c\20ADDetectedGameExtraInfo**\29\20const can change the state due to initial scan
[asyncify] CGE::BtPage::readBTree\28Common::ReadStream&\29 can change the state due to initial scan
[asyncify] CGE::ResourceManager::ResourceManager\28\29 can change the state due to initial scan
[asyncify] CGE::ResourceManager::~ResourceManager\28\29 can change the state due to initial scan
[asyncify] CGE::CGEMetaEngineDetection::fallbackDetect\28Common::HashMap<Common::String\2c\20Common::FSNode\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>\20const&\2c\20Common::FSList\20const&\2c\20ADDetectedGameExtraInfo**\29\20const can change the state due to initial scan
[asyncify] CGE::ResourceManager::seek\28int\2c\20int\29 can change the state due to initial scan
[asyncify] CGE::ResourceManager::read\28unsigned\20char*\2c\20unsigned\20short\29 can change the state due to initial scan
[asyncify] CGE::ResourceManager::catRead\28unsigned\20char*\2c\20unsigned\20short\29 can change the state due to initial scan
[asyncify] CGE::ResourceManager::getPage\28int\2c\20unsigned\20short\29 can change the state due to initial scan
[asyncify] CGE::ResourceManager::find\28char\20const*\29 can change the state due to initial scan
[asyncify] CGE::EncryptedStream::read\28unsigned\20char*\2c\20unsigned\20int\29 can change the state due to initial scan
[asyncify] CGE::EncryptedStream::eos\28\29 can change the state due to initial scan
[asyncify] CGE::EncryptedStream::seek\28int\29 can change the state due to initial scan
[asyncify] [asyncify] CGE::EncryptedStream::pos\28\29 can change the state due to initial scan
[asyncify] CGE::EncryptedStream::readLine\28\29 can change the state due to initial scan
[asyncify] CGE::EncryptedStream::~EncryptedStream\28\29 can change the state due to initial scan
[asyncify] [asyncify] CGE2::CGE2MetaEngineDetection::fallbackDetect\28Common::HashMap<Common::String\2c\20Common::FSNode\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>\20const&\2c\20Common::FSList\20const&\2c\20ADDetectedGameExtraInfo**\29\20const[asyncify] CGE::EncryptedStream::size\28\29 can change the state due to initial scan
[asyncify] CGE2::ResourceManager::~ResourceManager\28\29 can change the state due to initial scan
[asyncify] CGE2::ResourceManager::seek\28int\2c\20int\29 can change the state due to initial scan
[asyncify] CGE2::ResourceManager::read\28unsigned\20char*\2c\20unsigned\20short\29 can change the state due to initial scan
[asyncify] CGE2::ResourceManager::getPage\28int\2c\20unsigned\20short\29 can change the state due to initial scan
[asyncify] CGE2::ResourceManager::catRead\28unsigned\20char*\2c\20unsigned\20short\29 can change the state due to initial scan
[asyncify] CGE::EncryptedStream::EncryptedStream\28CGE::ResourceManager*\2c\20char\20const*\29 can change the state due to initial scan
[asyncify] CGE2::ResourceManager::find\28char\20const*\29 can change the state due to initial scan
[asyncify] CGE2::ResourceManager::ResourceManager\28\29 can change the state due to initial scan
[asyncify] CGE2::EncryptedStream::readSint16LE\28\29 can change the state due to initial scan
[asyncify] CGE2::EncryptedStream::read\28unsigned\20char*\2c\20unsigned\20int\29 can change the state due to initial scan
[asyncify] [asyncify] CGE2::EncryptedStream::err\28\29 can change the state due to initial scan
[asyncify] CGE2::EncryptedStream::eos\28\29 can change the state due to initial scan
[asyncify] CGE2::EncryptedStream::seek\28int\29 can change the state due to initial scan
[asyncify] CGE2::EncryptedStream::size\28\29 can change the state due to initial scan
[asyncify] CGE2::EncryptedStream::pos\28\29 can change the state due to initial scan
[asyncify] CGE2::EncryptedStream::readLine\28\29 can change the state due to initial scan
[asyncify] CGE2::EncryptedStream::~EncryptedStream\28\29 can change the state due to initial scan
[asyncify] CGE2::EncryptedStream::EncryptedStream\28CGE2::ResourceManager*\2c\20char\20const*\29 can change the state due to initial scan
[asyncify] DirectorMetaEngineDetection::fallbackDetect\28Common::HashMap<Common::String\2c\20Common::FSNode\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>\20const&\2c\20Common::FSList\20const&\2c\20ADDetectedGameExtraInfo**\29\20const can change the state due to initial scan
[asyncify] Glk::Adrift::AdriftMetaEngine::detectGames\28Common::FSList\20const&\2c\20Common::Array<DetectedGame>&\29 can change the state due to initial scan
[asyncify] Glk::AdvSys::AdvSysMetaEngine::detectGames\28Common::FSList\20const&\2c\20Common::Array<DetectedGame>&\29 can change the state due to initial scan
[asyncify] Glk::Alan2::Alan2MetaEngine::detectGames\28Common::FSList\20const&\2c\20Common::Array<DetectedGame>&\29 can change the state due to initial scan
[asyncify] Glk::Alan3::Alan3MetaEngine::detectGames\28Common::FSList\20const&\2c\20Common::Array<DetectedGame>&\29 can change the state due to initial scan
[asyncify] Glk::AGT::AGTMetaEngine::detectGames\28Common::FSList\20const&\2c\20Common::Array<DetectedGame>&\29 can change the state due to initial scan
[asyncify] Glk::Archetype::ArchetypeMetaEngine::detectGames\28Common::FSList\20const&\2c\20Common::Array<DetectedGame>&\29 can change the state due to initial scan
[asyncify] Glk::Glulx::GlulxMetaEngine::detectGames\28Common::FSList\20const&\2c\20Common::Array<DetectedGame>&\29 can change the state due to initial scan
[asyncify] Glk::Comprehend::ComprehendMetaEngine::detectGames\28Common::FSList\20const&\2c\20Common::Array<DetectedGame>&\29 can change the state due to initial scan
[asyncify] Glk::Hugo::HugoMetaEngine::detectGames\28Common::FSList\20const&\2c\20Common::Array<DetectedGame>&\29 can change the state due to initial scan
[asyncify] Glk::JACL::JACLMetaEngine::detectGames\28Common::FSList\20const&\2c\20Common::Array<DetectedGame>&\29 can change the state due to initial scan
[asyncify] Glk::Level9::Level9MetaEngine::detectGames\28Common::FSList\20const&\2c\20Common::Array<DetectedGame>&\29 can change the state due to initial scan
[asyncify] Glk::Magnetic::MagneticMetaEngine::detectGames\28Common::FSList\20const&\2c\20Common::Array<DetectedGame>&\29 can change the state due to initial scan
[asyncify] Glk::TADS::TADSMetaEngine::getTADSVersion\28Common::SeekableReadStream&\29 can change the state due to initial scan
[asyncify] Glk::Quest::QuestMetaEngine::detectGames\28Common::FSList\20const&\2c\20Common::Array<DetectedGame>&\29 can change the state due to initial scan
[asyncify] Glk::Scott::ScottMetaEngine::detectGames\28Common::FSList\20const&\2c\20Common::Array<DetectedGame>&\29 can change the state due to initial scan
[asyncify] Glk::ZCode::ZCodeMetaEngine::detectGames\28Common::FSList\20const&\2c\20Common::Array<DetectedGame>&\29 can change the state due to initial scan
[asyncify] Glk::Blorb::readRIdx\28Common::SeekableReadStream&\2c\20Common::Array<Glk::ChunkEntry>&\29 can change the state due to initial scan
[asyncify] Glk::Blorb::load\28\29 can change the state due to initial scan
[asyncify] Glk::TADS::TADSMetaEngine::detectGames\28Common::FSList\20const&\2c\20Common::Array<DetectedGame>&\29 can change the state due to initial scan
[asyncify] Glk::Blorb::getMember\28Common::Path\20const&\29\20const can change the state due to initial scan
[asyncify] Glk::Blorb::isBlorb\28Common::SeekableReadStream&\2c\20unsigned\20int\29 can change the state due to initial scan
[asyncify] Glk::Blorb::~Blorb\28\29 can change the state due to initial scan
[asyncify] Glk::Blorb::~Blorb\28\29.1 can change the state due to initial scan
[asyncify] Common::BasePtrTrackerImpl<Common::GenericArchiveMember>::destructObject\28\29 can change the state due to initial scan
[asyncify] Glk::AdvSys::Header::init\28Common::SeekableReadStream*\29 can change the state due to initial scan
[asyncify] Glk::AdvSys::Game::restart\28\29 can change the state due to initial scan
[asyncify] Glk::AdvSys::Game::saveGameData\28Common::WriteStream&\29 can change the state due to initial scan
[asyncify] Glk::AdvSys::Game::loadGameData\28Common::ReadStream&\29 can change the state due to initial scan
[asyncify] Glk::AdvSys::Game::init\28Common::SeekableReadStream*\29 can change the state due to initial scan
[asyncify] Glk::AdvSys::Game::readMsgBlock\28\29 can change the state due to initial scan
[asyncify] GobMetaEngineDetection::detectOnceUponATime\28Common::FSList\20const&\29 can change the state due to initial scan
[asyncify] Gob::DataIO::getSizeChunks\28Common::SeekableReadStream&\29 can change the state due to initial scan
[asyncify] Gob::DataIO::unpack\28Common::SeekableReadStream&\2c\20int&\2c\20unsigned\20char\2c\20bool\29 can change the state due to initial scan
[asyncify] Gob::DataIO::unpackChunks\28Common::SeekableReadStream&\2c\20unsigned\20char*\2c\20unsigned\20int\29 can change the state due to initial scan
[asyncify] Gob::DataIO::unpackChunk\28Common::SeekableReadStream&\2c\20unsigned\20char*\2c\20unsigned\20int\29 can change the state due to initial scan
[asyncify] Gob::DataIO::unpack\28unsigned\20char\20const*\2c\20unsigned\20int\2c\20int&\2c\20unsigned\20char\29 can change the state due to initial scan
[asyncify] Gob::DataIO::openArchive\28Common::String\20const&\29 can change the state due to initial scan
[asyncify] Gob::DataIO::getFile\28Gob::DataIO::File&\29 can change the state due to initial scan
[asyncify] Gob::DataIO::fileSize\28Common::String\20const&\29 can change the state due to initial scan
[asyncify] QueenMetaEngineDetection::fallbackDetect\28Common::HashMap<Common::String\2c\20Common::FSNode\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>\20const&\2c\20Common::FSList\20const&\2c\20ADDetectedGameExtraInfo**\29\20const can change the state due to initial scan
[asyncify] Sci::SciMetaEngineDetection::fallbackDetect\28Common::HashMap<Common::String\2c\20Common::FSNode\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>\20const&\2c\20Common::FSList\20const&\2c\20ADDetectedGameExtraInfo**\29\20const can change the state due to initial scan
[asyncify] Queen::detectVersion\28Queen::DetectedGameVersion*\2c\20Common::File*\29CGE2::BtPage::readBTree\28Common::ReadStream&\29 can change the state due to initial scan
[asyncify] Common::HashMap<Common::String\2c\20Scumm::DetectorDesc\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>::~HashMap\28\29 can change the state due to initial scan
[asyncify] Scumm::searchFSNode\28Common::FSList\20const&\2c\20Common::String\20const&\2c\20Common::FSNode&\29 can change the state due to initial scan
[asyncify] Scumm::detectLanguage\28Common::FSList\20const&\2c\20unsigned\20char\2c\20Common::Language\29 can change the state due to initial scan
[asyncify] Scumm::ScummFile::resetSubfile\28\29 can change the state due to initial scan
[asyncify] Scumm::composeFileHashMap\28Common::HashMap<Common::String\2c\20Scumm::DetectorDesc\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>&\2c\20Common::FSList\20const&\2c\20int\2c\20char\20const*\20const*\29 can change the state due to initial scan
[asyncify] Scumm::ScummFile::open\28Common::Path\20const&\29[asyncify] Scumm::ScummFile::setSubfileRange\28int\2c\20int\29 can change the state due to initial scan
[asyncify] virtual\20thunk\20to\20Scumm::ScummFile::read\28void*\2c\20unsigned\20int\29 can change the state due to initial scan
[asyncify] Scumm::ScummSteamFile::openWithSubRange\28Common::String\20const&\2c\20int\2c\20int\29 can change the state due to initial scan
[asyncify] Scumm::ScummDiskImage::generateIndex\28\29 can change the state due to initial scan
[asyncify] Scumm::ScummSteamFile::open\28Common::Path\20const&\29 can change the state due to initial scan
[asyncify] Scumm::ScummDiskImage::extractIndex\28Common::WriteStream*\29 can change the state due to initial scan
[asyncify] Scumm::ScummFile::read\28void*\2c\20unsigned\20int\29 can change the state due to initial scan
[asyncify] Scumm::ScummDiskImage::extractResource\28Common::WriteStream*\2c\20int\29 can change the state due to initial scan
[asyncify] ScummMetaEngineDetection::detectGames\28Common::FSList\20const&\2c\20unsigned\20int\2c\20bool\29 can change the state due to initial scan
[asyncify] Scumm::ScummDiskImage::close\28\29 can change the state due to initial scan
[asyncify] Scumm::ScummDiskImage::read\28void*\2c\20unsigned\20int\29 can change the state due to initial scan
[asyncify] virtual\20thunk\20to\20Scumm::ScummDiskImage::read\28void*\2c\20unsigned\20int\29 can change the state due to initial scan
[asyncify] Common::SeekableReadStream::skip\28unsigned\20int\29 can change the state due to initial scan
[asyncify] Scumm::ScummDiskImage::generateResource\28int\29 can change the state due to initial scan
[asyncify] Scumm::ScummDiskImage::eos\28\29\20const can change the state due to initial scan
[asyncify] Scumm::ScummDiskImage::size\28\29\20const[asyncify] Scumm::ScummDiskImage::seek\28long\20long\2c\20int\29 can change the state due to initial scan
[asyncify] Common::WriteStream::finalize\28\29 can change the state due to initial scan
[asyncify] Scumm::ScummFile::openSubFile\28Common::String\20const&\29 can change the state due to initial scan
[asyncify] Scumm::ScummNESFile::generateIndex\28\29 can change the state due to initial scan
[asyncify] Scumm::ScummNESFile::generateResource\28int\29 can change the state due to initial scan
[asyncify] Scumm::ScummNESFile::extractResource\28Common::WriteStream*\2c\20Scumm::ScummNESFile::Resource\20const*\2c\20Scumm::ScummNESFile::ResType\29 can change the state due to initial scan
[asyncify] Scumm::ScummNESFile::close\28\29 can change the state due to initial scan
[asyncify] Scumm::ScummNESFile::open\28Common::Path\20const&\29 can change the state due to initial scan
[asyncify] [asyncify] virtual\20thunk\20to\20Scumm::ScummNESFile::read\28void*\2c\20unsigned\20int\29 can change the state due to initial scan
[asyncify] Scumm::ScummNESFile::eos\28\29\20const can change the state due to initial scan
[asyncify] Scumm::ScummNESFile::pos\28\29\20const can change the state due to initial scan
[asyncify] Scumm::ScummNESFile::size\28\29\20const can change the state due to initial scan
[asyncify] Scumm::ScummNESFile::seek\28long\20long\2c\20int\29 can change the state due to initial scan
[asyncify] SkyMetaEngineDetection::detectGames\28Common::FSList\20const&\2c\20unsigned\20int\2c\20bool\29 can change the state due to initial scan
[asyncify] SludgeMetaEngineDetection::fallbackDetect\28Common::HashMap<Common::String\2c\20Common::FSNode\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>\20const&\2c\20Common::FSList\20const&\2c\20ADDetectedGameExtraInfo**\29\20const can change the state due to initial scan
[asyncify] TuckerMetaEngineDetection::fallbackDetect\28Common::HashMap<Common::String\2c\20Common::FSNode\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>\20const&\2c\20Common::FSList\20const&\2c\20ADDetectedGameExtraInfo**\29\20const can change the state due to initial scan
[asyncify] Wintermute::WintermuteMetaEngineDetection::fallbackDetect\28Common::HashMap<Common::String\2c\20Common::FSNode\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>\20const&\2c\20Common::FSList\20const&\2c\20ADDetectedGameExtraInfo**\29\20const can change the state due to initial scan
[asyncify] OSystem_SDL::~OSystem_SDL\28\29 can change the state due to initial scan
[asyncify] OSystem_SDL::init\28\29 can change the state due to initial scan
[asyncify] virtual\20thunk\20to\20OSystem_SDL::init\28\29 can change the state due to initial scan
[asyncify] TinselMetaEngineDetection::fallbackDetect\28Common::HashMap<Common::String\2c\20Common::FSNode\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>\20const&\2c\20Common::FSList\20const&\2c\20ADDetectedGameExtraInfo**\29\20const can change the state due to initial scan
[asyncify] OSystem_SDL::initBackend\28\29 can change the state due to initial scan
[asyncify] OSystem_SDL::setupGraphicsModes\28\29 can change the state due to initial scan
[asyncify] OSystem_SDL::addSysArchivesToSearchSet\28Common::SearchSet&\2c\20int\29 can change the state due to initial scan
[asyncify] OSystem_SDL::createLogFile\28\29 can change the state due to initial scan
[asyncify] virtual\20thunk\20to\20OSystem_SDL::getTextFromClipboard\28\29 can change the state due to initial scan
[asyncify] OSystem_SDL::getTextFromClipboard\28\29 can change the state due to initial scan
[asyncify] OSystem_SDL::getSupportedGraphicsModes\28\29\20const can change the state due to initial scan
[asyncify] non-virtual\20thunk\20to\20OSystem_SDL::getSupportedGraphicsModes\28\29\20const can change the state due to initial scan
[asyncify] OSystem_SDL::getDefaultGraphicsMode\28\29\20const can change the state due to initial scan
[asyncify] non-virtual\20thunk\20to\20OSystem_SDL::getDefaultGraphicsMode\28\29\20const can change the state due to initial scan
[asyncify] virtual\20thunk\20to\20OSystem_SDL::getDefaultGraphicsMode\28\29\20const can change the state due to initial scan
[asyncify] virtual\20thunk\20to\20OSystem_SDL::getSupportedGraphicsModes\28\29\20const can change the state due to initial scan
[asyncify] OSystem_SDL::getGraphicsMode\28\29\20const[asyncify] virtual\20thunk\20to\20OSystem_SDL::getGraphicsMode\28\29\20const can change the state due to initial scan
[asyncify] non-virtual\20thunk\20to\20OSystem_SDL::getGraphicsMode\28\29\20const can change the state due to initial scan
[asyncify] MixerManager::~MixerManager\28\29 can change the state due to initial scan
[asyncify] OSystem_SDL::setGraphicsMode\28int\2c\20unsigned\20int\29 can change the state due to initial scan
[asyncify] SdlWindow::createOrUpdateWindow\28int\2c\20int\2c\20unsigned\20int\29 can change the state due to initial scan
[asyncify] OSystem_POSIX::addSysArchivesToSearchSet\28Common::SearchSet&\2c\20int\29 can change the state due to initial scan
[asyncify] main can change the state due to initial scan
[asyncify] OSystem_POSIX::getXdgUserDir\28char\20const*\29 can change the state due to initial scan
[asyncify] [asyncify] Scumm::ScummDiskImage::pos\28\29\20const can change the state due to initial scan
[asyncify] Common::FSNode::~FSNode\28\29 can change the state due to initial scan
[asyncify] runGame\28Plugin\20const*\2c\20Plugin\20const*\2c\20OSystem&\2c\20Common::String\20const&\29 can change the state due to initial scan
[asyncify] scummvm_main can change the state due to initial scan
[asyncify] Base::listEngines\28\29 can change the state due to initial scan
[asyncify] Base::listAllEngines\28\29 can change the state due to initial scan
[asyncify] Base::listAudioDevices\28\29 can change the state due to initial scan
[asyncify] Base::upgradeTargets\28\29[asyncify]  can change the state due to initial scan
[asyncify] setupGraphics\28OSystem&\29 can change the state due to initial scan
[asyncify] Base::detectGames\28Common::String\20const&\2c\20Common::String\20const&\2c\20Common::String\20const&\2c\20bool\29 can change the state due to initial scan
[asyncify] Base::addGames\28Common::String\20const&\2c\20Common::String\20const&\2c\20Common::String\20const&\2c\20bool\29 can change the state due to initial scan
[asyncify] Base::calcMD5\28Common::FSNode&\2c\20int\29 can change the state due to initial scan
[asyncify] Base::calcMD5Mac\28Common::Path&\2c\20int\29 can change the state due to initial scan
[asyncify] Base::runDetectorTest\28\29 can change the state due to initial scan
[asyncify] Common::Array<SaveStateDescriptor>::freeStorage\28SaveStateDescriptor*\2c\20unsigned\20int\29 can change the state due to initial scan
[asyncify] Base::processSettings\28Common::String&\2c\20Common::HashMap<Common::String\2c\20Common::String\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>&\2c\20Common::Error&\29 can change the state due to initial scan
[asyncify] Base::recListGames\28Common::FSNode\20const&\2c\20Common::String\20const&\2c\20Common::String\20const&\2c\20bool\29 can change the state due to initial scan
[asyncify] Base::recAddGames\28Common::FSNode\20const&\2c\20Common::String\20const&\2c\20Common::String\20const&\2c\20bool\29 can change the state due to initial scan
[asyncify] Plugin::getName\28\29\20const can change the state due to initial scan
[asyncify] StaticPlugin::~StaticPlugin\28\29 can change the state due to initial scan
[asyncify] Base::getGameList\28Common::FSNode\20const&\29 can change the state due to initial scan
[asyncify] FilePluginProvider::getPlugins\28\29 can change the state due to initial scan
[asyncify] Common::Array<Common::FSNode>::insert_aux\28Common::FSNode*\2c\20Common::FSNode\20const*\2c\20Common::FSNode\20const*\29 can change the state due to initial scan
[asyncify] FilePluginProvider::isPluginFilename\28Common::FSNode\20const&\29\20const can change the state due to initial scan
[asyncify] FilePluginProvider::addCustomDirectories\28Common::FSList&\29\20const can change the state due to initial scan
[asyncify] PluginManager::~PluginManager\28\29 can change the state due to initial scan
[asyncify] PluginManager::unloadAllPlugins\28\29 can change the state due to initial scan
[asyncify] PluginManager::findEnginePlugin\28Common::String\20const&\29 can change the state due to initial scan
[asyncify] PluginManager::getMetaEngineFromEngine\28Plugin\20const*\29 can change the state due to initial scan
[asyncify] PluginManager::getEngineFromMetaEngine\28Plugin\20const*\29 can change the state due to initial scan
[asyncify] PluginManagerUncached::init\28\29 can change the state due to initial scan
[asyncify] PluginManager::unloadPluginsExcept\28PluginType\2c\20Plugin\20const*\2c\20bool\29 can change the state due to initial scan
[asyncify] PluginManager::addToPluginsInMemList\28Plugin*\29 can change the state due to initial scan
[asyncify] PluginManagerUncached::loadPluginFromEngineId\28Common::String\20const&\29 can change the state due to initial scan
[asyncify] PluginManagerUncached::updateConfigWithFileName\28Common::String\20const&\29 can change the state due to initial scan
[asyncify] PluginManagerUncached::loadFirstPlugin\28\29 can change the state due to initial scan
[asyncify] PluginManagerUncached::loadNextPlugin\28\29 can change the state due to initial scan
[asyncify] PluginManager::loadAllPlugins\28\29[asyncify] PluginManager::tryLoadPlugin\28Plugin*\29 can change the state due to initial scan
[asyncify] PluginManagerUncached::loadPluginByFileName\28Common::String\20const&\29 can change the state due to initial scan
[asyncify] PluginManager::loadAllPluginsOfType\28PluginType\29 can change the state due to initial scan
[asyncify] EngineManager::findPlugin\28Common::String\20const&\29\20const can change the state due to initial scan
[asyncify] EngineManager::findGamesMatching\28Common::String\20const&\2c\20Common::String\20const&\29\20const can change the state due to initial scan
[asyncify] EngineManager::findGameInLoadedPlugins\28Common::String\20const&\29\20const can change the state due to initial scan
[asyncify] PluginManager::findLoadedPlugin\28Common::String\20const&\29 can change the state due to initial scan
[asyncify] EngineManager::findTarget\28Common::String\20const&\2c\20Plugin\20const**\29\20const can change the state due to initial scan
[asyncify] EngineManager::detectGames\28Common::FSList\20const&\2c\20unsigned\20int\2c\20bool\29 can change the state due to initial scan
[asyncify] ScalerManager::findScalerPlugin\28char\20const*\29\20const can change the state due to initial scan
[asyncify] ScalerManager::getMaxExtraPixels\28\29\20const can change the state due to initial scan
[asyncify] ScalerManager::findScalerPluginIndex\28char\20const*\29\20const can change the state due to initial scan
[asyncify] PluginManagerUncached::~PluginManagerUncached\28\29 can change the state due to initial scan
[asyncify] PluginManagerUncached::~PluginManagerUncached\28\29.1 can change the state due to initial scan
[asyncify] EngineManager::upgradeTargetForEngineId\28Common::String\20const&\29\20const can change the state due to initial scan
[asyncify] Common::AchievementsManager::loadAchievementsData\28char\20const*\2c\20char\20const*\29 can change the state due to initial scan
[asyncify] Common::AchievementsManager::setAchievement\28Common::String\20const&\29 can change the state due to initial scan
[asyncify] AdvancedMetaEngineDetection::toDetectedGame\28ADDetectedGame\20const&\2c\20ADDetectedGameExtraInfo*\29\20const can change the state due to initial scan
[asyncify] AdvancedMetaEngineDetection::preprocessDescriptions\28\29 can change the state due to initial scan
[asyncify] AdvancedMetaEngineDetection::detectGames\28Common::FSList\20const&\2c\20unsigned\20int\2c\20bool\29 can change the state due to initial scan
[asyncify] AdvancedMetaEngine::getExtraGuiOptions\28Common::String\20const&\29\20const can change the state due to initial scan
[asyncify] AdvancedMetaEngineDetection::detectClashes\28\29\20const can change the state due to initial scan
[asyncify] AdvancedMetaEngineDetection::composeFileHashMap\28Common::HashMap<Common::String\2c\20Common::FSNode\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>&\2c\20Common::FSList\20const&\2c\20int\2c\20Common::String\20const&\29\20const can change the state due to initial scan
[asyncify] AdvancedMetaEngineDetection::createInstance\28OSystem*\2c\20Engine**\29 can change the state due to initial scan
[asyncify] getFilePropertiesIntern\28unsigned\20int\2c\20Common::HashMap<Common::String\2c\20Common::FSNode\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>\20const&\2c\20ADGameDescription\20const&\2c\20Common::String\20const&\2c\20FileProperties&\29 can change the state due to initial scan
[asyncify] AdvancedMetaEngineDetection::detectGame\28Common::FSNode\20const&\2c\20Common::HashMap<Common::String\2c\20Common::FSNode\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>\20const&\2c\20Common::Language\2c\20Common::Platform\2c\20Common::String\20const&\2c\20unsigned\20int\2c\20bool\29 can change the state due to initial scan
[asyncify] MetaEngine::getMaximumSaveSlot\28\29\20const can change the state due to initial scan
[asyncify] Common::BasePtrTrackerImpl<Common::FSNode>::destructObject\28\29 can change the state due to initial scan
[asyncify] FileMapArchive::createReadStreamForMember\28Common::Path\20const&\29\20const can change the state due to initial scan
[asyncify] MainMenuDialog::~MainMenuDialog\28\29 can change the state due to initial scan
[asyncify] MainMenuDialog::load\28\29 can change the state due to initial scan
[asyncify] MainMenuDialog::save\28\29 can change the state due to initial scan
[asyncify] MainMenuDialog::handleCommand\28GUI::CommandSender*\2c\20unsigned\20int\2c\20unsigned\20int\29 can change the state due to initial scan
[asyncify] GUI::ConfigDialog::build\28\29 can change the state due to initial scan
[asyncify] GUI::ConfigDialog::apply\28\29 can change the state due to initial scan
[asyncify] MainMenuDialog::MainMenuDialog\28Engine*\29 can change the state due to initial scan
[asyncify] MainMenuDialog::reflowLayout\28\29 can change the state due to initial scan
[asyncify] GUI::ExtraGuiOptionsWidget::handleCommand\28GUI::CommandSender*\2c\20unsigned\20int\2c\20unsigned\20int\29 can change the state due to initial scan
[asyncify] GUI::ConfigDialog::ConfigDialog\28\29 can change the state due to initial scan
[asyncify] GUI::GuiObject::getChildX\28\29\20const can change the state due to initial scan
[asyncify] GUI::GuiObject::getChildY\28\29\20const can change the state due to initial scan
[asyncify] GUI::Widget::getAbsX\28\29\20const can change the state due to initial scan
[asyncify] GUI::Widget::getAbsY\28\29\20constBase::listSaves\28Common::String\20const&\29[asyncify] GUI::Widget::handleMouseWheel\28int\2c\20int\2c\20int\29 can change the state due to initial scan
[asyncify] GUI::Widget::releaseFocus\28\29 can change the state due to initial scan
[asyncify] defaultOutputFormatter\28char*\2c\20char\20const*\2c\20unsigned\20long\29 can change the state due to initial scan
[asyncify] Engine::Engine\28OSystem*\29 can change the state due to initial scan
[asyncify] defaultErrorHandler\28char\20const*\29 can change the state due to initial scan
[asyncify] Engine::~Engine\28\29 can change the state due to initial scan
[asyncify] initGraphicsModes\28Common::Array<Graphics::Mode>\20const&\29 can change the state due to initial scan
[asyncify] initCommonGFX\28\29 can change the state due to initial scan
[asyncify] splashScreen\28\29 can change the state due to initial scan
[asyncify] initGraphics\28int\2c\20int\2c\20Graphics::PixelFormat\20const*\29 can change the state due to initial scan
[asyncify] initGraphics\28int\2c\20int\2c\20Common::List<Graphics::PixelFormat>\20const&\29 can change the state due to initial scan
[asyncify] GUIErrorMessage\28Common::U32String\20const&\2c\20char\20const*\29 can change the state due to initial scan
[asyncify] initGraphics3d\28int\2c\20int\29 can change the state due to initial scan
[asyncify] Engine::existExtractedCDAudioFiles\28unsigned\20int\29 can change the state due to initial scan
[asyncify] Engine::handleAutoSave\28\29 can change the state due to initial scan
[asyncify] Engine::saveAutosaveIfEnabled\28\29 can change the state due to initial scan
[asyncify] Engine::isDataAndCDAudioReadFromSameCD\28\29[asyncify] Engine::pauseEngine\28\29 can change the state due to initial scan
[asyncify] Engine::pauseEngineIntern\28bool\29 can change the state due to initial scan
[asyncify] Engine::resumeEngine\28\29 can change the state due to initial scan
[asyncify] Engine::warnBeforeOverwritingAutosave\28\29 can change the state due to initial scan
[asyncify] Engine::openMainMenuDialog\28\29 can change the state due to initial scan
[asyncify] Engine::warnUserAboutUnsupportedGame\28Common::String\29 can change the state due to initial scan
[asyncify] Engine::getTotalPlayTime\28\29\20const can change the state due to initial scan
[asyncify] Engine::setTotalPlayTime\28unsigned\20int\29 can change the state due to initial scan
[asyncify] Engine::runDialog\28GUI::Dialog&\29 can change the state due to initial scan
[asyncify] Engine::flipMute\28\29 can change the state due to initial scan
[asyncify] Engine::syncSoundSettings\28\29[asyncify] Engine::loadGameState\28int\29 can change the state due to initial scan
[asyncify] Engine::errorUnsupportedGame\28Common::String\29 can change the state due to initial scan
[asyncify] Engine::saveGameState\28int\2c\20Common::String\20const&\2c\20bool\29 can change the state due to initial scan
[asyncify] Engine::quitGame\28\29 can change the state due to initial scan
[asyncify] Engine::loadGameDialog\28\29 can change the state due to initial scan
[asyncify] Engine::shouldQuit\28\29 can change the state due to initial scan
[asyncify] Engine::saveGameDialog\28\29 can change the state due to initial scan
[asyncify] PauseToken::clear\28\29 can change the state due to initial scan
[asyncify] PauseToken::~PauseToken\28\29 can change the state due to initial scan
[asyncify] Engine::canSaveAutosaveCurrently\28\29 can change the state due to initial scan
[asyncify] MetaEngine::getSavegameFile\28int\2c\20char\20const*\29\20const can change the state due to initial scan
[asyncify] MetaEngine::appendExtendedSave\28Common::OutSaveFile*\2c\20unsigned\20int\2c\20Common::String\2c\20bool\29 can change the state due to initial scan
[asyncify] MetaEngine::appendExtendedSaveToStream\28Common::WriteStream*\2c\20unsigned\20int\2c\20Common::String\2c\20bool\2c\20unsigned\20int\29 can change the state due to initial scan
[asyncify] MetaEngine::getAchievementsInfo\28Common::String\20const&\29\20const can change the state due to initial scan
[asyncify] MetaEngine::copySaveFileToFreeSlot\28char\20const*\2c\20int\29 can change the state due to initial scan
[asyncify] MetaEngine::findEmptySaveSlot\28char\20const*\29 can change the state due to initial scan
[asyncify] MetaEngine::listSaves\28char\20const*\29\20const can change the state due to initial scan
[asyncify] MetaEngine::listSaves\28char\20const*\2c\20bool\29\20const can change the state due to initial scan
[asyncify] MetaEngine::registerDefaultSettings\28Common::String\20const&\29\20const can change the state due to initial scan
[asyncify] MetaEngine::buildEngineOptionsWidget\28GUI::GuiObject*\2c\20Common::String\20const&\2c\20Common::String\20const&\29\20const can change the state due to initial scan
[asyncify] MetaEngine::removeSaveState\28char\20const*\2c\20int\29\20const can change the state due to initial scan
[asyncify] MetaEngine::querySaveMetaInfos\28char\20const*\2c\20int\29\20const can change the state due to initial scan
[asyncify] SaveStateDescriptor*\20Common::copy_backward<SaveStateDescriptor*\2c\20SaveStateDescriptor*>\28SaveStateDescriptor*\2c\20SaveStateDescriptor*\2c\20SaveStateDescriptor*\29 can change the state due to initial scan
[asyncify] SaveStateDescriptor*\20Common::copy<SaveStateDescriptor\20const*\2c\20SaveStateDescriptor*>\28SaveStateDescriptor\20const*\2c\20SaveStateDescriptor\20const*\2c\20SaveStateDescriptor*\29 can change the state due to initial scan
[asyncify] SaveStateDescriptor::initSaveType\28MetaEngine\20const*\29 can change the state due to initial scan
[asyncify] SaveStateDescriptor::setThumbnail\28Graphics::Surface*\29 can change the state due to initial scan
[asyncify] GUI::AboutDialog::reflowLayout\28\29 can change the state due to initial scan
[asyncify] void\20SWAP<SaveStateDescriptor>\28SaveStateDescriptor&\2c\20SaveStateDescriptor&\29 can change the state due to initial scan
[asyncify] GUI::AboutDialog::open\28\29 can change the state due to initial scan
[asyncify] GUI::AboutDialog::AboutDialog\28\29 can change the state due to initial scan
[asyncify] MetaEngine::readSavegameHeader\28Common::SeekableReadStream*\2c\20ExtendedSavegameHeader*\2c\20bool\29 can change the state due to initial scan
[asyncify] GUI::AboutDialog::handleMouseUp\28int\2c\20int\2c\20int\2c\20int\29 can change the state due to initial scan
[asyncify] GUI::AboutDialog::handleKeyDown\28Common::KeyState\29 can change the state due to initial scan
[asyncify] GUI::AboutDialog::handleTickle\28\29 can change the state due to initial scan
[asyncify] GUI::AboutDialog::drawDialog\28GUI::DrawLayer\29 can change the state due to initial scan
[asyncify] GUI::AboutDialog::handleKeyUp\28Common::KeyState\29[asyncify] GUI::EE::run\28\29 can change the state due to initial scan
[asyncify] GUI::EE::EE\28\29 can change the state due to initial scan
[asyncify] GUI::EE::cls\28bool\29 can change the state due to initial scan
[asyncify] GUI::EE::doMenu\28Common::Event&\29 can change the state due to initial scan
[asyncify] GUI::EE::setupGraphics\28\29 can change the state due to initial scan
[asyncify] GUI::EE::draw\28int\2c\20int\2c\20int\29 can change the state due to initial scan
[asyncify] Common::FSNode::operator=\28Common::FSNode\20const&\29 can change the state due to initial scan
[asyncify] GUI::BrowserDialog::open\28\29 can change the state due to initial scan
[asyncify] GUI::EE::putshapes\28\29 can change the state due to initial scan
[asyncify] GUI::BrowserDialog::BrowserDialog\28Common::U32String\20const&\2c\20bool\29 can change the state due to initial scan
[asyncify] GUI::BrowserDialog::handleCommand\28GUI::CommandSender*\2c\20unsigned\20int\2c\20unsigned\20int\29 can change the state due to initial scan
[asyncify] [asyncify] GUI::Dialog::receivedFocus\28int\2c\20int\29[asyncify] void\20SWAP<Common::FSNode>\28Common::FSNode&\2c\20Common::FSNode&\29 can change the state due to initial scan
[asyncify] GUI::ChooserDialog::handleCommand\28GUI::CommandSender*\2c\20unsigned\20int\2c\20unsigned\20int\29 can change the state due to initial scan
[asyncify] GUI::ConsoleDialog::init\28\29 can change the state due to initial scan
[asyncify] GUI::ConsoleDialog::saveHistory\28\29 can change the state due to initial scan
[asyncify] GUI::ConsoleDialog::drawCaret\28bool\29[asyncify] GUI::ConsoleDialog::drawLine\28int\29 can change the state due to initial scan
[asyncify] GUI::ConsoleDialog::loadHistory\28\29 can change the state due to initial scan
[asyncify] GUI::ConsoleDialog::handleMouseWheel\28int\2c\20int\2c\20int\29 can change the state due to initial scan
[asyncify] GUI::ConsoleDialog::handleTickle\28\29 can change the state due to initial scan
[asyncify] GUI::ConsoleDialog::open\28\29 can change the state due to initial scan
[asyncify] GUI::ConsoleDialog::specialKeys\28Common::KeyCode\29 can change the state due to initial scan
[asyncify] GUI::BrowserDialog::~BrowserDialog\28\29 can change the state due to initial scan
[asyncify] GUI::Debugger::cmdExit\28int\2c\20char\20const**\29 can change the state due to initial scan
[asyncify] GUI::ConsoleDialog::handleKeyDown\28Common::KeyState\29 can change the state due to initial scan
[asyncify] GUI::Debugger::registerCmd\28Common::String\20const&\2c\20Common::Functor2<int\2c\20char\20const**\2c\20bool>*\29 can change the state due to initial scan
[asyncify] GUI::Debugger::cmdOpenLog\28int\2c\20char\20const**\29 can change the state due to initial scan
[asyncify] GUI::Debugger::cmdMd5\28int\2c\20char\20const**\29 can change the state due to initial scan
[asyncify] GUI::Debugger::cmdMd5Mac\28int\2c\20char\20const**\29 can change the state due to initial scan
[asyncify] GUI::Debugger::parseCommand\28char\20const*\29 can change the state due to initial scan
[asyncify] GUI::Debugger::~Debugger\28\29 can change the state due to initial scan
[asyncify] Common::HashMap<Common::String\2c\20Common::SharedPtr<Common::Functor2<int\2c\20char\20const**\2c\20bool>>\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>::~HashMap\28\29 can change the state due to initial scan
[asyncify] GUI::Debugger::attach\28char\20const*\29 can change the state due to initial scan
[asyncify] GUI::Debugger::detach\28\29 can change the state due to initial scan
[asyncify] GUI::Debugger::enter\28\29 can change the state due to initial scan
[asyncify] GUI::Debugger::onFrame\28\29 can change the state due to initial scan
[asyncify] GUI::Debugger::handleCommand\28int\2c\20char\20const**\2c\20bool&\29 can change the state due to initial scan
[asyncify] Common::Functor2Mem<int\2c\20char\20const**\2c\20bool\2c\20GUI::Debugger>::operator\28\29\28int\2c\20char\20const**\29\20const can change the state due to initial scan
[asyncify] Common::BasePtrTrackerImpl<Common::Functor2<int\2c\20char\20const**\2c\20bool>>::destructObject\28\29 can change the state due to initial scan
[asyncify] void\20SWAP<Common::SharedPtr<Common::ArchiveMember>>\28Common::SharedPtr<Common::ArchiveMember>&\2c\20Common::SharedPtr<Common::ArchiveMember>&\29 can change the state due to initial scan
[asyncify] GUI::Dialog::runModal\28\29 can change the state due to initial scan
[asyncify] GUI::ArchiveMemberLess::operator\28\29\28Common::SharedPtr<Common::ArchiveMember>\20const&\2c\20Common::SharedPtr<Common::ArchiveMember>\20const&\29\20const can change the state due to initial scan
[asyncify] [asyncify] GUI::Dialog::close\28\29[asyncify] [asyncify] GUI::ConsoleDialog::slideUpAndClose\28\29 can change the state due to initial scan
[asyncify] GUI::Dialog::releaseFocus\28\29 can change the state due to initial scan
[asyncify] GUI::Dialog::setFocusWidget\28GUI::Widget*\29 can change the state due to initial scan
[asyncify] GUI::Dialog::markWidgetsAsDirty\28\29 can change the state due to initial scan
[asyncify] GUI::Dialog::drawWidgets\28\29 can change the state due to initial scan
[asyncify] GUI::Dialog::handleMouseDown\28int\2c\20int\2c\20int\2c\20int\29[asyncify] GUI::Dialog::reflowLayout\28\29 can change the state due to initial scan
[asyncify] GUI::Dialog::open\28\29 can change the state due to initial scan
[asyncify] GUI::Dialog::handleMouseWheel\28int\2c\20int\2c\20int\29 can change the state due to initial scan
[asyncify] GUI::Dialog::handleKeyUp\28Common::KeyState\29 can change the state due to initial scan
[asyncify] GUI::Dialog::handleKeyDown\28Common::KeyState\29 can change the state due to initial scan
[asyncify] GUI::Dialog::handleMouseUp\28int\2c\20int\2c\20int\2c\20int\29 can change the state due to initial scan
[asyncify] GUI::Dialog::handleTickle\28\29 can change the state due to initial scan
[asyncify] GUI::Dialog::handleCommand\28GUI::CommandSender*\2c\20unsigned\20int\2c\20unsigned\20int\29 can change the state due to initial scan
[asyncify] GUI::Dialog::removeWidget\28GUI::Widget*\29 can change the state due to initial scan
[asyncify] GUI::Dialog::handleMouseMoved\28int\2c\20int\2c\20int\29 can change the state due to initial scan
[asyncify] GUI::EditGameDialog::apply\28\29 can change the state due to initial scan
[asyncify] GUI::EditGameDialog::open\28\29 can change the state due to initial scan
[asyncify] GUI::EditGameDialog::handleCommand\28GUI::CommandSender*\2c\20unsigned\20int\2c\20unsigned\20int\29 can change the state due to initial scan
[asyncify] GUI::Widget::handleCommand\28GUI::CommandSender*\2c\20unsigned\20int\2c\20unsigned\20int\29 can change the state due to initial scan
[asyncify] GUI::EditGameDialog::EditGameDialog\28Common::String\20const&\29 can change the state due to initial scan
[asyncify] GUI::CommandSender::sendCommand\28unsigned\20int\2c\20unsigned\20int\29 can change the state due to initial scan
[asyncify] GUI::FileBrowserDialog::updateListing\28\29 can change the state due to initial scan
[asyncify] GUI::FileBrowserDialog::normalieFileName\28\29 can change the state due to initial scan
[asyncify] GUI::FileBrowserDialog::handleCommand\28GUI::CommandSender*\2c\20unsigned\20int\2c\20unsigned\20int\29 can change the state due to initial scan
[asyncify] GUI::FileBrowserDialog::isProceedSave\28\29 can change the state due to initial scan
[asyncify] GUI::GuiManager::GuiManager\28\29 can change the state due to initial scan
[asyncify] GUI::GuiManager::computeScaleFactor\28\29 can change the state due to initial scan
[asyncify] GUI::GuiManager::loadNewTheme\28Common::String\2c\20GUI::ThemeEngine::GraphicsMode\2c\20bool\29 can change the state due to initial scan
[asyncify] GUI::GuiManager::initIconsSet\28\29 can change the state due to initial scan
[asyncify] GUI::GuiManager::initTextToSpeech\28\29 can change the state due to initial scan
[asyncify] GUI::GuiManager::~GuiManager\28\29 can change the state due to initial scan
[asyncify] GUI::GuiManager::initKeymap\28\29 can change the state due to initial scan
[asyncify] GUI::GuiManager::enableKeymap\28bool\29 can change the state due to initial scan
[asyncify] [asyncify] GUI::Dialog::drawDialog\28GUI::DrawLayer\29 can change the state due to initial scan
[asyncify] GUI::GuiManager::redrawFull\28\29 can change the state due to initial scan
[asyncify] GUI::GuiManager::saveState\28\29 can change the state due to initial scan
[asyncify] GUI::GuiManager::animateCursor\28\29 can change the state due to initial scan
[asyncify] GUI::GuiManager::screenChange\28\29 can change the state due to initial scan
[asyncify] GUI::GuiManager::restoreState\28\29 can change the state due to initial scan
[asyncify] GUI::GuiManager::checkScreenChange\28\29 can change the state due to initial scan
[asyncify] GUI::GuiManager::exitLoop\28\29 can change the state due to initial scan
[asyncify] GUI::GuiManager::processEvent\28Common::Event\20const&\2c\20GUI::Dialog*\29 can change the state due to initial scan
[asyncify] GUI::GuiManager::openDialog\28GUI::Dialog*\29 can change the state due to initial scan
[asyncify] GUI::GuiManager::giveFocusToDialog\28GUI::Dialog*\29 can change the state due to initial scan
[asyncify] GUI::GuiManager::setLastMousePos\28short\2c\20short\29 can change the state due to initial scan
[asyncify] GUI::GuiManager::closeTopDialog\28\29 can change the state due to initial scan
[asyncify] GUI::ArchiveMemberListBackComparator::operator\28\29\28Common::SharedPtr<Common::ArchiveMember>\20const&\2c\20Common::SharedPtr<Common::ArchiveMember>\20const&\29 can change the state due to initial scan
[asyncify] GUI::LauncherDialog::addLayoutChooserButtons\28\29 can change the state due to initial scan
[asyncify] GUI::GuiManager::runLoop\28\29 can change the state due to initial scan
[asyncify] GUI::LauncherDialog::clean\28\29 can change the state due to initial scan
[asyncify] GUI::LauncherDialog::run\28\29 can change the state due to initial scan
[asyncify] GUI::LauncherDialog::rebuild\28\29 can change the state due to initial scan
[asyncify] GUI::LauncherDialog::open\28\29 can change the state due to initial scan
[asyncify] GUI::LauncherDialog::close\28\29 can change the state due to initial scan
[asyncify] GUI::LauncherDialog::addGame\28\29 can change the state due to initial scan
[asyncify] GUI::GuiManager::displayTopDialogOnly\28bool\29 can change the state due to initial scan
[asyncify] GUI::LauncherDialog::massAddGame\28\29 can change the state due to initial scan
[asyncify] GUI::LauncherDialog::build\28\29 can change the state due to initial scan
[asyncify] GUI::LauncherDialog::doGameDetection\28Common::String\20const&\29 can change the state due to initial scan
[asyncify] GUI::LauncherDialog::editGame\28int\29 can change the state due to initial scan
[asyncify] GUI::LauncherDialog::handleKeyUp\28Common::KeyState\29 can change the state due to initial scan
[asyncify] GUI::LauncherDialog::handleOtherEvent\28Common::Event\20const&\29 can change the state due to initial scan
[asyncify] GUI::LauncherDialog::LauncherDialog\28Common::String\20const&\2c\20GUI::LauncherChooser*\29[asyncify] GUI::LauncherDialog::checkModifier\28int\29 can change the state due to initial scan
[asyncify] GUI::LauncherDialog::removeGame\28int\29 can change the state due to initial scan
[asyncify] GUI::LauncherChooser::~LauncherChooser\28\29 can change the state due to initial scan
[asyncify] GUI::LauncherDialog::loadGame\28int\29[asyncify] GUI::LauncherChooser::genGameList\28\29[asyncify]  can change the state due to initial scan
[asyncify] GUI::LauncherChooser::runModal\28\29 can change the state due to initial scan
[asyncify] GUI::LauncherDialog::handleCommand\28GUI::CommandSender*\2c\20unsigned\20int\2c\20unsigned\20int\29 can change the state due to initial scan
[asyncify] GUI::LauncherSimple::build\28\29 can change the state due to initial scan
[asyncify] GUI::LauncherDialog::reflowLayout\28\29 can change the state due to initial scan
[asyncify] GUI::LauncherSimple::handleKeyDown\28Common::KeyState\29 can change the state due to initial scan
[asyncify] GUI::LauncherSimple::updateButtons\28\29 can change the state due to initial scan
[asyncify] GUI::LauncherSimple::handleCommand\28GUI::CommandSender*\2c\20unsigned\20int\2c\20unsigned\20int\29 can change the state due to initial scan
[asyncify] GUI::LauncherGrid::build\28\29 can change the state due to initial scan
[asyncify] GUI::LauncherGrid::handleKeyDown\28Common::KeyState\29 can change the state due to initial scan
[asyncify] GUI::LauncherGrid::handleCommand\28GUI::CommandSender*\2c\20unsigned\20int\2c\20unsigned\20int\29 can change the state due to initial scan
[asyncify] GUI::LauncherSimple::updateListing\28\29 can change the state due to initial scan
[asyncify] GUI::LauncherGrid::updateButtons\28\29 can change the state due to initial scan
[asyncify] GUI::LauncherDialog::~LauncherDialog\28\29.1 can change the state due to initial scan
[asyncify] GUI::LauncherGrid::updateListing\28\29 can change the state due to initial scan
[asyncify] GUI::MassAddDialog::handleCommand\28GUI::CommandSender*\2c\20unsigned\20int\2c\20unsigned\20int\29 can change the state due to initial scan
[asyncify] GUI::MassAddDialog::~MassAddDialog\28\29.1 can change the state due to initial scan
[asyncify] GUI::MassAddDialog::~MassAddDialog\28\29 can change the state due to initial scan
[asyncify] GUI::MessageDialog::handleCommand\28GUI::CommandSender*\2c\20unsigned\20int\2c\20unsigned\20int\29 can change the state due to initial scan
[asyncify] GUI::TimedMessageDialog::TimedMessageDialog\28Common::U32String\20const&\2c\20unsigned\20int\29 can change the state due to initial scan
[asyncify] GUI::MassAddDialog::handleTickle\28\29 can change the state due to initial scan
[asyncify] GUI::TimedMessageDialog::handleTickle\28\29 can change the state due to initial scan
[asyncify] GUI::CountdownMessageDialog::CountdownMessageDialog\28Common::U32String\20const&\2c\20unsigned\20int\2c\20Common::U32String\20const&\2c\20Common::U32String\20const&\2c\20Graphics::TextAlign\2c\20Common::U32String\20const&\29 can change the state due to initial scan
[asyncify] GUI::CountdownMessageDialog::updateCountdown\28\29 can change the state due to initial scan
[asyncify] GUI::CountdownMessageDialog::handleTickle\28\29 can change the state due to initial scan
[asyncify] GUI::MetadataParser::keyCallback\28Common::XMLParser::ParserNode*\29 can change the state due to initial scan
[asyncify] GUI::MetadataParser::CustomXMLKeyLayout::doCallback\28Common::XMLParser*\2c\20Common::XMLParser::ParserNode*\29 can change the state due to initial scan
[asyncify] GUI::MessageDialog::init\28Common::U32String\20const&\2c\20Common::U32String\20const&\2c\20Common::Array<Common::U32String>\20const&\2c\20Graphics::TextAlign\2c\20char\20const*\2c\20Common::U32String\20const&\29 can change the state due to initial scan
[asyncify] GUI::GuiObject::~GuiObject\28\29 can change the state due to initial scan
[asyncify] GUI::GuiObject::getClipRect\28\29\20const can change the state due to initial scan
[asyncify] GUI::OptionsDialog::~OptionsDialog\28\29 can change the state due to initial scan
[asyncify] GUI::OptionsDialog::init\28\29 can change the state due to initial scan
[asyncify] GUI::OptionsDialog::clean\28\29 can change the state due to initial scan
[asyncify] GUI::OptionsDialog::rebuild\28\29 can change the state due to initial scan
[asyncify] GUI::OptionsDialog::open\28\29 can change the state due to initial scan
[asyncify] GUI::OptionsDialog::loadMusicDeviceSetting\28GUI::PopUpWidget*\2c\20Common::String\2c\20MusicType\29 can change the state due to initial scan
[asyncify] GUI::OptionsDialog::testGraphicsSettings\28\29 can change the state due to initial scan
[asyncify] GUI::OptionsDialog::saveMusicDeviceSetting\28GUI::PopUpWidget*\2c\20Common::String\29 can change the state due to initial scan
[asyncify] GUI::OptionsDialog::close\28\29 can change the state due to initial scan
[asyncify] GUI::OptionsDialog::updateSpeechVolume\28int\29\20const can change the state due to initial scan
[asyncify] GUI::OptionsDialog::updateMusicVolume\28int\29\20const can change the state due to initial scan
[asyncify] GUI::OptionsDialog::build\28\29 can change the state due to initial scan
[asyncify] GUI::OptionsDialog::updateSfxVolume\28int\29\20const can change the state due to initial scan
[asyncify] GUI::OptionsDialog::handleTickle\28\29 can change the state due to initial scan
[asyncify] GUI::OptionsDialog::apply\28\29 can change the state due to initial scan
[asyncify] GUI::OptionsDialog::setGraphicSettingsState\28bool\29 can change the state due to initial scan
[asyncify] GUI::OptionsDialog::handleCommand\28GUI::CommandSender*\2c\20unsigned\20int\2c\20unsigned\20int\29 can change the state due to initial scan
[asyncify] GUI::OptionsDialog::addControlControls\28GUI::GuiObject*\2c\20Common::String\20const&\29 can change the state due to initial scan
[asyncify] GUI::OptionsDialog::addKeyMapperControls\28GUI::GuiObject*\2c\20Common::String\20const&\2c\20Common::Array<Common::Keymap*>\20const&\2c\20Common::String\20const&\29 can change the state due to initial scan
[asyncify] GUI::OptionsDialog::addAchievementsControls\28GUI::GuiObject*\2c\20Common::String\20const&\29 can change the state due to initial scan
[asyncify] GUI::OptionsDialog::addStatisticsControls\28GUI::GuiObject*\2c\20Common::String\20const&\29 can change the state due to initial scan
[asyncify] GUI::OptionsDialog::addAudioControls\28GUI::GuiObject*\2c\20Common::String\20const&\29 can change the state due to initial scan
[asyncify] GUI::OptionsDialog::addMIDIControls\28GUI::GuiObject*\2c\20Common::String\20const&\29 can change the state due to initial scan
[asyncify] GUI::OptionsDialog::addSubtitleControls\28GUI::GuiObject*\2c\20Common::String\20const&\2c\20int\29 can change the state due to initial scan
[asyncify] GUI::OptionsDialog::addMT32Controls\28GUI::GuiObject*\2c\20Common::String\20const&\29 can change the state due to initial scan
[asyncify] GUI::OptionsDialog::addVolumeControls\28GUI::GuiObject*\2c\20Common::String\20const&\29 can change the state due to initial scan
[asyncify] GUI::OptionsDialog::addGraphicControls\28GUI::GuiObject*\2c\20Common::String\20const&\29 can change the state due to initial scan
[asyncify] GUI::OptionsDialog::reflowLayout\28\29 can change the state due to initial scan
[asyncify] GUI::OptionsDialog::setupGraphicsTab\28\29 can change the state due to initial scan
[asyncify] GUI::GlobalOptionsDialog::~GlobalOptionsDialog\28\29 can change the state due to initial scan
[asyncify] GUI::OptionsDialog::updateScaleFactors\28unsigned\20int\29 can change the state due to initial scan
[asyncify] GUI::GlobalOptionsDialog::build\28\29 can change the state due to initial scan
[asyncify] GUI::GlobalOptionsDialog::updateAutosavePeriod\28int\29 can change the state due to initial scan
[asyncify] GUI::GlobalOptionsDialog::addPathsControls\28GUI::GuiObject*\2c\20Common::String\20const&\2c\20bool\29 can change the state due to initial scan
[asyncify] GUI::GlobalOptionsDialog::addMiscControls\28GUI::GuiObject*\2c\20Common::String\20const&\2c\20bool\29 can change the state due to initial scan
[asyncify] Common::Array<GUI::ExistingSave>::freeStorage\28GUI::ExistingSave*\2c\20unsigned\20int\29 can change the state due to initial scan
[asyncify] GUI::GlobalOptionsDialog::close\28\29 can change the state due to initial scan
[asyncify] GUI::GlobalOptionsDialog::handleTickle\28\29 can change the state due to initial scan
[asyncify] GUI::GlobalOptionsDialog::apply\28\29 can change the state due to initial scan
[asyncify] GUI::GlobalOptionsDialog::reflowLayout\28\29 can change the state due to initial scan
[asyncify] GUI::GlobalOptionsDialog::handleCommand\28GUI::CommandSender*\2c\20unsigned\20int\2c\20unsigned\20int\29 can change the state due to initial scan
[asyncify] GUI::ExistingSave::operator=\28GUI::ExistingSave\20const&\29 can change the state due to initial scan
[asyncify] GUI::PredictiveDialog::loadAllDictionary\28GUI::PredictiveDialog::Dict&\29 can change the state due to initial scan
[asyncify] GUI::PredictiveDialog::loadDictionary\28Common::SeekableReadStream*\2c\20GUI::PredictiveDialog::Dict&\29 can change the state due to initial scan
[asyncify] GUI::PredictiveDialog::saveUserDictToFile\28\29 can change the state due to initial scan
[asyncify] GUI::PredictiveDialog::reflowLayout\28\29 can change the state due to initial scan
[asyncify] GUI::PredictiveDialog::handleCommand\28GUI::CommandSender*\2c\20unsigned\20int\2c\20unsigned\20int\29 can change the state due to initial scan
[asyncify] GUI::PredictiveDialog::handleKeyDown\28Common::KeyState\29 can change the state due to initial scan
[asyncify] GUI::PredictiveDialog::pressEditText\28\29 can change the state due to initial scan
[asyncify] GUI::SaveLoadChooser::~SaveLoadChooser\28\29 can change the state due to initial scan
[asyncify] GUI::SaveLoadChooser::createDefaultSaveDescription\28int\29\20const can change the state due to initial scan
[asyncify] GUI::SaveLoadChooser::selectChooser\28MetaEngine\20const*\29 can change the state due to initial scan
[asyncify] GUI::PredictiveDialog::processButton\28GUI::PredictiveDialog::ButtonId\29 can change the state due to initial scan
[asyncify] GUI::SaveLoadChooser::getResultString\28\29\20const can change the state due to initial scan
[asyncify] GUI::getRequestedSaveLoadDialog\28MetaEngine\20const*\29 can change the state due to initial scan
[asyncify] GUI::SaveLoadChooserDialog::addChooserButtons\28\29 can change the state due to initial scan
[asyncify] GUI::SaveLoadChooserDialog::run\28Common::String\20const&\2c\20MetaEngine\20const*\29 can change the state due to initial scan
[asyncify] GUI::SaveLoadChooserDialog::reflowLayout\28\29 can change the state due to initial scan
[asyncify] GUI::SaveLoadChooserDialog::handleCommand\28GUI::CommandSender*\2c\20unsigned\20int\2c\20unsigned\20int\29 can change the state due to initial scan
[asyncify] GUI::SaveLoadChooserDialog::updateSaveList\28\29 can change the state due to initial scan
[asyncify] GUI::SaveLoadChooserDialog::activate\28int\2c\20Common::U32String\20const&\29 can change the state due to initial scan
[asyncify] GUI::SaveLoadChooserSimple::runIntern\28\29 can change the state due to initial scan
[asyncify] GUI::SaveLoadChooserSimple::addThumbnailContainer\28\29 can change the state due to initial scan
[asyncify] GUI::SaveLoadChooserSimple::handleCommand\28GUI::CommandSender*\2c\20unsigned\20int\2c\20unsigned\20int\29 can change the state due to initial scan
[asyncify] GUI::SaveLoadChooserSimple::updateSelection\28bool\29 can change the state due to initial scan
[asyncify] GUI::SaveLoadChooserSimple::reflowLayout\28\29 can change the state due to initial scan
[asyncify] GUI::SaveLoadChooserSimple::updateSaveList\28\29 can change the state due to initial scan
[asyncify] GUI::SaveLoadChooserGrid::handleCommand\28GUI::CommandSender*\2c\20unsigned\20int\2c\20unsigned\20int\29 can change the state due to initial scan
[asyncify] GUI::SaveLoadChooserGrid::~SaveLoadChooserGrid\28\29 can change the state due to initial scan
[asyncify] GUI::SaveLoadChooserGrid::updateSaveList\28\29 can change the state due to initial scan
[asyncify] GUI::SaveLoadChooserGrid::destroyButtons\28\29 can change the state due to initial scan
[asyncify] GUI::SaveLoadChooserGrid::updateSaves\28\29 can change the state due to initial scan
[asyncify] [asyncify] GUI::SaveLoadChooserGrid::open\28\29[asyncify] GUI::SaveLoadChooserGrid::selectDescription\28\29 can change the state due to initial scan
[asyncify] GUI::SavenameDialog::setDescription\28Common::U32String\20const&\29 can change the state due to initial scan
[asyncify] GUI::SavenameDialog::getDescription\28\29 can change the state due to initial scan
[asyncify] GUI::SavenameDialog::handleCommand\28GUI::CommandSender*\2c\20unsigned\20int\2c\20unsigned\20int\29 can change the state due to initial scan
[asyncify] GUI::ThemeBrowser::handleCommand\28GUI::CommandSender*\2c\20unsigned\20int\2c\20unsigned\20int\29 can change the state due to initial scan
[asyncify] GUI::SaveLoadChooserGrid::reflowLayout\28\29 can change the state due to initial scan
[asyncify] GUI::ThemeEngine::getThemeFile\28Common::String\20const&\29 can change the state due to initial scan
[asyncify] GUI::ThemeEngine::getThemeId\28Common::String\20const&\29 can change the state due to initial scan
[asyncify] GUI::ThemeEngine::listUsableThemes\28Common::List<GUI::ThemeEngine::ThemeDescriptor>&\29 can change the state due to initial scan
[asyncify] GUI::ThemeEngine::~ThemeEngine\28\29 can change the state due to initial scan
[asyncify] GUI::ThemeEngine::setGraphicsMode\28GUI::ThemeEngine::GraphicsMode\29 can change the state due to initial scan
[asyncify] Graphics::VectorRenderer::drawCallback_BEVELSQ\28Common::Rect\20const&\2c\20Graphics::DrawStep\20const&\29 can change the state due to initial scan
[asyncify] [asyncify] GUI::ThemeEngine::enable\28\29 can change the state due to initial scan
[asyncify] [asyncify] GUI::ThemeEngine::refresh\28\29 can change the state due to initial scan
[asyncify] GUI::ThemeEngine::disable\28\29 can change the state due to initial scan
[asyncify] GUI::ThemeEngine::restoreBackground\28Common::Rect\29 can change the state due to initial scan
[asyncify] GUI::ThemeEngine::addFont\28GUI::TextData\2c\20Common::String\20const&\2c\20Common::String\20const&\2c\20Common::String\20const&\2c\20int\29 can change the state due to initial scan
[asyncify] GUI::ThemeEngine::loadThemeXML\28Common::String\20const&\29 can change the state due to initial scan
[asyncify] GUI::ThemeEngine::loadFont\28Common::String\20const&\2c\20Common::String&\29 can change the state due to initial scan
[asyncify] GUI::ThemeEngine::addBitmap\28Common::String\20const&\2c\20Common::String\20const&\2c\20int\2c\20int\29 can change the state due to initial scan
[asyncify] GUI::ThemeEngine::drawDDText\28GUI::TextData\2c\20GUI::TextColor\2c\20Common::Rect\20const&\2c\20Common::U32String\20const&\2c\20bool\2c\20bool\2c\20Graphics::TextAlign\2c\20GUI::ThemeEngine::TextAlignVertical\2c\20int\2c\20Common::Rect\20const&\29 can change the state due to initial scan
[asyncify] GUI::ThemeEngine::drawDD\28GUI::DrawData\2c\20Common::Rect\20const&\2c\20unsigned\20int\2c\20bool\29 can change the state due to initial scan
[asyncify] GUI::ThemeEngine::getFontHeight\28GUI::ThemeEngine::FontStyle\29\20const can change the state due to initial scan
[asyncify] GUI::ThemeEngine::drawCheckbox\28Common::Rect\20const&\2c\20int\2c\20Common::U32String\20const&\2c\20bool\2c\20GUI::ThemeEngine::State\2c\20bool\2c\20bool\29 can change the state due to initial scan
[asyncify] GUI::ThemeEngine::drawRadiobutton\28Common::Rect\20const&\2c\20int\2c\20Common::U32String\20const&\2c\20bool\2c\20GUI::ThemeEngine::State\2c\20bool\29 can change the state due to initial scan
[asyncify] GUI::ThemeEngine::drawSurface\28Common::Point\20const&\2c\20Graphics::ManagedSurface\20const&\2c\20bool\29 can change the state due to initial scan
[asyncify] GUI::ThemeEngine::drawCaret\28Common::Rect\20const&\2c\20bool\29 can change the state due to initial scan
[asyncify] GUI::ThemeEngine::drawFoldIndicator\28Common::Rect\20const&\2c\20bool\29 can change the state due to initial scan
[asyncify] GUI::ThemeEngine::drawChar\28Common::Rect\20const&\2c\20unsigned\20char\2c\20Graphics::Font\20const*\2c\20GUI::ThemeEngine::FontColor\29 can change the state due to initial scan
[asyncify] GUI::ThemeEngine::debugWidgetPosition\28char\20const*\2c\20Common::Rect\20const&\29 can change the state due to initial scan
[asyncify] GUI::ThemeEngine::applyScreenShading\28GUI::ThemeEngine::ShadingStyle\29 can change the state due to initial scan
[asyncify] GUI::ThemeEngine::updateScreen\28\29 can change the state due to initial scan
[asyncify] GUI::ThemeEngine::updateDirtyScreen\28\29 can change the state due to initial scan
[asyncify] GUI::ThemeEngine::getKerningOffset\28unsigned\20int\2c\20unsigned\20int\2c\20GUI::ThemeEngine::FontStyle\29\20const can change the state due to initial scan
[asyncify] GUI::ThemeEngine::getCharWidth\28unsigned\20int\2c\20GUI::ThemeEngine::FontStyle\29\20const can change the state due to initial scan
[asyncify] GUI::ThemeEngine::themeConfigUsable\28Common::ArchiveMember\20const&\2c\20Common::String&\29 can change the state due to initial scan
[asyncify] GUI::ThemeEngine::themeConfigUsable\28Common::FSNode\20const&\2c\20Common::String&\29 can change the state due to initial scan
[asyncify] GUI::ThemeEngine::drawToBackbuffer\28\29 can change the state due to initial scan
[asyncify] GUI::ThemeEngine::drawToScreen\28\29 can change the state due to initial scan
[asyncify] GUI::ThemeEngine::listUsableThemes\28Common::Archive&\2c\20Common::List<GUI::ThemeEngine::ThemeDescriptor>&\29 can change the state due to initial scan
[asyncify] GUI::ThemeEngine::listUsableThemes\28Common::FSNode\20const&\2c\20Common::List<GUI::ThemeEngine::ThemeDescriptor>&\2c\20int\29 can change the state due to initial scan
[asyncify] GUI::ThemeEval::reset\28\29 can change the state due to initial scan
[asyncify] GUI::ThemeEval::getWidgetData\28Common::String\20const&\2c\20short&\2c\20short&\2c\20short&\2c\20short&\2c\20bool&\29 can change the state due to initial scan
[asyncify] GUI::ThemeEval::getWidgetTextHAlign\28Common::String\20const&\29 can change the state due to initial scan
[asyncify] GUI::ThemeEval::addDialog\28Common::String\20const&\2c\20Common::String\20const&\2c\20short\2c\20short\2c\20int\29 can change the state due to initial scan
[asyncify] GUI::ThemeEval::addSpace\28int\29 can change the state due to initial scan
[asyncify] GUI::ThemeEval::reflowDialogLayout\28Common::String\20const&\2c\20GUI::Widget*\29 can change the state due to initial scan
[asyncify] GUI::ThemeLayoutWidget::~ThemeLayoutWidget\28\29 can change the state due to initial scan
[asyncify] GUI::ThemeLayoutTabWidget::~ThemeLayoutTabWidget\28\29 can change the state due to initial scan
[asyncify] GUI::ThemeLayoutTabWidget::reflowLayout\28GUI::Widget*\29 can change the state due to initial scan
[asyncify] GUI::ThemeLayout::~ThemeLayout\28\29 can change the state due to initial scan
[asyncify] GUI::ThemeLayoutStacked::~ThemeLayoutStacked\28\29 can change the state due to initial scan
[asyncify] GUI::ThemeLayoutSpacing::~ThemeLayoutSpacing\28\29 can change the state due to initial scan
[asyncify] GUI::ThemeLayoutStacked::makeClone\28GUI::ThemeLayout*\29 can change the state due to initial scan
[asyncify] GUI::ThemeLayout::resetLayout\28\29 can change the state due to initial scan
[asyncify] GUI::ThemeLayout::importLayout\28GUI::ThemeLayout*\29 can change the state due to initial scan
[asyncify] GUI::ThemeLayout::getWidgetTextHAlign\28Common::String\20const&\29 can change the state due to initial scan
[asyncify] GUI::ThemeLayoutStacked::getParentHeight\28\29 can change the state due to initial scan
[asyncify] GUI::ThemeLayout::getWidgetData\28Common::String\20const&\2c\20short&\2c\20short&\2c\20short&\2c\20short&\2c\20bool&\29 can change the state due to initial scan
[asyncify] GUI::ThemeLayoutWidget::getWidget\28GUI::Widget*\29\20const can change the state due to initial scan
[asyncify] GUI::ThemeLayoutStacked::reflowLayoutVertical\28GUI::Widget*\29 can change the state due to initial scan
[asyncify] GUI::ThemeLayoutStacked::getParentWidth\28\29 can change the state due to initial scan
[asyncify] GUI::ThemeLayoutMain::~ThemeLayoutMain\28\29 can change the state due to initial scan
[asyncify] GUI::ThemeLayoutStacked::reflowLayoutHorizontal\28GUI::Widget*\29 can change the state due to initial scan
[asyncify] GUI::ThemeLayoutMain::~ThemeLayoutMain\28\29.1 can change the state due to initial scan
[asyncify] GUI::ThemeLayoutMain::resetLayout\28\29 can change the state due to initial scan
[asyncify] GUI::ThemeLayoutWidget::~ThemeLayoutWidget\28\29.1 can change the state due to initial scan
[asyncify] GUI::ThemeLayoutMain::reflowLayout\28GUI::Widget*\29 can change the state due to initial scan
[asyncify] GUI::ThemeLayoutWidget::isBound\28GUI::Widget*\29\20const can change the state due to initial scan
[asyncify] Graphics::VectorRenderer::drawCallback_CIRCLE\28Common::Rect\20const&\2c\20Graphics::DrawStep\20const&\29 can change the state due to initial scan
[asyncify] Graphics::VectorRenderer::drawCallback_SQUARE\28Common::Rect\20const&\2c\20Graphics::DrawStep\20const&\29 can change the state due to initial scan
[asyncify] Graphics::VectorRenderer::drawCallback_ROUNDSQ\28Common::Rect\20const&\2c\20Graphics::DrawStep\20const&\29 can change the state due to initial scan
[asyncify] Graphics::VectorRenderer::drawCallback_LINE\28Common::Rect\20const&\2c\20Graphics::DrawStep\20const&\29 can change the state due to initial scan
[asyncify] Graphics::VectorRenderer::drawCallback_FILLSURFACE\28Common::Rect\20const&\2c\20Graphics::DrawStep\20const&\29 can change the state due to initial scan
[asyncify] Graphics::VectorRenderer::drawCallback_TRIANGLE\28Common::Rect\20const&\2c\20Graphics::DrawStep\20const&\29 can change the state due to initial scan
[asyncify] Graphics::VectorRenderer::drawCallback_TAB\28Common::Rect\20const&\2c\20Graphics::DrawStep\20const&\29 can change the state due to initial scan
[asyncify] Graphics::VectorRenderer::drawCallback_BITMAP\28Common::Rect\20const&\2c\20Graphics::DrawStep\20const&\29 can change the state due to initial scan
[asyncify] Graphics::VectorRenderer::drawCallback_CROSS\28Common::Rect\20const&\2c\20Graphics::DrawStep\20const&\29 can change the state due to initial scan
[asyncify] GUI::ThemeParser::keyCallback\28Common::XMLParser::ParserNode*\29 can change the state due to initial scan
[asyncify] GUI::ThemeParser::CustomXMLKeyLayout::doCallback\28Common::XMLParser*\2c\20Common::XMLParser::ParserNode*\29 can change the state due to initial scan
[asyncify] GUI::Tooltip::setup\28GUI::Dialog*\2c\20GUI::Widget*\2c\20int\2c\20int\29 can change the state due to initial scan
[asyncify] GUI::Tooltip::handleMouseDown\28int\2c\20int\2c\20int\2c\20int\29 can change the state due to initial scan
[asyncify] GUI::Tooltip::handleMouseUp\28int\2c\20int\2c\20int\2c\20int\29 can change the state due to initial scan
[asyncify] GUI::Tooltip::handleMouseWheel\28int\2c\20int\2c\20int\29 can change the state due to initial scan
[asyncify] GUI::Tooltip::handleKeyDown\28Common::KeyState\29 can change the state due to initial scan
[asyncify] GUI::Tooltip::handleKeyUp\28Common::KeyState\29 can change the state due to initial scan
[asyncify] GUI::Tooltip::handleMouseMoved\28int\2c\20int\2c\20int\29 can change the state due to initial scan
[asyncify] GUI::UnknownGameDialog::UnknownGameDialog\28DetectedGame\20const&\29 can change the state due to initial scan
[asyncify] GUI::UnknownGameDialog::rebuild\28\29 can change the state due to initial scan
[asyncify] GUI::UnknownGameDialog::handleMouseWheel\28int\2c\20int\2c\20int\29 can change the state due to initial scan
[asyncify] GUI::UnknownGameDialog::handleCommand\28GUI::CommandSender*\2c\20unsigned\20int\2c\20unsigned\20int\29 can change the state due to initial scan
[asyncify] GUI::Widget::Widget\28GUI::GuiObject*\2c\20int\2c\20int\2c\20int\2c\20int\2c\20Common::U32String\20const&\29 can change the state due to initial scan
[asyncify] GUI::Widget::init\28\29 can change the state due to initial scan
[asyncify] GUI::Widget::Widget\28GUI::GuiObject*\2c\20Common::String\20const&\2c\20Common::U32String\20const&\29 can change the state due to initial scan
[asyncify] GUI::Widget::~Widget\28\29 can change the state due to initial scan
[asyncify] GUI::Widget::markAsDirty\28\29 can change the state due to initial scan
[asyncify] GUI::Widget::findWidgetInChain\28GUI::Widget*\2c\20int\2c\20int\29 can change the state due to initial scan
[asyncify] GUI::Widget::containsWidgetInChain\28GUI::Widget*\2c\20GUI::Widget*\29 can change the state due to initial scan
[asyncify] GUI::Widget::draw\28\29 can change the state due to initial scan
[asyncify] GUI::Widget::read\28Common::U32String\20const&\29 can change the state due to initial scan
[asyncify] GUI::StaticTextWidget::StaticTextWidget\28GUI::GuiObject*\2c\20int\2c\20int\2c\20int\2c\20int\2c\20Common::U32String\20const&\2c\20Graphics::TextAlign\2c\20Common::U32String\20const&\2c\20GUI::ThemeEngine::FontStyle\2c\20Common::Language\2c\20bool\29 can change the state due to initial scan
[asyncify] GUI::StaticTextWidget::StaticTextWidget\28GUI::GuiObject*\2c\20Common::String\20const&\2c\20Common::U32String\20const&\2c\20Common::U32String\20const&\2c\20GUI::ThemeEngine::FontStyle\2c\20Common::Language\2c\20bool\29 can change the state due to initial scan
[asyncify] GUI::StaticTextWidget::setLabel\28Common::U32String\20const&\29 can change the state due to initial scan
[asyncify] GUI::StaticTextWidget::setAlign\28Graphics::TextAlign\29 can change the state due to initial scan
[asyncify] GUI::ButtonWidget::getMinSize\28int&\2c\20int&\29 can change the state due to initial scan
[asyncify] GUI::ButtonWidget::handleMouseUp\28int\2c\20int\2c\20int\2c\20int\29 can change the state due to initial scan
[asyncify] GUI::ButtonWidget::setUnpressedState\28\29 can change the state due to initial scan
[asyncify] GUI::ButtonWidget::handleMouseDown\28int\2c\20int\2c\20int\2c\20int\29 can change the state due to initial scan
[asyncify] GUI::ButtonWidget::setPressedState\28\29 can change the state due to initial scan
[asyncify] GUI::ButtonWidget::getLabel\28\29 can change the state due to initial scan
[asyncify] GUI::ButtonWidget::drawWidget\28\29 can change the state due to initial scan
[asyncify] GUI::ButtonWidget::setLabel\28Common::U32String\20const&\29 can change the state due to initial scan
[asyncify] GUI::PicButtonWidget::setGfx\28Graphics::ManagedSurface\20const*\2c\20int\2c\20bool\29 can change the state due to initial scan
[asyncify] GUI::ButtonWidget::setHighLighted\28bool\29 can change the state due to initial scan
[asyncify] GUI::DropdownButtonWidget::handleMouseMoved\28int\2c\20int\2c\20int\29 can change the state due to initial scan
[asyncify] GUI::DropdownButtonWidget::getMinSize\28int&\2c\20int&\29 can change the state due to initial scan
[asyncify] GUI::DropdownButtonWidget::handleMouseUp\28int\2c\20int\2c\20int\2c\20int\29 can change the state due to initial scan
[asyncify] GUI::DropdownButtonWidget::drawWidget\28\29 can change the state due to initial scan
[asyncify] GUI::PicButtonWidget::~PicButtonWidget\28\29 can change the state due to initial scan
[asyncify] GUI::PicButtonWidget::setGfx\28Graphics::Surface\20const*\2c\20int\2c\20bool\29 can change the state due to initial scan
[asyncify] GUI::PicButtonWidget::setGfx\28int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\29 can change the state due to initial scan
[asyncify] GUI::CheckboxWidget::setState\28bool\29 can change the state due to initial scan
[asyncify] GUI::CheckboxWidget::handleMouseUp\28int\2c\20int\2c\20int\2c\20int\29 can change the state due to initial scan
[asyncify] GUI::CheckboxWidget::drawWidget\28\29 can change the state due to initial scan
[asyncify] GUI::RadiobuttonGroup::setValue\28int\29 can change the state due to initial scan
[asyncify] GUI::RadiobuttonWidget::setState\28bool\2c\20bool\29 can change the state due to initial scan
[asyncify] GUI::RadiobuttonWidget::handleMouseUp\28int\2c\20int\2c\20int\2c\20int\29 can change the state due to initial scan
[asyncify] GUI::RadiobuttonWidget::drawWidget\28\29 can change the state due to initial scan
[asyncify] GUI::SliderWidget::SliderWidget\28GUI::GuiObject*\2c\20int\2c\20int\2c\20int\2c\20int\2c\20Common::U32String\20const&\2c\20unsigned\20int\29 can change the state due to initial scan
[asyncify] GUI::SliderWidget::SliderWidget\28GUI::GuiObject*\2c\20Common::String\20const&\2c\20Common::U32String\20const&\2c\20unsigned\20int\29 can change the state due to initial scan
[asyncify] GUI::SliderWidget::handleMouseDown\28int\2c\20int\2c\20int\2c\20int\29 can change the state due to initial scan
[asyncify] GUI::SliderWidget::handleMouseUp\28int\2c\20int\2c\20int\2c\20int\29 can change the state due to initial scan
[asyncify] GUI::SliderWidget::handleMouseWheel\28int\2c\20int\2c\20int\29 can change the state due to initial scan
[asyncify] GUI::SliderWidget::handleMouseMoved\28int\2c\20int\2c\20int\29 can change the state due to initial scan
[asyncify] GUI::GraphicsWidget::GraphicsWidget\28GUI::GuiObject*\2c\20int\2c\20int\2c\20int\2c\20int\2c\20Common::U32String\20const&\29 can change the state due to initial scan
[asyncify] GUI::GraphicsWidget::GraphicsWidget\28GUI::GuiObject*\2c\20Common::String\20const&\2c\20Common::U32String\20const&\29 can change the state due to initial scan
[asyncify] GUI::GraphicsWidget::~GraphicsWidget\28\29 can change the state due to initial scan
[asyncify] GUI::GraphicsWidget::setGfx\28Graphics::Surface\20const*\2c\20bool\29 can change the state due to initial scan
[asyncify] GUI::GraphicsWidget::setGfx\28Graphics::ManagedSurface\20const*\2c\20bool\29 can change the state due to initial scan
[asyncify] GUI::GraphicsWidget::setGfx\28int\2c\20int\2c\20int\2c\20int\2c\20int\29 can change the state due to initial scan
[asyncify] GUI::ContainerWidget::ContainerWidget\28GUI::GuiObject*\2c\20int\2c\20int\2c\20int\2c\20int\29 can change the state due to initial scan
[asyncify] GUI::ContainerWidget::ContainerWidget\28GUI::GuiObject*\2c\20Common::String\20const&\29 can change the state due to initial scan
[asyncify] GUI::ContainerWidget::~ContainerWidget\28\29 can change the state due to initial scan
[asyncify] GUI::ContainerWidget::containsWidget\28GUI::Widget*\29\20const can change the state due to initial scan
[asyncify] GUI::ContainerWidget::findWidget\28int\2c\20int\29 can change the state due to initial scan
[asyncify] GUI::ContainerWidget::removeWidget\28GUI::Widget*\29 can change the state due to initial scan
[asyncify] GUI::OptionsContainerWidget::OptionsContainerWidget\28GUI::GuiObject*\2c\20Common::String\20const&\2c\20Common::String\20const&\2c\20bool\2c\20Common::String\20const&\29 can change the state due to initial scan
[asyncify] GUI::OptionsContainerWidget::~OptionsContainerWidget\28\29 can change the state due to initial scan
[asyncify] GUI::OptionsContainerWidget::reflowLayout\28\29 can change the state due to initial scan
[asyncify] GUI::OptionsContainerWidget::containsWidget\28GUI::Widget*\29\20const can change the state due to initial scan
[asyncify] GUI::OptionsContainerWidget::removeWidget\28GUI::Widget*\29 can change the state due to initial scan
[asyncify] GUI::StaticTextWidget::~StaticTextWidget\28\29 can change the state due to initial scan
[asyncify] GUI::OptionsContainerWidget::findWidget\28int\2c\20int\29 can change the state due to initial scan
[asyncify] GUI::StaticTextWidget::~StaticTextWidget\28\29.1 can change the state due to initial scan
[asyncify] GUI::ButtonWidget::~ButtonWidget\28\29 can change the state due to initial scan
[asyncify] GUI::ButtonWidget::handleMouseEntered\28int\29 can change the state due to initial scan
[asyncify] GUI::ButtonWidget::handleMouseLeft\28int\29 can change the state due to initial scan
[asyncify] non-virtual\20thunk\20to\20GUI::ButtonWidget::~ButtonWidget\28\29.1 can change the state due to initial scan
[asyncify] GUI::DropdownButtonWidget::~DropdownButtonWidget\28\29 can change the state due to initial scan
[asyncify] non-virtual\20thunk\20to\20GUI::ButtonWidget::~ButtonWidget\28\29 can change the state due to initial scan
[asyncify] non-virtual\20thunk\20to\20GUI::DropdownButtonWidget::~DropdownButtonWidget\28\29 can change the state due to initial scan
[asyncify] [asyncify] GUI::ButtonWidget::~ButtonWidget\28\29.1 can change the state due to initial scan
[asyncify] GUI::CheckboxWidget::handleMouseEntered\28int\29 can change the state due to initial scan
[asyncify] GUI::CheckboxWidget::handleMouseLeft\28int\29 can change the state due to initial scan
[asyncify] non-virtual\20thunk\20to\20GUI::CheckboxWidget::~CheckboxWidget\28\29 can change the state due to initial scan
[asyncify] GUI::CheckboxWidget::~CheckboxWidget\28\29 can change the state due to initial scan
[asyncify] non-virtual\20thunk\20to\20GUI::CheckboxWidget::~CheckboxWidget\28\29.1 can change the state due to initial scan
[asyncify] GUI::RadiobuttonWidget::~RadiobuttonWidget\28\29 can change the state due to initial scan
[asyncify] GUI::RadiobuttonWidget::handleMouseEntered\28int\29 can change the state due to initial scan
[asyncify] GUI::RadiobuttonWidget::handleMouseLeft\28int\29 can change the state due to initial scan
[asyncify] non-virtual\20thunk\20to\20GUI::RadiobuttonWidget::~RadiobuttonWidget\28\29 can change the state due to initial scan
[asyncify] GUI::SliderWidget::~SliderWidget\28\29.1 can change the state due to initial scan
[asyncify] [asyncify] GUI::SliderWidget::~SliderWidget\28\29GUI::SliderWidget::handleMouseEntered\28int\29 can change the state due to initial scan
[asyncify] non-virtual\20thunk\20to\20GUI::SliderWidget::~SliderWidget\28\29 can change the state due to initial scan
[asyncify] non-virtual\20thunk\20to\20GUI::SliderWidget::~SliderWidget\28\29.1 can change the state due to initial scan
[asyncify] GUI::Animation::~Animation\28\29 can change the state due to initial scan
[asyncify] GUI::Animation::update\28GUI::Drawable*\2c\20long\29 can change the state due to initial scan
[asyncify] GUI::Animation::setInterpolator\28Common::SharedPtr<GUI::Interpolator>\29[asyncify] GUI::RepeatAnimationWrapper::update\28GUI::Drawable*\2c\20long\29 can change the state due to initial scan
[asyncify] GUI::RepeatAnimationWrapper::start\28long\29 can change the state due to initial scan
[asyncify] GUI::RepeatAnimationWrapper::~RepeatAnimationWrapper\28\29.1 can change the state due to initial scan
[asyncify] [asyncify] GUI::RepeatAnimationWrapper::~RepeatAnimationWrapper\28\29 can change the state due to initial scan
[asyncify] non-virtual\20thunk\20to\20GUI::RadiobuttonWidget::~RadiobuttonWidget\28\29.1 can change the state due to initial scan
[asyncify] GUI::ThemeEngine::loadScalableFont\28Common::String\20const&\2c\20int\2c\20Common::String&\29 can change the state due to initial scan
[asyncify] GUI::SequenceAnimationComposite::update\28GUI::Drawable*\2c\20long\29 can change the state due to initial scan
[asyncify] [asyncify] GUI::SequenceAnimationComposite::~SequenceAnimationComposite\28\29 can change the state due to initial scan
[asyncify] GUI::SequenceAnimationComposite::~SequenceAnimationComposite\28\29.1 can change the state due to initial scan
[asyncify] GUI::EditableWidget::reflowLayout\28\29 can change the state due to initial scan
[asyncify] GUI::EditableWidget::setEditString\28Common::U32String\20const&\29 can change the state due to initial scan
[asyncify] GUI::EditableWidget::adjustOffset\28\29 can change the state due to initial scan
[asyncify] GUI::EditableWidget::tryInsertChar\28char32_t\2c\20int\29 can change the state due to initial scan
[asyncify] GUI::EditableWidget::handleTickle\28\29 can change the state due to initial scan
[asyncify] GUI::EditableWidget::defaultKeyDownHandler\28Common::KeyState&\2c\20bool&\2c\20bool&\2c\20bool&\29 can change the state due to initial scan
[asyncify] GUI::EditableWidget::makeCaretVisible\28\29 can change the state due to initial scan
[asyncify] GUI::EditTextWidget::EditTextWidget\28GUI::GuiObject*\2c\20int\2c\20int\2c\20int\2c\20int\2c\20Common::U32String\20const&\2c\20Common::U32String\20const&\2c\20unsigned\20int\2c\20unsigned\20int\2c\20GUI::ThemeEngine::FontStyle\29 can change the state due to initial scan
[asyncify] GUI::EditableWidget::handleKeyDown\28Common::KeyState\29 can change the state due to initial scan
[asyncify] GUI::EditTextWidget::EditTextWidget\28GUI::GuiObject*\2c\20Common::String\20const&\2c\20Common::U32String\20const&\2c\20Common::U32String\20const&\2c\20unsigned\20int\2c\20unsigned\20int\2c\20GUI::ThemeEngine::FontStyle\29 can change the state due to initial scan
[asyncify] GUI::EditableWidget::drawCaret\28bool\29 can change the state due to initial scan
[asyncify] GUI::EditTextWidget::handleMouseDown\28int\2c\20int\2c\20int\2c\20int\29 can change the state due to initial scan
[asyncify] GUI::EditTextWidget::drawWidget\28\29 can change the state due to initial scan
[asyncify] GUI::EditTextWidget::receivedFocusWidget\28\29 can change the state due to initial scan
[asyncify] GUI::EditTextWidget::lostFocusWidget\28\29 can change the state due to initial scan
[asyncify] GUI::EditTextWidget::endEditMode\28\29 can change the state due to initial scan
[asyncify] Common::Array<Common::SharedPtr<GUI::Animation>>::insert_aux\28Common::SharedPtr<GUI::Animation>*\2c\20Common::SharedPtr<GUI::Animation>\20const*\2c\20Common::SharedPtr<GUI::Animation>\20const*\29 can change the state due to initial scan
[asyncify] GUI::GridItemWidget::update\28\29 can change the state due to initial scan
[asyncify] GUI::GridItemWidget::move\28int\2c\20int\29 can change the state due to initial scan
[asyncify] GUI::GridItemWidget::handleMouseWheel\28int\2c\20int\2c\20int\29 can change the state due to initial scan
[asyncify] GUI::GridItemWidget::handleMouseEntered\28int\29 can change the state due to initial scan
[asyncify] GUI::GridItemWidget::handleMouseLeft\28int\29 can change the state due to initial scan
[asyncify] GUI::GridItemWidget::handleMouseMoved\28int\2c\20int\2c\20int\29 can change the state due to initial scan
[asyncify] GUI::GridWidget::toggleGroup\28int\29 can change the state due to initial scan
[asyncify] GUI::SliderWidget::handleMouseLeft\28int\29 can change the state due to initial scan
[asyncify] GUI::GridWidget::sortGroups\28\29 can change the state due to initial scan
[asyncify] GUI::GridWidget::reloadThumbnails\28\29 can change the state due to initial scan
[asyncify] GUI::GridItemWidget::handleMouseDown\28int\2c\20int\2c\20int\2c\20int\29 can change the state due to initial scan
[asyncify] GUI::GridWidget::assignEntriesToItems\28\29 can change the state due to initial scan
[asyncify] GUI::GridItemTray::handleCommand\28GUI::CommandSender*\2c\20unsigned\20int\2c\20unsigned\20int\29 can change the state due to initial scan
[asyncify] GUI::GridItemTray::handleMouseDown\28int\2c\20int\2c\20int\2c\20int\29 can change the state due to initial scan
[asyncify] GUI::GridItemTray::handleMouseWheel\28int\2c\20int\2c\20int\29 can change the state due to initial scan
[asyncify] GUI::GridItemTray::handleMouseMoved\28int\2c\20int\2c\20int\29 can change the state due to initial scan
[asyncify] GUI::loadSurfaceFromFile\28Common::String\20const&\2c\20int\2c\20int\29 can change the state due to initial scan
[asyncify] void\20GUI::GridWidget::unloadSurfaces<int>\28Common::HashMap<int\2c\20Graphics::ManagedSurface\20const*\2c\20Common::Hash<int>\2c\20Common::EqualTo<int>>&\29 can change the state due to initial scan
[asyncify] void\20GUI::GridWidget::unloadSurfaces<Common::String>\28Common::HashMap<Common::String\2c\20Graphics::ManagedSurface\20const*\2c\20Common::Hash<Common::String>\2c\20Common::EqualTo<Common::String>>&\29 can change the state due to initial scan
[asyncify] GUI::GridWidget::setEntryList\28Common::Array<GUI::GridItemInfo>*\29 can change the state due to initial scan
[asyncify] GUI::GridWidget::loadPlatformIcons\28\29 can change the state due to initial scan
[asyncify] GUI::GridWidget::destroyItems\28\29 can change the state due to initial scan
[asyncify] GUI::GridWidget::handleMouseWheel\28int\2c\20int\2c\20int\29 can change the state due to initial scan
[asyncify] GUI::GridWidget::scrollToEntry\28int\2c\20bool\29 can change the state due to initial scan
[asyncify] [asyncify] GUI::GridWidget::openTrayAtSelected\28\29 can change the state due to initial scan
[asyncify] GUI::GridWidget::openTray\28int\2c\20int\2c\20int\29 can change the state due to initial scan
[asyncify] GUI::GridWidget::reflowLayout\28\29 can change the state due to initial scan
[asyncify] GUI::GridWidget::setSelected\28int\29 can change the state due to initial scan
[asyncify] GUI::EditTextWidget::abortEditMode\28\29 can change the state due to initial scan
[asyncify] GUI::GroupedListWidget::sortGroups\28\29 can change the state due to initial scan
[asyncify] GUI::GroupedListWidget::handleMouseDown\28int\2c\20int\2c\20int\2c\20int\29 can change the state due to initial scan
[asyncify] GUI::GroupedListWidget::setSelected\28int\29 can change the state due to initial scan
[asyncify] GUI::GroupedListWidget::handleMouseUp\28int\2c\20int\2c\20int\2c\20int\29 can change the state due to initial scan
[asyncify] GUI::GroupedListWidget::handleMouseWheel\28int\2c\20int\2c\20int\29 can change the state due to initial scan
[asyncify] GUI::GroupedListWidget::handleCommand\28GUI::CommandSender*\2c\20unsigned\20int\2c\20unsigned\20int\29 can change the state due to initial scan
[asyncify] GUI::GroupedListWidget::setFilter\28Common::U32String\20const&\2c\20bool\29 can change the state due to initial scan
[asyncify] GUI::GroupedListWidget::drawWidget\28\29 can change the state due to initial scan
[asyncify] GUI::ListWidget::containsWidget\28GUI::Widget*\29\20const can change the state due to initial scan
[asyncify] GUI::ListWidget::setSelected\28int\29 can change the state due to initial scan
[asyncify] GUI::ListWidget::setList\28Common::Array<Common::U32String>\20const&\29 can change the state due to initial scan
[asyncify] GUI::ListWidget::handleTickle\28\29 can change the state due to initial scan
[asyncify] GUI::ListWidget::handleMouseDown\28int\2c\20int\2c\20int\2c\20int\29 can change the state due to initial scan
[asyncify] GUI::ListWidget::handleMouseWheel\28int\2c\20int\2c\20int\29 can change the state due to initial scan
[asyncify] GUI::ListWidget::setFilter\28Common::U32String\20const&\2c\20bool\29 can change the state due to initial scan
[asyncify] GUI::ListWidget::handleMouseUp\28int\2c\20int\2c\20int\2c\20int\29 can change the state due to initial scan
[asyncify] GUI::ListWidget::receivedFocusWidget\28\29 can change the state due to initial scan
[asyncify] GUI::ListWidget::lostFocusWidget\28\29 can change the state due to initial scan
[asyncify] GUI::GridWidget::move\28int\2c\20int\29 can change the state due to initial scan
[asyncify] GUI::ListWidget::handleKeyDown\28Common::KeyState\29 can change the state due to initial scan
[asyncify] GUI::ListWidget::getEditRect\28\29\20const can change the state due to initial scan
[asyncify] GUI::ListWidget::scrollToEnd\28\29 can change the state due to initial scan
[asyncify] GUI::ListWidget::endEditMode\28\29 can change the state due to initial scan
[asyncify] GUI::ListWidget::startEditMode\28\29 can change the state due to initial scan
[asyncify] GUI::ListWidget::abortEditMode\28\29 can change the state due to initial scan
[asyncify] GUI::ListWidget::drawWidget\28\29 can change the state due to initial scan
[asyncify] GUI::ListWidget::reflowLayout\28\29 can change the state due to initial scan
[asyncify] GUI::PopUpDialog::PopUpDialog\28GUI::Widget*\2c\20Common::String\20const&\2c\20int\2c\20int\29 can change the state due to initial scan
[asyncify] GUI::PopUpDialog::open\28\29 can change the state due to initial scan
[asyncify] GUI::PopUpDialog::drawDialog\28GUI::DrawLayer\29 can change the state due to initial scan
[asyncify] GUI::PopUpDialog::handleMouseUp\28int\2c\20int\2c\20int\2c\20int\29 can change the state due to initial scan
[asyncify] GUI::PopUpDialog::read\28Common::U32String\20const&\29 can change the state due to initial scan
[asyncify] GUI::PopUpDialog::handleKeyDown\28Common::KeyState\29 can change the state due to initial scan
[asyncify] GUI::PopUpWidget::handleMouseDown\28int\2c\20int\2c\20int\2c\20int\29 can change the state due to initial scan
[asyncify] GUI::PopUpWidget::handleMouseWheel\28int\2c\20int\2c\20int\29 can change the state due to initial scan
[asyncify] GUI::PopUpDialog::drawMenuEntry\28int\2c\20bool\29 can change the state due to initial scan
[asyncify] GUI::PopUpWidget::handleMouseEntered\28int\29 can change the state due to initial scan
[asyncify] GUI::ListWidget::handleCommand\28GUI::CommandSender*\2c\20unsigned\20int\2c\20unsigned\20int\29 can change the state due to initial scan
[asyncify] GUI::ScrollBarWidget::handleMouseDown\28int\2c\20int\2c\20int\2c\20int\29 can change the state due to initial scan
[asyncify] GUI::ScrollBarWidget::checkBounds\28int\29 can change the state due to initial scan
[asyncify] GUI::ScrollBarWidget::handleTickle\28\29 can change the state due to initial scan
[asyncify] GUI::ScrollBarWidget::handleMouseLeft\28int\29 can change the state due to initial scan
[asyncify] GUI::ScrollBarWidget::handleMouseMoved\28int\2c\20int\2c\20int\29 can change the state due to initial scan
[asyncify] GUI::ScrollContainerWidget::handleMouseWheel\28int\2c\20int\2c\20int\29 can change the state due to initial scan
[asyncify] GUI::ScrollContainerWidget::recalc\28\29 can change the state due to initial scan
[asyncify] [asyncify] [asyncify] GUI::PopUpWidget::handleMouseLeft\28int\29GUI::ScrollContainerWidget::getChildY\28\29\20const can change the state due to initial scan
[asyncify] GUI::ScrollContainerWidget::getWidth\28\29\20const can change the state due to initial scan
[asyncify] GUI::ScrollContainerWidget::findWidget\28int\2c\20int\29 can change the state due to initial scan
[asyncify] GUI::ScrollContainerWidget::getClipRect\28\29\20const can change the state due to initial scan
[asyncify] GUI::ScrollContainerWidget::getChildX\28\29\20const can change the state due to initial scan
[asyncify] GUI::ScrollContainerWidget::reflowLayout\28\29 can change the state due to initial scan
[asyncify] GUI::TabWidget::getChildY\28\29\20const can change the state due to initial scan
[asyncify] GUI::TabWidget::~TabWidget\28\29 can change the state due to initial scan
[asyncify] GUI::TabWidget::setActiveTab\28int\29 can change the state due to initial scan
[asyncify] GUI::TabWidget::addChild\28GUI::Widget*\29 can change the state due to initial scan
[asyncify] GUI::TabWidget::removeWidget\28GUI::Widget*\29 can change the state due to initial scan
[asyncify] GUI::TabWidget::removeTab\28int\29 can change the state due to initial scan
[asyncify] GUI::TabWidget::handleKeyDown\28Common::KeyState\29 can change the state due to initial scan
[asyncify] GUI::TabWidget::handleCommand\28GUI::CommandSender*\2c\20unsigned\20int\2c\20unsigned\20int\29 can change the state due to initial scan
[asyncify] GUI::TabWidget::handleMouseWheel\28int\2c\20int\2c\20int\29 can change the state due to initial scan
[asyncify] GUI::TabWidget::setFirstVisible\28int\2c\20bool\29 can change the state due to initial scan
[asyncify] GUI::TabWidget::draw\28\29 can change the state due to initial scan
[asyncify] GUI::TabWidget::markAsDirty\28\29 can change the state due to initial scan
[asyncify] GUI::TabWidget::reflowLayout\28\29 can change the state due to initial scan
[asyncify] GUI::TabWidget::containsWidget\28GUI::Widget*\29\20const can change the state due to initial scan
[asyncify] GUI::ScrollContainerWidget::handleCommand\28GUI::CommandSender*\2c\20unsigned\20int\2c\20unsigned\20int\29 can change the state due to initial scan
[asyncify] BaseBackend::fillScreen\28unsigned\20int\29 can change the state due to initial scan
[asyncify] BaseBackend::setScaler\28char\20const*\2c\20int\29 can change the state due to initial scan
[asyncify] ModularGraphicsBackend::hasFeature\28OSystem::Feature\29 can change the state due to initial scan
[asyncify] virtual\20thunk\20to\20ModularGraphicsBackend::hasFeature\28OSystem::Feature\29[asyncify] [asyncify] ModularGraphicsBackend::~ModularGraphicsBackend\28\29virtual\20thunk\20to\20ModularGraphicsBackend::setFeatureState\28OSystem::Feature\2c\20bool\29[asyncify] [asyncify] ModularGraphicsBackend::getFeatureState\28OSystem::Feature\29virtual\20thunk\20to\20ModularGraphicsBackend::getFeatureState\28OSystem::Feature\29 can change the state due to initial scan
[asyncify] ModularGraphicsBackend::getSupportedGraphicsModes\28\29\20const can change the state due to initial scan
[asyncify] virtual\20thunk\20to\20ModularGraphicsBackend::getSupportedGraphicsModes\28\29\20const can change the state due to initial scan
[asyncify] ModularGraphicsBackend::getDefaultGraphicsMode\28\29\20const can change the state due to initial scan
[asyncify] [asyncify] virtual\20thunk\20to\20ModularGraphicsBackend::getDefaultGraphicsMode\28\29\20const can change the state due to initial scan
[asyncify] ModularGraphicsBackend::getGraphicsMode\28\29\20const can change the state due to initial scan
[asyncify] virtual\20thunk\20to\20ModularGraphicsBackend::setGraphicsMode\28int\2c\20unsigned\20int\29 can change the state due to initial scan
[asyncify] virtual\20thunk\20to\20ModularGraphicsBackend::getGraphicsMode\28\29\20const can change the state due to initial scan
[asyncify] ModularGraphicsBackend::setShader\28Common::String\20const&\29 can change the state due to initial scan
[asyncify] ModularGraphicsBackend::getSupportedStretchModes\28\29\20const can change the state due to initial scan
[asyncify] virtual\20thunk\20to\20ModularGraphicsBackend::setShader\28Common::String\20const&\29 can change the state due to initial scan
[asyncify] virtual\20thunk\20to\20ModularGraphicsBackend::getSupportedStretchModes\28\29\20const can change the state due to initial scan
[asyncify] [asyncify] virtual\20thunk\20to\20ModularGraphicsBackend::getDefaultStretchMode\28\29\20const[asyncify] ModularGraphicsBackend::setStretchMode\28int\29 can change the state due to initial scan
[asyncify] virtual\20thunk\20to\20ModularGraphicsBackend::setStretchMode\28int\29 can change the state due to initial scan
[asyncify] ModularGraphicsBackend::getDefaultScaler\28\29\20const can change the state due to initial scan
[asyncify] [asyncify] [asyncify] virtual\20thunk\20to\20ModularGraphicsBackend::getDefaultScaler\28\29\20const can change the state due to initial scan
[asyncify] ModularGraphicsBackend::getScaler\28\29\20const can change the state due to initial scan
[asyncify] virtual\20thunk\20to\20ModularGraphicsBackend::setScaler\28unsigned\20int\2c\20int\29 can change the state due to initial scan
[asyncify] [asyncify] ModularGraphicsBackend::getScaleFactor\28\29\20const can change the state due to initial scan
[asyncify] virtual\20thunk\20to\20ModularGraphicsBackend::getScaleFactor\28\29\20const can change the state due to initial scan
[asyncify] ModularGraphicsBackend::getScreenFormat\28\29\20constModularGraphicsBackend::getDefaultStretchMode\28\29\20const can change the state due to initial scan
[asyncify] virtual\20thunk\20to\20ModularGraphicsBackend::getScreenFormat\28\29\20const can change the state due to initial scan
[asyncify] ModularGraphicsBackend::getSupportedFormats\28\29\20const[asyncify]  can change the state due to initial scan
[asyncify] virtual\20thunk\20to\20ModularGraphicsBackend::getSupportedFormats\28\29\20const can change the state due to initial scan
[asyncify] ModularGraphicsBackend::initSize\28unsigned\20int\2c\20unsigned\20int\2c\20Graphics::PixelFormat\20const*\29 can change the state due to initial scan
[asyncify] ModularGraphicsBackend::initSizeHint\28Common::Array<Graphics::Mode>\20const&\29 can change the state due to initial scan
[asyncify] virtual\20thunk\20to\20ModularGraphicsBackend::initSize\28unsigned\20int\2c\20unsigned\20int\2c\20Graphics::PixelFormat\20const*\29 can change the state due to initial scan
[asyncify] virtual\20thunk\20to\20ModularGraphicsBackend::initSizeHint\28Common::Array<Graphics::Mode>\20const&\29 can change the state due to initial scan
[asyncify] [asyncify] ModularGraphicsBackend::beginGFXTransaction\28\29virtual\20thunk\20to\20ModularGraphicsBackend::getScreenChangeID\28\29\20const can change the state due to initial scan
[asyncify] virtual\20thunk\20to\20ModularGraphicsBackend::endGFXTransaction\28\29 can change the state due to initial scan
[asyncify] ModularGraphicsBackend::getHeight\28\29 can change the state due to initial scan
[asyncify] virtual\20thunk\20to\20ModularGraphicsBackend::getHeight\28\29 can change the state due to initial scan
[asyncify] ModularGraphicsBackend::getWidth\28\29 can change the state due to initial scan
[asyncify] [asyncify] virtual\20thunk\20to\20ModularGraphicsBackend::getWidth\28\29 can change the state due to initial scan
[asyncify] [asyncify] [asyncify] virtual\20thunk\20to\20ModularGraphicsBackend::copyRectToScreen\28void\20const*\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\29 can change the state due to initial scan
[asyncify] virtual\20thunk\20to\20ModularGraphicsBackend::beginGFXTransaction\28\29[asyncify] virtual\20thunk\20to\20ModularGraphicsBackend::getStretchMode\28\29\20const can change the state due to initial scan
[asyncify] ModularGraphicsBackend::fillScreen\28unsigned\20int\29 can change the state due to initial scan
[asyncify] [asyncify] ModularGraphicsBackend::lockScreen\28\29virtual\20thunk\20to\20ModularGraphicsBackend::unlockScreen\28\29[asyncify] virtual\20thunk\20to\20ModularGraphicsBackend::fillScreen\28unsigned\20int\29 can change the state due to initial scan
[asyncify]  can change the state due to initial scan
[asyncify] virtual\20thunk\20to\20ModularGraphicsBackend::setShakePos\28int\2c\20int\29 can change the state due to initial scan
[asyncify] ModularGraphicsBackend::setFocusRectangle\28Common::Rect\20const&\29 can change the state due to initial scan
[asyncify] virtual\20thunk\20to\20ModularGraphicsBackend::setFocusRectangle\28Common::Rect\20const&\29 can change the state due to initial scan
[asyncify] ModularGraphicsBackend::clearFocusRectangle\28\29 can change the state due to initial scan
[asyncify] ModularGraphicsBackend::unlockScreen\28\29 can change the state due to initial scan
[asyncify] [asyncify] ModularGraphicsBackend::showOverlay\28bool\29 can change the state due to initial scan
[asyncify] virtual\20thunk\20to\20ModularGraphicsBackend::showOverlay\28bool\29 can change the state due to initial scan
[asyncify] ModularGraphicsBackend::hideOverlay\28\29 can change the state due to initial scan
[asyncify] virtual\20thunk\20to\20ModularGraphicsBackend::hideOverlay\28\29 can change the state due to initial scan
[asyncify] ModularGraphicsBackend::isOverlayVisible\28\29\20const[asyncify] virtual\20thunk\20to\20ModularGraphicsBackend::isOverlayVisible\28\29\20const can change the state due to initial scan
[asyncify] ModularGraphicsBackend::getOverlayFormat\28\29\20const can change the state due to initial scan
[asyncify] virtual\20thunk\20to\20ModularGraphicsBackend::getOverlayFormat\28\29\20const can change the state due to initial scan
[asyncify] ModularGraphicsBackend::clearOverlay\28\29 can change the state due to initial scan
[asyncify] ModularGraphicsBackend::grabOverlay\28Graphics::Surface&\29 can change the state due to initial scan
[asyncify] virtual\20thunk\20to\20ModularGraphicsBackend::grabOverlay\28Graphics::Surface&\29 can change the state due to initial scan
[asyncify] ModularGraphicsBackend::copyRectToOverlay\28void\20const*\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\29 can change the state due to initial scan
[asyncify] virtual\20thunk\20to\20ModularGraphicsBackend::copyRectToOverlay\28void\20const*\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\29 can change the state due to initial scan
[asyncify] ModularGraphicsBackend::getOverlayHeight\28\29 can change the state due to initial scan
[asyncify] virtual\20thunk\20to\20ModularGraphicsBackend::getScaler\28\29\20const can change the state due to initial scan
[asyncify] ModularGraphicsBackend::getOverlayWidth\28\29 can change the state due to initial scan
[asyncify] virtual\20thunk\20to\20ModularGraphicsBackend::getOverlayWidth\28\29 can change the state due to initial scan
[asyncify] ModularGraphicsBackend::getHiDPIScreenFactor\28\29\20const can change the state due to initial scan
[asyncify] virtual\20thunk\20to\20ModularGraphicsBackend::getHiDPIScreenFactor\28\29\20const can change the state due to initial scan
[asyncify] ModularGraphicsBackend::updateScreen\28\29 can change the state due to initial scan
[asyncify] ModularGraphicsBackend::showMouse\28bool\29 can change the state due to initial scan
[asyncify] virtual\20thunk\20to\20ModularGraphicsBackend::updateScreen\28\29 can change the state due to initial scan
[asyncify] virtual\20thunk\20to\20ModularGraphicsBackend::showMouse\28bool\29 can change the state due to initial scan
[asyncify] ModularGraphicsBackend::warpMouse\28int\2c\20int\29 can change the state due to initial scan
[asyncify] virtual\20thunk\20to\20ModularGraphicsBackend::lockMouse\28bool\29 can change the state due to initial scan
[asyncify] virtual\20thunk\20to\20ModularGraphicsBackend::warpMouse\28int\2c\20int\29 can change the state due to initial scan
[asyncify] ModularGraphicsBackend::setMouseCursor\28void\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20int\2c\20bool\2c\20Graphics::PixelFormat\20const*\29 can change the state due to initial scan
[asyncify] ModularGraphicsBackend::setCursorPalette\28unsigned\20char\20const*\2c\20unsigned\20int\2c\20unsigned\20int\29 can change the state due to initial scan
[asyncify] virtual\20thunk\20to\20ModularGraphicsBackend::setCursorPalette\28unsigned\20char\20const*\2c\20unsigned\20int\2c\20unsigned\20int\29 can change the state due to initial scan
[asyncify] virtual\20thunk\20to\20ModularGraphicsBackend::displayMessageOnOSD\28Common::U32String\20const&\29 can change the state due to initial scan
[asyncify] ModularGraphicsBackend::displayActivityIconOnOSD\28Graphics::Surface\20const*\29[asyncify] ModularGraphicsBackend::saveScreenshot\28\29 can change the state due to initial scan
[asyncify] virtual\20thunk\20to\20ModularGraphicsBackend::saveScreenshot\28\29 can change the state due to initial scan
[asyncify] ModularGraphicsBackend::displayMessageOnOSD\28Common::U32String\20const&\29 can change the state due to initial scan
[asyncify] ModularMixerBackend::~ModularMixerBackend\28\29 can change the state due to initial scan
[asyncify] ModularMixerBackend::getMixer\28\29 can change the state due to initial scan
[asyncify] virtual\20thunk\20to\20ModularMixerBackend::getMixer\28\29[asyncify]  can change the state due to initial scan
[asyncify] ModularGraphicsBackend::lockMouse\28bool\29 can change the state due to initial scan
[asyncify] AudioCDStream::stopTimer\28\29 can change the state due to initial scan
[asyncify] AudioCDStream::~AudioCDStream\28\29 can change the state due to initial scan
[asyncify] [asyncify] [asyncify] [asyncify] AudioCDStream::readBuffer\28short*\2c\20int\29 can change the state due to initial scan
[asyncify] AudioCDStream::onTimer\28\29 can change the state due to initial scan
[asyncify] virtual\20thunk\20to\20ModularGraphicsBackend::displayActivityIconOnOSD\28Graphics::Surface\20const*\29AudioCDStream::startTimer\28bool\29[asyncify] AudioCDStream::seek\28Audio::Timestamp\20const&\29 can change the state due to initial scan
[asyncify]  can change the state due to initial scan
[asyncify] DefaultAudioCDManager::DefaultAudioCDManager\28\29 can change the state due to initial scan
[asyncify] DefaultAudioCDManager::open\28\29 can change the state due to initial scan
[asyncify] [asyncify] DefaultAudioCDManager::close\28\29 can change the state due to initial scan
[asyncify] AudioCDStream::getLength\28\29\20const can change the state due to initial scan
[asyncify] Audio::AudioStream::endOfStream\28\29\20const can change the state due to initial scan
[asyncify] DefaultAudioCDManager::stop\28\29 can change the state due to initial scan
[asyncify] DefaultAudioCDManager::isPlaying\28\29\20const can change the state due to initial scan
[asyncify] DefaultAudioCDManager::setVolume\28unsigned\20char\29 can change the state due to initial scan
[asyncify] DefaultAudioCDManager::setBalance\28signed\20char\29 can change the state due to initial scan
[asyncify] DefaultAudioCDManager::update\28\29 can change the state due to initial scan
[asyncify] DefaultAudioCDManager::getStatus\28\29\20const can change the state due to initial scan
[asyncify] DefaultAudioCDManager::openRealCD\28\29 can change the state due to initial scan
[asyncify] DefaultEventManager::~DefaultEventManager\28\29 can change the state due to initial scan
[asyncify] DefaultAudioCDManager::play\28int\2c\20int\2c\20int\2c\20int\2c\20bool\2c\20Audio::Mixer::SoundType\29 can change the state due to initial scan
[asyncify] DefaultEventManager::pollEvent\28Common::Event&\29 can change the state due to initial scan
[asyncify] DefaultEventManager::getGlobalKeymap\28\29 can change the state due to initial scan
[asyncify] Common::CompositeHardwareInputSet::~CompositeHardwareInputSet\28\29 can change the state due to initial scan
[asyncify] Common::CompositeHardwareInputSet::findHardwareInput\28Common::String\20const&\29\20const can change the state due to initial scan
[asyncify] Common::CompositeHardwareInputSet::findHardwareInput\28Common::Event\20const&\29\20const can change the state due to initial scan
[asyncify] Common::Keymap::registerMappings\28Common::Action*\2c\20Common::Array<Common::String>\20const&\29 can change the state due to initial scan
[asyncify] Common::Keymap::areMappingsIdentical\28Common::Array<Common::HardwareInput>\20const&\2c\20Common::Array<Common::String>\20const&\29 can change the state due to initial scan
[asyncify] Common::Keymapper::clear\28\29 can change the state due to initial scan
[asyncify] Common::Keymap::saveMappings\28\29 can change the state due to initial scan
[asyncify] Common::Keymapper::registerHardwareInputSet\28Common::HardwareInputSet*\2c\20Common::KeymapperDefaultBindings*\29 can change the state due to initial scan
[asyncify] Common::Keymapper::hardcodedEventMapping\28Common::Event\29 can change the state due to initial scan
[asyncify] Common::DelayedEventSource::scheduleEvent\28Common::Event\20const&\2c\20unsigned\20int\29 can change the state due to initial scan
[asyncify] Common::Keymapper::findHardwareInput\28Common::Event\20const&\29 can change the state due to initial scan
[asyncify] Common::DelayedEventSource::pollEvent\28Common::Event&\29 can change the state due to initial scan
[asyncify] Common::Keymapper::executeAction\28Common::Action\20const*\2c\20Common::Event\20const&\29 can change the state due to initial scan
[asyncify] Common::RemapWidget::~RemapWidget\28\29 can change the state due to initial scan
[asyncify] Common::RemapWidget::RemapWidget\28GUI::GuiObject*\2c\20Common::String\20const&\2c\20Common::Array<Common::Keymap*>\20const&\29 can change the state due to initial scan
[asyncify] Common::RemapWidget::handleInputChanged\28\29 can change the state due to initial scan
[asyncify] Common::RemapWidget::handleCommand\28GUI::CommandSender*\2c\20unsigned\20int\2c\20unsigned\20int\29 can change the state due to initial scan
[asyncify] Common::RemapWidget::clearMapping\28unsigned\20int\29 can change the state due to initial scan
[asyncify] Common::RemapWidget::reflowActionWidgets\28\29[asyncify] Common::RemapWidget::resetMapping\28unsigned\20int\29 can change the state due to initial scan
[asyncify] Common::RemapWidget::resetKeymap\28unsigned\20int\29 can change the state due to initial scan
[asyncify] Common::RemapWidget::stopRemapping\28\29 can change the state due to initial scan
[asyncify] Common::RemapWidget::handleMouseDown\28int\2c\20int\2c\20int\2c\20int\29 can change the state due to initial scan
[asyncify] Common::RemapWidget::handleTickle\28\29 can change the state due to initial scan
[asyncify] Common::RemapWidget::startRemapping\28unsigned\20int\29 can change the state due to initial scan
[asyncify] Common::VirtualMouse::pollEvent\28Common::Event&\29 can change the state due to initial scan
[asyncify] Backends::Log::Log::open\28Common::WriteStream*\29 can change the state due to initial scan
[asyncify] Backends::Log::Log::close\28\29 can change the state due to initial scan
[asyncify] Backends::Log::Log::print\28char\20const*\2c\20bool\29 can change the state due to initial scan
[asyncify] Backends::Log::Log::printTimeStamp\28\29 can change the state due to initial scan
[asyncify] MidiDriver_BASE::send\28signed\20char\2c\20unsigned\20int\29 can change the state due to initial scan
[asyncify] MidiDriver_BASE::sysExNoDelay\28unsigned\20char\20const*\2c\20unsigned\20short\29 can change the state due to initial scan
[asyncify] MidiDriver_BASE::metaEvent\28signed\20char\2c\20unsigned\20char\2c\20unsigned\20char*\2c\20unsigned\20short\29 can change the state due to initial scan
[asyncify] Common::OutSaveFile::~OutSaveFile\28\29[asyncify]  can change the state due to initial scan
[asyncify] virtual\20thunk\20to\20Common::OutSaveFile::~OutSaveFile\28\29.1 can change the state due to initial scan
[asyncify] Common::OutSaveFile::err\28\29\20const can change the state due to initial scan
[asyncify] virtual\20thunk\20to\20Common::OutSaveFile::err\28\29\20const can change the state due to initial scan
[asyncify] Common::OutSaveFile::clearErr\28\29 can change the state due to initial scan
[asyncify] virtual\20thunk\20to\20Common::OutSaveFile::clearErr\28\29 can change the state due to initial scan
[asyncify] Common::OutSaveFile::finalize\28\29 can change the state due to initial scan
[asyncify] Common::OutSaveFile::flush\28\29 can change the state due to initial scan
[asyncify] Common::OutSaveFile::write\28void\20const*\2c\20unsigned\20int\29 can change the state due to initial scan
[asyncify] Common::OutSaveFile::pos\28\29\20const can change the state due to initial scan
[asyncify] Common::OutSaveFile::seek\28long\20long\2c\20int\29 can change the state due to initial scan
[asyncify] Common::OutSaveFile::size\28\29\20const can change the state due to initial scan
[asyncify] Common::SaveFileManager::renameSavefile\28Common::String\20const&\2c\20Common::String\20const&\2c\20bool\29 can change the state due to initial scan
[asyncify] Common::SaveFileManager::popErrorDesc\28\29 can change the state due to initial scan
[asyncify] Common::SaveFileManager::copySavefile\28Common::String\20const&\2c\20Common::String\20const&\2c\20bool\29 can change the state due to initial scan
[asyncify] Common::OutSaveFile::~OutSaveFile\28\29.1 can change the state due to initial scan
[asyncify] virtual\20thunk\20to\20Common::OutSaveFile::~OutSaveFile\28\29 can change the state due to initial scan
[asyncify] DefaultSaveFileManager::checkPath\28Common::FSNode\20const&\29 can change the state due to initial scan
[asyncify] DefaultSaveFileManager::listSavefiles\28Common::String\20const&\29 can change the state due to initial scan
[asyncify] DefaultSaveFileManager::assureCached\28Common::String\20const&\29 can change the state due to initial scan
[asyncify] Common::HashMap<Common::String\2c\20Common::FSNode\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>::clear\28bool\29 can change the state due to initial scan
[asyncify] DefaultSaveFileManager::openRawFile\28Common::String\20const&\29 can change the state due to initial scan
[asyncify] DefaultSaveFileManager::openForSaving\28Common::String\20const&\2c\20bool\29 can change the state due to initial scan
[asyncify] DefaultSaveFileManager::removeSavefile\28Common::String\20const&\29 can change the state due to initial scan
[asyncify] Common::HashMap<Common::String\2c\20Common::FSNode\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>::erase\28Common::HashMap<Common::String\2c\20Common::FSNode\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>::IteratorImpl<Common::HashMap<Common::String\2c\20Common::FSNode\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>::Node>\29 can change the state due to initial scan
[asyncify] DefaultSaveFileManager::exists\28Common::String\20const&\29 can change the state due to initial scan
[asyncify] DefaultSaveFileManager::concatWithSavesPath\28Common::String\29 can change the state due to initial scan
[asyncify] DefaultSaveFileManager::openForLoading\28Common::String\20const&\29 can change the state due to initial scan
[asyncify] DefaultTimerManager::checkTimers\28unsigned\20int\29[asyncify] DefaultTimerManager::handler\28\29 can change the state due to initial scan
[asyncify] DefaultTimerManager::installTimerProc\28void\20\28*\29\28void*\29\2c\20int\2c\20void*\2c\20Common::String\20const&\29 can change the state due to initial scan
[asyncify] OpenGL::Framebuffer::applyBlendState\28\29 can change the state due to initial scan
[asyncify] OpenGL::Framebuffer::applyClearColor\28\29 can change the state due to initial scan
[asyncify] [asyncify] OpenGL::Framebuffer::applyScissorTestState\28\29 can change the state due to initial scan
[asyncify] OpenGL::Framebuffer::applyScissorBox\28\29 can change the state due to initial scan
[asyncify] OpenGL::Framebuffer::enableScissorTest\28bool\29 can change the state due to initial scan
[asyncify] OpenGL::Framebuffer::setScissorBox\28int\2c\20int\2c\20int\2c\20int\29 can change the state due to initial scan
[asyncify] OpenGL::Framebuffer::deactivate\28\29 can change the state due to initial scan
[asyncify] OpenGL::Framebuffer::copyRenderStateFrom\28OpenGL::Framebuffer\20const&\2c\20unsigned\20int\29 can change the state due to initial scan
[asyncify] OpenGL::Backbuffer::activateInternal\28\29 can change the state due to initial scan
[asyncify] OpenGL::Backbuffer::setDimensions\28unsigned\20int\2c\20unsigned\20int\29 can change the state due to initial scan
[asyncify] [asyncify] OpenGL::TextureTarget::activateInternal\28\29 can change the state due to initial scan
[asyncify] [asyncify] OpenGL::TextureTarget::setSize\28unsigned\20int\2c\20unsigned\20int\29 can change the state due to initial scan
[asyncify] OpenGL::TextureTarget::destroy\28\29 can change the state due to initial scan
[asyncify] OpenGL::OpenGLGraphicsManager::~OpenGLGraphicsManager\28\29 can change the state due to initial scan
[asyncify] OpenGL::OpenGLGraphicsManager::updateCursorPalette\28\29 can change the state due to initial scan
[asyncify] OpenGL::OpenGLGraphicsManager::setFeatureState\28OSystem::Feature\2c\20bool\29 can change the state due to initial scan
[asyncify] OpenGL::OpenGLGraphicsManager::setStretchMode\28int\29[asyncify] virtual\20thunk\20to\20OpenGL::OpenGLGraphicsManager::setStretchMode\28int\29 can change the state due to initial scan
[asyncify] OpenGL::OpenGLGraphicsManager::setScaler\28unsigned\20int\2c\20int\29 can change the state due to initial scan
[asyncify] OpenGL::OpenGLGraphicsManager::loadShader\28Common::String\20const&\29 can change the state due to initial scan
[asyncify] OpenGL::OpenGLGraphicsManager::recalculateCursorScaling\28\29 can change the state due to initial scan
[asyncify] OpenGL::OpenGLGraphicsManager::updateLinearFiltering\28\29 can change the state due to initial scan
[asyncify] OpenGL::OpenGLGraphicsManager::endGFXTransaction\28\29 can change the state due to initial scan
[asyncify] OpenGL::OpenGLGraphicsManager::lockScreen\28\29 can change the state due to initial scan
[asyncify] OpenGL::OpenGLGraphicsManager::getOverlayWidth\28\29\20const can change the state due to initial scan
[asyncify] OpenGL::OpenGLGraphicsManager::osdMessageUpdateSurface\28\29 can change the state due to initial scan
[asyncify] virtual\20thunk\20to\20OpenGL::OpenGLGraphicsManager::lockScreen\28\29 can change the state due to initial scan
[asyncify] [asyncify] [asyncify] OpenGL::OpenGLGraphicsManager::updateScreen\28\29[asyncify] virtual\20thunk\20to\20OpenGL::OpenGLGraphicsManager::getOverlayHeight\28\29\20const can change the state due to initial scan
[asyncify] virtual\20thunk\20to\20OpenGL::OpenGLGraphicsManager::getOverlayFormat\28\29\20const can change the state due to initial scan
[asyncify] OpenGL::OpenGLGraphicsManager::grabOverlay\28Graphics::Surface&\29\20const can change the state due to initial scan
[asyncify] OpenGL::OpenGLGraphicsManager::setCursorPalette\28unsigned\20char\20const*\2c\20unsigned\20int\2c\20unsigned\20int\29 can change the state due to initial scan
[asyncify] virtual\20thunk\20to\20OpenGL::OpenGLGraphicsManager::setCursorPalette\28unsigned\20char\20const*\2c\20unsigned\20int\2c\20unsigned\20int\29 can change the state due to initial scan
[asyncify] OpenGL::OpenGLGraphicsManager::displayActivityIconOnOSD\28Graphics::Surface\20const*\29 can change the state due to initial scan
[asyncify] virtual\20thunk\20to\20OpenGL::OpenGLGraphicsManager::getOverlayWidth\28\29\20const can change the state due to initial scan
[asyncify] OpenGL::OpenGLGraphicsManager::setPalette\28unsigned\20char\20const*\2c\20unsigned\20int\2c\20unsigned\20int\29 can change the state due to initial scan
[asyncify] virtual\20thunk\20to\20OpenGL::OpenGLGraphicsManager::grabPalette\28unsigned\20char*\2c\20unsigned\20int\2c\20unsigned\20int\29\20const can change the state due to initial scan
[asyncify] OpenGL::OpenGLGraphicsManager::grabPalette\28unsigned\20char*\2c\20unsigned\20int\2c\20unsigned\20int\29\20const can change the state due to initial scan
[asyncify] [asyncify] OpenGL::OpenGLGraphicsManager::notifyContextDestroy\28\29[asyncify] OpenGL::OpenGLGraphicsManager::notifyContextCreate\28OpenGL::ContextType\2c\20Graphics::PixelFormat\20const&\2c\20Graphics::PixelFormat\20const&\29OpenGL::OpenGLGraphicsManager::gameNeedsAspectRatioCorrection\28\29\20const can change the state due to initial scan
[asyncify] OpenGL::OpenGLGraphicsManager::setMouseCursor\28void\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20int\2c\20bool\2c\20Graphics::PixelFormat\20const*\29 can change the state due to initial scan
[asyncify] virtual\20thunk\20to\20OpenGL::OpenGLGraphicsManager::gameNeedsAspectRatioCorrection\28\29\20const can change the state due to initial scan
[asyncify] [asyncify] WindowedGraphicsManager::populateDisplayAreaDrawRect\28int\2c\20int\2c\20int\2c\20Common::Rect&\29\20const can change the state due to initial scan
[asyncify] WindowedGraphicsManager::showOverlay\28bool\29 can change the state due to initial scan
[asyncify] WindowedGraphicsManager::hideOverlay\28\29 can change the state due to initial scan
[asyncify] OpenGL::OpenGLGraphicsManager::saveScreenshot\28Common::String\20const&\29\20const can change the state due to initial scan
[asyncify] WindowedGraphicsManager::warpMouse\28int\2c\20int\29 can change the state due to initial scan
[asyncify] virtual\20thunk\20to\20WindowedGraphicsManager::setShakePos\28int\2c\20int\29 can change the state due to initial scan
[asyncify] virtual\20thunk\20to\20WindowedGraphicsManager::showOverlay\28bool\29 can change the state due to initial scan
[asyncify] virtual\20thunk\20to\20WindowedGraphicsManager::hideOverlay\28\29 can change the state due to initial scan
[asyncify] virtual\20thunk\20to\20WindowedGraphicsManager::warpMouse\28int\2c\20int\29 can change the state due to initial scan
[asyncify] OpenGL::Shader::getUniformLocation\28Common::String\20const&\29\20const can change the state due to initial scan
[asyncify] OpenGL::GLTexture::create\28\29 can change the state due to initial scan
[asyncify] OpenGL::ShaderManager::notifyCreate\28\29 can change the state due to initial scan
[asyncify] OpenGL::GLTexture::enableLinearFiltering\28bool\29[asyncify] [asyncify] OpenGL::GLTexture::bind\28\29\20const can change the state due to initial scan
[asyncify] WindowedGraphicsManager::recalculateDisplayAreas\28\29 can change the state due to initial scan
[asyncify] OpenGL::GLTexture::setWrapMode\28OpenGL::WrapMode\29 can change the state due to initial scan
[asyncify] [asyncify] [asyncify] WindowedGraphicsManager::setShakePos\28int\2c\20int\29 can change the state due to initial scan
[asyncify] OpenGL::Texture::destroy\28\29 can change the state due to initial scan
[asyncify] OpenGL::Texture::updateGLTexture\28\29 can change the state due to initial scan
[asyncify] OpenGL::Texture::updateGLTexture\28Common::Rect&\29 can change the state due to initial scan
[asyncify] OpenGL::Surface::copyRectToTexture\28unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int\2c\20void\20const*\2c\20unsigned\20int\29 can change the state due to initial scan
[asyncify] OpenGL::FakeTexture::allocate\28unsigned\20int\2c\20unsigned\20int\29 can change the state due to initial scan
[asyncify] OpenGL::FakeTexture::updateGLTexture\28\29 can change the state due to initial scan
[asyncify] OpenGL::ScaledTexture::~ScaledTexture\28\29 can change the state due to initial scan
[asyncify] OpenGL::TextureRGB555::updateGLTexture\28\29 can change the state due to initial scan
[asyncify] OpenGL::ScaledTexture::setScaler\28unsigned\20int\2c\20int\29 can change the state due to initial scan
[asyncify] OpenGL::TextureRGBA8888Swap::updateGLTexture\28\29 can change the state due to initial scan
[asyncify] OpenGL::TextureCLUT8GPU::~TextureCLUT8GPU\28\29 can change the state due to initial scan
[asyncify] [asyncify] OpenGL::TextureCLUT8GPU::destroy\28\29 can change the state due to initial scan
[asyncify] OpenGL::TextureCLUT8GPU::recreate\28\29 can change the state due to initial scan
[asyncify] OpenGL::TextureCLUT8GPU::lookUpColors\28\29 can change the state due to initial scan
[asyncify] OpenGL::CLUT8LookUpPipeline::drawTextureInternal\28OpenGL::GLTexture\20const&\2c\20float\20const*\2c\20float\20const*\29 can change the state due to initial scan
[asyncify] OpenGL::TextureCLUT8GPU::updateGLTexture\28\29 can change the state due to initial scan
[asyncify] OpenGL::Pipeline::activate\28\29 can change the state due to initial scan
[asyncify] OpenGL::Pipeline::deactivate\28\29 can change the state due to initial scan
[asyncify] OpenGL::LibRetroPipeline::loadTextures\28\29 can change the state due to initial scan
[asyncify] OpenGL::LibRetroPipeline::setupFBOs\28\29 can change the state due to initial scan
[asyncify] OpenGL::LibRetroPipeline::close\28\29 can change the state due to initial scan
[asyncify] OpenGL::LibRetroPipeline::~LibRetroPipeline\28\29 can change the state due to initial scan
[asyncify] OpenGL::LibRetroPipeline::setupPassUniforms\28unsigned\20int\29 can change the state due to initial scan
[asyncify] OpenGL::LibRetroPipeline::drawTextureInternal\28OpenGL::GLTexture\20const&\2c\20float\20const*\2c\20float\20const*\29 can change the state due to initial scan
[asyncify] OpenGL::LibRetro::ShaderPreset::~ShaderPreset\28\29 can change the state due to initial scan
[asyncify] Common::Array<OpenGL::LibRetroTextureTarget>::reserve\28unsigned\20int\29 can change the state due to initial scan
[asyncify] OpenGL::LibRetroPipeline::finishScaling\28\29 can change the state due to initial scan
[asyncify] OpenGL::LibRetroPipeline::renderPass\28OpenGL::LibRetroPipeline::Pass\20const&\29 can change the state due to initial scan
[asyncify] OpenGL::LibRetroPipeline::loadPasses\28\29 can change the state due to initial scan
[asyncify] OpenGL::getChildRecursive\28Common::FSNode\20const&\2c\20Common::String\20const&\29 can change the state due to initial scan
[asyncify] OpenGL::LibRetroPipeline::renderPassSetupTextures\28OpenGL::LibRetroPipeline::Pass\20const&\29 can change the state due to initial scan
[asyncify] OpenGL::LibRetroPipeline::loadTexture\28Common::FSNode\20const&\29 can change the state due to initial scan
[asyncify] OpenGL::LibRetroPipeline::Pass::addTexSampler\28Common::String\20const&\2c\20unsigned\20int*\2c\20OpenGL::LibRetroPipeline::Pass::TextureSampler::Type\2c\20unsigned\20int\2c\20bool\29 can change the state due to initial scan
[asyncify] OpenGL::LibRetroPipeline::setShaderTexUniforms\28Common::String\20const&\2c\20OpenGL::Shader*\2c\20OpenGL::GLTexture\20const&\29 can change the state due to initial scan
[asyncify] Graphics::Surface*\20OpenGL::loadViaImageDecoder<Image::BitmapDecoder>\28Common::FSNode\20const&\29 can change the state due to initial scan
[asyncify] Graphics::Surface*\20OpenGL::loadViaImageDecoder<Image::JPEGDecoder>\28Common::FSNode\20const&\29 can change the state due to initial scan
[asyncify] Graphics::Surface*\20OpenGL::loadViaImageDecoder<Image::PNGDecoder>\28Common::FSNode\20const&\29 can change the state due to initial scan
[asyncify] Graphics::Surface*\20OpenGL::loadViaImageDecoder<Image::TGADecoder>\28Common::FSNode\20const&\29 can change the state due to initial scan
[asyncify] OpenGL::LibRetro::PresetParser::parsePreset\28Common::SeekableReadStream&\29 can change the state due to initial scan
[asyncify] OpenGL::LibRetro::parsePreset\28Common::FSNode\20const&\29 can change the state due to initial scan
[asyncify] OpenGL::ShaderPipeline::activateInternal\28\29 can change the state due to initial scan
[asyncify] OpenGL::ShaderPipeline::drawTextureInternal\28OpenGL::GLTexture\20const&\2c\20float\20const*\2c\20float\20const*\29 can change the state due to initial scan
[asyncify] OpenGL::ShaderPipeline::setProjectionMatrix\28Math::Matrix<4\2c\204>\20const&\29 can change the state due to initial scan
[asyncify] LegacySdlEventSource::handleJoyAxisMotion\28SDL_Event&\2c\20Common::Event&\29 can change the state due to initial scan
[asyncify] LegacySdlEventSource::updateKbdMouse\28\29 can change the state due to initial scan
[asyncify] LegacySdlEventSource::handleKbdMouse\28Common::Event&\29 can change the state due to initial scan
[asyncify] LegacySdlEventSource::handleControllerAxisMotion\28SDL_Event\20const&\2c\20Common::Event&\29 can change the state due to initial scan
[asyncify] LegacySdlEventSource::pollEvent\28Common::Event&\29 can change the state due to initial scan
[asyncify] SdlEventSource::loadGameControllerMappingFile\28\29 can change the state due to initial scan
[asyncify] SdlEventSource::processMouseEvent\28Common::Event&\2c\20int\2c\20int\2c\20int\2c\20int\29 can change the state due to initial scan
[asyncify] SdlEventSource::handleResizeEvent\28Common::Event&\2c\20int\2c\20int\29 can change the state due to initial scan
[asyncify] SdlEventSource::handleKeyDown\28SDL_Event&\2c\20Common::Event&\29 can change the state due to initial scan
[asyncify] SdlEventSource::pollEvent\28Common::Event&\29 can change the state due to initial scan
[asyncify] SdlEventSource::handleMouseMotion\28SDL_Event&\2c\20Common::Event&\29 can change the state due to initial scan
[asyncify] SdlEventSource::handleKeyUp\28SDL_Event&\2c\20Common::Event&\29 can change the state due to initial scan
[asyncify] SdlEventSource::handleMouseButtonDown\28SDL_Event&\2c\20Common::Event&\29 can change the state due to initial scan
[asyncify] SdlEventSource::handleJoyButtonDown\28SDL_Event&\2c\20Common::Event&\29 can change the state due to initial scan
[asyncify] SdlEventSource::handleJoyButtonUp\28SDL_Event&\2c\20Common::Event&\29 can change the state due to initial scan
[asyncify] SdlEventSource::handleMouseButtonUp\28SDL_Event&\2c\20Common::Event&\29 can change the state due to initial scan
[asyncify] SdlEventSource::handleJoyHatMotion\28SDL_Event&\2c\20Common::Event&\29 can change the state due to initial scan
[asyncify] SdlEventSource::handleControllerButton\28SDL_Event\20const&\2c\20Common::Event&\2c\20bool\29 can change the state due to initial scan
[asyncify] SdlEventSource::dispatchSDLEvent\28SDL_Event&\2c\20Common::Event&\29 can change the state due to initial scan
[asyncify] SdlGraphicsManager::getState\28\29\20const can change the state due to initial scan
[asyncify] SdlGraphicsManager::setState\28SdlGraphicsManager::State\20const&\29 can change the state due to initial scan
[asyncify] SdlGraphicsManager::showMouse\28bool\29 can change the state due to initial scan
[asyncify] virtual\20thunk\20to\20SdlGraphicsManager::showMouse\28bool\29 can change the state due to initial scan
[asyncify] SdlGraphicsManager::notifyMousePosition\28Common::Point&\29 can change the state due to initial scan
[asyncify] SdlGraphicsManager::notifyEvent\28Common::Event\20const&\29 can change the state due to initial scan
[asyncify] SdlGraphicsManager::saveScreenshot\28\29 can change the state due to initial scan
[asyncify] SdlGraphicsManager::toggleFullScreen\28\29 can change the state due to initial scan
[asyncify] SurfaceSdlGraphicsManager::SurfaceSdlGraphicsManager\28SdlEventSource*\2c\20SdlWindow*\29 can change the state due to initial scan
[asyncify] SurfaceSdlGraphicsManager::~SurfaceSdlGraphicsManager\28\29 can change the state due to initial scan
[asyncify] SurfaceSdlGraphicsManager::setFullscreenMode\28bool\29 can change the state due to initial scan
[asyncify] SurfaceSdlGraphicsManager::SurfaceSdlGraphicsManager\28SdlEventSource*\2c\20SdlWindow*\29.1 can change the state due to initial scan
[asyncify] SurfaceSdlGraphicsManager::setScaler\28unsigned\20int\2c\20int\29 can change the state due to initial scan
[asyncify] SdlGraphicsManager::getKeymap\28\29 can change the state due to initial scan
[asyncify] SurfaceSdlGraphicsManager::endGFXTransaction\28\29 can change the state due to initial scan
[asyncify] SurfaceSdlGraphicsManager::setFeatureState\28OSystem::Feature\2c\20bool\29 can change the state due to initial scan
[asyncify] SurfaceSdlGraphicsManager::initSize\28unsigned\20int\2c\20unsigned\20int\2c\20Graphics::PixelFormat\20const*\29 can change the state due to initial scan
[asyncify] SurfaceSdlGraphicsManager::updateScreen\28\29 can change the state due to initial scan
[asyncify] virtual\20thunk\20to\20SurfaceSdlGraphicsManager::updateScreen\28\29 can change the state due to initial scan
[asyncify] SurfaceSdlGraphicsManager::hotswapGFXMode\28\29 can change the state due to initial scan
[asyncify] SurfaceSdlGraphicsManager::loadGFXMode\28\29 can change the state due to initial scan
[asyncify] SurfaceSdlGraphicsManager::setGraphicsModeIntern\28\29 can change the state due to initial scan
[asyncify] SurfaceSdlGraphicsManager::internUpdateScreen\28\29 can change the state due to initial scan
[asyncify] [asyncify] SurfaceSdlGraphicsManager::fillScreen\28unsigned\20int\29[asyncify] virtual\20thunk\20to\20SurfaceSdlGraphicsManager::fillScreen\28unsigned\20int\29 can change the state due to initial scan
[asyncify] SurfaceSdlGraphicsManager::setPalette\28unsigned\20char\20const*\2c\20unsigned\20int\2c\20unsigned\20int\29 can change the state due to initial scan
[asyncify] virtual\20thunk\20to\20SurfaceSdlGraphicsManager::setCursorPalette\28unsigned\20char\20const*\2c\20unsigned\20int\2c\20unsigned\20int\29 can change the state due to initial scan
[asyncify] SurfaceSdlGraphicsManager::setCursorPalette\28unsigned\20char\20const*\2c\20unsigned\20int\2c\20unsigned\20int\29 can change the state due to initial scan
[asyncify] SurfaceSdlGraphicsManager::setFocusRectangle\28Common::Rect\20const&\29 can change the state due to initial scan
[asyncify] SurfaceSdlGraphicsManager::clearFocusRectangle\28\29 can change the state due to initial scan
[asyncify] virtual\20thunk\20to\20SurfaceSdlGraphicsManager::clearFocusRectangle\28\29 can change the state due to initial scan
[asyncify] SurfaceSdlGraphicsManager::copyRectToOverlay\28void\20const*\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\29 can change the state due to initial scan
[asyncify] SurfaceSdlGraphicsManager::setMouseCursor\28void\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20int\2c\20bool\2c\20Graphics::PixelFormat\20const*\29 can change the state due to initial scan
[asyncify] SurfaceSdlGraphicsManager::undrawMouse\28\29 can change the state due to initial scan
[asyncify] SurfaceSdlGraphicsManager::drawMouse\28\29 can change the state due to initial scan
[asyncify] SurfaceSdlGraphicsManager::handleResizeImpl\28int\2c\20int\29 can change the state due to initial scan
[asyncify] SurfaceSdlGraphicsManager::blitCursor\28\29 can change the state due to initial scan
[asyncify] virtual\20thunk\20to\20SurfaceSdlGraphicsManager::handleResizeImpl\28int\2c\20int\29 can change the state due to initial scan
[asyncify] SurfaceSdlGraphicsManager::handleScalerHotkeys\28unsigned\20int\2c\20int\29 can change the state due to initial scan
[asyncify] SurfaceSdlGraphicsManager::notifyResize\28int\2c\20int\29 can change the state due to initial scan
[asyncify] SurfaceSdlGraphicsManager::notifyEvent\28Common::Event\20const&\29 can change the state due to initial scan
[asyncify] SurfaceSdlGraphicsManager::SDL_SetVideoMode\28int\2c\20int\2c\20int\2c\20unsigned\20int\29 can change the state due to initial scan
[asyncify] SdlMixerManager::~SdlMixerManager\28\29 can change the state due to initial scan
[asyncify] SdlMixerManager::sdlCallback\28void*\2c\20unsigned\20char*\2c\20int\29 can change the state due to initial scan
[asyncify] SurfaceSdlGraphicsManager::displayMessageOnOSD\28Common::U32String\20const&\29 can change the state due to initial scan
[asyncify] SdlMixerManager::init\28\29 can change the state due to initial scan
[asyncify] SDLPlugin::unloadPlugin\28\29 can change the state due to initial scan
[asyncify] DynamicPlugin::unloadPlugin\28\29 can change the state due to initial scan
[asyncify] OpenGL::FrameBuffer::~FrameBuffer\28\29 can change the state due to initial scan
[asyncify] OpenGL::FrameBuffer::attach\28\29[asyncify] OpenGL::ShaderSurfaceRenderer::render\28OpenGL::TextureGL\20const*\2c\20Math::Rect2d\20const&\29[asyncify] OpenGL::FrameBuffer::init\28\29 can change the state due to initial scan
[asyncify] DynamicPlugin::loadPlugin\28\29 can change the state due to initial scan
[asyncify] OpenGL::FrameBuffer::detach\28\29 can change the state due to initial scan
[asyncify] OpenGL::ShaderSurfaceRenderer::restorePreviousState\28\29 can change the state due to initial scan
[asyncify] OpenGL::ShaderSurfaceRenderer::prepareState\28\29 can change the state due to initial scan
[asyncify] OpenGL::TextureGL::~TextureGL\28\29 can change the state due to initial scan
[asyncify] OpenGL::SurfaceRenderer::enableAlphaBlending\28bool\29 can change the state due to initial scan
[asyncify] OpenGL::TextureGL::TextureGL\28unsigned\20int\2c\20unsigned\20int\29[asyncify] [asyncify] OpenGL::TiledSurface::~TiledSurface\28\29 can change the state due to initial scan
[asyncify] OpenGL::TiledSurface::update\28\29 can change the state due to initial scan
[asyncify] OpenGL::TiledSurface::draw\28OpenGL::SurfaceRenderer*\29\20const can change the state due to initial scan
[asyncify] OpenGLSdlGraphicsManager::getHiDPIScreenFactor\28\29\20const can change the state due to initial scan
[asyncify] virtual\20thunk\20to\20OpenGLSdlGraphicsManager::getHiDPIScreenFactor\28\29\20const can change the state due to initial scan
[asyncify] OpenGLSdlGraphicsManager::setupMode\28unsigned\20int\2c\20unsigned\20int\29 can change the state due to initial scan
[asyncify] OpenGLSdlGraphicsManager::notifyResize\28int\2c\20int\29 can change the state due to initial scan
[asyncify] OpenGLSdlGraphics3dManager::closeOverlay\28\29 can change the state due to initial scan
[asyncify] OpenGLSdlGraphics3dManager::createOrUpdateScreen\28\29 can change the state due to initial scan
[asyncify] OpenGLSdlGraphics3dManager::setupScreen\28\29 can change the state due to initial scan
[asyncify] OpenGLSdlGraphics3dManager::setStretchMode\28int\29 can change the state due to initial scan
[asyncify] OpenGLSdlGraphics3dManager::shouldRenderToFramebuffer\28\29\20const can change the state due to initial scan
[asyncify] virtual\20thunk\20to\20OpenGLSdlGraphics3dManager::setStretchMode\28int\29 can change the state due to initial scan
[asyncify] OpenGLSdlGraphicsManager::notifyEvent\28Common::Event\20const&\29 can change the state due to initial scan
[asyncify] OpenGLSdlGraphics3dManager::handleResizeImpl\28int\2c\20int\29[asyncify] OpenGLSdlGraphics3dManager::notifyResize\28int\2c\20int\29 can change the state due to initial scan
[asyncify] OpenGLSdlGraphics3dManager::gameNeedsAspectRatioCorrection\28\29\20const can change the state due to initial scan
[asyncify] virtual\20thunk\20to\20OpenGLSdlGraphics3dManager::gameNeedsAspectRatioCorrection\28\29\20const can change the state due to initial scan
[asyncify] OpenGLSdlGraphics3dManager::drawOverlay\28\29 can change the state due to initial scan
[asyncify] OpenGLSdlGraphics3dManager::createOrUpdateGLContext\28unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int\2c\20bool\2c\20bool\29 can change the state due to initial scan
[asyncify] virtual\20thunk\20to\20OpenGLSdlGraphics3dManager::hideOverlay\28\29[asyncify] OpenGLSdlGraphics3dManager::updateScreen\28\29 can change the state due to initial scan
[asyncify] OpenGLSdlGraphics3dManager::hideOverlay\28\29 can change the state due to initial scan
[asyncify] OpenGLSdlGraphics3dManager::saveScreenshot\28Common::String\20const&\29\20const can change the state due to initial scan
[asyncify] POSIXFilesystemNode::getChild\28Common::String\20const&\29\20const can change the state due to initial scan
[asyncify] OpenGLSdlGraphics3dManager::showOverlay\28bool\29 can change the state due to initial scan
[asyncify] POSIXFilesystemNode::POSIXFilesystemNode\28Common::String\20const&\29 can change the state due to initial scan
[asyncify] POSIXFilesystemNode::getParent\28\29\20const can change the state due to initial scan
[asyncify] POSIXFilesystemNode::createReadStream\28\29 can change the state due to initial scan
[asyncify] POSIXFilesystemNode::createWriteStream\28\29 can change the state due to initial scan
[asyncify] POSIXFilesystemNode::createDirectory\28\29 can change the state due to initial scan
[asyncify] DrivePOSIXFilesystemNode::createReadStream\28\29 can change the state due to initial scan
[asyncify] DrivePOSIXFilesystemNode::createWriteStream\28\29 can change the state due to initial scan
[asyncify] DrivePOSIXFilesystemNode::getChild\28Common::String\20const&\29\20const can change the state due to initial scan
[asyncify] DrivesPOSIXFilesystemFactory::makeCurrentDirectoryFileNode\28\29\20const can change the state due to initial scan
[asyncify] ChRootFilesystemNode::~ChRootFilesystemNode\28\29 can change the state due to initial scan
[asyncify] ChRootFilesystemNode::exists\28\29\20const can change the state due to initial scan
[asyncify] ChRootFilesystemNode::getName\28\29\20const can change the state due to initial scan
[asyncify] [asyncify] [asyncify] [asyncify] ChRootFilesystemNode::isReadable\28\29\20const can change the state due to initial scan
[asyncify] ChRootFilesystemNode::isWritable\28\29\20const can change the state due to initial scan
[asyncify] ChRootFilesystemNode::getChild\28Common::String\20const&\29\20constChRootFilesystemNode::getPath\28\29\20const can change the state due to initial scan
[asyncify] DrivePOSIXFilesystemNode::getChildren\28Common::Array<AbstractFSNode*>&\2c\20Common::FSNode::ListMode\2c\20bool\29\20const can change the state due to initial scan
[asyncify] ChRootFilesystemNode::getChildren\28Common::Array<AbstractFSNode*>&\2c\20Common::FSNode::ListMode\2c\20bool\29\20const can change the state due to initial scan
[asyncify] ChRootFilesystemNode::createReadStream\28\29 can change the state due to initial scan
[asyncify] ChRootFilesystemNode::createDirectory\28\29 can change the state due to initial scan
[asyncify] ChRootFilesystemNode::createWriteStream\28\29 can change the state due to initial scan
[asyncify] ChRootFilesystemNode::isDirectory\28\29\20const can change the state due to initial scan
[asyncify] POSIXPlugin::unloadPlugin\28\29 can change the state due to initial scan
[asyncify] Video::ThreeDOMovieDecoder::~ThreeDOMovieDecoder\28\29 can change the state due to initial scan
[asyncify] Video::ThreeDOMovieDecoder::close\28\29 can change the state due to initial scan
[asyncify] POSIXSaveFileManager::POSIXSaveFileManager\28\29 can change the state due to initial scan
[asyncify] Video::ThreeDOMovieDecoder::StreamAudioTrack::queueAudio\28Common::SeekableReadStream*\2c\20unsigned\20int\29 can change the state due to initial scan
[asyncify] Video::ThreeDOMovieDecoder::StreamVideoTrack::decodeFrame\28Common::SeekableReadStream*\2c\20unsigned\20int\29 can change the state due to initial scan
[asyncify] Video::ThreeDOMovieDecoder::StreamVideoTrack::~StreamVideoTrack\28\29 can change the state due to initial scan
[asyncify] Video::ThreeDOMovieDecoder::readNextPacket\28\29 can change the state due to initial scan
[asyncify] Video::ThreeDOMovieDecoder::StreamVideoTrack::endOfTrack\28\29\20const can change the state due to initial scan
[asyncify] Video::ThreeDOMovieDecoder::StreamVideoTrack::getPixelFormat\28\29\20const[asyncify] Video::ThreeDOMovieDecoder::StreamAudioTrack::~StreamAudioTrack\28\29 can change the state due to initial scan
[asyncify] Video::AVIDecoder::close\28\29[asyncify] [asyncify] Video::AVIDecoder::decodeNextTransparency\28\29 can change the state due to initial scan
[asyncify] Video::AVIDecoder::decodeNextFrame\28\29 can change the state due to initial scan
[asyncify] Video::ThreeDOMovieDecoder::loadStream\28Common::SeekableReadStream*\29 can change the state due to initial scan
[asyncify] Video::AVIDecoder::readPalette8\28unsigned\20int\29 can change the state due to initial scan
[asyncify] Video::AVIDecoder::readStreamName\28unsigned\20int\29 can change the state due to initial scan
[asyncify] Video::AVIDecoder::handleList\28unsigned\20int\29 can change the state due to initial scan
[asyncify] Video::AVIDecoder::skipChunk\28unsigned\20int\29 can change the state due to initial scan
[asyncify] Video::AVIDecoder::parseNextChunk\28\29[asyncify] [asyncify] Video::AVIDecoder::readOldIndex\28unsigned\20int\29Video::AVIDecoder::handleStreamHeader\28unsigned\20int\29 can change the state due to initial scan
[asyncify]  can change the state due to initial scan
[asyncify] Video::AVIDecoder::loadStream\28Common::SeekableReadStream*\29 can change the state due to initial scan
[asyncify] Video::AVIDecoder::checkTruemotion1\28\29 can change the state due to initial scan
[asyncify] Video::AVIDecoder::handleNextPacket\28Video::AVIDecoder::TrackStatus&\29[asyncify] Video::AVIDecoder::AVIVideoTrack::decodeFrame\28Common::SeekableReadStream*\29 can change the state due to initial scan
[asyncify] Video::AVIDecoder::AVIVideoTrack::loadPaletteFromChunk\28Common::SeekableReadStream*\29 can change the state due to initial scan
[asyncify] Video::AVIDecoder::getAudioTrack\28int\29 can change the state due to initial scan
[asyncify] Video::AVIDecoder::AVIVideoTrack::~AVIVideoTrack\28\29[asyncify] Video::AVIDecoder::seekIntern\28Audio::Timestamp\20const&\29[asyncify]  can change the state due to initial scan
[asyncify] Video::AVIDecoder::AVIVideoTrack::getPixelFormat\28\29\20const can change the state due to initial scan
[asyncify] Video::AVIDecoder::AVIAudioTrack::skipAudio\28Audio::Timestamp\20const&\2c\20Audio::Timestamp\20const&\29 can change the state due to initial scan
[asyncify] Video::AVIDecoder::AVIVideoTrack::rewind\28\29 can change the state due to initial scan
[asyncify] Video::AVIDecoder::seekTransparencyFrame\28int\29 can change the state due to initial scan
[asyncify] Video::AVIDecoder::AVIVideoTrack::getPalette\28\29\20const can change the state due to initial scan
[asyncify] Video::AVIDecoder::AVIVideoTrack::hasDirtyPalette\28\29\20const can change the state due to initial scan
[asyncify] Video::AVIDecoder::AVIVideoTrack::endOfTrack\28\29\20const can change the state due to initial scan
[asyncify] Video::AVIDecoder::AVIVideoTrack::canDither\28\29\20const can change the state due to initial scan
[asyncify] Video::AVIDecoder::AVIAudioTrack::~AVIAudioTrack\28\29 can change the state due to initial scan
[asyncify] Video::AVIDecoder::AVIVideoTrack::setDither\28unsigned\20char\20const*\29 can change the state due to initial scan
[asyncify] Video::AVIDecoder::AVIAudioTrack::queueSound\28Common::SeekableReadStream*\29 can change the state due to initial scan
[asyncify] Video::AVIDecoder::AVIAudioTrack::resetStream\28\29 can change the state due to initial scan
[asyncify] Video::AVIDecoder::AVIAudioTrack::rewind\28\29 can change the state due to initial scan
[asyncify] Video::AVIDecoder::AVIVideoTrack::setReverse\28bool\29 can change the state due to initial scan
[asyncify] Video::CoktelDecoder::evaluateSeekFrame\28int&\2c\20int\29\20const can change the state due to initial scan
[asyncify] [asyncify] Video::CoktelDecoder::createSurface\28\29 can change the state due to initial scan
[asyncify] Video::CoktelDecoder::setSurfaceMemory\28\29 can change the state due to initial scan
[asyncify] [asyncify] Video::CoktelDecoder::disableSound\28\29 can change the state due to initial scan
[asyncify] Video::CoktelDecoder::finishSound\28\29 can change the state due to initial scan
[asyncify] Video::CoktelDecoder::close\28\29 can change the state due to initial scan
[asyncify] Video::CoktelDecoder::getSurface\28\29\20const can change the state due to initial scan
[asyncify] Video::CoktelDecoder::endOfVideo\28\29\20const can change the state due to initial scan
[asyncify] Video::CoktelDecoder::getTimeToNextFrame\28\29\20const can change the state due to initial scan
[asyncify] Video::CoktelDecoder::pauseVideo\28bool\29 can change the state due to initial scan
[asyncify] Video::CoktelDecoder::getExpectedFrameFromCurrentTime\28\29\20const can change the state due to initial scan
[asyncify] Video::PreIMDDecoder::close\28\29 can change the state due to initial scan
[asyncify] Video::PreIMDDecoder::reloadStream\28Common::SeekableReadStream*\29 can change the state due to initial scan
[asyncify] Video::PreIMDDecoder::seek\28int\2c\20int\2c\20bool\29 can change the state due to initial scan
[asyncify] Video::PreIMDDecoder::loadStream\28Common::SeekableReadStream*\29 can change the state due to initial scan
[asyncify] Video::PreIMDDecoder::decodeNextFrame\28\29 can change the state due to initial scan
[asyncify] Video::IMDDecoder::close\28\29 can change the state due to initial scan
[asyncify] Video::IMDDecoder::reloadStream\28Common::SeekableReadStream*\29 can change the state due to initial scan
[asyncify] Video::IMDDecoder::nextSoundSlice\28bool\29 can change the state due to initial scan
[asyncify] Video::IMDDecoder::seek\28int\2c\20int\2c\20bool\29 can change the state due to initial scan
[asyncify] Video::PreIMDDecoder::processFrame\28\29 can change the state due to initial scan
[asyncify] Video::IMDDecoder::initialSoundSlice\28bool\29 can change the state due to initial scan
[asyncify] Video::IMDDecoder::processFrame\28\29 can change the state due to initial scan
[asyncify] Video::IMDDecoder::loadCoordinates\28\29 can change the state due to initial scan
[asyncify] Video::IMDDecoder::loadFrameTableOffsets\28unsigned\20int&\2c\20unsigned\20int&\29 can change the state due to initial scan
[asyncify] [asyncify] [asyncify] Video::IMDDecoder::assessVideoProperties\28\29 can change the state due to initial scan
[asyncify] Video::IMDDecoder::loadFrameTables\28unsigned\20int\2c\20unsigned\20int\29 can change the state due to initial scan
[asyncify] Video::IMDDecoder::loadStream\28Common::SeekableReadStream*\29 can change the state due to initial scan
[asyncify] Video::VMDDecoder::close\28\29 can change the state due to initial scan
[asyncify] Video::VMDDecoder::reloadStream\28Common::SeekableReadStream*\29 can change the state due to initial scan
[asyncify] Video::DPCMStream::readBuffer\28short*\2c\20int\29 can change the state due to initial scan
[asyncify] Video::VMDDecoder::createAudioStream\28\29 can change the state due to initial scan
[asyncify] Video::VMDDecoder::seek\28int\2c\20int\2c\20bool\29 can change the state due to initial scan
[asyncify] Video::VMDDecoder::openExternalCodec\28\29 can change the state due to initial scan
[asyncify] Video::VMDDecoder::decodeNextFrame\28\29[asyncify] Video::VMDDecoder::readFiles\28\29 can change the state due to initial scan
[asyncify] Video::VMDDecoder::readFrameTable\28int&\29 can change the state due to initial scan
[asyncify] [asyncify] Video::VMDDecoder::filledSoundSlice\28unsigned\20int\29Video::VMD_ADPCMStream::VMD_ADPCMStream\28Common::SeekableReadStream*\2c\20DisposeAfterUse::Flag\2c\20int\2c\20int\29 can change the state due to initial scan
[asyncify] Video::VMDDecoder::loadStream\28Common::SeekableReadStream*\29 can change the state due to initial scan
[asyncify] Video::VMDDecoder::renderFrame\28Common::Rect&\29 can change the state due to initial scan
[asyncify] Video::VMDDecoder::blit24\28Graphics::Surface\20const&\2c\20Common::Rect&\29 can change the state due to initial scan
[asyncify] Video::VMDDecoder::getPixelFormat\28\29\20const can change the state due to initial scan
[asyncify] Video::AdvancedVMDDecoder::AdvancedVMDDecoder\28Audio::Mixer::SoundType\29 can change the state due to initial scan
[asyncify] Video::VMDDecoder::getEmbeddedFile\28Common::String\20const&\29\20const can change the state due to initial scan
[asyncify] Video::AdvancedVMDDecoder::~AdvancedVMDDecoder\28\29 can change the state due to initial scan
[asyncify] Video::AdvancedVMDDecoder::loadStream\28Common::SeekableReadStream*\29 can change the state due to initial scan
[asyncify] Video::AdvancedVMDDecoder::VMDVideoTrack::getPixelFormat\28\29\20const can change the state due to initial scan
[asyncify] Video::AdvancedVMDDecoder::VMDVideoTrack::decodeNextFrame\28\29 can change the state due to initial scan
[asyncify] Video::DPCMStream::~DPCMStream\28\29 can change the state due to initial scan
[asyncify] Video::DPCMStream::~DPCMStream\28\29.1 can change the state due to initial scan
[asyncify] Common::MemoryReadWriteStream::seek\28long\20long\2c\20int\29 can change the state due to initial scan
[asyncify] Video::DPCMStream::endOfData\28\29\20const can change the state due to initial scan
[asyncify] non-virtual\20thunk\20to\20Common::MemoryReadWriteStream::seek\28long\20long\2c\20int\29 can change the state due to initial scan
[asyncify] Audio::DVI_ADPCMStream::~DVI_ADPCMStream\28\29 can change the state due to initial scan
[asyncify] Audio::DVI_ADPCMStream::~DVI_ADPCMStream\28\29.1 can change the state due to initial scan
[asyncify] Audio::ADPCMStream::endOfData\28\29\20const can change the state due to initial scan
[asyncify] [asyncify] Video::VMD_ADPCMStream::~VMD_ADPCMStream\28\29.1[asyncify] Video::VMD_ADPCMStream::~VMD_ADPCMStream\28\29 can change the state due to initial scan
[asyncify] Video::DXADecoder::DXAVideoTrack::setFrameStartPos\28\29 can change the state due to initial scan
[asyncify] Video::DXADecoder::loadStream\28Common::SeekableReadStream*\29 can change the state due to initial scan
[asyncify] Video::DXADecoder::readSoundData\28Common::SeekableReadStream*\29 can change the state due to initial scan
[asyncify] [asyncify] [asyncify] Video::VMDDecoder::processFrame\28\29[asyncify]  can change the state due to initial scan
[asyncify] Video::VMDDecoder::blit16\28Graphics::Surface\20const&\2c\20Common::Rect&\29 can change the state due to initial scan
[asyncify] Video::DXADecoder::DXAVideoTrack::decodeNextFrame\28\29 can change the state due to initial scan
[asyncify] Video::FlicDecoder::FlicVideoTrack::FlicVideoTrack\28Common::SeekableReadStream*\2c\20unsigned\20short\2c\20unsigned\20short\2c\20unsigned\20short\2c\20bool\29 can change the state due to initial scan
[asyncify] Video::FlicDecoder::loadStream\28Common::SeekableReadStream*\29 can change the state due to initial scan
[asyncify] Video::FlicDecoder::FlicVideoTrack::endOfTrack\28\29\20const can change the state due to initial scan
[asyncify] Video::FlicDecoder::FlicVideoTrack::~FlicVideoTrack\28\29 can change the state due to initial scan
[asyncify] Video::FlicDecoder::FlicVideoTrack::rewind\28\29 can change the state due to initial scan
[asyncify] Video::FlicDecoder::FlicVideoTrack::readHeader\28\29 can change the state due to initial scan
[asyncify] [asyncify] Video::FlicDecoder::FlicVideoTrack::decodeNextFrame\28\29 can change the state due to initial scan
[asyncify] Video::FlicDecoder::FlicVideoTrack::handleFrame\28\29 can change the state due to initial scan
[asyncify] Video::HNMDecoder::~HNMDecoder\28\29 can change the state due to initial scan
[asyncify] Video::HNMDecoder::close\28\29[asyncify] Video::FlicDecoder::FlicVideoTrack::decodeDeltaFLC\28unsigned\20char*\29 can change the state due to initial scan
[asyncify] Video::FlicDecoder::FlicVideoTrack::copyFrame\28unsigned\20char*\29 can change the state due to initial scan
[asyncify] Video::HNMDecoder::readNextPacket\28\29 can change the state due to initial scan
[asyncify] Video::HNMDecoder::loadStream\28Common::SeekableReadStream*\29 can change the state due to initial scan
[asyncify] Video::HNMDecoder::HNM4VideoTrack::decodeIntraframe\28unsigned\20char*\2c\20unsigned\20int\29 can change the state due to initial scan
[asyncify] Video::HNMDecoder::HNM6VideoTrack::~HNM6VideoTrack\28\29 can change the state due to initial scan
[asyncify] Video::HNMDecoder::HNM6VideoTrack::getPixelFormat\28\29\20const can change the state due to initial scan
[asyncify] Video::HNMDecoder::HNM6VideoTrack::decodeChunk\28unsigned\20char*\2c\20unsigned\20int\2c\20unsigned\20short\2c\20unsigned\20short\29 can change the state due to initial scan
[asyncify] Video::HNMDecoder::DPCMAudioTrack::~DPCMAudioTrack\28\29 can change the state due to initial scan
[asyncify] Video::HNMDecoder::APCAudioTrack::~APCAudioTrack\28\29 can change the state due to initial scan
[asyncify] Video::HNMDecoder::DPCMAudioTrack::decodeSound\28unsigned\20short\2c\20unsigned\20char*\2c\20unsigned\20int\29 can change the state due to initial scan
[asyncify] Video::HNMDecoder::APCAudioTrack::decodeSound\28unsigned\20short\2c\20unsigned\20char*\2c\20unsigned\20int\29 can change the state due to initial scan
[asyncify] Video::MPEGPSDecoder::MPEGPSDemuxer::close\28\29 can change the state due to initial scan
[asyncify] Video::MPEGPSDecoder::loadStream\28Common::SeekableReadStream*\29 can change the state due to initial scan
[asyncify] Video::MPEGPSDecoder::MPEGPSDemuxer::queueNextPacket\28\29 can change the state due to initial scan
[asyncify] Video::MPEGPSDecoder::detectPrivateStreamType\28Common::SeekableReadStream*\29 can change the state due to initial scan
[asyncify] Video::MPEGPSDecoder::readNextPacket\28\29 can change the state due to initial scan
[asyncify] Video::MPEGPSDecoder::MPEGPSDemuxer::readPTS\28int\29 can change the state due to initial scan
[asyncify] Video::MPEGPSDecoder::MPEGPSDemuxer::findNextStartCode\28unsigned\20int&\29 can change the state due to initial scan
[asyncify] Video::MPEGPSDecoder::getStream\28unsigned\20int\2c\20Common::SeekableReadStream*\29 can change the state due to initial scan
[asyncify] Video::MPEGPSDecoder::MPEGVideoTrack::findDimensions\28Common::SeekableReadStream*\2c\20Graphics::PixelFormat\20const&\29 can change the state due to initial scan
[asyncify] Video::MPEGPSDecoder::MPEGPSDemuxer::parseProgramStreamMap\28int\29 can change the state due to initial scan
[asyncify] Video::MPEGPSDecoder::MPEGVideoTrack::sendPacket\28Common::SeekableReadStream*\2c\20unsigned\20int\2c\20unsigned\20int\29 can change the state due to initial scan
[asyncify] non-virtual\20thunk\20to\20Video::MPEGPSDecoder::MPEGVideoTrack::sendPacket\28Common::SeekableReadStream*\2c\20unsigned\20int\2c\20unsigned\20int\29 can change the state due to initial scan
[asyncify] Video::MPEGPSDecoder::PS2AudioTrack::~PS2AudioTrack\28\29 can change the state due to initial scan
[asyncify] Video::MPEGPSDecoder::PS2AudioTrack::PS2AudioTrack\28Common::SeekableReadStream*\2c\20Audio::Mixer::SoundType\29 can change the state due to initial scan
[asyncify] Video::MveDecoder::~MveDecoder\28\29 can change the state due to initial scan
[asyncify] Video::MPEGPSDecoder::PS2AudioTrack::sendPacket\28Common::SeekableReadStream*\2c\20unsigned\20int\2c\20unsigned\20int\29 can change the state due to initial scan
[asyncify] Video::MveDecoder::readPacketHeader\28\29 can change the state due to initial scan
[asyncify] Video::MveDecoder::applyPalette\28PaletteManager*\29 can change the state due to initial scan
[asyncify] Video::MveDecoder::copyBlock_16bit\28Graphics::Surface&\2c\20Common::MemoryReadStream&\2c\20int\29 can change the state due to initial scan
[asyncify] Video::MveDecoder::copyBlock_8bit\28Graphics::Surface&\2c\20Common::MemoryReadStream&\2c\20int\29 can change the state due to initial scan
[asyncify] Video::MPEGPSDecoder::MPEGPSDemuxer::readNextPacketHeader\28int&\2c\20unsigned\20int&\2c\20unsigned\20int&\29 can change the state due to initial scan
[asyncify] Video::MveDecoder::loadStream\28Common::SeekableReadStream*\29 can change the state due to initial scan
[asyncify] Video::MveDecoder::MveVideoTrack::getWidth\28\29\20const can change the state due to initial scan
[asyncify] Video::MveDecoder::MveVideoTrack::getHeight\28\29\20const can change the state due to initial scan
[asyncify] Video::MveDecoder::decodeFormat6\28\29 can change the state due to initial scan
[asyncify] [asyncify] Video::MveDecoder::decodeFormat10\28\29Video::PacoDecoder::close\28\29 can change the state due to initial scan
[asyncify] Video::MveDecoder::readNextPacket\28\29 can change the state due to initial scan
[asyncify] Video::PacoDecoder::~PacoDecoder\28\29 can change the state due to initial scan
[asyncify] Video::PacoDecoder::getAudioSamplingRate\28\29 can change the state due to initial scan
[asyncify] Video::PacoDecoder::getPalette\28\29 can change the state due to initial scan
[asyncify] Video::PacoDecoder::PacoVideoTrack::endOfTrack\28\29\20const can change the state due to initial scan
[asyncify] Video::PacoDecoder::PacoAudioTrack::queueSound\28Common::SeekableReadStream*\2c\20unsigned\20int\29 can change the state due to initial scan
[asyncify] Video::PacoDecoder::PacoAudioTrack::~PacoAudioTrack\28\29 can change the state due to initial scan
[asyncify] Video::PacoDecoder::readNextPacket\28\29 can change the state due to initial scan
[asyncify] Video::PacoDecoder::PacoVideoTrack::handlePalette\28Common::SeekableReadStream*\29 can change the state due to initial scan
[asyncify] Video::PSXStreamDecoder::loadStream\28Common::SeekableReadStream*\29 can change the state due to initial scan
[asyncify] Video::PSXStreamDecoder::close\28\29 can change the state due to initial scan
[asyncify] Video::PSXStreamDecoder::~PSXStreamDecoder\28\29 can change the state due to initial scan
[asyncify] Video::PacoDecoder::loadStream\28Common::SeekableReadStream*\29 can change the state due to initial scan
[asyncify] Video::PSXStreamDecoder::readSector\28\29 can change the state due to initial scan
[asyncify] Video::PSXStreamDecoder::readNextPacket\28\29 can change the state due to initial scan
[asyncify] Video::PSXStreamDecoder::PSXAudioTrack::queueAudioFromSector\28Common::SeekableReadStream*\29 can change the state due to initial scan
[asyncify] Video::PSXStreamDecoder::PSXAudioTrack::PSXAudioTrack\28Common::SeekableReadStream*\2c\20Audio::Mixer::SoundType\29 can change the state due to initial scan
[asyncify] Video::PSXStreamDecoder::PSXAudioTrack::~PSXAudioTrack\28\29 can change the state due to initial scan
[asyncify] Video::PSXStreamDecoder::PSXVideoTrack::PSXVideoTrack\28Common::SeekableReadStream*\2c\20Video::PSXStreamDecoder::CDSpeed\2c\20int\29 can change the state due to initial scan
[asyncify] Video::QuickTimeDecoder::updateAudioBuffer\28\29 can change the state due to initial scan
[asyncify] Video::QuickTimeDecoder::init\28\29 can change the state due to initial scan
[asyncify] Video::QuickTimeDecoder::VideoSampleDesc::~VideoSampleDesc\28\29 can change the state due to initial scan
[asyncify] Video::PacoDecoder::PacoVideoTrack::handleFrame\28Common::SeekableReadStream*\2c\20unsigned\20int\2c\20int\29 can change the state due to initial scan
[asyncify] Video::QuickTimeDecoder::VideoTrackHandler::bufferNextFrame\28\29 can change the state due to initial scan
[asyncify] Video::QuickTimeDecoder::VideoTrackHandler::seek\28Audio::Timestamp\20const&\29 can change the state due to initial scan
[asyncify] Video::QuickTimeDecoder::VideoTrackHandler::getPixelFormat\28\29\20const[asyncify] Video::QuickTimeDecoder::VideoTrackHandler::getNextFramePacket\28unsigned\20int&\29 can change the state due to initial scan
[asyncify] Video::QuickTimeDecoder::VideoTrackHandler::getNextFrameStartTime\28\29\20const can change the state due to initial scan
[asyncify] Video::QuickTimeDecoder::readSampleDesc\28Common::QuickTimeParser::Track*\2c\20unsigned\20int\2c\20unsigned\20int\29 can change the state due to initial scan
[asyncify] Video::QuickTimeDecoder::VideoTrackHandler::decodeNextFrame\28\29 can change the state due to initial scan
[asyncify] Video::QuickTimeDecoder::VideoTrackHandler::setDither\28unsigned\20char\20const*\29 can change the state due to initial scan
[asyncify] Video::SmackerDecoder::~SmackerDecoder\28\29 can change the state due to initial scan
[asyncify] Video::SmackerDecoder::close\28\29 can change the state due to initial scan
[asyncify] Video::SmackerDecoder::rewind\28\29 can change the state due to initial scan
[asyncify] Video::SmackerDecoder::forceSeekToFrame\28unsigned\20int\29 can change the state due to initial scan
[asyncify] Video::SmackerDecoder::loadStream\28Common::SeekableReadStream*\29 can change the state due to initial scan
[asyncify] Video::SmackerDecoder::readNextPacket\28\29 can change the state due to initial scan
[asyncify] Video::SmackerDecoder::handleAudioTrack\28unsigned\20char\2c\20unsigned\20int\2c\20unsigned\20int\29 can change the state due to initial scan
[asyncify] Video::SmackerDecoder::SmackerVideoTrack::unpackPalette\28Common::SeekableReadStream*\29 can change the state due to initial scan
[asyncify] Video::SmackerDecoder::getAudioTrack\28int\29 can change the state due to initial scan
[asyncify] Video::SmackerDecoder::SmackerAudioTrack::~SmackerAudioTrack\28\29 can change the state due to initial scan
[asyncify] Video::SmackerDecoder::SmackerAudioTrack::rewind\28\29 can change the state due to initial scan
[asyncify] Video::SmackerDecoder::getFrameRate\28\29\20const can change the state due to initial scan
[asyncify] Video::SmackerDecoder::SmackerVideoTrack::getNextDirtyRect\28\29 can change the state due to initial scan
[asyncify] Video::Subtitles::setBBox\28Common::Rect\29 can change the state due to initial scan
[asyncify] Video::SmackerDecoder::SmackerVideoTrack::decodeFrame\28Common::BitStreamImpl<Common::BitStreamMemoryStream\2c\20unsigned\20int\2c\208\2c\20false\2c\20false>&\29 can change the state due to initial scan
[asyncify] Video::VideoDecoder::VideoDecoder\28\29 can change the state due to initial scan
[asyncify] Video::Subtitles::renderSubtitle\28\29 can change the state due to initial scan
[asyncify] Video::VideoDecoder::stop\28\29 can change the state due to initial scan
[asyncify] Video::VideoDecoder::close\28\29 can change the state due to initial scan
[asyncify] Video::VideoDecoder::loadFile\28Common::Path\20const&\29 can change the state due to initial scan
[asyncify] Video::VideoDecoder::getTime\28\29\20const can change the state due to initial scan
[asyncify] Video::VideoDecoder::needsUpdate\28\29\20const can change the state due to initial scan
[asyncify] Video::Subtitles::drawSubtitle\28unsigned\20int\2c\20bool\29 can change the state due to initial scan
[asyncify] Video::VideoDecoder::hasFramesLeft\28\29\20const can change the state due to initial scan
[asyncify] Video::VideoDecoder::getTimeToNextFrame\28\29\20const can change the state due to initial scan
[asyncify] [asyncify] Video::VideoDecoder::setBalance\28signed\20char\29 can change the state due to initial scan
[asyncify] Video::VideoDecoder::endOfVideo\28\29\20const can change the state due to initial scan
[asyncify] Video::VideoDecoder::resetPauseStartTime\28\29 can change the state due to initial scan
[asyncify] Video::VideoDecoder::setSoundType\28Audio::Mixer::SoundType\29 can change the state due to initial scan
[asyncify] Video::VideoDecoder::setVolume\28unsigned\20char\29 can change the state due to initial scan
[asyncify] Video::VideoDecoder::getWidth\28\29\20const can change the state due to initial scan
[asyncify] Video::VideoDecoder::getPixelFormat\28\29\20const can change the state due to initial scan
[asyncify] Video::VideoDecoder::Track::pause\28bool\29 can change the state due to initial scan
[asyncify] Video::VideoDecoder::decodeNextFrame\28\29 can change the state due to initial scan
[asyncify] Video::VideoDecoder::findNextVideoTrack\28\29 can change the state due to initial scan
[asyncify] Video::VideoDecoder::pauseVideo\28bool\29 can change the state due to initial scan
[asyncify] Video::VideoDecoder::setReverse\28bool\29 can change the state due to initial scan
[asyncify] Video::VideoDecoder::getCurFrame\28\29\20const can change the state due to initial scan
[asyncify] Video::VideoDecoder::getFrameCount\28\29\20const can change the state due to initial scan
[asyncify] Video::VideoDecoder::getHeight\28\29\20const can change the state due to initial scan
[asyncify] Video::VideoDecoder::AudioTrack::setVolume\28unsigned\20char\29 can change the state due to initial scan
[asyncify] Video::VideoDecoder::hasAudio\28\29\20const can change the state due to initial scan
[asyncify] Video::VideoDecoder::startAudio\28\29 can change the state due to initial scan
[asyncify] Video::VideoDecoder::stopAudio\28\29 can change the state due to initial scan
[asyncify] Video::VideoDecoder::rewind\28\29 can change the state due to initial scan
[asyncify] Video::VideoDecoder::isSeekable\28\29\20const can change the state due to initial scan
[asyncify] Video::VideoDecoder::AudioTrack::start\28Audio::Timestamp\20const&\29 can change the state due to initial scan
[asyncify] Video::VideoDecoder::AudioTrack::start\28\29 can change the state due to initial scan
[asyncify] Video::VideoDecoder::isRewindable\28\29\20const can change the state due to initial scan
[asyncify] Video::VideoDecoder::seekToFrame\28unsigned\20int\29 can change the state due to initial scan
[asyncify] Video::VideoDecoder::setRate\28Common::Rational\20const&\29[asyncify]  can change the state due to initial scan
[asyncify] [asyncify] [asyncify] Video::VideoDecoder::Track::rewind\28\29 can change the state due to initial scan
[asyncify] Video::VideoDecoder::VideoTrack::endOfTrack\28\29\20const can change the state due to initial scan
[asyncify] Video::VideoDecoder::setDitheringPalette\28unsigned\20char\20const*\29 can change the state due to initial scan
[asyncify] Video::VideoDecoder::FixedRateVideoTrack::getNextFrameStartTime\28\29\20const can change the state due to initial scan
[asyncify] Video::VideoDecoder::FixedRateVideoTrack::getFrameTime\28unsigned\20int\29\20const can change the state due to initial scan
[asyncify] [asyncify] Video::VideoDecoder::FixedRateVideoTrack::getDuration\28\29\20const can change the state due to initial scan
[asyncify] Video::VideoDecoder::FixedRateVideoTrack::getFrameAtTime\28Audio::Timestamp\20const&\29\20const can change the state due to initial scan
[asyncify] Video::VideoDecoder::AudioTrack::endOfTrack\28\29\20const can change the state due to initial scan
[asyncify] Video::VideoDecoder::AudioTrack::stop\28\29 can change the state due to initial scan
[asyncify] Video::VideoDecoder::AudioTrack::setMute\28bool\29 can change the state due to initial scan
[asyncify] Video::VideoDecoder::AudioTrack::pauseIntern\28bool\29 can change the state due to initial scan
[asyncify] [asyncify] Video::VideoDecoder::RewindableAudioTrack::getAudioStream\28\29\20const can change the state due to initial scan
[asyncify] Video::VideoDecoder::SeekableAudioTrack::seek\28Audio::Timestamp\20const&\29 can change the state due to initial scan
[asyncify] Video::VideoDecoder::seek\28Audio::Timestamp\20const&\29 can change the state due to initial scan
[asyncify] Video::VideoDecoder::StreamFileAudioTrack::loadFromFile\28Common::String\20const&\29 can change the state due to initial scan
[asyncify] Video::VideoDecoder::getDuration\28\29\20const can change the state due to initial scan
[asyncify] Video::VideoDecoder::addStreamFileTrack\28Common::String\20const&\29 can change the state due to initial scan
[asyncify] Video::VideoDecoder::getAudioTrackCount\28\29\20const can change the state due to initial scan
[asyncify] Video::VideoDecoder::setAudioTrack\28int\29 can change the state due to initial scan
[asyncify] Video::VideoDecoder::StreamFileAudioTrack::~StreamFileAudioTrack\28\29 can change the state due to initial scan
[asyncify] Video::VideoDecoder::startAudioLimit\28Audio::Timestamp\20const&\29 can change the state due to initial scan
[asyncify] Video::VideoDecoder::setEndFrame\28unsigned\20int\29 can change the state due to initial scan
[asyncify] Video::VideoDecoder::endOfVideoTracks\28\29\20const can change the state due to initial scan
[asyncify] Video::VideoDecoder::setEndTime\28Audio::Timestamp\20const&\29 can change the state due to initial scan
[asyncify] Video::BinkDecoder::close\28\29 can change the state due to initial scan
[asyncify] Video::BinkDecoder::loadStream\28Common::SeekableReadStream*\29 can change the state due to initial scan
[asyncify] Video::VideoDecoder::addTrack\28Video::VideoDecoder::Track*\2c\20bool\29 can change the state due to initial scan
[asyncify] Video::BinkDecoder::readNextPacket\28\29 can change the state due to initial scan
[asyncify] Common::BitStreamImpl<Common::SeekableReadStream\2c\20unsigned\20long\20long\2c\2032\2c\20true\2c\20false>::skip\28unsigned\20int\29 can change the state due to initial scan
[asyncify] Video::BinkDecoder::getAudioTrack\28int\29 can change the state due to initial scan
[asyncify] Video::BinkDecoder::VideoFrame::~VideoFrame\28\29 can change the state due to initial scan
[asyncify] Video::BinkDecoder::AudioInfo::~AudioInfo\28\29 can change the state due to initial scan
[asyncify] Video::BinkDecoder::getFrameRate\28\29 can change the state due to initial scan
[asyncify] Video::BinkDecoder::BinkAudioTrack::getRate\28\29 can change the state due to initial scan
[asyncify] Video::BinkDecoder::BinkAudioTrack::skipSamples\28Audio::Timestamp\20const&\29 can change the state due to initial scan
[asyncify] Video::BinkDecoder::seekIntern\28Audio::Timestamp\20const&\29 can change the state due to initial scan
[asyncify] Video::BinkDecoder::BinkAudioTrack::seek\28Audio::Timestamp\20const&\29 can change the state due to initial scan
[asyncify] Common::BitStreamImpl<Common::SeekableReadStream\2c\20unsigned\20long\20long\2c\2032\2c\20true\2c\20false>::getBits\28unsigned\20long\29 can change the state due to initial scan
[asyncify] Common::BitStreamImpl<Common::SeekableReadStream\2c\20unsigned\20long\20long\2c\2032\2c\20true\2c\20false>::getBit\28\29 can change the state due to initial scan
[asyncify] unsigned\20int\20Common::BitStreamImpl<Common::SeekableReadStream\2c\20unsigned\20long\20long\2c\2032\2c\20true\2c\20false>::getBits<10>\28\29 can change the state due to initial scan
[asyncify] Common::Huffman<Common::BitStreamImpl<Common::SeekableReadStream\2c\20unsigned\20long\20long\2c\2032\2c\20true\2c\20false>>::getSymbol\28Common::BitStreamImpl<Common::SeekableReadStream\2c\20unsigned\20long\20long\2c\2032\2c\20true\2c\20false>&\29\20const can change the state due to initial scan
[asyncify] unsigned\20int\20Common::BitStreamImpl<Common::SeekableReadStream\2c\20unsigned\20long\20long\2c\2032\2c\20true\2c\20false>::getBits<11>\28\29 can change the state due to initial scan
[asyncify] unsigned\20int\20Common::BitStreamImpl<Common::SeekableReadStream\2c\20unsigned\20long\20long\2c\2032\2c\20true\2c\20false>::getBits<4>\28\29 can change the state due to initial scan
[asyncify] unsigned\20int\20Common::BitStreamImpl<Common::SeekableReadStream\2c\20unsigned\20long\20long\2c\2032\2c\20true\2c\20false>::getBits<7>\28\29 can change the state due to initial scan
[asyncify] unsigned\20int\20Common::BitStreamImpl<Common::SeekableReadStream\2c\20unsigned\20long\20long\2c\2032\2c\20true\2c\20false>::getBits<2>\28\29 can change the state due to initial scan
[asyncify] unsigned\20int\20Common::BitStreamImpl<Common::SeekableReadStream\2c\20unsigned\20long\20long\2c\2032\2c\20true\2c\20false>::getBits<3>\28\29 can change the state due to initial scan
[asyncify] Video::BinkDecoder::BinkAudioTrack::~BinkAudioTrack\28\29 can change the state due to initial scan
[asyncify] unsigned\20int\20Common::BitStreamImpl<Common::SeekableReadStream\2c\20unsigned\20long\20long\2c\2032\2c\20true\2c\20false>::getBits<8>\28\29 can change the state due to initial scan
[asyncify] unsigned\20int\20Common::BitStreamImpl<Common::SeekableReadStream\2c\20unsigned\20long\20long\2c\2032\2c\20true\2c\20false>::getBits<5>\28\29[asyncify]  can change the state due to initial scan
[asyncify] Image::BitmapDecoder::~BitmapDecoder\28\29 can change the state due to initial scan
[asyncify] Image::BitmapDecoder::destroy\28\29 can change the state due to initial scan
[asyncify] Image::ImageDecoder::hasPalette\28\29\20const can change the state due to initial scan
[asyncify] Image::GIFDecoder::loadStream\28Common::SeekableReadStream&\29 can change the state due to initial scan
[asyncify] Image::BitmapDecoder::loadStream\28Common::SeekableReadStream&\29 can change the state due to initial scan
[asyncify] Image::writeBMP\28Common::WriteStream&\2c\20Graphics::Surface\20const&\29 can change the state due to initial scan
[asyncify] Image::IFFDecoder::loadBitmap\28Common::SeekableReadStream&\29 can change the state due to initial scan
[asyncify] Image::Cel3DODecoder::loadStream\28Common::SeekableReadStream&\29 can change the state due to initial scan
[asyncify] Image::IFFDecoder::loadPalette\28Common::SeekableReadStream&\2c\20unsigned\20int\29 can change the state due to initial scan
[asyncify] Image::IFFDecoder::loadStream\28Common::SeekableReadStream&\29[asyncify] Image::IFFDecoder::loadPaletteRange\28Common::SeekableReadStream&\2c\20unsigned\20int\29 can change the state due to initial scan
[asyncify] Image::IFFDecoder::loadHeader\28Common::SeekableReadStream&\29 can change the state due to initial scan
[asyncify] Image::JPEGDecoder::decodeFrame\28Common::SeekableReadStream&\29 can change the state due to initial scan
[asyncify] non-virtual\20thunk\20to\20Image::JPEGDecoder::decodeFrame\28Common::SeekableReadStream&\29 can change the state due to initial scan
[asyncify] Image::\28anonymous\20namespace\29::outputMessage\28jpeg_common_struct*\29 can change the state due to initial scan
[asyncify] Image::\28anonymous\20namespace\29::skipInputData\28jpeg_decompress_struct*\2c\20long\29 can change the state due to initial scan
[asyncify] Image::\28anonymous\20namespace\29::errorExit\28jpeg_common_struct*\29 can change the state due to initial scan
[asyncify] Image::\28anonymous\20namespace\29::fillInputBuffer\28jpeg_decompress_struct*\29 can change the state due to initial scan
[asyncify] Image::JPEGDecoder::loadStream\28Common::SeekableReadStream&\29 can change the state due to initial scan
[asyncify] Image::PCXDecoder::decodeRLE\28Common::SeekableReadStream&\2c\20unsigned\20char*\2c\20unsigned\20int\2c\20bool\29 can change the state due to initial scan
[asyncify] Image::PICTDecoder::o_txFace\28Common::SeekableReadStream&\29 can change the state due to initial scan
[asyncify] Image::PICTDecoder::o_txFont\28Common::SeekableReadStream&\29 can change the state due to initial scan
[asyncify] Image::PICTDecoder::o_pnSize\28Common::SeekableReadStream&\29 can change the state due to initial scan
[asyncify] [asyncify] Image::PICTDecoder::o_clip\28Common::SeekableReadStream&\29 can change the state due to initial scan
[asyncify] Image::PCXDecoder::loadStream\28Common::SeekableReadStream&\29 can change the state due to initial scan
[asyncify] Image::PICTDecoder::o_versionOp\28Common::SeekableReadStream&\29 can change the state due to initial scan
[asyncify] Image::PICTDecoder::o_longText\28Common::SeekableReadStream&\29 can change the state due to initial scan
[asyncify] Image::PICTDecoder::o_longComment\28Common::SeekableReadStream&\29 can change the state due to initial scan
[asyncify] Image::PICTDecoder::o_txRatio\28Common::SeekableReadStream&\29 can change the state due to initial scan
[asyncify] Image::PICTDecoder::o_headerOp\28Common::SeekableReadStream&\29 can change the state due to initial scan
[asyncify] Image::PICTDecoder::skipBitsRect\28Common::SeekableReadStream&\2c\20bool\29 can change the state due to initial scan
[asyncify] Image::PICTDecoder::decodeCompressedQuickTime\28Common::SeekableReadStream&\29 can change the state due to initial scan
[asyncify] Image::PICTDecoder::unpackBitsLine\28unsigned\20char*\2c\20unsigned\20int\2c\20Common::SeekableReadStream*\2c\20unsigned\20char\2c\20unsigned\20char\29 can change the state due to initial scan
[asyncify] Image::PICTDecoder::loadStream\28Common::SeekableReadStream&\29 can change the state due to initial scan
[asyncify] Image::PICTDecoder::readPixMap\28Common::SeekableReadStream&\2c\20bool\29 can change the state due to initial scan
[asyncify] Image::pngWriteToStream\28png_struct_def*\2c\20unsigned\20char*\2c\20unsigned\20long\29[asyncify] Image::pngReadFromStream\28png_struct_def*\2c\20unsigned\20char*\2c\20unsigned\20long\29 can change the state due to initial scan
[asyncify] Image::pngFlushStream\28png_struct_def*\29 can change the state due to initial scan
[asyncify] Image::PICTDecoder::unpackBitsRect\28Common::SeekableReadStream&\2c\20bool\29 can change the state due to initial scan
[asyncify] Image::TGADecoder::loadStream\28Common::SeekableReadStream&\29 can change the state due to initial scan
[asyncify] Image::TGADecoder::readHeader\28Common::SeekableReadStream&\2c\20unsigned\20char&\2c\20unsigned\20char&\29 can change the state due to initial scan
[asyncify] Image::PNGDecoder::loadStream\28Common::SeekableReadStream&\29 can change the state due to initial scan
[asyncify] Image::TGADecoder::readDataColorMapped\28Common::SeekableReadStream&\2c\20unsigned\20char\2c\20unsigned\20char\29 can change the state due to initial scan
[asyncify] Image::TGADecoder::readColorMap\28Common::SeekableReadStream&\2c\20unsigned\20char\2c\20unsigned\20char\29 can change the state due to initial scan
[asyncify] Image::TGADecoder::readData\28Common::SeekableReadStream&\2c\20unsigned\20char\2c\20unsigned\20char\29 can change the state due to initial scan
[asyncify] Image::BitmapRawDecoder::decodeFrame\28Common::SeekableReadStream&\29 can change the state due to initial scan
[asyncify] Image::TGADecoder::readDataRLE\28Common::SeekableReadStream&\2c\20unsigned\20char\2c\20unsigned\20char\29 can change the state due to initial scan
[asyncify] Image::CinepakDecoder::CinepakDecoder\28int\29 can change the state due to initial scan
[asyncify] Image::CinepakDecoder::decodeFrame\28Common::SeekableReadStream&\29 can change the state due to initial scan
[asyncify] [asyncify] Image::CDToonsDecoder::decodeFrame\28Common::SeekableReadStream&\29[asyncify] Image::CinepakDecoder::loadCodebook\28Common::SeekableReadStream&\2c\20unsigned\20short\2c\20unsigned\20char\2c\20unsigned\20char\2c\20unsigned\20int\29 can change the state due to initial scan
[asyncify] Image::CinepakDecoder::ditherVectors\28Common::SeekableReadStream&\2c\20unsigned\20short\2c\20unsigned\20char\2c\20unsigned\20int\29 can change the state due to initial scan
[asyncify] Image::HLZDecoder::decodeFrameInPlace\28Common::SeekableReadStream&\2c\20unsigned\20int\2c\20unsigned\20char*\29 can change the state due to initial scan
[asyncify] Image::CinepakDecoder::decodeVectors\28Common::SeekableReadStream&\2c\20unsigned\20short\2c\20unsigned\20char\2c\20unsigned\20int\29 can change the state due to initial scan
[asyncify] Image::HNM6::DecoderImpl::decodeFrame\28Common::SeekableReadStream&\29 can change the state due to initial scan
[asyncify] Image::Indeo3Decoder::Indeo3Decoder\28unsigned\20short\2c\20unsigned\20short\2c\20unsigned\20int\29 can change the state due to initial scan
[asyncify] Image::Indeo3Decoder::isIndeo3\28Common::SeekableReadStream&\29 can change the state due to initial scan
[asyncify] Image::Indeo3Decoder::decodeFrame\28Common::SeekableReadStream&\29 can change the state due to initial scan
[asyncify] Image::Indeo4Decoder::isIndeo4\28Common::SeekableReadStream&\29 can change the state due to initial scan
[asyncify] Image::Indeo4Decoder::decodeFrame\28Common::SeekableReadStream&\29 can change the state due to initial scan
[asyncify] Image::Indeo5Decoder::isIndeo5\28Common::SeekableReadStream&\29 can change the state due to initial scan
[asyncify] Image::Indeo5Decoder::decodeFrame\28Common::SeekableReadStream&\29 can change the state due to initial scan
[asyncify] Image::MJPEGDecoder::MJPEGDecoder\28\29 can change the state due to initial scan
[asyncify] Image::JYV1Decoder::decodeFrame\28Common::SeekableReadStream&\29 can change the state due to initial scan
[asyncify] Image::MJPEGDecoder::decodeFrame\28Common::SeekableReadStream&\29 can change the state due to initial scan
[asyncify] Image::MSRLEDecoder::decode8\28Common::SeekableReadStream&\29 can change the state due to initial scan
[asyncify] Image::MSRLE4Decoder::decode4\28Common::SeekableReadStream&\29 can change the state due to initial scan
[asyncify] Image::MSVideo1Decoder::decode8\28Common::SeekableReadStream&\29 can change the state due to initial scan
[asyncify] Image::QTRLEDecoder::decode1\28Common::SeekableReadStream&\2c\20unsigned\20int\2c\20unsigned\20int\29 can change the state due to initial scan
[asyncify] Image::QTRLEDecoder::decode8\28Common::SeekableReadStream&\2c\20unsigned\20int\2c\20unsigned\20int\29 can change the state due to initial scan
[asyncify] Image::MSVideo1Decoder::decode16\28Common::SeekableReadStream&\29 can change the state due to initial scan
[asyncify] Image::QTRLEDecoder::decode16\28Common::SeekableReadStream&\2c\20unsigned\20int\2c\20unsigned\20int\29 can change the state due to initial scan
[asyncify] Image::QTRLEDecoder::decode2_4\28Common::SeekableReadStream&\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20char\29 can change the state due to initial scan
[asyncify] Image::QTRLEDecoder::decode24\28Common::SeekableReadStream&\2c\20unsigned\20int\2c\20unsigned\20int\29 can change the state due to initial scan
[asyncify] Image::QTRLEDecoder::dither24\28Common::SeekableReadStream&\2c\20unsigned\20int\2c\20unsigned\20int\29 can change the state due to initial scan
[asyncify] Image::QTRLEDecoder::createSurface\28\29 can change the state due to initial scan
[asyncify] Image::QTRLEDecoder::decode32\28Common::SeekableReadStream&\2c\20unsigned\20int\2c\20unsigned\20int\29 can change the state due to initial scan
[asyncify] Image::QTRLEDecoder::setDither\28Image::Codec::DitherType\2c\20unsigned\20char\20const*\29 can change the state due to initial scan
[asyncify] Image::QTRLEDecoder::decodeFrame\28Common::SeekableReadStream&\29 can change the state due to initial scan
[asyncify] Image::RPZADecoder::setDither\28Image::Codec::DitherType\2c\20unsigned\20char\20const*\29 can change the state due to initial scan
[asyncify] Image::RPZADecoder::decodeFrame\28Common::SeekableReadStream&\29 can change the state due to initial scan
[asyncify] Common::BitStreamImpl<Common::SeekableReadStream\2c\20unsigned\20long\20long\2c\2032\2c\20false\2c\20true>::skip\28unsigned\20int\29 can change the state due to initial scan
[asyncify] Common::BitStreamImpl<Common::SeekableReadStream\2c\20unsigned\20long\20long\2c\2032\2c\20false\2c\20true>::getBit\28\29 can change the state due to initial scan
[asyncify] Image::SVQ1Decoder::decodeFrame\28Common::SeekableReadStream&\29 can change the state due to initial scan
[asyncify] Common::Huffman<Common::BitStreamImpl<Common::SeekableReadStream\2c\20unsigned\20long\20long\2c\2032\2c\20false\2c\20true>>::getSymbol\28Common::BitStreamImpl<Common::SeekableReadStream\2c\20unsigned\20long\20long\2c\2032\2c\20false\2c\20true>&\29\20const can change the state due to initial scan
[asyncify] Common::BitStreamImpl<Common::SeekableReadStream\2c\20unsigned\20long\20long\2c\2032\2c\20false\2c\20true>::getBits\28unsigned\20long\29 can change the state due to initial scan
[asyncify] Image::SMCDecoder::decodeFrame\28Common::SeekableReadStream&\29 can change the state due to initial scan
[asyncify] Image::XanDecoder::decodeFrame\28Common::SeekableReadStream&\29 can change the state due to initial scan
[asyncify] Image::TrueMotion1Decoder::decodeHeader\28Common::SeekableReadStream&\29 can change the state due to initial scan
[asyncify] Image::XanDecoder::decodeFrameType0\28Common::SeekableReadStream&\29 can change the state due to initial scan
[asyncify] Image::XanDecoder::decodeFrameType1\28Common::SeekableReadStream&\29 can change the state due to initial scan
[asyncify] Image::XanDecoder::decompressLuma\28Common::SeekableReadStream&\29 can change the state due to initial scan
[asyncify] Image::_unpack\28Common::SeekableReadStream&\2c\20unsigned\20char*\2c\20int\29 can change the state due to initial scan
[asyncify] Image::XanDecoder::decodeChroma\28Common::SeekableReadStream&\2c\20int\29 can change the state due to initial scan
[asyncify] Image::Indeo::IndeoDecoderBase::IndeoDecoderBase\28unsigned\20short\2c\20unsigned\20short\2c\20unsigned\20int\29 can change the state due to initial scan
[asyncify] Image::Indeo::IndeoDecoderBase::decodeIndeoFrame\28\29 can change the state due to initial scan
[asyncify] Image::Indeo::IndeoDecoderBase::decode_band\28Image::Indeo::IVIBandDesc*\29 can change the state due to initial scan
[asyncify] Image::Indeo::IndeoDecoderBase::iviMc\28Image::Indeo::IVIBandDesc*\2c\20void\20\28*\29\28short*\2c\20short\20const*\2c\20unsigned\20int\2c\20int\29\2c\20void\20\28*\29\28short*\2c\20short\20const*\2c\20short\20const*\2c\20unsigned\20int\2c\20int\2c\20int\29\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\29 can change the state due to initial scan
[asyncify] Image::Indeo::IndeoDecoderBase::iviDcTransform\28Image::Indeo::IVIBandDesc*\2c\20int*\2c\20int\2c\20int\29 can change the state due to initial scan
[asyncify] Image::Indeo::IndeoDecoderBase::decodeBlocks\28Image::Indeo::GetBits*\2c\20Image::Indeo::IVIBandDesc*\2c\20Image::Indeo::IVITile*\29 can change the state due to initial scan
[asyncify] Image::Indeo::IndeoDecoderBase::decodeCodedBlocks\28Image::Indeo::GetBits*\2c\20Image::Indeo::IVIBandDesc*\2c\20void\20\28*\29\28short*\2c\20short\20const*\2c\20unsigned\20int\2c\20int\29\2c\20void\20\28*\29\28short*\2c\20short\20const*\2c\20short\20const*\2c\20unsigned\20int\2c\20int\2c\20int\29\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int\2c\20int\29 can change the state due to initial scan
[asyncify] Graphics::CursorManager::showMouse\28bool\29 can change the state due to initial scan
[asyncify] Graphics::CursorManager::pushCursor\28void\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20int\2c\20bool\2c\20Graphics::PixelFormat\20const*\29 can change the state due to initial scan
[asyncify] Graphics::CursorManager::popCursor\28\29 can change the state due to initial scan
[asyncify] Graphics::CursorManager::popAllCursors\28\29 can change the state due to initial scan
[asyncify] Graphics::CursorManager::replaceCursor\28void\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20int\2c\20bool\2c\20Graphics::PixelFormat\20const*\29 can change the state due to initial scan
[asyncify] Graphics::CursorManager::replaceCursor\28Graphics::Cursor\20const*\29[asyncify] Graphics::CursorManager::pushCursorPalette\28unsigned\20char\20const*\2c\20unsigned\20int\2c\20unsigned\20int\29 can change the state due to initial scan
[asyncify] Graphics::CursorManager::disableCursorPalette\28bool\29 can change the state due to initial scan
[asyncify] Graphics::CursorManager::replaceCursorPalette\28unsigned\20char\20const*\2c\20unsigned\20int\2c\20unsigned\20int\29[asyncify] Graphics::CursorManager::supportsCursorPalettes\28\29 can change the state due to initial scan
[asyncify] Graphics::CursorManager::popCursorPalette\28\29 can change the state due to initial scan
[asyncify] Graphics::Font::getBoundingBox\28unsigned\20int\29\20const can change the state due to initial scan
[asyncify] Graphics::Font::getStringWidth\28Common::String\20const&\29\20const can change the state due to initial scan
[asyncify] Graphics::Font::getStringWidth\28Common::U32String\20const&\29\20const can change the state due to initial scan
[asyncify] Graphics::Font::drawChar\28Graphics::ManagedSurface*\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20int\29\20const can change the state due to initial scan
[asyncify] Graphics::Font::getBoundingBox\28Common::U32String\20const&\2c\20int\2c\20int\2c\20int\2c\20Graphics::TextAlign\2c\20int\2c\20bool\29\20const can change the state due to initial scan
[asyncify] Graphics::Font::drawString\28Graphics::Surface*\2c\20Common::String\20const&\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int\2c\20Graphics::TextAlign\2c\20int\2c\20bool\29\20const can change the state due to initial scan
[asyncify] Common::String\20Graphics::\28anonymous\20namespace\29::handleEllipsis<Common::String>\28Graphics::Font\20const&\2c\20Common::String\20const&\2c\20int\29 can change the state due to initial scan
[asyncify] Graphics::Font::drawString\28Graphics::Surface*\2c\20Common::U32String\20const&\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int\2c\20Graphics::TextAlign\2c\20int\2c\20bool\29\20const can change the state due to initial scan
[asyncify] Graphics::Font::drawString\28Graphics::ManagedSurface*\2c\20Common::U32String\20const&\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int\2c\20Graphics::TextAlign\2c\20int\2c\20bool\29\20const can change the state due to initial scan
[asyncify] Graphics::Font::drawString\28Graphics::ManagedSurface*\2c\20Common::String\20const&\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int\2c\20Graphics::TextAlign\2c\20int\2c\20bool\29\20const can change the state due to initial scan
[asyncify] Graphics::Font::getBoundingBox\28Common::String\20const&\2c\20int\2c\20int\2c\20int\2c\20Graphics::TextAlign\2c\20int\2c\20bool\29\20const can change the state due to initial scan
[asyncify] Common::U32String\20Graphics::\28anonymous\20namespace\29::handleEllipsis<Common::U32String>\28Graphics::Font\20const&\2c\20Common::U32String\20const&\2c\20int\29 can change the state due to initial scan
[asyncify] Graphics::Font::wordWrapText\28Common::String\20const&\2c\20int\2c\20Common::Array<Common::String>&\2c\20int\2c\20unsigned\20int\29\20const can change the state due to initial scan
[asyncify] Graphics::FontManager::~FontManager\28\29 can change the state due to initial scan
[asyncify] Graphics::Font::wordWrapText\28Common::U32String\20const&\2c\20int\2c\20Common::Array<Common::U32String>&\2c\20int\2c\20unsigned\20int\29\20const can change the state due to initial scan
[asyncify] Graphics::FontManager::setFont\28Graphics::FontManager::FontUsage\2c\20Graphics::BdfFont\20const*\29 can change the state due to initial scan
[asyncify] Graphics::FontManager::removeFontName\28Common::String\20const&\29 can change the state due to initial scan
[asyncify] Graphics::AmigaFont::AmigaFont\28Common::SeekableReadStream*\29 can change the state due to initial scan
[asyncify] Graphics::BdfFont::cacheFontData\28Graphics::BdfFont\20const&\2c\20Common::String\20const&\29 can change the state due to initial scan
[asyncify] Graphics::BdfFont::loadFromCache\28Common::SeekableReadStream&\29 can change the state due to initial scan
[asyncify] Graphics::BdfFont::loadFont\28Common::SeekableReadStream&\29 can change the state due to initial scan
[asyncify] Graphics::MacFontFamily::load\28Common::SeekableReadStream&\29 can change the state due to initial scan
[asyncify] Graphics::MacFONTFont::loadFont\28Common::SeekableReadStream&\2c\20Graphics::MacFontFamily*\2c\20int\2c\20int\29 can change the state due to initial scan
[asyncify] Graphics::shutdownTTF\28\29 can change the state due to initial scan
[asyncify] Graphics::TTFFont::load\28Common::SeekableReadStream&\2c\20int\2c\20Graphics::TTFSizeMode\2c\20unsigned\20int\2c\20Graphics::TTFRenderMode\2c\20unsigned\20int\20const*\2c\20bool\29 can change the state due to initial scan
[asyncify] Graphics::TTFFont::readPointSizeFromVDMXTable\28int\29\20const can change the state due to initial scan
[asyncify] Graphics::TTFFont::drawChar\28Graphics::ManagedSurface*\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20int\29\20const can change the state due to initial scan
[asyncify] Graphics::loadTTFFont\28Common::SeekableReadStream&\2c\20int\2c\20Graphics::TTFSizeMode\2c\20unsigned\20int\2c\20Graphics::TTFRenderMode\2c\20unsigned\20int\20const*\2c\20bool\29 can change the state due to initial scan
[asyncify] Graphics::MacFONTFont::scaleFont\28Graphics::MacFONTFont\20const*\2c\20int\2c\20int\29 can change the state due to initial scan
[asyncify] Graphics::loadTTFFontFromArchive\28Common::String\20const&\2c\20int\2c\20Graphics::TTFSizeMode\2c\20unsigned\20int\2c\20Graphics::TTFRenderMode\2c\20unsigned\20int\20const*\29 can change the state due to initial scan
[asyncify] Graphics::WinFont::loadFromFON\28Common::String\20const&\2c\20Graphics::WinFontDirEntry\20const&\29 can change the state due to initial scan
[asyncify] Graphics::findTTFace\28Common::Array<Common::String>\20const&\2c\20Common::U32String\20const&\2c\20bool\2c\20bool\2c\20int\2c\20unsigned\20int\2c\20Graphics::TTFRenderMode\2c\20unsigned\20int\20const*\29 can change the state due to initial scan
[asyncify] Graphics::WinFont::loadFromEXE\28Common::WinResources*\2c\20Common::String\20const&\2c\20Graphics::WinFontDirEntry\20const&\29 can change the state due to initial scan
[asyncify] Graphics::WinFont::getFontIndex\28Common::SeekableReadStream&\2c\20Graphics::WinFontDirEntry\20const&\29 can change the state due to initial scan
[asyncify] Graphics::WinFont::loadFromFON\28Common::SeekableReadStream&\2c\20Graphics::WinFontDirEntry\20const&\29 can change the state due to initial scan
[asyncify] Graphics::WinFont::getFONFontName\28Common::SeekableReadStream&\29 can change the state due to initial scan
[asyncify] Graphics::FrameLimiter::startFrame\28\29 can change the state due to initial scan
[asyncify] Graphics::FontKorean::createFont\28char\20const*\29 can change the state due to initial scan
[asyncify] Graphics::FontKorean::drawChar\28Graphics::Surface&\2c\20unsigned\20short\2c\20int\2c\20int\2c\20unsigned\20int\2c\20unsigned\20int\29\20const can change the state due to initial scan
[asyncify] Graphics::FontKoreanBase::setDrawingMode\28Graphics::FontKorean::DrawingMode\29 can change the state due to initial scan
[asyncify] Graphics::FontKoreanBase::toggleFlippedMode\28bool\29 can change the state due to initial scan
[asyncify] Graphics::FontKoreanBase::getCharWidth\28unsigned\20short\29\20const can change the state due to initial scan
[asyncify] [asyncify] Graphics::FrameLimiter::delayBeforeSwap\28\29Graphics::FontKoreanWansung::englishLoadData\28char\20const*\29 can change the state due to initial scan
[asyncify] Graphics::FrameLimiter::FrameLimiter\28OSystem*\2c\20unsigned\20int\29 can change the state due to initial scan
[asyncify] [asyncify] [asyncify] Graphics::WinFont::loadFromFNT\28Common::SeekableReadStream&\29 can change the state due to initial scan
[asyncify] Graphics::FontKoreanBase::drawChar\28void*\2c\20unsigned\20short\2c\20int\2c\20int\2c\20unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\29\20const can change the state due to initial scan
[asyncify] Graphics::FontKoreanSVM::loadData\28char\20const*\29 can change the state due to initial scan
[asyncify] Graphics::scaleUp\28Graphics::MarginedBitmap<unsigned\20char>\20const&\2c\20int\2c\20int\2c\20Graphics::RowWriter&\29 can change the state due to initial scan
[asyncify] Graphics::scaleDown\28Graphics::MarginedBitmap<unsigned\20char>\20const&\2c\20unsigned\20char\2c\20int\2c\20int\2c\20Graphics::RowWriter&\29 can change the state due to initial scan
[asyncify] Graphics::copyRows\28int\2c\20Graphics::RowReader&\2c\20Graphics::RowWriter&\29 can change the state due to initial scan
[asyncify] Graphics::larryScale\28int\2c\20int\2c\20unsigned\20char\2c\20Graphics::RowReader&\2c\20int\2c\20int\2c\20Graphics::RowWriter&\29 can change the state due to initial scan
[asyncify] Graphics::MacCursor::readFromStream\28Common::SeekableReadStream&\2c\20bool\2c\20unsigned\20char\2c\20bool\29 can change the state due to initial scan
[asyncify] Graphics::MacCursor::readFromCURS\28Common::SeekableReadStream&\2c\20unsigned\20char\29 can change the state due to initial scan
[asyncify] Graphics::MacWindowManager::cleanupDataBundle\28\29 can change the state due to initial scan
[asyncify] Graphics::MacWindowManager::getFile\28Common::String\20const&\29 can change the state due to initial scan
[asyncify] Graphics::MacWindowManager::getBorderFile\28unsigned\20char\2c\20unsigned\20int\29 can change the state due to initial scan
[asyncify] Graphics::MacButton::MacButton\28Graphics::MacButtonType\2c\20Graphics::TextAlign\2c\20Graphics::MacWidget*\2c\20int\2c\20int\2c\20int\2c\20int\2c\20Graphics::MacWindowManager*\2c\20Common::U32String\20const&\2c\20Graphics::MacFont\20const*\2c\20int\2c\20int\29 can change the state due to initial scan
[asyncify] Graphics::MacButton::init\28\29 can change the state due to initial scan
[asyncify] Graphics::MacButton::invertInner\28\29 can change the state due to initial scan
[asyncify] Graphics::MacButton::processEvent\28Common::Event&\29 can change the state due to initial scan
[asyncify] Graphics::MacDialog::MacDialog\28Graphics::ManagedSurface*\2c\20Graphics::MacWindowManager*\2c\20int\2c\20Graphics::MacText*\2c\20int\2c\20Common::Array<Graphics::MacDialogButton*>*\2c\20unsigned\20int\29 can change the state due to initial scan
[asyncify] Graphics::MacDialog::~MacDialog\28\29 can change the state due to initial scan
[asyncify] Graphics::MacCursor::readFromCRSR\28Common::SeekableReadStream&\2c\20bool\2c\20unsigned\20char\29 can change the state due to initial scan
[asyncify] Graphics::MacDialog::paint\28\29 can change the state due to initial scan
[asyncify] Graphics::MacFontManager::loadFonts\28\29 can change the state due to initial scan
[asyncify] Graphics::MacDialog::run\28\29 can change the state due to initial scan
[asyncify] Graphics::MacFontManager::loadJapaneseFonts\28\29 can change the state due to initial scan
[asyncify] Graphics::MacFontManager::loadFonts\28Common::MacResManager*\29 can change the state due to initial scan
[asyncify] Graphics::MacFontManager::loadFontsBDF\28\29 can change the state due to initial scan
[asyncify] Graphics::MacFontManager::loadWindowsFont\28Common::String\29 can change the state due to initial scan
[asyncify] Graphics::MacFontManager::~MacFontManager\28\29 can change the state due to initial scan
[asyncify] Graphics::MacFontManager::generateTTFFont\28Graphics::MacFont&\2c\20Common::SeekableReadStream*\29 can change the state due to initial scan
[asyncify] Graphics::MacMenu::~MacMenu\28\29 can change the state due to initial scan
[asyncify] Graphics::MacMenu::MacMenu\28int\2c\20Common::Rect\20const&\2c\20Graphics::MacWindowManager*\29 can change the state due to initial scan
[asyncify] Graphics::readUnicodeString\28Common::SeekableReadStream*\29 can change the state due to initial scan
[asyncify] Graphics::MacMenu::createMenuFromPEexe\28Common::PEResources*\2c\20Graphics::MacWindowManager*\29 can change the state due to initial scan
[asyncify] Graphics::MacMenu::readMenuFromResource\28Common::SeekableReadStream*\29 can change the state due to initial scan
[asyncify] Graphics::MacMenu::calcDimensions\28\29 can change the state due to initial scan
[asyncify] Graphics::MacMenu::loadMenuBarResource\28Common::MacResManager*\2c\20unsigned\20short\29 can change the state due to initial scan
[asyncify] Graphics::underlineAccelerator\28Graphics::ManagedSurface*\2c\20Graphics::Font\20const*\2c\20Common::UnicodeBiDiText\20const&\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int\29 can change the state due to initial scan
[asyncify] Graphics::MacMenu::loadMenuResource\28Common::MacResManager*\2c\20unsigned\20short\29 can change the state due to initial scan
[asyncify] Graphics::MacMenu::drawSubMenuArrow\28Graphics::ManagedSurface*\2c\20int\2c\20int\2c\20int\29 can change the state due to initial scan
[asyncify] Graphics::MacMenu::draw\28Graphics::ManagedSurface*\2c\20bool\29 can change the state due to initial scan
[asyncify] Graphics::MacMenu::processEvent\28Common::Event&\29 can change the state due to initial scan
[asyncify] Graphics::MacMenu::processMenuShortCut\28unsigned\20char\2c\20unsigned\20short\29 can change the state due to initial scan
[asyncify] Graphics::MacMenu::closeMenu\28\29 can change the state due to initial scan
[asyncify] Graphics::MacMenu::mouseRelease\28int\2c\20int\29 can change the state due to initial scan
[asyncify] Graphics::MacMenu::eventLoop\28\29 can change the state due to initial scan
[asyncify] Graphics::MacMenu::mouseClick\28int\2c\20int\29 can change the state due to initial scan
[asyncify] Graphics::MacMenu::renderSubmenu\28Graphics::MacMenuSubMenu*\2c\20bool\29 can change the state due to initial scan
[asyncify] Graphics::MacText::init\28\29 can change the state due to initial scan
[asyncify] [asyncify] Graphics::MacText::recalcDims\28\29[asyncify] Graphics::MacText::updateCursorPos\28\29 can change the state due to initial scan
[asyncify] Graphics::MacText::render\28int\2c\20int\29 can change the state due to initial scan
[asyncify] Graphics::MacText::MacText\28Common::U32String\20const&\2c\20Graphics::MacWindowManager*\2c\20Graphics::Font\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20Graphics::TextAlign\2c\20int\2c\20bool\29 can change the state due to initial scan
[asyncify] Graphics::MacText::getLineWidth\28int\2c\20bool\2c\20int\29 can change the state due to initial scan
[asyncify] Graphics::MacText::~MacText\28\29 can change the state due to initial scan
[asyncify] Graphics::MacText::setTextChunks\28int\2c\20int\2c\20int\2c\20void\20\28*\29\28Graphics::MacFontRun&\2c\20int\29\29 can change the state due to initial scan
[asyncify] Graphics::MacText::splitString\28Common::U32String\20const&\2c\20int\29 can change the state due to initial scan
[asyncify] Graphics::MacText::setActive\28bool\29 can change the state due to initial scan
[asyncify] Graphics::MacText::undrawCursor\28\29 can change the state due to initial scan
[asyncify] Graphics::MacText::setEditable\28bool\29 can change the state due to initial scan
[asyncify] Graphics::MacText::render\28int\2c\20int\2c\20int\29 can change the state due to initial scan
[asyncify] Graphics::MacText::resize\28int\2c\20int\29 can change the state due to initial scan
[asyncify] Graphics::MacText::appendText\28Common::U32String\20const&\2c\20Graphics::Font\20const*\2c\20unsigned\20short\2c\20unsigned\20short\2c\20unsigned\20short\2c\20bool\29 can change the state due to initial scan
[asyncify] Graphics::MacText::removeLastLine\28\29 can change the state due to initial scan
[asyncify] Graphics::MacText::draw\28Graphics::ManagedSurface*\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\29 can change the state due to initial scan
[asyncify] Graphics::MacText::draw\28bool\29 can change the state due to initial scan
[asyncify] Graphics::MacText::draw\28Graphics::ManagedSurface*\2c\20bool\29 can change the state due to initial scan
[asyncify] Graphics::MacText::processEvent\28Common::Event&\29 can change the state due to initial scan
[asyncify] Graphics::MacText::scroll\28int\29 can change the state due to initial scan
[asyncify] Graphics::MacText::startMarking\28int\2c\20int\29 can change the state due to initial scan
[asyncify] Graphics::MacText::getMouseChar\28int\2c\20int\29 can change the state due to initial scan
[asyncify] Graphics::MacText::updateTextSelection\28int\2c\20int\29 can change the state due to initial scan
[asyncify] Graphics::MacText::getMouseLine\28int\2c\20int\29 can change the state due to initial scan
[asyncify] Graphics::MacText::getMouseItem\28int\2c\20int\29 can change the state due to initial scan
[asyncify] Graphics::MacText::getMouseWord\28int\2c\20int\29 can change the state due to initial scan
[asyncify] Graphics::MacTextWindow::init\28bool\29 can change the state due to initial scan
[asyncify] Graphics::MacTextWindow::resize\28int\2c\20int\2c\20bool\29 can change the state due to initial scan
[asyncify] Graphics::MacTextWindow::setDimensions\28Common::Rect\20const&\29 can change the state due to initial scan
[asyncify] Graphics::MacTextWindow::calcScrollBar\28\29 can change the state due to initial scan
[asyncify] Graphics::MacTextWindow::appendText\28Common::U32String\20const&\2c\20Graphics::MacFont\20const*\2c\20bool\29 can change the state due to initial scan
[asyncify] Graphics::MacTextWindow::draw\28Graphics::ManagedSurface*\2c\20bool\29 can change the state due to initial scan
[asyncify] Graphics::MacTextWindow::~MacTextWindow\28\29 can change the state due to initial scan
[asyncify] Graphics::MacTextWindow::draw\28bool\29 can change the state due to initial scan
[asyncify] Graphics::MacTextWindow::drawSelection\28\29 can change the state due to initial scan
[asyncify] Graphics::MacTextWindow::startMarking\28int\2c\20int\29 can change the state due to initial scan
[asyncify] Graphics::MacTextWindow::scroll\28int\29 can change the state due to initial scan
[asyncify] Graphics::MacTextWindow::updateTextSelection\28int\2c\20int\29 can change the state due to initial scan
[asyncify] Graphics::MacTextWindow::processEvent\28Common::Event&\29 can change the state due to initial scan
[asyncify] Graphics::MacWidget::removeWidget\28Graphics::MacWidget*\2c\20bool\29 can change the state due to initial scan
[asyncify] Graphics::MacWidget::~MacWidget\28\29 can change the state due to initial scan
[asyncify] Graphics::MacWidget::findEventHandler\28Common::Event&\2c\20int\2c\20int\29 can change the state due to initial scan
[asyncify] Graphics::MacWindow::setDimensions\28Common::Rect\20const&\29 can change the state due to initial scan
[asyncify] Graphics::MacWindow::resize\28int\2c\20int\2c\20bool\29 can change the state due to initial scan
[asyncify] Graphics::MacWindow::draw\28Graphics::ManagedSurface*\2c\20bool\29 can change the state due to initial scan
[asyncify] Graphics::MacWindow::drawBox\28Graphics::ManagedSurface*\2c\20int\2c\20int\2c\20int\2c\20int\29 can change the state due to initial scan
[asyncify] Graphics::MacWindow::fillRect\28Graphics::ManagedSurface*\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\29 can change the state due to initial scan
[asyncify] Graphics::MacWindow::loadWin95Border\28Common::String\20const&\2c\20unsigned\20int\29 can change the state due to initial scan
[asyncify] Graphics::MacWindow::processEvent\28Common::Event&\29 can change the state due to initial scan
[asyncify] Graphics::MacWindowBorder::hasBorder\28unsigned\20int\29 can change the state due to initial scan
[asyncify] Graphics::MacWindowBorder::loadInternalBorder\28unsigned\20int\29 can change the state due to initial scan
[asyncify] Graphics::MacWindowManager::loadDesktop\28\29 can change the state due to initial scan
[asyncify] Graphics::MacWindowManager::MacWindowManager\28unsigned\20int\2c\20Common::Array<unsigned\20char*>*\2c\20Common::Language\29 can change the state due to initial scan
[asyncify] Graphics::MacWindowManager::activateScreenCopy\28\29 can change the state due to initial scan
[asyncify] Graphics::menuTimerHandler\28void*\29 can change the state due to initial scan
[asyncify] Graphics::MacWindowManager::setScreen\28Graphics::ManagedSurface*\29 can change the state due to initial scan
[asyncify] Graphics::MacWindowManager::setScreen\28int\2c\20int\29 can change the state due to initial scan
[asyncify] Graphics::MacWindowManager::resizeScreen\28int\2c\20int\29 can change the state due to initial scan
[asyncify] Graphics::MacWindowManager::~MacWindowManager\28\29 can change the state due to initial scan
[asyncify] Graphics::MacWindowManager::clearHandlingWidgets\28\29 can change the state due to initial scan
[asyncify] Graphics::MacWindowManager::setActiveWindow\28int\29 can change the state due to initial scan
[asyncify] Graphics::MacWindowManager::setActiveWidget\28Graphics::MacWidget*\29 can change the state due to initial scan
[asyncify] Graphics::MacWindowManager::processEvent\28Common::Event&\29 can change the state due to initial scan
[asyncify] Graphics::MacWindowManager::removeMenu\28\29 can change the state due to initial scan
[asyncify] Graphics::MacWindowManager::addMenu\28\29[asyncify]  can change the state due to initial scan
[asyncify] Graphics::MacWindowManager::activateMenu\28\29 can change the state due to initial scan
[asyncify] Graphics::MacWindowManager::setTextInClipboard\28Common::U32String\20const&\29 can change the state due to initial scan
[asyncify] Graphics::MacWindowManager::setDesktopColor\28unsigned\20char\2c\20unsigned\20char\2c\20unsigned\20char\29 can change the state due to initial scan
[asyncify] Graphics::MacWindowManager::getTextFromClipboard\28Common::U32String\20const&\2c\20int*\29 can change the state due to initial scan
[asyncify] Graphics::MacWindowManager::removeMarked\28\29 can change the state due to initial scan
[asyncify] Graphics::MacWindowManager::draw\28\29 can change the state due to initial scan
[asyncify] Graphics::MacWindowManager::renderZoomBox\28bool\29 can change the state due to initial scan
[asyncify] Graphics::MacWindowManager::pushCustomCursor\28Graphics::Cursor\20const*\29 can change the state due to initial scan
[asyncify] Graphics::ManagedSurface::operator=\28Graphics::ManagedSurface\20const&\29 can change the state due to initial scan
[asyncify] Graphics::ManagedSurface::create\28short\2c\20short\2c\20Graphics::PixelFormat\20const&\29 can change the state due to initial scan
[asyncify] Graphics::ManagedSurface::copyFrom\28Graphics::Surface\20const&\29 can change the state due to initial scan
[asyncify] Graphics::ManagedSurface::ManagedSurface\28Graphics::Surface*\2c\20DisposeAfterUse::Flag\29 can change the state due to initial scan
[asyncify] Graphics::ManagedSurface::create\28short\2c\20short\29[asyncify] [asyncify] Graphics::ManagedSurface::clear\28unsigned\20int\29 can change the state due to initial scan
[asyncify] [asyncify]  can change the state due to initial scan
[asyncify] [asyncify] Graphics::ManagedSurface::create\28Graphics::ManagedSurface&\2c\20Common::Rect\20const&\29 can change the state due to initial scan
[asyncify] Graphics::ManagedSurface::transBlitFromInner\28Graphics::Surface\20const&\2c\20Common::Rect\20const&\2c\20Common::Rect\20const&\2c\20unsigned\20int\2c\20bool\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int\20const*\2c\20unsigned\20int\20const*\2c\20Graphics::Surface\20const*\2c\20bool\29 can change the state due to initial scan
[asyncify] glad_gl_get_extensions\28int\2c\20char\20const**\2c\20unsigned\20int*\2c\20char***\29 can change the state due to initial scan
[asyncify] glad_gl_load_GL_KHR_debug\28void\20\28*\20\28*\29\28void*\2c\20char\20const*\29\29\28\29\2c\20void*\29 can change the state due to initial scan
[asyncify] gladLoadGLES1UserPtr can change the state due to initial scan
[asyncify] gladLoadGLES1 can change the state due to initial scan
[asyncify] gladLoadGLES2UserPtr can change the state due to initial scan
[asyncify] gladLoadGLUserPtr can change the state due to initial scan
[asyncify] OpenGL::Context::getGLSLVersion\28\29\20const can change the state due to initial scan
[asyncify] gladLoadGLES2 can change the state due to initial scan
[asyncify] OpenGL::clearGLError\28\29 can change the state due to initial scan
[asyncify] OpenGL::checkGLError\28char\20const*\2c\20char\20const*\2c\20int\29 can change the state due to initial scan
[asyncify] OpenGL::Shader::createDirectShader\28unsigned\20long\2c\20char\20const*\20const*\2c\20unsigned\20int\2c\20Common::String\20const&\29 can change the state due to initial scan
[asyncify] Graphics::ManagedSurface::addDirtyRect\28Common::Rect\20const&\29 can change the state due to initial scan
[asyncify] gladLoadGL can change the state due to initial scan
[asyncify] OpenGL::Shader::createCompatShader\28char\20const*\2c\20unsigned\20int\2c\20Common::String\20const&\2c\20int\29 can change the state due to initial scan
[asyncify] OpenGL::Shader::loadShaderFromFile\28char\20const*\2c\20char\20const*\2c\20unsigned\20int\2c\20int\29 can change the state due to initial scan
[asyncify] OpenGL::Shader::loadShader\28Common::String\20const&\2c\20unsigned\20int\2c\20unsigned\20int\2c\20char\20const*\20const*\29 can change the state due to initial scan
[asyncify] OpenGL::Shader::freeBuffer\28unsigned\20int\29[asyncify]  can change the state due to initial scan
[asyncify] OpenGL::Shader::createBuffer\28unsigned\20int\2c\20long\2c\20void\20const*\2c\20unsigned\20int\29 can change the state due to initial scan
[asyncify] OpenGL::Shader::unbind\28\29 can change the state due to initial scan
[asyncify] OpenGL::Shader::addAttribute\28char\20const*\29 can change the state due to initial scan
[asyncify] Common::BasePtrTrackerDeletionImpl<unsigned\20int\2c\20OpenGL::SharedPtrProgramDeleter>::destructObject\28\29 can change the state due to initial scan
[asyncify] OpenGL::Shader::~Shader\28\29 can change the state due to initial scan
[asyncify] Graphics::frame\28Graphics::ManagedSurface*\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\29 can change the state due to initial scan
[asyncify] Graphics::blacksquareinwhitecircle\28Graphics::ManagedSurface*\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\29 can change the state due to initial scan
[asyncify] Graphics::circleColorNoblend\28Graphics::ManagedSurface*\2c\20double\2c\20double\2c\20double\2c\20int\2c\20bool\29 can change the state due to initial scan
[asyncify] [asyncify] Graphics::drawHLine\28int\2c\20int\2c\20int\2c\20unsigned\20int\2c\20void\20\28*\29\28int\2c\20int\2c\20int\2c\20void*\29\2c\20void*\29 can change the state due to initial scan
[asyncify] Graphics::drawVLine\28int\2c\20int\2c\20int\2c\20unsigned\20int\2c\20void\20\28*\29\28int\2c\20int\2c\20int\2c\20void*\29\2c\20void*\29 can change the state due to initial scan
[asyncify] Graphics::renderPM5544\28int\2c\20int\29 can change the state due to initial scan
[asyncify] Graphics::drawThickLine\28int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int\2c\20void\20\28*\29\28int\2c\20int\2c\20int\2c\20void*\29\2c\20void*\29 can change the state due to initial scan
[asyncify] Graphics::drawFilledRect1\28Common::Rect&\2c\20unsigned\20int\2c\20void\20\28*\29\28int\2c\20int\2c\20int\2c\20void*\29\2c\20void*\29 can change the state due to initial scan
[asyncify] Graphics::drawFilledRect\28Common::Rect&\2c\20unsigned\20int\2c\20void\20\28*\29\28int\2c\20int\2c\20int\2c\20void*\29\2c\20void*\29 can change the state due to initial scan
[asyncify] Graphics::drawThickLine2\28int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int\2c\20void\20\28*\29\28int\2c\20int\2c\20int\2c\20void*\29\2c\20void*\29 can change the state due to initial scan
[asyncify] Graphics::drawRect\28Common::Rect&\2c\20unsigned\20int\2c\20void\20\28*\29\28int\2c\20int\2c\20int\2c\20void*\29\2c\20void*\29 can change the state due to initial scan
[asyncify] Graphics::drawRect1\28Common::Rect&\2c\20unsigned\20int\2c\20void\20\28*\29\28int\2c\20int\2c\20int\2c\20void*\29\2c\20void*\29 can change the state due to initial scan
[asyncify] Graphics::drawPolygonScan\28int*\2c\20int*\2c\20int\2c\20Common::Rect&\2c\20unsigned\20int\2c\20void\20\28*\29\28int\2c\20int\2c\20int\2c\20void*\29\2c\20void*\29 can change the state due to initial scan
[asyncify] Graphics::drawRoundRect1\28Common::Rect&\2c\20int\2c\20unsigned\20int\2c\20bool\2c\20void\20\28*\29\28int\2c\20int\2c\20int\2c\20void*\29\2c\20void*\29 can change the state due to initial scan
[asyncify] Graphics::Renderer::listTypes\28\29 can change the state due to initial scan
[asyncify] Graphics::drawEllipse\28int\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int\2c\20bool\2c\20void\20\28*\29\28int\2c\20int\2c\20int\2c\20void*\29\2c\20void*\29 can change the state due to initial scan
[asyncify] OpenGL::Context::initialize\28OpenGL::ContextType\29 can change the state due to initial scan
[asyncify] Scaler::scale\28unsigned\20char\20const*\2c\20unsigned\20int\2c\20unsigned\20char*\2c\20unsigned\20int\2c\20int\2c\20int\2c\20int\2c\20int\29 can change the state due to initial scan
[asyncify] Graphics::Renderer::getAvailableTypes\28\29 can change the state due to initial scan
[asyncify] SourceScaler::scaleIntern\28unsigned\20char\20const*\2c\20unsigned\20int\2c\20unsigned\20char*\2c\20unsigned\20int\2c\20int\2c\20int\2c\20int\2c\20int\29 can change the state due to initial scan
[asyncify] grabScreen565\28Graphics::Surface*\29[asyncify]  can change the state due to initial scan
[asyncify] Graphics::createScreenShot\28Graphics::Surface&\29 can change the state due to initial scan
[asyncify] Graphics::Screen::updateScreen\28\29 can change the state due to initial scan
[asyncify] Graphics::Screen::update\28\29 can change the state due to initial scan
[asyncify] Graphics::Screen::makeAllDirty\28\29 can change the state due to initial scan
[asyncify] [asyncify] Graphics::Screen::setPalette\28unsigned\20char\20const*\29 can change the state due to initial scan
[asyncify] Graphics::Screen::getPalette\28unsigned\20char*\29 can change the state due to initial scan
[asyncify] Graphics::Screen::setPalette\28unsigned\20char\20const*\2c\20unsigned\20int\2c\20unsigned\20int\29 can change the state due to initial scan
[asyncify] Graphics::Screen::clearPalette\28\29 can change the state due to initial scan
[asyncify] NormalScaler::increaseFactor\28\29 can change the state due to initial scan
[asyncify] NormalScaler::decreaseFactor\28\29 can change the state due to initial scan
[asyncify] Graphics::FontSJIS::drawChar\28Graphics::Surface&\2c\20unsigned\20short\2c\20int\2c\20int\2c\20unsigned\20int\2c\20unsigned\20int\29\20const can change the state due to initial scan
[asyncify] Graphics::FontSJIS::createFont\28Common::Platform\29 can change the state due to initial scan
[asyncify] Graphics::FontSJISBase::setDrawingMode\28Graphics::FontSJIS::DrawingMode\29 can change the state due to initial scan
[asyncify] [asyncify] [asyncify] Graphics::FontTowns::loadData\28\29 can change the state due to initial scan
[asyncify] Graphics::FontSJISBase::toggleFatPrint\28bool\29 can change the state due to initial scan
[asyncify] Graphics::FontSJISBase::getCharWidth\28unsigned\20short\29\20const can change the state due to initial scan
[asyncify] Graphics::FontSjisSVM::loadData\28\29 can change the state due to initial scan
[asyncify] Graphics::FontSJISBase::drawChar\28void*\2c\20unsigned\20short\2c\20int\2c\20int\2c\20unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\29\20const can change the state due to initial scan
[asyncify] nsvg__parseXML\28char*\2c\20void\20\28*\29\28void*\2c\20char\20const*\2c\20char\20const**\29\2c\20void\20\28*\29\28void*\2c\20char\20const*\29\2c\20void\20\28*\29\28void*\2c\20char\20const*\29\2c\20void*\29 can change the state due to initial scan
[asyncify] Graphics::SVGBitmap::SVGBitmap\28Common::SeekableReadStream*\29 can change the state due to initial scan
[asyncify] Graphics::SVGBitmap::~SVGBitmap\28\29 can change the state due to initial scan
[asyncify] Graphics::SVGBitmap::render\28Graphics::ManagedSurface&\2c\20int\2c\20int\29 can change the state due to initial scan
[asyncify] Graphics::checkThumbnailHeader\28Common::SeekableReadStream&\29 can change the state due to initial scan
[asyncify] Graphics::skipThumbnail\28Common::SeekableReadStream&\29 can change the state due to initial scan
[asyncify] Graphics::\28anonymous\20namespace\29::loadHeader\28Common::SeekableReadStream&\2c\20Graphics::\28anonymous\20namespace\29::ThumbnailHeader&\2c\20bool\29 can change the state due to initial scan
[asyncify] Graphics::saveThumbnail\28Common::WriteStream&\2c\20Graphics::Surface\20const&\29 can change the state due to initial scan
[asyncify] Graphics::loadThumbnail\28Common::SeekableReadStream&\2c\20Graphics::Surface*&\2c\20bool\29 can change the state due to initial scan
[asyncify] Graphics::VectorRenderer::drawStep\28Common::Rect\20const&\2c\20Common::Rect\20const&\2c\20Graphics::DrawStep\20const&\2c\20unsigned\20int\29 can change the state due to initial scan
[asyncify] Graphics::VectorRenderer::drawCross\28int\2c\20int\2c\20int\2c\20int\29 can change the state due to initial scan
[asyncify] Graphics::VectorRendererSpec<unsigned\20int>::drawSquare\28int\2c\20int\2c\20int\2c\20int\29 can change the state due to initial scan
[asyncify] Graphics::createRenderer\28int\29 can change the state due to initial scan
[asyncify] Graphics::VectorRendererSpec<unsigned\20int>::drawCircle\28int\2c\20int\2c\20int\29 can change the state due to initial scan
[asyncify] Graphics::VectorRendererSpec<unsigned\20int>::drawRoundedSquare\28int\2c\20int\2c\20int\2c\20int\2c\20int\29 can change the state due to initial scan
[asyncify] Graphics::VectorRendererSpec<unsigned\20int>::drawBeveledSquare\28int\2c\20int\2c\20int\2c\20int\29 can change the state due to initial scan
[asyncify] Graphics::VectorRendererSpec<unsigned\20int>::drawTab\28int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\29 can change the state due to initial scan
[asyncify] Graphics::VectorRendererSpec<unsigned\20int>::drawTriangle\28int\2c\20int\2c\20int\2c\20int\2c\20Graphics::VectorRenderer::TriangleOrientation\29 can change the state due to initial scan
[asyncify] Graphics::VectorRendererSpec<unsigned\20int>::copyFrame\28OSystem*\2c\20Common::Rect\20const&\29 can change the state due to initial scan
[asyncify] Graphics::VectorRendererSpec<unsigned\20int>::copyWholeFrame\28OSystem*\29 can change the state due to initial scan
[asyncify] Graphics::VectorRendererSpec<unsigned\20int>::drawLine\28int\2c\20int\2c\20int\2c\20int\29 can change the state due to initial scan
[asyncify] Graphics::VectorRendererSpec<unsigned\20int>::drawRoundedSquareAlg\28int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int\2c\20Graphics::VectorRenderer::FillMode\29 can change the state due to initial scan
[asyncify] Graphics::VectorRendererSpec<unsigned\20int>::drawRoundedSquareAlgClip\28int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int\2c\20Graphics::VectorRenderer::FillMode\29 can change the state due to initial scan
[asyncify] Graphics::VectorRendererSpec<unsigned\20int>::drawString\28Graphics::Font\20const*\2c\20Common::U32String\20const&\2c\20Common::Rect\20const&\2c\20Graphics::TextAlign\2c\20GUI::ThemeEngine::TextAlignVertical\2c\20int\2c\20bool\2c\20Common::Rect\20const&\29 can change the state due to initial scan
[asyncify] Graphics::VectorRendererSpec<unsigned\20int>::drawBevelSquareAlg\28int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int\2c\20unsigned\20int\29 can change the state due to initial scan
[asyncify] Graphics::VectorRendererSpec<unsigned\20int>::drawBevelSquareAlgClip\28int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int\2c\20unsigned\20int\29 can change the state due to initial scan
[asyncify] Graphics::VectorRendererSpec<unsigned\20short>::drawCircle\28int\2c\20int\2c\20int\29 can change the state due to initial scan
[asyncify] Graphics::VectorRendererSpec<unsigned\20short>::drawLine\28int\2c\20int\2c\20int\2c\20int\29 can change the state due to initial scan
[asyncify] Graphics::VectorRendererSpec<unsigned\20short>::drawSquare\28int\2c\20int\2c\20int\2c\20int\29 can change the state due to initial scan
[asyncify] Graphics::VectorRendererSpec<unsigned\20short>::drawRoundedSquare\28int\2c\20int\2c\20int\2c\20int\2c\20int\29 can change the state due to initial scan
[asyncify] Graphics::VectorRendererSpec<unsigned\20short>::drawTriangle\28int\2c\20int\2c\20int\2c\20int\2c\20Graphics::VectorRenderer::TriangleOrientation\29 can change the state due to initial scan
[asyncify] Graphics::VectorRendererSpec<unsigned\20short>::drawBeveledSquare\28int\2c\20int\2c\20int\2c\20int\29 can change the state due to initial scan
[asyncify] Graphics::VectorRendererSpec<unsigned\20short>::drawTab\28int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\29 can change the state due to initial scan
[asyncify] Graphics::VectorRendererSpec<unsigned\20short>::copyFrame\28OSystem*\2c\20Common::Rect\20const&\29 can change the state due to initial scan
[asyncify] Graphics::VectorRendererSpec<unsigned\20short>::copyWholeFrame\28OSystem*\29 can change the state due to initial scan
[asyncify] Graphics::VectorRendererSpec<unsigned\20short>::drawString\28Graphics::Font\20const*\2c\20Common::U32String\20const&\2c\20Common::Rect\20const&\2c\20Graphics::TextAlign\2c\20GUI::ThemeEngine::TextAlignVertical\2c\20int\2c\20bool\2c\20Common::Rect\20const&\29 can change the state due to initial scan
[asyncify] Graphics::VectorRendererSpec<unsigned\20short>::drawRoundedSquareAlg\28int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20unsigned\20short\2c\20Graphics::VectorRenderer::FillMode\29 can change the state due to initial scan
[asyncify] Graphics::VectorRendererSpec<unsigned\20short>::drawRoundedSquareAlgClip\28int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20unsigned\20short\2c\20Graphics::VectorRenderer::FillMode\29 can change the state due to initial scan
[asyncify] Graphics::VectorRendererSpec<unsigned\20short>::drawBevelSquareAlgClip\28int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20unsigned\20short\2c\20unsigned\20short\29 can change the state due to initial scan
[asyncify] Graphics::VectorRendererSpec<unsigned\20short>::drawBevelSquareAlg\28int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20unsigned\20short\2c\20unsigned\20short\29 can change the state due to initial scan
[asyncify] Graphics::VectorRendererAA<unsigned\20int>::drawRoundedSquareAlg\28int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int\2c\20Graphics::VectorRenderer::FillMode\29 can change the state due to initial scan
[asyncify] [asyncify] Graphics::VectorRendererAA<unsigned\20short>::drawRoundedSquareAlg\28int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20unsigned\20short\2c\20Graphics::VectorRenderer::FillMode\29[asyncify] Graphics::VectorRendererAA<unsigned\20short>::drawInteriorRoundedSquareAlg\28int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20unsigned\20short\2c\20Graphics::VectorRenderer::FillMode\29 can change the state due to initial scan
[asyncify] Graphics::WinCursor::readFromStream\28Common::SeekableReadStream&\29 can change the state due to initial scan
[asyncify] Graphics::WinCursorGroup::createCursorGroup\28Common::WinResources*\2c\20Common::WinResourceID\20const&\29 can change the state due to initial scan
[asyncify] Graphics::WinCursorGroup::~WinCursorGroup\28\29 can change the state due to initial scan
[asyncify] TinyGL::GLContext::gl_draw_triangle\28TinyGL::GLVertex*\2c\20TinyGL::GLVertex*\2c\20TinyGL::GLVertex*\29 can change the state due to initial scan
[asyncify] TinyGL::GLContext::gl_draw_triangle_clip\28TinyGL::GLVertex*\2c\20TinyGL::GLVertex*\2c\20TinyGL::GLVertex*\2c\20int\29 can change the state due to initial scan
[asyncify] TinyGL::GLContext::gl_add_op\28TinyGL::GLParam*\29 can change the state due to initial scan
[asyncify] TinyGL::GLContext::glopCallList\28TinyGL::GLParam*\29 can change the state due to initial scan
[asyncify] TinyGL::glopCallList\28TinyGL::GLContext*\2c\20TinyGL::GLParam*\29 can change the state due to initial scan
[asyncify] TinyGL::GLContext::glopViewport\28TinyGL::GLParam*\29 can change the state due to initial scan
[asyncify] TinyGL::GLContext::free_texture\28TinyGL::GLTexture*\29 can change the state due to initial scan
[asyncify] TinyGL::GLContext::free_texture\28unsigned\20int\29 can change the state due to initial scan
[asyncify] TinyGL::GLContext::glopTexImage2D\28TinyGL::GLParam*\29 can change the state due to initial scan
[asyncify] TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const can change the state due to initial scan
[asyncify] TinyGL::GLContext::issueDrawCall\28TinyGL::DrawCall*\29 can change the state due to initial scan
[asyncify] TinyGL::GLContext::disposeDrawCallLists\28\29 can change the state due to initial scan
[asyncify] TinyGL::GLContext::presentBufferSimple\28Common::List<Common::Rect>&\29 can change the state due to initial scan
[asyncify] TinyGL::GLContext::presentBufferDirtyRects\28Common::List<Common::Rect>&\29 can change the state due to initial scan
[asyncify] TinyGL::RasterizationDrawCall::execute\28Common::Rect\20const&\2c\20bool\29\20const can change the state due to initial scan
[asyncify] TinyGL::BlittingDrawCall::execute\28Common::Rect\20const&\2c\20bool\29\20const can change the state due to initial scan
[asyncify] TinyGL::ClearBufferDrawCall::execute\28Common::Rect\20const&\2c\20bool\29\20const can change the state due to initial scan
[asyncify] AdvMameScaler::increaseFactor\28\29 can change the state due to initial scan
[asyncify] AdvMameScaler::decreaseFactor\28\29 can change the state due to initial scan
[asyncify] HQScaler::increaseFactor\28\29 can change the state due to initial scan
[asyncify] HQScaler::decreaseFactor\28\29 can change the state due to initial scan
[asyncify] AdLibPart::init\28MidiDriver_ADLIB*\2c\20unsigned\20char\29 can change the state due to initial scan
[asyncify] AdLibPart::send\28unsigned\20int\29 can change the state due to initial scan
[asyncify] MidiDriver_ADLIB::partKeyOff\28AdLibPart*\2c\20unsigned\20char\29 can change the state due to initial scan
[asyncify] MidiDriver_ADLIB::allocateVoice\28unsigned\20char\29 can change the state due to initial scan
[asyncify] MidiDriver_ADLIB::adlibPlayNote\28int\2c\20int\29 can change the state due to initial scan
[asyncify] MidiDriver_ADLIB::adlibNoteOnEx\28int\2c\20unsigned\20char\2c\20int\29 can change the state due to initial scan
[asyncify] AdLibPart::controlChange\28unsigned\20char\2c\20unsigned\20char\29 can change the state due to initial scan
[asyncify] MidiDriver_ADLIB::adlibSetParam\28int\2c\20unsigned\20char\2c\20int\2c\20bool\29 can change the state due to initial scan
[asyncify] AdLibPart::volume\28unsigned\20char\29 can change the state due to initial scan
[asyncify] AdLibPart::sustain\28bool\29 can change the state due to initial scan
[asyncify] MidiDriver_ADLIB::mcOff\28AdLibVoice*\29 can change the state due to initial scan
[asyncify] AdLibPart::allNotesOff\28\29 can change the state due to initial scan
[asyncify] AdLibPercussionChannel::init\28MidiDriver_ADLIB*\2c\20unsigned\20char\29 can change the state due to initial scan
[asyncify] MidiDriver_ADLIB::MidiDriver_ADLIB\28\29 can change the state due to initial scan
[asyncify] MidiDriver_ADLIB::open\28\29 can change the state due to initial scan
[asyncify] MidiDriver_ADLIB::adlibWrite\28unsigned\20char\2c\20unsigned\20char\29 can change the state due to initial scan
[asyncify] MidiDriver_ADLIB::adlibWriteSecondary\28unsigned\20char\2c\20unsigned\20char\29 can change the state due to initial scan
[asyncify] MidiDriver_ADLIB::onTimer\28\29 can change the state due to initial scan
[asyncify] MidiDriver_ADLIB::send\28unsigned\20int\29 can change the state due to initial scan
[asyncify] MidiDriver_ADLIB::close\28\29 can change the state due to initial scan
[asyncify] MidiDriver_ADLIB::send\28signed\20char\2c\20unsigned\20int\29 can change the state due to initial scan
[asyncify] MidiDriver_ADLIB::mcIncStuff\28AdLibVoice*\2c\20Struct10*\2c\20Struct11*\29 can change the state due to initial scan
[asyncify] MidiDriver_ADLIB::adlibKeyOnOff\28int\29 can change the state due to initial scan
[asyncify] MidiDriver_ADLIB::adlibKeyOff\28int\29 can change the state due to initial scan
[asyncify] MidiDriver_ADLIB::adlibSetupChannel\28int\2c\20AdLibInstrument\20const*\2c\20unsigned\20char\2c\20unsigned\20char\29 can change the state due to initial scan
[asyncify] MidiDriver_ADLIB::adlibSetupChannelSecondary\28int\2c\20AdLibInstrument\20const*\2c\20unsigned\20char\2c\20unsigned\20char\2c\20unsigned\20char\29 can change the state due to initial scan
[asyncify] Common::Functor0Mem<void\2c\20MidiDriver_ADLIB>::operator\28\29\28\29\20const can change the state due to initial scan
[asyncify] MidiDriver_ADLIB_Multisource::~MidiDriver_ADLIB_Multisource\28\29 can change the state due to initial scan
[asyncify] [asyncify] [asyncify] MidiDriver_ADLIB_Multisource::open\28\29 can change the state due to initial scan
[asyncify] MidiDriver_ADLIB_Multisource::send\28signed\20char\2c\20unsigned\20int\29 can change the state due to initial scan
[asyncify] MidiDriver_ADLIB_Multisource::noteOff\28unsigned\20char\2c\20unsigned\20char\2c\20unsigned\20char\2c\20unsigned\20char\29 can change the state due to initial scan
[asyncify] MidiDriver_ADLIB_Multisource::writeKeyOff\28unsigned\20char\2c\20OplInstrumentRhythmType\2c\20bool\29 can change the state due to initial scan
[asyncify] MidiDriver_ADLIB_Multisource::noteOn\28unsigned\20char\2c\20unsigned\20char\2c\20unsigned\20char\2c\20unsigned\20char\29 can change the state due to initial scan
[asyncify] MidiDriver_ADLIB_Multisource::writeInstrument\28unsigned\20char\2c\20MidiDriver_ADLIB_Multisource::InstrumentInfo\29 can change the state due to initial scan
[asyncify] MidiDriver_ADLIB_Multisource::writeVolume\28unsigned\20char\2c\20unsigned\20char\2c\20OplInstrumentRhythmType\29 can change the state due to initial scan
[asyncify] MidiDriver_ADLIB_Multisource::writeRhythm\28bool\29 can change the state due to initial scan
[asyncify] MidiDriver_ADLIB_Multisource::pitchBend\28unsigned\20char\2c\20unsigned\20char\2c\20unsigned\20char\2c\20unsigned\20char\29 can change the state due to initial scan
[asyncify] MidiDriver_ADLIB_Multisource::controlChange\28unsigned\20char\2c\20unsigned\20char\2c\20unsigned\20char\2c\20unsigned\20char\29 can change the state due to initial scan
[asyncify] MidiDriver_ADLIB_Multisource::metaEvent\28signed\20char\2c\20unsigned\20char\2c\20unsigned\20char*\2c\20unsigned\20short\29 can change the state due to initial scan
[asyncify] MidiDriver_ADLIB_Multisource::sysEx\28unsigned\20char\20const*\2c\20unsigned\20short\29 can change the state due to initial scan
[asyncify] MidiDriver_ADLIB_Multisource::deinitSource\28unsigned\20char\29 can change the state due to initial scan
[asyncify] MidiDriver_ADLIB_Multisource::dataEntry\28unsigned\20char\2c\20unsigned\20char\2c\20unsigned\20char\2c\20unsigned\20char\29 can change the state due to initial scan
[asyncify] MidiDriver_ADLIB_Multisource::applyControllerDefaults\28unsigned\20char\29 can change the state due to initial scan
[asyncify] MidiDriver_ADLIB_Multisource::volume\28unsigned\20char\2c\20unsigned\20char\2c\20unsigned\20char\29 can change the state due to initial scan
[asyncify] MidiDriver_ADLIB_Multisource::expression\28unsigned\20char\2c\20unsigned\20char\2c\20unsigned\20char\29 can change the state due to initial scan
[asyncify] MidiDriver_ADLIB_Multisource::panning\28unsigned\20char\2c\20unsigned\20char\2c\20unsigned\20char\29 can change the state due to initial scan
[asyncify] MidiDriver_ADLIB_Multisource::allSoundOff\28unsigned\20char\2c\20unsigned\20char\29 can change the state due to initial scan
[asyncify] MidiDriver_ADLIB_Multisource::resetAllControllers\28unsigned\20char\2c\20unsigned\20char\29[asyncify] MidiDriver_ADLIB_Multisource::allNotesOff\28unsigned\20char\2c\20unsigned\20char\29 can change the state due to initial scan
[asyncify] MidiDriver_ADLIB_Multisource::applySourceVolume\28unsigned\20char\29 can change the state due to initial scan
[asyncify] MidiDriver_ADLIB_Multisource::writeRegister\28unsigned\20short\2c\20unsigned\20char\2c\20bool\29 can change the state due to initial scan
[asyncify] MidiDriver_ADLIB_Multisource::stopAllNotes\28unsigned\20char\2c\20unsigned\20char\29 can change the state due to initial scan
[asyncify] MidiDriver_ADLIB_Multisource::recalculateFrequencies\28unsigned\20char\2c\20unsigned\20char\29 can change the state due to initial scan
[asyncify] MidiDriver_ADLIB_Multisource::initOpl\28\29 can change the state due to initial scan
[asyncify] MidiDriver_ADLIB_Multisource::calculateFrequency\28unsigned\20char\2c\20unsigned\20char\2c\20unsigned\20char\29 can change the state due to initial scan
[asyncify] MidiDriver_ADLIB_Multisource::calculateVolume\28unsigned\20char\2c\20unsigned\20char\2c\20unsigned\20char\2c\20OplInstrumentDefinition&\2c\20unsigned\20char\29 can change the state due to initial scan
[asyncify] MidiDriver_ADLIB_Multisource::writePanning\28unsigned\20char\2c\20OplInstrumentRhythmType\29 can change the state due to initial scan
[asyncify] MidiDriver_ADLIB_Multisource::writeFrequency\28unsigned\20char\2c\20OplInstrumentRhythmType\29 can change the state due to initial scan
[asyncify] MidiDriver_ADLIB_Multisource::setRhythmMode\28bool\29 can change the state due to initial scan
[asyncify] Common::Functor0Mem<void\2c\20MidiDriver_ADLIB_Multisource>::operator\28\29\28\29\20const can change the state due to initial scan
[asyncify] Audio::LoopingAudioStream::LoopingAudioStream\28Common::DisposablePtr<Audio::RewindableAudioStream\2c\20Common::DefaultDeleter<Audio::RewindableAudioStream>>&&\2c\20unsigned\20int\2c\20bool\29 can change the state due to initial scan
[asyncify] Audio::SeekableAudioStream::openStreamFile\28Common::String\20const&\29 can change the state due to initial scan
[asyncify] Audio::LoopingAudioStream::LoopingAudioStream\28Common::DisposablePtr<Audio::RewindableAudioStream\2c\20Common::DefaultDeleter<Audio::RewindableAudioStream>>&&\2c\20unsigned\20int\2c\20bool\29.1 can change the state due to initial scan
[asyncify] Audio::LoopingAudioStream::LoopingAudioStream\28Audio::RewindableAudioStream*\2c\20unsigned\20int\2c\20DisposeAfterUse::Flag\2c\20bool\29.1 can change the state due to initial scan
[asyncify] Audio::LoopingAudioStream::readBuffer\28short*\2c\20int\29 can change the state due to initial scan
[asyncify] Audio::LoopingAudioStream::endOfData\28\29\20const can change the state due to initial scan
[asyncify] virtual\20thunk\20to\20Audio::LoopingAudioStream::endOfData\28\29\20const can change the state due to initial scan
[asyncify] Audio::makeLoopingAudioStream\28Audio::RewindableAudioStream*\2c\20unsigned\20int\29 can change the state due to initial scan
[asyncify] MidiDriver_ADLIB_Multisource::sustain\28unsigned\20char\2c\20unsigned\20char\2c\20unsigned\20char\29 can change the state due to initial scan
[asyncify] Audio::makeLoopingAudioStream\28Audio::SeekableAudioStream*\2c\20Audio::Timestamp\2c\20Audio::Timestamp\2c\20unsigned\20int\29 can change the state due to initial scan
[asyncify] Audio::SubSeekableAudioStream::SubSeekableAudioStream\28Audio::SeekableAudioStream*\2c\20Audio::Timestamp\2c\20Audio::Timestamp\2c\20DisposeAfterUse::Flag\29 can change the state due to initial scan
[asyncify] Audio::SubLoopingAudioStream::endOfData\28\29\20const can change the state due to initial scan
[asyncify] virtual\20thunk\20to\20Audio::SubLoopingAudioStream::endOfData\28\29\20const can change the state due to initial scan
[asyncify] Audio::SubLoopingAudioStream::readBuffer\28short*\2c\20int\29 can change the state due to initial scan
[asyncify] Audio::SubSeekableAudioStream::readBuffer\28short*\2c\20int\29 can change the state due to initial scan
[asyncify] Audio::SubSeekableAudioStream::SubSeekableAudioStream\28Audio::SeekableAudioStream*\2c\20Audio::Timestamp\2c\20Audio::Timestamp\2c\20DisposeAfterUse::Flag\29.1 can change the state due to initial scan
[asyncify] [asyncify] [asyncify] Audio::SubLoopingAudioStream::SubLoopingAudioStream\28Audio::SeekableAudioStream*\2c\20unsigned\20int\2c\20Audio::Timestamp\2c\20Audio::Timestamp\2c\20DisposeAfterUse::Flag\29 can change the state due to initial scan
[asyncify] Audio::LoopingAudioStream::LoopingAudioStream\28Audio::RewindableAudioStream*\2c\20unsigned\20int\2c\20DisposeAfterUse::Flag\2c\20bool\29 can change the state due to initial scan
[asyncify] Audio::QueuingAudioStream::queueBuffer\28unsigned\20char*\2c\20unsigned\20int\2c\20DisposeAfterUse::Flag\2c\20unsigned\20char\29 can change the state due to initial scan
[asyncify] Audio::QueuingAudioStreamImpl::~QueuingAudioStreamImpl\28\29 can change the state due to initial scan
[asyncify] Audio::QueuingAudioStreamImpl::queueAudioStream\28Audio::AudioStream*\2c\20DisposeAfterUse::Flag\29 can change the state due to initial scan
[asyncify] Audio::QueuingAudioStreamImpl::readBuffer\28short*\2c\20int\29 can change the state due to initial scan
[asyncify] Audio::makeLimitingAudioStream\28Audio::AudioStream*\2c\20Audio::Timestamp\20const&\2c\20DisposeAfterUse::Flag\29 can change the state due to initial scan
[asyncify] Audio::NullAudioStream::getRate\28\29\20const can change the state due to initial scan
[asyncify] Audio::LoopingAudioStream::~LoopingAudioStream\28\29 can change the state due to initial scan
[asyncify] Audio::LoopingAudioStream::isStereo\28\29\20const can change the state due to initial scan
[asyncify] Audio::LoopingAudioStream::getRate\28\29\20const can change the state due to initial scan
[asyncify] Audio::LoopingAudioStream::~LoopingAudioStream\28\29.1 can change the state due to initial scan
[asyncify] Audio::SubLoopingAudioStream::~SubLoopingAudioStream\28\29 can change the state due to initial scan
[asyncify] Audio::SubLoopingAudioStream::isStereo\28\29\20const can change the state due to initial scan
[asyncify] Audio::SubLoopingAudioStream::~SubLoopingAudioStream\28\29.1 can change the state due to initial scan
[asyncify] Audio::SubSeekableAudioStream::getRate\28\29\20const can change the state due to initial scan
[asyncify] Audio::SubLoopingAudioStream::getRate\28\29\20const can change the state due to initial scan
[asyncify] Audio::SubSeekableAudioStream::endOfData\28\29\20const can change the state due to initial scan
[asyncify] Audio::SubSeekableAudioStream::endOfStream\28\29\20const can change the state due to initial scan
[asyncify] Audio::QueuingAudioStreamImpl::endOfData\28\29\20const can change the state due to initial scan
[asyncify] Audio::SubSeekableAudioStream::seek\28Audio::Timestamp\20const&\29 can change the state due to initial scan
[asyncify] Audio::SubSeekableAudioStream::~SubSeekableAudioStream\28\29 can change the state due to initial scan
[asyncify] Audio::SubSeekableAudioStream::isStereo\28\29\20const[asyncify] Audio::LimitingAudioStream::~LimitingAudioStream\28\29.1 can change the state due to initial scan
[asyncify] Audio::SubSeekableAudioStream::~SubSeekableAudioStream\28\29.1 can change the state due to initial scan
[asyncify] Audio::LimitingAudioStream::readBuffer\28short*\2c\20int\29 can change the state due to initial scan
[asyncify] Audio::LimitingAudioStream::isStereo\28\29\20const can change the state due to initial scan
[asyncify] Audio::LimitingAudioStream::getRate\28\29\20const can change the state due to initial scan
[asyncify] Audio::LimitingAudioStream::endOfStream\28\29\20const can change the state due to initial scan
[asyncify] Audio::LimitingAudioStream::endOfData\28\29\20const can change the state due to initial scan
[asyncify] MidiDriver_Casio::timerCallback\28void*\29 can change the state due to initial scan
[asyncify] MidiDriver_Casio::close\28\29 can change the state due to initial scan
[asyncify] MidiDriver_Casio::~MidiDriver_Casio\28\29 can change the state due to initial scan
[asyncify] MidiDriver_Casio::send\28signed\20char\2c\20unsigned\20int\29 can change the state due to initial scan
[asyncify] MidiDriver_Casio::metaEvent\28signed\20char\2c\20unsigned\20char\2c\20unsigned\20char*\2c\20unsigned\20short\29 can change the state due to initial scan
[asyncify] MidiDriver_Casio::open\28MidiDriver*\2c\20MusicType\29 can change the state due to initial scan
[asyncify] MidiDriver_Casio::processEvent\28signed\20char\2c\20unsigned\20int\2c\20unsigned\20char\29 can change the state due to initial scan
[asyncify] MidiDriver_Casio::open\28\29[asyncify] MidiDriver_Casio::mapNote\28unsigned\20char\2c\20unsigned\20char\29 can change the state due to initial scan
[asyncify] MidiDriver_Casio::noteOn\28unsigned\20char\2c\20unsigned\20char\2c\20unsigned\20char\2c\20signed\20char\29 can change the state due to initial scan
[asyncify] MidiDriver_Casio::isRhythmChannel\28unsigned\20char\29 can change the state due to initial scan
[asyncify] MidiDriver_Casio::programChange\28unsigned\20char\2c\20unsigned\20char\2c\20signed\20char\29 can change the state due to initial scan
[asyncify] MidiDriver_Casio::stopAllNotes\28bool\29[asyncify] MidiDriver_Casio::getBaseTempo\28\29 can change the state due to initial scan
[asyncify] CMS::CMS::~CMS\28\29 can change the state due to initial scan
[asyncify] Audio::LimitingAudioStream::~LimitingAudioStream\28\29 can change the state due to initial scan
[asyncify] CMS::CMS::stop\28\29 can change the state due to initial scan
[asyncify] MidiDriver_Casio::noteOff\28unsigned\20char\2c\20unsigned\20char\2c\20unsigned\20char\2c\20unsigned\20char\2c\20signed\20char\29 can change the state due to initial scan
[asyncify] CMS::EmulatedCMS::~EmulatedCMS\28\29[asyncify] CMS::EmulatedCMS::readBuffer\28short*\2c\20int\29 can change the state due to initial scan
[asyncify] CMS::EmulatedCMS::getRate\28\29\20const can change the state due to initial scan
[asyncify] non-virtual\20thunk\20to\20CMS::EmulatedCMS::getRate\28\29\20const can change the state due to initial scan
[asyncify] CMS::CMS::start\28Common::Functor0<void>*\2c\20int\29[asyncify] CMS::EmulatedCMS::stopCallbacks\28\29[asyncify] CMS::EmulatedCMS::startCallbacks\28int\29 can change the state due to initial scan
[asyncify] CMS::EmulatedCMS::setCallbackFrequency\28int\29 can change the state due to initial scan
[asyncify] OPL::OPL::start\28Common::Functor0<void>*\2c\20int\29 can change the state due to initial scan
[asyncify] OPL::OPL::stop\28\29 can change the state due to initial scan
[asyncify] non-virtual\20thunk\20to\20CMS::EmulatedCMS::readBuffer\28short*\2c\20int\29 can change the state due to initial scan
[asyncify] OPL::RealOPL::timerProc\28void*\29 can change the state due to initial scan
[asyncify] OPL::RealOPL::~RealOPL\28\29 can change the state due to initial scan
[asyncify] OPL::RealOPL::stopCallbacks\28\29 can change the state due to initial scan
[asyncify] [asyncify] OPL::RealOPL::onTimer\28\29 can change the state due to initial scan
[asyncify] OPL::RealOPL::startCallbacks\28int\29 can change the state due to initial scan
[asyncify] OPL::EmulatedOPL::~EmulatedOPL\28\29 can change the state due to initial scan
[asyncify] OPL::EmulatedOPL::readBuffer\28short*\2c\20int\29 can change the state due to initial scan
[asyncify] OPL::EmulatedOPL::getRate\28\29\20const can change the state due to initial scan
[asyncify] [asyncify] OPL::EmulatedOPL::stopCallbacks\28\29 can change the state due to initial scan
[asyncify] [asyncify] OPL::EmulatedOPL::setCallbackFrequency\28int\29OPL::EmulatedOPL::startCallbacks\28int\29[asyncify] non-virtual\20thunk\20to\20OPL::EmulatedOPL::readBuffer\28short*\2c\20int\29 can change the state due to initial scan
[asyncify] OPL::OPL::~OPL\28\29 can change the state due to initial scan
[asyncify] OPL::RealOPL::setCallbackFrequency\28int\29 can change the state due to initial scan
[asyncify] MidiDriver::checkDevice\28unsigned\20int\29 can change the state due to initial scan
[asyncify] MidiDriver::getDeviceHandle\28Common::String\20const&\29 can change the state due to initial scan
[asyncify] MidiDriver::sendMT32Reset\28\29 can change the state due to initial scan
[asyncify] MidiDriver::sendGMReset\28\29 can change the state due to initial scan
[asyncify] [asyncify] MidiDriver::getDeviceString\28unsigned\20int\2c\20MidiDriver::DeviceStringType\29[asyncify]  can change the state due to initial scan
[asyncify] MidiDriver_BASE::midiDumpDelta\28\29 can change the state due to initial scan
[asyncify] MidiDriver_BASE::midiDumpDo\28unsigned\20int\29 can change the state due to initial scan
[asyncify] MidiDriver_BASE::midiDumpSysEx\28unsigned\20char\20const*\2c\20unsigned\20short\29 can change the state due to initial scan
[asyncify] MidiDriver_BASE::send\28unsigned\20char\2c\20unsigned\20char\2c\20unsigned\20char\29 can change the state due to initial scan
[asyncify] MidiDriver_BASE::send\28signed\20char\2c\20unsigned\20char\2c\20unsigned\20char\2c\20unsigned\20char\29 can change the state due to initial scan
[asyncify] MidiDriver_BASE::stopAllNotes\28bool\29 can change the state due to initial scan
[asyncify] MidiDriver_Multisource::send\28unsigned\20int\29 can change the state due to initial scan
[asyncify] MidiDriver_BASE::midiDumpFinish\28\29 can change the state due to initial scan
[asyncify] MidiDriver::detectDevice\28int\29 can change the state due to initial scan
[asyncify] MidiDriver_Multisource::abortFade\28unsigned\20char\2c\20MidiDriver_Multisource::FadeAbortType\29 can change the state due to initial scan
[asyncify] MidiDriver_Multisource::setSourceVolume\28unsigned\20char\2c\20unsigned\20short\29 can change the state due to initial scan
[asyncify] MidiDriver_Multisource::abortFade\28MidiDriver_Multisource::FadeAbortType\29 can change the state due to initial scan
[asyncify] MidiDriver_Multisource::updateFading\28\29 can change the state due to initial scan
[asyncify] MidiDriver_Multisource::deinitSource\28unsigned\20char\29 can change the state due to initial scan
[asyncify] MidiDriver_Multisource::setSourceType\28unsigned\20char\2c\20MidiDriver_Multisource::SourceType\29 can change the state due to initial scan
[asyncify] MidiDriver_Multisource::setSourceType\28MidiDriver_Multisource::SourceType\29[asyncify] MidiDriver_Multisource::resetSourceVolume\28\29 can change the state due to initial scan
[asyncify] MidiDriver_Multisource::setSourceVolume\28unsigned\20short\29 can change the state due to initial scan
[asyncify] MidiDriver_Multisource::resetSourceVolume\28unsigned\20char\29 can change the state due to initial scan
[asyncify] MidiDriver_Multisource::onTimer\28\29 can change the state due to initial scan
[asyncify] [asyncify] MidiDriver_NULL_Multisource::open\28\29 can change the state due to initial scan
[asyncify] MidiDriver_Multisource::syncSoundSettings\28\29 can change the state due to initial scan
[asyncify] MidiDriver_NULL_Multisource::close\28\29 can change the state due to initial scan
[asyncify] MidiParser_QT::loadMusic\28unsigned\20char*\2c\20unsigned\20int\29 can change the state due to initial scan
[asyncify] MidiParser_QT::loadFromTune\28Common::SeekableReadStream*\2c\20DisposeAfterUse::Flag\29 can change the state due to initial scan
[asyncify] MidiParser_QT::initCommon\28\29 can change the state due to initial scan
[asyncify] MidiParser_QT::loadFromContainerStream\28Common::SeekableReadStream*\2c\20DisposeAfterUse::Flag\29 can change the state due to initial scan
[asyncify] MidiParser_QT::loadFromContainerFile\28Common::String\20const&\29 can change the state due to initial scan
[asyncify] MidiParser_QT::readWholeTrack\28Common::QuickTimeParser::Track*\2c\20unsigned\20int&\29 can change the state due to initial scan
[asyncify] MidiParser_QT::sendToDriver\28unsigned\20int\29 can change the state due to initial scan
[asyncify] MidiParser_QT::sendMetaEventToDriver\28unsigned\20char\2c\20unsigned\20char*\2c\20unsigned\20short\29 can change the state due to initial scan
[asyncify] MidiParser_QT::readSampleDesc\28Common::QuickTimeParser::Track*\2c\20unsigned\20int\2c\20unsigned\20int\29 can change the state due to initial scan
[asyncify] MidiParser_SMF::loadMusic\28unsigned\20char*\2c\20unsigned\20int\29 can change the state due to initial scan
[asyncify] MidiParser_SMF::determineDataSize\28Common::SeekableReadStream*\29 can change the state due to initial scan
[asyncify] MidiParser_XMIDI::jumpToIndex\28unsigned\20char\2c\20bool\29 can change the state due to initial scan
[asyncify] MidiParser_XMIDI::onTrackStart\28unsigned\20char\29 can change the state due to initial scan
[asyncify] MidiParser_XMIDI::determineDataSize\28Common::SeekableReadStream*\29 can change the state due to initial scan
[asyncify] MidiParser::sendToDriver\28unsigned\20int\29 can change the state due to initial scan
[asyncify] MidiParser::sendMetaEventToDriver\28unsigned\20char\2c\20unsigned\20char*\2c\20unsigned\20short\29 can change the state due to initial scan
[asyncify] MidiParser::hangingNote\28unsigned\20char\2c\20unsigned\20char\2c\20unsigned\20int\2c\20bool\29 can change the state due to initial scan
[asyncify] MidiParser_XMIDI::parseNextEvent\28EventInfo&\29[asyncify] MidiParser::processEvent\28EventInfo\20const&\2c\20bool\29 can change the state due to initial scan
[asyncify] MidiParser::onTimer\28\29 can change the state due to initial scan
[asyncify] MidiParser::stopPlaying\28\29 can change the state due to initial scan
[asyncify] MidiParser::hangAllActiveNotes\28\29 can change the state due to initial scan
[asyncify] MidiParser::allNotesOff\28\29 can change the state due to initial scan
[asyncify] MidiParser_XMIDI::loadMusic\28unsigned\20char*\2c\20unsigned\20int\29 can change the state due to initial scan
[asyncify] MidiParser::setTrack\28int\29 can change the state due to initial scan
[asyncify] MidiParser::startPlaying\28\29 can change the state due to initial scan
[asyncify] MidiParser::jumpToTick\28unsigned\20int\2c\20bool\2c\20bool\2c\20bool\29 can change the state due to initial scan
[asyncify] MidiParser::pausePlaying\28\29 can change the state due to initial scan
[asyncify] MidiParser::~MidiParser\28\29[asyncify] MidiParser::unloadMusic\28\29 can change the state due to initial scan
[asyncify] Audio::MidiPlayer::~MidiPlayer\28\29 can change the state due to initial scan
[asyncify] Audio::MidiPlayer::setVolume\28int\29 can change the state due to initial scan
[asyncify] Audio::MidiPlayer::createDriver\28int\29 can change the state due to initial scan
[asyncify] Audio::MidiPlayer::sendToChannel\28unsigned\20char\2c\20unsigned\20int\29 can change the state due to initial scan
[asyncify] Audio::MidiPlayer::metaEvent\28unsigned\20char\2c\20unsigned\20char*\2c\20unsigned\20short\29 can change the state due to initial scan
[asyncify] Audio::MidiPlayer::send\28unsigned\20int\29 can change the state due to initial scan
[asyncify] Audio::MidiPlayer::endOfTrack\28\29 can change the state due to initial scan
[asyncify] Audio::MidiPlayer::timerCallback\28void*\29 can change the state due to initial scan
[asyncify] [asyncify] Audio::MidiPlayer::stop\28\29 can change the state due to initial scan
[asyncify] Audio::MidiPlayer::syncVolume\28\29 can change the state due to initial scan
[asyncify] Audio::MidiDriver_Miles_AdLib::open\28\29 can change the state due to initial scan
[asyncify] Audio::MidiDriver_Miles_AdLib::close\28\29 can change the state due to initial scan
[asyncify] Audio::MidiDriver_Miles_AdLib::resetAdLib\28\29 can change the state due to initial scan
[asyncify] Audio::MidiDriver_Miles_AdLib::setRegister\28int\2c\20int\29 can change the state due to initial scan
[asyncify] Audio::MidiDriver_Miles_AdLib::resetAdLibOperatorRegisters\28unsigned\20char\2c\20unsigned\20char\29 can change the state due to initial scan
[asyncify] Audio::MidiDriver_Miles_AdLib::resetAdLibFMVoiceChannelRegisters\28unsigned\20char\2c\20unsigned\20char\29 can change the state due to initial scan
[asyncify] Audio::MidiDriver_Miles_AdLib::send\28signed\20char\2c\20unsigned\20int\29 can change the state due to initial scan
[asyncify] Audio::MidiDriver_Miles_AdLib::setRegisterStereo\28unsigned\20char\2c\20unsigned\20char\2c\20unsigned\20char\29 can change the state due to initial scan
[asyncify] Audio::MidiDriver_Miles_AdLib::metaEvent\28signed\20char\2c\20unsigned\20char\2c\20unsigned\20char*\2c\20unsigned\20short\29 can change the state due to initial scan
[asyncify] Audio::MidiDriver_Miles_AdLib::updatePhysicalFmVoice\28unsigned\20char\2c\20bool\2c\20unsigned\20short\29 can change the state due to initial scan
[asyncify] Common::Functor0Mem<void\2c\20Audio::MidiDriver_Miles_AdLib>::operator\28\29\28\29\20const can change the state due to initial scan
[asyncify] Audio::MidiDriver_Miles_Midi::send\28signed\20char\2c\20unsigned\20int\29 can change the state due to initial scan
[asyncify] Audio::MidiDriver_Miles_Midi::lockChannel\28unsigned\20char\2c\20unsigned\20char\29 can change the state due to initial scan
[asyncify] Audio::MidiDriver_Miles_AdLib_create\28Common::String\20const&\2c\20Common::String\20const&\2c\20Common::SeekableReadStream*\2c\20Common::SeekableReadStream*\29 can change the state due to initial scan
[asyncify] Audio::MidiDriver_Miles_Midi::unlockChannel\28unsigned\20char\29 can change the state due to initial scan
[asyncify] [asyncify] Audio::MidiDriver_Miles_Midi::stopNotesOnChannel\28unsigned\20char\29[asyncify] Audio::Channel::setBalance\28signed\20char\29 can change the state due to initial scan
[asyncify] [asyncify] Audio::MixerImpl::mixCallback\28unsigned\20char*\2c\20unsigned\20int\29 can change the state due to initial scan
[asyncify] Audio::MidiDriver_Miles_Midi::applySourceVolume\28unsigned\20char\29 can change the state due to initial scan
[asyncify] Audio::Channel::setVolume\28unsigned\20char\29 can change the state due to initial scan
[asyncify] Audio::MixerImpl::muteSoundType\28Audio::Mixer::SoundType\2c\20bool\29 can change the state due to initial scan
[asyncify] Audio::MixerImpl::getSoundElapsedTime\28Audio::SoundHandle\29 can change the state due to initial scan
[asyncify] Audio::MixerImpl::playStream\28Audio::Mixer::SoundType\2c\20Audio::SoundHandle*\2c\20Audio::AudioStream*\2c\20int\2c\20unsigned\20char\2c\20signed\20char\2c\20DisposeAfterUse::Flag\2c\20bool\2c\20bool\29 can change the state due to initial scan
[asyncify] [asyncify] Audio::Channel::loop\28\29 can change the state due to initial scan
[asyncify] Audio::MixerImpl::setChannelBalance\28Audio::SoundHandle\2c\20signed\20char\29[asyncify] Audio::MixerImpl::setChannelVolume\28Audio::SoundHandle\2c\20unsigned\20char\29[asyncify] Audio::Channel::pause\28bool\29 can change the state due to initial scan
[asyncify] Audio::MixerImpl::pauseID\28int\2c\20bool\29 can change the state due to initial scan
[asyncify] Audio::Channel::getElapsedTime\28\29 can change the state due to initial scan
[asyncify] Audio::MixerImpl::pauseHandle\28Audio::SoundHandle\2c\20bool\29 can change the state due to initial scan
[asyncify] Audio::Channel::~Channel\28\29 can change the state due to initial scan
[asyncify] Audio::MixerImpl::setVolumeForSoundType\28Audio::Mixer::SoundType\2c\20int\29 can change the state due to initial scan
[asyncify] Common::DisposablePtr<Audio::RewindableAudioStream\2c\20Common::DefaultDeleter<Audio::RewindableAudioStream>>\20Common::DisposablePtr<Audio::AudioStream\2c\20Common::DefaultDeleter<Audio::AudioStream>>::moveAndDynamicCast<Audio::RewindableAudioStream\2c\20Common::DefaultDeleter<Audio::RewindableAudioStream>>\28\29[asyncify] [asyncify] MidiChannel_MPU401::noteOn\28unsigned\20char\2c\20unsigned\20char\29 can change the state due to initial scan
[asyncify] Audio::Channel::Channel\28Audio::Mixer*\2c\20Audio::Mixer::SoundType\2c\20Audio::AudioStream*\2c\20DisposeAfterUse::Flag\2c\20bool\2c\20int\2c\20bool\29 can change the state due to initial scan
[asyncify] Audio::Channel::updateChannelVolumes\28\29 can change the state due to initial scan
[asyncify] MidiChannel_MPU401::programChange\28unsigned\20char\29 can change the state due to initial scan
[asyncify] MidiChannel_MPU401::pitchBend\28short\29 can change the state due to initial scan
[asyncify] MidiChannel_MPU401::controlChange\28unsigned\20char\2c\20unsigned\20char\29 can change the state due to initial scan
[asyncify] MidiChannel_MPU401::pitchBendFactor\28unsigned\20char\29 can change the state due to initial scan
[asyncify] MidiDriver_MPU401::close\28\29 can change the state due to initial scan
[asyncify] MidiChannel::modulationWheel\28unsigned\20char\29 can change the state due to initial scan
[asyncify] MidiChannel::volume\28unsigned\20char\29 can change the state due to initial scan
[asyncify] [asyncify] MidiDriver_MPU401::setTimerCallback\28void*\2c\20void\20\28*\29\28void*\29\29 can change the state due to initial scan
[asyncify] MidiChannel::panPosition\28unsigned\20char\29 can change the state due to initial scan
[asyncify] [asyncify] [asyncify] MidiChannel::allNotesOff\28\29MidiChannel::sustain\28bool\29 can change the state due to initial scan
[asyncify] [asyncify] MidiChannel::effectLevel\28unsigned\20char\29 can change the state due to initial scan
[asyncify] MidiDriver_MT32GM::open\28MidiDriver*\2c\20bool\29[asyncify] [asyncify] MidiDriver_MT32GM::~MidiDriver_MT32GM\28\29 can change the state due to initial scan
[asyncify] MidiDriver_MT32GM::close\28\29 can change the state due to initial scan
[asyncify] MidiDriver_MT32GM::open\28\29 can change the state due to initial scan
[asyncify] MidiDriver_MT32GM::initGM\28bool\2c\20bool\29 can change the state due to initial scan
[asyncify] MidiDriver_MT32GM::send\28unsigned\20int\29 can change the state due to initial scan
[asyncify] [asyncify] MidiDriver_MT32GM::send\28signed\20char\2c\20unsigned\20int\29 can change the state due to initial scan
[asyncify] MidiDriver_MT32GM::noteOnOff\28unsigned\20char\2c\20unsigned\20char\2c\20unsigned\20char\2c\20unsigned\20char\2c\20signed\20char\2c\20MidiDriver_MT32GM::MidiChannelControlData&\29 can change the state due to initial scan
[asyncify] MidiDriver_MT32GM::processEvent\28signed\20char\2c\20unsigned\20int\2c\20unsigned\20char\2c\20MidiDriver_MT32GM::MidiChannelControlData&\2c\20bool\29 can change the state due to initial scan
[asyncify] MidiDriver_MT32GM::controlChange\28unsigned\20char\2c\20unsigned\20char\2c\20unsigned\20char\2c\20signed\20char\2c\20MidiDriver_MT32GM::MidiChannelControlData&\2c\20bool\29 can change the state due to initial scan
[asyncify] MidiDriver_MT32GM::applyControllerDefaults\28unsigned\20char\2c\20MidiDriver_MT32GM::MidiChannelControlData&\2c\20unsigned\20char\2c\20bool\29 can change the state due to initial scan
[asyncify] MidiDriver_MT32GM::sysEx\28unsigned\20char\20const*\2c\20unsigned\20short\29 can change the state due to initial scan
[asyncify] MidiDriver_MT32GM::programChange\28unsigned\20char\2c\20unsigned\20char\2c\20signed\20char\2c\20MidiDriver_MT32GM::MidiChannelControlData&\2c\20bool\29 can change the state due to initial scan
[asyncify] MidiDriver_MT32GM::sysExNoDelay\28unsigned\20char\20const*\2c\20unsigned\20short\29 can change the state due to initial scan
[asyncify] MidiDriver_MT32GM::allocateChannel\28\29 can change the state due to initial scan
[asyncify] MidiDriver_MT32GM::metaEvent\28signed\20char\2c\20unsigned\20char\2c\20unsigned\20char*\2c\20unsigned\20short\29 can change the state due to initial scan
[asyncify] MidiDriver_MT32GM::getPercussionChannel\28\29 can change the state due to initial scan
[asyncify] MidiDriver_MT32GM::getBaseTempo\28\29 can change the state due to initial scan
[asyncify] MidiDriver_MT32GM::sysExMT32\28unsigned\20char\20const*\2c\20unsigned\20short\2c\20unsigned\20int\2c\20bool\2c\20bool\2c\20signed\20char\29 can change the state due to initial scan
[asyncify] MidiDriver_MT32GM::allocateSourceChannels\28unsigned\20char\2c\20unsigned\20char\29 can change the state due to initial scan
[asyncify] MidiDriver_MT32GM::applySourceVolume\28unsigned\20char\29 can change the state due to initial scan
[asyncify] MusicDevice::MusicDevice\28MusicPluginObject\20const*\2c\20Common::String\2c\20MusicType\29 can change the state due to initial scan
[asyncify] MidiDriver_MT32GM::onTimer\28\29 can change the state due to initial scan
[asyncify] MidiDriver_MT32GM::deinitSource\28unsigned\20char\29 can change the state due to initial scan
[asyncify] MidiDriver_MT32GM::stopAllNotes\28unsigned\20char\2c\20unsigned\20char\29 can change the state due to initial scan
[asyncify] Audio::SimpleRateConverter<true\2c\20true\2c\20true>::flow\28Audio::AudioStream&\2c\20short*\2c\20unsigned\20int\2c\20unsigned\20short\2c\20unsigned\20short\29 can change the state due to initial scan
[asyncify] Audio::LinearRateConverter<true\2c\20true\2c\20true>::flow\28Audio::AudioStream&\2c\20short*\2c\20unsigned\20int\2c\20unsigned\20short\2c\20unsigned\20short\29 can change the state due to initial scan
[asyncify] Audio::SimpleRateConverter<true\2c\20true\2c\20false>::flow\28Audio::AudioStream&\2c\20short*\2c\20unsigned\20int\2c\20unsigned\20short\2c\20unsigned\20short\29 can change the state due to initial scan
[asyncify] Audio::LinearRateConverter<true\2c\20true\2c\20false>::flow\28Audio::AudioStream&\2c\20short*\2c\20unsigned\20int\2c\20unsigned\20short\2c\20unsigned\20short\29 can change the state due to initial scan
[asyncify] Audio::CopyRateConverter<true\2c\20true\2c\20true>::flow\28Audio::AudioStream&\2c\20short*\2c\20unsigned\20int\2c\20unsigned\20short\2c\20unsigned\20short\29[asyncify] Audio::CopyRateConverter<true\2c\20true\2c\20false>::flow\28Audio::AudioStream&\2c\20short*\2c\20unsigned\20int\2c\20unsigned\20short\2c\20unsigned\20short\29 can change the state due to initial scan
[asyncify] Audio::LinearRateConverter<true\2c\20false\2c\20false>::flow\28Audio::AudioStream&\2c\20short*\2c\20unsigned\20int\2c\20unsigned\20short\2c\20unsigned\20short\29 can change the state due to initial scan
[asyncify] Audio::SimpleRateConverter<true\2c\20false\2c\20false>::flow\28Audio::AudioStream&\2c\20short*\2c\20unsigned\20int\2c\20unsigned\20short\2c\20unsigned\20short\29 can change the state due to initial scan
[asyncify] Audio::LinearRateConverter<false\2c\20true\2c\20false>::flow\28Audio::AudioStream&\2c\20short*\2c\20unsigned\20int\2c\20unsigned\20short\2c\20unsigned\20short\29 can change the state due to initial scan
[asyncify] Audio::CopyRateConverter<false\2c\20true\2c\20false>::flow\28Audio::AudioStream&\2c\20short*\2c\20unsigned\20int\2c\20unsigned\20short\2c\20unsigned\20short\29 can change the state due to initial scan
[asyncify] Audio::SimpleRateConverter<false\2c\20true\2c\20false>::flow\28Audio::AudioStream&\2c\20short*\2c\20unsigned\20int\2c\20unsigned\20short\2c\20unsigned\20short\29 can change the state due to initial scan
[asyncify] Audio::SimpleRateConverter<false\2c\20false\2c\20false>::flow\28Audio::AudioStream&\2c\20short*\2c\20unsigned\20int\2c\20unsigned\20short\2c\20unsigned\20short\29 can change the state due to initial scan
[asyncify] Audio::LinearRateConverter<false\2c\20false\2c\20false>::flow\28Audio::AudioStream&\2c\20short*\2c\20unsigned\20int\2c\20unsigned\20short\2c\20unsigned\20short\29 can change the state due to initial scan
[asyncify] Audio::CopyRateConverter<false\2c\20false\2c\20false>::flow\28Audio::AudioStream&\2c\20short*\2c\20unsigned\20int\2c\20unsigned\20short\2c\20unsigned\20short\29 can change the state due to initial scan
[asyncify] Audio::CopyRateConverter<true\2c\20false\2c\20false>::flow\28Audio::AudioStream&\2c\20short*\2c\20unsigned\20int\2c\20unsigned\20short\2c\20unsigned\20short\29 can change the state due to initial scan
[asyncify] Audio::make3DO_ADP4AudioStream\28Common::SeekableReadStream*\2c\20unsigned\20short\2c\20bool\2c\20unsigned\20int*\2c\20DisposeAfterUse::Flag\2c\20Audio::audio_3DO_ADP4_PersistentSpace*\29 can change the state due to initial scan
[asyncify] Audio::Audio3DO_ADP4_Stream::reset\28\29 can change the state due to initial scan
[asyncify] Audio::Audio3DO_ADP4_Stream::rewind\28\29 can change the state due to initial scan
[asyncify] Audio::Audio3DO_ADP4_Stream::Audio3DO_ADP4_Stream\28Common::SeekableReadStream*\2c\20unsigned\20short\2c\20bool\2c\20DisposeAfterUse::Flag\2c\20Audio::audio_3DO_ADP4_PersistentSpace*\29 can change the state due to initial scan
[asyncify] Audio::Audio3DO_ADP4_Stream::Audio3DO_ADP4_Stream\28Common::SeekableReadStream*\2c\20unsigned\20short\2c\20bool\2c\20DisposeAfterUse::Flag\2c\20Audio::audio_3DO_ADP4_PersistentSpace*\29.1 can change the state due to initial scan
[asyncify] Audio::Audio3DO_SDX2_Stream::reset\28\29 can change the state due to initial scan
[asyncify] Audio::Audio3DO_SDX2_Stream::Audio3DO_SDX2_Stream\28Common::SeekableReadStream*\2c\20unsigned\20short\2c\20bool\2c\20DisposeAfterUse::Flag\2c\20Audio::audio_3DO_SDX2_PersistentSpace*\29.1 can change the state due to initial scan
[asyncify] Audio::Audio3DO_SDX2_Stream::Audio3DO_SDX2_Stream\28Common::SeekableReadStream*\2c\20unsigned\20short\2c\20bool\2c\20DisposeAfterUse::Flag\2c\20Audio::audio_3DO_SDX2_PersistentSpace*\29[asyncify] Audio::Audio3DO_ADP4_Stream::readBuffer\28short*\2c\20int\29 can change the state due to initial scan
[asyncify] [asyncify] Audio::Audio3DO_SDX2_Stream::readBuffer\28short*\2c\20int\29 can change the state due to initial scan
[asyncify] Audio::Audio3DO_ADP4_Stream::~Audio3DO_ADP4_Stream\28\29.1 can change the state due to initial scan
[asyncify] Audio::Audio3DO_ADP4_Stream::endOfData\28\29\20const can change the state due to initial scan
[asyncify] Audio::Audio3DO_SDX2_Stream::endOfData\28\29\20const can change the state due to initial scan
[asyncify] Audio::Audio3DO_SDX2_Stream::~Audio3DO_SDX2_Stream\28\29.1 can change the state due to initial scan
[asyncify] Audio::Audio3DO_SDX2_Stream::rewind\28\29 can change the state due to initial scan
[asyncify] [asyncify] Audio::Audio3DO_ADP4_Stream::~Audio3DO_ADP4_Stream\28\29 can change the state due to initial scan
[asyncify] virtual\20thunk\20to\20Audio::ADPCMStream::rewind\28\29Audio::ADPCMStream::ADPCMStream\28Common::SeekableReadStream*\2c\20DisposeAfterUse::Flag\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20int\29 can change the state due to initial scan
[asyncify] Audio::XA_ADPCMStream::readBuffer\28short*\2c\20int\29 can change the state due to initial scan
[asyncify] Audio::ADPCMStream::rewind\28\29[asyncify] Audio::Audio3DO_SDX2_Stream::~Audio3DO_SDX2_Stream\28\29 can change the state due to initial scan
[asyncify] Audio::Apple_ADPCMStream::readBuffer\28short*\2c\20int\29 can change the state due to initial scan
[asyncify] Audio::Oki_ADPCMStream::readBuffer\28short*\2c\20int\29 can change the state due to initial scan
[asyncify] Audio::MS_ADPCMStream::readBuffer\28short*\2c\20int\29 can change the state due to initial scan
[asyncify] Audio::PacketizedADPCMStream::makeStream\28Common::SeekableReadStream*\29 can change the state due to initial scan
[asyncify] Audio::DVI_ADPCMStream::readBuffer\28short*\2c\20int\29 can change the state due to initial scan
[asyncify] Audio::Oki_ADPCMStream::~Oki_ADPCMStream\28\29 can change the state due to initial scan
[asyncify] Audio::DK3_ADPCMStream::readBuffer\28short*\2c\20int\29 can change the state due to initial scan
[asyncify] Audio::Oki_ADPCMStream::~Oki_ADPCMStream\28\29.1 can change the state due to initial scan
[asyncify] Audio::XA_ADPCMStream::~XA_ADPCMStream\28\29 can change the state due to initial scan
[asyncify] Audio::Oki_ADPCMStream::endOfData\28\29\20const can change the state due to initial scan
[asyncify] [asyncify] Audio::XA_ADPCMStream::~XA_ADPCMStream\28\29.1 can change the state due to initial scan
[asyncify] Audio::MSIma_ADPCMStream::readBuffer\28short*\2c\20int\29 can change the state due to initial scan
[asyncify] [asyncify] Audio::MSIma_ADPCMStream::~MSIma_ADPCMStream\28\29.1Audio::MS_ADPCMStream::endOfData\28\29\20const can change the state due to initial scan
[asyncify] Audio::MSIma_ADPCMStream::~MSIma_ADPCMStream\28\29 can change the state due to initial scan
[asyncify] Audio::DK3_ADPCMStream::~DK3_ADPCMStream\28\29 can change the state due to initial scan
[asyncify] Audio::DK3_ADPCMStream::~DK3_ADPCMStream\28\29.1 can change the state due to initial scan
[asyncify] Audio::MS_ADPCMStream::~MS_ADPCMStream\28\29 can change the state due to initial scan
[asyncify] Audio::makeADPCMStream\28Common::SeekableReadStream*\2c\20DisposeAfterUse::Flag\2c\20unsigned\20int\2c\20Audio::ADPCMType\2c\20int\2c\20int\2c\20unsigned\20int\29[asyncify] Audio::StatelessPacketizedAudioStream::readBuffer\28short*\2c\20int\29 can change the state due to initial scan
[asyncify] [asyncify] Audio::StatelessPacketizedAudioStream::endOfData\28\29\20const can change the state due to initial scan
[asyncify] Audio::StatelessPacketizedAudioStream::endOfStream\28\29\20const can change the state due to initial scan
[asyncify] Audio::StatelessPacketizedAudioStream::queuePacket\28Common::SeekableReadStream*\29 can change the state due to initial scan
[asyncify] Audio::StatelessPacketizedAudioStream::finish\28\29 can change the state due to initial scan
[asyncify] Audio::PacketizedADPCMStream::~PacketizedADPCMStream\28\29 can change the state due to initial scan
[asyncify] Audio::PacketizedADPCMStream::~PacketizedADPCMStream\28\29.1 can change the state due to initial scan
[asyncify] Audio::readExtended\28Common::SeekableReadStream&\29 can change the state due to initial scan
[asyncify] Audio::XA_ADPCMStream::endOfData\28\29\20const can change the state due to initial scan
[asyncify] Audio::APCStreamImpl::APCStreamImpl\28unsigned\20int\2c\20unsigned\20char\29 can change the state due to initial scan
[asyncify] Audio::Apple_ADPCMStream::~Apple_ADPCMStream\28\29.1 can change the state due to initial scan
[asyncify] Audio::MS_ADPCMStream::~MS_ADPCMStream\28\29.1 can change the state due to initial scan
[asyncify] Audio::AIFFHeader::makeAIFFStream\28Common::SeekableReadStream*\2c\20DisposeAfterUse::Flag\29 can change the state due to initial scan
[asyncify] Audio::makeAPCStream\28Common::SeekableReadStream&\29 can change the state due to initial scan
[asyncify] Audio::AIFFHeader::readAIFFHeader\28Common::SeekableReadStream*\2c\20DisposeAfterUse::Flag\29 can change the state due to initial scan
[asyncify] Audio::APCStreamImpl::~APCStreamImpl\28\29 can change the state due to initial scan
[asyncify] Audio::APCStreamImpl::readBuffer\28short*\2c\20int\29 can change the state due to initial scan
[asyncify] Audio::APCStreamImpl::isStereo\28\29\20const can change the state due to initial scan
[asyncify] [asyncify] [asyncify] Audio::APCStreamImpl::endOfStream\28\29\20const can change the state due to initial scan
[asyncify] Audio::APCStreamImpl::endOfData\28\29\20const[asyncify] Audio::APCStreamImpl::finish\28\29 can change the state due to initial scan
[asyncify] Audio::ASFStream::Packet::~Packet\28\29 can change the state due to initial scan
[asyncify] Audio::APCStreamImpl::~APCStreamImpl\28\29.1 can change the state due to initial scan
[asyncify] [asyncify] Audio::APCStreamImpl::getRate\28\29\20const[asyncify] Audio::ASFStream::~ASFStream\28\29 can change the state due to initial scan
[asyncify] Audio::ASFStream::ASFStream\28Common::SeekableReadStream*\2c\20DisposeAfterUse::Flag\29.1 can change the state due to initial scan
[asyncify] virtual\20thunk\20to\20Audio::ASFStream::~ASFStream\28\29 can change the state due to initial scan
[asyncify] virtual\20thunk\20to\20Audio::ASFStream::~ASFStream\28\29.1 can change the state due to initial scan
[asyncify] Audio::ASFStream::parseFileHeader\28\29 can change the state due to initial scan
[asyncify] Audio::ASFStream::~ASFStream\28\29.2[asyncify]  can change the state due to initial scan
[asyncify] Audio::ASFStream::rewind\28\29 can change the state due to initial scan
[asyncify] Audio::ASFStream::parseStreamHeader\28\29 can change the state due to initial scan
[asyncify] virtual\20thunk\20to\20Audio::ASFStream::rewind\28\29 can change the state due to initial scan
[asyncify] Audio::ASFStream::readBuffer\28short*\2c\20int\29 can change the state due to initial scan
[asyncify] Audio::ASFStream::createAudioStream\28\29 can change the state due to initial scan
[asyncify] virtual\20thunk\20to\20Audio::ASFStream::readBuffer\28short*\2c\20int\29 can change the state due to initial scan
[asyncify] Audio::makeASFStream\28Common::SeekableReadStream*\2c\20DisposeAfterUse::Flag\29 can change the state due to initial scan
[asyncify] Audio::ASFStream::~ASFStream\28\29.1 can change the state due to initial scan
[asyncify] Audio::G711AudioStream::getLength\28\29\20const can change the state due to initial scan
[asyncify] [asyncify] Audio::G711AudioStream::readBuffer\28short*\2c\20int\29 can change the state due to initial scan
[asyncify] Audio::G711MuLawStream::~G711MuLawStream\28\29 can change the state due to initial scan
[asyncify] Audio::G711AudioStream::seek\28Audio::Timestamp\20const&\29 can change the state due to initial scan
[asyncify] Audio::G711MuLawStream::~G711MuLawStream\28\29.1 can change the state due to initial scan
[asyncify] Audio::G711ALawStream::~G711ALawStream\28\29 can change the state due to initial scan
[asyncify] Audio::Voice8Header::load\28Common::ReadStream&\29 can change the state due to initial scan
[asyncify] Common::Functor1Mem<Common::IFFChunk&\2c\20bool\2c\20Audio::A8SVXLoader>::operator\28\29\28Common::IFFChunk&\29\20const can change the state due to initial scan
[asyncify] Audio::A8SVXLoader::callback\28Common::IFFChunk&\29 can change the state due to initial scan
[asyncify] Audio::G711AudioStream::endOfData\28\29\20const can change the state due to initial scan
[asyncify] Audio::ASFStream::readPacket\28\29 can change the state due to initial scan
[asyncify] Audio::makeMacSndStream\28Common::SeekableReadStream*\2c\20DisposeAfterUse::Flag\29 can change the state due to initial scan
[asyncify] Audio::QDM2Stream::QDM2Stream\28Common::SeekableReadStream*\2c\20DisposeAfterUse::Flag\29 can change the state due to initial scan
[asyncify] Audio::QDM2Stream::decodeFrame\28Common::SeekableReadStream&\29 can change the state due to initial scan
[asyncify] Audio::QuickTimeAudioDecoder::~QuickTimeAudioDecoder\28\29 can change the state due to initial scan
[asyncify] Audio::QuickTimeAudioDecoder::QuickTimeAudioTrack::QuickTimeAudioTrack\28Audio::QuickTimeAudioDecoder*\2c\20Common::QuickTimeParser::Track*\29 can change the state due to initial scan
[asyncify] Audio::QuickTimeAudioDecoder::QuickTimeAudioTrack::getCurrentTrackTime\28\29\20const can change the state due to initial scan
[asyncify] Audio::QDM2Stream::qdm2_decodeFrame\28Common::SeekableReadStream&\2c\20Audio::QueuingAudioStream*\29[asyncify] Audio::QuickTimeAudioDecoder::readSampleDesc\28Common::QuickTimeParser::Track*\2c\20unsigned\20int\2c\20unsigned\20int\29 can change the state due to initial scan
[asyncify] Audio::QuickTimeAudioDecoder::QuickTimeAudioTrack::QuickTimeAudioTrack\28Audio::QuickTimeAudioDecoder*\2c\20Common::QuickTimeParser::Track*\29.1 can change the state due to initial scan
[asyncify] Audio::QuickTimeAudioDecoder::QuickTimeAudioTrack::~QuickTimeAudioTrack\28\29.1 can change the state due to initial scan
[asyncify] [asyncify] Audio::QuickTimeAudioDecoder::QuickTimeAudioTrack::enterNewEdit\28Audio::Timestamp\20const&\29virtual\20thunk\20to\20Audio::QuickTimeAudioDecoder::QuickTimeAudioTrack::~QuickTimeAudioTrack\28\29 can change the state due to initial scan
[asyncify]  can change the state due to initial scan
[asyncify] Audio::QuickTimeAudioDecoder::QuickTimeAudioTrack::~QuickTimeAudioTrack\28\29[asyncify] Audio::QuickTimeAudioDecoder::QuickTimeAudioTrack::queueStream\28Audio::AudioStream*\2c\20Audio::Timestamp\20const&\29 can change the state due to initial scan
[asyncify] Audio::QuickTimeAudioDecoder::QuickTimeAudioTrack::~QuickTimeAudioTrack\28\29.2 can change the state due to initial scan
[asyncify] Audio::QuickTimeAudioDecoder::QuickTimeAudioTrack::skipSamples\28Audio::Timestamp\20const&\2c\20Audio::AudioStream*\29 can change the state due to initial scan
[asyncify] Audio::QuickTimeAudioDecoder::AudioSampleDesc::createAudioStream\28Common::SeekableReadStream*\29\20const can change the state due to initial scan
[asyncify] Audio::QuickTimeAudioDecoder::QuickTimeAudioTrack::queueAudio\28Audio::Timestamp\20const&\29 can change the state due to initial scan
[asyncify] Audio::QuickTimeAudioDecoder::QuickTimeAudioTrack::getChunkLength\28unsigned\20int\2c\20bool\29\20const[asyncify] [asyncify] Audio::QuickTimeAudioDecoder::QuickTimeAudioTrack::readBuffer\28short*\2c\20int\29Audio::QuickTimeAudioDecoder::QuickTimeAudioTrack::readAudioChunk\28unsigned\20int\29 can change the state due to initial scan
[asyncify] Audio::QuickTimeAudioDecoder::QuickTimeAudioTrack::queueRemainingAudio\28\29 can change the state due to initial scan
[asyncify] Audio::QuickTimeAudioDecoder::QuickTimeAudioTrack::endOfData\28\29\20const[asyncify] [asyncify] virtual\20thunk\20to\20Audio::QuickTimeAudioDecoder::QuickTimeAudioTrack::endOfData\28\29\20const can change the state due to initial scan
[asyncify] Audio::QuickTimeAudioDecoder::AudioSampleDesc::initCodec\28\29 can change the state due to initial scan
[asyncify] Audio::QuickTimeAudioDecoder::QuickTimeAudioTrack::seek\28Audio::Timestamp\20const&\29 can change the state due to initial scan
[asyncify] Audio::QuickTimeAudioDecoder::AudioSampleDesc::~AudioSampleDesc\28\29 can change the state due to initial scan
[asyncify] Audio::QuickTimeAudioDecoder::QuickTimeAudioTrack::getRate\28\29\20const can change the state due to initial scan
[asyncify] Audio::makeQuickTimeStream\28Common::SeekableReadStream*\2c\20DisposeAfterUse::Flag\29 can change the state due to initial scan
[asyncify] Audio::QuickTimeAudioDecoder::QuickTimeAudioTrack::isStereo\28\29\20const can change the state due to initial scan
[asyncify] [asyncify] Audio::makeQuickTimeStream\28Common::String\20const&\29 can change the state due to initial scan
[asyncify] Audio::ForcedMonoAudioStream::~ForcedMonoAudioStream\28\29 can change the state due to initial scan
[asyncify] Audio::ForcedMonoAudioStream::getRate\28\29\20const[asyncify] [asyncify] [asyncify] [asyncify] Audio::QuickTimeAudioStream::~QuickTimeAudioStream\28\29.1 can change the state due to initial scan
[asyncify] Audio::QuickTimeAudioStream::getRate\28\29\20const can change the state due to initial scan
[asyncify] Audio::QuickTimeAudioStream::endOfData\28\29\20const can change the state due to initial scan
[asyncify] Audio::QuickTimeAudioStream::~QuickTimeAudioStream\28\29 can change the state due to initial scan
[asyncify] non-virtual\20thunk\20to\20Audio::QuickTimeAudioStream::~QuickTimeAudioStream\28\29.1 can change the state due to initial scan
[asyncify] Audio::PacketizedRawStream::makeStream\28Common::SeekableReadStream*\29 can change the state due to initial scan
[asyncify] Audio::PacketizedRawStream::~PacketizedRawStream\28\29 can change the state due to initial scan
[asyncify] Audio::PacketizedRawStream::~PacketizedRawStream\28\29.1[asyncify] Audio::RawStream<3\2c\20true\2c\20true>::~RawStream\28\29 can change the state due to initial scan
[asyncify] non-virtual\20thunk\20to\20Audio::QuickTimeAudioStream::~QuickTimeAudioStream\28\29 can change the state due to initial scan
[asyncify] Audio::makeRawStream\28Common::SeekableReadStream*\2c\20int\2c\20unsigned\20char\2c\20DisposeAfterUse::Flag\29 can change the state due to initial scan
[asyncify] Audio::RawStream<3\2c\20true\2c\20true>::seek\28Audio::Timestamp\20const&\29 can change the state due to initial scan
[asyncify] Audio::RawStream<3\2c\20true\2c\20false>::~RawStream\28\29 can change the state due to initial scan
[asyncify] Audio::RawStream<3\2c\20true\2c\20false>::~RawStream\28\29.1[asyncify]  can change the state due to initial scan
[asyncify] [asyncify] Audio::RawStream<2\2c\20true\2c\20true>::~RawStream\28\29 can change the state due to initial scan
[asyncify] Audio::RawStream<3\2c\20true\2c\20false>::fillBuffer\28int\29 can change the state due to initial scan
[asyncify] Audio::RawStream<2\2c\20true\2c\20true>::fillBuffer\28int\29 can change the state due to initial scan
[asyncify] Audio::RawStream<3\2c\20true\2c\20false>::seek\28Audio::Timestamp\20const&\29 can change the state due to initial scan
[asyncify] Audio::RawStream<2\2c\20true\2c\20true>::seek\28Audio::Timestamp\20const&\29 can change the state due to initial scan
[asyncify] Audio::RawStream<2\2c\20true\2c\20false>::~RawStream\28\29 can change the state due to initial scan
[asyncify] Audio::RawStream<2\2c\20true\2c\20false>::~RawStream\28\29.1 can change the state due to initial scan
[asyncify] Audio::RawStream<3\2c\20true\2c\20true>::fillBuffer\28int\29 can change the state due to initial scan
[asyncify] Audio::RawStream<2\2c\20true\2c\20false>::fillBuffer\28int\29 can change the state due to initial scan
[asyncify] Audio::RawStream<1\2c\20true\2c\20false>::~RawStream\28\29.1 can change the state due to initial scan
[asyncify] Audio::RawStream<2\2c\20true\2c\20false>::seek\28Audio::Timestamp\20const&\29 can change the state due to initial scan
[asyncify] Audio::RawStream<3\2c\20false\2c\20true>::~RawStream\28\29 can change the state due to initial scan
[asyncify] Audio::RawStream<1\2c\20true\2c\20false>::seek\28Audio::Timestamp\20const&\29 can change the state due to initial scan
[asyncify] Audio::RawStream<3\2c\20false\2c\20true>::~RawStream\28\29.1 can change the state due to initial scan
[asyncify] Audio::QuickTimeAudioStream::isStereo\28\29\20const can change the state due to initial scan
[asyncify] Audio::RawStream<3\2c\20false\2c\20true>::fillBuffer\28int\29 can change the state due to initial scan
[asyncify] Audio::RawStream<3\2c\20false\2c\20true>::seek\28Audio::Timestamp\20const&\29 can change the state due to initial scan
[asyncify] [asyncify] Audio::RawStream<3\2c\20false\2c\20false>::~RawStream\28\29Audio::RawStream<2\2c\20false\2c\20true>::~RawStream\28\29.1 can change the state due to initial scan
[asyncify] Audio::RawStream<3\2c\20false\2c\20false>::~RawStream\28\29.1 can change the state due to initial scan
[asyncify] Audio::RawStream<2\2c\20false\2c\20true>::fillBuffer\28int\29 can change the state due to initial scan
[asyncify] Audio::RawStream<2\2c\20false\2c\20false>::~RawStream\28\29 can change the state due to initial scan
[asyncify] Audio::RawStream<2\2c\20false\2c\20true>::seek\28Audio::Timestamp\20const&\29 can change the state due to initial scan
[asyncify] Audio::RawStream<2\2c\20false\2c\20false>::~RawStream\28\29.1 can change the state due to initial scan
[asyncify] Audio::RawStream<2\2c\20false\2c\20false>::fillBuffer\28int\29 can change the state due to initial scan
[asyncify] Audio::RawStream<2\2c\20false\2c\20false>::seek\28Audio::Timestamp\20const&\29 can change the state due to initial scan
[asyncify] Audio::RawStream<1\2c\20false\2c\20false>::~RawStream\28\29 can change the state due to initial scan
[asyncify] [asyncify] Audio::RawStream<1\2c\20false\2c\20false>::fillBuffer\28int\29 can change the state due to initial scan
[asyncify] Audio::RawStream<1\2c\20false\2c\20false>::seek\28Audio::Timestamp\20const&\29[asyncify] [asyncify]  can change the state due to initial scan
[asyncify] Audio::VocStream::~VocStream\28\29.1 can change the state due to initial scan
[asyncify] Audio::VocStream::~VocStream\28\29 can change the state due to initial scan
[asyncify] Audio::VocStream::~VocStream\28\29.2 can change the state due to initial scan
[asyncify] virtual\20thunk\20to\20Audio::VocStream::~VocStream\28\29.1 can change the state due to initial scan
[asyncify] Audio::RawStream<3\2c\20false\2c\20false>::fillBuffer\28int\29[asyncify]  can change the state due to initial scan
[asyncify] Audio::VocStream::fillBuffer\28int\29 can change the state due to initial scan
[asyncify] Audio::VocStream::updateBlockIfNeeded\28\29 can change the state due to initial scan
[asyncify] Audio::RawStream<1\2c\20true\2c\20false>::fillBuffer\28int\29 can change the state due to initial scan
[asyncify] Audio::RawStream<3\2c\20false\2c\20false>::seek\28Audio::Timestamp\20const&\29 can change the state due to initial scan
[asyncify] Audio::makeVOCStream\28Common::SeekableReadStream*\2c\20unsigned\20char\2c\20DisposeAfterUse::Flag\29 can change the state due to initial scan
[asyncify] Audio::makeWAVStream\28Common::SeekableReadStream*\2c\20DisposeAfterUse::Flag\29 can change the state due to initial scan
[asyncify] Audio::VocStream::seek\28Audio::Timestamp\20const&\29 can change the state due to initial scan
[asyncify] Audio::loadWAVFromStream\28Common::SeekableReadStream&\2c\20int&\2c\20int&\2c\20unsigned\20char&\2c\20unsigned\20short*\2c\20int*\2c\20int*\29 can change the state due to initial scan
[asyncify] Audio::WMACodec::getFlags\28Common::SeekableReadStream*\29 can change the state due to initial scan
[asyncify] Audio::WMACodec::init\28Common::SeekableReadStream*\29 can change the state due to initial scan
[asyncify] Audio::VocStream::preProcess\28\29 can change the state due to initial scan
[asyncify] Audio::WMACodec::evalFlags\28unsigned\20short\2c\20Common::SeekableReadStream*\29 can change the state due to initial scan
[asyncify] Common::BitStreamImpl<Common::SeekableReadStream\2c\20unsigned\20long\20long\2c\208\2c\20false\2c\20true>::skip\28unsigned\20int\29 can change the state due to initial scan
[asyncify] unsigned\20int\20Common::BitStreamImpl<Common::SeekableReadStream\2c\20unsigned\20long\20long\2c\208\2c\20false\2c\20true>::getBits<8>\28\29 can change the state due to initial scan
[asyncify] Common::BitStreamImpl<Common::SeekableReadStream\2c\20unsigned\20long\20long\2c\208\2c\20false\2c\20true>::getBits\28unsigned\20long\29 can change the state due to initial scan
[asyncify] unsigned\20int\20Common::BitStreamImpl<Common::SeekableReadStream\2c\20unsigned\20long\20long\2c\208\2c\20false\2c\20true>::getBits<4>\28\29 can change the state due to initial scan
[asyncify] Common::BitStreamImpl<Common::SeekableReadStream\2c\20unsigned\20long\20long\2c\208\2c\20false\2c\20true>::getBit\28\29 can change the state due to initial scan
[asyncify] Audio::WMACodec::decodeSuperFrame\28Common::SeekableReadStream&\29 can change the state due to initial scan
[asyncify] Common::Huffman<Common::BitStreamImpl<Common::SeekableReadStream\2c\20unsigned\20long\20long\2c\208\2c\20false\2c\20true>>::getSymbol\28Common::BitStreamImpl<Common::SeekableReadStream\2c\20unsigned\20long\20long\2c\208\2c\20false\2c\20true>&\29\20const can change the state due to initial scan
[asyncify] unsigned\20int\20Common::BitStreamImpl<Common::SeekableReadStream\2c\20unsigned\20long\20long\2c\208\2c\20false\2c\20true>::getBits<5>\28\29 can change the state due to initial scan
[asyncify] unsigned\20int\20Common::BitStreamImpl<Common::SeekableReadStream\2c\20unsigned\20long\20long\2c\208\2c\20false\2c\20true>::getBits<3>\28\29 can change the state due to initial scan
[asyncify] unsigned\20int\20Common::BitStreamImpl<Common::SeekableReadStream\2c\20unsigned\20long\20long\2c\208\2c\20false\2c\20true>::getBits<2>\28\29 can change the state due to initial scan
[asyncify] unsigned\20int\20Common::BitStreamImpl<Common::SeekableReadStream\2c\20unsigned\20long\20long\2c\208\2c\20false\2c\20true>::getBits<31>\28\29 can change the state due to initial scan
[asyncify] unsigned\20int\20Common::BitStreamImpl<Common::SeekableReadStream\2c\20unsigned\20long\20long\2c\208\2c\20false\2c\20true>::getBits<16>\28\29 can change the state due to initial scan
[asyncify] unsigned\20int\20Common::BitStreamImpl<Common::SeekableReadStream\2c\20unsigned\20long\20long\2c\208\2c\20false\2c\20true>::getBits<7>\28\29 can change the state due to initial scan
[asyncify] [asyncify] [asyncify] [asyncify] unsigned\20int\20Common::BitStreamImpl<Common::SeekableReadStream\2c\20unsigned\20long\20long\2c\208\2c\20false\2c\20true>::getBits<24>\28\29 can change the state due to initial scan
[asyncify] virtual\20thunk\20to\20Audio::XAStream::~XAStream\28\29.1 can change the state due to initial scan
[asyncify] Audio::XAStream::seekToPos\28unsigned\20int\29 can change the state due to initial scan
[asyncify] Audio::XAStream::rewind\28\29 can change the state due to initial scan
[asyncify] Audio::XanDPCMStream::~XanDPCMStream\28\29 can change the state due to initial scan
[asyncify] Audio::XAStream::readBuffer\28short*\2c\20int\29 can change the state due to initial scan
[asyncify] Audio::XanDPCMStream::~XanDPCMStream\28\29.1 can change the state due to initial scan
[asyncify] Audio::XanDPCMStream::makeStream\28Common::SeekableReadStream*\29 can change the state due to initial scan
[asyncify] Audio::Xan_DPCMStream::endOfData\28\29\20const can change the state due to initial scan
[asyncify] Audio::Xan_DPCMStream::readBuffer\28short*\2c\20int\29 can change the state due to initial scan
[asyncify] Audio::XAStream::~XAStream\28\29.1 can change the state due to initial scan
[asyncify] Audio::Infogrames::Instruments::load\28Common::SeekableReadStream&\29 can change the state due to initial scan
[asyncify] Audio::Infogrames::load\28Common::SeekableReadStream&\29 can change the state due to initial scan
[asyncify] Audio::MaxTrax::interrupt\28\29 can change the state due to initial scan
[asyncify] Audio::MaxTrax::load\28Common::SeekableReadStream&\2c\20bool\2c\20bool\29 can change the state due to initial scan
[asyncify] Audio::makeModXmS3mStream\28Common::SeekableReadStream*\2c\20DisposeAfterUse::Flag\2c\20int\2c\20int\2c\20int\29 can change the state due to initial scan
[asyncify] Modules::Module::load\28Common::SeekableReadStream&\2c\20int\29 can change the state due to initial scan
[asyncify] Modules::ModuleModXmS3m::load\28Common::SeekableReadStream&\29 can change the state due to initial scan
[asyncify] Modules::ModuleModXmS3m::loadAmf\28Common::SeekableReadStream&\29 can change the state due to initial scan
[asyncify] Modules::ModuleModXmS3m::readSampleSint8\28Common::SeekableReadStream&\2c\20int\2c\20short*\29 can change the state due to initial scan
[asyncify] Modules::ModuleModXmS3m::readSampleSint16LE\28Common::SeekableReadStream&\2c\20int\2c\20short*\29 can change the state due to initial scan
[asyncify] Modules::ModuleModXmS3m::loadS3m\28Common::SeekableReadStream&\29 can change the state due to initial scan
[asyncify] Modules::ProtrackerStream::ProtrackerStream\28Common::SeekableReadStream*\2c\20int\2c\20int\2c\20bool\29 can change the state due to initial scan
[asyncify] Modules::ProtrackerStream::~ProtrackerStream\28\29 can change the state due to initial scan
[asyncify] Modules::ModuleModXmS3m::loadXm\28Common::SeekableReadStream&\29 can change the state due to initial scan
[asyncify] Modules::ProtrackerStream::updateRow\28\29 can change the state due to initial scan
[asyncify] Modules::ModuleModXmS3m::loadMod\28Common::SeekableReadStream&\29 can change the state due to initial scan
[asyncify] Audio::Paula::Paula\28bool\2c\20int\2c\20unsigned\20int\2c\20Audio::Paula::FilterMode\2c\20int\29 can change the state due to initial scan
[asyncify] int\20Audio::Paula::readBufferIntern<true>\28short*\2c\20int\29 can change the state due to initial scan
[asyncify] int\20Audio::Paula::readBufferIntern<false>\28short*\2c\20int\29 can change the state due to initial scan
[asyncify] Audio::Rjp1::load\28Common::SeekableReadStream*\2c\20Common::SeekableReadStream*\29 can change the state due to initial scan
[asyncify] Audio::SoundFx::play\28\29 can change the state due to initial scan
[asyncify] Audio::makeRjp1Stream\28Common::SeekableReadStream*\2c\20Common::SeekableReadStream*\2c\20int\2c\20int\2c\20bool\29 can change the state due to initial scan
[asyncify] Audio::SoundFx::load\28Common::SeekableReadStream*\2c\20unsigned\20char*\20\28*\29\28char\20const*\2c\20unsigned\20int*\29\29 can change the state due to initial scan
[asyncify] Audio::makeSoundFxStream\28Common::SeekableReadStream*\2c\20unsigned\20char*\20\28*\29\28char\20const*\2c\20unsigned\20int*\29\2c\20int\2c\20bool\2c\20bool\2c\20int\29 can change the state due to initial scan
[asyncify] Audio::Tfmx::load\28Common::SeekableReadStream&\2c\20Common::SeekableReadStream&\2c\20bool\29 can change the state due to initial scan
[asyncify] Audio::Tfmx::trackRun\28bool\29 can change the state due to initial scan
[asyncify] Audio::Tfmx::loadSampleFile\28unsigned\20int&\2c\20Common::SeekableReadStream&\29 can change the state due to initial scan
[asyncify] Audio::Tfmx::loadMdatFile\28Common::SeekableReadStream&\29 can change the state due to initial scan
[asyncify] Audio::Tfmx::doSong\28int\2c\20bool\29 can change the state due to initial scan
[asyncify] DOSBoxCMS::update\28int\2c\20short*\2c\20int\29 can change the state due to initial scan
[asyncify] DOSBoxCMS::init\28\29 can change the state due to initial scan
[asyncify] OPL::DOSBox::DBOPL::Channel*\20OPL::DOSBox::DBOPL::Channel::BlockTemplate<\28OPL::DOSBox::DBOPL::SynthMode\291>\28OPL::DOSBox::DBOPL::Chip*\2c\20unsigned\20int\2c\20int*\29 can change the state due to initial scan
[asyncify] OPL::DOSBox::DBOPL::Channel*\20OPL::DOSBox::DBOPL::Channel::BlockTemplate<\28OPL::DOSBox::DBOPL::SynthMode\292>\28OPL::DOSBox::DBOPL::Chip*\2c\20unsigned\20int\2c\20int*\29 can change the state due to initial scan
[asyncify] OPL::DOSBox::DBOPL::Channel*\20OPL::DOSBox::DBOPL::Channel::BlockTemplate<\28OPL::DOSBox::DBOPL::SynthMode\297>\28OPL::DOSBox::DBOPL::Chip*\2c\20unsigned\20int\2c\20int*\29 can change the state due to initial scan
[asyncify] OPL::DOSBox::DBOPL::Channel*\20OPL::DOSBox::DBOPL::Channel::BlockTemplate<\28OPL::DOSBox::DBOPL::SynthMode\298>\28OPL::DOSBox::DBOPL::Chip*\2c\20unsigned\20int\2c\20int*\29 can change the state due to initial scan
[asyncify] OPL::DOSBox::DBOPL::Channel*\20OPL::DOSBox::DBOPL::Channel::BlockTemplate<\28OPL::DOSBox::DBOPL::SynthMode\293>\28OPL::DOSBox::DBOPL::Chip*\2c\20unsigned\20int\2c\20int*\29[asyncify] OPL::DOSBox::DBOPL::Channel*\20OPL::DOSBox::DBOPL::Channel::BlockTemplate<\28OPL::DOSBox::DBOPL::SynthMode\296>\28OPL::DOSBox::DBOPL::Chip*\2c\20unsigned\20int\2c\20int*\29 can change the state due to initial scan
[asyncify]  can change the state due to initial scan
[asyncify] OPL::DOSBox::DBOPL::Channel*\20OPL::DOSBox::DBOPL::Channel::BlockTemplate<\28OPL::DOSBox::DBOPL::SynthMode\295>\28OPL::DOSBox::DBOPL::Chip*\2c\20unsigned\20int\2c\20int*\29 can change the state due to initial scan
[asyncify] void\20OPL::DOSBox::DBOPL::Channel::GeneratePercussion<true>\28OPL::DOSBox::DBOPL::Chip*\2c\20int*\29 can change the state due to initial scan
[asyncify] OPL::DOSBox::DBOPL::Chip::GenerateBlock2\28unsigned\20int\2c\20int*\29 can change the state due to initial scan
[asyncify] void\20OPL::DOSBox::DBOPL::Channel::GeneratePercussion<false>\28OPL::DOSBox::DBOPL::Chip*\2c\20int*\29 can change the state due to initial scan
[asyncify] OPL::DOSBox::DBOPL::Chip::GenerateBlock3\28unsigned\20int\2c\20int*\29 can change the state due to initial scan
[asyncify] OPL::DOSBox::Chip::read\28\29 can change the state due to initial scan
[asyncify] OPL::DOSBox::OPL::reset\28\29 can change the state due to initial scan
[asyncify] OPL::DOSBox::OPL::init\28\29 can change the state due to initial scan
[asyncify] [asyncify] OPL::DOSBox::OPL::read\28int\29 can change the state due to initial scan
[asyncify] OPL::MAME::OPL::init\28\29 can change the state due to initial scan
[asyncify] OPL::MAME::OPL::write\28int\2c\20int\29 can change the state due to initial scan
[asyncify] OPL::MAME::OPLResetChip\28OPL::MAME::fm_opl_f*\29 can change the state due to initial scan
[asyncify] OPL::MAME::OPLWrite\28OPL::MAME::fm_opl_f*\2c\20int\2c\20int\29 can change the state due to initial scan
[asyncify] OPL::MAME::OPL_STATUS_RESET\28OPL::MAME::fm_opl_f*\2c\20int\29 can change the state due to initial scan
[asyncify] OPL::MAME::OPL_STATUSMASK_SET\28OPL::MAME::fm_opl_f*\2c\20int\29 can change the state due to initial scan
[asyncify] OPL::MAME::OPLWriteReg\28OPL::MAME::fm_opl_f*\2c\20int\2c\20int\29 can change the state due to initial scan
[asyncify] OPL::MAME::OPLTimerOver\28OPL::MAME::fm_opl_f*\2c\20int\29 can change the state due to initial scan
[asyncify] PC98AudioCoreInternal::timerCallbackB\28\29 can change the state due to initial scan
[asyncify] PCMChannel_Base::updateOutput\28\29 can change the state due to initial scan
[asyncify] PC98AudioCoreInternal::timerCallbackA\28\29 can change the state due to initial scan
[asyncify] PCMDevice_Base::readBuffer\28int*\2c\20unsigned\20int\29 can change the state due to initial scan
[asyncify] [asyncify] SegaAudioInterfaceInternal::timerCallbackB\28\29 can change the state due to initial scan
[asyncify] TownsAudioInterfaceInternal::callback\28int\2c\20...\29 can change the state due to initial scan
[asyncify] TownsAudioInterfaceInternal::~TownsAudioInterfaceInternal\28\29 can change the state due to initial scan
[asyncify] TownsAudioInterfaceInternal::processCommand\28int\2c\20void*&\29 can change the state due to initial scan
[asyncify] EuphonyPlayer::event_controlChange_pitchWheel\28\29 can change the state due to initial scan
[asyncify] TownsAudioInterfaceInternal::nextTickEx\28int*\2c\20unsigned\20int\29[asyncify]  can change the state due to initial scan
[asyncify] TownsAudioInterfaceInternal::timerCallbackB\28\29 can change the state due to initial scan
[asyncify] EuphonyPlayer::event_sysex\28\29 can change the state due to initial scan
[asyncify] [asyncify] [asyncify] EuphonyPlayer::~EuphonyPlayer\28\29 can change the state due to initial scan
[asyncify] EuphonyPlayer::init\28\29[asyncify] TownsAudioInterfaceInternal::updateOutputVolumeInternal\28\29 can change the state due to initial scan
[asyncify] EuphonyPlayer::event_polyphonicAftertouch\28\29 can change the state due to initial scan
[asyncify] EuphonyPlayer::sendControllerReset\28int\2c\20int\29 can change the state due to initial scan
[asyncify] EuphonyPlayer::clearHangingNotes\28\29 can change the state due to initial scan
[asyncify] EuphonyPlayer::allPartsOff\28\29 can change the state due to initial scan
[asyncify] TownsAudioInterfaceInternal::timerCallbackA\28\29 can change the state due to initial scan
[asyncify] EuphonyPlayer::updateHangingNotes\28\29 can change the state due to initial scan
[asyncify] EuphonyPlayer::sendPendingEvent\28int\2c\20int\2c\20int\2c\20int\29[asyncify] EuphonyPlayer::sendAllNotesOff\28int\2c\20int\29 can change the state due to initial scan
[asyncify] EuphonyPlayer::sendByte\28unsigned\20char\2c\20unsigned\20char\29 can change the state due to initial scan
[asyncify] Common::Functor0Mem<bool\2c\20EuphonyPlayer>::operator\28\29\28\29\20const can change the state due to initial scan
[asyncify] TownsPC98_MusicChannel::~TownsPC98_MusicChannel\28\29 can change the state due to initial scan
[asyncify] TownsPC98_MusicChannel::processControlEvent\28unsigned\20char\29 can change the state due to initial scan
[asyncify] TownsPC98_MusicChannel::processEvents\28\29 can change the state due to initial scan
[asyncify] EuphonyPlayer::parseEvent\28\29 can change the state due to initial scan
[asyncify] TownsPC98_MusicChannelSSG::processControlEvent\28unsigned\20char\29 can change the state due to initial scan
[asyncify] TownsPC98_MusicChannelPCM::processControlEvent\28unsigned\20char\29 can change the state due to initial scan
[asyncify] TownsPC98_MusicChannelPCM::~TownsPC98_MusicChannelPCM\28\29 can change the state due to initial scan
[asyncify] TownsPC98_MusicChannelPCM::processEvents\28\29 can change the state due to initial scan
[asyncify] TownsPC98_AudioDriver::~TownsPC98_AudioDriver\28\29 can change the state due to initial scan
[asyncify] TownsPC98_MusicChannelSSG::processEvents\28\29 can change the state due to initial scan
[asyncify] TownsPC98_AudioDriver::reset\28\29 can change the state due to initial scan
[asyncify] TownsPC98_AudioDriver::loadMusicData\28unsigned\20char*\2c\20bool\29 can change the state due to initial scan
[asyncify] TownsPC98_AudioDriver::fadeStep\28\29 can change the state due to initial scan
[asyncify] TownsPC98_AudioDriver::timerCallbackA\28\29 can change the state due to initial scan
[asyncify] TownsPC98_AudioDriver::startSoundEffect\28\29 can change the state due to initial scan
[asyncify] TownsPC98_AudioDriver::timerCallbackB\28\29 can change the state due to initial scan
[asyncify] Common::Functor1Mem<unsigned\20char\2c\20bool\2c\20TownsPC98_MusicChannel>::operator\28\29\28unsigned\20char\29\20const can change the state due to initial scan
[asyncify] Common::Functor1Mem<unsigned\20char\2c\20bool\2c\20TownsPC98_MusicChannelSSG>::operator\28\29\28unsigned\20char\29\20const can change the state due to initial scan
[asyncify] TownsPC98_MusicChannelSSG::~TownsPC98_MusicChannelSSG\28\29.1 can change the state due to initial scan
[asyncify] Common::Functor1Mem<unsigned\20char\2c\20bool\2c\20TownsPC98_MusicChannelPCM>::operator\28\29\28unsigned\20char\29\20const can change the state due to initial scan
[asyncify] TownsPC98_FmSynth::deinit\28\29 can change the state due to initial scan
[asyncify] TownsPC98_FmSynth::TownsPC98_FmSynth\28Audio::Mixer*\2c\20TownsPC98_FmSynth::EmuType\29 can change the state due to initial scan
[asyncify] TownsPC98_FmSynth::init\28\29 can change the state due to initial scan
[asyncify] TownsPC98_FmSynth::~TownsPC98_FmSynth\28\29 can change the state due to initial scan
[asyncify] Common::Functor0Mem<void\2c\20TownsPC98_FmSynth>::operator\28\29\28\29\20const can change the state due to initial scan
[asyncify] TownsPC98_FmSynth::readBuffer\28short*\2c\20int\29[asyncify] MidiDriver_MT32::close\28\29 can change the state due to initial scan
[asyncify] MidiDriver_MT32::open\28\29 can change the state due to initial scan
[asyncify] MT32EmuMusicPlugin::createInstance\28MidiDriver**\2c\20unsigned\20int\29\20const can change the state due to initial scan
[asyncify] MidiDriver_Emulated::readBuffer\28short*\2c\20int\29 can change the state due to initial scan
[asyncify] non-virtual\20thunk\20to\20MidiDriver_Emulated::open\28\29 can change the state due to initial scan
[asyncify] MT32Emu::CppInterfaceImpl::onErrorControlROM\28void*\29 can change the state due to initial scan
[asyncify] MT32Emu::CppInterfaceImpl::onErrorPCMROM\28void*\29 can change the state due to initial scan
[asyncify] [asyncify] MT32Emu::CppInterfaceImpl::onMIDIMessagePlayed\28void*\29 can change the state due to initial scan
[asyncify] MT32Emu::CppInterfaceImpl::onMIDIQueueOverflow\28void*\29 can change the state due to initial scan
[asyncify] MT32Emu::CppInterfaceImpl::onDeviceReset\28void*\29 can change the state due to initial scan
[asyncify] MT32Emu::CppInterfaceImpl::onDeviceReconfig\28void*\29 can change the state due to initial scan
[asyncify] MT32Emu::CppInterfaceImpl::onNewReverbMode\28void*\2c\20unsigned\20char\29[asyncify]  can change the state due to initial scan
[asyncify] MidiDriver_Emulated::open\28\29 can change the state due to initial scan
[asyncify] MT32Emu::CppInterfaceImpl::onPolyStateChanged\28void*\2c\20unsigned\20char\29[asyncify] MT32Emu::CppInterfaceImpl::onProgramChanged\28void*\2c\20unsigned\20char\2c\20char\20const*\2c\20char\20const*\29 can change the state due to initial scan
[asyncify] MT32Emu::CppInterfaceImpl::onMIDISystemRealtime\28void*\2c\20unsigned\20char\29 can change the state due to initial scan
[asyncify] MT32Emu::CppInterfaceImpl::showLCDMessage\28void*\2c\20char\20const*\29 can change the state due to initial scan
[asyncify] MT32Emu::CppInterfaceImpl::onNewReverbTime\28void*\2c\20unsigned\20char\29 can change the state due to initial scan
[asyncify] Audio::PCSpeaker::readBuffer\28short*\2c\20int\29 can change the state due to initial scan
[asyncify] RawFile::GetBytes\28unsigned\20long\2c\20unsigned\20int\2c\20void*\29\20const can change the state due to initial scan
[asyncify] MemFile::GetShort\28unsigned\20long\29\20const can change the state due to initial scan
[asyncify] MemFile::GetWord\28unsigned\20long\29\20const can change the state due to initial scan
[asyncify] [asyncify] MemFile::~MemFile\28\29 can change the state due to initial scan
[asyncify] ListTypeChunk::GetSize\28\29 can change the state due to initial scan
[asyncify] ListTypeChunk::Write\28unsigned\20char*\29 can change the state due to initial scan
[asyncify] MemFile::size\28\29\20const can change the state due to initial scan
[asyncify] SF2File::SaveToMem\28\29 can change the state due to initial scan
[asyncify] SynthSampInfo::SetLoopInfo\28Loop&\2c\20VGMSamp*\29 can change the state due to initial scan
[asyncify] VGMColl::UnpackSampColl\28SynthFile&\2c\20VGMSampColl*\2c\20Common::Array<VGMSamp*>&\29 can change the state due to initial scan
[asyncify] VGMInstrSet::Load\28\29 can change the state due to initial scan
[asyncify] VGMInstrSet::~VGMInstrSet\28\29 can change the state due to initial scan
[asyncify] VGMInstrSet::LoadInstrs\28\29 can change the state due to initial scan
[asyncify] VGMItem::GetByte\28unsigned\20int\29 can change the state due to initial scan
[asyncify] VGMInstr::~VGMInstr\28\29 can change the state due to initial scan
[asyncify] VGMItem::GetShort\28unsigned\20int\29 can change the state due to initial scan
[asyncify] VGMContainerItem::~VGMContainerItem\28\29 can change the state due to initial scan
[asyncify] VGMFile::LoadVGMFile\28\29 can change the state due to initial scan
[asyncify] VGMRgn::~VGMRgn\28\29 can change the state due to initial scan
[asyncify] VGMSampColl::~VGMSampColl\28\29 can change the state due to initial scan
[asyncify] VGMSampColl::Load\28\29 can change the state due to initial scan
[asyncify] PSXSamp::ConvertToStdWave\28unsigned\20char*\29 can change the state due to initial scan
[asyncify] PSXSampColl::GetSampleInfo\28\29 can change the state due to initial scan
[asyncify] Vab::GetHeaderInfo\28\29 can change the state due to initial scan
[asyncify] VabInstr::LoadInstr\28\29 can change the state due to initial scan
[asyncify] Vab::GetInstrPointers\28\29 can change the state due to initial scan
[asyncify] OPL::NUKED::OPL3_Generate\28OPL::NUKED::_opl3_chip*\2c\20short*\29 can change the state due to initial scan
[asyncify] OPL::NUKED::OPL::init\28\29 can change the state due to initial scan
[asyncify] Common::GenericArchiveMember::createReadStream\28\29\20const can change the state due to initial scan
[asyncify] Common::SharedArchiveContents::makeStrong\28\29 can change the state due to initial scan
[asyncify] Common::Archive::listMatchingMembers\28Common::List<Common::SharedPtr<Common::ArchiveMember>>&\2c\20Common::Path\20const&\29\20const can change the state due to initial scan
[asyncify] Common::SearchSet::addDirectory\28Common::String\20const&\2c\20Common::String\20const&\2c\20int\2c\20int\2c\20bool\29 can change the state due to initial scan
[asyncify] Common::SearchSet::clear\28\29 can change the state due to initial scan
[asyncify] Common::SearchSet::remove\28Common::String\20const&\29 can change the state due to initial scan
[asyncify] Common::MemcachingCaseInsensitiveArchive::createReadStreamForMember\28Common::Path\20const&\29\20const can change the state due to initial scan
[asyncify] Common::SearchSet::listMembers\28Common::List<Common::SharedPtr<Common::ArchiveMember>>&\29\20const can change the state due to initial scan
[asyncify] Common::SearchSet::getMember\28Common::Path\20const&\29\20const can change the state due to initial scan
[asyncify] Common::SearchSet::createReadStreamForMember\28Common::Path\20const&\29\20const can change the state due to initial scan
[asyncify] Common::SearchManager::clear\28\29 can change the state due to initial scan
[asyncify] Common::HashMap<Common::String\2c\20Common::SharedArchiveContents\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>::~HashMap\28\29 can change the state due to initial scan
[asyncify] Common::ArchiveMember::getDisplayName\28\29\20const can change the state due to initial scan
[asyncify] Common::SearchSet::listMatchingMembers\28Common::List<Common::SharedPtr<Common::ArchiveMember>>&\2c\20Common::Path\20const&\29\20const can change the state due to initial scan
[asyncify] [asyncify] [asyncify] Common::SearchSet::hasFile\28Common::Path\20const&\29\20const can change the state due to initial scan
[asyncify] Common::ConcatReadStream::ConcatReadStream\28Common::Array<Common::SharedPtr<Common::SeekableReadStream>>\29 can change the state due to initial scan
[asyncify] Common::ConcatReadStream::ConcatReadStream\28Common::Array<Common::SharedPtr<Common::SeekableReadStream>>\29.1 can change the state due to initial scan
[asyncify] Common::ConcatReadStream::~ConcatReadStream\28\29 can change the state due to initial scan
[asyncify] Common::ConcatReadStream::read\28void*\2c\20unsigned\20int\29 can change the state due to initial scan
[asyncify] Common::ConcatReadStream::~ConcatReadStream\28\29.1 can change the state due to initial scan
[asyncify] Common::ConfigManager::defragment\28\29 can change the state due to initial scan
[asyncify] Common::SearchSet::addSubDirectoriesMatching\28Common::FSNode\20const&\2c\20Common::String\2c\20bool\2c\20int\2c\20int\2c\20bool\29 can change the state due to initial scan
[asyncify] Common::ConfigManager::loadDefaultConfigFile\28\29 can change the state due to initial scan
[asyncify] Common::ConfigManager::loadConfigFile\28Common::String\20const&\29 can change the state due to initial scan
[asyncify] Common::ConfigManager::writeDomain\28Common::WriteStream&\2c\20Common::String\20const&\2c\20Common::ConfigManager::Domain\20const&\29 can change the state due to initial scan
[asyncify] Common::ConfigManager::loadFromStream\28Common::SeekableReadStream&\29 can change the state due to initial scan
[asyncify] Common::ConfigManager::flushToDisk\28\29 can change the state due to initial scan
[asyncify] Common::CoroutineScheduler::~CoroutineScheduler\28\29 can change the state due to initial scan
[asyncify] Common::CoroutineScheduler::schedule\28\29 can change the state due to initial scan
[asyncify] Common::CoroutineScheduler::reset\28\29 can change the state due to initial scan
[asyncify] Common::CoroutineScheduler::killProcess\28Common::PROCESS*\29 can change the state due to initial scan
[asyncify] Common::CoroutineScheduler::sleep\28Common::CoroBaseContext*&\2c\20unsigned\20int\29 can change the state due to initial scan
[asyncify] Common::CoroutineScheduler::waitForMultipleObjects\28Common::CoroBaseContext*&\2c\20int\2c\20unsigned\20int*\2c\20bool\2c\20unsigned\20int\2c\20bool*\29 can change the state due to initial scan
[asyncify] Common::CoroutineScheduler::killMatchingProcess\28unsigned\20int\2c\20int\29[asyncify] Common::CoroBaseContext::~CoroBaseContext\28\29.1[asyncify] [asyncify]  can change the state due to initial scan
[asyncify] Common::CoroutineScheduler::sleep\28Common::CoroBaseContext*&\2c\20unsigned\20int\29::CoroContextTag::~CoroContextTag\28\29 can change the state due to initial scan
[asyncify] debug\28char\20const*\2c\20...\29 can change the state due to initial scan
[asyncify] debug\28int\2c\20char\20const*\2c\20...\29 can change the state due to initial scan
[asyncify] debugN\28char\20const*\2c\20...\29 can change the state due to initial scan
[asyncify] debugN\28int\2c\20char\20const*\2c\20...\29 can change the state due to initial scan
[asyncify] debugC\28int\2c\20unsigned\20int\2c\20char\20const*\2c\20...\29 can change the state due to initial scan
[asyncify] debugCN\28int\2c\20unsigned\20int\2c\20char\20const*\2c\20...\29 can change the state due to initial scan
[asyncify] debugCN\28unsigned\20int\2c\20char\20const*\2c\20...\29 can change the state due to initial scan
[asyncify] debugC\28unsigned\20int\2c\20char\20const*\2c\20...\29 can change the state due to initial scan
[asyncify] Common::EventDispatcher::~EventDispatcher\28\29 can change the state due to initial scan
[asyncify] Common::EventDispatcher::dispatchPoll\28\29 can change the state due to initial scan
[asyncify] Common::EventDispatcher::dispatchEvent\28Common::Event\20const&\29 can change the state due to initial scan
[asyncify] [asyncify] Common::KeyboardRepeatEventSourceWrapper::allowMapping\28\29\20constCommon::EventDispatcher::dispatch\28\29 can change the state due to initial scan
[asyncify] Common::CoroutineScheduler::waitForMultipleObjects\28Common::CoroBaseContext*&\2c\20int\2c\20unsigned\20int*\2c\20bool\2c\20unsigned\20int\2c\20bool*\29::CoroContextTag::~CoroContextTag\28\29 can change the state due to initial scan
[asyncify] Common::File::~File\28\29.1[asyncify] Common::File::~File\28\29 can change the state due to initial scan
[asyncify] Common::File::~File\28\29.2 can change the state due to initial scan
[asyncify] virtual\20thunk\20to\20Common::File::~File\28\29 can change the state due to initial scan
[asyncify] [asyncify] [asyncify] Common::File::open\28Common::Path\20const&\29 can change the state due to initial scan
[asyncify] Common::EventDispatcher::unregisterMapper\28Common::EventMapper*\29 can change the state due to initial scan
[asyncify] Common::File::open\28Common::FSNode\20const&\29 can change the state due to initial scan
[asyncify] Common::File::open\28Common::Path\20const&\2c\20Common::Archive&\29 can change the state due to initial scan
[asyncify] Common::File::close\28\29 can change the state due to initial scan
[asyncify] Common::File::exists\28Common::Path\20const&\29 can change the state due to initial scan
[asyncify] Common::File::err\28\29\20const can change the state due to initial scan
[asyncify] [asyncify] virtual\20thunk\20to\20Common::File::clearErr\28\29 can change the state due to initial scan
[asyncify] Common::File::eos\28\29\20const can change the state due to initial scan
[asyncify] virtual\20thunk\20to\20Common::File::eos\28\29\20const[asyncify] Common::File::pos\28\29\20const can change the state due to initial scan
[asyncify]  can change the state due to initial scan
[asyncify] virtual\20thunk\20to\20Common::File::err\28\29\20const can change the state due to initial scan
[asyncify] Common::File::read\28void*\2c\20unsigned\20int\29 can change the state due to initial scan
[asyncify] virtual\20thunk\20to\20Common::File::read\28void*\2c\20unsigned\20int\29 can change the state due to initial scan
[asyncify] Common::DumpFile::~DumpFile\28\29 can change the state due to initial scan
[asyncify] Common::DumpFile::~DumpFile\28\29.1 can change the state due to initial scan
[asyncify] Common::File::clearErr\28\29[asyncify] Common::DumpFile::~DumpFile\28\29.2 can change the state due to initial scan
[asyncify] Common::KeyboardRepeatEventSourceWrapper::pollEvent\28Common::Event&\29 can change the state due to initial scan
[asyncify] virtual\20thunk\20to\20Common::DumpFile::~DumpFile\28\29.1 can change the state due to initial scan
[asyncify] Common::DumpFile::open\28Common::FSNode\20const&\29 can change the state due to initial scan
[asyncify] Common::DumpFile::open\28Common::String\20const&\2c\20bool\29 can change the state due to initial scan
[asyncify] Common::File::seek\28long\20long\2c\20int\29 can change the state due to initial scan
[asyncify] Common::DumpFile::close\28\29 can change the state due to initial scan
[asyncify] Common::DumpFile::err\28\29\20const can change the state due to initial scan
[asyncify] virtual\20thunk\20to\20Common::DumpFile::err\28\29\20const can change the state due to initial scan
[asyncify] Common::DumpFile::clearErr\28\29 can change the state due to initial scan
[asyncify] [asyncify] [asyncify] Common::EventDispatcher::unregisterObserver\28Common::EventObserver*\29Common::DumpFile::write\28void\20const*\2c\20unsigned\20int\29[asyncify] Common::DumpFile::pos\28\29\20const can change the state due to initial scan
[asyncify] Common::DumpFile::seek\28long\20long\2c\20int\29 can change the state due to initial scan
[asyncify] virtual\20thunk\20to\20Common::DumpFile::~DumpFile\28\29 can change the state due to initial scan
[asyncify] Common::DumpFile::size\28\29\20const can change the state due to initial scan
[asyncify] Common::FSNode::isDirectory\28\29\20const can change the state due to initial scan
[asyncify] Common::FSNode::exists\28\29\20const can change the state due to initial scan
[asyncify] Common::FSNode::FSNode\28Common::Path\20const&\29 can change the state due to initial scan
[asyncify] Common::FSNode::getChild\28Common::String\20const&\29\20const can change the state due to initial scan
[asyncify] Common::FSNode::operator<\28Common::FSNode\20const&\29\20const[asyncify] Common::FSNode::getDisplayName\28\29\20const can change the state due to initial scan
[asyncify] Common::FSNode::getPath\28\29\20const can change the state due to initial scan
[asyncify] Common::FSNode::getParent\28\29\20const can change the state due to initial scan
[asyncify] Common::FSNode::isWritable\28\29\20const can change the state due to initial scan
[asyncify] Common::FSNode::isReadable\28\29\20const can change the state due to initial scan
[asyncify] Common::FSNode::getName\28\29\20const can change the state due to initial scan
[asyncify] Common::FSNode::createReadStream\28\29\20const can change the state due to initial scan
[asyncify] Common::FSNode::createDirectory\28\29\20const can change the state due to initial scan
[asyncify] Common::FSNode::getChildren\28Common::FSList&\2c\20Common::FSNode::ListMode\2c\20bool\29\20const can change the state due to initial scan
[asyncify] Common::FSDirectory::~FSDirectory\28\29 can change the state due to initial scan
[asyncify] Common::FSDirectory::ensureCached\28\29\20const can change the state due to initial scan
[asyncify] Common::FSDirectory::hasFile\28Common::Path\20const&\29\20const can change the state due to initial scan
[asyncify] Common::FSDirectory::createReadStreamForMember\28Common::Path\20const&\29\20const can change the state due to initial scan
[asyncify] Common::FSDirectory::getSubDirectory\28Common::Path\20const&\2c\20int\2c\20bool\2c\20bool\29 can change the state due to initial scan
[asyncify] Common::FSDirectory::getSubDirectory\28Common::Path\20const&\2c\20Common::Path\20const&\2c\20int\2c\20bool\2c\20bool\29 can change the state due to initial scan
[asyncify] Common::FSDirectory::cacheDirectoryRecursive\28Common::FSNode\2c\20int\2c\20Common::Path\20const&\29\20const can change the state due to initial scan
[asyncify] Common::FSNode::~FSNode\28\29.1 can change the state due to initial scan
[asyncify] Common::FSDirectory::getMember\28Common::Path\20const&\29\20const can change the state due to initial scan
[asyncify] Common::BasePtrTrackerImpl<AbstractFSNode>::destructObject\28\29[asyncify] Common::FSNode::createWriteStream\28\29\20const can change the state due to initial scan
[asyncify] Common::FSDirectory::listMembers\28Common::List<Common::SharedPtr<Common::ArchiveMember>>&\29\20const can change the state due to initial scan
[asyncify] Common::FSDirectory::listMatchingMembers\28Common::List<Common::SharedPtr<Common::ArchiveMember>>&\2c\20Common::Path\20const&\29\20const can change the state due to initial scan
[asyncify] Common::MacResManager::close\28\29 can change the state due to initial scan
[asyncify] Common::MacResManager::getResForkDataSize\28\29\20const can change the state due to initial scan
[asyncify] Common::MacResManager::computeResForkMD5AsString\28unsigned\20int\2c\20bool\29\20const can change the state due to initial scan
[asyncify] Common::MacResManager::load\28Common::SeekableReadStream*\29 can change the state due to initial scan
[asyncify] Common::MacResManager::loadFromMacBinary\28Common::SeekableReadStream*\29 can change the state due to initial scan
[asyncify] Common::MacResManager::loadFromRawFork\28Common::SeekableReadStream*\29 can change the state due to initial scan
[asyncify] Common::MacResManager::loadFromAppleDouble\28Common::SeekableReadStream*\29 can change the state due to initial scan
[asyncify] Common::MacResManager::open\28Common::Path\20const&\2c\20Common::Archive&\29 can change the state due to initial scan
[asyncify] Common::MacResManager::readAndValidateMacBinaryHeader\28Common::SeekableReadStream&\2c\20unsigned\20char\20\28&\29\20\5b128\5d\29 can change the state due to initial scan
[asyncify] Common::MacResManager::exists\28Common::Path\20const&\29 can change the state due to initial scan
[asyncify] Common::MacResManager::openFileOrDataFork\28Common::Path\20const&\2c\20Common::Archive&\29 can change the state due to initial scan
[asyncify] Common::MacResManager::getFileFinderInfo\28Common::Path\20const&\2c\20Common::Archive&\2c\20Common::MacFinderInfo&\2c\20Common::MacFinderExtendedInfo&\29 can change the state due to initial scan
[asyncify] Common::MacResManager::isRawFork\28Common::SeekableReadStream&\29 can change the state due to initial scan
[asyncify] Common::MacResManager::getFinderInfoFromAppleDouble\28Common::SeekableReadStream*\2c\20Common::MacFinderInfo&\2c\20Common::MacFinderExtendedInfo&\29 can change the state due to initial scan
[asyncify] Common::MacResManager::getResource\28unsigned\20int\2c\20unsigned\20short\29 can change the state due to initial scan
[asyncify] Common::MacResManager::getResource\28Common::String\20const&\29 can change the state due to initial scan
[asyncify] Common::MacResManager::getResource\28unsigned\20int\2c\20Common::String\20const&\29 can change the state due to initial scan
[asyncify] Common::MacResManager::dumpRaw\28\29 can change the state due to initial scan
[asyncify] Common::MacResManager::parseVers\28Common::SeekableReadStream*\29 can change the state due to initial scan
[asyncify] Common::Mutex::Mutex\28\29 can change the state due to initial scan
[asyncify] Common::MacResManager::readMap\28\29 can change the state due to initial scan
[asyncify] Common::Mutex::~Mutex\28\29 can change the state due to initial scan
[asyncify] Common::Mutex::lock\28\29 can change the state due to initial scan
[asyncify] Common::Mutex::unlock\28\29 can change the state due to initial scan
[asyncify] Common::StackLock::StackLock\28Common::MutexInternal*\2c\20char\20const*\29 can change the state due to initial scan
[asyncify] Common::computeStreamMD5\28Common::ReadStream&\2c\20unsigned\20char*\2c\20unsigned\20int\29 can change the state due to initial scan
[asyncify] Common::StackLock::lock\28\29 can change the state due to initial scan
[asyncify] Common::MacResManager::listFiles\28Common::Array<Common::String>&\2c\20Common::String\20const&\29 can change the state due to initial scan
[asyncify] Common::StackLock::StackLock\28Common::Mutex\20const&\2c\20char\20const*\29 can change the state due to initial scan
[asyncify] Common::StackLock::~StackLock\28\29 can change the state due to initial scan
[asyncify] Common::StackLock::unlock\28\29 can change the state due to initial scan
[asyncify] Common::OSDMessageQueue::pollEvent\28Common::Event&\29 can change the state due to initial scan
[asyncify] Common::RandomSource::RandomSource\28Common::String\20const&\29 can change the state due to initial scan
[asyncify] Common::String::forEachLine\28Common::String\20\28*\29\28Common::String\2c\20void*\29\2c\20...\29\20const can change the state due to initial scan
[asyncify] Common::WriteStream::writeStream\28Common::SeekableReadStream*\29 can change the state due to initial scan
[asyncify] Common::WriteStream::writeStream\28Common::ReadStream*\2c\20unsigned\20int\29 can change the state due to initial scan
[asyncify] Common::WriteStream::writeString\28Common::String\20const&\29 can change the state due to initial scan
[asyncify] Common::ReadStream::readStream\28unsigned\20int\29 can change the state due to initial scan
[asyncify] Common::ReadStream::readString\28char\2c\20unsigned\20long\29 can change the state due to initial scan
[asyncify] Common::ReadStream::readPascalString\28bool\29 can change the state due to initial scan
[asyncify] Common::SubReadStream::read\28void*\2c\20unsigned\20int\29 can change the state due to initial scan
[asyncify] virtual\20thunk\20to\20Common::SubReadStream::read\28void*\2c\20unsigned\20int\29 can change the state due to initial scan
[asyncify] Common::SeekableReadStream::readLine\28char*\2c\20unsigned\20long\2c\20bool\29 can change the state due to initial scan
[asyncify] Common::SeekableReadStream::readLine\28bool\29 can change the state due to initial scan
[asyncify] [asyncify] Common::SeekableSubReadStream::seek\28long\20long\2c\20int\29 can change the state due to initial scan
[asyncify] Common::SeekableSubReadStream::SeekableSubReadStream\28Common::SeekableReadStream*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20DisposeAfterUse::Flag\29 can change the state due to initial scan
[asyncify] Common::SafeSeekableSubReadStream::read\28void*\2c\20unsigned\20int\29 can change the state due to initial scan
[asyncify] virtual\20thunk\20to\20Common::SafeSeekableSubReadStream::read\28void*\2c\20unsigned\20int\29 can change the state due to initial scan
[asyncify] Common::SeekableReadStream::hexdump\28int\2c\20int\2c\20int\29 can change the state due to initial scan
[asyncify] Common::MemoryReadStream::~MemoryReadStream\28\29.1 can change the state due to initial scan
[asyncify] Common::SubReadStream::err\28\29\20const[asyncify] [asyncify] Common::SubReadStream::~SubReadStream\28\29[asyncify] Common::SubReadStream::eos\28\29\20const can change the state due to initial scan
[asyncify] Common::SeekableSubReadStream::~SeekableSubReadStream\28\29 can change the state due to initial scan
[asyncify] [asyncify] [asyncify] virtual\20thunk\20to\20Common::SeekableSubReadStream::~SeekableSubReadStream\28\29.1 can change the state due to initial scan
[asyncify] Common::SeekableSubReadStream::~SeekableSubReadStream\28\29.1 can change the state due to initial scan
[asyncify] Common::SafeSeekableSubReadStream::~SafeSeekableSubReadStream\28\29[asyncify] Common::MemoryReadStream::~MemoryReadStream\28\29 can change the state due to initial scan
[asyncify] Common::SafeSeekableSubReadStream::~SafeSeekableSubReadStream\28\29.1 can change the state due to initial scan
[asyncify] virtual\20thunk\20to\20Common::SafeSeekableSubReadStream::~SafeSeekableSubReadStream\28\29 can change the state due to initial scan
[asyncify] Common::\28anonymous\20namespace\29::BufferedReadStream::~BufferedReadStream\28\29[asyncify] Common::\28anonymous\20namespace\29::BufferedReadStream::~BufferedReadStream\28\29.1 can change the state due to initial scan
[asyncify] Common::\28anonymous\20namespace\29::BufferedReadStream::err\28\29\20const can change the state due to initial scan
[asyncify] virtual\20thunk\20to\20Common::SafeSeekableSubReadStream::~SafeSeekableSubReadStream\28\29.1 can change the state due to initial scan
[asyncify] Common::\28anonymous\20namespace\29::BufferedReadStream::clearErr\28\29[asyncify] Common::\28anonymous\20namespace\29::BufferedSeekableReadStream::~BufferedSeekableReadStream\28\29 can change the state due to initial scan
[asyncify] Common::\28anonymous\20namespace\29::BufferedReadStream::read\28void*\2c\20unsigned\20int\29 can change the state due to initial scan
[asyncify] Common::\28anonymous\20namespace\29::BufferedSeekableReadStream::~BufferedSeekableReadStream\28\29.1 can change the state due to initial scan
[asyncify] non-virtual\20thunk\20to\20Common::\28anonymous\20namespace\29::BufferedSeekableReadStream::~BufferedSeekableReadStream\28\29 can change the state due to initial scan
[asyncify] non-virtual\20thunk\20to\20Common::\28anonymous\20namespace\29::BufferedSeekableReadStream::~BufferedSeekableReadStream\28\29.1 can change the state due to initial scan
[asyncify] [asyncify] non-virtual\20thunk\20to\20Common::\28anonymous\20namespace\29::BufferedSeekableReadStream::pos\28\29\20const can change the state due to initial scan
[asyncify] non-virtual\20thunk\20to\20Common::\28anonymous\20namespace\29::BufferedSeekableReadStream::size\28\29\20const can change the state due to initial scan
[asyncify] Common::\28anonymous\20namespace\29::BufferedWriteStream::~BufferedWriteStream\28\29 can change the state due to initial scan
[asyncify] [asyncify] Common::DumpFile::flush\28\29 can change the state due to initial scan
[asyncify] Common::\28anonymous\20namespace\29::BufferedWriteStream::pos\28\29\20const can change the state due to initial scan
[asyncify] Common::\28anonymous\20namespace\29::BufferedWriteStream::flush\28\29 can change the state due to initial scan
[asyncify] [asyncify] Common::\28anonymous\20namespace\29::BufferedWriteStream::seek\28long\20long\2c\20int\29 can change the state due to initial scan
[asyncify] Common::loadCJKTables\28\29 can change the state due to initial scan
[asyncify] Common::loadCJKTable\28Common::File&\2c\20int\2c\20unsigned\20long\29 can change the state due to initial scan
[asyncify] OSystem::initBackend\28\29 can change the state due to initial scan
[asyncify] OSystem::fatalError\28\29 can change the state due to initial scan
[asyncify] OSystem::destroy\28\29 can change the state due to initial scan
[asyncify] OSystem::setGraphicsMode\28char\20const*\29 can change the state due to initial scan
[asyncify] [asyncify] OSystem::createConfigWriteStream\28\29 can change the state due to initial scan
[asyncify] warning\28char\20const*\2c\20...\29 can change the state due to initial scan
[asyncify] Common::TTSVoice::~TTSVoice\28\29 can change the state due to initial scan
[asyncify] Common::\28anonymous\20namespace\29::BufferedWriteStream::size\28\29\20const can change the state due to initial scan
[asyncify] Common::TextToSpeechManager::enable\28bool\29 can change the state due to initial scan
[asyncify] error\28char\20const*\2c\20...\29 can change the state due to initial scan
[asyncify] Common::TextToSpeechManager::popState\28\29 can change the state due to initial scan
[asyncify] Common::TextToSpeechManager::pushState\28\29 can change the state due to initial scan
[asyncify] OSystem::setStretchMode\28char\20const*\29 can change the state due to initial scan
[asyncify] Common::TranslationManager::setLanguage\28Common::String\20const&\29 can change the state due to initial scan
[asyncify] Common::TranslationManager::openTranslationsFile\28Common::File&\29 can change the state due to initial scan
[asyncify] Common::TranslationManager::loadLanguageDat\28int\29 can change the state due to initial scan
[asyncify] Common::TranslationManager::loadTranslationsInfoDat\28Common::String\20const&\29 can change the state due to initial scan
[asyncify] Common::TranslationManager::openTranslationsFile\28Common::FSNode\20const&\2c\20Common::File&\2c\20int\29 can change the state due to initial scan
[asyncify] Common::TranslationManager::checkHeader\28Common::File&\29 can change the state due to initial scan
[asyncify] Common::checkStubAndComputeCRC1\28Common::SeekableReadStream*\2c\20unsigned\20int&\29 can change the state due to initial scan
[asyncify] [asyncify] [asyncify] OSystem::createConfigReadStream\28\29 can change the state due to initial scan
[asyncify] Common::ClickteamInstaller::~ClickteamInstaller\28\29 can change the state due to initial scan
[asyncify] Common::ClickteamInstaller::~ClickteamInstaller\28\29.1 can change the state due to initial scan
[asyncify] Common::DecompressorDCL::init\28Common::SeekableReadStream*\2c\20Common::WriteStream*\2c\20unsigned\20int\2c\20bool\29[asyncify] Common::ClickteamInstaller::readContentsForPath\28Common::String\20const&\29\20const can change the state due to initial scan
[asyncify] Common::DecompressorDCL::fetchBitsLSB\28\29 can change the state due to initial scan
[asyncify] Common::DecompressorDCL::getBitsLSB\28int\29 can change the state due to initial scan
[asyncify] Common::DecompressorDCL::putByte\28unsigned\20char\29 can change the state due to initial scan
[asyncify] Common::DecompressorDCL::huffman_lookup\28int\20const*\29 can change the state due to initial scan
[asyncify] [asyncify] Common::DecompressorDCL::getByteLSB\28\29[asyncify] Common::decompressDCL\28Common::SeekableReadStream*\2c\20unsigned\20int\2c\20unsigned\20int\29 can change the state due to initial scan
[asyncify] Common::decompressDCL\28Common::SeekableReadStream*\29 can change the state due to initial scan
[asyncify] Common::GzioReadStream::parentSeek\28long\20long\29 can change the state due to initial scan
[asyncify] Common::GzioReadStream::parentGetByte\28\29 can change the state due to initial scan
[asyncify] Common::ClickteamInstaller::open\28Common::SeekableReadStream*\2c\20DisposeAfterUse::Flag\29 can change the state due to initial scan
[asyncify] Common::GzioReadStream::init_stored_block\28\29 can change the state due to initial scan
[asyncify] Common::DecompressorDCL::unpack\28Common::SeekableReadStream*\2c\20Common::WriteStream*\2c\20unsigned\20int\2c\20bool\29 can change the state due to initial scan
[asyncify] Common::GzioReadStream::inflate_window\28\29 can change the state due to initial scan
[asyncify] Common::GzioReadStream::inflate_codes_in_window\28\29 can change the state due to initial scan
[asyncify] Common::GzioReadStream::get_new_block\28\29 can change the state due to initial scan
[asyncify] Common::GzioReadStream::initialize_tables\28\29 can change the state due to initial scan
[asyncify] Common::GzioReadStream::test_zlib_header\28\29 can change the state due to initial scan
[asyncify] Common::GzioReadStream::readAtOffset\28long\20long\2c\20unsigned\20char*\2c\20unsigned\20int\29 can change the state due to initial scan
[asyncify] Common::GzioReadStream::openDeflate\28Common::SeekableReadStream*\2c\20unsigned\20long\20long\2c\20DisposeAfterUse::Flag\29 can change the state due to initial scan
[asyncify] Common::GzioReadStream::openClickteam\28Common::SeekableReadStream*\2c\20unsigned\20long\20long\2c\20DisposeAfterUse::Flag\29 can change the state due to initial scan
[asyncify] Common::GzioReadStream::clickteamDecompress\28unsigned\20char*\2c\20unsigned\20int\2c\20unsigned\20char*\2c\20unsigned\20int\2c\20long\20long\29 can change the state due to initial scan
[asyncify] Common::GzioReadStream::openZlib\28Common::SeekableReadStream*\2c\20unsigned\20long\20long\2c\20DisposeAfterUse::Flag\29 can change the state due to initial scan
[asyncify] Common::GzioReadStream::deflateDecompress\28unsigned\20char*\2c\20unsigned\20int\2c\20unsigned\20char*\2c\20unsigned\20int\2c\20long\20long\29 can change the state due to initial scan
[asyncify] Common::GzioReadStream::~GzioReadStream\28\29 can change the state due to initial scan
[asyncify] Common::GzioReadStream::~GzioReadStream\28\29.1 can change the state due to initial scan
[asyncify] Common::GzioReadStream::zlibDecompress\28unsigned\20char*\2c\20unsigned\20int\2c\20unsigned\20char*\2c\20unsigned\20int\2c\20long\20long\29 can change the state due to initial scan
[asyncify] Common::GzioReadStream::init_dynamic_block\28\29 can change the state due to initial scan
[asyncify] Common::\28anonymous\20namespace\29::InstallShieldCabinet::listMembers\28Common::List<Common::SharedPtr<Common::ArchiveMember>>&\29\20const can change the state due to initial scan
[asyncify] Common::\28anonymous\20namespace\29::InstallShieldCabinet::createReadStreamForMember\28Common::Path\20const&\29\20const can change the state due to initial scan
[asyncify] Common::InstallShieldV3::~InstallShieldV3\28\29 can change the state due to initial scan
[asyncify] Common::makeInstallShieldArchive\28Common::String\20const&\29 can change the state due to initial scan
[asyncify] Common::InstallShieldV3::close\28\29 can change the state due to initial scan
[asyncify] Common::InstallShieldV3::listMembers\28Common::List<Common::SharedPtr<Common::ArchiveMember>>&\29\20const can change the state due to initial scan
[asyncify] Common::InstallShieldV3::createReadStreamForMember\28Common::Path\20const&\29\20const can change the state due to initial scan
[asyncify] Common::InstallShieldV3::open\28Common::String\20const&\29 can change the state due to initial scan
[asyncify] Common::PowerPackerStream::PowerPackerStream\28Common::SeekableReadStream&\29 can change the state due to initial scan
[asyncify] Common::PowerPackerStream::PowerPackerStream\28Common::SeekableReadStream&\29.1 can change the state due to initial scan
[asyncify] Common::PowerPackerStream::~PowerPackerStream\28\29 can change the state due to initial scan
[asyncify] Common::PowerPackerStream::~PowerPackerStream\28\29.1 can change the state due to initial scan
[asyncify] Common::PowerPackerStream::eos\28\29\20const can change the state due to initial scan
[asyncify] Common::PowerPackerStream::read\28void*\2c\20unsigned\20int\29 can change the state due to initial scan
[asyncify] [asyncify] Common::PowerPackerStream::pos\28\29\20const can change the state due to initial scan
[asyncify] Common::PowerPackerStream::size\28\29\20const can change the state due to initial scan
[asyncify] Common::StuffItArchive::close\28\29 can change the state due to initial scan
[asyncify] Common::StuffItArchive::open\28Common::String\20const&\29 can change the state due to initial scan
[asyncify] Common::StuffItArchive::~StuffItArchive\28\29 can change the state due to initial scan
[asyncify] Common::StuffItArchive::open\28Common::SeekableReadStream*\29 can change the state due to initial scan
[asyncify] Common::StuffItArchive::listMembers\28Common::List<Common::SharedPtr<Common::ArchiveMember>>&\29\20const can change the state due to initial scan
[asyncify] Common::StuffItArchive::readContentsForPath\28Common::String\20const&\29\20const can change the state due to initial scan
[asyncify] unsigned\20int\20Common::BitStreamImpl<Common::SeekableReadStream\2c\20unsigned\20long\20long\2c\208\2c\20false\2c\20false>::getBits<8>\28\29 can change the state due to initial scan
[asyncify] Common::SIT13_CreateTree\28Common::SIT13Data*\2c\20Common::BitStreamImpl<Common::SeekableReadStream\2c\20unsigned\20long\20long\2c\208\2c\20false\2c\20false>*\2c\20Common::SIT13Buffer*\2c\20unsigned\20short\29 can change the state due to initial scan
[asyncify] Common::BitStreamImpl<Common::SeekableReadStream\2c\20unsigned\20long\20long\2c\208\2c\20false\2c\20false>::getBit\28\29 can change the state due to initial scan
[asyncify] Common::StuffItArchive::decompress13\28Common::SeekableReadStream*\2c\20unsigned\20char*\2c\20unsigned\20int\29\20const can change the state due to initial scan
[asyncify] unsigned\20int\20Common::BitStreamImpl<Common::SeekableReadStream\2c\20unsigned\20long\20long\2c\208\2c\20false\2c\20false>::getBits<10>\28\29 can change the state due to initial scan
[asyncify] Common::BitStreamImpl<Common::SeekableReadStream\2c\20unsigned\20long\20long\2c\208\2c\20false\2c\20false>::getBits\28unsigned\20long\29 can change the state due to initial scan
[asyncify] unsigned\20int\20Common::BitStreamImpl<Common::SeekableReadStream\2c\20unsigned\20long\20long\2c\208\2c\20false\2c\20false>::getBits<12>\28\29 can change the state due to initial scan
[asyncify] unsigned\20int\20Common::BitStreamImpl<Common::SeekableReadStream\2c\20unsigned\20long\20long\2c\208\2c\20false\2c\20false>::getBits<15>\28\29 can change the state due to initial scan
[asyncify] unsigned\20int\20Common::BitStreamImpl<Common::SeekableReadStream\2c\20unsigned\20long\20long\2c\208\2c\20false\2c\20false>::getBits<16>\28\29 can change the state due to initial scan
[asyncify] Common::StuffItArchive::decompress14\28Common::SeekableReadStream*\2c\20unsigned\20char*\2c\20unsigned\20int\29\20const[asyncify] Common::BitStreamImpl<Common::SeekableReadStream\2c\20unsigned\20long\20long\2c\208\2c\20false\2c\20false>::skip\28unsigned\20int\29 can change the state due to initial scan
[asyncify] unsigned\20int\20Common::BitStreamImpl<Common::SeekableReadStream\2c\20unsigned\20long\20long\2c\208\2c\20false\2c\20false>::getBits<3>\28\29 can change the state due to initial scan
[asyncify] unsigned\20int\20Common::BitStreamImpl<Common::SeekableReadStream\2c\20unsigned\20long\20long\2c\208\2c\20false\2c\20false>::getBits<2>\28\29 can change the state due to initial scan
[asyncify] unsigned\20int\20Common::BitStreamImpl<Common::SeekableReadStream\2c\20unsigned\20long\20long\2c\208\2c\20false\2c\20false>::getBits<6>\28\29 can change the state due to initial scan
[asyncify] [asyncify] Common::createStuffItArchive\28Common::String\20const&\29 can change the state due to initial scan
[asyncify] Common::ArjDecoder::init_getbits\28\29 can change the state due to initial scan
[asyncify] Common::ArjDecoder::fillbuf\28int\29 can change the state due to initial scan
[asyncify] Common::ArjDecoder::getbits\28int\29 can change the state due to initial scan
[asyncify] Common::ArjDecoder::decode_c\28\29 can change the state due to initial scan
[asyncify] Common::ArjDecoder::read_pt_len\28int\2c\20int\2c\20int\29 can change the state due to initial scan
[asyncify] Common::ArjDecoder::read_c_len\28\29 can change the state due to initial scan
[asyncify] Common::ArjDecoder::decode_start\28\29 can change the state due to initial scan
[asyncify] Common::ArjDecoder::decode_len\28\29 can change the state due to initial scan
[asyncify] Common::ArjDecoder::decode_p\28\29 can change the state due to initial scan
[asyncify] Common::ArjDecoder::decode_f\28int\29 can change the state due to initial scan
[asyncify] Common::ArjDecoder::decode_ptr\28\29 can change the state due to initial scan
[asyncify] Common::readHeader\28Common::SeekableReadStream&\29 can change the state due to initial scan
[asyncify] Common::ArjArchive::ArjArchive\28Common::Array<Common::String>\20const&\29Common::decompressDCL\28Common::ReadStream*\2c\20unsigned\20char*\2c\20unsigned\20int\2c\20unsigned\20int\29[asyncify] [asyncify] Common::ArjArchive::readContentsForPath\28Common::String\20const&\29\20const can change the state due to initial scan
[asyncify] Common::ArjDecoder::decode\28int\29 can change the state due to initial scan
[asyncify] unzlocal_GetCurrentFileInfoInternal\28void*\2c\20unz_file_info*\2c\20unz_file_info_internal*\2c\20char*\2c\20unsigned\20long\2c\20void*\2c\20unsigned\20long\2c\20char*\2c\20unsigned\20long\29 can change the state due to initial scan
[asyncify] unzOpen\28Common::SeekableReadStream*\29 can change the state due to initial scan
[asyncify] unzClose\28void*\29 can change the state due to initial scan
[asyncify] Common::ZipArchive::getMember\28Common::Path\20const&\29\20const can change the state due to initial scan
[asyncify] unzOpenCurrentFile\28void*\2c\20Common::CRC32\20const&\29 can change the state due to initial scan
[asyncify] Common::makeZipArchive\28Common::FSNode\20const&\29 can change the state due to initial scan
[asyncify] Common::MacVISEArchive::ArchiveMember::createReadStream\28\29\20const can change the state due to initial scan
[asyncify] Common::MacVISEArchive::loadCatalog\28\29 can change the state due to initial scan
[asyncify] Common::MacVISEArchive::createReadStreamForMember\28Common::Path\20const&\29\20const can change the state due to initial scan
[asyncify] Common::createMacVISEArchive\28Common::SeekableReadStream*\29 can change the state due to initial scan
[asyncify] Common::BasePtrTrackerImpl<Common::MacVISEArchive::ArchiveMember>::destructObject\28\29 can change the state due to initial scan
[asyncify] Common::wrapCompressedReadStream\28Common::SeekableReadStream*\2c\20unsigned\20int\29 can change the state due to initial scan
[asyncify] Common::inflateZlibHeaderless\28Common::WriteStream*\2c\20Common::SeekableReadStream*\29 can change the state due to initial scan
[asyncify] Common::GZipReadStream::~GZipReadStream\28\29 can change the state due to initial scan
[asyncify] Common::GZipReadStream::GZipReadStream\28Common::SeekableReadStream*\2c\20unsigned\20int\29 can change the state due to initial scan
[asyncify] Common::GZipReadStream::~GZipReadStream\28\29.1 can change the state due to initial scan
[asyncify] Common::GZipReadStream::read\28void*\2c\20unsigned\20int\29 can change the state due to initial scan
[asyncify] Common::GZipWriteStream::err\28\29\20const can change the state due to initial scan
[asyncify] Common::GZipWriteStream::~GZipWriteStream\28\29 can change the state due to initial scan
[asyncify] Common::GZipReadStream::seek\28long\20long\2c\20int\29 can change the state due to initial scan
[asyncify] Common::GZipWriteStream::clearErr\28\29 can change the state due to initial scan
[asyncify] Common::GZipWriteStream::write\28void\20const*\2c\20unsigned\20int\29 can change the state due to initial scan
[asyncify] Common::GZipWriteStream::finalize\28\29 can change the state due to initial scan
[asyncify] Common::IFFParser::~IFFParser\28\29 can change the state due to initial scan
[asyncify] Common::PackBitsReadStream::eos\28\29\20const can change the state due to initial scan
[asyncify] Common::IFFParser::IFFChunkNav::clearErr\28\29 can change the state due to initial scan
[asyncify] [asyncify] Common::IFFParser::parse\28Common::Functor1<Common::IFFChunk&\2c\20bool>&\29 can change the state due to initial scan
[asyncify] Common::PackBitsReadStream::read\28void*\2c\20unsigned\20int\29 can change the state due to initial scan
[asyncify] Common::IFFParser::IFFChunkNav::read\28void*\2c\20unsigned\20int\29 can change the state due to initial scan
[asyncify] Common::IFFParser::setInputStream\28Common::ReadStream*\29 can change the state due to initial scan
[asyncify] Common::makeZipArchive\28Common::String\20const&\29 can change the state due to initial scan
[asyncify] Common::INIFile::loadFromSaveFile\28Common::String\20const&\29 can change the state due to initial scan
[asyncify] Common::INIFile::saveToSaveFile\28Common::String\20const&\29 can change the state due to initial scan
[asyncify] Common::IFFParser::IFFChunkNav::err\28\29\20const can change the state due to initial scan
[asyncify] Common::INIFile::loadFromStream\28Common::SeekableReadStream&\29 can change the state due to initial scan
[asyncify] Common::QuickTimeParser::close\28\29 can change the state due to initial scan
[asyncify] Common::QuickTimeParser::~QuickTimeParser\28\29 can change the state due to initial scan
[asyncify] Common::QuickTimeParser::parseFile\28Common::Path\20const&\29 can change the state due to initial scan
[asyncify] Common::QuickTimeParser::readDefault\28Common::QuickTimeParser::Atom\29 can change the state due to initial scan
[asyncify] Common::QuickTimeParser::readLeaf\28Common::QuickTimeParser::Atom\29 can change the state due to initial scan
[asyncify] Common::QuickTimeParser::parseStream\28Common::SeekableReadStream*\2c\20DisposeAfterUse::Flag\29 can change the state due to initial scan
[asyncify] Common::QuickTimeParser::readHDLR\28Common::QuickTimeParser::Atom\29 can change the state due to initial scan
[asyncify] Common::QuickTimeParser::readELST\28Common::QuickTimeParser::Atom\29 can change the state due to initial scan
[asyncify] Common::QuickTimeParser::readMVHD\28Common::QuickTimeParser::Atom\29 can change the state due to initial scan
[asyncify] Common::QuickTimeParser::readSTSC\28Common::QuickTimeParser::Atom\29 can change the state due to initial scan
[asyncify] Common::QuickTimeParser::readMDHD\28Common::QuickTimeParser::Atom\29 can change the state due to initial scan
[asyncify] Common::QuickTimeParser::readSTCO\28Common::QuickTimeParser::Atom\29 can change the state due to initial scan
[asyncify] Common::QuickTimeParser::readSTSD\28Common::QuickTimeParser::Atom\29 can change the state due to initial scan
[asyncify] Common::QuickTimeParser::readSTSS\28Common::QuickTimeParser::Atom\29 can change the state due to initial scan
[asyncify] Common::QuickTimeParser::readSTSZ\28Common::QuickTimeParser::Atom\29 can change the state due to initial scan
[asyncify] Common::QuickTimeParser::readSTTS\28Common::QuickTimeParser::Atom\29 can change the state due to initial scan
[asyncify] Common::QuickTimeParser::readWAVE\28Common::QuickTimeParser::Atom\29 can change the state due to initial scan
[asyncify] Common::QuickTimeParser::readTKHD\28Common::QuickTimeParser::Atom\29 can change the state due to initial scan
[asyncify] Common::QuickTimeParser::SampleDesc::~SampleDesc\28\29 can change the state due to initial scan
[asyncify] Common::QuickTimeParser::Track::~Track\28\29 can change the state due to initial scan
[asyncify] Common::WinResources::loadFromEXE\28Common::String\20const&\29 can change the state due to initial scan
[asyncify] Common::WinResources::createFromEXE\28Common::String\20const&\29 can change the state due to initial scan
[asyncify] Common::WinResources::createFromEXE\28Common::SeekableReadStream*\29 can change the state due to initial scan
[asyncify] Common::WinResources::getVersionResource\28Common::WinResourceID\20const&\29 can change the state due to initial scan
[asyncify] Common::WinResources::loadFromCompressedEXE\28Common::String\20const&\29 can change the state due to initial scan
[asyncify] Common::WinResources::VersionInfo::readVSVersionInfo\28Common::SeekableReadStream*\29 can change the state due to initial scan
[asyncify] Common::WinResources::getResource\28Common::WinResourceID\20const&\2c\20Common::WinResourceID\20const&\2c\20Common::WinResourceID\20const&\29 can change the state due to initial scan
[asyncify] Common::NEResources::~NEResources\28\29 can change the state due to initial scan
[asyncify] Common::NEResources::clear\28\29 can change the state due to initial scan
[asyncify] Common::NEResources::loadFromEXE\28Common::SeekableReadStream*\2c\20DisposeAfterUse::Flag\29 can change the state due to initial scan
[asyncify] Common::NEResources::getResourceTableOffset\28\29 can change the state due to initial scan
[asyncify] Common::NEResources::getResourceString\28Common::SeekableReadStream&\2c\20unsigned\20int\29 can change the state due to initial scan
[asyncify] Common::NEResources::readResourceTable\28unsigned\20int\29 can change the state due to initial scan
[asyncify] Common::NEResources::readNameTable\28unsigned\20int\2c\20unsigned\20int\29 can change the state due to initial scan
[asyncify] Common::NEResources::getResource\28Common::WinResourceID\20const&\2c\20Common::WinResourceID\20const&\29 can change the state due to initial scan
[asyncify] Common::NEResources::loadString\28unsigned\20int\29 can change the state due to initial scan
[asyncify] Common::NEResources::parseVersionInfo\28Common::SeekableReadStream*\29 can change the state due to initial scan
[asyncify] Common::PEResources::clear\28\29 can change the state due to initial scan
[asyncify] Common::QuickTimeParser::readCMOV\28Common::QuickTimeParser::Atom\29 can change the state due to initial scan
[asyncify] Common::QuickTimeParser::readESDS\28Common::QuickTimeParser::Atom\29 can change the state due to initial scan
[asyncify] Common::PEResources::loadFromEXE\28Common::SeekableReadStream*\2c\20DisposeAfterUse::Flag\29 can change the state due to initial scan
[asyncify] Common::PEResources::parseResourceLevel\28Common::PEResources::Section&\2c\20unsigned\20int\2c\20int\29 can change the state due to initial scan
[asyncify] Common::PEResources::getResource\28Common::WinResourceID\20const&\2c\20Common::WinResourceID\20const&\29 can change the state due to initial scan
[asyncify] Common::PEResources::getResource\28Common::WinResourceID\20const&\2c\20Common::WinResourceID\20const&\2c\20Common::WinResourceID\20const&\29 can change the state due to initial scan
[asyncify] Common::PEResources::loadString\28unsigned\20int\29 can change the state due to initial scan
[asyncify] Common::PEResources::parseVersionInfo\28Common::SeekableReadStream*\29 can change the state due to initial scan
[asyncify] Common::XMLParser::loadFile\28Common::String\20const&\29 can change the state due to initial scan
[asyncify] Common::XMLParser::close\28\29 can change the state due to initial scan
[asyncify] Common::XMLParser::loadFile\28Common::FSNode\20const&\29 can change the state due to initial scan
[asyncify] Common::XMLParser::~XMLParser\28\29 can change the state due to initial scan
[asyncify] Common::XMLParser::parserError\28Common::String\20const&\29 can change the state due to initial scan
[asyncify] Common::XMLParser::closeKey\28\29 can change the state due to initial scan
[asyncify] Common::XMLParser::parseToken\28\29 can change the state due to initial scan
[asyncify] [asyncify] Common::XMLParser::parseActiveKey\28bool\29Common::XMLParser::parseKeyValue\28Common::String\29[asyncify] Common::XMLParser::skipComments\28\29 can change the state due to initial scan
[asyncify] Common::XMLParser::skipSpaces\28\29 can change the state due to initial scan
[asyncify] Common::IFFParser::IFFChunkNav::eos\28\29\20const can change the state due to initial scan
[asyncify] Common::XMLParser::parse\28\29 can change the state due to initial scan
[asyncify] getF\28lua_State*\2c\20void*\2c\20unsigned\20long*\29 can change the state due to initial scan
[asyncify] luaD_throw\28lua_State*\2c\20int\29 can change the state due to initial scan
[asyncify] luaD_precall\28lua_State*\2c\20lua_TValue*\2c\20int\29 can change the state due to initial scan
[asyncify] io_close\28lua_State*\29 can change the state due to initial scan
[asyncify] io_gc\28lua_State*\29 can change the state due to initial scan
[asyncify] f_write\28lua_State*\29 can change the state due to initial scan
[asyncify] luaD_callhook\28lua_State*\2c\20int\2c\20int\29 can change the state due to initial scan
[asyncify] luaM_realloc_\28lua_State*\2c\20void*\2c\20unsigned\20long\2c\20unsigned\20long\29 can change the state due to initial scan
[asyncify] luaM_growaux_\28lua_State*\2c\20void*\2c\20int*\2c\20unsigned\20long\2c\20int\2c\20char\20const*\29 can change the state due to initial scan
[asyncify] os_clock\28lua_State*\29 can change the state due to initial scan
[asyncify] os_exit\28lua_State*\29 can change the state due to initial scan
[asyncify] lua_newstate\28void*\20\28*\29\28void*\2c\20void*\2c\20unsigned\20long\2c\20unsigned\20long\29\2c\20void*\29 can change the state due to initial scan
[asyncify] close_state\28lua_State*\29 can change the state due to initial scan
[asyncify] Lua::persistNumber\28Lua::SerializationInfo*\29 can change the state due to initial scan
[asyncify] Lua::persistString\28Lua::SerializationInfo*\29 can change the state due to initial scan
[asyncify] Lua::persistFunction\28Lua::SerializationInfo*\29 can change the state due to initial scan
[asyncify] Lua::persist\28Lua::SerializationInfo*\29 can change the state due to initial scan
[asyncify] Lua::persistThread\28Lua::SerializationInfo*\29 can change the state due to initial scan
[asyncify] Lua::persistProto\28Lua::SerializationInfo*\29 can change the state due to initial scan
[asyncify] Lua::persistUserData\28Lua::SerializationInfo*\29 can change the state due to initial scan
[asyncify] Lua::lua_realloc\28lua_State*\2c\20void*\2c\20unsigned\20long\2c\20unsigned\20long\29 can change the state due to initial scan
[asyncify] Lua::persistBoolean\28Lua::SerializationInfo*\29 can change the state due to initial scan
[asyncify] Lua::lua_newLclosure\28lua_State*\2c\20int\2c\20Table*\29 can change the state due to initial scan
[asyncify] Lua::createProto\28lua_State*\29 can change the state due to initial scan
[asyncify] Lua::serializeSpecialObject\28Lua::SerializationInfo*\2c\20bool\29 can change the state due to initial scan
[asyncify] Lua::makeFakeProto\28lua_State*\2c\20unsigned\20char\29 can change the state due to initial scan
[asyncify] Lua::createUpValue\28lua_State*\2c\20int\29 can change the state due to initial scan
[asyncify] Lua::lua_reallocstack\28lua_State*\2c\20int\29 can change the state due to initial scan
[asyncify] Lua::lua_reallocCallInfo\28lua_State*\2c\20int\29 can change the state due to initial scan
[asyncify] Lua::makeUpValue\28lua_State*\2c\20int\29 can change the state due to initial scan
[asyncify] Lua::lua_newproto\28lua_State*\29 can change the state due to initial scan
[asyncify] Lua::boxUpValue_start\28lua_State*\29 can change the state due to initial scan
[asyncify] luaZ_fill\28Zio*\29 can change the state due to initial scan
[asyncify] Lua::unpersist\28Lua::UnSerializationInfo*\29 can change the state due to initial scan
[asyncify] luaZ_lookahead\28Zio*\29 can change the state due to initial scan
[asyncify] luaZ_read\28Zio*\2c\20void*\2c\20unsigned\20long\29 can change the state due to initial scan
[asyncify] Lua::LuaFileRead::read\28void*\2c\20unsigned\20long\2c\20unsigned\20long\29 can change the state due to initial scan
[asyncify] void\20MT32Emu::AnalogImpl<int>::produceOutput<short>\28short*\2c\20short\20const*\2c\20short\20const*\2c\20short\20const*\2c\20short\20const*\2c\20short\20const*\2c\20short\20const*\2c\20unsigned\20int\29 can change the state due to initial scan
[asyncify] void\20MT32Emu::AnalogImpl<float>::produceOutput<float>\28float*\2c\20float\20const*\2c\20float\20const*\2c\20float\20const*\2c\20float\20const*\2c\20float\20const*\2c\20float\20const*\2c\20unsigned\20int\29 can change the state due to initial scan
[asyncify] MT32Emu::AccurateLowPassFilter::process\28float\29 can change the state due to initial scan
[asyncify] non-virtual\20thunk\20to\20MT32Emu::AccurateLowPassFilter::process\28float\29 can change the state due to initial scan
[asyncify] MT32Emu::AccurateLowPassFilter::process\28int\29 can change the state due to initial scan
[asyncify] MT32Emu::AnalogImpl<int>::getOutputSampleRate\28\29\20const can change the state due to initial scan
[asyncify] [asyncify] MT32Emu::AnalogImpl<int>::getDACStreamsLength\28unsigned\20int\29\20const[asyncify]  can change the state due to initial scan
[asyncify] MT32Emu::AnalogImpl<int>::~AnalogImpl\28\29.1 can change the state due to initial scan
[asyncify] MT32Emu::AnalogImpl<float>::getDACStreamsLength\28unsigned\20int\29\20const can change the state due to initial scan
[asyncify] MT32Emu::AnalogImpl<float>::~AnalogImpl\28\29.1 can change the state due to initial scan
[asyncify] MT32Emu::BReverbModelImpl<short>::close\28\29 can change the state due to initial scan
[asyncify] void\20MT32Emu::BReverbModelImpl<float>::produceOutput<float>\28float\20const*\2c\20float\20const*\2c\20float*\2c\20float*\2c\20unsigned\20int\29 can change the state due to initial scan
[asyncify] MT32Emu::BReverbModelImpl<short>::isActive\28\29\20const can change the state due to initial scan
[asyncify] MT32Emu::BReverbModelImpl<short>::setParameters\28unsigned\20char\2c\20unsigned\20char\29 can change the state due to initial scan
[asyncify] MT32Emu::BReverbModelImpl<short>::open\28\29 can change the state due to initial scan
[asyncify] MT32Emu::BReverbModelImpl<float>::close\28\29 can change the state due to initial scan
[asyncify] void\20MT32Emu::BReverbModelImpl<short>::produceOutput<int>\28short\20const*\2c\20short\20const*\2c\20short*\2c\20short*\2c\20unsigned\20int\29 can change the state due to initial scan
[asyncify] MT32Emu::BReverbModelImpl<float>::isActive\28\29\20const can change the state due to initial scan
[asyncify] MT32Emu::BReverbModelImpl<float>::setParameters\28unsigned\20char\2c\20unsigned\20char\29 can change the state due to initial scan
[asyncify] MT32Emu::BReverbModelImpl<float>::open\28\29 can change the state due to initial scan
[asyncify] MT32Emu::AbstractFile::getSHA1\28\29 can change the state due to initial scan
[asyncify] MT32Emu::FileStream::~FileStream\28\29 can change the state due to initial scan
[asyncify] MT32Emu::FileStream::getData\28\29 can change the state due to initial scan
[asyncify] non-virtual\20thunk\20to\20MT32Emu::DefaultMidiStreamParser::handleShortMessage\28unsigned\20int\29 can change the state due to initial scan
[asyncify] MT32Emu::DefaultMidiStreamParser::handleShortMessage\28unsigned\20int\29 can change the state due to initial scan
[asyncify] MT32Emu::DefaultMidiStreamParser::handleSysex\28unsigned\20char\20const*\2c\20unsigned\20int\29 can change the state due to initial scan
[asyncify] non-virtual\20thunk\20to\20MT32Emu::DefaultMidiStreamParser::handleSysex\28unsigned\20char\20const*\2c\20unsigned\20int\29 can change the state due to initial scan
[asyncify] MT32Emu::DefaultMidiStreamParser::handleSystemRealtimeMessage\28unsigned\20char\29 can change the state due to initial scan
[asyncify] non-virtual\20thunk\20to\20MT32Emu::DefaultMidiStreamParser::handleSystemRealtimeMessage\28unsigned\20char\29 can change the state due to initial scan
[asyncify] MT32Emu::MidiStreamParserImpl::parseStream\28unsigned\20char\20const*\2c\20unsigned\20int\29 can change the state due to initial scan
[asyncify] MT32Emu::MidiStreamParserImpl::parseSysexFragment\28unsigned\20char\20const*\2c\20unsigned\20int\29 can change the state due to initial scan
[asyncify] MT32Emu::MidiStreamParserImpl::parseShortMessageStatus\28unsigned\20char\20const*\29 can change the state due to initial scan
[asyncify] MT32Emu::MidiStreamParserImpl::parseSysex\28unsigned\20char\20const*\2c\20unsigned\20int\29 can change the state due to initial scan
[asyncify] [asyncify] [asyncify] MT32Emu::MidiStreamParserImpl::processStatusByte\28unsigned\20char&\29 can change the state due to initial scan
[asyncify] MT32Emu::AnalogImpl<float>::getOutputSampleRate\28\29\20const can change the state due to initial scan
[asyncify] MT32Emu::Part::refreshTimbre\28unsigned\20int\29 can change the state due to initial scan
[asyncify] MT32Emu::RhythmPart::noteOn\28unsigned\20int\2c\20unsigned\20int\29 can change the state due to initial scan
[asyncify] MT32Emu::Part::partialDeactivated\28MT32Emu::Poly*\29 can change the state due to initial scan
[asyncify] MT32Emu::Part::playPoly\28MT32Emu::PatchCache\20const*\2c\20MT32Emu::MemParams::RhythmTemp\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int\29 can change the state due to initial scan
[asyncify] MT32Emu::Partial::~Partial\28\29 can change the state due to initial scan
[asyncify] MT32Emu::Partial::deactivate\28\29 can change the state due to initial scan
[asyncify] MT32Emu::Partial::startPartial\28MT32Emu::Part\20const*\2c\20MT32Emu::Poly*\2c\20MT32Emu::PatchCache\20const*\2c\20MT32Emu::MemParams::RhythmTemp\20const*\2c\20MT32Emu::Partial*\29 can change the state due to initial scan
[asyncify] MT32Emu::Poly::setState\28MT32Emu::PolyState\29 can change the state due to initial scan
[asyncify] MT32Emu::Poly::startDecay\28\29 can change the state due to initial scan
[asyncify] MT32Emu::Poly::noteOff\28bool\29 can change the state due to initial scan
[asyncify] MT32Emu::Poly::reset\28unsigned\20int\2c\20unsigned\20int\2c\20bool\2c\20MT32Emu::Partial**\29 can change the state due to initial scan
[asyncify] MT32Emu::Poly::stopPedalHold\28\29 can change the state due to initial scan
[asyncify] MT32Emu::Poly::partialDeactivated\28MT32Emu::Partial*\29 can change the state due to initial scan
[asyncify] MT32Emu::ROMInfo::getROMInfo\28MT32Emu::File*\29 can change the state due to initial scan
[asyncify] MT32Emu::ROMInfo::getROMInfo\28MT32Emu::File*\2c\20MT32Emu::ROMInfo\20const*\20const*\29 can change the state due to initial scan
[asyncify] MT32Emu::ROMImage::appendImages\28MT32Emu::ROMImage\20const*\2c\20MT32Emu::ROMImage\20const*\29 can change the state due to initial scan
[asyncify] MT32Emu::ROMImage::interleaveImages\28MT32Emu::ROMImage\20const*\2c\20MT32Emu::ROMImage\20const*\29 can change the state due to initial scan
[asyncify] MT32Emu::ROMImage::ROMImage\28MT32Emu::File*\2c\20bool\2c\20MT32Emu::ROMInfo\20const*\20const*\29 can change the state due to initial scan
[asyncify] MT32Emu::ROMImage::~ROMImage\28\29 can change the state due to initial scan
[asyncify] MT32Emu::Synth::Synth\28MT32Emu::ReportHandler*\29 can change the state due to initial scan
[asyncify] MT32Emu::Synth::setReverbOutputGain\28float\29 can change the state due to initial scan
[asyncify] MT32Emu::Synth::setOutputGain\28float\29 can change the state due to initial scan
[asyncify] MT32Emu::Synth::dispose\28\29 can change the state due to initial scan
[asyncify] MT32Emu::Synth::printDebug\28char\20const*\2c\20...\29 can change the state due to initial scan
[asyncify] MT32Emu::Synth::newTimbreSet\28unsigned\20char\29\20const can change the state due to initial scan
[asyncify] MT32Emu::Synth::setReverbEnabled\28bool\29 can change the state due to initial scan
[asyncify] MT32Emu::Synth::refreshSystemReverbParameters\28\29 can change the state due to initial scan
[asyncify] MT32Emu::Synth::isMT32ReverbCompatibilityMode\28\29\20const can change the state due to initial scan
[asyncify] [asyncify] MT32Emu::Synth::setReverbCompatibilityMode\28bool\29 can change the state due to initial scan
[asyncify] MT32Emu::Synth::preallocateReverbMemory\28bool\29 can change the state due to initial scan
[asyncify] MT32Emu::Synth::loadControlROM\28MT32Emu::ROMImage\20const&\29 can change the state due to initial scan
[asyncify] MT32Emu::Synth::loadPCMROM\28MT32Emu::ROMImage\20const&\29 can change the state due to initial scan
[asyncify] MT32Emu::Synth::flushMIDIQueue\28\29 can change the state due to initial scan
[asyncify] MT32Emu::Synth::open\28MT32Emu::ROMImage\20const&\2c\20MT32Emu::ROMImage\20const&\2c\20unsigned\20int\2c\20MT32Emu::AnalogOutputMode\29 can change the state due to initial scan
[asyncify] MT32Emu::MidiEventQueue::dropMidiEvent\28\29 can change the state due to initial scan
[asyncify] MT32Emu::Synth::playMsgOnPart\28unsigned\20char\2c\20unsigned\20char\2c\20unsigned\20char\2c\20unsigned\20char\29 can change the state due to initial scan
[asyncify] MT32Emu::MidiEventQueue::pushShortMessage\28unsigned\20int\2c\20unsigned\20int\29 can change the state due to initial scan
[asyncify] MT32Emu::Synth::playMsg\28unsigned\20int\2c\20unsigned\20int\29 can change the state due to initial scan
[asyncify] MT32Emu::MidiEventQueue::pushSysex\28unsigned\20char\20const*\2c\20unsigned\20int\2c\20unsigned\20int\29 can change the state due to initial scan
[asyncify] MT32Emu::Synth::playSysex\28unsigned\20char\20const*\2c\20unsigned\20int\2c\20unsigned\20int\29 can change the state due to initial scan
[asyncify] MT32Emu::Synth::reset\28\29 can change the state due to initial scan
[asyncify] MT32Emu::Synth::isActive\28\29 can change the state due to initial scan
[asyncify] MT32Emu::Synth::getStereoOutputSampleRate\28\29\20const can change the state due to initial scan
[asyncify] MT32Emu::MidiEventQueue::~MidiEventQueue\28\29 can change the state due to initial scan
[asyncify] MT32Emu::Renderer::updateDisplayState\28\29 can change the state due to initial scan
[asyncify] MT32Emu::RendererImpl<short>::doRender\28short*\2c\20unsigned\20int\29 can change the state due to initial scan
[asyncify] MT32Emu::RendererImpl<short>::doRenderStreams\28MT32Emu::DACOutputStreams<short>\20const&\2c\20unsigned\20int\29 can change the state due to initial scan
[asyncify] MT32Emu::Synth::writeMemoryRegion\28MT32Emu::MemoryRegion\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20char\20const*\29 can change the state due to initial scan
[asyncify] MT32Emu::Synth::render\28short*\2c\20unsigned\20int\29[asyncify] MT32Emu::Synth::render\28float*\2c\20unsigned\20int\29 can change the state due to initial scan
[asyncify] MT32Emu::RendererImpl<float>::doRenderStreams\28MT32Emu::DACOutputStreams<float>\20const&\2c\20unsigned\20int\29 can change the state due to initial scan
[asyncify] MT32Emu::RendererImpl<float>::doRender\28float*\2c\20unsigned\20int\29 can change the state due to initial scan
[asyncify] MT32Emu::AnalogImpl<float>::~AnalogImpl\28\29 can change the state due to initial scan
[asyncify] MT32Emu::RendererImpl<short>::produceStreams\28MT32Emu::DACOutputStreams<short>\20const&\2c\20unsigned\20int\29 can change the state due to initial scan
[asyncify] MT32Emu::RendererImpl<float>::produceStreams\28MT32Emu::DACOutputStreams<float>\20const&\2c\20unsigned\20int\29 can change the state due to initial scan
[asyncify] MT32Emu::Synth::renderStreams\28MT32Emu::DACOutputStreams<float>\20const&\2c\20unsigned\20int\29 can change the state due to initial scan
[asyncify] MT32Emu::Synth::renderStreams\28short*\2c\20short*\2c\20short*\2c\20short*\2c\20short*\2c\20short*\2c\20unsigned\20int\29 can change the state due to initial scan
[asyncify] MT32Emu::Synth::renderStreams\28float*\2c\20float*\2c\20float*\2c\20float*\2c\20float*\2c\20float*\2c\20unsigned\20int\29 can change the state due to initial scan
[asyncify] mt32emu_identify_rom_file can change the state due to initial scan
[asyncify] mt32emu_free_context can change the state due to initial scan
[asyncify] mt32emu_add_rom_file can change the state due to initial scan
[asyncify] [asyncify] mt32emu_add_machine_rom_file can change the state due to initial scan
[asyncify] MT32Emu::Synth::renderStreams\28MT32Emu::DACOutputStreams<short>\20const&\2c\20unsigned\20int\29 can change the state due to initial scan
[asyncify] MT32Emu::replaceOrMergeROMImage\28MT32Emu::ROMImage\20const*&\2c\20MT32Emu::ROMImage\20const*\2c\20MT32Emu::MachineConfiguration\20const*\2c\20mt32emu_return_code\2c\20mt32emu_return_code\29[asyncify] mt32emu_set_midi_receiver can change the state due to initial scan
[asyncify] MT32Emu::DelegatingReportHandlerAdapter::printDebug\28char\20const*\2c\20void*\29 can change the state due to initial scan
[asyncify] [asyncify] MT32Emu::DelegatingReportHandlerAdapter::showLCDMessage\28char\20const*\29 can change the state due to initial scan
[asyncify] MT32Emu::DelegatingReportHandlerAdapter::onMIDIMessagePlayed\28\29 can change the state due to initial scan
[asyncify] MT32Emu::DelegatingReportHandlerAdapter::onDeviceReset\28\29 can change the state due to initial scan
[asyncify] MT32Emu::DelegatingReportHandlerAdapter::onDeviceReconfig\28\29 can change the state due to initial scan
[asyncify] MT32Emu::DelegatingReportHandlerAdapter::onMIDISystemRealtime\28unsigned\20char\29[asyncify]  can change the state due to initial scan
[asyncify] MT32Emu::DelegatingReportHandlerAdapter::onNewReverbTime\28unsigned\20char\29 can change the state due to initial scan
[asyncify] MT32Emu::DelegatingReportHandlerAdapter::onNewReverbLevel\28unsigned\20char\29 can change the state due to initial scan
[asyncify] MT32Emu::DelegatingReportHandlerAdapter::onPolyStateChanged\28unsigned\20char\29 can change the state due to initial scan
[asyncify] MT32Emu::DelegatingReportHandlerAdapter::onProgramChanged\28unsigned\20char\2c\20char\20const*\2c\20char\20const*\29 can change the state due to initial scan
[asyncify] MT32Emu::DelegatingReportHandlerAdapter::onLCDStateUpdated\28\29 can change the state due to initial scan
[asyncify] MT32Emu::DelegatingReportHandlerAdapter::onMidiMessageLEDStateUpdated\28bool\29 can change the state due to initial scan
[asyncify] MT32Emu::DelegatingMidiStreamParser::handleShortMessage\28unsigned\20int\29 can change the state due to initial scan
[asyncify] [asyncify] non-virtual\20thunk\20to\20MT32Emu::DelegatingMidiStreamParser::handleShortMessage\28unsigned\20int\29 can change the state due to initial scan
[asyncify] MT32Emu::Part::setProgram\28unsigned\20int\29 can change the state due to initial scan
[asyncify] non-virtual\20thunk\20to\20MT32Emu::DelegatingMidiStreamParser::handleSystemRealtimeMessage\28unsigned\20char\29 can change the state due to initial scan
[asyncify] [asyncify] non-virtual\20thunk\20to\20MT32Emu::DelegatingMidiStreamParser::handleSysex\28unsigned\20char\20const*\2c\20unsigned\20int\29MT32Emu::DelegatingMidiStreamParser::handleSystemRealtimeMessage\28unsigned\20char\29 can change the state due to initial scan
[asyncify] MT32Emu::InternalResampler::~InternalResampler\28\29 can change the state due to initial scan
[asyncify] MT32Emu::InternalResampler::getOutputSamples\28float*\2c\20unsigned\20int\29 can change the state due to initial scan
[asyncify] SRCTools::ResamplerModel::freeResamplerModel\28SRCTools::FloatSampleProvider&\2c\20SRCTools::FloatSampleProvider&\29 can change the state due to initial scan
[asyncify] SRCTools::ResamplerModel::CascadeStage::getOutputSamples\28float*\2c\20unsigned\20int\29 can change the state due to initial scan
[asyncify] SRCTools::ResamplerModel::InternalResamplerCascadeStage::~InternalResamplerCascadeStage\28\29 can change the state due to initial scan
[asyncify] oggpack_writecopy_helper can change the state due to initial scan
[asyncify] jpeg_CreateCompress can change the state due to initial scan
[asyncify] jpeg_finish_compress can change the state due to initial scan
[asyncify] jpeg_start_compress can change the state due to initial scan
[asyncify] jpeg_write_scanlines can change the state due to initial scan
[asyncify] jpeg_write_raw_data can change the state due to initial scan
[asyncify] jpeg_write_marker can change the state due to initial scan
[asyncify] jpeg_write_m_byte can change the state due to initial scan
[asyncify] jinit_arith_encoder can change the state due to initial scan
[asyncify] jpeg_write_m_header can change the state due to initial scan
[asyncify] finish_pass can change the state due to initial scan
[asyncify] start_pass can change the state due to initial scan
[asyncify] emit_restart can change the state due to initial scan
[asyncify] arith_encode can change the state due to initial scan
[asyncify] jinit_c_coef_controller can change the state due to initial scan
[asyncify] start_pass_coef can change the state due to initial scan
[asyncify] compress_first_pass can change the state due to initial scan
[asyncify] compress_data can change the state due to initial scan
[asyncify] compress_output can change the state due to initial scan
[asyncify] jinit_color_converter can change the state due to initial scan
[asyncify] rgb_ycc_start can change the state due to initial scan
[asyncify] jpeg_write_tables can change the state due to initial scan
[asyncify] jinit_forward_dct can change the state due to initial scan
[asyncify] forward_DCT can change the state due to initial scan
[asyncify] jinit_huff_encoder can change the state due to initial scan
[asyncify] forward_DCT_float can change the state due to initial scan
[asyncify] finish_pass_huff can change the state due to initial scan
[asyncify] start_pass_huff can change the state due to initial scan
[asyncify] start_pass_fdctmgr can change the state due to initial scan
[asyncify] encode_mcu_DC_first.1 can change the state due to initial scan
[asyncify] encode_mcu_DC_refine.1 can change the state due to initial scan
[asyncify] encode_mcu_AC_first.1 can change the state due to initial scan
[asyncify] encode_mcu_gather can change the state due to initial scan
[asyncify] jpeg_make_c_derived_tbl can change the state due to initial scan
[asyncify] encode_mcu_AC_refine.1 can change the state due to initial scan
[asyncify] emit_eobrun can change the state due to initial scan
[asyncify] emit_restart_e can change the state due to initial scan
[asyncify] jpeg_gen_optimal_table can change the state due to initial scan
[asyncify] flush_bits_e can change the state due to initial scan
[asyncify] emit_bits_e can change the state due to initial scan
[asyncify] emit_buffered_bits can change the state due to initial scan
[asyncify] jinit_c_main_controller can change the state due to initial scan
[asyncify] jinit_compress_master can change the state due to initial scan
[asyncify] start_pass_main can change the state due to initial scan
[asyncify] jinit_marker_writer can change the state due to initial scan
[asyncify] [asyncify] write_marker_byte can change the state due to initial scan
[asyncify] write_marker_header can change the state due to initial scan
[asyncify] write_tables_only can change the state due to initial scan
[asyncify] write_file_trailer can change the state due to initial scan
[asyncify] jpeg_calc_jpeg_dimensions can change the state due to initial scan
[asyncify] write_scan_header can change the state due to initial scan
[asyncify] write_file_header can change the state due to initial scan
[asyncify] write_frame_header can change the state due to initial scan
[asyncify] emit_dqt can change the state due to initial scan
[asyncify] emit_sof can change the state due to initial scan
[asyncify] emit_dht can change the state due to initial scan
[asyncify] finish_pass_master can change the state due to initial scan
[asyncify] pass_startup can change the state due to initial scan
[asyncify] prepare_for_pass can change the state due to initial scan
[asyncify] jpeg_abort can change the state due to initial scan
[asyncify] per_scan_setup can change the state due to initial scan
[asyncify] jpeg_destroy can change the state due to initial scan
[asyncify] jpeg_alloc_huff_table can change the state due to initial scan
[asyncify] jpeg_alloc_quant_table can change the state due to initial scan
[asyncify] jpeg_add_quant_table can change the state due to initial scan
[asyncify] jinit_c_master_control can change the state due to initial scan
[asyncify] select_scan_parameters can change the state due to initial scan
[asyncify] jpeg_set_linear_quality can change the state due to initial scan
[asyncify] jpeg_default_qtables can change the state due to initial scan
[asyncify] add_huff_table can change the state due to initial scan
[asyncify] SRCTools::ResamplerModel::InternalResamplerCascadeStage::~InternalResamplerCascadeStage\28\29.1 can change the state due to initial scan
[asyncify] jpeg_set_defaults can change the state due to initial scan
[asyncify] jpeg_default_colorspace can change the state due to initial scan
[asyncify] start_pass_prep can change the state due to initial scan
[asyncify] jpeg_set_colorspace can change the state due to initial scan
[asyncify] pre_process_data can change the state due to initial scan
[asyncify] jinit_c_prep_controller can change the state due to initial scan
[asyncify] sep_downsample can change the state due to initial scan
[asyncify] pre_process_context can change the state due to initial scan
[asyncify] jinit_downsampler can change the state due to initial scan
[asyncify] jpeg_write_coefficients can change the state due to initial scan
[asyncify] start_pass_coef.1 can change the state due to initial scan
[asyncify] jpeg_CreateDecompress can change the state due to initial scan
[asyncify] jpeg_read_header can change the state due to initial scan
[asyncify] jpeg_copy_critical_parameters can change the state due to initial scan
[asyncify] jpeg_has_multiple_scans can change the state due to initial scan
[asyncify] jpeg_input_complete can change the state due to initial scan
[asyncify] jpeg_simple_progression can change the state due to initial scan
[asyncify] jpeg_finish_decompress can change the state due to initial scan
[asyncify] jpeg_start_decompress can change the state due to initial scan
[asyncify] compress_output.1 can change the state due to initial scan
[asyncify] output_pass_setup can change the state due to initial scan
[asyncify] [asyncify] jpeg_read_scanlinesjpeg_consume_input[asyncify] jpeg_read_raw_data can change the state due to initial scan
[asyncify] jpeg_start_output can change the state due to initial scan
[asyncify] jinit_arith_decoder can change the state due to initial scan
[asyncify] jpeg_finish_output can change the state due to initial scan
[asyncify] process_data_simple_main can change the state due to initial scan
[asyncify] start_pass.1 can change the state due to initial scan
[asyncify] decode_mcu_DC_first can change the state due to initial scan
[asyncify] decode_mcu_AC_first can change the state due to initial scan
[asyncify] jpeg_stdio_dest can change the state due to initial scan
[asyncify] decode_mcu_AC_refine[asyncify] [asyncify] term_destination can change the state due to initial scan
[asyncify] init_destination can change the state due to initial scan
[asyncify] jpeg_mem_dest can change the state due to initial scan
[asyncify] [asyncify] jpeg_stdio_src can change the state due to initial scan
[asyncify] skip_input_data can change the state due to initial scan
[asyncify] fill_input_buffer can change the state due to initial scan
[asyncify] fill_mem_input_buffer can change the state due to initial scan
[asyncify] process_restart can change the state due to initial scan
[asyncify] jpeg_mem_src can change the state due to initial scan
[asyncify] jinit_d_coef_controller can change the state due to initial scan
[asyncify] start_output_pass can change the state due to initial scan
[asyncify] decompress_data can change the state due to initial scan
[asyncify] decompress_onepass can change the state due to initial scan
[asyncify] [asyncify] decompress_smooth_data can change the state due to initial scan
[asyncify] build_ycc_rgb_table can change the state due to initial scan
[asyncify] empty_mem_output_buffer can change the state due to initial scan
[asyncify] jinit_inverse_dct can change the state due to initial scan
[asyncify] jinit_huff_decoder can change the state due to initial scan
[asyncify] start_pass.2 can change the state due to initial scan
[asyncify] start_pass_huff_decoder can change the state due to initial scan
[asyncify] decode_mcu_DC_refine.1 can change the state due to initial scan
[asyncify] decode_mcu_AC_refine.1 can change the state due to initial scan
[asyncify] decode_mcu_AC_first.1 can change the state due to initial scan
[asyncify] jpeg_make_d_derived_tbl can change the state due to initial scan
[asyncify] jpeg_fill_bit_buffer can change the state due to initial scan
[asyncify] jpeg_huff_decode can change the state due to initial scan
[asyncify] decode_mcu_sub can change the state due to initial scan
[asyncify] jinit_input_controller can change the state due to initial scan
[asyncify] finish_input_pass can change the state due to initial scan
[asyncify] reset_input_controller can change the state due to initial scan
[asyncify] start_input_pass.1 can change the state due to initial scan
[asyncify] decode_mcu_DC_first.1 can change the state due to initial scan
[asyncify] jinit_d_main_controller can change the state due to initial scan
[asyncify] consume_markers can change the state due to initial scan
[asyncify] decode_mcu.1 can change the state due to initial scan
[asyncify] start_pass_main.1 can change the state due to initial scan
[asyncify] process_data_simple_main.1 can change the state due to initial scan
[asyncify] process_data_context_main can change the state due to initial scan
[asyncify] process_data_crank_post can change the state due to initial scan
[asyncify] jinit_marker_reader can change the state due to initial scan
[asyncify] next_marker can change the state due to initial scan
[asyncify] read_restart_marker can change the state due to initial scan
[asyncify] jpeg_resync_to_restart can change the state due to initial scan
[asyncify] get_interesting_appn can change the state due to initial scan
[asyncify] get_sof can change the state due to initial scan
[asyncify] jpeg_save_markers can change the state due to initial scan
[asyncify] examine_app0 can change the state due to initial scan
[asyncify] skip_variable can change the state due to initial scan
[asyncify] save_marker can change the state due to initial scan
[asyncify] jpeg_set_marker_processor can change the state due to initial scan
[asyncify] jpeg_calc_output_dimensions can change the state due to initial scan
[asyncify] jpeg_new_colormap can change the state due to initial scan
[asyncify] finish_output_pass can change the state due to initial scan
[asyncify] prepare_for_output_pass can change the state due to initial scan
[asyncify] jinit_merged_upsampler can change the state due to initial scan
[asyncify] merged_2v_upsample can change the state due to initial scan
[asyncify] merged_1v_upsample can change the state due to initial scan
[asyncify] jinit_d_post_controller can change the state due to initial scan
[asyncify] read_markers can change the state due to initial scan
[asyncify] start_pass_dpost can change the state due to initial scan
[asyncify] post_process_1pass can change the state due to initial scan
[asyncify] post_process_prepass can change the state due to initial scan
[asyncify] jinit_master_decompress can change the state due to initial scan
[asyncify] post_process_2pass can change the state due to initial scan
[asyncify] sep_upsample can change the state due to initial scan
[asyncify] jinit_upsampler can change the state due to initial scan
[asyncify] output_message can change the state due to initial scan
[asyncify] emit_message can change the state due to initial scan
[asyncify] error_exit can change the state due to initial scan
[asyncify] jpeg_read_coefficients can change the state due to initial scan
[asyncify] consume_data can change the state due to initial scan
[asyncify] jinit_color_deconverter can change the state due to initial scan
[asyncify] jinit_memory_mgr can change the state due to initial scan
[asyncify] free_pool can change the state due to initial scan
[asyncify] request_virt_barray can change the state due to initial scan
[asyncify] request_virt_sarray can change the state due to initial scan
[asyncify] access_virt_sarray can change the state due to initial scan
[asyncify] alloc_barray can change the state due to initial scan
[asyncify] alloc_sarray can change the state due to initial scan
[asyncify] [asyncify] jpeg_open_backing_store can change the state due to initial scan
[asyncify] new_color_map_1_quant can change the state due to initial scan
[asyncify] access_virt_barray can change the state due to initial scan
[asyncify] create_colorindex can change the state due to initial scan
[asyncify] alloc_small can change the state due to initial scan
[asyncify] start_pass_1_quant can change the state due to initial scan
[asyncify] jinit_1pass_quantizer can change the state due to initial scan
[asyncify] jinit_2pass_quantizer can change the state due to initial scan
[asyncify] start_pass_2_quant can change the state due to initial scan
[asyncify] init_error_limit can change the state due to initial scan
[asyncify] jinit_read_bmp can change the state due to initial scan
[asyncify] finish_pass1 can change the state due to initial scan
[asyncify] preload_image can change the state due to initial scan
[asyncify] get_8bit_row can change the state due to initial scan
[asyncify] get_24bit_row can change the state due to initial scan
[asyncify] get_32bit_row can change the state due to initial scan
[asyncify] jinit_read_ppm can change the state due to initial scan
[asyncify] read_pbm_integer can change the state due to initial scan
[asyncify] get_text_gray_row can change the state due to initial scan
[asyncify] get_raw_row can change the state due to initial scan
[asyncify] [asyncify] get_scaled_gray_row can change the state due to initial scan
[asyncify] start_input_bmp can change the state due to initial scan
[asyncify] get_text_rgb_row can change the state due to initial scan
[asyncify] get_word_rgb_row can change the state due to initial scan
[asyncify] jinit_read_targa can change the state due to initial scan
[asyncify] read_scan_script can change the state due to initial scan
[asyncify] read_color_map can change the state due to initial scan
[asyncify] read_rle_pixel can change the state due to initial scan
[asyncify] start_input_tga can change the state due to initial scan
[asyncify] get_8bit_row.1[asyncify] get_24bit_row.1 can change the state due to initial scan
[asyncify] get_16bit_row can change the state due to initial scan
[asyncify] get_memory_row can change the state due to initial scan
[asyncify] preload_image.1 can change the state due to initial scan
[asyncify] get_8bit_gray_row can change the state due to initial scan
[asyncify] jinit_write_bmp can change the state due to initial scan
[asyncify] put_gray_rows can change the state due to initial scan
[asyncify] put_pixel_rows can change the state due to initial scan
[asyncify] jtransform_adjust_parameters[asyncify] jinit_write_gif can change the state due to initial scan
[asyncify] write_colormap can change the state due to initial scan
[asyncify] finish_output_ppm[asyncify]  can change the state due to initial scan
[asyncify] jtransform_request_workspace can change the state due to initial scan
[asyncify] finish_output_bmp[asyncify] start_output_ppm can change the state due to initial scan
[asyncify] jinit_write_ppm can change the state due to initial scan
[asyncify] jinit_write_targa can change the state due to initial scan
[asyncify] finish_output_tga can change the state due to initial scan
[asyncify] start_output_tga can change the state due to initial scan
[asyncify] emit_header can change the state due to initial scan
[asyncify] jtransform_execute_transform can change the state due to initial scan
[asyncify] SDL_UnRLESurface can change the state due to initial scan
[asyncify] RLEColorkeySurface can change the state due to initial scan
[asyncify] SDL_ReportAssertion can change the state due to initial scan
[asyncify] RLEAlphaSurface can change the state due to initial scan
[asyncify] SDL_OpenedAudioDeviceDisconnected can change the state due to initial scan
[asyncify] SDL_RemoveAudioDevice can change the state due to initial scan
[asyncify] SDL_DequeueAudio can change the state due to initial scan
[asyncify] SDL_QueueAudio can change the state due to initial scan
[asyncify] SDL_ClearQueuedAudio can change the state due to initial scan
[asyncify] SDL_GetQueuedAudioSize can change the state due to initial scan
[asyncify] SDL_AudioQuit can change the state due to initial scan
[asyncify] SDL_AudioInit can change the state due to initial scan
[asyncify] close_audio_device can change the state due to initial scan
[asyncify] SDL_GetDefaultAudioInfo can change the state due to initial scan
[asyncify] [asyncify] SDL_CaptureAudio can change the state due to initial scan
[asyncify] SDL_RunAudio[asyncify] [asyncify] SDL_UnlockAudioDevice can change the state due to initial scan
[asyncify] SDL_UnlockAudio can change the state due to initial scan
[asyncify] SDL_ConvertAudio can change the state due to initial scan
[asyncify] SDL_LockAudioDevice can change the state due to initial scan
[asyncify] SDL_PauseAudio can change the state due to initial scan
[asyncify] SDL_Convert_Byteswap can change the state due to initial scan
[asyncify] open_audio_device can change the state due to initial scan
[asyncify] SDL_ConvertStereoToMono can change the state due to initial scan
[asyncify] SDL_ConvertMonoToStereo can change the state due to initial scan
[asyncify] SDL_FreeAudioStream can change the state due to initial scan
[asyncify] SDL_NewAudioStream can change the state due to initial scan
[asyncify] SDL_AudioStreamPutInternal can change the state due to initial scan
[asyncify] SDL_AudioStreamClear can change the state due to initial scan
[asyncify] SDL_ConvertMonoTo21 can change the state due to initial scan
[asyncify] SDL_ConvertMonoToQuad can change the state due to initial scan
[asyncify] SDL_ConvertMonoTo51 can change the state due to initial scan
[asyncify] SDL_ConvertMonoTo41 can change the state due to initial scan
[asyncify] SDL_ConvertStereoTo21 can change the state due to initial scan
[asyncify] SDL_ConvertMonoTo71 can change the state due to initial scan
[asyncify] SDL_ConvertStereoToQuad can change the state due to initial scan
[asyncify] SDL_ConvertStereoTo41 can change the state due to initial scan
[asyncify] SDL_ConvertMonoTo61 can change the state due to initial scan
[asyncify] SDL_ConvertStereoTo51 can change the state due to initial scan
[asyncify] SDL_ConvertStereoTo61 can change the state due to initial scan
[asyncify] SDL_ConvertStereoTo71 can change the state due to initial scan
[asyncify] SDL_Convert21To41 can change the state due to initial scan
[asyncify] SDL_Convert21To51[asyncify] [asyncify] SDL_Convert21To71[asyncify] SDL_Convert21ToQuad can change the state due to initial scan
[asyncify] SDL_Convert21ToMono can change the state due to initial scan
[asyncify] SDL_Convert21ToStereo can change the state due to initial scan
[asyncify] SDL_ConvertQuadToStereo can change the state due to initial scan
[asyncify] SDL_ConvertQuadToMono can change the state due to initial scan
[asyncify] SDL_ConvertQuadTo21 can change the state due to initial scan
[asyncify] SDL_ConvertQuadTo41 can change the state due to initial scan
[asyncify] SDL_ConvertQuadTo61 can change the state due to initial scan
[asyncify] SDL_Convert41ToMono[asyncify] SDL_ConvertQuadTo71[asyncify] SDL_Convert41ToStereo can change the state due to initial scan
[asyncify] SDL_ConvertQuadTo51 can change the state due to initial scan
[asyncify] SDL_Convert41ToQuad can change the state due to initial scan
[asyncify] SDL_Convert41To51 can change the state due to initial scan
[asyncify] SDL_Convert41To21 can change the state due to initial scan
[asyncify] [asyncify] SDL_Convert51ToMonoSDL_Convert41To71 can change the state due to initial scan
[asyncify] SDL_Convert51ToStereo can change the state due to initial scan
[asyncify] SDL_Convert41To61 can change the state due to initial scan
[asyncify] SDL_Convert51ToQuad can change the state due to initial scan
[asyncify] SDL_Convert51To41 can change the state due to initial scan
[asyncify] SDL_Convert51To71 can change the state due to initial scan
[asyncify] SDL_Convert61ToMono can change the state due to initial scan
[asyncify] [asyncify] [asyncify] [asyncify] SDL_Convert61To41 can change the state due to initial scan
[asyncify] SDL_Convert51To21 can change the state due to initial scan
[asyncify] SDL_Convert61To71 can change the state due to initial scan
[asyncify] SDL_Convert71ToMono can change the state due to initial scan
[asyncify] SDL_Convert71ToStereo can change the state due to initial scan
[asyncify] SDL_Convert71ToQuad can change the state due to initial scan
[asyncify] SDL_Convert71To41 can change the state due to initial scan
[asyncify] [asyncify] SDL_Convert71To61 can change the state due to initial scan
[asyncify] SDL_Convert_S8_to_F32_Scalar can change the state due to initial scan
[asyncify] SDL_Convert61To51 can change the state due to initial scan
[asyncify] SDL_Convert_U16_to_F32_Scalar can change the state due to initial scan
[asyncify] SDL_Convert_S32_to_F32_Scalar can change the state due to initial scan
[asyncify] SDL_Convert_S16_to_F32_Scalar can change the state due to initial scan
[asyncify] SDL_Convert_F32_to_S8_Scalar can change the state due to initial scan
[asyncify] SDL_Convert_F32_to_U8_Scalar can change the state due to initial scan
[asyncify] SDL_Convert_F32_to_S16_Scalar can change the state due to initial scan
[asyncify] SDL_Convert_F32_to_U16_Scalar can change the state due to initial scan
[asyncify] SDL_Convert_F32_to_S32_Scalar can change the state due to initial scan
[asyncify] SDL_ResampleCVT can change the state due to initial scan
[asyncify] SDL_BlendFillRects can change the state due to initial scan
[asyncify] SDL_BlendLine can change the state due to initial scan
[asyncify] SDL_BlendLines can change the state due to initial scan
[asyncify] SDL_BlendPoints can change the state due to initial scan
[asyncify] SDL_SoftBlit can change the state due to initial scan
[asyncify] SDL_SetClipboardText can change the state due to initial scan
[asyncify] SDL_GetClipboardText can change the state due to initial scan
[asyncify] SDL_HasClipboardText can change the state due to initial scan
[asyncify] SDL_DrawLine can change the state due to initial scan
[asyncify] SDL_DrawLines can change the state due to initial scan
[asyncify] SDL_EGL_GetProcAddress can change the state due to initial scan
[asyncify] [asyncify] SDL_EGL_UnloadLibrary can change the state due to initial scan
[asyncify] [asyncify] SDL_EGL_ChooseConfigSDL_EGL_InitializeOffscreen can change the state due to initial scan
[asyncify] SDL_EGL_DeleteContext can change the state due to initial scan
[asyncify] SDL_EGL_SetSwapInterval can change the state due to initial scan
[asyncify] SDL_EGL_CreateContext can change the state due to initial scan
[asyncify] SDL_EGL_SwapBuffers can change the state due to initial scan
[asyncify] SDL_EGL_LoadLibraryOnly can change the state due to initial scan
[asyncify] SDL_EGL_CreateSurface can change the state due to initial scan
[asyncify] SDL_EGL_LoadLibrary can change the state due to initial scan
[asyncify] SDL_EGL_CreateOffscreenSurface can change the state due to initial scan
[asyncify] SDL_EGL_MakeCurrent can change the state due to initial scan
[asyncify] SDL_EGL_DestroySurface[asyncify] HandleCaptureProcess can change the state due to initial scan
[asyncify] HandleAudioProcess can change the state due to initial scan
[asyncify] SDL_EGL_PrivateChooseConfig can change the state due to initial scan
[asyncify] Emscripten_GLES_LoadLibrary can change the state due to initial scan
[asyncify] SDL_SetError can change the state due to initial scan
[asyncify] SDL_PumpEvents can change the state due to initial scan
[asyncify] SDL_WaitEventTimeout_Device can change the state due to initial scan
[asyncify] SDL_PumpEventsInternal can change the state due to initial scan
[asyncify] SDL_FilterEvents can change the state due to initial scan
[asyncify] SDL_PushEvent can change the state due to initial scan
[asyncify] SDL_FillRects can change the state due to initial scan
[asyncify] SDL_PeepEventsInternal can change the state due to initial scan
[asyncify] SDL_GameControllerSetSensorEnabled can change the state due to initial scan
[asyncify] SDL_SetHintWithPriority can change the state due to initial scan
[asyncify] SDL_ResetHint can change the state due to initial scan
[asyncify] SDL_AddHintCallback can change the state due to initial scan
[asyncify] SDL_JoystickInit can change the state due to initial scan
[asyncify] SDL_GetDriverAndJoystickIndex can change the state due to initial scan
[asyncify] [asyncify] SDL_JoystickNameForIndex can change the state due to initial scan
[asyncify] SDL_JoystickPathForIndex can change the state due to initial scan
[asyncify] SDL_JoystickGetDeviceInstanceID can change the state due to initial scan
[asyncify] SDL_JoystickGetDevicePlayerIndex can change the state due to initial scan
[asyncify] SDL_JoystickClose can change the state due to initial scan
[asyncify] SDL_PrivateJoystickGetAutoGamepadMapping can change the state due to initial scan
[asyncify] SDL_JoystickOpen can change the state due to initial scan
[asyncify] SDL_JoystickHasLED can change the state due to initial scan
[asyncify] SDL_JoystickHasRumble can change the state due to initial scan
[asyncify] SDL_JoystickRumbleTriggers can change the state due to initial scan
[asyncify] SDL_JoystickSendEffect can change the state due to initial scan
[asyncify] SDL_JoystickRumble[asyncify] SDL_JoystickSetLED can change the state due to initial scan
[asyncify]  can change the state due to initial scan
[asyncify] [asyncify] SDL_PrivateJoystickAdded can change the state due to initial scan
[asyncify] SDL_JoystickQuit can change the state due to initial scan
[asyncify] SDL_SetJoystickIDForPlayerIndex can change the state due to initial scan
[asyncify] SDL_JoystickUpdate can change the state due to initial scan
[asyncify] SDL_JoystickGetDeviceVendor can change the state due to initial scan
[asyncify] SDL_JoystickGetDeviceProduct can change the state due to initial scan
[asyncify] SDL_JoystickGetDeviceGUID can change the state due to initial scan
[asyncify] SDL_JoystickGetDeviceProductVersion can change the state due to initial scan
[asyncify] SDL_JoystickGetDeviceType can change the state due to initial scan
[asyncify] SDL_SetKeyboardFocus can change the state due to initial scan
[asyncify] SDL_LogMessageV can change the state due to initial scan
[asyncify] SDL_malloc can change the state due to initial scan
[asyncify] SDL_calloc can change the state due to initial scan
[asyncify] SDL_free can change the state due to initial scan
[asyncify] SDL_realloc can change the state due to initial scan
[asyncify] SDL_SetDefaultCursor can change the state due to initial scan
[asyncify] SDL_SetCursor can change the state due to initial scan
[asyncify] SDL_UpdateMouseCapture can change the state due to initial scan
[asyncify] SDL_SetMouseFocus can change the state due to initial scan
[asyncify] SDL_UpdateMouseFocus can change the state due to initial scan
[asyncify] SDL_SendMouseWheel can change the state due to initial scan
[asyncify] SDL_SetRelativeMouseMode can change the state due to initial scan
[asyncify] SDL_ShowCursor can change the state due to initial scan
[asyncify] [asyncify] SDL_PrivateSendMouseMotion can change the state due to initial scan
[asyncify] SDL_PerformWarpMouseInWindow can change the state due to initial scan
[asyncify] SDL_GetGlobalMouseState can change the state due to initial scan
[asyncify] SDL_FreeCursor[asyncify] SDL_WarpMouseInWindow can change the state due to initial scan
[asyncify] SDL_WarpMouseGlobal can change the state due to initial scan
[asyncify] SDL_CreateSystemCursor can change the state due to initial scan
[asyncify] SDL_CreateColorCursor can change the state due to initial scan
[asyncify] SDL_RenderFlush can change the state due to initial scan
[asyncify] SDL_RenderSetViewport can change the state due to initial scan
[asyncify] SDL_GetRendererOutputSize can change the state due to initial scan
[asyncify] SDL_CreateRenderer can change the state due to initial scan
[asyncify] QueueCmdSetViewport can change the state due to initial scan
[asyncify] [asyncify] FlushRenderCommandsIfNotBatching can change the state due to initial scan
[asyncify] [asyncify] SDL_SetRenderTargetSDL_RendererEventWatch can change the state due to initial scan
[asyncify] SDL_CreateTexture can change the state due to initial scan
[asyncify] SDL_DestroyTexture can change the state due to initial scan
[asyncify] SDL_CreateTextureFromSurface can change the state due to initial scan
[asyncify] SDL_LockTexture can change the state due to initial scan
[asyncify] SDL_UnlockTexture can change the state due to initial scan
[asyncify] FlushRenderCommandsIfTextureNeeded can change the state due to initial scan
[asyncify] SDL_UpdateTexture can change the state due to initial scan
[asyncify] SDL_SetTextureScaleMode can change the state due to initial scan
[asyncify] SDL_SetTextureBlendMode can change the state due to initial scan
[asyncify] SDL_UpdateYUVTexture can change the state due to initial scan
[asyncify] SDL_UpdateNVTexture can change the state due to initial scan
[asyncify] SDL_RenderSetClipRect can change the state due to initial scan
[asyncify] SDL_SetRenderDrawBlendMode can change the state due to initial scan
[asyncify] SDL_RenderClear can change the state due to initial scan
[asyncify] SDL_RenderDrawPointsF[asyncify] QueueCmdDrawPoints can change the state due to initial scan
[asyncify] RenderDrawLineBresenham can change the state due to initial scan
[asyncify] [asyncify] SDL_RenderDrawLinesF can change the state due to initial scan
[asyncify] QueueCmdDrawLines can change the state due to initial scan
[asyncify] SDL_RenderFillRectsF can change the state due to initial scan
[asyncify] PrepQueueCmdDraw can change the state due to initial scan
[asyncify] SDL_RenderFillRects can change the state due to initial scan
[asyncify] SDL_RenderDrawPoints can change the state due to initial scan
[asyncify] QueueCmdCopy can change the state due to initial scan
[asyncify] QueueCmdCopyEx can change the state due to initial scan
[asyncify] SDL_RenderPresent can change the state due to initial scan
[asyncify] SDL_GL_BindTexture can change the state due to initial scan
[asyncify] SDL_GL_UnbindTexture[asyncify]  can change the state due to initial scan
[asyncify] [asyncify] [asyncify] SDL_RenderGetMetalCommandEncoder can change the state due to initial scan
[asyncify] SDL_SW_RenderGeometryRaw can change the state due to initial scan
[asyncify] SDL_RenderSetVSync can change the state due to initial scan
[asyncify] QueueCmdGeometry can change the state due to initial scan
[asyncify] GLES2_SetRenderTarget can change the state due to initial scan
[asyncify] GLES2_SetTextureScaleMode[asyncify] SDL_RenderReadPixels can change the state due to initial scan
[asyncify] GLES2_UpdateTextureYUV can change the state due to initial scan
[asyncify] GLES2_CreateRenderer can change the state due to initial scan
[asyncify] GLES2_WindowEvent can change the state due to initial scan
[asyncify] GLES2_BindTexture can change the state due to initial scan
[asyncify] GLES2_UnbindTexture can change the state due to initial scan
[asyncify] GLES2_UpdateTexture can change the state due to initial scan
[asyncify] GLES2_DestroyRenderer can change the state due to initial scan
[asyncify] GLES2_DestroyTexture can change the state due to initial scan
[asyncify] GLES2_CreateTexture can change the state due to initial scan
[asyncify] GLES2_RenderReadPixels can change the state due to initial scan
[asyncify] GLES2_TexSubImage2D can change the state due to initial scan
[asyncify] GLES2_CacheShader can change the state due to initial scan
[asyncify] GLES2_RunCommandQueue can change the state due to initial scan
[asyncify] SetDrawState can change the state due to initial scan
[asyncify] stdio_size can change the state due to initial scan
[asyncify] SDL_RWsize can change the state due to initial scan
[asyncify] [asyncify] SDL_RWread[asyncify] SDL_RWclose can change the state due to initial scan
[asyncify] SDL_RWtell can change the state due to initial scan
[asyncify] SDL_RWseek can change the state due to initial scan
[asyncify] SDL_RWwrite can change the state due to initial scan
[asyncify] SDL_ReadU8 can change the state due to initial scan
[asyncify] SDL_ReadLE32 can change the state due to initial scan
[asyncify] SDL_ReadLE16[asyncify] SDL_ReadBE32SDL_LoadFile_RW can change the state due to initial scan
[asyncify] SDL_WriteU8 can change the state due to initial scan
[asyncify] SDL_ReadBE64 can change the state due to initial scan
[asyncify] SDL_WriteBE16 can change the state due to initial scan
[asyncify] [asyncify] SDL_WriteBE32 can change the state due to initial scan
[asyncify] SDL_WriteLE16 can change the state due to initial scan
[asyncify] SDL_ReadBE16 can change the state due to initial scan
[asyncify] SDL_WriteLE64 can change the state due to initial scan
[asyncify] SDL_WriteBE64 can change the state due to initial scan
[asyncify] SDL_ReadLE64[asyncify] SDL_SensorInit can change the state due to initial scan
[asyncify] SDL_NumSensors[asyncify] SDL_SensorGetDeviceInstanceID can change the state due to initial scan
[asyncify] SDL_SensorGetDeviceType can change the state due to initial scan
[asyncify] SDL_SensorGetDeviceNonPortableType can change the state due to initial scan
[asyncify] SDL_SensorOpen can change the state due to initial scan
[asyncify] SDL_SensorQuit can change the state due to initial scan
[asyncify] SDL_SensorUpdate can change the state due to initial scan
[asyncify] SDL_SensorClose can change the state due to initial scan
[asyncify] SDL_CreateShapedWindow can change the state due to initial scan
[asyncify] [asyncify] SDL_SensorGetDeviceName can change the state due to initial scan
[asyncify] SDL_SetWindowShape can change the state due to initial scan
[asyncify] SDL_LowerBlit can change the state due to initial scan
[asyncify] SDL_UpperBlit can change the state due to initial scan
[asyncify] SDL_ConvertSurface can change the state due to initial scan
[asyncify] SDL_PrivateLowerBlitScaled can change the state due to initial scan
[asyncify] SDL_TLSCleanup can change the state due to initial scan
[asyncify] SDL_RunThread can change the state due to initial scan
[asyncify] SDL_Emscripten_TimerHelper can change the state due to initial scan
[asyncify] SDL_GetTouch can change the state due to initial scan
[asyncify] SDL_VideoQuit can change the state due to initial scan
[asyncify] SDL_StartTextInput can change the state due to initial scan
[asyncify] SDL_VideoInit can change the state due to initial scan
[asyncify] SDL_DisableScreenSaver can change the state due to initial scan
[asyncify] SDL_GL_ResetAttributes can change the state due to initial scan
[asyncify] SDL_DestroyWindow can change the state due to initial scan
[asyncify] SDL_HasScreenKeyboardSupport can change the state due to initial scan
[asyncify] SDL_GetDisplayBounds can change the state due to initial scan
[asyncify] SDL_GetDisplayUsableBounds can change the state due to initial scan
[asyncify] SDL_GetDisplayDPI can change the state due to initial scan
[asyncify] SDL_GetNumDisplayModes can change the state due to initial scan
[asyncify] SDL_GetDisplayMode can change the state due to initial scan
[asyncify] SDL_GetClosestDisplayModeForDisplay can change the state due to initial scan
[asyncify] SDL_GetWindowDisplayIndex can change the state due to initial scan
[asyncify] SDL_GetWindowICCProfile can change the state due to initial scan
[asyncify] SDL_ToggleDragAndDropSupport can change the state due to initial scan
[asyncify] SDL_SetDisplayModeForDisplay can change the state due to initial scan
[asyncify] SDL_SetWindowTitle can change the state due to initial scan
[asyncify] SDL_GL_LoadLibrary can change the state due to initial scan
[asyncify] SDL_FinishWindowCreation can change the state due to initial scan
[asyncify] SDL_GL_MakeCurrent can change the state due to initial scan
[asyncify] SDL_Vulkan_LoadLibrary can change the state due to initial scan
[asyncify] SDL_UpdateFullscreenMode can change the state due to initial scan
[asyncify] SDL_MinimizeWindow can change the state due to initial scan
[asyncify] SDL_UpdateWindowGrab can change the state due to initial scan
[asyncify] SDL_HideWindow can change the state due to initial scan
[asyncify] SDL_GL_UnloadLibrary can change the state due to initial scan
[asyncify] SDL_Vulkan_UnloadLibrary can change the state due to initial scan
[asyncify] SDL_RecreateWindow can change the state due to initial scan
[asyncify] SDL_SetWindowIcon can change the state due to initial scan
[asyncify] SDL_CreateWindowFrom can change the state due to initial scan
[asyncify] SDL_CreateWindow can change the state due to initial scan
[asyncify] SDL_SetWindowBordered can change the state due to initial scan
[asyncify] SDL_SetWindowResizable can change the state due to initial scan
[asyncify] SDL_SetWindowAlwaysOnTop can change the state due to initial scan
[asyncify] SDL_SetWindowPosition can change the state due to initial scan
[asyncify] SDL_GetWindowBordersSize can change the state due to initial scan
[asyncify] SDL_SetWindowSize can change the state due to initial scan
[asyncify] SDL_SetWindowMinimumSize can change the state due to initial scan
[asyncify] SDL_SetWindowMaximumSize can change the state due to initial scan
[asyncify] SDL_ShowWindow can change the state due to initial scan
[asyncify] SDL_MaximizeWindow can change the state due to initial scan
[asyncify] SDL_UpdateWindowSurface can change the state due to initial scan
[asyncify] SDL_GetWindowSurface can change the state due to initial scan
[asyncify] SDL_SetWindowGammaRamp can change the state due to initial scan
[asyncify] SDL_RaiseWindow can change the state due to initial scan
[asyncify] SDL_SetWindowOpacity can change the state due to initial scan
[asyncify] SDL_GetWindowGammaRamp can change the state due to initial scan
[asyncify] SDL_SetWindowModalFor can change the state due to initial scan
[asyncify] SDL_SetWindowInputFocus can change the state due to initial scan
[asyncify] SDL_UpdateWindowSurfaceRects can change the state due to initial scan
[asyncify] [asyncify] SDL_FlashWindow[asyncify] SDL_SetWindowMouseRect can change the state due to initial scan
[asyncify] SDL_OnWindowFocusLost can change the state due to initial scan
[asyncify] SDL_RestoreWindow can change the state due to initial scan
[asyncify] SDL_EnableScreenSaver can change the state due to initial scan
[asyncify] SDL_GL_GetProcAddress can change the state due to initial scan
[asyncify] SDL_GL_ExtensionSupported can change the state due to initial scan
[asyncify] SDL_GL_CreateContext can change the state due to initial scan
[asyncify] SDL_OnWindowFocusGained can change the state due to initial scan
[asyncify] SDL_GL_GetDrawableSize can change the state due to initial scan
[asyncify] SDL_GL_GetSwapInterval can change the state due to initial scan
[asyncify] SDL_GL_SetSwapInterval can change the state due to initial scan
[asyncify] SDL_GL_DeleteContext can change the state due to initial scan
[asyncify] SDL_GL_SwapWindow can change the state due to initial scan
[asyncify] SDL_GetWindowWMInfo can change the state due to initial scan
[asyncify] SDL_ClearComposition[asyncify] SDL_SetTextInputRect can change the state due to initial scan
[asyncify] SDL_StopTextInput can change the state due to initial scan
[asyncify] SDL_IsScreenKeyboardShown can change the state due to initial scan
[asyncify] SDL_SetWindowHitTest can change the state due to initial scan
[asyncify] SDL_GL_GetAttribute can change the state due to initial scan
[asyncify] SDL_ShowMessageBox can change the state due to initial scan
[asyncify] SDL_IsTextInputShown can change the state due to initial scan
[asyncify] SDL_Vulkan_GetDrawableSize can change the state due to initial scan
[asyncify] SDL_Vulkan_GetInstanceExtensions can change the state due to initial scan
[asyncify] SDL_Metal_CreateView can change the state due to initial scan
[asyncify] SDL_Vulkan_CreateSurface can change the state due to initial scan
[asyncify] SDL_Metal_GetLayer can change the state due to initial scan
[asyncify] SDL_Metal_GetDrawableSize can change the state due to initial scan
[asyncify] SDL_Metal_DestroyView can change the state due to initial scan
[asyncify] png_error can change the state due to initial scan
[asyncify] png_longjmp can change the state due to initial scan
[asyncify] png_free can change the state due to initial scan
[asyncify] png_destroy_png_struct can change the state due to initial scan
[asyncify] png_malloc_base can change the state due to initial scan
[asyncify] png_malloc can change the state due to initial scan
[asyncify] png_malloc_warn can change the state due to initial scan
[asyncify] [asyncify] [asyncify] png_malloc_arraypng_realloc_array can change the state due to initial scan
[asyncify] png_push_have_end[asyncify] png_push_have_info can change the state due to initial scan
[asyncify] png_push_have_row can change the state due to initial scan
[asyncify] png_push_read_chunk can change the state due to initial scan
[asyncify] png_read_row can change the state due to initial scan
[asyncify] png_push_process_row can change the state due to initial scan
[asyncify] png_read_data can change the state due to initial scan
[asyncify] png_handle_unknown can change the state due to initial scan
[asyncify] png_read_filter_row can change the state due to initial scan
[asyncify] png_do_read_transformations can change the state due to initial scan
[asyncify] png_write_data can change the state due to initial scan
[asyncify] png_flush can change the state due to initial scan
[asyncify] png_write_row can change the state due to initial scan
[asyncify] png_do_write_transformations can change the state due to initial scan
[asyncify] deflateEnd can change the state due to initial scan
[asyncify] deflateInit2_ can change the state due to initial scan
[asyncify] deflateCopy can change the state due to initial scan
[asyncify] deflate can change the state due to initial scan
[asyncify] inflateBackInit_ can change the state due to initial scan
[asyncify] inflateBackEnd can change the state due to initial scan
[asyncify] inflateReset2 can change the state due to initial scan
[asyncify] inflateInit_ can change the state due to initial scan
[asyncify] inflateInit2_ can change the state due to initial scan
[asyncify] inflateEnd can change the state due to initial scan
[asyncify] updatewindow can change the state due to initial scan
[asyncify] inflateCopy can change the state due to initial scan
[asyncify] inflateBack can change the state due to initial scan
[asyncify] af_face_globals_free can change the state due to initial scan
[asyncify] af_autofitter_load_glyph can change the state due to initial scan
[asyncify] [asyncify] cff_get_interface can change the state due to initial scan
[asyncify] cff_index_get_sid_string can change the state due to initial scan
[asyncify] cff_size_init can change the state due to initial scan
[asyncify] cff_face_done can change the state due to initial scan
[asyncify] cff_size_done can change the state due to initial scan
[asyncify] cff_slot_init can change the state due to initial scan
[asyncify] cff_get_kerning can change the state due to initial scan
[asyncify] cff_get_advances can change the state due to initial scan
[asyncify] cff_size_select can change the state due to initial scan
[asyncify] cff_face_init can change the state due to initial scan
[asyncify] cff_size_request can change the state due to initial scan
[asyncify] cff_cmap_unicode_init can change the state due to initial scan
[asyncify] cff_cmap_unicode_char_index can change the state due to initial scan
[asyncify] cff_cmap_unicode_char_next can change the state due to initial scan
[asyncify] cff_sid_to_glyph_name can change the state due to initial scan
[asyncify] cff_get_ps_name can change the state due to initial scan
[asyncify] [asyncify] cff_glyph_load can change the state due to initial scan
[asyncify] cff_get_glyph_name can change the state due to initial scan
[asyncify] cff_get_cmap_info can change the state due to initial scan
[asyncify] cff_get_name_index can change the state due to initial scan
[asyncify] cff_get_ros can change the state due to initial scan
[asyncify] cf2_glyphpath_curveTo can change the state due to initial scan
[asyncify] cf2_freeSeacComponent can change the state due to initial scan
[asyncify] cf2_glyphpath_lineTo can change the state due to initial scan
[asyncify] cf2_getSeacComponent can change the state due to initial scan
[asyncify] cf2_glyphpath_pushPrevElem can change the state due to initial scan
[asyncify] cff_parser_run can change the state due to initial scan
[asyncify] FT_Get_Advances can change the state due to initial scan
[asyncify] ftc_node_destroy[asyncify]  can change the state due to initial scan
[asyncify] [asyncify] FT_Get_AdvanceFTC_Manager_Reset can change the state due to initial scan
[asyncify] FTC_Manager_RemoveFaceID can change the state due to initial scan
[asyncify] FT_Get_BDF_Property can change the state due to initial scan
[asyncify] FTC_Cache_NewNode can change the state due to initial scan
[asyncify] FTC_MruList_New can change the state due to initial scan
[asyncify] FTC_Manager_RegisterCache[asyncify] FTC_Manager_Done can change the state due to initial scan
[asyncify] FTC_ImageCache_LookupScaler can change the state due to initial scan
[asyncify] FTC_SBitCache_Lookup can change the state due to initial scan
[asyncify] FTC_ImageCache_Lookup can change the state due to initial scan
[asyncify] ftc_face_node_init can change the state due to initial scan
[asyncify] ftc_face_node_done can change the state due to initial scan
[asyncify] ftc_inode_new can change the state due to initial scan
[asyncify] ftc_cache_done can change the state due to initial scan
[asyncify] ftc_inode_free can change the state due to initial scan
[asyncify] FTC_SBitCache_LookupScaler can change the state due to initial scan
[asyncify] ftc_basic_gnode_compare_faceid can change the state due to initial scan
[asyncify] ftc_gcache_done can change the state due to initial scan
[asyncify] ftc_snode_free can change the state due to initial scan
[asyncify] ftc_snode_new can change the state due to initial scan
[asyncify] ftc_snode_load can change the state due to initial scan
[asyncify] FT_Get_CID_Registry_Ordering_Supplement can change the state due to initial scan
[asyncify] [asyncify] FT_Get_CID_From_Glyph_Index can change the state due to initial scan
[asyncify] FT_Get_Font_Format can change the state due to initial scan
[asyncify] [asyncify] FT_Get_FSType_Flags can change the state due to initial scan
[asyncify] FT_Done_Glyph can change the state due to initial scan
[asyncify] FT_Glyph_Copy can change the state due to initial scan
[asyncify] FT_TrueTypeGX_Validate can change the state due to initial scan
[asyncify] [asyncify] FT_ClassicKern_Validate can change the state due to initial scan
[asyncify] FT_Glyph_Get_CBox can change the state due to initial scan
[asyncify] FT_Glyph_Transform can change the state due to initial scan
[asyncify] FT_Glyph_To_Bitmap can change the state due to initial scan
[asyncify] ft_gzip_file_io can change the state due to initial scan
[asyncify] ft_gzip_file_fill_output can change the state due to initial scan
[asyncify] inflateEnd.1 can change the state due to initial scan
[asyncify] inflateInit2_.1 can change the state due to initial scan
[asyncify] FT_Gzip_Uncompress can change the state due to initial scan
[asyncify] inflate_flush can change the state due to initial scan
[asyncify] FT_Get_Multi_Master can change the state due to initial scan
[asyncify] FT_Get_MM_Var can change the state due to initial scan
[asyncify] FT_Set_Var_Design_Coordinates can change the state due to initial scan
[asyncify] FT_Set_MM_Design_Coordinates can change the state due to initial scan
[asyncify] FT_Set_MM_Blend_Coordinates can change the state due to initial scan
[asyncify] FT_Set_Var_Blend_Coordinates can change the state due to initial scan
[asyncify] ft_glyphslot_done can change the state due to initial scan
[asyncify] FT_Done_GlyphSlot can change the state due to initial scan
[asyncify] FT_New_GlyphSlot[asyncify] FT_Render_Glyph can change the state due to initial scan
[asyncify] FT_Get_Char_Index can change the state due to initial scan
[asyncify] open_face can change the state due to initial scan
[asyncify] FT_Load_Char can change the state due to initial scan
[asyncify] FT_New_Size can change the state due to initial scan
[asyncify] inflate.1 can change the state due to initial scan
[asyncify] destroy_size can change the state due to initial scan
[asyncify] FT_Attach_File can change the state due to initial scan
[asyncify] destroy_face can change the state due to initial scan
[asyncify] FT_Attach_Stream can change the state due to initial scan
[asyncify] FT_Done_Size can change the state due to initial scan
[asyncify] FT_Select_Size can change the state due to initial scan
[asyncify] FT_Request_Size can change the state due to initial scan
[asyncify] FT_Get_Kerning can change the state due to initial scan
[asyncify] FT_Get_Track_Kerning can change the state due to initial scan
[asyncify] FT_Get_CMap_Format can change the state due to initial scan
[asyncify] FT_Set_Charmap can change the state due to initial scan
[asyncify] FT_CMap_New can change the state due to initial scan
[asyncify] FT_Get_First_Char can change the state due to initial scan
[asyncify] FT_Get_Next_Char can change the state due to initial scan
[asyncify] FT_Face_GetCharVariantIsDefault can change the state due to initial scan
[asyncify] FT_Face_GetVariantSelectors can change the state due to initial scan
[asyncify] FT_CMap_Done can change the state due to initial scan
[asyncify] FT_Face_GetCharVariantIndex can change the state due to initial scan
[asyncify] FT_Face_GetCharsOfVariant can change the state due to initial scan
[asyncify] FT_Get_Name_Index can change the state due to initial scan
[asyncify] FT_Face_GetVariantsOfChar can change the state due to initial scan
[asyncify] FT_Get_Glyph_Name can change the state due to initial scan
[asyncify] FT_Get_Sfnt_Table[asyncify] FT_Load_Sfnt_Table can change the state due to initial scan
[asyncify] FT_Get_CMap_Language_ID can change the state due to initial scan
[asyncify] FT_Sfnt_Table_Info can change the state due to initial scan
[asyncify] FT_Set_Renderer can change the state due to initial scan
[asyncify] FT_Render_Glyph_Internal can change the state due to initial scan
[asyncify] FT_Load_Glyph can change the state due to initial scan
[asyncify] FT_Remove_Module can change the state due to initial scan
[asyncify] ft_add_renderer can change the state due to initial scan
[asyncify] ft_module_get_service can change the state due to initial scan
[asyncify] [asyncify] FT_Get_Postscript_Name can change the state due to initial scan
[asyncify] FT_Add_Module can change the state due to initial scan
[asyncify] FT_Get_TrueType_Engine_Type can change the state due to initial scan
[asyncify] FT_OpenType_Validate can change the state due to initial scan
[asyncify] FT_Property_Set can change the state due to initial scan
[asyncify] FT_Outline_Decompose can change the state due to initial scan
[asyncify] FT_Outline_Render can change the state due to initial scan
[asyncify] FT_Outline_Get_Bitmap can change the state due to initial scan
[asyncify] FT_Get_PFR_Kerning can change the state due to initial scan
[asyncify] FT_Face_CheckTrueTypePatents can change the state due to initial scan
[asyncify] FT_Get_PFR_Metrics can change the state due to initial scan
[asyncify] FT_Get_PFR_Advance can change the state due to initial scan
[asyncify] FT_Raccess_Guess can change the state due to initial scan
[asyncify] FT_Stream_Close can change the state due to initial scan
[asyncify] FT_Stream_Seek can change the state due to initial scan
[asyncify] FT_Stream_Skip can change the state due to initial scan
[asyncify] FT_Stream_Read can change the state due to initial scan
[asyncify] FT_Stream_EnterFrame can change the state due to initial scan
[asyncify] FT_Stream_TryRead can change the state due to initial scan
[asyncify] FT_Stream_ReadAt can change the state due to initial scan
[asyncify] FT_Stream_ReadChar can change the state due to initial scan
[asyncify] FT_Stream_ReadUShortLE can change the state due to initial scan
[asyncify] FT_Stream_ReadUOffset can change the state due to initial scan
[asyncify] FT_Stream_ReadULong can change the state due to initial scan
[asyncify] FT_Stream_ReadUShort can change the state due to initial scan
[asyncify] FT_Stream_ReadULongLE can change the state due to initial scan
[asyncify] FT_Get_PS_Font_Info can change the state due to initial scan
[asyncify] FT_Get_PS_Font_Private can change the state due to initial scan
[asyncify] [asyncify] ft_mem_qalloc can change the state due to initial scan
[asyncify] ft_mem_alloc can change the state due to initial scan
[asyncify] ft_mem_free can change the state due to initial scan
[asyncify] ft_mem_dup can change the state due to initial scan
[asyncify] ft_mem_realloc can change the state due to initial scan
[asyncify] ft_mem_qrealloc can change the state due to initial scan
[asyncify] [asyncify] FT_List_Iterate can change the state due to initial scan
[asyncify] FT_List_Finalize can change the state due to initial scan
[asyncify] FT_Get_WinFNT_Header can change the state due to initial scan
[asyncify] FT_Get_PS_Font_Value can change the state due to initial scan
[asyncify] pfr_extra_items_parse can change the state due to initial scan
[asyncify] afm_parser_read_vals can change the state due to initial scan
[asyncify] t1_cmap_std_char_index can change the state due to initial scan
[asyncify] t1_cmap_std_char_next can change the state due to initial scan
[asyncify] [asyncify] t1_cmap_unicode_char_next can change the state due to initial scan
[asyncify] t1_cmap_unicode_char_index can change the state due to initial scan
[asyncify] t1_decoder_parse_charstrings can change the state due to initial scan
[asyncify] ps_unicodes_init can change the state due to initial scan
[asyncify] ft_raster1_init can change the state due to initial scan
[asyncify] ft_raster1_set_mode can change the state due to initial scan
[asyncify] ft_raster1_render can change the state due to initial scan
[asyncify] Bezier_Up can change the state due to initial scan
[asyncify] tt_cmap14_char_var_index can change the state due to initial scan
[asyncify] [asyncify] tt_face_get_name can change the state due to initial scan
[asyncify] sfnt_done_face can change the state due to initial scan
[asyncify] tt_face_load_head can change the state due to initial scan
[asyncify] sfnt_init_face can change the state due to initial scan
[asyncify] tt_face_load_hhea can change the state due to initial scan
[asyncify] tt_face_load_cmap can change the state due to initial scan
[asyncify] tt_face_load_maxp can change the state due to initial scan
[asyncify] sfnt_load_face can change the state due to initial scan
[asyncify] tt_face_load_os2 can change the state due to initial scan
[asyncify] tt_face_load_name can change the state due to initial scan
[asyncify] tt_face_load_kern can change the state due to initial scan
[asyncify] tt_face_load_gasp can change the state due to initial scan
[asyncify] tt_face_load_pclt can change the state due to initial scan
[asyncify] tt_face_load_bhed can change the state due to initial scan
[asyncify] tt_face_get_ps_name can change the state due to initial scan
[asyncify] tt_face_load_sbit_image can change the state due to initial scan
[asyncify] load_post_names can change the state due to initial scan
[asyncify] tt_face_load_hmtx can change the state due to initial scan
[asyncify] tt_face_load_sbit can change the state due to initial scan
[asyncify] tt_sbit_decoder_load_bitmap can change the state due to initial scan
[asyncify] tt_face_load_strike_metrics can change the state due to initial scan
[asyncify] tt_get_cmap_info can change the state due to initial scan
[asyncify] ft_smooth_init can change the state due to initial scan
[asyncify] tt_face_load_post can change the state due to initial scan
[asyncify] ft_smooth_set_mode can change the state due to initial scan
[asyncify] ft_smooth_render_generic can change the state due to initial scan
[asyncify] gray_hline can change the state due to initial scan
[asyncify] tt_get_interface can change the state due to initial scan
[asyncify] tt_face_init can change the state due to initial scan
[asyncify] gray_convert_glyph can change the state due to initial scan
[asyncify] tt_check_trickyness can change the state due to initial scan
[asyncify] [asyncify] tt_face_load_prep can change the state due to initial scan
[asyncify] tt_face_load_fpgm can change the state due to initial scan
[asyncify] tt_face_load_hdmx can change the state due to initial scan
[asyncify] tt_face_load_loca can change the state due to initial scan
[asyncify] tt_face_done can change the state due to initial scan
[asyncify] tt_size_run_fpgm can change the state due to initial scan
[asyncify] tt_size_run_prep can change the state due to initial scan
[asyncify] tt_get_kerning can change the state due to initial scan
[asyncify] tt_size_request can change the state due to initial scan
[asyncify] tt_size_select can change the state due to initial scan
[asyncify] tt_get_advances can change the state due to initial scan
[asyncify] Ins_MDRP can change the state due to initial scan
[asyncify] Ins_MIRP can change the state due to initial scan
[asyncify] Compute_Point_Displacement can change the state due to initial scan
[asyncify] Ins_DELTAP can change the state due to initial scan
[asyncify] load_truetype_glyph can change the state due to initial scan
[asyncify] tt_glyph_load can change the state due to initial scan
[asyncify] tt_face_vary_cvt can change the state due to initial scan
[asyncify] TT_Set_Var_Design can change the state due to initial scan
[asyncify] TT_Get_MM_Var can change the state due to initial scan
[asyncify] TT_Set_MM_Blend can change the state due to initial scan
[asyncify] tt_get_metrics can change the state due to initial scan
[asyncify] T1_Parse_Glyph can change the state due to initial scan
[asyncify] TT_Hint_Glyph can change the state due to initial scan
[asyncify] parse_dict can change the state due to initial scan
[asyncify] T1_Size_Init can change the state due to initial scan
[asyncify] T1_Parse_Glyph_And_Get_Char_String can change the state due to initial scan
[asyncify] T1_GlyphSlot_Init can change the state due to initial scan
[asyncify] T1_Size_Done can change the state due to initial scan
[asyncify] T1_Load_Glyph can change the state due to initial scan
[asyncify] TT_RunIns can change the state due to initial scan
[asyncify] T1_Size_Request can change the state due to initial scan
[asyncify] T1_Read_Metrics can change the state due to initial scan
[asyncify] T1_Get_Advances can change the state due to initial scan
[asyncify] t1_parse_font_matrix can change the state due to initial scan
[asyncify] parse_blend_design_positions can change the state due to initial scan
[asyncify] parse_charstrings can change the state due to initial scan
[asyncify] parse_subrs can change the state due to initial scan
[asyncify] [asyncify] T1_Face_Initparse_encoding[asyncify] parse_blend_design_map can change the state due to initial scan
[asyncify] parse_buildchar[asyncify]  can change the state due to initial scan
[asyncify] parse_blend_axis_types can change the state due to initial scan
[asyncify] cid_size_init can change the state due to initial scan
[asyncify] cid_slot_init can change the state due to initial scan
[asyncify] cid_size_done can change the state due to initial scan
[asyncify] cid_size_request can change the state due to initial scan
[asyncify] cid_slot_load_glyph can change the state due to initial scan
[asyncify] parse_fd_array can change the state due to initial scan
[asyncify] cid_face_init can change the state due to initial scan
[asyncify] cid_parse_font_matrix can change the state due to initial scan
[asyncify] t42_parse_sfnts[asyncify]  can change the state due to initial scan
[asyncify] cid_load_glyph can change the state due to initial scan
[asyncify] T42_Face_Init can change the state due to initial scan
[asyncify] T42_GlyphSlot_Load can change the state due to initial scan
[asyncify] t42_parse_font_matrix can change the state due to initial scan
[asyncify] [asyncify] t42_parse_encoding can change the state due to initial scan
[asyncify] __fclose_ca can change the state due to initial scan
[asyncify] __overflow can change the state due to initial scan
[asyncify] __synccall can change the state due to initial scan
[asyncify] __toread can change the state due to initial scan
[asyncify] __uflow can change the state due to initial scan
[asyncify] call can change the state due to initial scan
[asyncify] bsearch can change the state due to initial scan
[asyncify] [asyncify] dlopen_js_onerror can change the state due to initial scan
[asyncify] dlopen_js_onsuccess can change the state due to initial scan
[asyncify] vlogf can change the state due to initial scan
[asyncify] emscripten_scan_stack can change the state due to initial scan
[asyncify] fclose can change the state due to initial scan
[asyncify] fflush can change the state due to initial scan
[asyncify] cookieseek can change the state due to initial scan
[asyncify] cookiewrite can change the state due to initial scan
[asyncify] cookieclose can change the state due to initial scan
[asyncify] cookieread can change the state due to initial scan
[asyncify] [asyncify] __fseeko_unlockedfread[asyncify] __ftello_unlocked can change the state due to initial scan
[asyncify] __fwritex can change the state due to initial scan
[asyncify] do_glob can change the state due to initial scan
[asyncify] __pthread_once can change the state due to initial scan
[asyncify] lfind can change the state due to initial scan
[asyncify] lsearch can change the state due to initial scan
[asyncify] __netlink_enumerate can change the state due to initial scan
[asyncify] do_nftw can change the state due to initial scan
[asyncify] _pthread_cleanup_pop can change the state due to initial scan
[asyncify] trinkle can change the state due to initial scan
[asyncify] wrapper_cmp can change the state due to initial scan
[asyncify] sift can change the state due to initial scan
[asyncify] raise can change the state due to initial scan
[asyncify] scandir can change the state due to initial scan
[asyncify] tdestroy can change the state due to initial scan
[asyncify] tfind can change the state due to initial scan
[asyncify] tdelete can change the state due to initial scan
[asyncify] tsearch can change the state due to initial scan
[asyncify] walk can change the state due to initial scan
[asyncify] __vfprintf_internal can change the state due to initial scan
[asyncify] pop_arg can change the state due to initial scan
[asyncify] printf_core can change the state due to initial scan
[asyncify] std::__2::__c_node::~__c_node\28\29 can change the state due to initial scan
[asyncify] std::__2::__libcpp_db::~__libcpp_db\28\29 can change the state due to initial scan
[asyncify] std::__2::__libcpp_db::__insert_c\28void*\2c\20std::__2::__c_node*\20\28*\29\28void*\2c\20void*\2c\20std::__2::__c_node*\29\29 can change the state due to initial scan
[asyncify] std::__2::__libcpp_db::__dereferenceable\28void\20const*\29\20const can change the state due to initial scan
[asyncify] std::__2::__libcpp_db::__decrementable\28void\20const*\29\20const can change the state due to initial scan
[asyncify] std::__2::__libcpp_db::__subscriptable\28void\20const*\2c\20long\29\20const can change the state due to initial scan
[asyncify] std::__2::__libcpp_db::__addable\28void\20const*\2c\20long\29\20const can change the state due to initial scan
[asyncify] std::__2::__shared_count::__release_shared\5babi:v15006\5d\28\29 can change the state due to initial scan
[asyncify] std::__2::__assoc_sub_state::__on_zero_shared\28\29 can change the state due to initial scan
[asyncify] std::__2::__assoc_sub_state::__sub_wait\28std::__2::unique_lock<std::__2::mutex>&\29 can change the state due to initial scan
[asyncify] std::__2::basic_streambuf<char\2c\20std::__2::char_traits<char>>::xsgetn\28char*\2c\20long\29 can change the state due to initial scan
[asyncify] std::__2::basic_streambuf<char\2c\20std::__2::char_traits<char>>::uflow\28\29 can change the state due to initial scan
[asyncify] std::__2::basic_streambuf<char\2c\20std::__2::char_traits<char>>::xsputn\28char\20const*\2c\20long\29 can change the state due to initial scan
[asyncify] std::__2::basic_streambuf<char\2c\20std::__2::char_traits<char>>::pubsync\5babi:v15006\5d\28\29 can change the state due to initial scan
[asyncify] std::__2::basic_streambuf<char\2c\20std::__2::char_traits<char>>::sgetc\5babi:v15006\5d\28\29 can change the state due to initial scan
[asyncify] std::__2::basic_streambuf<char\2c\20std::__2::char_traits<char>>::sbumpc\5babi:v15006\5d\28\29 can change the state due to initial scan
[asyncify] std::__2::basic_streambuf<char\2c\20std::__2::char_traits<char>>::sputc\5babi:v15006\5d\28char\29[asyncify]  can change the state due to initial scan
[asyncify] std::__2::num_get<char\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>>::get\5babi:v15006\5d\28std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::ios_base&\2c\20unsigned\20int&\2c\20long&\29\20const can change the state due to initial scan
[asyncify] std::__2::num_get<char\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>>::get\5babi:v15006\5d\28std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::ios_base&\2c\20unsigned\20int&\2c\20unsigned\20short&\29\20const[asyncify] std::__2::num_get<char\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>>::get\5babi:v15006\5d\28std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::ios_base&\2c\20unsigned\20int&\2c\20unsigned\20int&\29\20const can change the state due to initial scan
[asyncify] std::__2::num_get<char\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>>::get\5babi:v15006\5d\28std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::ios_base&\2c\20unsigned\20int&\2c\20unsigned\20long&\29\20const can change the state due to initial scan
[asyncify] std::__2::num_get<char\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>>::get\5babi:v15006\5d\28std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::ios_base&\2c\20unsigned\20int&\2c\20long\20long&\29\20const can change the state due to initial scan
[asyncify] std::__2::num_get<char\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>>::get\5babi:v15006\5d\28std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::ios_base&\2c\20unsigned\20int&\2c\20unsigned\20long\20long&\29\20const can change the state due to initial scan
[asyncify] std::__2::num_get<char\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>>::get\5babi:v15006\5d\28std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::ios_base&\2c\20unsigned\20int&\2c\20float&\29\20const can change the state due to initial scan
[asyncify] std::__2::num_get<char\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>>::get\5babi:v15006\5d\28std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::ios_base&\2c\20unsigned\20int&\2c\20double&\29\20const can change the state due to initial scan
[asyncify] std::__2::num_get<char\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>>::get\5babi:v15006\5d\28std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::ios_base&\2c\20unsigned\20int&\2c\20long\20double&\29\20const can change the state due to initial scan
[asyncify] std::__2::num_get<char\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>>::get\5babi:v15006\5d\28std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::ios_base&\2c\20unsigned\20int&\2c\20void*&\29\20const can change the state due to initial scan
[asyncify] std::__2::basic_streambuf<char\2c\20std::__2::char_traits<char>>::sgetn\5babi:v15006\5d\28char*\2c\20long\29 can change the state due to initial scan
[asyncify] [asyncify] std::__2::basic_streambuf<char\2c\20std::__2::char_traits<char>>::sungetc\5babi:v15006\5d\28\29 can change the state due to initial scan
[asyncify] std::__2::basic_streambuf<char\2c\20std::__2::char_traits<char>>::pubseekpos\5babi:v15006\5d\28std::__2::fpos<__mbstate_t>\2c\20unsigned\20int\29 can change the state due to initial scan
[asyncify] std::__2::num_put<char\2c\20std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>>::put\5babi:v15006\5d\28std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::ios_base&\2c\20char\2c\20bool\29\20const[asyncify] [asyncify]  can change the state due to initial scan
[asyncify] std::__2::basic_streambuf<char\2c\20std::__2::char_traits<char>>::sputbackc\5babi:v15006\5d\28char\29[asyncify] std::__2::basic_streambuf<char\2c\20std::__2::char_traits<char>>::pubseekoff\5babi:v15006\5d\28long\20long\2c\20std::__2::ios_base::seekdir\2c\20unsigned\20int\29[asyncify]  can change the state due to initial scan
[asyncify] std::__2::num_put<char\2c\20std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>>::put\5babi:v15006\5d\28std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::ios_base&\2c\20char\2c\20double\29\20const can change the state due to initial scan
[asyncify] std::__2::num_put<char\2c\20std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>>::put\5babi:v15006\5d\28std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::ios_base&\2c\20char\2c\20long\20double\29\20const can change the state due to initial scan
[asyncify] [asyncify]  can change the state due to initial scan
[asyncify] std::__2::num_put<char\2c\20std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>>::put\5babi:v15006\5d\28std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::ios_base&\2c\20char\2c\20void\20const*\29\20const[asyncify] std::__2::basic_streambuf<wchar_t\2c\20std::__2::char_traits<wchar_t>>::uflow\28\29 can change the state due to initial scan
[asyncify] std::__2::basic_streambuf<char\2c\20std::__2::char_traits<char>>::sputn\5babi:v15006\5d\28char\20const*\2c\20long\29 can change the state due to initial scan
[asyncify] std::__2::ctype<wchar_t>::is\5babi:v15006\5d\28unsigned\20long\2c\20wchar_t\29\20const can change the state due to initial scan
[asyncify] std::__2::basic_streambuf<wchar_t\2c\20std::__2::char_traits<wchar_t>>::pubsync\5babi:v15006\5d\28\29[asyncify] std::__2::basic_streambuf<wchar_t\2c\20std::__2::char_traits<wchar_t>>::sbumpc\5babi:v15006\5d\28\29 can change the state due to initial scan
[asyncify] std::__2::basic_streambuf<wchar_t\2c\20std::__2::char_traits<wchar_t>>::xsputn\28wchar_t\20const*\2c\20long\29 can change the state due to initial scan
[asyncify] std::__2::num_get<wchar_t\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>::get\5babi:v15006\5d\28std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::ios_base&\2c\20unsigned\20int&\2c\20bool&\29\20const can change the state due to initial scan
[asyncify] std::__2::num_get<wchar_t\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>::get\5babi:v15006\5d\28std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::ios_base&\2c\20unsigned\20int&\2c\20long&\29\20const can change the state due to initial scan
[asyncify] std::__2::basic_streambuf<wchar_t\2c\20std::__2::char_traits<wchar_t>>::sgetc\5babi:v15006\5d\28\29 can change the state due to initial scan
[asyncify] std::__2::num_get<wchar_t\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>::get\5babi:v15006\5d\28std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::ios_base&\2c\20unsigned\20int&\2c\20unsigned\20short&\29\20const can change the state due to initial scan
[asyncify] [asyncify] std::__2::num_get<wchar_t\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>::get\5babi:v15006\5d\28std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::ios_base&\2c\20unsigned\20int&\2c\20unsigned\20int&\29\20const can change the state due to initial scan
[asyncify] std::__2::num_get<wchar_t\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>::get\5babi:v15006\5d\28std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::ios_base&\2c\20unsigned\20int&\2c\20unsigned\20long&\29\20const can change the state due to initial scan
[asyncify] [asyncify] std::__2::basic_streambuf<wchar_t\2c\20std::__2::char_traits<wchar_t>>::sputc\5babi:v15006\5d\28wchar_t\29std::__2::num_get<wchar_t\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>::get\5babi:v15006\5d\28std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::ios_base&\2c\20unsigned\20int&\2c\20void*&\29\20conststd::__2::num_get<wchar_t\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>::get\5babi:v15006\5d\28std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::ios_base&\2c\20unsigned\20int&\2c\20long\20long&\29\20const can change the state due to initial scan
[asyncify] std::__2::num_get<wchar_t\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>::get\5babi:v15006\5d\28std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::ios_base&\2c\20unsigned\20int&\2c\20float&\29\20const[asyncify] std::__2::num_get<wchar_t\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>::get\5babi:v15006\5d\28std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::ios_base&\2c\20unsigned\20int&\2c\20double&\29\20const can change the state due to initial scan
[asyncify] std::__2::num_get<wchar_t\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>::get\5babi:v15006\5d\28std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::ios_base&\2c\20unsigned\20int&\2c\20long\20double&\29\20const can change the state due to initial scan
[asyncify] std::__2::basic_streambuf<wchar_t\2c\20std::__2::char_traits<wchar_t>>::sgetn\5babi:v15006\5d\28wchar_t*\2c\20long\29[asyncify] std::__2::basic_streambuf<wchar_t\2c\20std::__2::char_traits<wchar_t>>::in_avail\5babi:v15006\5d\28\29 can change the state due to initial scan
[asyncify] std::__2::basic_streambuf<wchar_t\2c\20std::__2::char_traits<wchar_t>>::sputbackc\5babi:v15006\5d\28wchar_t\29 can change the state due to initial scan
[asyncify] std::__2::basic_streambuf<wchar_t\2c\20std::__2::char_traits<wchar_t>>::sungetc\5babi:v15006\5d\28\29 can change the state due to initial scan
[asyncify] std::__2::basic_streambuf<wchar_t\2c\20std::__2::char_traits<wchar_t>>::pubseekoff\5babi:v15006\5d\28long\20long\2c\20std::__2::ios_base::seekdir\2c\20unsigned\20int\29 can change the state due to initial scan
[asyncify] std::__2::basic_streambuf<wchar_t\2c\20std::__2::char_traits<wchar_t>>::pubseekpos\5babi:v15006\5d\28std::__2::fpos<__mbstate_t>\2c\20unsigned\20int\29 can change the state due to initial scan
[asyncify] std::__2::num_put<wchar_t\2c\20std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>::put\5babi:v15006\5d\28std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::ios_base&\2c\20wchar_t\2c\20bool\29\20const can change the state due to initial scan
[asyncify] std::__2::num_put<wchar_t\2c\20std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>::put\5babi:v15006\5d\28std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::ios_base&\2c\20wchar_t\2c\20long\29\20const can change the state due to initial scan
[asyncify] std::__2::num_put<wchar_t\2c\20std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>::put\5babi:v15006\5d\28std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::ios_base&\2c\20wchar_t\2c\20unsigned\20long\29\20const can change the state due to initial scan
[asyncify] std::__2::num_get<wchar_t\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>::get\5babi:v15006\5d\28std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::ios_base&\2c\20unsigned\20int&\2c\20unsigned\20long\20long&\29\20const[asyncify] std::__2::num_put<wchar_t\2c\20std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>::put\5babi:v15006\5d\28std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::ios_base&\2c\20wchar_t\2c\20unsigned\20long\20long\29\20const can change the state due to initial scan
[asyncify] std::__2::num_put<wchar_t\2c\20std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>::put\5babi:v15006\5d\28std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::ios_base&\2c\20wchar_t\2c\20double\29\20const can change the state due to initial scan
[asyncify] [asyncify] std::__2::num_put<wchar_t\2c\20std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>::put\5babi:v15006\5d\28std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::ios_base&\2c\20wchar_t\2c\20void\20const*\29\20const can change the state due to initial scan
[asyncify] std::__2::num_put<wchar_t\2c\20std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>::put\5babi:v15006\5d\28std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::ios_base&\2c\20wchar_t\2c\20long\20long\29\20const can change the state due to initial scan
[asyncify] std::__2::basic_streambuf<wchar_t\2c\20std::__2::char_traits<wchar_t>>::sputn\5babi:v15006\5d\28wchar_t\20const*\2c\20long\29 can change the state due to initial scan
[asyncify] std::__2::basic_streambuf<char\2c\20std::__2::char_traits<char>>::pubimbue\5babi:v15006\5d\28std::__2::locale\20const&\29 can change the state due to initial scan
[asyncify] std::__2::codecvt<char\2c\20char\2c\20__mbstate_t>::always_noconv\5babi:v15006\5d\28\29\20const can change the state due to initial scan
[asyncify] std::__2::basic_filebuf<char\2c\20std::__2::char_traits<char>>::close\28\29 can change the state due to initial scan
[asyncify] std::__2::unique_ptr<_IO_FILE\2c\20int\20\28*\29\28_IO_FILE*\29>::reset\5babi:v15006\5d\28_IO_FILE*\29 can change the state due to initial scan
[asyncify] std::__2::codecvt<char\2c\20char\2c\20__mbstate_t>::in\5babi:v15006\5d\28__mbstate_t&\2c\20char\20const*\2c\20char\20const*\2c\20char\20const*&\2c\20char*\2c\20char*\2c\20char*&\29\20const can change the state due to initial scan
[asyncify] std::__2::codecvt<char\2c\20char\2c\20__mbstate_t>::out\5babi:v15006\5d\28__mbstate_t&\2c\20char\20const*\2c\20char\20const*\2c\20char\20const*&\2c\20char*\2c\20char*\2c\20char*&\29\20const can change the state due to initial scan
[asyncify] std::__2::basic_filebuf<char\2c\20std::__2::char_traits<char>>::basic_filebuf\28\29 can change the state due to initial scan
[asyncify] std::__2::codecvt<char\2c\20char\2c\20__mbstate_t>::encoding\5babi:v15006\5d\28\29\20const can change the state due to initial scan
[asyncify] std::__2::codecvt<char\2c\20char\2c\20__mbstate_t>::unshift\5babi:v15006\5d\28__mbstate_t&\2c\20char*\2c\20char*\2c\20char*&\29\20const[asyncify] std::__2::codecvt<char\2c\20char\2c\20__mbstate_t>::length\5babi:v15006\5d\28__mbstate_t&\2c\20char\20const*\2c\20char\20const*\2c\20unsigned\20long\29\20const can change the state due to initial scan
[asyncify] std::__2::basic_filebuf<char\2c\20std::__2::char_traits<char>>::seekoff\28long\20long\2c\20std::__2::ios_base::seekdir\2c\20unsigned\20int\29[asyncify] [asyncify] std::__2::basic_filebuf<char\2c\20std::__2::char_traits<char>>::seekpos\28std::__2::fpos<__mbstate_t>\2c\20unsigned\20int\29 can change the state due to initial scan
[asyncify] std::__2::basic_stringbuf<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::seekpos\5babi:v15006\5d\28std::__2::fpos<__mbstate_t>\2c\20unsigned\20int\29 can change the state due to initial scan
[asyncify] std::__2::basic_filebuf<char\2c\20std::__2::char_traits<char>>::imbue\28std::__2::locale\20const&\29 can change the state due to initial scan
[asyncify] std::__2::ctype<char>::widen\5babi:v15006\5d\28char\29\20const can change the state due to initial scan
[asyncify] std::__2::ctype<wchar_t>::widen\5babi:v15006\5d\28char\29\20const can change the state due to initial scan
[asyncify] std::__2::ios_base::__call_callbacks\28std::__2::ios_base::event\29 can change the state due to initial scan
[asyncify] std::__2::unique_ptr<void\20\28*\29\28std::__2::ios_base::event\2c\20std::__2::ios_base&\2c\20int\29\2c\20void\20\28*\29\28void*\29>::reset\5babi:v15006\5d\28void\20\28**\29\28std::__2::ios_base::event\2c\20std::__2::ios_base&\2c\20int\29\29 can change the state due to initial scan
[asyncify] std::__2::unique_ptr<int\2c\20void\20\28*\29\28void*\29>::reset\5babi:v15006\5d\28int*\29 can change the state due to initial scan
[asyncify] std::__2::unique_ptr<long\2c\20void\20\28*\29\28void*\29>::reset\5babi:v15006\5d\28long*\29 can change the state due to initial scan
[asyncify] std::__2::unique_ptr<void*\2c\20void\20\28*\29\28void*\29>::reset\5babi:v15006\5d\28void**\29 can change the state due to initial scan
[asyncify] std::__2::__stdinbuf<char>::__stdinbuf\28_IO_FILE*\2c\20__mbstate_t*\29[asyncify] std::__2::codecvt<wchar_t\2c\20char\2c\20__mbstate_t>::always_noconv\5babi:v15006\5d\28\29\20const can change the state due to initial scan
[asyncify] std::__2::__stdoutbuf<char>::imbue\28std::__2::locale\20const&\29 can change the state due to initial scan
[asyncify] std::__2::__stdinbuf<wchar_t>::__stdinbuf\28_IO_FILE*\2c\20__mbstate_t*\29 can change the state due to initial scan
[asyncify] std::__2::__stdoutbuf<char>::xsputn\28char\20const*\2c\20long\29 can change the state due to initial scan
[asyncify] std::__2::codecvt<wchar_t\2c\20char\2c\20__mbstate_t>::encoding\5babi:v15006\5d\28\29\20const can change the state due to initial scan
[asyncify] std::__2::codecvt<wchar_t\2c\20char\2c\20__mbstate_t>::out\5babi:v15006\5d\28__mbstate_t&\2c\20wchar_t\20const*\2c\20wchar_t\20const*\2c\20wchar_t\20const*&\2c\20char*\2c\20char*\2c\20char*&\29\20const can change the state due to initial scan
[asyncify] std::__2::codecvt<wchar_t\2c\20char\2c\20__mbstate_t>::in\5babi:v15006\5d\28__mbstate_t&\2c\20char\20const*\2c\20char\20const*\2c\20char\20const*&\2c\20wchar_t*\2c\20wchar_t*\2c\20wchar_t*&\29\20const can change the state due to initial scan
[asyncify] std::__2::__stdoutbuf<wchar_t>::imbue\28std::__2::locale\20const&\29 can change the state due to initial scan
[asyncify] std::__2::codecvt<wchar_t\2c\20char\2c\20__mbstate_t>::unshift\5babi:v15006\5d\28__mbstate_t&\2c\20char*\2c\20char*\2c\20char*&\29\20const can change the state due to initial scan
[asyncify] std::__2::__stdoutbuf<wchar_t>::xsputn\28wchar_t\20const*\2c\20long\29 can change the state due to initial scan
[asyncify] std::__2::numpunct<char>::truename\5babi:v15006\5d\28\29\20const[asyncify] [asyncify]  can change the state due to initial scan
[asyncify] std::__2::ctype<char>::toupper\5babi:v15006\5d\28char\29\20const can change the state due to initial scan
[asyncify] std::__2::unique_ptr<unsigned\20char\2c\20void\20\28*\29\28void*\29>::reset\5babi:v15006\5d\28unsigned\20char*\29 can change the state due to initial scan
[asyncify] std::__2::ctype<char>::widen\5babi:v15006\5d\28char\20const*\2c\20char\20const*\2c\20char*\29\20const can change the state due to initial scan
[asyncify] std::__2::numpunct<wchar_t>::truename\5babi:v15006\5d\28\29\20const can change the state due to initial scan
[asyncify] std::__2::numpunct<wchar_t>::falsename\5babi:v15006\5d\28\29\20const can change the state due to initial scan
[asyncify] std::__2::num_get<wchar_t\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>::do_get\28std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::ios_base&\2c\20unsigned\20int&\2c\20bool&\29\20const can change the state due to initial scan
[asyncify] std::__2::ctype<wchar_t>::toupper\5babi:v15006\5d\28wchar_t\29\20const can change the state due to initial scan
[asyncify] std::__2::ctype<wchar_t>::widen\5babi:v15006\5d\28char\20const*\2c\20char\20const*\2c\20wchar_t*\29\20const can change the state due to initial scan
[asyncify] std::__2::numpunct<char>::decimal_point\5babi:v15006\5d\28\29\20const can change the state due to initial scan
[asyncify] std::__2::numpunct<char>::thousands_sep\5babi:v15006\5d\28\29\20const can change the state due to initial scan
[asyncify] std::__2::numpunct<char>::grouping\5babi:v15006\5d\28\29\20const can change the state due to initial scan
[asyncify] std::__2::numpunct<wchar_t>::decimal_point\5babi:v15006\5d\28\29\20const can change the state due to initial scan
[asyncify] std::__2::numpunct<wchar_t>::thousands_sep\5babi:v15006\5d\28\29\20const can change the state due to initial scan
[asyncify] std::__2::numpunct<wchar_t>::grouping\5babi:v15006\5d\28\29\20const can change the state due to initial scan
[asyncify] std::__2::num_put<char\2c\20std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>>::do_put\28std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::ios_base&\2c\20char\2c\20bool\29\20const can change the state due to initial scan
[asyncify] std::__2::unique_ptr<char\2c\20void\20\28*\29\28void*\29>::reset\5babi:v15006\5d\28char*\29 can change the state due to initial scan
[asyncify] std::__2::num_put<wchar_t\2c\20std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>::do_put\28std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::ios_base&\2c\20wchar_t\2c\20bool\29\20const can change the state due to initial scan
[asyncify] std::__2::unique_ptr<wchar_t\2c\20void\20\28*\29\28void*\29>::reset\5babi:v15006\5d\28wchar_t*\29 can change the state due to initial scan
[asyncify] std::__2::ctype<char>::narrow\5babi:v15006\5d\28char\2c\20char\29\20const can change the state due to initial scan
[asyncify] std::__2::time_get<char\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>>::do_get_date\28std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::ios_base&\2c\20unsigned\20int&\2c\20tm*\29\20const[asyncify] std::__2::time_get<char\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>>::__get_weekdayname\28int&\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>&\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20unsigned\20int&\2c\20std::__2::ctype<char>\20const&\29\20const can change the state due to initial scan
[asyncify] std::__2::time_get<wchar_t\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>::do_get_date\28std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::ios_base&\2c\20unsigned\20int&\2c\20tm*\29\20const[asyncify]  can change the state due to initial scan
[asyncify] [asyncify] std::__2::time_get<char\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>>::__get_am_pm\28int&\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>&\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20unsigned\20int&\2c\20std::__2::ctype<char>\20const&\29\20const can change the state due to initial scan
[asyncify] std::__2::time_get<wchar_t\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>::__get_monthname\28int&\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>&\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20unsigned\20int&\2c\20std::__2::ctype<wchar_t>\20const&\29\20const can change the state due to initial scan
[asyncify]  can change the state due to initial scan
[asyncify] std::__2::time_get<wchar_t\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>::__get_weekdayname\28int&\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>&\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20unsigned\20int&\2c\20std::__2::ctype<wchar_t>\20const&\29\20const can change the state due to initial scan
[asyncify] std::__2::time_get<wchar_t\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>::do_get\28std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::ios_base&\2c\20unsigned\20int&\2c\20tm*\2c\20char\2c\20char\29\20const can change the state due to initial scan
[asyncify] std::__2::time_get<wchar_t\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>::__get_am_pm\28int&\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>&\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20unsigned\20int&\2c\20std::__2::ctype<wchar_t>\20const&\29\20const can change the state due to initial scan
[asyncify] std::__2::time_put<char\2c\20std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>>::put\28std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::ios_base&\2c\20char\2c\20tm\20const*\2c\20char\20const*\2c\20char\20const*\29\20const can change the state due to initial scan
[asyncify] std::__2::time_get<char\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>>::get\28std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::ios_base&\2c\20unsigned\20int&\2c\20tm*\2c\20char\20const*\2c\20char\20const*\29\20const can change the state due to initial scan
[asyncify] std::__2::time_put<wchar_t\2c\20std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>::put\28std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::ios_base&\2c\20wchar_t\2c\20tm\20const*\2c\20wchar_t\20const*\2c\20wchar_t\20const*\29\20const can change the state due to initial scan
[asyncify] [asyncify] std::__2::moneypunct<char\2c\20true>::positive_sign\5babi:v15006\5d\28\29\20const can change the state due to initial scan
[asyncify] std::__2::moneypunct<char\2c\20true>::decimal_point\5babi:v15006\5d\28\29\20const can change the state due to initial scan
[asyncify] std::__2::moneypunct<char\2c\20true>::negative_sign\5babi:v15006\5d\28\29\20const can change the state due to initial scan
[asyncify] std::__2::moneypunct<char\2c\20true>::grouping\5babi:v15006\5d\28\29\20const can change the state due to initial scan
[asyncify] std::__2::moneypunct<char\2c\20true>::frac_digits\5babi:v15006\5d\28\29\20const can change the state due to initial scan
[asyncify] std::__2::moneypunct<char\2c\20false>::neg_format\5babi:v15006\5d\28\29\20const can change the state due to initial scan
[asyncify] std::__2::moneypunct<char\2c\20false>::negative_sign\5babi:v15006\5d\28\29\20const can change the state due to initial scan
[asyncify] std::__2::moneypunct<char\2c\20false>::positive_sign\5babi:v15006\5d\28\29\20const can change the state due to initial scan
[asyncify] std::__2::moneypunct<char\2c\20false>::thousands_sep\5babi:v15006\5d\28\29\20const can change the state due to initial scan
[asyncify] std::__2::moneypunct<char\2c\20false>::grouping\5babi:v15006\5d\28\29\20const can change the state due to initial scan
[asyncify] [asyncify] std::__2::moneypunct<char\2c\20true>::thousands_sep\5babi:v15006\5d\28\29\20const can change the state due to initial scan
[asyncify] std::__2::unique_ptr<unsigned\20int\2c\20void\20\28*\29\28void*\29>::reset\5babi:v15006\5d\28unsigned\20int*\29 can change the state due to initial scan
[asyncify] std::__2::moneypunct<char\2c\20true>::curr_symbol\5babi:v15006\5d\28\29\20const can change the state due to initial scan
[asyncify] std::__2::moneypunct<char\2c\20false>::frac_digits\5babi:v15006\5d\28\29\20const can change the state due to initial scan
[asyncify] std::__2::moneypunct<wchar_t\2c\20true>::neg_format\5babi:v15006\5d\28\29\20const can change the state due to initial scan
[asyncify] std::__2::moneypunct<wchar_t\2c\20true>::negative_sign\5babi:v15006\5d\28\29\20const can change the state due to initial scan
[asyncify] std::__2::moneypunct<wchar_t\2c\20true>::positive_sign\5babi:v15006\5d\28\29\20const can change the state due to initial scan
[asyncify] std::__2::moneypunct<wchar_t\2c\20true>::decimal_point\5babi:v15006\5d\28\29\20const can change the state due to initial scan
[asyncify] std::__2::moneypunct<wchar_t\2c\20true>::thousands_sep\5babi:v15006\5d\28\29\20const can change the state due to initial scan
[asyncify] std::__2::moneypunct<wchar_t\2c\20true>::grouping\5babi:v15006\5d\28\29\20const can change the state due to initial scan
[asyncify] std::__2::moneypunct<wchar_t\2c\20true>::curr_symbol\5babi:v15006\5d\28\29\20const can change the state due to initial scan
[asyncify] std::__2::moneypunct<wchar_t\2c\20true>::frac_digits\5babi:v15006\5d\28\29\20const can change the state due to initial scan
[asyncify] std::__2::moneypunct<wchar_t\2c\20false>::neg_format\5babi:v15006\5d\28\29\20const can change the state due to initial scan
[asyncify] std::__2::moneypunct<wchar_t\2c\20false>::negative_sign\5babi:v15006\5d\28\29\20const can change the state due to initial scan
[asyncify] std::__2::moneypunct<wchar_t\2c\20false>::thousands_sep\5babi:v15006\5d\28\29\20const can change the state due to initial scan
[asyncify] [asyncify] std::__2::moneypunct<wchar_t\2c\20false>::curr_symbol\5babi:v15006\5d\28\29\20const[asyncify] std::__2::moneypunct<char\2c\20false>::decimal_point\5babi:v15006\5d\28\29\20const can change the state due to initial scan
[asyncify] std::__2::moneypunct<wchar_t\2c\20false>::decimal_point\5babi:v15006\5d\28\29\20const can change the state due to initial scan
[asyncify] std::__2::moneypunct<wchar_t\2c\20false>::positive_sign\5babi:v15006\5d\28\29\20const can change the state due to initial scan
[asyncify] std::__2::moneypunct<char\2c\20true>::pos_format\5babi:v15006\5d\28\29\20const can change the state due to initial scan
[asyncify] std::__2::moneypunct<char\2c\20false>::pos_format\5babi:v15006\5d\28\29\20const can change the state due to initial scan
[asyncify] std::__2::moneypunct<wchar_t\2c\20false>::pos_format\5babi:v15006\5d\28\29\20const can change the state due to initial scan
[asyncify] std::__2::moneypunct<wchar_t\2c\20true>::pos_format\5babi:v15006\5d\28\29\20const can change the state due to initial scan
[asyncify] std::__2::locale::facet::__on_zero_shared\28\29 can change the state due to initial scan
[asyncify] std::__2::\28anonymous\20namespace\29::__fake_bind::operator\28\29\28\29\20const can change the state due to initial scan
[asyncify] std::__2::__shared_weak_count::__release_weak\28\29 can change the state due to initial scan
[asyncify] std::__2::__call_once\28unsigned\20long\20volatile&\2c\20void*\2c\20void\20\28*\29\28void*\29\29 can change the state due to initial scan
[asyncify] operator\20new\28unsigned\20long\29 can change the state due to initial scan
[asyncify] operator\20new\28unsigned\20long\2c\20std::align_val_t\29 can change the state due to initial scan
[asyncify] std::__2::moneypunct<wchar_t\2c\20false>::grouping\5babi:v15006\5d\28\29\20const can change the state due to initial scan
[asyncify] std::__2::operator==\5babi:v15006\5d\28std::__2::error_code\20const&\2c\20std::__2::error_condition\20const&\29 can change the state due to initial scan
[asyncify] char\20const*\20std::__2::__find_first_of_ce<char\20const*\2c\20char\20const*\2c\20bool\20\28&\29\28char\2c\20char\29\20noexcept>\28char\20const*\2c\20char\20const*\2c\20char\20const*\2c\20char\20const*\2c\20bool\20\28&\29\28char\2c\20char\29\20noexcept\29 can change the state due to initial scan
[asyncify] wchar_t\20const*\20std::__2::__find_first_of_ce<wchar_t\20const*\2c\20wchar_t\20const*\2c\20bool\20\28&\29\28wchar_t\2c\20wchar_t\29\20noexcept>\28wchar_t\20const*\2c\20wchar_t\20const*\2c\20wchar_t\20const*\2c\20wchar_t\20const*\2c\20bool\20\28&\29\28wchar_t\2c\20wchar_t\29\20noexcept\29 can change the state due to initial scan
[asyncify] decltype\28std::declval<bool\20\28&\29\28char\2c\20char\29\20noexcept>\28\29\28std::declval<char\20const&>\28\29\2c\20std::declval<char\20const&>\28\29\29\29\20std::__2::__invoke\5babi:v15006\5d<bool\20\28&\29\28char\2c\20char\29\20noexcept\2c\20char\20const&\2c\20char\20const&>\28bool\20\28&\29\28char\2c\20char\29\20noexcept\2c\20char\20const&\2c\20char\20const&\29 can change the state due to initial scan
[asyncify] decltype\28std::declval<bool\20\28&\29\28wchar_t\2c\20wchar_t\29\20noexcept>\28\29\28std::declval<wchar_t\20const&>\28\29\2c\20std::declval<wchar_t\20const&>\28\29\29\29\20std::__2::__invoke\5babi:v15006\5d<bool\20\28&\29\28wchar_t\2c\20wchar_t\29\20noexcept\2c\20wchar_t\20const&\2c\20wchar_t\20const&>\28bool\20\28&\29\28wchar_t\2c\20wchar_t\29\20noexcept\2c\20wchar_t\20const&\2c\20wchar_t\20const&\29 can change the state due to initial scan
[asyncify] std::__2::strstreambuf::~strstreambuf\28\29 can change the state due to initial scan
[asyncify] std::__2::error_category::equivalent\28int\2c\20std::__2::error_condition\20const&\29\20const can change the state due to initial scan
[asyncify] std::__2::strstreambuf::overflow\28int\29 can change the state due to initial scan
[asyncify] std::__2::error_condition::message\28\29\20const can change the state due to initial scan
[asyncify] std::__2::error_code::message\28\29\20const can change the state due to initial scan
[asyncify] \28anonymous\20namespace\29::itanium_demangle::Node::print\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\29\20const can change the state due to initial scan
[asyncify] \28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::parseExpr\28\29 can change the state due to initial scan
[asyncify] \28anonymous\20namespace\29::itanium_demangle::Node::hasRHSComponent\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\29\20const can change the state due to initial scan
[asyncify] \28anonymous\20namespace\29::itanium_demangle::Node::hasFunction\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\29\20const can change the state due to initial scan
[asyncify] \28anonymous\20namespace\29::itanium_demangle::Node::hasArray\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\29\20const[asyncify] [asyncify] \28anonymous\20namespace\29::itanium_demangle::ForwardTemplateReference::printLeft\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\29\20const can change the state due to initial scan
[asyncify] \28anonymous\20namespace\29::itanium_demangle::ForwardTemplateReference::getSyntaxNode\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\29\20const can change the state due to initial scan
[asyncify] \28anonymous\20namespace\29::itanium_demangle::CastExpr::printLeft\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\29\20const can change the state due to initial scan
[asyncify] \28anonymous\20namespace\29::itanium_demangle::NonTypeTemplateParamDecl::printLeft\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\29\20const can change the state due to initial scan
[asyncify] \28anonymous\20namespace\29::itanium_demangle::NonTypeTemplateParamDecl::printRight\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\29\20const can change the state due to initial scan
[asyncify] \28anonymous\20namespace\29::itanium_demangle::TemplateParamPackDecl::printRight\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\29\20const[asyncify] \28anonymous\20namespace\29::itanium_demangle::TemplateParamPackDecl::printLeft\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\29\20const can change the state due to initial scan
[asyncify] \28anonymous\20namespace\29::itanium_demangle::QualifiedName::getBaseName\28\29\20const can change the state due to initial scan
[asyncify] \28anonymous\20namespace\29::itanium_demangle::DtorName::printLeft\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\29\20const can change the state due to initial scan
[asyncify] \28anonymous\20namespace\29::itanium_demangle::GlobalQualifiedName::getBaseName\28\29\20const can change the state due to initial scan
[asyncify] \28anonymous\20namespace\29::itanium_demangle::AbiTagAttr::printLeft\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\29\20const can change the state due to initial scan
[asyncify] \28anonymous\20namespace\29::itanium_demangle::ExpandedSpecialSubstitution::printLeft\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\29\20const can change the state due to initial scan
[asyncify] \28anonymous\20namespace\29::itanium_demangle::ModuleEntity::getBaseName\28\29\20const can change the state due to initial scan
[asyncify] \28anonymous\20namespace\29::itanium_demangle::FunctionEncoding::printLeft\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\29\20const can change the state due to initial scan
[asyncify] \28anonymous\20namespace\29::itanium_demangle::FunctionEncoding::printRight\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\29\20const can change the state due to initial scan
[asyncify] \28anonymous\20namespace\29::itanium_demangle::CtorDtorName::printLeft\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\29\20const can change the state due to initial scan
[asyncify] \28anonymous\20namespace\29::itanium_demangle::NestedName::getBaseName\28\29\20const can change the state due to initial scan
[asyncify] \28anonymous\20namespace\29::itanium_demangle::ParameterPack::printLeft\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\29\20const can change the state due to initial scan
[asyncify] \28anonymous\20namespace\29::itanium_demangle::ParameterPack::printRight\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\29\20const can change the state due to initial scan
[asyncify] \28anonymous\20namespace\29::itanium_demangle::ParameterPack::getSyntaxNode\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\29\20const can change the state due to initial scan
[asyncify] \28anonymous\20namespace\29::itanium_demangle::FunctionType::printLeft\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\29\20const can change the state due to initial scan
[asyncify] \28anonymous\20namespace\29::itanium_demangle::QualType::printLeft\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\29\20const can change the state due to initial scan
[asyncify] \28anonymous\20namespace\29::itanium_demangle::QualType::printRight\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\29\20const can change the state due to initial scan
[asyncify] \28anonymous\20namespace\29::itanium_demangle::FunctionType::printRight\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\29\20const can change the state due to initial scan
[asyncify] \28anonymous\20namespace\29::itanium_demangle::ArrayType::printLeft\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\29\20const can change the state due to initial scan
[asyncify] \28anonymous\20namespace\29::itanium_demangle::ArrayType::printRight\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\29\20const can change the state due to initial scan
[asyncify] \28anonymous\20namespace\29::itanium_demangle::PointerToMemberType::printRight\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\29\20const can change the state due to initial scan
[asyncify] \28anonymous\20namespace\29::itanium_demangle::PointerToMemberType::printLeft\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\29\20const[asyncify] \28anonymous\20namespace\29::itanium_demangle::PointerType::printLeft\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\29\20const can change the state due to initial scan
[asyncify] \28anonymous\20namespace\29::itanium_demangle::ReferenceType::printLeft\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\29\20const can change the state due to initial scan
[asyncify] \28anonymous\20namespace\29::itanium_demangle::NameWithTemplateArgs::getBaseName\28\29\20const can change the state due to initial scan
[asyncify] \28anonymous\20namespace\29::itanium_demangle::ReferenceType::collapse\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\29\20const can change the state due to initial scan
[asyncify] \28anonymous\20namespace\29::itanium_demangle::ReferenceType::printRight\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\29\20const can change the state due to initial scan
[asyncify] \28anonymous\20namespace\29::itanium_demangle::PointerType::printRight\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\29\20const can change the state due to initial scan
[asyncify] \28anonymous\20namespace\29::itanium_demangle::PostfixQualifiedType::printLeft\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\29\20const can change the state due to initial scan
[asyncify] std::__unexpected\28void\20\28*\29\28\29\29 can change the state due to initial scan
[asyncify] std::__terminate\28void\20\28*\29\28\29\29 can change the state due to initial scan
[asyncify] __cxxabiv1::\28anonymous\20namespace\29::run_dtors\28void*\29 can change the state due to initial scan
[asyncify] __cxxabiv1::__class_type_info::can_catch\28__cxxabiv1::__shim_type_info\20const*\2c\20void*&\29\20const[asyncify]  can change the state due to initial scan
[asyncify] __cxxabiv1::__base_class_type_info::has_unambiguous_public_base\28__cxxabiv1::__dynamic_cast_info*\2c\20void*\2c\20int\29\20const can change the state due to initial scan
[asyncify] __cxxabiv1::__si_class_type_info::has_unambiguous_public_base\28__cxxabiv1::__dynamic_cast_info*\2c\20void*\2c\20int\29\20const can change the state due to initial scan
[asyncify] __cxxabiv1::__base_class_type_info::search_above_dst\28__cxxabiv1::__dynamic_cast_info*\2c\20void\20const*\2c\20void\20const*\2c\20int\2c\20bool\29\20const can change the state due to initial scan
[asyncify] __cxxabiv1::__base_class_type_info::search_below_dst\28__cxxabiv1::__dynamic_cast_info*\2c\20void\20const*\2c\20int\2c\20bool\29\20const can change the state due to initial scan
[asyncify] __cxxabiv1::__si_class_type_info::search_above_dst\28__cxxabiv1::__dynamic_cast_info*\2c\20void\20const*\2c\20void\20const*\2c\20int\2c\20bool\29\20const can change the state due to initial scan
[asyncify] __cxxabiv1::__si_class_type_info::search_below_dst\28__cxxabiv1::__dynamic_cast_info*\2c\20void\20const*\2c\20int\2c\20bool\29\20const can change the state due to initial scan
[asyncify] __cxa_can_catch can change the state due to initial scan
[asyncify] __cxxabiv1::__pointer_type_info::can_catch\28__cxxabiv1::__shim_type_info\20const*\2c\20void*&\29\20const can change the state due to initial scan
[asyncify] dynCall_ii can change the state due to initial scan
[asyncify] dynCall_vi can change the state due to initial scan
[asyncify] dynCall_vii can change the state due to initial scan
[asyncify] dynCall_viii can change the state due to initial scan
[asyncify] dynCall_viiii can change the state due to initial scan
[asyncify] dynCall_viiiiiiiii can change the state due to initial scan
[asyncify] dynCall_iiii[asyncify] [asyncify] dynCall_v can change the state due to initial scan
[asyncify] dynCall_ji[asyncify] dynCall_iiiii can change the state due to initial scan
[asyncify] dynCall_viiiiiii can change the state due to initial scan
[asyncify] dynCall_iiji can change the state due to initial scan
[asyncify] dynCall_iiiiiiii can change the state due to initial scan
[asyncify] dynCall_viif can change the state due to initial scan
[asyncify] dynCall_iiiiii can change the state due to initial scan
[asyncify] dynCall_viffff can change the state due to initial scan
[asyncify] dynCall_iiiiiii can change the state due to initial scan
[asyncify] dynCall_viiiiiiii can change the state due to initial scan
[asyncify] dynCall_viiiiiiiiiiii can change the state due to initial scan
[asyncify] dynCall_viiiiiiiiii can change the state due to initial scan
[asyncify] dynCall_fiii can change the state due to initial scan
[asyncify] dynCall_viiiiiiiiiii can change the state due to initial scan
[asyncify] dynCall_di can change the state due to initial scan
[asyncify] dynCall_fif can change the state due to initial scan
[asyncify] [asyncify] dynCall_iiiiiiiiii can change the state due to initial scan
[asyncify] dynCall_i can change the state due to initial scan
[asyncify] dynCall_id can change the state due to initial scan
[asyncify] dynCall_iiiiiiiiiiiiiiff can change the state due to initial scan
[asyncify] [asyncify] dynCall_iiiiiidiiff can change the state due to initial scan
[asyncify] [asyncify] [asyncify] dynCall_iiiiiiiiidynCall_vif can change the state due to initial scan
[asyncify] dynCall_viijii can change the state due to initial scan
[asyncify] dynCall_iiiiij can change the state due to initial scan
[asyncify] dynCall_iiiiiddynCall_fi[asyncify] dynCall_iiiiijj can change the state due to initial scan
[asyncify] dynCall_iiiiiijj can change the state due to initial scan
[asyncify] dynCall_iii can change the state due to initial scan
[asyncify] dynCall_iidiiii can change the state due to initial scan
[asyncify] dynCall_jiji can change the state due to initial scan
[asyncify] luaD_rawrunprotected\28lua_State*\2c\20void\20\28*\29\28lua_State*\2c\20void*\29\2c\20void*\29 can change the state due to invoke_vii
[asyncify] png_free_jmpbuf can change the state due to invoke_vii
[asyncify] Emscripten_UpdateWindowFramebuffer can change the state due to emscripten_sleep
[asyncify] Emscripten_GLES_SwapWindow can change the state due to emscripten_sleep
[asyncify] SDL_Delay can change the state due to emscripten_sleep
[asyncify] png_create_png_struct can change the state due to invoke_viiii
[asyncify] tt_face_build_cmaps can change the state due to invoke_viiii
[asyncify] png_safe_execute can change the state due to invoke_ii
[asyncify] gray_convert_glyph_inner can change the state due to invoke_vi
[asyncify] dlopen can change the state due to _dlopen_js
[asyncify] fsync can change the state due to __wasi_fd_sync
[asyncify] Adl::DiskImage::DataBlock::createReadStream\28\29\20const can change the state due to Adl::DiskImage::createReadStream\28unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int\29\20const
[asyncify] Adl::Files_AppleDOS::open\28Common::String\20const&\29 can change the state due to Adl::DiskImage::open\28Common::String\20const&\29
[asyncify] Adl::AdlMetaEngineDetection::addFileProps\28Common::HashMap<Common::String\2c\20Common::FSNode\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>\20const&\2c\20Common::String\2c\20Common::HashMap<Common::String\2c\20FileProperties\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>&\29\20const can change the state due to Adl::computeMD5\28Common::FSNode\20const&\2c\20Common::String&\2c\20unsigned\20int\29
[asyncify] Adl::Files_AppleDOS::~Files_AppleDOS\28\29.1 can change the state due to Adl::Files_AppleDOS::~Files_AppleDOS\28\29
[asyncify] POSIXSaveFileManager::~POSIXSaveFileManager\28\29 can change the state due to Common::HashMap<Common::String\2c\20Common::FSNode\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>::~HashMap\28\29
[asyncify] DefaultSaveFileManager::~DefaultSaveFileManager\28\29 can change the state due to Common::HashMap<Common::String\2c\20Common::FSNode\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>::~HashMap\28\29
[asyncify] DefaultSaveFileManager::~DefaultSaveFileManager\28\29.1 can change the state due to Common::HashMap<Common::String\2c\20Common::FSNode\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>::~HashMap\28\29
[asyncify] CGE::ResourceManager::exist\28char\20const*\29 can change the state due to CGE::ResourceManager::find\28char\20const*\29
[asyncify] CGE2::ResourceManager::exist\28char\20const*\29 can change the state due to CGE2::ResourceManager::find\28char\20const*\29
[asyncify] GlkMetaEngineDetection::detectGames\28Common::FSList\20const&\2c\20unsigned\20int\2c\20bool\29 can change the state due to Glk::Adrift::AdriftMetaEngine::detectGames\28Common::FSList\20const&\2c\20Common::Array<DetectedGame>&\29
[asyncify] Glk::Blorb::Blorb\28Common::String\20const&\2c\20Glk::InterpreterType\29 can change the state due to Glk::Blorb::load\28\29
[asyncify] Glk::Blorb::Blorb\28Common::FSNode\20const&\2c\20Glk::InterpreterType\29 can change the state due to Glk::Blorb::load\28\29
[asyncify] Glk::Blorb::isBlorb\28Common::String\20const&\2c\20unsigned\20int\29 can change the state due to Glk::Blorb::isBlorb\28Common::SeekableReadStream&\2c\20unsigned\20int\29
[asyncify] Glk::AdvSys::Game::readString\28int\29 can change the state due to Glk::AdvSys::Game::readMsgBlock\28\29
[asyncify] Glk::AdvSys::Game::readMsgChar\28\29 can change the state due to Glk::AdvSys::Game::readMsgBlock\28\29
[asyncify] GobMetaEngineDetection::fallbackDetect\28Common::HashMap<Common::String\2c\20Common::FSNode\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>\20const&\2c\20Common::FSList\20const&\2c\20ADDetectedGameExtraInfo**\29\20const can change the state due to GobMetaEngineDetection::detectOnceUponATime\28Common::FSList\20const&\29
[asyncify] Gob::DataIO::unpack\28Common::SeekableReadStream&\2c\20unsigned\20char\29 can change the state due to Gob::DataIO::unpack\28Common::SeekableReadStream&\2c\20int&\2c\20unsigned\20char\2c\20bool\29
[asyncify] Gob::DataIO::getFile\28Gob::DataIO::File&\2c\20int&\29 can change the state due to Gob::DataIO::unpack\28unsigned\20char\20const*\2c\20unsigned\20int\2c\20int&\2c\20unsigned\20char\29
[asyncify] Gob::DataIO::openArchive\28Common::String\2c\20bool\29 can change the state due to Gob::DataIO::openArchive\28Common::String\20const&\29
[asyncify] Gob::DataIO::getFile\28Common::String\20const&\29 can change the state due to Gob::DataIO::getFile\28Gob::DataIO::File&\29
[asyncify] Scumm::ScummDiskImage::open\28Common::Path\20const&\29 can change the state due to Scumm::ScummDiskImage::extractIndex\28Common::WriteStream*\29
[asyncify] Scumm::ScummDiskImage::openSubFile\28Common::String\20const&\29 can change the state due to Scumm::ScummDiskImage::generateIndex\28\29
[asyncify] legalstub$Scumm::ScummDiskImage::pos\28\29\20const can change the state due to Scumm::ScummDiskImage::pos\28\29\20const
[asyncify] legalstub$Scumm::ScummDiskImage::size\28\29\20const can change the state due to Scumm::ScummDiskImage::size\28\29\20const
[asyncify] legalstub$Scumm::ScummDiskImage::seek\28long\20long\2c\20int\29 can change the state due to Scumm::ScummDiskImage::seek\28long\20long\2c\20int\29
[asyncify] Scumm::ScummNESFile::openSubFile\28Common::String\20const&\29 can change the state due to Scumm::ScummNESFile::generateResource\28int\29
[asyncify] legalstub$Scumm::ScummNESFile::pos\28\29\20const can change the state due to Scumm::ScummNESFile::pos\28\29\20const
[asyncify] legalstub$Scumm::ScummNESFile::size\28\29\20const can change the state due to Scumm::ScummNESFile::size\28\29\20const
[asyncify] legalstub$Scumm::ScummNESFile::seek\28long\20long\2c\20int\29 can change the state due to Scumm::ScummNESFile::seek\28long\20long\2c\20int\29
[asyncify] OSystem_POSIX::~OSystem_POSIX\28\29 can change the state due to OSystem_SDL::~OSystem_SDL\28\29
[asyncify] OSystem_POSIX::~OSystem_POSIX\28\29.1 can change the state due to OSystem_SDL::~OSystem_SDL\28\29
[asyncify] non-virtual\20thunk\20to\20OSystem_POSIX::~OSystem_POSIX\28\29 can change the state due to OSystem_SDL::~OSystem_SDL\28\29
[asyncify] non-virtual\20thunk\20to\20OSystem_POSIX::~OSystem_POSIX\28\29.1 can change the state due to OSystem_SDL::~OSystem_SDL\28\29
[asyncify] virtual\20thunk\20to\20OSystem_POSIX::~OSystem_POSIX\28\29 can change the state due to OSystem_SDL::~OSystem_SDL\28\29
[asyncify] virtual\20thunk\20to\20OSystem_POSIX::~OSystem_POSIX\28\29.1 can change the state due to OSystem_SDL::~OSystem_SDL\28\29
[asyncify] OSystem_Emscripten::~OSystem_Emscripten\28\29 can change the state due to OSystem_SDL::~OSystem_SDL\28\29
[asyncify] OSystem_Emscripten::~OSystem_Emscripten\28\29.1 can change the state due to OSystem_SDL::~OSystem_SDL\28\29
[asyncify] non-virtual\20thunk\20to\20OSystem_Emscripten::~OSystem_Emscripten\28\29 can change the state due to OSystem_SDL::~OSystem_SDL\28\29
[asyncify] non-virtual\20thunk\20to\20OSystem_Emscripten::~OSystem_Emscripten\28\29.1 can change the state due to OSystem_SDL::~OSystem_SDL\28\29
[asyncify] virtual\20thunk\20to\20OSystem_Emscripten::~OSystem_Emscripten\28\29 can change the state due to OSystem_SDL::~OSystem_SDL\28\29
[asyncify] virtual\20thunk\20to\20OSystem_Emscripten::~OSystem_Emscripten\28\29.1 can change the state due to OSystem_SDL::~OSystem_SDL\28\29
[asyncify] OSystem_SDL::~OSystem_SDL\28\29.1 can change the state due to OSystem_SDL::~OSystem_SDL\28\29
[asyncify] non-virtual\20thunk\20to\20OSystem_SDL::~OSystem_SDL\28\29 can change the state due to OSystem_SDL::~OSystem_SDL\28\29
[asyncify] virtual\20thunk\20to\20OSystem_SDL::~OSystem_SDL\28\29 can change the state due to OSystem_SDL::~OSystem_SDL\28\29
[asyncify] OSystem_SDL::~OSystem_SDL\28\29.2 can change the state due to OSystem_SDL::~OSystem_SDL\28\29
[asyncify] non-virtual\20thunk\20to\20OSystem_SDL::~OSystem_SDL\28\29.1 can change the state due to OSystem_SDL::~OSystem_SDL\28\29
[asyncify] virtual\20thunk\20to\20OSystem_SDL::~OSystem_SDL\28\29.1 can change the state due to OSystem_SDL::~OSystem_SDL\28\29
[asyncify] OSystem_POSIX::init\28\29 can change the state due to OSystem_SDL::init\28\29
[asyncify] virtual\20thunk\20to\20OSystem_POSIX::init\28\29 can change the state due to OSystem_SDL::init\28\29
[asyncify] OSystem_POSIX::initBackend\28\29 can change the state due to OSystem_SDL::initBackend\28\29
[asyncify] virtual\20thunk\20to\20OSystem_POSIX::initBackend\28\29 can change the state due to OSystem_SDL::initBackend\28\29
[asyncify] virtual\20thunk\20to\20OSystem_SDL::initBackend\28\29 can change the state due to OSystem_SDL::initBackend\28\29
[asyncify] virtual\20thunk\20to\20OSystem_SDL::addSysArchivesToSearchSet\28Common::SearchSet&\2c\20int\29 can change the state due to OSystem_SDL::addSysArchivesToSearchSet\28Common::SearchSet&\2c\20int\29
[asyncify] non-virtual\20thunk\20to\20OSystem_SDL::setGraphicsMode\28int\2c\20unsigned\20int\29 can change the state due to OSystem_SDL::setGraphicsMode\28int\2c\20unsigned\20int\29
[asyncify] virtual\20thunk\20to\20OSystem_SDL::setGraphicsMode\28int\2c\20unsigned\20int\29 can change the state due to OSystem_SDL::setGraphicsMode\28int\2c\20unsigned\20int\29
[asyncify] SdlGraphicsManager::createOrUpdateWindow\28int\2c\20int\2c\20unsigned\20int\29 can change the state due to SdlWindow::createOrUpdateWindow\28int\2c\20int\2c\20unsigned\20int\29
[asyncify] OSystem_POSIX::getScreenshotsPath\28\29 can change the state due to OSystem_POSIX::getXdgUserDir\28char\20const*\29
[asyncify] virtual\20thunk\20to\20OSystem_POSIX::addSysArchivesToSearchSet\28Common::SearchSet&\2c\20int\29 can change the state due to OSystem_POSIX::addSysArchivesToSearchSet\28Common::SearchSet&\2c\20int\29
[asyncify] Base::parseCommandLine\28Common::HashMap<Common::String\2c\20Common::String\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>&\2c\20int\2c\20char\20const*\20const*\29 can change the state due to Common::FSNode::~FSNode\28\29
[asyncify] Common::Array<SaveStateDescriptor>::insert_aux\28SaveStateDescriptor*\2c\20SaveStateDescriptor\20const*\2c\20SaveStateDescriptor\20const*\29 can change the state due to Common::Array<SaveStateDescriptor>::freeStorage\28SaveStateDescriptor*\2c\20unsigned\20int\29
[asyncify] GUI::SaveLoadChooserDialog::listSaves\28\29 can change the state due to Common::Array<SaveStateDescriptor>::freeStorage\28SaveStateDescriptor*\2c\20unsigned\20int\29
[asyncify] GUI::SaveLoadChooserSimple::close\28\29 can change the state due to Common::Array<SaveStateDescriptor>::freeStorage\28SaveStateDescriptor*\2c\20unsigned\20int\29
[asyncify] GUI::SaveLoadChooserDialog::~SaveLoadChooserDialog\28\29.1 can change the state due to Common::Array<SaveStateDescriptor>::freeStorage\28SaveStateDescriptor*\2c\20unsigned\20int\29
[asyncify] GUI::SaveLoadChooserSimple::~SaveLoadChooserSimple\28\29 can change the state due to Common::Array<SaveStateDescriptor>::freeStorage\28SaveStateDescriptor*\2c\20unsigned\20int\29
[asyncify] MetaEngineDetection&\20Plugin::get<MetaEngineDetection>\28\29\20const can change the state due to Plugin::getName\28\29\20const
[asyncify] AdvancedMetaEngine&\20Plugin::get<AdvancedMetaEngine>\28\29\20const can change the state due to Plugin::getName\28\29\20const
[asyncify] AdvancedMetaEngine::createInstance\28OSystem*\2c\20Engine**\29 can change the state due to Plugin::getName\28\29\20const
[asyncify] Engine::getMetaEngineDetection\28\29 can change the state due to Plugin::getName\28\29\20const
[asyncify] StaticPlugin::~StaticPlugin\28\29.1 can change the state due to StaticPlugin::~StaticPlugin\28\29
[asyncify] GUI::MassAddDialog::MassAddDialog\28Common::FSNode\20const&\29 can change the state due to Common::Array<Common::FSNode>::insert_aux\28Common::FSNode*\2c\20Common::FSNode\20const*\2c\20Common::FSNode\20const*\29
[asyncify] PluginManager::~PluginManager\28\29.1 can change the state due to PluginManager::~PluginManager\28\29
[asyncify] Base::findGameMatchingName\28Common::String\20const&\29 can change the state due to EngineManager::findGamesMatching\28Common::String\20const&\2c\20Common::String\20const&\29\20const
[asyncify] GUI::generateEntries\28Common::HashMap<Common::String\2c\20Common::ConfigManager::Domain\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>\20const&\2c\20Common::HashMap<Common::String\2c\20Common::String\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>\20const&\29 can change the state due to EngineManager::findTarget\28Common::String\20const&\2c\20Plugin\20const**\29\20const
[asyncify] EngineManager::upgradeTargetIfNecessary\28Common::String\20const&\29\20const can change the state due to EngineManager::upgradeTargetForEngineId\28Common::String\20const&\29\20const
[asyncify] OpenGL::OpenGLGraphicsManager::getDefaultScaler\28\29\20const can change the state due to ScalerManager::findScalerPluginIndex\28char\20const*\29\20const
[asyncify] virtual\20thunk\20to\20OpenGL::OpenGLGraphicsManager::getDefaultScaler\28\29\20const can change the state due to ScalerManager::findScalerPluginIndex\28char\20const*\29\20const
[asyncify] SurfaceSdlGraphicsManager::getDefaultScaler\28\29\20const can change the state due to ScalerManager::findScalerPluginIndex\28char\20const*\29\20const
[asyncify] virtual\20thunk\20to\20SurfaceSdlGraphicsManager::getDefaultScaler\28\29\20const can change the state due to ScalerManager::findScalerPluginIndex\28char\20const*\29\20const
[asyncify] Common::AchievementsManager::setActiveDomain\28Common::AchievementsInfo\20const&\29 can change the state due to Common::AchievementsManager::loadAchievementsData\28char\20const*\2c\20char\20const*\29
[asyncify] MohawkMetaEngineDetection::toDetectedGame\28ADDetectedGame\20const&\2c\20ADDetectedGameExtraInfo*\29\20const can change the state due to AdvancedMetaEngineDetection::toDetectedGame\28ADDetectedGame\20const&\2c\20ADDetectedGameExtraInfo*\29\20const
[asyncify] AdvancedMetaEngineDetection::getFileProperties\28Common::HashMap<Common::String\2c\20Common::FSNode\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>\20const&\2c\20ADGameDescription\20const&\2c\20Common::String\20const&\2c\20FileProperties&\29\20const can change the state due to getFilePropertiesIntern\28unsigned\20int\2c\20Common::HashMap<Common::String\2c\20Common::FSNode\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>\20const&\2c\20ADGameDescription\20const&\2c\20Common::String\20const&\2c\20FileProperties&\29
[asyncify] AdvancedMetaEngine::getFilePropertiesExtern\28unsigned\20int\2c\20Common::HashMap<Common::String\2c\20Common::FSNode\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>\20const&\2c\20ADGameDescription\20const&\2c\20Common::String\20const&\2c\20FileProperties&\29\20const can change the state due to getFilePropertiesIntern\28unsigned\20int\2c\20Common::HashMap<Common::String\2c\20Common::FSNode\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>\20const&\2c\20ADGameDescription\20const&\2c\20Common::String\20const&\2c\20FileProperties&\29
[asyncify] Adl::AdlMetaEngineDetection::detectGame\28Common::FSNode\20const&\2c\20Common::HashMap<Common::String\2c\20Common::FSNode\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>\20const&\2c\20Common::Language\2c\20Common::Platform\2c\20Common::String\20const&\2c\20unsigned\20int\2c\20bool\29 can change the state due to AdvancedMetaEngineDetection::detectGame\28Common::FSNode\20const&\2c\20Common::HashMap<Common::String\2c\20Common::FSNode\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>\20const&\2c\20Common::Language\2c\20Common::Platform\2c\20Common::String\20const&\2c\20unsigned\20int\2c\20bool\29
[asyncify] MainMenuDialog::~MainMenuDialog\28\29.1 can change the state due to MainMenuDialog::~MainMenuDialog\28\29
[asyncify] initGraphics\28int\2c\20int\29 can change the state due to initGraphics\28int\2c\20int\2c\20Graphics::PixelFormat\20const*\29
[asyncify] GUIErrorMessageWithURL\28Common::U32String\20const&\2c\20char\20const*\29 can change the state due to GUIErrorMessage\28Common::U32String\20const&\2c\20char\20const*\29
[asyncify] GUIErrorMessageWithURL\28Common::String\20const&\2c\20char\20const*\29 can change the state due to GUIErrorMessage\28Common::U32String\20const&\2c\20char\20const*\29
[asyncify] GUIErrorMessage\28Common::String\20const&\2c\20char\20const*\29 can change the state due to GUIErrorMessage\28Common::U32String\20const&\2c\20char\20const*\29
[asyncify] GUIErrorMessageFormat\28char\20const*\2c\20...\29 can change the state due to GUIErrorMessage\28Common::U32String\20const&\2c\20char\20const*\29
[asyncify] GUIErrorMessageFormatU32StringPtr\28Common::U32String\20const*\2c\20...\29 can change the state due to GUIErrorMessage\28Common::U32String\20const&\2c\20char\20const*\29
[asyncify] GUI::Debugger::preEnter\28\29 can change the state due to Engine::pauseEngine\28\29
[asyncify] Graphics::MacWindowManager::pauseEngine\28\29 can change the state due to Engine::pauseEngine\28\29
[asyncify] GUI::Debugger::postEnter\28\29 can change the state due to PauseToken::clear\28\29
[asyncify] void\20Common::sort<SaveStateDescriptor*\2c\20SaveStateDescriptorSlotComparator>\28SaveStateDescriptor*\2c\20SaveStateDescriptor*\2c\20SaveStateDescriptorSlotComparator\29 can change the state due to void\20SWAP<SaveStateDescriptor>\28SaveStateDescriptor&\2c\20SaveStateDescriptor&\29
[asyncify] SaveStateDescriptor::SaveStateDescriptor\28MetaEngine\20const*\2c\20int\2c\20Common::U32String\20const&\29 can change the state due to SaveStateDescriptor::initSaveType\28MetaEngine\20const*\29
[asyncify] SaveStateDescriptor::SaveStateDescriptor\28MetaEngine\20const*\2c\20int\2c\20Common::String\20const&\29 can change the state due to SaveStateDescriptor::initSaveType\28MetaEngine\20const*\29
[asyncify] GUI::EEHandler::handleKeyDown\28Common::KeyState&\29 can change the state due to GUI::EE::run\28\29
[asyncify] GUI::EE::game\28\29 can change the state due to GUI::EE::putshapes\28\29
[asyncify] GUI::EE::resetpt\28\29 can change the state due to GUI::EE::putshapes\28\29
[asyncify] GUI::EE::processKeyDown\28Common::Event&\29 can change the state due to GUI::EE::doMenu\28Common::Event&\29
[asyncify] GUI::BrowserDialog::~BrowserDialog\28\29.1 can change the state due to GUI::BrowserDialog::~BrowserDialog\28\29
[asyncify] void\20Common::sort<Common::FSNode*\2c\20Common::Less<Common::FSNode>>\28Common::FSNode*\2c\20Common::FSNode*\2c\20Common::Less<Common::FSNode>\29 can change the state due to void\20SWAP<Common::FSNode>\28Common::FSNode&\2c\20Common::FSNode&\29
[asyncify] GUI::ConsoleDialog::ConsoleDialog\28float\2c\20float\29 can change the state due to GUI::ConsoleDialog::init\28\29
[asyncify] GUI::ConsoleDialog::reflowLayout\28\29 can change the state due to GUI::ConsoleDialog::init\28\29
[asyncify] GUI::ConsoleDialog::print\28char\20const*\29 can change the state due to GUI::ConsoleDialog::drawCaret\28bool\29
[asyncify] GUI::ConsoleDialog::historyScroll\28int\29 can change the state due to GUI::ConsoleDialog::drawCaret\28bool\29
[asyncify] GUI::ConsoleDialog::defaultKeyDownHandler\28Common::KeyState&\29 can change the state due to GUI::ConsoleDialog::drawCaret\28bool\29
[asyncify] GUI::ConsoleDialog::printChar\28int\29 can change the state due to GUI::ConsoleDialog::drawCaret\28bool\29
[asyncify] GUI::ConsoleDialog::vprintFormat\28int\2c\20char\20const*\2c\20void*\29 can change the state due to GUI::ConsoleDialog::drawCaret\28bool\29
[asyncify] GUI::ConsoleDialog::~ConsoleDialog\28\29 can change the state due to GUI::ConsoleDialog::saveHistory\28\29
[asyncify] GUI::ConsoleDialog::drawDialog\28GUI::DrawLayer\29 can change the state due to GUI::ConsoleDialog::drawLine\28int\29
[asyncify] GUI::Debugger::Debugger\28\29 can change the state due to GUI::Debugger::registerCmd\28Common::String\20const&\2c\20Common::Functor2<int\2c\20char\20const**\2c\20bool>*\29
[asyncify] GUI::Debugger::debuggerInputCallback\28GUI::ConsoleDialog*\2c\20char\20const*\2c\20void*\29 can change the state due to GUI::Debugger::parseCommand\28char\20const*\29
[asyncify] GUI::Debugger::cmdExecFile\28int\2c\20char\20const**\29 can change the state due to GUI::Debugger::parseCommand\28char\20const*\29
[asyncify] GUI::Debugger::~Debugger\28\29.1 can change the state due to GUI::Debugger::~Debugger\28\29
[asyncify] Common::ListInternal::Iterator<Common::SharedPtr<Common::ArchiveMember>>\20Common::sortPartition<Common::ListInternal::Iterator<Common::SharedPtr<Common::ArchiveMember>>\2c\20GUI::ArchiveMemberLess>\28Common::ListInternal::Iterator<Common::SharedPtr<Common::ArchiveMember>>\2c\20Common::ListInternal::Iterator<Common::SharedPtr<Common::ArchiveMember>>\2c\20Common::ListInternal::Iterator<Common::SharedPtr<Common::ArchiveMember>>\2c\20GUI::ArchiveMemberLess&\29 can change the state due to void\20SWAP<Common::SharedPtr<Common::ArchiveMember>>\28Common::SharedPtr<Common::ArchiveMember>&\2c\20Common::SharedPtr<Common::ArchiveMember>&\29
[asyncify] Common::ListInternal::Iterator<Common::SharedPtr<Common::ArchiveMember>>\20Common::sortPartition<Common::ListInternal::Iterator<Common::SharedPtr<Common::ArchiveMember>>\2c\20GUI::ArchiveMemberListBackComparator>\28Common::ListInternal::Iterator<Common::SharedPtr<Common::ArchiveMember>>\2c\20Common::ListInternal::Iterator<Common::SharedPtr<Common::ArchiveMember>>\2c\20Common::ListInternal::Iterator<Common::SharedPtr<Common::ArchiveMember>>\2c\20GUI::ArchiveMemberListBackComparator&\29 can change the state due to void\20SWAP<Common::SharedPtr<Common::ArchiveMember>>\28Common::SharedPtr<Common::ArchiveMember>&\2c\20Common::SharedPtr<Common::ArchiveMember>&\29
[asyncify] MT32Emu::ScummVMReportHandler::onErrorControlROM\28\29 can change the state due to GUI::Dialog::runModal\28\29
[asyncify] MT32Emu::ScummVMReportHandler::onErrorPCMROM\28\29 can change the state due to GUI::Dialog::runModal\28\29
[asyncify] BaseBackend::displayMessageOnOSD\28Common::U32String\20const&\29 can change the state due to GUI::Dialog::runModal\28\29
[asyncify] AdvancedMetaEngineDetection::cleanupPirated\28Common::Array<ADDetectedGame>&\29\20const can change the state due to GUI::Dialog::runModal\28\29
[asyncify] Engine::warnMissingExtractedCDAudio\28\29 can change the state due to GUI::Dialog::runModal\28\29
[asyncify] GUI::BrowserDialog::runModal\28\29 can change the state due to GUI::Dialog::runModal\28\29
[asyncify] GUI::displayErrorDialog\28Common::U32String\20const&\29 can change the state due to GUI::Dialog::runModal\28\29
[asyncify] GUI::displayErrorDialog\28Common::Error\20const&\2c\20Common::U32String\20const&\29 can change the state due to GUI::Dialog::runModal\28\29
[asyncify] GUI::FileBrowserDialog::open\28\29 can change the state due to GUI::Dialog::open\28\29
[asyncify] GUI::SaveLoadChooserDialog::open\28\29 can change the state due to GUI::Dialog::open\28\29
[asyncify] GUI::SaveLoadChooserSimple::open\28\29 can change the state due to GUI::Dialog::open\28\29
[asyncify] GUI::SavenameDialog::open\28\29 can change the state due to GUI::Dialog::open\28\29
[asyncify] GUI::ThemeBrowser::open\28\29 can change the state due to GUI::Dialog::open\28\29
[asyncify] GUI::AboutDialog::close\28\29 can change the state due to GUI::Dialog::close\28\29
[asyncify] GUI::ConsoleDialog::close\28\29 can change the state due to GUI::Dialog::close\28\29
[asyncify] GUI::SaveLoadChooserDialog::close\28\29 can change the state due to GUI::Dialog::close\28\29
[asyncify] GUI::SaveLoadChooserGrid::close\28\29 can change the state due to GUI::Dialog::close\28\29
[asyncify] GUI::UnknownGameDialog::reflowLayout\28\29 can change the state due to GUI::Dialog::reflowLayout\28\29
[asyncify] GUI::Tooltip::drawDialog\28GUI::DrawLayer\29 can change the state due to GUI::Dialog::drawDialog\28GUI::DrawLayer\29
[asyncify] GUI::LauncherDialog::handleKeyDown\28Common::KeyState\29 can change the state due to GUI::Dialog::handleKeyDown\28Common::KeyState\29
[asyncify] GUI::SaveLoadChooserDialog::handleTickle\28\29 can change the state due to GUI::Dialog::handleTickle\28\29
[asyncify] GUI::ListWidget::findItem\28int\2c\20int\29\20const can change the state due to GUI::GuiManager::GuiManager\28\29
[asyncify] GUI::ListWidget::handleMouseMoved\28int\2c\20int\2c\20int\29 can change the state due to GUI::GuiManager::GuiManager\28\29
[asyncify] GUI::ListWidget::drawFormattedText\28Common::Rect\20const&\2c\20Common::U32String\20const&\2c\20GUI::ThemeEngine::State\2c\20Graphics::TextAlign\2c\20GUI::ThemeEngine::TextInversionState\2c\20int\2c\20bool\2c\20GUI::ThemeEngine::FontColor\29 can change the state due to GUI::GuiManager::GuiManager\28\29
[asyncify] GUI::ListWidget::getCaretOffset\28\29\20const can change the state due to GUI::GuiManager::GuiManager\28\29
[asyncify] GUI::PopUpWidget::reflowLayout\28\29 can change the state due to GUI::GuiManager::GuiManager\28\29
[asyncify] GUI::PopUpWidget::drawWidget\28\29 can change the state due to GUI::GuiManager::GuiManager\28\29
[asyncify] GUI::ScrollBarWidget::drawWidget\28\29 can change the state due to GUI::GuiManager::GuiManager\28\29
[asyncify] GUI::TabWidget::recalc\28\29 can change the state due to GUI::GuiManager::GuiManager\28\29
[asyncify] GUI::TabWidget::init\28\29 can change the state due to GUI::GuiManager::GuiManager\28\29
[asyncify] GUI::TabWidget::addTab\28Common::U32String\20const&\2c\20Common::String\20const&\2c\20bool\29 can change the state due to GUI::GuiManager::GuiManager\28\29
[asyncify] GUI::TabWidget::drawWidget\28\29 can change the state due to GUI::GuiManager::GuiManager\28\29
[asyncify] GUI::LauncherDialog::createSwitchButton\28Common::String\20const&\2c\20Common::U32String\20const&\2c\20Common::U32String\20const&\2c\20char\20const*\2c\20unsigned\20int\29 can change the state due to GUI::GuiManager::GuiManager\28\29
[asyncify] GUI::AboutDialog::addLine\28Common::U32String\20const&\29 can change the state due to GUI::GuiManager::GuiManager\28\29
[asyncify] Common::Singleton<GUI::GuiManager>::instance\28\29 can change the state due to GUI::GuiManager::GuiManager\28\29
[asyncify] GUI::ConsoleDialog::scrollToCurrent\28\29 can change the state due to GUI::GuiManager::GuiManager\28\29
[asyncify] GUI::ConsoleDialog::handleCommand\28GUI::CommandSender*\2c\20unsigned\20int\2c\20unsigned\20int\29 can change the state due to GUI::GuiManager::GuiManager\28\29
[asyncify] GUI::Dialog::Dialog\28int\2c\20int\2c\20int\2c\20int\29 can change the state due to GUI::GuiManager::GuiManager\28\29
[asyncify] GUI::Dialog::Dialog\28Common::String\20const&\29 can change the state due to GUI::GuiManager::GuiManager\28\29
[asyncify] GUI::getRequestedLauncherType\28\29 can change the state due to GUI::GuiManager::GuiManager\28\29
[asyncify] GUI::GuiObject::resize\28int\2c\20int\2c\20int\2c\20int\2c\20bool\29 can change the state due to GUI::GuiManager::GuiManager\28\29
[asyncify] GUI::GuiObject::reflowLayout\28\29 can change the state due to GUI::GuiManager::GuiManager\28\29
[asyncify] GUI::PredictiveDialog::PredictiveDialog\28\29 can change the state due to GUI::GuiManager::GuiManager\28\29
[asyncify] GUI::SaveLoadChooserDialog::createSwitchButton\28Common::String\20const&\2c\20Common::U32String\20const&\2c\20Common::U32String\20const&\2c\20char\20const*\2c\20unsigned\20int\29 can change the state due to GUI::GuiManager::GuiManager\28\29
[asyncify] GUI::SaveLoadChooserGrid::handleMouseWheel\28int\2c\20int\2c\20int\29 can change the state due to GUI::GuiManager::GuiManager\28\29
[asyncify] GUI::ThemeBrowser::updateListing\28\29 can change the state due to GUI::GuiManager::GuiManager\28\29
[asyncify] GUI::Widget::setEnabled\28bool\29 can change the state due to GUI::GuiManager::GuiManager\28\29
[asyncify] GUI::StaticTextWidget::setFont\28GUI::ThemeEngine::FontStyle\2c\20Common::Language\29 can change the state due to GUI::GuiManager::GuiManager\28\29
[asyncify] GUI::StaticTextWidget::drawWidget\28\29 can change the state due to GUI::GuiManager::GuiManager\28\29
[asyncify] GUI::addClearButton\28GUI::GuiObject*\2c\20Common::String\20const&\2c\20unsigned\20int\2c\20int\2c\20int\2c\20int\2c\20int\29 can change the state due to GUI::GuiManager::GuiManager\28\29
[asyncify] GUI::PicButtonWidget::setGfxFromTheme\28char\20const*\2c\20int\2c\20bool\29 can change the state due to GUI::GuiManager::GuiManager\28\29
[asyncify] GUI::DropdownButtonWidget::DropdownButtonWidget\28GUI::GuiObject*\2c\20int\2c\20int\2c\20int\2c\20int\2c\20Common::U32String\20const&\2c\20Common::U32String\20const&\2c\20unsigned\20int\2c\20unsigned\20char\2c\20Common::U32String\20const&\29 can change the state due to GUI::GuiManager::GuiManager\28\29
[asyncify] GUI::DropdownButtonWidget::reset\28\29 can change the state due to GUI::GuiManager::GuiManager\28\29
[asyncify] GUI::DropdownButtonWidget::DropdownButtonWidget\28GUI::GuiObject*\2c\20Common::String\20const&\2c\20Common::U32String\20const&\2c\20Common::U32String\20const&\2c\20unsigned\20int\2c\20unsigned\20char\2c\20Common::U32String\20const&\29 can change the state due to GUI::GuiManager::GuiManager\28\29
[asyncify] GUI::DropdownButtonWidget::reflowLayout\28\29 can change the state due to GUI::GuiManager::GuiManager\28\29
[asyncify] GUI::PicButtonWidget::drawWidget\28\29 can change the state due to GUI::GuiManager::GuiManager\28\29
[asyncify] GUI::CheckboxWidget::CheckboxWidget\28GUI::GuiObject*\2c\20int\2c\20int\2c\20int\2c\20int\2c\20Common::U32String\20const&\2c\20Common::U32String\20const&\2c\20unsigned\20int\2c\20unsigned\20char\29 can change the state due to GUI::GuiManager::GuiManager\28\29
[asyncify] GUI::CheckboxWidget::CheckboxWidget\28GUI::GuiObject*\2c\20Common::String\20const&\2c\20Common::U32String\20const&\2c\20Common::U32String\20const&\2c\20unsigned\20int\2c\20unsigned\20char\29 can change the state due to GUI::GuiManager::GuiManager\28\29
[asyncify] GUI::RadiobuttonGroup::setEnabled\28bool\29 can change the state due to GUI::GuiManager::GuiManager\28\29
[asyncify] GUI::RadiobuttonWidget::RadiobuttonWidget\28GUI::GuiObject*\2c\20int\2c\20int\2c\20int\2c\20int\2c\20GUI::RadiobuttonGroup*\2c\20int\2c\20Common::U32String\20const&\2c\20Common::U32String\20const&\2c\20unsigned\20char\29 can change the state due to GUI::GuiManager::GuiManager\28\29
[asyncify] GUI::RadiobuttonWidget::RadiobuttonWidget\28GUI::GuiObject*\2c\20Common::String\20const&\2c\20GUI::RadiobuttonGroup*\2c\20int\2c\20Common::U32String\20const&\2c\20Common::U32String\20const&\2c\20unsigned\20char\29 can change the state due to GUI::GuiManager::GuiManager\28\29
[asyncify] GUI::SliderWidget::drawWidget\28\29 can change the state due to GUI::GuiManager::GuiManager\28\29
[asyncify] GUI::GraphicsWidget::setGfxFromTheme\28char\20const*\29 can change the state due to GUI::GuiManager::GuiManager\28\29
[asyncify] GUI::GraphicsWidget::drawWidget\28\29 can change the state due to GUI::GuiManager::GuiManager\28\29
[asyncify] GUI::ContainerWidget::drawWidget\28\29 can change the state due to GUI::GuiManager::GuiManager\28\29
[asyncify] GUI::EditableWidget::EditableWidget\28GUI::GuiObject*\2c\20int\2c\20int\2c\20int\2c\20int\2c\20Common::U32String\20const&\2c\20unsigned\20int\29 can change the state due to GUI::GuiManager::GuiManager\28\29
[asyncify] GUI::EditableWidget::init\28\29 can change the state due to GUI::GuiManager::GuiManager\28\29
[asyncify] GUI::EditableWidget::EditableWidget\28GUI::GuiObject*\2c\20Common::String\20const&\2c\20Common::U32String\20const&\2c\20unsigned\20int\29 can change the state due to GUI::GuiManager::GuiManager\28\29
[asyncify] GUI::EditableWidget::getCaretOffset\28\29\20const can change the state due to GUI::GuiManager::GuiManager\28\29
[asyncify] GUI::EditTextWidget::reflowLayout\28\29 can change the state due to GUI::GuiManager::GuiManager\28\29
[asyncify] GUI::GridItemWidget::drawWidget\28\29 can change the state due to GUI::GuiManager::GuiManager\28\29
[asyncify] GUI::GridWidget::calcEntrySizes\28\29 can change the state due to GUI::GuiManager::GuiManager\28\29
[asyncify] GUI::GridWidget::scrollBarRecalc\28\29 can change the state due to GUI::GuiManager::GuiManager\28\29
[asyncify] GUI::GridWidget::GridWidget\28GUI::GuiObject*\2c\20Common::String\20const&\29 can change the state due to GUI::GuiManager::GuiManager\28\29
[asyncify] non-virtual\20thunk\20to\20GUI::GuiManager::~GuiManager\28\29 can change the state due to GUI::GuiManager::~GuiManager\28\29
[asyncify] GUI::GuiManager::~GuiManager\28\29.1 can change the state due to GUI::GuiManager::~GuiManager\28\29
[asyncify] non-virtual\20thunk\20to\20GUI::GuiManager::~GuiManager\28\29.1 can change the state due to GUI::GuiManager::~GuiManager\28\29
[asyncify] GUI::LauncherSimple::LauncherSimple\28Common::String\20const&\2c\20GUI::LauncherChooser*\29 can change the state due to GUI::LauncherDialog::LauncherDialog\28Common::String\20const&\2c\20GUI::LauncherChooser*\29
[asyncify] GUI::LauncherGrid::LauncherGrid\28Common::String\20const&\2c\20GUI::LauncherChooser*\29 can change the state due to GUI::LauncherDialog::LauncherDialog\28Common::String\20const&\2c\20GUI::LauncherChooser*\29
[asyncify] GUI::LauncherChooser::LauncherChooser\28\29 can change the state due to GUI::LauncherChooser::genGameList\28\29
[asyncify] launcherDialog\28\29 can change the state due to GUI::LauncherChooser::~LauncherChooser\28\29
[asyncify] GUI::LauncherSimple::~LauncherSimple\28\29 can change the state due to GUI::LauncherDialog::~LauncherDialog\28\29.1
[asyncify] GUI::LauncherGrid::~LauncherGrid\28\29 can change the state due to GUI::LauncherDialog::~LauncherDialog\28\29.1
[asyncify] GUI::MessageDialog::MessageDialog\28Common::U32String\20const&\2c\20Common::U32String\20const&\2c\20Common::U32String\20const&\2c\20Graphics::TextAlign\2c\20char\20const*\2c\20Common::U32String\20const&\29 can change the state due to GUI::MessageDialog::init\28Common::U32String\20const&\2c\20Common::U32String\20const&\2c\20Common::Array<Common::U32String>\20const&\2c\20Graphics::TextAlign\2c\20char\20const*\2c\20Common::U32String\20const&\29
[asyncify] GUI::MessageDialog::MessageDialog\28Common::String\20const&\2c\20Common::String\20const&\2c\20Common::String\20const&\2c\20Graphics::TextAlign\2c\20char\20const*\29 can change the state due to GUI::MessageDialog::init\28Common::U32String\20const&\2c\20Common::U32String\20const&\2c\20Common::Array<Common::U32String>\20const&\2c\20Graphics::TextAlign\2c\20char\20const*\2c\20Common::U32String\20const&\29
[asyncify] GUI::MessageDialog::MessageDialog\28Common::U32String\20const&\2c\20Common::U32String\20const&\2c\20Common::Array<Common::U32String>\20const&\2c\20Graphics::TextAlign\29 can change the state due to GUI::MessageDialog::init\28Common::U32String\20const&\2c\20Common::U32String\20const&\2c\20Common::Array<Common::U32String>\20const&\2c\20Graphics::TextAlign\2c\20char\20const*\2c\20Common::U32String\20const&\29
[asyncify] GUI::GridItemTray::~GridItemTray\28\29 can change the state due to GUI::GuiObject::~GuiObject\28\29
[asyncify] GUI::GridItemTray::~GridItemTray\28\29.1 can change the state due to GUI::GuiObject::~GuiObject\28\29
[asyncify] non-virtual\20thunk\20to\20GUI::GridItemTray::~GridItemTray\28\29 can change the state due to GUI::GuiObject::~GuiObject\28\29
[asyncify] non-virtual\20thunk\20to\20GUI::GridItemTray::~GridItemTray\28\29.1 can change the state due to GUI::GuiObject::~GuiObject\28\29
[asyncify] GUI::PopUpDialog::~PopUpDialog\28\29 can change the state due to GUI::GuiObject::~GuiObject\28\29
[asyncify] GUI::PopUpDialog::~PopUpDialog\28\29.1 can change the state due to GUI::GuiObject::~GuiObject\28\29
[asyncify] GUI::AboutDialog::~AboutDialog\28\29 can change the state due to GUI::GuiObject::~GuiObject\28\29
[asyncify] GUI::AboutDialog::~AboutDialog\28\29.1 can change the state due to GUI::GuiObject::~GuiObject\28\29
[asyncify] GUI::ChooserDialog::~ChooserDialog\28\29 can change the state due to GUI::GuiObject::~GuiObject\28\29
[asyncify] GUI::Dialog::~Dialog\28\29 can change the state due to GUI::GuiObject::~GuiObject\28\29
[asyncify] GUI::FileBrowserDialog::~FileBrowserDialog\28\29 can change the state due to GUI::GuiObject::~GuiObject\28\29
[asyncify] GUI::FileBrowserDialog::~FileBrowserDialog\28\29.1 can change the state due to GUI::GuiObject::~GuiObject\28\29
[asyncify] GUI::MessageDialog::~MessageDialog\28\29 can change the state due to GUI::GuiObject::~GuiObject\28\29
[asyncify] GUI::TimedMessageDialog::~TimedMessageDialog\28\29 can change the state due to GUI::GuiObject::~GuiObject\28\29
[asyncify] GUI::CountdownMessageDialog::~CountdownMessageDialog\28\29 can change the state due to GUI::GuiObject::~GuiObject\28\29
[asyncify] GUI::CountdownMessageDialog::~CountdownMessageDialog\28\29.1 can change the state due to GUI::GuiObject::~GuiObject\28\29
[asyncify] GUI::MessageDialogWithURL::~MessageDialogWithURL\28\29 can change the state due to GUI::GuiObject::~GuiObject\28\29
[asyncify] GUI::PredictiveDialog::~PredictiveDialog\28\29 can change the state due to GUI::GuiObject::~GuiObject\28\29
[asyncify] GUI::SavenameDialog::~SavenameDialog\28\29 can change the state due to GUI::GuiObject::~GuiObject\28\29
[asyncify] GUI::ThemeBrowser::~ThemeBrowser\28\29 can change the state due to GUI::GuiObject::~GuiObject\28\29
[asyncify] GUI::ThemeBrowser::~ThemeBrowser\28\29.1 can change the state due to GUI::GuiObject::~GuiObject\28\29
[asyncify] GUI::Tooltip::~Tooltip\28\29 can change the state due to GUI::GuiObject::~GuiObject\28\29
[asyncify] GUI::Tooltip::~Tooltip\28\29.1 can change the state due to GUI::GuiObject::~GuiObject\28\29
[asyncify] GUI::UnknownGameDialog::~UnknownGameDialog\28\29 can change the state due to GUI::GuiObject::~GuiObject\28\29
[asyncify] GUI::UnknownGameDialog::~UnknownGameDialog\28\29.1 can change the state due to GUI::GuiObject::~GuiObject\28\29
[asyncify] GUI::OptionsDialog::OptionsDialog\28Common::String\20const&\2c\20int\2c\20int\2c\20int\2c\20int\29 can change the state due to GUI::OptionsDialog::init\28\29
[asyncify] GUI::OptionsDialog::OptionsDialog\28Common::String\20const&\2c\20Common::String\20const&\29 can change the state due to GUI::OptionsDialog::init\28\29
[asyncify] GUI::GlobalOptionsDialog::GlobalOptionsDialog\28GUI::LauncherDialog*\29 can change the state due to GUI::OptionsDialog::init\28\29
[asyncify] GUI::ConfigDialog::~ConfigDialog\28\29 can change the state due to GUI::OptionsDialog::~OptionsDialog\28\29
[asyncify] GUI::EditGameDialog::~EditGameDialog\28\29 can change the state due to GUI::OptionsDialog::~OptionsDialog\28\29
[asyncify] GUI::OptionsDialog::~OptionsDialog\28\29.1 can change the state due to GUI::OptionsDialog::~OptionsDialog\28\29
[asyncify] GUI::GlobalOptionsDialog::clean\28\29 can change the state due to GUI::OptionsDialog::clean\28\29
[asyncify] GUI::GlobalOptionsDialog::addMIDIControls\28GUI::GuiObject*\2c\20Common::String\20const&\29 can change the state due to GUI::OptionsDialog::addMIDIControls\28GUI::GuiObject*\2c\20Common::String\20const&\29
[asyncify] GUI::EditGameDialog::setupGraphicsTab\28\29 can change the state due to GUI::OptionsDialog::setupGraphicsTab\28\29
[asyncify] non-virtual\20thunk\20to\20GUI::GlobalOptionsDialog::~GlobalOptionsDialog\28\29.1 can change the state due to GUI::GlobalOptionsDialog::~GlobalOptionsDialog\28\29
[asyncify] GUI::GlobalOptionsDialog::~GlobalOptionsDialog\28\29.1 can change the state due to GUI::GlobalOptionsDialog::~GlobalOptionsDialog\28\29
[asyncify] non-virtual\20thunk\20to\20GUI::GlobalOptionsDialog::~GlobalOptionsDialog\28\29 can change the state due to GUI::GlobalOptionsDialog::~GlobalOptionsDialog\28\29
[asyncify] Common::Array<GUI::ExistingSave>::insert_aux\28GUI::ExistingSave*\2c\20GUI::ExistingSave\20const*\2c\20GUI::ExistingSave\20const*\29 can change the state due to Common::Array<GUI::ExistingSave>::freeStorage\28GUI::ExistingSave*\2c\20unsigned\20int\29
[asyncify] GUI::PredictiveDialog::handleKeyUp\28Common::KeyState\29 can change the state due to GUI::PredictiveDialog::processButton\28GUI::PredictiveDialog::ButtonId\29
[asyncify] GUI::SaveLoadChooser::runModalWithMetaEngineAndTarget\28MetaEngine\20const*\2c\20Common::String\20const&\29 can change the state due to GUI::SaveLoadChooser::selectChooser\28MetaEngine\20const*\29
[asyncify] GUI::SaveLoadChooserDialog::SaveLoadChooserDialog\28Common::String\20const&\2c\20bool\29 can change the state due to GUI::SaveLoadChooserDialog::addChooserButtons\28\29
[asyncify] GUI::SaveLoadChooserDialog::SaveLoadChooserDialog\28int\2c\20int\2c\20int\2c\20int\2c\20bool\29 can change the state due to GUI::SaveLoadChooserDialog::addChooserButtons\28\29
[asyncify] GUI::SaveLoadChooserSimple::SaveLoadChooserSimple\28Common::U32String\20const&\2c\20Common::U32String\20const&\2c\20bool\29 can change the state due to GUI::SaveLoadChooserDialog::addChooserButtons\28\29
[asyncify] GUI::SaveLoadChooserGrid::SaveLoadChooserGrid\28Common::U32String\20const&\2c\20bool\29 can change the state due to GUI::SaveLoadChooserDialog::addChooserButtons\28\29
[asyncify] GUI::SaveLoadChooserGrid::~SaveLoadChooserGrid\28\29.1 can change the state due to GUI::SaveLoadChooserGrid::~SaveLoadChooserGrid\28\29
[asyncify] GUI::ThemeEngine::ThemeEngine\28Common::String\2c\20GUI::ThemeEngine::GraphicsMode\29 can change the state due to GUI::ThemeEngine::getThemeFile\28Common::String\20const&\29
[asyncify] Base::listThemes\28\29 can change the state due to GUI::ThemeEngine::listUsableThemes\28Common::List<GUI::ThemeEngine::ThemeDescriptor>&\29
[asyncify] GUI::ThemeEngine::loadTheme\28Common::String\20const&\29 can change the state due to GUI::ThemeEngine::loadThemeXML\28Common::String\20const&\29
[asyncify] GUI::ThemeEngine::loadExtraFont\28GUI::ThemeEngine::FontStyle\2c\20Common::Language\29 can change the state due to GUI::ThemeEngine::addFont\28GUI::TextData\2c\20Common::String\20const&\2c\20Common::String\20const&\2c\20Common::String\20const&\2c\20int\29
[asyncify] GUI::ThemeParser::parserCallback_language\28Common::XMLParser::ParserNode*\29 can change the state due to GUI::ThemeEngine::addFont\28GUI::TextData\2c\20Common::String\20const&\2c\20Common::String\20const&\2c\20Common::String\20const&\2c\20int\29
[asyncify] GUI::ThemeEngine::loadFont\28Common::String\20const&\2c\20Common::String\20const&\2c\20int\2c\20bool\29 can change the state due to GUI::ThemeEngine::loadScalableFont\28Common::String\20const&\2c\20int\2c\20Common::String&\29
[asyncify] GUI::ThemeParser::parserCallback_bitmap\28Common::XMLParser::ParserNode*\29 can change the state due to GUI::ThemeEngine::addBitmap\28Common::String\20const&\2c\20Common::String\20const&\2c\20int\2c\20int\29
[asyncify] GUI::ThemeEngine::drawButton\28Common::Rect\20const&\2c\20Common::U32String\20const&\2c\20GUI::ThemeEngine::State\2c\20unsigned\20short\29 can change the state due to GUI::ThemeEngine::drawDD\28GUI::DrawData\2c\20Common::Rect\20const&\2c\20unsigned\20int\2c\20bool\29
[asyncify] GUI::ThemeEngine::drawDropDownButton\28Common::Rect\20const&\2c\20unsigned\20int\2c\20Common::U32String\20const&\2c\20GUI::ThemeEngine::State\2c\20bool\2c\20bool\2c\20bool\29 can change the state due to GUI::ThemeEngine::drawDD\28GUI::DrawData\2c\20Common::Rect\20const&\2c\20unsigned\20int\2c\20bool\29
[asyncify] GUI::ThemeEngine::drawLineSeparator\28Common::Rect\20const&\29 can change the state due to GUI::ThemeEngine::drawDD\28GUI::DrawData\2c\20Common::Rect\20const&\2c\20unsigned\20int\2c\20bool\29
[asyncify] GUI::ThemeEngine::drawSlider\28Common::Rect\20const&\2c\20int\2c\20GUI::ThemeEngine::State\2c\20bool\29 can change the state due to GUI::ThemeEngine::drawDD\28GUI::DrawData\2c\20Common::Rect\20const&\2c\20unsigned\20int\2c\20bool\29
[asyncify] GUI::ThemeEngine::drawWidgetBackground\28Common::Rect\20const&\2c\20GUI::ThemeEngine::WidgetBackground\29 can change the state due to GUI::ThemeEngine::drawDD\28GUI::DrawData\2c\20Common::Rect\20const&\2c\20unsigned\20int\2c\20bool\29
[asyncify] GUI::ThemeEngine::drawScrollbar\28Common::Rect\20const&\2c\20int\2c\20int\2c\20GUI::ThemeEngine::ScrollbarState\29 can change the state due to GUI::ThemeEngine::drawDD\28GUI::DrawData\2c\20Common::Rect\20const&\2c\20unsigned\20int\2c\20bool\29
[asyncify] GUI::ThemeEngine::drawDialogBackground\28Common::Rect\20const&\2c\20GUI::ThemeEngine::DialogBackground\29 can change the state due to GUI::ThemeEngine::drawDD\28GUI::DrawData\2c\20Common::Rect\20const&\2c\20unsigned\20int\2c\20bool\29
[asyncify] GUI::ThemeEngine::drawPopUpWidget\28Common::Rect\20const&\2c\20Common::U32String\20const&\2c\20int\2c\20GUI::ThemeEngine::State\2c\20bool\29 can change the state due to GUI::ThemeEngine::drawDD\28GUI::DrawData\2c\20Common::Rect\20const&\2c\20unsigned\20int\2c\20bool\29
[asyncify] GUI::ThemeEngine::drawTab\28Common::Rect\20const&\2c\20int\2c\20Common::Array<int>\20const&\2c\20Common::Array<Common::U32String>\20const&\2c\20int\2c\20bool\29 can change the state due to GUI::ThemeEngine::drawDD\28GUI::DrawData\2c\20Common::Rect\20const&\2c\20unsigned\20int\2c\20bool\29
[asyncify] GUI::ThemeEngine::drawText\28Common::Rect\20const&\2c\20Common::U32String\20const&\2c\20GUI::ThemeEngine::State\2c\20Graphics::TextAlign\2c\20GUI::ThemeEngine::TextInversionState\2c\20int\2c\20bool\2c\20GUI::ThemeEngine::FontStyle\2c\20GUI::ThemeEngine::FontColor\2c\20bool\2c\20Common::Rect\20const&\29 can change the state due to GUI::ThemeEngine::drawDD\28GUI::DrawData\2c\20Common::Rect\20const&\2c\20unsigned\20int\2c\20bool\29
[asyncify] GUI::ThemeEngine::unloadTheme\28\29 can change the state due to GUI::ThemeEval::reset\28\29
[asyncify] GUI::ThemeEval::~ThemeEval\28\29 can change the state due to GUI::ThemeEval::reset\28\29
[asyncify] GUI::ThemeEval::getWidgetData\28Common::String\20const&\2c\20short&\2c\20short&\2c\20short&\2c\20short&\29 can change the state due to GUI::ThemeEval::getWidgetData\28Common::String\20const&\2c\20short&\2c\20short&\2c\20short&\2c\20short&\2c\20bool&\29
[asyncify] GUI::ExtraGuiOptionsWidget::defineLayout\28GUI::ThemeEval&\2c\20Common::String\20const&\2c\20Common::String\20const&\29\20const can change the state due to GUI::ThemeEval::addDialog\28Common::String\20const&\2c\20Common::String\20const&\2c\20short\2c\20short\2c\20int\29
[asyncify] GUI::ThemeParser::parserCallback_dialog\28Common::XMLParser::ParserNode*\29 can change the state due to GUI::ThemeEval::addDialog\28Common::String\20const&\2c\20Common::String\20const&\2c\20short\2c\20short\2c\20int\29
[asyncify] GUI::ThemeParser::parserCallback_space\28Common::XMLParser::ParserNode*\29 can change the state due to GUI::ThemeEval::addSpace\28int\29
[asyncify] GUI::ThemeEval::addImportedLayout\28Common::String\20const&\29 can change the state due to GUI::ThemeLayout::importLayout\28GUI::ThemeLayout*\29
[asyncify] GUI::ThemeLayoutStacked::reflowLayout\28GUI::Widget*\29 can change the state due to GUI::ThemeLayoutStacked::reflowLayoutVertical\28GUI::Widget*\29
[asyncify] GUI::PopUpWidget::PopUpWidget\28GUI::GuiObject*\2c\20int\2c\20int\2c\20int\2c\20int\2c\20Common::U32String\20const&\2c\20unsigned\20int\29 can change the state due to GUI::Widget::Widget\28GUI::GuiObject*\2c\20int\2c\20int\2c\20int\2c\20int\2c\20Common::U32String\20const&\29
[asyncify] GUI::ScrollBarWidget::ScrollBarWidget\28GUI::GuiObject*\2c\20int\2c\20int\2c\20int\2c\20int\29 can change the state due to GUI::Widget::Widget\28GUI::GuiObject*\2c\20int\2c\20int\2c\20int\2c\20int\2c\20Common::U32String\20const&\29
[asyncify] GUI::ScrollContainerWidget::ScrollContainerWidget\28GUI::GuiObject*\2c\20int\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int\29 can change the state due to GUI::Widget::Widget\28GUI::GuiObject*\2c\20int\2c\20int\2c\20int\2c\20int\2c\20Common::U32String\20const&\29
[asyncify] GUI::TabWidget::TabWidget\28GUI::GuiObject*\2c\20int\2c\20int\2c\20int\2c\20int\29 can change the state due to GUI::Widget::Widget\28GUI::GuiObject*\2c\20int\2c\20int\2c\20int\2c\20int\2c\20Common::U32String\20const&\29
[asyncify] GUI::PopUpWidget::PopUpWidget\28GUI::GuiObject*\2c\20Common::String\20const&\2c\20Common::U32String\20const&\2c\20unsigned\20int\29 can change the state due to GUI::Widget::Widget\28GUI::GuiObject*\2c\20Common::String\20const&\2c\20Common::U32String\20const&\29
[asyncify] GUI::ScrollContainerWidget::ScrollContainerWidget\28GUI::GuiObject*\2c\20Common::String\20const&\2c\20Common::String\20const&\2c\20unsigned\20int\29 can change the state due to GUI::Widget::Widget\28GUI::GuiObject*\2c\20Common::String\20const&\2c\20Common::U32String\20const&\29
[asyncify] GUI::TabWidget::TabWidget\28GUI::GuiObject*\2c\20Common::String\20const&\29 can change the state due to GUI::Widget::Widget\28GUI::GuiObject*\2c\20Common::String\20const&\2c\20Common::U32String\20const&\29
[asyncify] GUI::PopUpWidget::~PopUpWidget\28\29 can change the state due to GUI::Widget::~Widget\28\29
[asyncify] GUI::PopUpWidget::~PopUpWidget\28\29.1 can change the state due to GUI::Widget::~Widget\28\29
[asyncify] non-virtual\20thunk\20to\20GUI::PopUpWidget::~PopUpWidget\28\29 can change the state due to GUI::Widget::~Widget\28\29
[asyncify] non-virtual\20thunk\20to\20GUI::PopUpWidget::~PopUpWidget\28\29.1 can change the state due to GUI::Widget::~Widget\28\29
[asyncify] GUI::ScrollBarWidget::~ScrollBarWidget\28\29 can change the state due to GUI::Widget::~Widget\28\29
[asyncify] GUI::ScrollBarWidget::~ScrollBarWidget\28\29.1 can change the state due to GUI::Widget::~Widget\28\29
[asyncify] non-virtual\20thunk\20to\20GUI::ScrollBarWidget::~ScrollBarWidget\28\29 can change the state due to GUI::Widget::~Widget\28\29
[asyncify] non-virtual\20thunk\20to\20GUI::ScrollBarWidget::~ScrollBarWidget\28\29.1 can change the state due to GUI::Widget::~Widget\28\29
[asyncify] GUI::ScrollContainerWidget::~ScrollContainerWidget\28\29 can change the state due to GUI::Widget::~Widget\28\29
[asyncify] GUI::EditableWidget::~EditableWidget\28\29 can change the state due to GUI::Widget::~Widget\28\29
[asyncify] GUI::TabWidget::findWidget\28int\2c\20int\29 can change the state due to GUI::Widget::findWidgetInChain\28GUI::Widget*\2c\20int\2c\20int\29
[asyncify] GUI::Dialog::findWidget\28int\2c\20int\29 can change the state due to GUI::Widget::findWidgetInChain\28GUI::Widget*\2c\20int\2c\20int\29
[asyncify] GUI::TabWidget::handleMouseMoved\28int\2c\20int\2c\20int\29 can change the state due to GUI::Widget::read\28Common::U32String\20const&\29
[asyncify] GUI::StaticTextWidget::handleMouseEntered\28int\29 can change the state due to GUI::Widget::read\28Common::U32String\20const&\29
[asyncify] Common::RemapWidget::refreshKeymap\28\29 can change the state due to GUI::StaticTextWidget::StaticTextWidget\28GUI::GuiObject*\2c\20int\2c\20int\2c\20int\2c\20int\2c\20Common::U32String\20const&\2c\20Graphics::TextAlign\2c\20Common::U32String\20const&\2c\20GUI::ThemeEngine::FontStyle\2c\20Common::Language\2c\20bool\29
[asyncify] GUI::ButtonWidget::ButtonWidget\28GUI::GuiObject*\2c\20int\2c\20int\2c\20int\2c\20int\2c\20Common::U32String\20const&\2c\20Common::U32String\20const&\2c\20unsigned\20int\2c\20unsigned\20char\2c\20Common::U32String\20const&\29 can change the state due to GUI::StaticTextWidget::StaticTextWidget\28GUI::GuiObject*\2c\20int\2c\20int\2c\20int\2c\20int\2c\20Common::U32String\20const&\2c\20Graphics::TextAlign\2c\20Common::U32String\20const&\2c\20GUI::ThemeEngine::FontStyle\2c\20Common::Language\2c\20bool\29
[asyncify] GUI::ChooserDialog::ChooserDialog\28Common::U32String\20const&\2c\20Common::String\29 can change the state due to GUI::StaticTextWidget::StaticTextWidget\28GUI::GuiObject*\2c\20Common::String\20const&\2c\20Common::U32String\20const&\2c\20Common::U32String\20const&\2c\20GUI::ThemeEngine::FontStyle\2c\20Common::Language\2c\20bool\29
[asyncify] GUI::FileBrowserDialog::FileBrowserDialog\28char\20const*\2c\20char\20const*\2c\20int\2c\20char\20const*\29 can change the state due to GUI::StaticTextWidget::StaticTextWidget\28GUI::GuiObject*\2c\20Common::String\20const&\2c\20Common::U32String\20const&\2c\20Common::U32String\20const&\2c\20GUI::ThemeEngine::FontStyle\2c\20Common::Language\2c\20bool\29
[asyncify] GUI::SavenameDialog::SavenameDialog\28\29 can change the state due to GUI::StaticTextWidget::StaticTextWidget\28GUI::GuiObject*\2c\20Common::String\20const&\2c\20Common::U32String\20const&\2c\20Common::U32String\20const&\2c\20GUI::ThemeEngine::FontStyle\2c\20Common::Language\2c\20bool\29
[asyncify] GUI::ThemeBrowser::ThemeBrowser\28\29 can change the state due to GUI::StaticTextWidget::StaticTextWidget\28GUI::GuiObject*\2c\20Common::String\20const&\2c\20Common::U32String\20const&\2c\20Common::U32String\20const&\2c\20GUI::ThemeEngine::FontStyle\2c\20Common::Language\2c\20bool\29
[asyncify] GUI::ButtonWidget::ButtonWidget\28GUI::GuiObject*\2c\20Common::String\20const&\2c\20Common::U32String\20const&\2c\20Common::U32String\20const&\2c\20unsigned\20int\2c\20unsigned\20char\2c\20Common::U32String\20const&\29 can change the state due to GUI::StaticTextWidget::StaticTextWidget\28GUI::GuiObject*\2c\20Common::String\20const&\2c\20Common::U32String\20const&\2c\20Common::U32String\20const&\2c\20GUI::ThemeEngine::FontStyle\2c\20Common::Language\2c\20bool\29
[asyncify] GUI::GlobalOptionsDialog::build\28\29::$_0::operator\28\29\28GUI::StaticTextWidget*\2c\20Common::String\20const&\2c\20Common::U32String\20const&\29\20const can change the state due to GUI::StaticTextWidget::setLabel\28Common::U32String\20const&\29
[asyncify] GUI::ButtonWidget::setLabel\28Common::String\20const&\29 can change the state due to GUI::ButtonWidget::setLabel\28Common::U32String\20const&\29
[asyncify] GUI::SaveLoadChooserGrid::hideButtons\28\29 can change the state due to GUI::PicButtonWidget::setGfx\28Graphics::ManagedSurface\20const*\2c\20int\2c\20bool\29
[asyncify] GUI::PredictiveDialog::updateHighLightedButton\28GUI::PredictiveDialog::ButtonId\29 can change the state due to GUI::ButtonWidget::setHighLighted\28bool\29
[asyncify] non-virtual\20thunk\20to\20GUI::PicButtonWidget::~PicButtonWidget\28\29 can change the state due to GUI::PicButtonWidget::~PicButtonWidget\28\29
[asyncify] GUI::PicButtonWidget::~PicButtonWidget\28\29.1 can change the state due to GUI::PicButtonWidget::~PicButtonWidget\28\29
[asyncify] non-virtual\20thunk\20to\20GUI::PicButtonWidget::~PicButtonWidget\28\29.1 can change the state due to GUI::PicButtonWidget::~PicButtonWidget\28\29
[asyncify] GUI::ExtraGuiOptionsWidget::load\28\29 can change the state due to GUI::CheckboxWidget::setState\28bool\29
[asyncify] GUI::GraphicsWidget::~GraphicsWidget\28\29.1 can change the state due to GUI::GraphicsWidget::~GraphicsWidget\28\29
[asyncify] GUI::GridItemWidget::GridItemWidget\28GUI::GridWidget*\29 can change the state due to GUI::ContainerWidget::ContainerWidget\28GUI::GuiObject*\2c\20int\2c\20int\2c\20int\2c\20int\29
[asyncify] GUI::GridItemWidget::~GridItemWidget\28\29 can change the state due to GUI::ContainerWidget::~ContainerWidget\28\29
[asyncify] GUI::GridItemWidget::~GridItemWidget\28\29.1 can change the state due to GUI::ContainerWidget::~ContainerWidget\28\29
[asyncify] non-virtual\20thunk\20to\20GUI::GridItemWidget::~GridItemWidget\28\29 can change the state due to GUI::ContainerWidget::~ContainerWidget\28\29
[asyncify] non-virtual\20thunk\20to\20GUI::GridItemWidget::~GridItemWidget\28\29.1 can change the state due to GUI::ContainerWidget::~ContainerWidget\28\29
[asyncify] GUI::ContainerWidget::~ContainerWidget\28\29.1 can change the state due to GUI::ContainerWidget::~ContainerWidget\28\29
[asyncify] GUI::GridWidget::~GridWidget\28\29 can change the state due to GUI::ContainerWidget::~ContainerWidget\28\29
[asyncify] GUI::ExtraGuiOptionsWidget::ExtraGuiOptionsWidget\28GUI::GuiObject*\2c\20Common::String\20const&\2c\20Common::String\20const&\2c\20Common::Array<ExtraGuiOption>\20const&\29 can change the state due to GUI::OptionsContainerWidget::OptionsContainerWidget\28GUI::GuiObject*\2c\20Common::String\20const&\2c\20Common::String\20const&\2c\20bool\2c\20Common::String\20const&\29
[asyncify] GUI::ExtraGuiOptionsWidget::~ExtraGuiOptionsWidget\28\29 can change the state due to GUI::OptionsContainerWidget::~OptionsContainerWidget\28\29
[asyncify] non-virtual\20thunk\20to\20GUI::DropdownButtonWidget::~DropdownButtonWidget\28\29.1 can change the state due to GUI::DropdownButtonWidget::~DropdownButtonWidget\28\29.1
[asyncify] GUI::SequenceAnimationComposite::addAnimation\28Common::SharedPtr<GUI::Animation>\29 can change the state due to Common::Array<Common::SharedPtr<GUI::Animation>>::insert_aux\28Common::SharedPtr<GUI::Animation>*\2c\20Common::SharedPtr<GUI::Animation>\20const*\2c\20Common::SharedPtr<GUI::Animation>\20const*\29
[asyncify] GUI::EditTextWidget::setEditString\28Common::U32String\20const&\29 can change the state due to GUI::EditableWidget::setEditString\28Common::U32String\20const&\29
[asyncify] GUI::EditableWidget::setCaretPos\28int\29 can change the state due to GUI::EditableWidget::adjustOffset\28\29
[asyncify] GUI::GridWidget::updateGrid\28\29 can change the state due to GUI::GridItemWidget::update\28\29
[asyncify] GUI::GridWidget::setFilter\28Common::U32String\20const&\29 can change the state due to GUI::GridWidget::sortGroups\28\29
[asyncify] GUI::GridWidget::groupEntries\28\29 can change the state due to GUI::GridWidget::sortGroups\28\29
[asyncify] GUI::GridWidget::loadFlagIcons\28\29 can change the state due to GUI::loadSurfaceFromFile\28Common::String\20const&\2c\20int\2c\20int\29
[asyncify] GUI::LauncherGrid::selectTarget\28Common::String\20const&\29 can change the state due to GUI::GridWidget::setSelected\28int\29
[asyncify] GUI::GroupedListWidget::groupByAttribute\28\29 can change the state due to GUI::GroupedListWidget::sortGroups\28\29
[asyncify] GUI::GroupedListWidget::toggleGroup\28int\29 can change the state due to GUI::GroupedListWidget::sortGroups\28\29
[asyncify] GUI::LauncherSimple::selectTarget\28Common::String\20const&\29 can change the state due to GUI::GroupedListWidget::setSelected\28int\29
[asyncify] GUI::GroupedListWidget::setList\28Common::Array<Common::U32String>\20const&\29 can change the state due to GUI::ListWidget::setList\28Common::Array<Common::U32String>\20const&\29
[asyncify] GUI::ChooserDialog::setList\28Common::Array<Common::U32String>\20const&\29 can change the state due to GUI::ListWidget::setList\28Common::Array<Common::U32String>\20const&\29
[asyncify] GUI::ListWidget::append\28Common::String\20const&\29 can change the state due to GUI::ListWidget::setFilter\28Common::U32String\20const&\2c\20bool\29
[asyncify] GUI::PopUpDialog::moveUp\28\29 can change the state due to GUI::PopUpDialog::drawMenuEntry\28int\2c\20bool\29
[asyncify] GUI::PopUpDialog::moveDown\28\29 can change the state due to GUI::PopUpDialog::drawMenuEntry\28int\2c\20bool\29
[asyncify] GUI::PopUpDialog::handleMouseMoved\28int\2c\20int\2c\20int\29 can change the state due to GUI::PopUpDialog::drawMenuEntry\28int\2c\20bool\29
[asyncify] GUI::PopUpDialog::setSelection\28int\29 can change the state due to GUI::PopUpDialog::drawMenuEntry\28int\2c\20bool\29
[asyncify] GUI::ScrollBarWidget::handleMouseWheel\28int\2c\20int\2c\20int\29 can change the state due to GUI::ScrollBarWidget::checkBounds\28int\29
[asyncify] GUI::ScrollContainerWidget::init\28\29 can change the state due to GUI::ScrollContainerWidget::recalc\28\29
[asyncify] GUI::TabWidget::~TabWidget\28\29.1 can change the state due to GUI::TabWidget::~TabWidget\28\29
[asyncify] GUI::TabWidget::handleMouseDown\28int\2c\20int\2c\20int\2c\20int\29 can change the state due to GUI::TabWidget::setActiveTab\28int\29
[asyncify] GUI::TabWidget::adjustTabs\28int\29 can change the state due to GUI::TabWidget::setActiveTab\28int\29
[asyncify] OSystem_SDL::hasFeature\28OSystem::Feature\29 can change the state due to ModularGraphicsBackend::hasFeature\28OSystem::Feature\29
[asyncify] non-virtual\20thunk\20to\20OSystem_SDL::hasFeature\28OSystem::Feature\29 can change the state due to ModularGraphicsBackend::hasFeature\28OSystem::Feature\29
[asyncify] virtual\20thunk\20to\20OSystem_SDL::hasFeature\28OSystem::Feature\29 can change the state due to ModularGraphicsBackend::hasFeature\28OSystem::Feature\29
[asyncify] OSystem_Emscripten::setFeatureState\28OSystem::Feature\2c\20bool\29 can change the state due to ModularGraphicsBackend::setFeatureState\28OSystem::Feature\2c\20bool\29
[asyncify] non-virtual\20thunk\20to\20OSystem_Emscripten::setFeatureState\28OSystem::Feature\2c\20bool\29 can change the state due to ModularGraphicsBackend::setFeatureState\28OSystem::Feature\2c\20bool\29
[asyncify] virtual\20thunk\20to\20OSystem_Emscripten::setFeatureState\28OSystem::Feature\2c\20bool\29 can change the state due to ModularGraphicsBackend::setFeatureState\28OSystem::Feature\2c\20bool\29
[asyncify] OSystem_Emscripten::getFeatureState\28OSystem::Feature\29 can change the state due to ModularGraphicsBackend::getFeatureState\28OSystem::Feature\29
[asyncify] non-virtual\20thunk\20to\20OSystem_Emscripten::getFeatureState\28OSystem::Feature\29 can change the state due to ModularGraphicsBackend::getFeatureState\28OSystem::Feature\29
[asyncify] virtual\20thunk\20to\20OSystem_Emscripten::getFeatureState\28OSystem::Feature\29 can change the state due to ModularGraphicsBackend::getFeatureState\28OSystem::Feature\29
[asyncify] virtual\20thunk\20to\20AudioCDStream::readBuffer\28short*\2c\20int\29 can change the state due to AudioCDStream::readBuffer\28short*\2c\20int\29
[asyncify] AudioCDStream::timerProc\28void*\29 can change the state due to AudioCDStream::onTimer\28\29
[asyncify] BaseBackend::initBackend\28\29 can change the state due to DefaultAudioCDManager::DefaultAudioCDManager\28\29
[asyncify] EventsBaseBackend::initBackend\28\29 can change the state due to DefaultAudioCDManager::DefaultAudioCDManager\28\29
[asyncify] OSystem_SDL::createAudioCDManager\28\29 can change the state due to DefaultAudioCDManager::DefaultAudioCDManager\28\29
[asyncify] DefaultAudioCDManager::~DefaultAudioCDManager\28\29.1 can change the state due to DefaultAudioCDManager::~DefaultAudioCDManager\28\29
[asyncify] non-virtual\20thunk\20to\20DefaultEventManager::~DefaultEventManager\28\29 can change the state due to DefaultEventManager::~DefaultEventManager\28\29
[asyncify] DefaultEventManager::~DefaultEventManager\28\29.1 can change the state due to DefaultEventManager::~DefaultEventManager\28\29
[asyncify] non-virtual\20thunk\20to\20DefaultEventManager::~DefaultEventManager\28\29.1 can change the state due to DefaultEventManager::~DefaultEventManager\28\29
[asyncify] Common::CompositeHardwareInputSet::~CompositeHardwareInputSet\28\29.1 can change the state due to Common::CompositeHardwareInputSet::~CompositeHardwareInputSet\28\29
[asyncify] Common::Keymap::resetMapping\28Common::Action*\29 can change the state due to Common::Keymap::registerMappings\28Common::Action*\2c\20Common::Array<Common::String>\20const&\29
[asyncify] Common::Keymap::loadMappings\28\29 can change the state due to Common::Keymap::registerMappings\28Common::Action*\2c\20Common::Array<Common::String>\20const&\29
[asyncify] Common::RemapWidget::save\28\29 can change the state due to Common::Keymap::saveMappings\28\29
[asyncify] Common::Keymapper::~Keymapper\28\29 can change the state due to Common::Keymapper::clear\28\29
[asyncify] Common::Keymapper::mapEvent\28Common::Event\20const&\2c\20Common::List<Common::Event>&\29 can change the state due to Common::Keymapper::hardcodedEventMapping\28Common::Event\29
[asyncify] Common::InputWatcher::notifyEvent\28Common::Event\20const&\29 can change the state due to Common::Keymapper::findHardwareInput\28Common::Event\20const&\29
[asyncify] Common::RemapWidget::~RemapWidget\28\29.1 can change the state due to Common::RemapWidget::~RemapWidget\28\29
[asyncify] Common::RemapWidget::load\28\29 can change the state due to Common::RemapWidget::reflowActionWidgets\28\29
[asyncify] GUI::OptionsDialog::handleOtherEvent\28Common::Event\20const&\29 can change the state due to Common::RemapWidget::handleInputChanged\28\29
[asyncify] OSystem_SDL::logMessage\28LogMessageType::Type\2c\20char\20const*\29 can change the state due to Backends::Log::Log::print\28char\20const*\2c\20bool\29
[asyncify] virtual\20thunk\20to\20OSystem_SDL::logMessage\28LogMessageType::Type\2c\20char\20const*\29 can change the state due to Backends::Log::Log::print\28char\20const*\2c\20bool\29
[asyncify] legalstub$Common::OutSaveFile::pos\28\29\20const can change the state due to Common::OutSaveFile::pos\28\29\20const
[asyncify] legalstub$Common::OutSaveFile::seek\28long\20long\2c\20int\29 can change the state due to Common::OutSaveFile::seek\28long\20long\2c\20int\29
[asyncify] legalstub$Common::OutSaveFile::size\28\29\20const can change the state due to Common::OutSaveFile::size\28\29\20const
[asyncify] timer_handler\28unsigned\20int\2c\20void*\29 can change the state due to DefaultTimerManager::handler\28\29
[asyncify] OpenGL::Pipeline::activateInternal\28\29 can change the state due to OpenGL::Framebuffer::activate\28OpenGL::Pipeline*\29
[asyncify] OpenGL::Pipeline::setFramebuffer\28OpenGL::Framebuffer*\29 can change the state due to OpenGL::Framebuffer::activate\28OpenGL::Pipeline*\29
[asyncify] OpenGL::Framebuffer::enableBlend\28OpenGL::Framebuffer::BlendMode\29 can change the state due to OpenGL::Framebuffer::applyBlendState\28\29
[asyncify] OpenGL::LibRetroTextureTarget::setScaledSize\28unsigned\20int\2c\20unsigned\20int\2c\20Common::Rect\20const&\29 can change the state due to OpenGL::Framebuffer::applyViewport\28\29
[asyncify] OpenGL::Pipeline::deactivateInternal\28\29 can change the state due to OpenGL::Framebuffer::deactivate\28\29
[asyncify] OpenGL::Pipeline::~Pipeline\28\29 can change the state due to OpenGL::Framebuffer::deactivate\28\29
[asyncify] OpenGL::TextureTarget::~TextureTarget\28\29.1 can change the state due to OpenGL::TextureTarget::~TextureTarget\28\29
[asyncify] OpenGL::LibRetroTextureTarget::~LibRetroTextureTarget\28\29 can change the state due to OpenGL::TextureTarget::~TextureTarget\28\29
[asyncify] OpenGL::TextureCLUT8GPU::allocate\28unsigned\20int\2c\20unsigned\20int\29 can change the state due to OpenGL::TextureTarget::setSize\28unsigned\20int\2c\20unsigned\20int\29
[asyncify] OpenGLSdlGraphicsManager::~OpenGLSdlGraphicsManager\28\29 can change the state due to OpenGL::OpenGLGraphicsManager::~OpenGLGraphicsManager\28\29
[asyncify] OpenGLSdlGraphicsManager::~OpenGLSdlGraphicsManager\28\29.1 can change the state due to OpenGL::OpenGLGraphicsManager::~OpenGLGraphicsManager\28\29
[asyncify] virtual\20thunk\20to\20OpenGLSdlGraphicsManager::~OpenGLSdlGraphicsManager\28\29 can change the state due to OpenGL::OpenGLGraphicsManager::~OpenGLGraphicsManager\28\29
[asyncify] non-virtual\20thunk\20to\20OpenGLSdlGraphicsManager::~OpenGLSdlGraphicsManager\28\29 can change the state due to OpenGL::OpenGLGraphicsManager::~OpenGLGraphicsManager\28\29
[asyncify] OpenGLSdlGraphicsManager::~OpenGLSdlGraphicsManager\28\29.2 can change the state due to OpenGL::OpenGLGraphicsManager::~OpenGLGraphicsManager\28\29
[asyncify] virtual\20thunk\20to\20OpenGLSdlGraphicsManager::~OpenGLSdlGraphicsManager\28\29.1 can change the state due to OpenGL::OpenGLGraphicsManager::~OpenGLGraphicsManager\28\29
[asyncify] non-virtual\20thunk\20to\20OpenGLSdlGraphicsManager::~OpenGLSdlGraphicsManager\28\29.1 can change the state due to OpenGL::OpenGLGraphicsManager::~OpenGLGraphicsManager\28\29
[asyncify] virtual\20thunk\20to\20OpenGL::OpenGLGraphicsManager::setFeatureState\28OSystem::Feature\2c\20bool\29 can change the state due to OpenGL::OpenGLGraphicsManager::setFeatureState\28OSystem::Feature\2c\20bool\29
[asyncify] OpenGLSdlGraphicsManager::setFeatureState\28OSystem::Feature\2c\20bool\29 can change the state due to OpenGL::OpenGLGraphicsManager::setFeatureState\28OSystem::Feature\2c\20bool\29
[asyncify] virtual\20thunk\20to\20OpenGLSdlGraphicsManager::setFeatureState\28OSystem::Feature\2c\20bool\29 can change the state due to OpenGL::OpenGLGraphicsManager::setFeatureState\28OSystem::Feature\2c\20bool\29
[asyncify] virtual\20thunk\20to\20OpenGL::OpenGLGraphicsManager::setScaler\28unsigned\20int\2c\20int\29 can change the state due to OpenGL::OpenGLGraphicsManager::setScaler\28unsigned\20int\2c\20int\29
[asyncify] virtual\20thunk\20to\20OpenGL::OpenGLGraphicsManager::endGFXTransaction\28\29 can change the state due to OpenGL::OpenGLGraphicsManager::endGFXTransaction\28\29
[asyncify] virtual\20thunk\20to\20OpenGL::OpenGLGraphicsManager::updateScreen\28\29 can change the state due to OpenGL::OpenGLGraphicsManager::updateScreen\28\29
[asyncify] OpenGLSdlGraphicsManager::updateScreen\28\29 can change the state due to OpenGL::OpenGLGraphicsManager::updateScreen\28\29
[asyncify] virtual\20thunk\20to\20OpenGLSdlGraphicsManager::updateScreen\28\29 can change the state due to OpenGL::OpenGLGraphicsManager::updateScreen\28\29
[asyncify] virtual\20thunk\20to\20OpenGL::OpenGLGraphicsManager::grabOverlay\28Graphics::Surface&\29\20const can change the state due to OpenGL::OpenGLGraphicsManager::grabOverlay\28Graphics::Surface&\29\20const
[asyncify] virtual\20thunk\20to\20OpenGL::OpenGLGraphicsManager::setMouseCursor\28void\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20int\2c\20bool\2c\20Graphics::PixelFormat\20const*\29 can change the state due to OpenGL::OpenGLGraphicsManager::setMouseCursor\28void\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20int\2c\20bool\2c\20Graphics::PixelFormat\20const*\29
[asyncify] virtual\20thunk\20to\20OpenGL::OpenGLGraphicsManager::displayActivityIconOnOSD\28Graphics::Surface\20const*\29 can change the state due to OpenGL::OpenGLGraphicsManager::displayActivityIconOnOSD\28Graphics::Surface\20const*\29
[asyncify] virtual\20thunk\20to\20OpenGL::OpenGLGraphicsManager::setPalette\28unsigned\20char\20const*\2c\20unsigned\20int\2c\20unsigned\20int\29 can change the state due to OpenGL::OpenGLGraphicsManager::setPalette\28unsigned\20char\20const*\2c\20unsigned\20int\2c\20unsigned\20int\29
[asyncify] virtual\20thunk\20to\20OpenGL::OpenGLGraphicsManager::handleResizeImpl\28int\2c\20int\29 can change the state due to OpenGL::OpenGLGraphicsManager::handleResizeImpl\28int\2c\20int\29
[asyncify] OpenGLSdlGraphicsManager::handleResizeImpl\28int\2c\20int\29 can change the state due to OpenGL::OpenGLGraphicsManager::handleResizeImpl\28int\2c\20int\29
[asyncify] non-virtual\20thunk\20to\20OpenGLSdlGraphicsManager::handleResizeImpl\28int\2c\20int\29 can change the state due to OpenGL::OpenGLGraphicsManager::handleResizeImpl\28int\2c\20int\29
[asyncify] virtual\20thunk\20to\20OpenGLSdlGraphicsManager::handleResizeImpl\28int\2c\20int\29 can change the state due to OpenGL::OpenGLGraphicsManager::handleResizeImpl\28int\2c\20int\29
[asyncify] virtual\20thunk\20to\20OpenGL::OpenGLGraphicsManager::recalculateDisplayAreas\28\29 can change the state due to OpenGL::OpenGLGraphicsManager::recalculateDisplayAreas\28\29
[asyncify] OpenGLSdlGraphicsManager::saveScreenshot\28Common::String\20const&\29\20const can change the state due to OpenGL::OpenGLGraphicsManager::saveScreenshot\28Common::String\20const&\29\20const
[asyncify] non-virtual\20thunk\20to\20OpenGLSdlGraphicsManager::saveScreenshot\28Common::String\20const&\29\20const can change the state due to OpenGL::OpenGLGraphicsManager::saveScreenshot\28Common::String\20const&\29\20const
[asyncify] OpenGL::TextureTarget::create\28\29 can change the state due to OpenGL::GLTexture::create\28\29
[asyncify] OpenGL::GLTexture::GLTexture\28unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int\29 can change the state due to OpenGL::GLTexture::create\28\29
[asyncify] OpenGL::Texture::recreate\28\29 can change the state due to OpenGL::GLTexture::create\28\29
[asyncify] OpenGL::Texture::~Texture\28\29 can change the state due to OpenGL::GLTexture::~GLTexture\28\29
[asyncify] OpenGL::TextureRGB555::~TextureRGB555\28\29 can change the state due to OpenGL::GLTexture::~GLTexture\28\29
[asyncify] OpenGL::FakeTexture::~FakeTexture\28\29.1 can change the state due to OpenGL::GLTexture::~GLTexture\28\29
[asyncify] OpenGL::TextureRGBA8888Swap::~TextureRGBA8888Swap\28\29 can change the state due to OpenGL::GLTexture::~GLTexture\28\29
[asyncify] OpenGL::Texture::enableLinearFiltering\28bool\29 can change the state due to OpenGL::GLTexture::enableLinearFiltering\28bool\29
[asyncify] OpenGL::TextureCLUT8GPU::enableLinearFiltering\28bool\29 can change the state due to OpenGL::GLTexture::enableLinearFiltering\28bool\29
[asyncify] OpenGL::LibRetroPipeline::beginScaling\28\29 can change the state due to OpenGL::GLTexture::enableLinearFiltering\28bool\29
[asyncify] OpenGL::Texture::allocate\28unsigned\20int\2c\20unsigned\20int\29 can change the state due to OpenGL::GLTexture::setSize\28unsigned\20int\2c\20unsigned\20int\29
[asyncify] OpenGL::ScaledTexture::allocate\28unsigned\20int\2c\20unsigned\20int\29 can change the state due to OpenGL::GLTexture::setSize\28unsigned\20int\2c\20unsigned\20int\29
[asyncify] OpenGL::OpenGLGraphicsManager::copyRectToScreen\28void\20const*\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\29 can change the state due to OpenGL::Surface::copyRectToTexture\28unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int\2c\20void\20const*\2c\20unsigned\20int\29
[asyncify] virtual\20thunk\20to\20OpenGL::OpenGLGraphicsManager::copyRectToScreen\28void\20const*\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\29 can change the state due to OpenGL::Surface::copyRectToTexture\28unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int\2c\20void\20const*\2c\20unsigned\20int\29
[asyncify] OpenGL::OpenGLGraphicsManager::copyRectToOverlay\28void\20const*\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\29 can change the state due to OpenGL::Surface::copyRectToTexture\28unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int\2c\20void\20const*\2c\20unsigned\20int\29
[asyncify] virtual\20thunk\20to\20OpenGL::OpenGLGraphicsManager::copyRectToOverlay\28void\20const*\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\29 can change the state due to OpenGL::Surface::copyRectToTexture\28unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int\2c\20void\20const*\2c\20unsigned\20int\29
[asyncify] OpenGL::OpenGLGraphicsManager::fillScreen\28unsigned\20int\29 can change the state due to OpenGL::Surface::fill\28unsigned\20int\29
[asyncify] virtual\20thunk\20to\20OpenGL::OpenGLGraphicsManager::fillScreen\28unsigned\20int\29 can change the state due to OpenGL::Surface::fill\28unsigned\20int\29
[asyncify] OpenGL::OpenGLGraphicsManager::clearOverlay\28\29 can change the state due to OpenGL::Surface::fill\28unsigned\20int\29
[asyncify] virtual\20thunk\20to\20OpenGL::OpenGLGraphicsManager::clearOverlay\28\29 can change the state due to OpenGL::Surface::fill\28unsigned\20int\29
[asyncify] OpenGL::ScaledTexture::~ScaledTexture\28\29.1 can change the state due to OpenGL::ScaledTexture::~ScaledTexture\28\29
[asyncify] OpenGL::OpenGLGraphicsManager::createSurface\28Graphics::PixelFormat\20const&\2c\20bool\2c\20bool\29 can change the state due to OpenGL::TextureCLUT8GPU::TextureCLUT8GPU\28\29
[asyncify] OpenGL::TextureCLUT8GPU::~TextureCLUT8GPU\28\29.1 can change the state due to OpenGL::TextureCLUT8GPU::~TextureCLUT8GPU\28\29
[asyncify] OpenGL::LibRetroPipeline::activateInternal\28\29 can change the state due to OpenGL::Pipeline::activate\28\29
[asyncify] OpenGL::FakePipeline::~FakePipeline\28\29 can change the state due to OpenGL::Pipeline::deactivate\28\29
[asyncify] OpenGL::ShaderPipeline::~ShaderPipeline\28\29 can change the state due to OpenGL::Pipeline::deactivate\28\29
[asyncify] OpenGL::LibRetroPipeline::open\28Common::FSNode\20const&\29 can change the state due to OpenGL::LibRetroPipeline::close\28\29
[asyncify] OpenGL::LibRetroPipeline::setDisplaySizes\28unsigned\20int\2c\20unsigned\20int\2c\20Common::Rect\20const&\29 can change the state due to OpenGL::LibRetroPipeline::setupFBOs\28\29
[asyncify] OpenGL::LibRetroPipeline::setPipelineState\28\29 can change the state due to OpenGL::LibRetroPipeline::setupFBOs\28\29
[asyncify] OpenGL::LibRetroPipeline::~LibRetroPipeline\28\29.1 can change the state due to OpenGL::LibRetroPipeline::~LibRetroPipeline\28\29
[asyncify] OpenGL::LibRetro::PresetParser::parseStream\28Common::SeekableReadStream&\29 can change the state due to OpenGL::LibRetro::ShaderPreset::~ShaderPreset\28\29
[asyncify] OpenGL::LibRetro::PresetParser::~PresetParser\28\29 can change the state due to OpenGL::LibRetro::ShaderPreset::~ShaderPreset\28\29
[asyncify] OpenGL::LibRetroPipeline::Pass::buildTexSamplers\28unsigned\20int\2c\20Common::Array<OpenGL::LibRetroPipeline::Texture>\20const&\2c\20Common::Array<Common::String>\20const&\29 can change the state due to OpenGL::LibRetroPipeline::Pass::addTexSampler\28Common::String\20const&\2c\20unsigned\20int*\2c\20OpenGL::LibRetroPipeline::Pass::TextureSampler::Type\2c\20unsigned\20int\2c\20bool\29
[asyncify] SdlEventSource::SdlEventSource\28\29 can change the state due to SdlEventSource::loadGameControllerMappingFile\28\29
[asyncify] LegacySdlEventSource::handleMouseMotion\28SDL_Event&\2c\20Common::Event&\29 can change the state due to SdlEventSource::handleMouseMotion\28SDL_Event&\2c\20Common::Event&\29
[asyncify] LegacySdlEventSource::handleMouseButtonDown\28SDL_Event&\2c\20Common::Event&\29 can change the state due to SdlEventSource::handleMouseButtonDown\28SDL_Event&\2c\20Common::Event&\29
[asyncify] LegacySdlEventSource::handleMouseButtonUp\28SDL_Event&\2c\20Common::Event&\29 can change the state due to SdlEventSource::handleMouseButtonUp\28SDL_Event&\2c\20Common::Event&\29
[asyncify] LegacySdlEventSource::handleControllerButton\28SDL_Event\20const&\2c\20Common::Event&\2c\20bool\29 can change the state due to SdlEventSource::handleControllerButton\28SDL_Event\20const&\2c\20Common::Event&\2c\20bool\29
[asyncify] virtual\20thunk\20to\20SdlGraphicsManager::saveScreenshot\28\29 can change the state due to SdlGraphicsManager::saveScreenshot\28\29
[asyncify] OSystem_SDL::getGlobalKeymaps\28\29 can change the state due to SdlGraphicsManager::getKeymap\28\29
[asyncify] virtual\20thunk\20to\20OSystem_SDL::getGlobalKeymaps\28\29 can change the state due to SdlGraphicsManager::getKeymap\28\29
[asyncify] SurfaceSdlGraphicsManager::~SurfaceSdlGraphicsManager\28\29.1 can change the state due to SurfaceSdlGraphicsManager::~SurfaceSdlGraphicsManager\28\29
[asyncify] virtual\20thunk\20to\20SurfaceSdlGraphicsManager::~SurfaceSdlGraphicsManager\28\29 can change the state due to SurfaceSdlGraphicsManager::~SurfaceSdlGraphicsManager\28\29
[asyncify] SurfaceSdlGraphicsManager::~SurfaceSdlGraphicsManager\28\29.2 can change the state due to SurfaceSdlGraphicsManager::~SurfaceSdlGraphicsManager\28\29
[asyncify] virtual\20thunk\20to\20SurfaceSdlGraphicsManager::~SurfaceSdlGraphicsManager\28\29.1 can change the state due to SurfaceSdlGraphicsManager::~SurfaceSdlGraphicsManager\28\29
[asyncify] virtual\20thunk\20to\20SurfaceSdlGraphicsManager::setFeatureState\28OSystem::Feature\2c\20bool\29 can change the state due to SurfaceSdlGraphicsManager::setFeatureState\28OSystem::Feature\2c\20bool\29
[asyncify] virtual\20thunk\20to\20SurfaceSdlGraphicsManager::endGFXTransaction\28\29 can change the state due to SurfaceSdlGraphicsManager::endGFXTransaction\28\29
[asyncify] virtual\20thunk\20to\20SurfaceSdlGraphicsManager::setScaler\28unsigned\20int\2c\20int\29 can change the state due to SurfaceSdlGraphicsManager::setScaler\28unsigned\20int\2c\20int\29
[asyncify] virtual\20thunk\20to\20SurfaceSdlGraphicsManager::initSize\28unsigned\20int\2c\20unsigned\20int\2c\20Graphics::PixelFormat\20const*\29 can change the state due to SurfaceSdlGraphicsManager::initSize\28unsigned\20int\2c\20unsigned\20int\2c\20Graphics::PixelFormat\20const*\29
[asyncify] virtual\20thunk\20to\20SurfaceSdlGraphicsManager::copyRectToScreen\28void\20const*\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\29 can change the state due to SurfaceSdlGraphicsManager::copyRectToScreen\28void\20const*\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\29
[asyncify] virtual\20thunk\20to\20SurfaceSdlGraphicsManager::setPalette\28unsigned\20char\20const*\2c\20unsigned\20int\2c\20unsigned\20int\29 can change the state due to SurfaceSdlGraphicsManager::setPalette\28unsigned\20char\20const*\2c\20unsigned\20int\2c\20unsigned\20int\29
[asyncify] virtual\20thunk\20to\20SurfaceSdlGraphicsManager::setFocusRectangle\28Common::Rect\20const&\29 can change the state due to SurfaceSdlGraphicsManager::setFocusRectangle\28Common::Rect\20const&\29
[asyncify] virtual\20thunk\20to\20SurfaceSdlGraphicsManager::copyRectToOverlay\28void\20const*\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\29 can change the state due to SurfaceSdlGraphicsManager::copyRectToOverlay\28void\20const*\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\29
[asyncify] virtual\20thunk\20to\20SurfaceSdlGraphicsManager::setMouseCursor\28void\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20int\2c\20bool\2c\20Graphics::PixelFormat\20const*\29 can change the state due to SurfaceSdlGraphicsManager::setMouseCursor\28void\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20int\2c\20bool\2c\20Graphics::PixelFormat\20const*\29
[asyncify] virtual\20thunk\20to\20SurfaceSdlGraphicsManager::displayMessageOnOSD\28Common::U32String\20const&\29 can change the state due to SurfaceSdlGraphicsManager::displayMessageOnOSD\28Common::U32String\20const&\29
[asyncify] SdlMixerManager::~SdlMixerManager\28\29.1 can change the state due to SdlMixerManager::~SdlMixerManager\28\29
[asyncify] POSIXPlugin::loadPlugin\28\29 can change the state due to DynamicPlugin::loadPlugin\28\29
[asyncify] SDLPlugin::loadPlugin\28\29 can change the state due to DynamicPlugin::loadPlugin\28\29
[asyncify] OpenGL::FrameBuffer::FrameBuffer\28unsigned\20int\2c\20unsigned\20int\29 can change the state due to OpenGL::FrameBuffer::init\28\29
[asyncify] OpenGL::FrameBuffer::FrameBuffer\28unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int\29 can change the state due to OpenGL::FrameBuffer::init\28\29
[asyncify] OpenGL::FrameBuffer::~FrameBuffer\28\29.1 can change the state due to OpenGL::FrameBuffer::~FrameBuffer\28\29
[asyncify] OpenGL::TextureGL::~TextureGL\28\29.1 can change the state due to OpenGL::TextureGL::~TextureGL\28\29
[asyncify] non-virtual\20thunk\20to\20OpenGLSdlGraphicsManager::notifyResize\28int\2c\20int\29 can change the state due to OpenGLSdlGraphicsManager::notifyResize\28int\2c\20int\29
[asyncify] OpenGLSdlGraphicsManager::loadVideoMode\28unsigned\20int\2c\20unsigned\20int\2c\20Graphics::PixelFormat\20const&\29 can change the state due to OpenGLSdlGraphicsManager::setupMode\28unsigned\20int\2c\20unsigned\20int\29
[asyncify] non-virtual\20thunk\20to\20OpenGLSdlGraphicsManager::notifyEvent\28Common::Event\20const&\29 can change the state due to OpenGLSdlGraphicsManager::notifyEvent\28Common::Event\20const&\29
[asyncify] OpenGLSdlGraphics3dManager::~OpenGLSdlGraphics3dManager\28\29 can change the state due to OpenGLSdlGraphics3dManager::closeOverlay\28\29
[asyncify] OpenGLSdlGraphics3dManager::~OpenGLSdlGraphics3dManager\28\29.1 can change the state due to OpenGLSdlGraphics3dManager::closeOverlay\28\29
[asyncify] virtual\20thunk\20to\20OpenGLSdlGraphics3dManager::~OpenGLSdlGraphics3dManager\28\29 can change the state due to OpenGLSdlGraphics3dManager::closeOverlay\28\29
[asyncify] OpenGLSdlGraphics3dManager::~OpenGLSdlGraphics3dManager\28\29.2 can change the state due to OpenGLSdlGraphics3dManager::closeOverlay\28\29
[asyncify] virtual\20thunk\20to\20OpenGLSdlGraphics3dManager::~OpenGLSdlGraphics3dManager\28\29.1 can change the state due to OpenGLSdlGraphics3dManager::closeOverlay\28\29
[asyncify] OpenGLSdlGraphics3dManager::setFeatureState\28OSystem::Feature\2c\20bool\29 can change the state due to OpenGLSdlGraphics3dManager::createOrUpdateScreen\28\29
[asyncify] virtual\20thunk\20to\20OpenGLSdlGraphics3dManager::setFeatureState\28OSystem::Feature\2c\20bool\29 can change the state due to OpenGLSdlGraphics3dManager::createOrUpdateScreen\28\29
[asyncify] OpenGLSdlGraphics3dManager::endGFXTransaction\28\29 can change the state due to OpenGLSdlGraphics3dManager::setupScreen\28\29
[asyncify] virtual\20thunk\20to\20OpenGLSdlGraphics3dManager::endGFXTransaction\28\29 can change the state due to OpenGLSdlGraphics3dManager::setupScreen\28\29
[asyncify] OpenGLSdlGraphics3dManager::initSize\28unsigned\20int\2c\20unsigned\20int\2c\20Graphics::PixelFormat\20const*\29 can change the state due to OpenGLSdlGraphics3dManager::setupScreen\28\29
[asyncify] virtual\20thunk\20to\20OpenGLSdlGraphics3dManager::initSize\28unsigned\20int\2c\20unsigned\20int\2c\20Graphics::PixelFormat\20const*\29 can change the state due to OpenGLSdlGraphics3dManager::setupScreen\28\29
[asyncify] virtual\20thunk\20to\20OpenGLSdlGraphics3dManager::handleResizeImpl\28int\2c\20int\29 can change the state due to OpenGLSdlGraphics3dManager::handleResizeImpl\28int\2c\20int\29
[asyncify] virtual\20thunk\20to\20OpenGLSdlGraphics3dManager::updateScreen\28\29 can change the state due to OpenGLSdlGraphics3dManager::updateScreen\28\29
[asyncify] virtual\20thunk\20to\20OpenGLSdlGraphics3dManager::showOverlay\28bool\29 can change the state due to OpenGLSdlGraphics3dManager::showOverlay\28bool\29
[asyncify] ChRootFilesystemNode::ChRootFilesystemNode\28Common::String\20const&\2c\20Common::String\20const&\29 can change the state due to POSIXFilesystemNode::POSIXFilesystemNode\28Common::String\20const&\29
[asyncify] POSIXFilesystemNode::makeNode\28Common::String\20const&\29\20const can change the state due to POSIXFilesystemNode::POSIXFilesystemNode\28Common::String\20const&\29
[asyncify] POSIXFilesystemFactory::makeRootFileNode\28\29\20const can change the state due to POSIXFilesystemNode::POSIXFilesystemNode\28Common::String\20const&\29
[asyncify] POSIXFilesystemFactory::makeCurrentDirectoryFileNode\28\29\20const can change the state due to POSIXFilesystemNode::POSIXFilesystemNode\28Common::String\20const&\29
[asyncify] POSIXFilesystemFactory::makeFileNodePath\28Common::String\20const&\29\20const can change the state due to POSIXFilesystemNode::POSIXFilesystemNode\28Common::String\20const&\29
[asyncify] DrivePOSIXFilesystemNode::DrivePOSIXFilesystemNode\28Common::String\20const&\2c\20DrivePOSIXFilesystemNode::Config\20const&\29 can change the state due to POSIXFilesystemNode::POSIXFilesystemNode\28Common::String\20const&\29
[asyncify] DrivePOSIXFilesystemNode::getParent\28\29\20const can change the state due to POSIXFilesystemNode::getParent\28\29\20const
[asyncify] ChRootFilesystemNode::~ChRootFilesystemNode\28\29.1 can change the state due to ChRootFilesystemNode::~ChRootFilesystemNode\28\29
[asyncify] Video::ThreeDOMovieDecoder::~ThreeDOMovieDecoder\28\29.1 can change the state due to Video::ThreeDOMovieDecoder::~ThreeDOMovieDecoder\28\29
[asyncify] Video::ThreeDOMovieDecoder::StreamVideoTrack::~StreamVideoTrack\28\29.1 can change the state due to Video::ThreeDOMovieDecoder::StreamVideoTrack::~StreamVideoTrack\28\29
[asyncify] Video::ThreeDOMovieDecoder::StreamAudioTrack::~StreamAudioTrack\28\29.1 can change the state due to Video::ThreeDOMovieDecoder::StreamAudioTrack::~StreamAudioTrack\28\29
[asyncify] Video::AVIDecoder::~AVIDecoder\28\29 can change the state due to Video::AVIDecoder::close\28\29
[asyncify] Video::AVIDecoder::readNextPacket\28\29 can change the state due to Video::AVIDecoder::handleNextPacket\28Video::AVIDecoder::TrackStatus&\29
[asyncify] Video::AVIDecoder::AVIVideoTrack::~AVIVideoTrack\28\29.1 can change the state due to Video::AVIDecoder::AVIVideoTrack::~AVIVideoTrack\28\29
[asyncify] Video::AVIDecoder::AVIAudioTrack::~AVIAudioTrack\28\29.1 can change the state due to Video::AVIDecoder::AVIAudioTrack::~AVIAudioTrack\28\29
[asyncify] Video::AdvancedVMDDecoder::setSurfaceMemory\28void*\2c\20unsigned\20short\2c\20unsigned\20short\2c\20unsigned\20char\29 can change the state due to Video::CoktelDecoder::setSurfaceMemory\28void*\2c\20unsigned\20short\2c\20unsigned\20short\2c\20unsigned\20char\29
[asyncify] Video::PreIMDDecoder::~PreIMDDecoder\28\29 can change the state due to Video::PreIMDDecoder::close\28\29
[asyncify] Video::IMDDecoder::~IMDDecoder\28\29 can change the state due to Video::IMDDecoder::close\28\29
[asyncify] Video::VMDDecoder::~VMDDecoder\28\29 can change the state due to Video::VMDDecoder::close\28\29
[asyncify] Video::AdvancedVMDDecoder::close\28\29 can change the state due to Video::VMDDecoder::close\28\29
[asyncify] Video::VMDDecoder::assessAudioProperties\28\29 can change the state due to Video::VMDDecoder::createAudioStream\28\29
[asyncify] Video::VMDDecoder::colorModeChanged\28\29 can change the state due to Video::VMDDecoder::openExternalCodec\28\29
[asyncify] Video::VMDDecoder::assessVideoProperties\28\29 can change the state due to Video::VMDDecoder::openExternalCodec\28\29
[asyncify] Video::VMDDecoder::filledSoundSlices\28unsigned\20int\2c\20unsigned\20int\29 can change the state due to Video::VMDDecoder::filledSoundSlice\28unsigned\20int\29
[asyncify] Video::VMDDecoder::create16bitADPCM\28Common::SeekableReadStream*\29 can change the state due to Video::VMD_ADPCMStream::VMD_ADPCMStream\28Common::SeekableReadStream*\2c\20DisposeAfterUse::Flag\2c\20int\2c\20int\29
[asyncify] Video::AdvancedVMDDecoder::~AdvancedVMDDecoder\28\29.1 can change the state due to Video::AdvancedVMDDecoder::~AdvancedVMDDecoder\28\29
[asyncify] legalstub$Common::MemoryReadWriteStream::seek\28long\20long\2c\20int\29 can change the state due to Common::MemoryReadWriteStream::seek\28long\20long\2c\20int\29
[asyncify] legalstub$non-virtual\20thunk\20to\20Common::MemoryReadWriteStream::seek\28long\20long\2c\20int\29 can change the state due to non-virtual\20thunk\20to\20Common::MemoryReadWriteStream::seek\28long\20long\2c\20int\29
[asyncify] Video::DXADecoder::DXAVideoTrack::~DXAVideoTrack\28\29.1 can change the state due to Video::DXADecoder::DXAVideoTrack::~DXAVideoTrack\28\29
[asyncify] Video::FlicDecoder::FlicVideoTrack::~FlicVideoTrack\28\29.1 can change the state due to Video::FlicDecoder::FlicVideoTrack::~FlicVideoTrack\28\29
[asyncify] Video::HNMDecoder::~HNMDecoder\28\29.1 can change the state due to Video::HNMDecoder::~HNMDecoder\28\29
[asyncify] Video::HNMDecoder::HNM4VideoTrack::decodeChunk\28unsigned\20char*\2c\20unsigned\20int\2c\20unsigned\20short\2c\20unsigned\20short\29 can change the state due to Video::HNMDecoder::HNM4VideoTrack::decodeIntraframe\28unsigned\20char*\2c\20unsigned\20int\29
[asyncify] Video::HNMDecoder::HNM6VideoTrack::~HNM6VideoTrack\28\29.1 can change the state due to Video::HNMDecoder::HNM6VideoTrack::~HNM6VideoTrack\28\29
[asyncify] Video::HNMDecoder::DPCMAudioTrack::~DPCMAudioTrack\28\29.1 can change the state due to Video::HNMDecoder::DPCMAudioTrack::~DPCMAudioTrack\28\29
[asyncify] Video::HNMDecoder::APCAudioTrack::~APCAudioTrack\28\29.1 can change the state due to Video::HNMDecoder::APCAudioTrack::~APCAudioTrack\28\29
[asyncify] Video::MPEGPSDecoder::~MPEGPSDecoder\28\29 can change the state due to Video::MPEGPSDecoder::MPEGPSDemuxer::close\28\29
[asyncify] Video::MPEGPSDecoder::MPEGPSDemuxer::loadStream\28Common::SeekableReadStream*\29 can change the state due to Video::MPEGPSDecoder::MPEGPSDemuxer::close\28\29
[asyncify] Video::MPEGPSDecoder::close\28\29 can change the state due to Video::MPEGPSDecoder::MPEGPSDemuxer::close\28\29
[asyncify] Video::MPEGPSDecoder::MPEGPSDemuxer::~MPEGPSDemuxer\28\29 can change the state due to Video::MPEGPSDecoder::MPEGPSDemuxer::close\28\29
[asyncify] Video::MPEGPSDecoder::MPEGPSDemuxer::getNextPacket\28unsigned\20int\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\29 can change the state due to Video::MPEGPSDecoder::MPEGPSDemuxer::queueNextPacket\28\29
[asyncify] Video::MPEGPSDecoder::MPEGVideoTrack::MPEGVideoTrack\28Common::SeekableReadStream*\2c\20Graphics::PixelFormat\20const&\29 can change the state due to Video::MPEGPSDecoder::MPEGVideoTrack::findDimensions\28Common::SeekableReadStream*\2c\20Graphics::PixelFormat\20const&\29
[asyncify] non-virtual\20thunk\20to\20Video::MPEGPSDecoder::PS2AudioTrack::~PS2AudioTrack\28\29 can change the state due to Video::MPEGPSDecoder::PS2AudioTrack::~PS2AudioTrack\28\29
[asyncify] Video::MPEGPSDecoder::PS2AudioTrack::~PS2AudioTrack\28\29.1 can change the state due to Video::MPEGPSDecoder::PS2AudioTrack::~PS2AudioTrack\28\29
[asyncify] non-virtual\20thunk\20to\20Video::MPEGPSDecoder::PS2AudioTrack::~PS2AudioTrack\28\29.1 can change the state due to Video::MPEGPSDecoder::PS2AudioTrack::~PS2AudioTrack\28\29
[asyncify] non-virtual\20thunk\20to\20Video::MPEGPSDecoder::PS2AudioTrack::sendPacket\28Common::SeekableReadStream*\2c\20unsigned\20int\2c\20unsigned\20int\29 can change the state due to Video::MPEGPSDecoder::PS2AudioTrack::sendPacket\28Common::SeekableReadStream*\2c\20unsigned\20int\2c\20unsigned\20int\29
[asyncify] Video::MveDecoder::~MveDecoder\28\29.1 can change the state due to Video::MveDecoder::~MveDecoder\28\29
[asyncify] Video::PacoDecoder::~PacoDecoder\28\29.1 can change the state due to Video::PacoDecoder::~PacoDecoder\28\29
[asyncify] Video::PacoDecoder::PacoAudioTrack::~PacoAudioTrack\28\29.1 can change the state due to Video::PacoDecoder::PacoAudioTrack::~PacoAudioTrack\28\29
[asyncify] Video::PSXStreamDecoder::~PSXStreamDecoder\28\29.1 can change the state due to Video::PSXStreamDecoder::~PSXStreamDecoder\28\29
[asyncify] Video::PSXStreamDecoder::PSXAudioTrack::~PSXAudioTrack\28\29.1 can change the state due to Video::PSXStreamDecoder::PSXAudioTrack::~PSXAudioTrack\28\29
[asyncify] Video::QuickTimeDecoder::loadFile\28Common::Path\20const&\29 can change the state due to Video::QuickTimeDecoder::init\28\29
[asyncify] Video::QuickTimeDecoder::loadStream\28Common::SeekableReadStream*\29 can change the state due to Video::QuickTimeDecoder::init\28\29
[asyncify] Video::QuickTimeDecoder::decodeNextFrame\28\29 can change the state due to Video::QuickTimeDecoder::updateAudioBuffer\28\29
[asyncify] non-virtual\20thunk\20to\20Video::QuickTimeDecoder::readSampleDesc\28Common::QuickTimeParser::Track*\2c\20unsigned\20int\2c\20unsigned\20int\29 can change the state due to Video::QuickTimeDecoder::readSampleDesc\28Common::QuickTimeParser::Track*\2c\20unsigned\20int\2c\20unsigned\20int\29
[asyncify] Video::QuickTimeDecoder::VideoSampleDesc::~VideoSampleDesc\28\29.1 can change the state due to Video::QuickTimeDecoder::VideoSampleDesc::~VideoSampleDesc\28\29
[asyncify] Video::QuickTimeDecoder::VideoTrackHandler::enterNewEditListEntry\28bool\2c\20bool\29 can change the state due to Video::QuickTimeDecoder::VideoTrackHandler::bufferNextFrame\28\29
[asyncify] Video::QuickTimeDecoder::VideoTrackHandler::setReverse\28bool\29 can change the state due to Video::QuickTimeDecoder::VideoTrackHandler::bufferNextFrame\28\29
[asyncify] Video::SmackerDecoder::~SmackerDecoder\28\29.1 can change the state due to Video::SmackerDecoder::~SmackerDecoder\28\29
[asyncify] Video::SmackerDecoder::SmackerAudioTrack::~SmackerAudioTrack\28\29.1 can change the state due to Video::SmackerDecoder::SmackerAudioTrack::~SmackerAudioTrack\28\29
[asyncify] Video::SmackerDecoder::getNextDirtyRect\28\29 can change the state due to Video::SmackerDecoder::SmackerVideoTrack::getNextDirtyRect\28\29
[asyncify] Video::ThreeDOMovieDecoder::ThreeDOMovieDecoder\28\29 can change the state due to Video::VideoDecoder::VideoDecoder\28\29
[asyncify] Video::AVIDecoder::AVIDecoder\28\29 can change the state due to Video::VideoDecoder::VideoDecoder\28\29
[asyncify] Video::AVIDecoder::AVIDecoder\28Common::Rational\20const&\29 can change the state due to Video::VideoDecoder::VideoDecoder\28\29
[asyncify] Video::DXADecoder::DXADecoder\28\29 can change the state due to Video::VideoDecoder::VideoDecoder\28\29
[asyncify] Video::FlicDecoder::FlicDecoder\28\29 can change the state due to Video::VideoDecoder::VideoDecoder\28\29
[asyncify] Video::HNMDecoder::HNMDecoder\28Graphics::PixelFormat\20const&\2c\20bool\2c\20unsigned\20char*\29 can change the state due to Video::VideoDecoder::VideoDecoder\28\29
[asyncify] Video::MPEGPSDecoder::MPEGPSDecoder\28double\29 can change the state due to Video::VideoDecoder::VideoDecoder\28\29
[asyncify] Video::MveDecoder::MveDecoder\28\29 can change the state due to Video::VideoDecoder::VideoDecoder\28\29
[asyncify] Video::PacoDecoder::PacoDecoder\28\29 can change the state due to Video::VideoDecoder::VideoDecoder\28\29
[asyncify] Video::PSXStreamDecoder::PSXStreamDecoder\28Video::PSXStreamDecoder::CDSpeed\2c\20unsigned\20int\29 can change the state due to Video::VideoDecoder::VideoDecoder\28\29
[asyncify] Video::QuickTimeDecoder::QuickTimeDecoder\28\29 can change the state due to Video::VideoDecoder::VideoDecoder\28\29
[asyncify] Video::SmackerDecoder::SmackerDecoder\28\29 can change the state due to Video::VideoDecoder::VideoDecoder\28\29
[asyncify] Video::BinkDecoder::BinkDecoder\28\29 can change the state due to Video::VideoDecoder::VideoDecoder\28\29
[asyncify] Video::DXADecoder::~DXADecoder\28\29 can change the state due to Video::VideoDecoder::close\28\29
[asyncify] Video::FlicDecoder::~FlicDecoder\28\29 can change the state due to Video::VideoDecoder::close\28\29
[asyncify] Video::QuickTimeDecoder::~QuickTimeDecoder\28\29 can change the state due to Video::VideoDecoder::close\28\29
[asyncify] Video::QuickTimeDecoder::close\28\29 can change the state due to Video::VideoDecoder::close\28\29
[asyncify] Video::QuickTimeDecoder::AudioTrackHandler::updateBuffer\28\29 can change the state due to Video::VideoDecoder::getTimeToNextFrame\28\29\20const
[asyncify] Video::MveDecoder::MveVideoTrack::getPixelFormat\28\29\20const can change the state due to Video::VideoDecoder::getPixelFormat\28\29\20const
[asyncify] Video::AVIDecoder::rewind\28\29 can change the state due to Video::VideoDecoder::rewind\28\29
[asyncify] Video::VideoDecoder::start\28\29 can change the state due to Video::VideoDecoder::setRate\28Common::Rational\20const&\29
[asyncify] Video::BinkDecoder::BinkVideoTrack::rewind\28\29 can change the state due to Video::VideoDecoder::Track::rewind\28\29
[asyncify] Video::HNMDecoder::HNMVideoTrack::endOfTrack\28\29\20const can change the state due to Video::VideoDecoder::VideoTrack::endOfTrack\28\29\20const
[asyncify] Video::PSXStreamDecoder::PSXAudioTrack::endOfTrack\28\29\20const can change the state due to Video::VideoDecoder::AudioTrack::endOfTrack\28\29\20const
[asyncify] Video::VideoDecoder::StreamFileAudioTrack::~StreamFileAudioTrack\28\29.1 can change the state due to Video::VideoDecoder::StreamFileAudioTrack::~StreamFileAudioTrack\28\29
[asyncify] Video::AVIDecoder::addTrack\28Video::VideoDecoder::Track*\2c\20bool\29 can change the state due to Video::VideoDecoder::addTrack\28Video::VideoDecoder::Track*\2c\20bool\29
[asyncify] Video::MPEGPSDecoder::addFirstVideoTrack\28\29 can change the state due to Video::VideoDecoder::addTrack\28Video::VideoDecoder::Track*\2c\20bool\29
[asyncify] Video::BinkDecoder::initAudioTrack\28Video::BinkDecoder::AudioInfo&\29 can change the state due to Video::VideoDecoder::addTrack\28Video::VideoDecoder::Track*\2c\20bool\29
[asyncify] Video::BinkDecoder::~BinkDecoder\28\29 can change the state due to Video::BinkDecoder::close\28\29
[asyncify] Video::BinkDecoder::BinkAudioTrack::decodePacket\28\29 can change the state due to Common::BitStreamImpl<Common::SeekableReadStream\2c\20unsigned\20long\20long\2c\2032\2c\20true\2c\20false>::skip\28unsigned\20int\29
[asyncify] Video::BinkDecoder::BinkVideoTrack::decodePacket\28Video::BinkDecoder::VideoFrame&\29 can change the state due to Common::BitStreamImpl<Common::SeekableReadStream\2c\20unsigned\20long\20long\2c\2032\2c\20true\2c\20false>::skip\28unsigned\20int\29
[asyncify] Video::BinkDecoder::BinkVideoTrack::decodePlane\28Video::BinkDecoder::VideoFrame&\2c\20int\2c\20bool\29 can change the state due to Common::BitStreamImpl<Common::SeekableReadStream\2c\20unsigned\20long\20long\2c\2032\2c\20true\2c\20false>::skip\28unsigned\20int\29
[asyncify] Video::BinkDecoder::BinkAudioTrack::audioBlockDCT\28\29 can change the state due to Common::BitStreamImpl<Common::SeekableReadStream\2c\20unsigned\20long\20long\2c\2032\2c\20true\2c\20false>::skip\28unsigned\20int\29
[asyncify] Common::Array<Video::BinkDecoder::VideoFrame>::resize\28unsigned\20int\29 can change the state due to Video::BinkDecoder::VideoFrame::~VideoFrame\28\29
[asyncify] Common::Array<Video::BinkDecoder::AudioInfo>::resize\28unsigned\20int\29 can change the state due to Video::BinkDecoder::AudioInfo::~AudioInfo\28\29
[asyncify] Video::BinkDecoder::BinkVideoTrack::readBlockTypes\28Video::BinkDecoder::VideoFrame&\2c\20Video::BinkDecoder::BinkVideoTrack::Bundle&\29 can change the state due to Common::BitStreamImpl<Common::SeekableReadStream\2c\20unsigned\20long\20long\2c\2032\2c\20true\2c\20false>::getBits\28unsigned\20long\29
[asyncify] Video::BinkDecoder::BinkVideoTrack::readColors\28Video::BinkDecoder::VideoFrame&\2c\20Video::BinkDecoder::BinkVideoTrack::Bundle&\29 can change the state due to Common::BitStreamImpl<Common::SeekableReadStream\2c\20unsigned\20long\20long\2c\2032\2c\20true\2c\20false>::getBits\28unsigned\20long\29
[asyncify] Video::BinkDecoder::BinkVideoTrack::readPatterns\28Video::BinkDecoder::VideoFrame&\2c\20Video::BinkDecoder::BinkVideoTrack::Bundle&\29 can change the state due to Common::BitStreamImpl<Common::SeekableReadStream\2c\20unsigned\20long\20long\2c\2032\2c\20true\2c\20false>::getBits\28unsigned\20long\29
[asyncify] Video::BinkDecoder::BinkVideoTrack::readMotionValues\28Video::BinkDecoder::VideoFrame&\2c\20Video::BinkDecoder::BinkVideoTrack::Bundle&\29 can change the state due to Common::BitStreamImpl<Common::SeekableReadStream\2c\20unsigned\20long\20long\2c\2032\2c\20true\2c\20false>::getBits\28unsigned\20long\29
[asyncify] void\20Video::BinkDecoder::BinkVideoTrack::readDCS<11\2c\20false>\28Video::BinkDecoder::VideoFrame&\2c\20Video::BinkDecoder::BinkVideoTrack::Bundle&\29 can change the state due to Common::BitStreamImpl<Common::SeekableReadStream\2c\20unsigned\20long\20long\2c\2032\2c\20true\2c\20false>::getBits\28unsigned\20long\29
[asyncify] void\20Video::BinkDecoder::BinkVideoTrack::readDCS<11\2c\20true>\28Video::BinkDecoder::VideoFrame&\2c\20Video::BinkDecoder::BinkVideoTrack::Bundle&\29 can change the state due to Common::BitStreamImpl<Common::SeekableReadStream\2c\20unsigned\20long\20long\2c\2032\2c\20true\2c\20false>::getBits\28unsigned\20long\29
[asyncify] Video::BinkDecoder::BinkVideoTrack::readRuns\28Video::BinkDecoder::VideoFrame&\2c\20Video::BinkDecoder::BinkVideoTrack::Bundle&\29 can change the state due to Common::BitStreamImpl<Common::SeekableReadStream\2c\20unsigned\20long\20long\2c\2032\2c\20true\2c\20false>::getBits\28unsigned\20long\29
[asyncify] Video::BinkDecoder::BinkVideoTrack::readDCTCoeffs\28Video::BinkDecoder::VideoFrame&\2c\20int*\2c\20bool\29 can change the state due to Common::BitStreamImpl<Common::SeekableReadStream\2c\20unsigned\20long\20long\2c\2032\2c\20true\2c\20false>::getBits\28unsigned\20long\29
[asyncify] Video::BinkDecoder::BinkVideoTrack::readBundleCount\28Video::BinkDecoder::VideoFrame&\2c\20Video::BinkDecoder::BinkVideoTrack::Bundle&\29 can change the state due to Common::BitStreamImpl<Common::SeekableReadStream\2c\20unsigned\20long\20long\2c\2032\2c\20true\2c\20false>::getBits\28unsigned\20long\29
[asyncify] Video::BinkDecoder::BinkAudioTrack::readAudioCoeffs\28float*\29 can change the state due to Common::BitStreamImpl<Common::SeekableReadStream\2c\20unsigned\20long\20long\2c\2032\2c\20true\2c\20false>::getBits\28unsigned\20long\29
[asyncify] Video::BinkDecoder::BinkVideoTrack::readHuffman\28Video::BinkDecoder::VideoFrame&\2c\20Video::BinkDecoder::BinkVideoTrack::Huffman&\29 can change the state due to Common::BitStreamImpl<Common::SeekableReadStream\2c\20unsigned\20long\20long\2c\2032\2c\20true\2c\20false>::getBit\28\29
[asyncify] Video::BinkDecoder::BinkVideoTrack::blockRun\28Video::BinkDecoder::BinkVideoTrack::DecodeContext&\29 can change the state due to Common::BitStreamImpl<Common::SeekableReadStream\2c\20unsigned\20long\20long\2c\2032\2c\20true\2c\20false>::getBit\28\29
[asyncify] Video::BinkDecoder::BinkVideoTrack::blockScaledRun\28Video::BinkDecoder::BinkVideoTrack::DecodeContext&\29 can change the state due to Common::BitStreamImpl<Common::SeekableReadStream\2c\20unsigned\20long\20long\2c\2032\2c\20true\2c\20false>::getBit\28\29
[asyncify] Video::BinkDecoder::BinkVideoTrack::readResidue\28Video::BinkDecoder::VideoFrame&\2c\20short*\2c\20int\29 can change the state due to Common::BitStreamImpl<Common::SeekableReadStream\2c\20unsigned\20long\20long\2c\2032\2c\20true\2c\20false>::getBit\28\29
[asyncify] Video::BinkDecoder::BinkVideoTrack::mergeHuffmanSymbols\28Video::BinkDecoder::VideoFrame&\2c\20unsigned\20char*\2c\20unsigned\20char\20const*\2c\20int\29 can change the state due to Common::BitStreamImpl<Common::SeekableReadStream\2c\20unsigned\20long\20long\2c\2032\2c\20true\2c\20false>::getBit\28\29
[asyncify] Video::BinkDecoder::BinkAudioTrack::getFloat\28\29 can change the state due to Common::BitStreamImpl<Common::SeekableReadStream\2c\20unsigned\20long\20long\2c\2032\2c\20true\2c\20false>::getBit\28\29
[asyncify] Video::BinkDecoder::BinkVideoTrack::getHuffmanSymbol\28Video::BinkDecoder::VideoFrame&\2c\20Video::BinkDecoder::BinkVideoTrack::Huffman&\29 can change the state due to Common::Huffman<Common::BitStreamImpl<Common::SeekableReadStream\2c\20unsigned\20long\20long\2c\2032\2c\20true\2c\20false>>::getSymbol\28Common::BitStreamImpl<Common::SeekableReadStream\2c\20unsigned\20long\20long\2c\2032\2c\20true\2c\20false>&\29\20const
[asyncify] Video::BinkDecoder::BinkVideoTrack::blockResidue\28Video::BinkDecoder::BinkVideoTrack::DecodeContext&\29 can change the state due to unsigned\20int\20Common::BitStreamImpl<Common::SeekableReadStream\2c\20unsigned\20long\20long\2c\2032\2c\20true\2c\20false>::getBits<7>\28\29
[asyncify] Video::BinkDecoder::BinkAudioTrack::~BinkAudioTrack\28\29.1 can change the state due to Video::BinkDecoder::BinkAudioTrack::~BinkAudioTrack\28\29
[asyncify] Image::BitmapDecoder::~BitmapDecoder\28\29.1 can change the state due to Image::BitmapDecoder::~BitmapDecoder\28\29
[asyncify] Graphics::MacWindowBorder::loadBorder\28Common::SeekableReadStream&\2c\20unsigned\20int\2c\20Graphics::BorderOffsets\29 can change the state due to Image::BitmapDecoder::~BitmapDecoder\28\29
[asyncify] Image::PICTDecoder::on_bitsRect\28Common::SeekableReadStream&\29 can change the state due to Image::PICTDecoder::unpackBitsRect\28Common::SeekableReadStream&\2c\20bool\29
[asyncify] Image::PICTDecoder::on_packBitsRect\28Common::SeekableReadStream&\29 can change the state due to Image::PICTDecoder::unpackBitsRect\28Common::SeekableReadStream&\2c\20bool\29
[asyncify] Image::PICTDecoder::on_directBitsRect\28Common::SeekableReadStream&\29 can change the state due to Image::PICTDecoder::unpackBitsRect\28Common::SeekableReadStream&\2c\20bool\29
[asyncify] Image::PICTDecoder::on_compressedQuickTime\28Common::SeekableReadStream&\29 can change the state due to Image::PICTDecoder::decodeCompressedQuickTime\28Common::SeekableReadStream&\29
[asyncify] Image::PICTDecoder::oq_compressedQuickTime\28Common::SeekableReadStream&\29 can change the state due to Image::PICTDecoder::decodeCompressedQuickTime\28Common::SeekableReadStream&\29
[asyncify] Image::PICTDecoder::oq_packBitsRect\28Common::SeekableReadStream&\29 can change the state due to Image::PICTDecoder::skipBitsRect\28Common::SeekableReadStream&\2c\20bool\29
[asyncify] Image::PICTDecoder::oq_directBitsRect\28Common::SeekableReadStream&\29 can change the state due to Image::PICTDecoder::skipBitsRect\28Common::SeekableReadStream&\2c\20bool\29
[asyncify] Video::ThreeDOMovieDecoder::StreamVideoTrack::StreamVideoTrack\28unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int\29 can change the state due to Image::CinepakDecoder::CinepakDecoder\28int\29
[asyncify] Image::createBitmapCodec\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20int\29 can change the state due to Image::CinepakDecoder::CinepakDecoder\28int\29
[asyncify] Image::createQuickTimeCodec\28unsigned\20int\2c\20int\2c\20int\2c\20int\29 can change the state due to Image::CinepakDecoder::CinepakDecoder\28int\29
[asyncify] Image::HLZDecoder::decodeFrame\28Common::SeekableReadStream&\29 can change the state due to Image::HLZDecoder::decodeFrameInPlace\28Common::SeekableReadStream&\2c\20unsigned\20int\2c\20unsigned\20char*\29
[asyncify] Image::MSRLEDecoder::decodeFrame\28Common::SeekableReadStream&\29 can change the state due to Image::MSRLEDecoder::decode8\28Common::SeekableReadStream&\29
[asyncify] Image::MSRLE4Decoder::decodeFrame\28Common::SeekableReadStream&\29 can change the state due to Image::MSRLE4Decoder::decode4\28Common::SeekableReadStream&\29
[asyncify] Image::MSVideo1Decoder::decodeFrame\28Common::SeekableReadStream&\29 can change the state due to Image::MSVideo1Decoder::decode8\28Common::SeekableReadStream&\29
[asyncify] Image::SVQ1Decoder::svq1DecodeBlockIntra\28Common::BitStreamImpl<Common::SeekableReadStream\2c\20unsigned\20long\20long\2c\2032\2c\20false\2c\20true>*\2c\20unsigned\20char*\2c\20int\29 can change the state due to Common::BitStreamImpl<Common::SeekableReadStream\2c\20unsigned\20long\20long\2c\2032\2c\20false\2c\20true>::getBit\28\29
[asyncify] Image::SVQ1Decoder::svq1DecodeBlockNonIntra\28Common::BitStreamImpl<Common::SeekableReadStream\2c\20unsigned\20long\20long\2c\2032\2c\20false\2c\20true>*\2c\20unsigned\20char*\2c\20int\29 can change the state due to Common::BitStreamImpl<Common::SeekableReadStream\2c\20unsigned\20long\20long\2c\2032\2c\20false\2c\20true>::getBit\28\29
[asyncify] Image::SVQ1Decoder::svq1DecodeMotionVector\28Common::BitStreamImpl<Common::SeekableReadStream\2c\20unsigned\20long\20long\2c\2032\2c\20false\2c\20true>*\2c\20Common::Point*\2c\20Common::Point**\29 can change the state due to Common::BitStreamImpl<Common::SeekableReadStream\2c\20unsigned\20long\20long\2c\2032\2c\20false\2c\20true>::getBit\28\29
[asyncify] Image::SVQ1Decoder::svq1DecodeDeltaBlock\28Common::BitStreamImpl<Common::SeekableReadStream\2c\20unsigned\20long\20long\2c\2032\2c\20false\2c\20true>*\2c\20unsigned\20char*\2c\20unsigned\20char*\2c\20int\2c\20Common::Point*\2c\20int\2c\20int\29 can change the state due to Common::Huffman<Common::BitStreamImpl<Common::SeekableReadStream\2c\20unsigned\20long\20long\2c\2032\2c\20false\2c\20true>>::getSymbol\28Common::BitStreamImpl<Common::SeekableReadStream\2c\20unsigned\20long\20long\2c\2032\2c\20false\2c\20true>&\29\20const
[asyncify] Image::TrueMotion1Decoder::decodeFrame\28Common::SeekableReadStream&\29 can change the state due to Image::TrueMotion1Decoder::decodeHeader\28Common::SeekableReadStream&\29
[asyncify] Image::Indeo4Decoder::Indeo4Decoder\28unsigned\20short\2c\20unsigned\20short\2c\20unsigned\20int\29 can change the state due to Image::Indeo::IndeoDecoderBase::IndeoDecoderBase\28unsigned\20short\2c\20unsigned\20short\2c\20unsigned\20int\29
[asyncify] Image::Indeo5Decoder::Indeo5Decoder\28unsigned\20short\2c\20unsigned\20short\2c\20unsigned\20int\29 can change the state due to Image::Indeo::IndeoDecoderBase::IndeoDecoderBase\28unsigned\20short\2c\20unsigned\20short\2c\20unsigned\20int\29
[asyncify] Image::Indeo::IndeoDecoderBase::processEmptyTile\28Image::Indeo::IVIBandDesc*\2c\20Image::Indeo::IVITile*\2c\20int\29 can change the state due to Image::Indeo::IndeoDecoderBase::iviMc\28Image::Indeo::IVIBandDesc*\2c\20void\20\28*\29\28short*\2c\20short\20const*\2c\20unsigned\20int\2c\20int\29\2c\20void\20\28*\29\28short*\2c\20short\20const*\2c\20short\20const*\2c\20unsigned\20int\2c\20int\2c\20int\29\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\29
[asyncify] GUI::GuiManager::setupCursor\28\29 can change the state due to Graphics::CursorManager::showMouse\28bool\29
[asyncify] GUI::ThemeEngine::showCursor\28\29 can change the state due to Graphics::CursorManager::showMouse\28bool\29
[asyncify] Graphics::MacWindowManager::pushCursor\28Graphics::MacGUIConstants::MacCursorType\2c\20Graphics::Cursor*\29 can change the state due to Graphics::CursorManager::pushCursor\28void\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20int\2c\20bool\2c\20Graphics::PixelFormat\20const*\29
[asyncify] Graphics::MacWindowManager::pushCustomCursor\28unsigned\20char\20const*\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\29 can change the state due to Graphics::CursorManager::pushCursor\28void\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20int\2c\20bool\2c\20Graphics::PixelFormat\20const*\29
[asyncify] Graphics::MacWindowManager::popCursor\28\29 can change the state due to Graphics::CursorManager::popCursor\28\29
[asyncify] GUI::ThemeEngine::hideCursor\28\29 can change the state due to Graphics::CursorManager::popCursor\28\29
[asyncify] Graphics::MacWindowManager::replaceCursor\28Graphics::MacGUIConstants::MacCursorType\2c\20Graphics::Cursor*\29 can change the state due to Graphics::CursorManager::replaceCursor\28void\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20int\2c\20bool\2c\20Graphics::PixelFormat\20const*\29
[asyncify] Graphics::MacWindowManager::replaceCustomCursor\28unsigned\20char\20const*\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\29 can change the state due to Graphics::CursorManager::replaceCursor\28void\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20int\2c\20bool\2c\20Graphics::PixelFormat\20const*\29
[asyncify] Graphics::MacMenu::calcSubMenuWidth\28Graphics::MacMenuSubMenu*\29 can change the state due to Graphics::Font::getStringWidth\28Common::String\20const&\29\20const
[asyncify] Graphics::MacText::getStringWidth\28Graphics::MacFontRun&\2c\20Common::U32String\20const&\29 can change the state due to Graphics::Font::getStringWidth\28Common::String\20const&\29\20const
[asyncify] Graphics::MacWindowBorder::setTitle\28Common::String\20const&\2c\20int\2c\20Graphics::MacWindowManager*\29 can change the state due to Graphics::Font::getStringWidth\28Common::String\20const&\29\20const
[asyncify] Graphics::MacWindowBorder::drawTitle\28Graphics::ManagedSurface*\2c\20Graphics::MacWindowManager*\2c\20int\29 can change the state due to Graphics::Font::getStringWidth\28Common::String\20const&\29\20const
[asyncify] Graphics::MacMenu::processSubmenuTabs\28Graphics::MacMenuSubMenu*\29 can change the state due to Graphics::Font::getStringWidth\28Common::U32String\20const&\29\20const
[asyncify] GUI::ThemeEngine::getStringWidth\28Common::U32String\20const&\2c\20GUI::ThemeEngine::FontStyle\29\20const can change the state due to Graphics::Font::getStringWidth\28Common::U32String\20const&\29\20const
[asyncify] Graphics::MacText::chopChunk\28Common::U32String\20const&\2c\20int*\29 can change the state due to Graphics::Font::wordWrapText\28Common::U32String\20const&\2c\20int\2c\20Common::Array<Common::U32String>&\2c\20int\2c\20unsigned\20int\29\20const
[asyncify] Graphics::FontManager::~FontManager\28\29.1 can change the state due to Graphics::FontManager::~FontManager\28\29
[asyncify] Graphics::MacFontManager::generateFONTFont\28Graphics::MacFont&\2c\20Graphics::MacFont&\29 can change the state due to Graphics::MacFONTFont::scaleFont\28Graphics::MacFONTFont\20const*\2c\20int\2c\20int\29
[asyncify] Graphics::TTFFont::computePointSize\28int\2c\20Graphics::TTFSizeMode\29\20const can change the state due to Graphics::TTFFont::readPointSizeFromVDMXTable\28int\29\20const
[asyncify] Video::Subtitles::setFont\28char\20const*\2c\20int\29 can change the state due to Graphics::loadTTFFont\28Common::SeekableReadStream&\2c\20int\2c\20Graphics::TTFSizeMode\2c\20unsigned\20int\2c\20Graphics::TTFRenderMode\2c\20unsigned\20int\20const*\2c\20bool\29
[asyncify] Graphics::MacFontManager::getFont\28Graphics::MacFont*\29 can change the state due to Graphics::loadTTFFontFromArchive\28Common::String\20const&\2c\20int\2c\20Graphics::TTFSizeMode\2c\20unsigned\20int\2c\20Graphics::TTFRenderMode\2c\20unsigned\20int\20const*\29
[asyncify] Graphics::MacMenu::getMenuFont\28int\29 can change the state due to Graphics::loadTTFFontFromArchive\28Common::String\20const&\2c\20int\2c\20Graphics::TTFSizeMode\2c\20unsigned\20int\2c\20Graphics::TTFRenderMode\2c\20unsigned\20int\20const*\29
[asyncify] Graphics::WinFont::loadFromFNT\28Common::String\20const&\29 can change the state due to Graphics::WinFont::loadFromFNT\28Common::SeekableReadStream&\29
[asyncify] Graphics::larryScale\28Graphics::MarginedBitmap<unsigned\20char>\20const&\2c\20unsigned\20char\2c\20int\2c\20int\2c\20Graphics::RowWriter&\29 can change the state due to Graphics::scaleDown\28Graphics::MarginedBitmap<unsigned\20char>\20const&\2c\20unsigned\20char\2c\20int\2c\20int\2c\20Graphics::RowWriter&\29
[asyncify] Graphics::MacButton::draw\28bool\29 can change the state due to Graphics::MacButton::invertInner\28\29
[asyncify] Graphics::MacFontManager::MacFontManager\28unsigned\20int\2c\20Common::Language\29 can change the state due to Graphics::MacFontManager::loadFonts\28\29
[asyncify] Graphics::MacFontManager::setLocalizedFonts\28\29 can change the state due to Graphics::MacFontManager::loadJapaneseFonts\28\29
[asyncify] Graphics::MacFontManager::loadFonts\28Common::SeekableReadStream*\29 can change the state due to Graphics::MacFontManager::loadFonts\28Common::MacResManager*\29
[asyncify] Graphics::MacFontManager::loadFonts\28Common::String\20const&\29 can change the state due to Graphics::MacFontManager::loadFonts\28Common::MacResManager*\29
[asyncify] Graphics::MacFontManager::generateFontSubstitute\28Graphics::MacFont&\29 can change the state due to Graphics::MacFontManager::generateTTFFont\28Graphics::MacFont&\2c\20Common::SeekableReadStream*\29
[asyncify] Graphics::MacMenu::~MacMenu\28\29.1 can change the state due to Graphics::MacMenu::~MacMenu\28\29
[asyncify] Graphics::MacMenu::addStaticMenus\28Graphics::MacMenuData\20const*\29 can change the state due to Graphics::MacMenu::calcDimensions\28\29
[asyncify] Graphics::MacMenu::keyEvent\28Common::Event&\29 can change the state due to Graphics::MacMenu::processMenuShortCut\28unsigned\20char\2c\20unsigned\20short\29
[asyncify] Graphics::MacMenu::mouseMove\28int\2c\20int\29 can change the state due to Graphics::MacMenu::mouseClick\28int\2c\20int\29
[asyncify] Graphics::MacText::MacText\28Graphics::MacWidget*\2c\20int\2c\20int\2c\20int\2c\20int\2c\20Graphics::MacWindowManager*\2c\20Common::U32String\20const&\2c\20Graphics::MacFont\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20Graphics::TextAlign\2c\20int\2c\20unsigned\20short\2c\20unsigned\20short\2c\20unsigned\20short\2c\20unsigned\20short\2c\20bool\29 can change the state due to Graphics::MacText::init\28\29
[asyncify] Graphics::MacText::MacText\28Common::U32String\20const&\2c\20Graphics::MacWindowManager*\2c\20Graphics::MacFont\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20Graphics::TextAlign\2c\20int\2c\20bool\29 can change the state due to Graphics::MacText::init\28\29
[asyncify] Graphics::MacText::setMaxWidth\28int\29 can change the state due to Graphics::MacText::splitString\28Common::U32String\20const&\2c\20int\29
[asyncify] Graphics::MacText::appendText\28Common::U32String\20const&\2c\20int\2c\20int\2c\20int\2c\20unsigned\20short\2c\20unsigned\20short\2c\20unsigned\20short\2c\20bool\29 can change the state due to Graphics::MacText::splitString\28Common::U32String\20const&\2c\20int\29
[asyncify] Graphics::MacText::appendText_\28Common::U32String\20const&\2c\20unsigned\20int\29 can change the state due to Graphics::MacText::splitString\28Common::U32String\20const&\2c\20int\29
[asyncify] Graphics::MacText::appendTextDefault\28Common::U32String\20const&\2c\20bool\29 can change the state due to Graphics::MacText::splitString\28Common::U32String\20const&\2c\20int\29
[asyncify] Graphics::MacText::reshuffleParagraph\28int*\2c\20int*\29 can change the state due to Graphics::MacText::splitString\28Common::U32String\20const&\2c\20int\29
[asyncify] Graphics::MacText::insertTextFromClipboard\28\29 can change the state due to Graphics::MacText::splitString\28Common::U32String\20const&\2c\20int\29
[asyncify] Graphics::MacText::setText\28Common::U32String\20const&\29 can change the state due to Graphics::MacText::splitString\28Common::U32String\20const&\2c\20int\29
[asyncify] Graphics::MacText::setInterLinear\28int\29 can change the state due to Graphics::MacText::recalcDims\28\29
[asyncify] Graphics::MacText::clearText\28\29 can change the state due to Graphics::MacText::recalcDims\28\29
[asyncify] Graphics::MacText::deleteSelection\28\29 can change the state due to Graphics::MacText::recalcDims\28\29
[asyncify] Graphics::MacText::deletePreviousChar\28int*\2c\20int*\29 can change the state due to Graphics::MacText::recalcDims\28\29
[asyncify] Graphics::MacText::addNewLine\28int*\2c\20int*\29 can change the state due to Graphics::MacText::recalcDims\28\29
[asyncify] Graphics::MacText::insertChar\28unsigned\20char\2c\20int*\2c\20int*\29 can change the state due to Graphics::MacText::recalcDims\28\29
[asyncify] Graphics::MacText::drawSelection\28int\2c\20int\29 can change the state due to Graphics::MacText::updateCursorPos\28\29
[asyncify] Graphics::MacText::render\28\29 can change the state due to Graphics::MacText::render\28int\2c\20int\29
[asyncify] Graphics::MacText::setColors\28unsigned\20int\2c\20unsigned\20int\29 can change the state due to Graphics::MacText::render\28int\2c\20int\29
[asyncify] Graphics::MacText::enforceTextFont\28unsigned\20short\29 can change the state due to Graphics::MacText::render\28int\2c\20int\29
[asyncify] Graphics::MacText::setTextSize\28int\29 can change the state due to Graphics::MacText::render\28int\2c\20int\29
[asyncify] Graphics::MacText::enforceTextSlant\28int\29 can change the state due to Graphics::MacText::render\28int\2c\20int\29
[asyncify] Graphics::MacText::drawToPoint\28Graphics::ManagedSurface*\2c\20Common::Rect\2c\20Common::Point\29 can change the state due to Graphics::MacText::render\28int\2c\20int\29
[asyncify] Graphics::MacText::drawToPoint\28Graphics::ManagedSurface*\2c\20Common::Point\29 can change the state due to Graphics::MacText::render\28int\2c\20int\29
[asyncify] Graphics::MacTextWindow::MacTextWindow\28Graphics::MacWindowManager*\2c\20Graphics::Font\20const*\2c\20int\2c\20int\2c\20int\2c\20Graphics::TextAlign\2c\20Graphics::MacMenu*\2c\20bool\29 can change the state due to Graphics::MacText::MacText\28Common::U32String\20const&\2c\20Graphics::MacWindowManager*\2c\20Graphics::Font\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20Graphics::TextAlign\2c\20int\2c\20bool\29
[asyncify] Graphics::MacText::getAlignOffset\28int\29 can change the state due to Graphics::MacText::getLineWidth\28int\2c\20bool\2c\20int\29
[asyncify] Graphics::MacText::getLineHeight\28int\29 can change the state due to Graphics::MacText::getLineWidth\28int\2c\20bool\2c\20int\29
[asyncify] Graphics::MacText::getLastLineWidth\28\29 can change the state due to Graphics::MacText::getLineWidth\28int\2c\20bool\2c\20int\29
[asyncify] Graphics::MacText::getRowCol\28int\2c\20int\2c\20int*\2c\20int*\2c\20int*\2c\20int*\29 can change the state due to Graphics::MacText::getLineWidth\28int\2c\20bool\2c\20int\29
[asyncify] Graphics::MacButton::~MacButton\28\29 can change the state due to Graphics::MacText::~MacText\28\29
[asyncify] Graphics::MacText::~MacText\28\29.1 can change the state due to Graphics::MacText::~MacText\28\29
[asyncify] Graphics::MacText::setTextColor\28unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int\29 can change the state due to Graphics::MacText::setTextChunks\28int\2c\20int\2c\20int\2c\20void\20\28*\29\28Graphics::MacFontRun&\2c\20int\29\29
[asyncify] Graphics::MacText::setTextSize\28int\2c\20int\2c\20int\29 can change the state due to Graphics::MacText::setTextChunks\28int\2c\20int\2c\20int\2c\20void\20\28*\29\28Graphics::MacFontRun&\2c\20int\29\29
[asyncify] Graphics::MacText::setTextFont\28int\2c\20int\2c\20int\29 can change the state due to Graphics::MacText::setTextChunks\28int\2c\20int\2c\20int\2c\20void\20\28*\29\28Graphics::MacFontRun&\2c\20int\29\29
[asyncify] Graphics::MacText::setTextSlant\28int\2c\20int\2c\20int\29 can change the state due to Graphics::MacText::setTextChunks\28int\2c\20int\2c\20int\2c\20void\20\28*\29\28Graphics::MacFontRun&\2c\20int\29\29
[asyncify] Graphics::MacTextWindow::undrawInput\28\29 can change the state due to Graphics::MacText::removeLastLine\28\29
[asyncify] Graphics::MacTextWindow::MacTextWindow\28Graphics::MacWindowManager*\2c\20Graphics::MacFont\20const*\2c\20int\2c\20int\2c\20int\2c\20Graphics::TextAlign\2c\20Graphics::MacMenu*\2c\20bool\29 can change the state due to Graphics::MacTextWindow::init\28bool\29
[asyncify] Graphics::MacTextWindow::appendText\28Common::String\20const&\2c\20Graphics::MacFont\20const*\2c\20bool\29 can change the state due to Graphics::MacTextWindow::appendText\28Common::U32String\20const&\2c\20Graphics::MacFont\20const*\2c\20bool\29
[asyncify] Graphics::MacTextWindow::drawInput\28\29 can change the state due to Graphics::MacTextWindow::appendText\28Common::U32String\20const&\2c\20Graphics::MacFont\20const*\2c\20bool\29
[asyncify] Graphics::MacTextWindow::appendInput\28Common::U32String\20const&\29 can change the state due to Graphics::MacTextWindow::appendText\28Common::U32String\20const&\2c\20Graphics::MacFont\20const*\2c\20bool\29
[asyncify] Graphics::MacTextWindow::~MacTextWindow\28\29.1 can change the state due to Graphics::MacTextWindow::~MacTextWindow\28\29
[asyncify] Graphics::MacWidget::~MacWidget\28\29.1 can change the state due to Graphics::MacWidget::~MacWidget\28\29
[asyncify] Graphics::MacWindow::~MacWindow\28\29 can change the state due to Graphics::MacWidget::~MacWidget\28\29
[asyncify] Graphics::MacWindow::~MacWindow\28\29.1 can change the state due to Graphics::MacWidget::~MacWidget\28\29
[asyncify] Graphics::MacWindow::updateOuterDims\28\29 can change the state due to Graphics::MacWindowBorder::hasBorder\28unsigned\20int\29
[asyncify] Graphics::MacWindow::updateInnerDims\28\29 can change the state due to Graphics::MacWindowBorder::hasBorder\28unsigned\20int\29
[asyncify] Graphics::MacWindow::drawBorder\28\29 can change the state due to Graphics::MacWindowBorder::hasBorder\28unsigned\20int\29
[asyncify] Graphics::MacWindow::center\28bool\29 can change the state due to Graphics::MacWindowBorder::hasBorder\28unsigned\20int\29
[asyncify] Graphics::MacWindowManager::setDesktopMode\28unsigned\20int\29 can change the state due to Graphics::MacWindowManager::loadDesktop\28\29
[asyncify] Graphics::MacWindowManager::addWindow\28bool\2c\20bool\2c\20bool\29 can change the state due to Graphics::MacWindowManager::setActiveWindow\28int\29
[asyncify] Graphics::MacWindowManager::addTextWindow\28Graphics::MacFont\20const*\2c\20int\2c\20int\2c\20int\2c\20Graphics::TextAlign\2c\20Graphics::MacMenu*\2c\20bool\29 can change the state due to Graphics::MacWindowManager::setActiveWindow\28int\29
[asyncify] Graphics::MacWindowManager::addTextWindow\28Graphics::Font\20const*\2c\20int\2c\20int\2c\20int\2c\20Graphics::TextAlign\2c\20Graphics::MacMenu*\2c\20bool\29 can change the state due to Graphics::MacWindowManager::setActiveWindow\28int\29
[asyncify] Graphics::ManagedSurface::ManagedSurface\28Graphics::ManagedSurface\20const&\29 can change the state due to Graphics::ManagedSurface::operator=\28Graphics::ManagedSurface\20const&\29
[asyncify] Graphics::Screen::Screen\28int\2c\20int\2c\20Graphics::PixelFormat\29 can change the state due to Graphics::ManagedSurface::create\28short\2c\20short\2c\20Graphics::PixelFormat\20const&\29
[asyncify] Graphics::MacWindow::resizeBorderSurface\28\29 can change the state due to Graphics::ManagedSurface::create\28short\2c\20short\2c\20Graphics::PixelFormat\20const&\29
[asyncify] Graphics::ManagedSurface::ManagedSurface\28int\2c\20int\29 can change the state due to Graphics::ManagedSurface::create\28short\2c\20short\2c\20Graphics::PixelFormat\20const&\29
[asyncify] Graphics::ManagedSurface::ManagedSurface\28int\2c\20int\2c\20Graphics::PixelFormat\20const&\29 can change the state due to Graphics::ManagedSurface::create\28short\2c\20short\2c\20Graphics::PixelFormat\20const&\29
[asyncify] GUI::scaleGfx\28Graphics::ManagedSurface\20const*\2c\20int\2c\20int\2c\20bool\29 can change the state due to Graphics::ManagedSurface::ManagedSurface\28Graphics::Surface*\2c\20DisposeAfterUse::Flag\29
[asyncify] Graphics::Screen::Screen\28int\2c\20int\29 can change the state due to Graphics::ManagedSurface::create\28short\2c\20short\29
[asyncify] Graphics::MacWidget::MacWidget\28Graphics::MacWidget*\2c\20int\2c\20int\2c\20int\2c\20int\2c\20Graphics::MacWindowManager*\2c\20bool\2c\20unsigned\20short\2c\20unsigned\20short\2c\20unsigned\20short\2c\20unsigned\20int\2c\20unsigned\20int\29 can change the state due to Graphics::ManagedSurface::clear\28unsigned\20int\29
[asyncify] Graphics::MacWindow::drawBorderFromSurface\28Graphics::ManagedSurface*\2c\20unsigned\20int\29 can change the state due to Graphics::ManagedSurface::clear\28unsigned\20int\29
[asyncify] GUI::GridItemWidget::updateThumb\28\29 can change the state due to Graphics::ManagedSurface::copyFrom\28Graphics::ManagedSurface\20const&\29
[asyncify] Graphics::ManagedSurface::blitFrom\28Graphics::Surface\20const&\29 can change the state due to Graphics::ManagedSurface::blitFromInner\28Graphics::Surface\20const&\2c\20Common::Rect\20const&\2c\20Common::Rect\20const&\2c\20unsigned\20int\20const*\29
[asyncify] Graphics::ManagedSurface::blitFrom\28Graphics::Surface\20const&\2c\20Common::Rect\20const&\2c\20Common::Point\20const&\29 can change the state due to Graphics::ManagedSurface::blitFromInner\28Graphics::Surface\20const&\2c\20Common::Rect\20const&\2c\20Common::Rect\20const&\2c\20unsigned\20int\20const*\29
[asyncify] Graphics::ManagedSurface::blitFrom\28Graphics::Surface\20const&\2c\20Common::Point\20const&\29 can change the state due to Graphics::ManagedSurface::blitFromInner\28Graphics::Surface\20const&\2c\20Common::Rect\20const&\2c\20Common::Rect\20const&\2c\20unsigned\20int\20const*\29
[asyncify] Graphics::ManagedSurface::blitFrom\28Graphics::Surface\20const&\2c\20Common::Rect\20const&\2c\20Common::Rect\20const&\29 can change the state due to Graphics::ManagedSurface::blitFromInner\28Graphics::Surface\20const&\2c\20Common::Rect\20const&\2c\20Common::Rect\20const&\2c\20unsigned\20int\20const*\29
[asyncify] Graphics::ManagedSurface::blitFrom\28Graphics::ManagedSurface\20const&\2c\20Common::Rect\20const&\2c\20Common::Point\20const&\29 can change the state due to Graphics::ManagedSurface::blitFromInner\28Graphics::Surface\20const&\2c\20Common::Rect\20const&\2c\20Common::Rect\20const&\2c\20unsigned\20int\20const*\29
[asyncify] Graphics::ManagedSurface::blitFrom\28Graphics::ManagedSurface\20const&\2c\20Common::Rect\20const&\2c\20Common::Rect\20const&\29 can change the state due to Graphics::ManagedSurface::blitFromInner\28Graphics::Surface\20const&\2c\20Common::Rect\20const&\2c\20Common::Rect\20const&\2c\20unsigned\20int\20const*\29
[asyncify] Graphics::ManagedSurface::transBlitFrom\28Graphics::ManagedSurface\20const&\2c\20Common::Rect\20const&\2c\20Common::Point\20const&\2c\20unsigned\20int\2c\20bool\2c\20unsigned\20int\2c\20unsigned\20int\29 can change the state due to Graphics::ManagedSurface::transBlitFromInner\28Graphics::Surface\20const&\2c\20Common::Rect\20const&\2c\20Common::Rect\20const&\2c\20unsigned\20int\2c\20bool\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int\20const*\2c\20unsigned\20int\20const*\2c\20Graphics::Surface\20const*\2c\20bool\29
[asyncify] Graphics::ManagedSurface::transBlitFrom\28Graphics::ManagedSurface\20const&\2c\20Common::Rect\20const&\2c\20Common::Rect\20const&\2c\20unsigned\20int\2c\20bool\2c\20unsigned\20int\2c\20unsigned\20int\2c\20Graphics::Surface\20const*\2c\20bool\29 can change the state due to Graphics::ManagedSurface::transBlitFromInner\28Graphics::Surface\20const&\2c\20Common::Rect\20const&\2c\20Common::Rect\20const&\2c\20unsigned\20int\2c\20bool\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int\20const*\2c\20unsigned\20int\20const*\2c\20Graphics::Surface\20const*\2c\20bool\29
[asyncify] Graphics::ManagedSurface::transBlitFrom\28Graphics::Surface\20const&\2c\20unsigned\20int\2c\20bool\2c\20unsigned\20int\2c\20unsigned\20int\29 can change the state due to Graphics::ManagedSurface::transBlitFromInner\28Graphics::Surface\20const&\2c\20Common::Rect\20const&\2c\20Common::Rect\20const&\2c\20unsigned\20int\2c\20bool\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int\20const*\2c\20unsigned\20int\20const*\2c\20Graphics::Surface\20const*\2c\20bool\29
[asyncify] Graphics::ManagedSurface::transBlitFrom\28Graphics::Surface\20const&\2c\20Common::Rect\20const&\2c\20Common::Rect\20const&\2c\20unsigned\20int\2c\20bool\2c\20unsigned\20int\2c\20unsigned\20int\2c\20Graphics::Surface\20const*\2c\20bool\29 can change the state due to Graphics::ManagedSurface::transBlitFromInner\28Graphics::Surface\20const&\2c\20Common::Rect\20const&\2c\20Common::Rect\20const&\2c\20unsigned\20int\2c\20bool\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int\20const*\2c\20unsigned\20int\20const*\2c\20Graphics::Surface\20const*\2c\20bool\29
[asyncify] Graphics::ManagedSurface::transBlitFrom\28Graphics::Surface\20const&\2c\20Common::Point\20const&\2c\20unsigned\20int\2c\20bool\2c\20unsigned\20int\2c\20unsigned\20int\29 can change the state due to Graphics::ManagedSurface::transBlitFromInner\28Graphics::Surface\20const&\2c\20Common::Rect\20const&\2c\20Common::Rect\20const&\2c\20unsigned\20int\2c\20bool\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int\20const*\2c\20unsigned\20int\20const*\2c\20Graphics::Surface\20const*\2c\20bool\29
[asyncify] Graphics::ManagedSurface::transBlitFrom\28Graphics::Surface\20const&\2c\20Common::Point\20const&\2c\20Graphics::ManagedSurface\20const&\29 can change the state due to Graphics::ManagedSurface::transBlitFromInner\28Graphics::Surface\20const&\2c\20Common::Rect\20const&\2c\20Common::Rect\20const&\2c\20unsigned\20int\2c\20bool\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int\20const*\2c\20unsigned\20int\20const*\2c\20Graphics::Surface\20const*\2c\20bool\29
[asyncify] Graphics::ManagedSurface::transBlitFrom\28Graphics::Surface\20const&\2c\20Common::Point\20const&\2c\20Graphics::Surface\20const&\29 can change the state due to Graphics::ManagedSurface::transBlitFromInner\28Graphics::Surface\20const&\2c\20Common::Rect\20const&\2c\20Common::Rect\20const&\2c\20unsigned\20int\2c\20bool\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int\20const*\2c\20unsigned\20int\20const*\2c\20Graphics::Surface\20const*\2c\20bool\29
[asyncify] Graphics::ManagedSurface::transBlitFrom\28Graphics::Surface\20const&\2c\20Common::Rect\20const&\2c\20Common::Point\20const&\2c\20unsigned\20int\2c\20bool\2c\20unsigned\20int\2c\20unsigned\20int\29 can change the state due to Graphics::ManagedSurface::transBlitFromInner\28Graphics::Surface\20const&\2c\20Common::Rect\20const&\2c\20Common::Rect\20const&\2c\20unsigned\20int\2c\20bool\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int\20const*\2c\20unsigned\20int\20const*\2c\20Graphics::Surface\20const*\2c\20bool\29
[asyncify] Graphics::ManagedSurface::transBlitFrom\28Graphics::ManagedSurface\20const&\2c\20unsigned\20int\2c\20bool\2c\20unsigned\20int\2c\20unsigned\20int\29 can change the state due to Graphics::ManagedSurface::transBlitFromInner\28Graphics::Surface\20const&\2c\20Common::Rect\20const&\2c\20Common::Rect\20const&\2c\20unsigned\20int\2c\20bool\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int\20const*\2c\20unsigned\20int\20const*\2c\20Graphics::Surface\20const*\2c\20bool\29
[asyncify] Graphics::ManagedSurface::transBlitFrom\28Graphics::ManagedSurface\20const&\2c\20Common::Point\20const&\2c\20unsigned\20int\2c\20bool\2c\20unsigned\20int\2c\20unsigned\20int\29 can change the state due to Graphics::ManagedSurface::transBlitFromInner\28Graphics::Surface\20const&\2c\20Common::Rect\20const&\2c\20Common::Rect\20const&\2c\20unsigned\20int\2c\20bool\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int\20const*\2c\20unsigned\20int\20const*\2c\20Graphics::Surface\20const*\2c\20bool\29
[asyncify] Graphics::ManagedSurface::transBlitFrom\28Graphics::ManagedSurface\20const&\2c\20Common::Point\20const&\2c\20Graphics::ManagedSurface\20const&\29 can change the state due to Graphics::ManagedSurface::transBlitFromInner\28Graphics::Surface\20const&\2c\20Common::Rect\20const&\2c\20Common::Rect\20const&\2c\20unsigned\20int\2c\20bool\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int\20const*\2c\20unsigned\20int\20const*\2c\20Graphics::Surface\20const*\2c\20bool\29
[asyncify] OpenGLSdlGraphics3dManager::initializeOpenGLContext\28\29\20const can change the state due to OpenGL::Context::initialize\28OpenGL::ContextType\29
[asyncify] OpenGL::Shader::loadFromStrings\28Common::String\20const&\2c\20char\20const*\2c\20char\20const*\2c\20char\20const*\20const*\2c\20int\29 can change the state due to OpenGL::Shader::createDirectShader\28unsigned\20long\2c\20char\20const*\20const*\2c\20unsigned\20int\2c\20Common::String\20const&\29
[asyncify] OpenGL::Shader::loadFromStringsArray\28Common::String\20const&\2c\20unsigned\20long\2c\20char\20const*\20const*\2c\20unsigned\20long\2c\20char\20const*\20const*\2c\20char\20const*\20const*\29 can change the state due to OpenGL::Shader::createDirectShader\28unsigned\20long\2c\20char\20const*\20const*\2c\20unsigned\20int\2c\20Common::String\20const&\29
[asyncify] OpenGL::Shader::fromFiles\28char\20const*\2c\20char\20const*\2c\20char\20const*\20const*\2c\20int\29 can change the state due to OpenGL::Shader::loadShaderFromFile\28char\20const*\2c\20char\20const*\2c\20unsigned\20int\2c\20int\29
[asyncify] OpenGL::Shader::loadFromFiles\28char\20const*\2c\20char\20const*\2c\20char\20const*\20const*\2c\20int\29 can change the state due to OpenGL::Shader::loadShaderFromFile\28char\20const*\2c\20char\20const*\2c\20unsigned\20int\2c\20int\29
[asyncify] OpenGL::ShaderPipeline::ShaderPipeline\28OpenGL::Shader*\29 can change the state due to OpenGL::Shader::createBuffer\28unsigned\20int\2c\20long\2c\20void\20const*\2c\20unsigned\20int\29
[asyncify] OpenGL::ShaderSurfaceRenderer::ShaderSurfaceRenderer\28\29 can change the state due to OpenGL::Shader::createBuffer\28unsigned\20int\2c\20long\2c\20void\20const*\2c\20unsigned\20int\29
[asyncify] OpenGL::ShaderSurfaceRenderer::~ShaderSurfaceRenderer\28\29 can change the state due to OpenGL::Shader::freeBuffer\28unsigned\20int\29
[asyncify] OpenGL::LibRetroPipeline::Pass::addTexCoord\28Common::String\20const&\2c\20OpenGL::LibRetroPipeline::Pass::TexCoordAttribute::Type\2c\20unsigned\20int\29 can change the state due to OpenGL::Shader::addAttribute\28char\20const*\29
[asyncify] OpenGL::ShaderPipeline::deactivateInternal\28\29 can change the state due to OpenGL::Shader::unbind\28\29
[asyncify] OpenGL::ShaderManager::~ShaderManager\28\29 can change the state due to OpenGL::Shader::~Shader\28\29
[asyncify] OpenGL::ShaderManager::notifyDestroy\28\29 can change the state due to OpenGL::Shader::~Shader\28\29
[asyncify] Graphics::Surface::drawLine\28int\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int\29 can change the state due to Graphics::drawLine\28int\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int\2c\20void\20\28*\29\28int\2c\20int\2c\20int\2c\20void*\29\2c\20void*\29
[asyncify] Graphics::MacWindowManager::zoomBoxInner\28Common::Rect&\2c\20Graphics::MacPlotData&\29 can change the state due to Graphics::drawLine\28int\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int\2c\20void\20\28*\29\28int\2c\20int\2c\20int\2c\20void*\29\2c\20void*\29
[asyncify] Graphics::Surface::drawThickLine\28int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int\29 can change the state due to Graphics::drawThickLine\28int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int\2c\20void\20\28*\29\28int\2c\20int\2c\20int\2c\20void*\29\2c\20void*\29
[asyncify] Graphics::MacWindowBorder::drawScrollBar\28Graphics::ManagedSurface*\2c\20Graphics::MacWindowManager*\29 can change the state due to Graphics::drawFilledRect1\28Common::Rect&\2c\20unsigned\20int\2c\20void\20\28*\29\28int\2c\20int\2c\20int\2c\20void*\29\2c\20void*\29
[asyncify] Graphics::MacButton::invertOuter\28\29 can change the state due to Graphics::drawRect1\28Common::Rect&\2c\20unsigned\20int\2c\20void\20\28*\29\28int\2c\20int\2c\20int\2c\20void*\29\2c\20void*\29
[asyncify] Graphics::MacDialog::drawOutline\28Common::Rect&\2c\20int*\2c\20int\29 can change the state due to Graphics::drawRect1\28Common::Rect&\2c\20unsigned\20int\2c\20void\20\28*\29\28int\2c\20int\2c\20int\2c\20void*\29\2c\20void*\29
[asyncify] Graphics::drawRoundRect\28Common::Rect&\2c\20int\2c\20unsigned\20int\2c\20bool\2c\20void\20\28*\29\28int\2c\20int\2c\20int\2c\20void*\29\2c\20void*\29 can change the state due to Graphics::drawRoundRect1\28Common::Rect&\2c\20int\2c\20unsigned\20int\2c\20bool\2c\20void\20\28*\29\28int\2c\20int\2c\20int\2c\20void*\29\2c\20void*\29
[asyncify] SurfaceSdlGraphicsManager::clearOverlay\28\29 can change the state due to Scaler::scale\28unsigned\20char\20const*\2c\20unsigned\20int\2c\20unsigned\20char*\2c\20unsigned\20int\2c\20int\2c\20int\2c\20int\2c\20int\29
[asyncify] createThumbnailFromScreen\28Graphics::Surface*\29 can change the state due to grabScreen565\28Graphics::Surface*\29
[asyncify] nsvgParse can change the state due to nsvg__parseXML\28char*\2c\20void\20\28*\29\28void*\2c\20char\20const*\2c\20char\20const**\29\2c\20void\20\28*\29\28void*\2c\20char\20const*\29\2c\20void\20\28*\29\28void*\2c\20char\20const*\29\2c\20void*\29
[asyncify] Graphics::saveThumbnail\28Common::WriteStream&\29 can change the state due to Graphics::saveThumbnail\28Common::WriteStream&\2c\20Graphics::Surface\20const&\29
[asyncify] TinyGL::RasterizationDrawCall::execute\28bool\29\20const can change the state due to TinyGL::GLContext::gl_draw_triangle\28TinyGL::GLVertex*\2c\20TinyGL::GLVertex*\2c\20TinyGL::GLVertex*\29
[asyncify] tglVertex4f\28float\2c\20float\2c\20float\2c\20float\29 can change the state due to TinyGL::GLContext::gl_add_op\28TinyGL::GLParam*\29
[asyncify] tglVertex2f\28float\2c\20float\29 can change the state due to TinyGL::GLContext::gl_add_op\28TinyGL::GLParam*\29
[asyncify] tglVertex3f\28float\2c\20float\2c\20float\29 can change the state due to TinyGL::GLContext::gl_add_op\28TinyGL::GLParam*\29
[asyncify] tglVertex3fv\28float\20const*\29 can change the state due to TinyGL::GLContext::gl_add_op\28TinyGL::GLParam*\29
[asyncify] tglNormal3f\28float\2c\20float\2c\20float\29 can change the state due to TinyGL::GLContext::gl_add_op\28TinyGL::GLParam*\29
[asyncify] tglNormal3fv\28float\20const*\29 can change the state due to TinyGL::GLContext::gl_add_op\28TinyGL::GLParam*\29
[asyncify] tglColor4f\28float\2c\20float\2c\20float\2c\20float\29 can change the state due to TinyGL::GLContext::gl_add_op\28TinyGL::GLParam*\29
[asyncify] tglColor4fv\28float\20const*\29 can change the state due to TinyGL::GLContext::gl_add_op\28TinyGL::GLParam*\29
[asyncify] tglColor3f\28float\2c\20float\2c\20float\29 can change the state due to TinyGL::GLContext::gl_add_op\28TinyGL::GLParam*\29
[asyncify] tglColor3fv\28float\20const*\29 can change the state due to TinyGL::GLContext::gl_add_op\28TinyGL::GLParam*\29
[asyncify] tglColor3ub\28unsigned\20char\2c\20unsigned\20char\2c\20unsigned\20char\29 can change the state due to TinyGL::GLContext::gl_add_op\28TinyGL::GLParam*\29
[asyncify] tglColor4ub\28unsigned\20char\2c\20unsigned\20char\2c\20unsigned\20char\2c\20unsigned\20char\29 can change the state due to TinyGL::GLContext::gl_add_op\28TinyGL::GLParam*\29
[asyncify] tglTexCoord4f\28float\2c\20float\2c\20float\2c\20float\29 can change the state due to TinyGL::GLContext::gl_add_op\28TinyGL::GLParam*\29
[asyncify] tglTexCoord3f\28float\2c\20float\2c\20float\29 can change the state due to TinyGL::GLContext::gl_add_op\28TinyGL::GLParam*\29
[asyncify] tglTexCoord2f\28float\2c\20float\29 can change the state due to TinyGL::GLContext::gl_add_op\28TinyGL::GLParam*\29
[asyncify] tglTexCoord1f\28float\29 can change the state due to TinyGL::GLContext::gl_add_op\28TinyGL::GLParam*\29
[asyncify] tglTexCoord4fv\28float\20const*\29 can change the state due to TinyGL::GLContext::gl_add_op\28TinyGL::GLParam*\29
[asyncify] tglTexCoord3fv\28float\20const*\29 can change the state due to TinyGL::GLContext::gl_add_op\28TinyGL::GLParam*\29
[asyncify] tglTexCoord2fv\28float\20const*\29 can change the state due to TinyGL::GLContext::gl_add_op\28TinyGL::GLParam*\29
[asyncify] tglTexCoord1fv\28float\20const*\29 can change the state due to TinyGL::GLContext::gl_add_op\28TinyGL::GLParam*\29
[asyncify] tglEdgeFlag\28unsigned\20char\29 can change the state due to TinyGL::GLContext::gl_add_op\28TinyGL::GLParam*\29
[asyncify] tglShadeModel\28int\29 can change the state due to TinyGL::GLContext::gl_add_op\28TinyGL::GLParam*\29
[asyncify] tglCullFace\28int\29 can change the state due to TinyGL::GLContext::gl_add_op\28TinyGL::GLParam*\29
[asyncify] tglFrontFace\28int\29 can change the state due to TinyGL::GLContext::gl_add_op\28TinyGL::GLParam*\29
[asyncify] tglColorMask\28unsigned\20char\2c\20unsigned\20char\2c\20unsigned\20char\2c\20unsigned\20char\29 can change the state due to TinyGL::GLContext::gl_add_op\28TinyGL::GLParam*\29
[asyncify] tglDepthMask\28unsigned\20char\29 can change the state due to TinyGL::GLContext::gl_add_op\28TinyGL::GLParam*\29
[asyncify] tglStencilMask\28unsigned\20int\29 can change the state due to TinyGL::GLContext::gl_add_op\28TinyGL::GLParam*\29
[asyncify] tglBlendFunc\28int\2c\20int\29 can change the state due to TinyGL::GLContext::gl_add_op\28TinyGL::GLParam*\29
[asyncify] tglAlphaFunc\28int\2c\20float\29 can change the state due to TinyGL::GLContext::gl_add_op\28TinyGL::GLParam*\29
[asyncify] tglDepthFunc\28int\29 can change the state due to TinyGL::GLContext::gl_add_op\28TinyGL::GLParam*\29
[asyncify] tglStencilFunc\28int\2c\20int\2c\20unsigned\20int\29 can change the state due to TinyGL::GLContext::gl_add_op\28TinyGL::GLParam*\29
[asyncify] tglStencilOp\28int\2c\20int\2c\20int\29 can change the state due to TinyGL::GLContext::gl_add_op\28TinyGL::GLParam*\29
[asyncify] tglPolygonMode\28int\2c\20int\29 can change the state due to TinyGL::GLContext::gl_add_op\28TinyGL::GLParam*\29
[asyncify] tglTexParameteri\28int\2c\20int\2c\20int\29 can change the state due to TinyGL::GLContext::gl_add_op\28TinyGL::GLParam*\29
[asyncify] tglEnable\28int\29 can change the state due to TinyGL::GLContext::gl_add_op\28TinyGL::GLParam*\29
[asyncify] tglDisable\28int\29 can change the state due to TinyGL::GLContext::gl_add_op\28TinyGL::GLParam*\29
[asyncify] tglBegin\28int\29 can change the state due to TinyGL::GLContext::gl_add_op\28TinyGL::GLParam*\29
[asyncify] tglEnd\28\29 can change the state due to TinyGL::GLContext::gl_add_op\28TinyGL::GLParam*\29
[asyncify] tglMatrixMode\28int\29 can change the state due to TinyGL::GLContext::gl_add_op\28TinyGL::GLParam*\29
[asyncify] tglLoadMatrixf\28float\20const*\29 can change the state due to TinyGL::GLContext::gl_add_op\28TinyGL::GLParam*\29
[asyncify] tglLoadIdentity\28\29 can change the state due to TinyGL::GLContext::gl_add_op\28TinyGL::GLParam*\29
[asyncify] tglMultMatrixf\28float\20const*\29 can change the state due to TinyGL::GLContext::gl_add_op\28TinyGL::GLParam*\29
[asyncify] tglPushMatrix\28\29 can change the state due to TinyGL::GLContext::gl_add_op\28TinyGL::GLParam*\29
[asyncify] tglPopMatrix\28\29 can change the state due to TinyGL::GLContext::gl_add_op\28TinyGL::GLParam*\29
[asyncify] tglRotatef\28float\2c\20float\2c\20float\2c\20float\29 can change the state due to TinyGL::GLContext::gl_add_op\28TinyGL::GLParam*\29
[asyncify] tglTranslatef\28float\2c\20float\2c\20float\29 can change the state due to TinyGL::GLContext::gl_add_op\28TinyGL::GLParam*\29
[asyncify] tglScalef\28float\2c\20float\2c\20float\29 can change the state due to TinyGL::GLContext::gl_add_op\28TinyGL::GLParam*\29
[asyncify] tglViewport\28int\2c\20int\2c\20int\2c\20int\29 can change the state due to TinyGL::GLContext::gl_add_op\28TinyGL::GLParam*\29
[asyncify] tglFrustum\28double\2c\20double\2c\20double\2c\20double\2c\20double\2c\20double\29 can change the state due to TinyGL::GLContext::gl_add_op\28TinyGL::GLParam*\29
[asyncify] tglOrtho\28double\2c\20double\2c\20double\2c\20double\2c\20double\2c\20double\29 can change the state due to TinyGL::GLContext::gl_add_op\28TinyGL::GLParam*\29
[asyncify] tglMaterialfv\28int\2c\20int\2c\20float\20const*\29 can change the state due to TinyGL::GLContext::gl_add_op\28TinyGL::GLParam*\29
[asyncify] tglMaterialf\28int\2c\20int\2c\20float\29 can change the state due to TinyGL::GLContext::gl_add_op\28TinyGL::GLParam*\29
[asyncify] tglColorMaterial\28int\2c\20int\29 can change the state due to TinyGL::GLContext::gl_add_op\28TinyGL::GLParam*\29
[asyncify] tglLightfv\28int\2c\20int\2c\20float\20const*\29 can change the state due to TinyGL::GLContext::gl_add_op\28TinyGL::GLParam*\29
[asyncify] tglLightf\28int\2c\20int\2c\20float\29 can change the state due to TinyGL::GLContext::gl_add_op\28TinyGL::GLParam*\29
[asyncify] tglLightModeli\28int\2c\20int\29 can change the state due to TinyGL::GLContext::gl_add_op\28TinyGL::GLParam*\29
[asyncify] tglLightModelfv\28int\2c\20float\20const*\29 can change the state due to TinyGL::GLContext::gl_add_op\28TinyGL::GLParam*\29
[asyncify] tglClear\28unsigned\20int\29 can change the state due to TinyGL::GLContext::gl_add_op\28TinyGL::GLParam*\29
[asyncify] tglClearColor\28float\2c\20float\2c\20float\2c\20float\29 can change the state due to TinyGL::GLContext::gl_add_op\28TinyGL::GLParam*\29
[asyncify] tglClearDepth\28double\29 can change the state due to TinyGL::GLContext::gl_add_op\28TinyGL::GLParam*\29
[asyncify] tglClearStencil\28int\29 can change the state due to TinyGL::GLContext::gl_add_op\28TinyGL::GLParam*\29
[asyncify] tglPolygonOffset\28float\2c\20float\29 can change the state due to TinyGL::GLContext::gl_add_op\28TinyGL::GLParam*\29
[asyncify] tglHint\28int\2c\20int\29 can change the state due to TinyGL::GLContext::gl_add_op\28TinyGL::GLParam*\29
[asyncify] tglTexImage2D\28int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20void\20const*\29 can change the state due to TinyGL::GLContext::gl_add_op\28TinyGL::GLParam*\29
[asyncify] tglBindTexture\28int\2c\20unsigned\20int\29 can change the state due to TinyGL::GLContext::gl_add_op\28TinyGL::GLParam*\29
[asyncify] tglTexEnvi\28int\2c\20int\2c\20int\29 can change the state due to TinyGL::GLContext::gl_add_op\28TinyGL::GLParam*\29
[asyncify] tglPixelStorei\28int\2c\20int\29 can change the state due to TinyGL::GLContext::gl_add_op\28TinyGL::GLParam*\29
[asyncify] tglInitNames\28\29 can change the state due to TinyGL::GLContext::gl_add_op\28TinyGL::GLParam*\29
[asyncify] tglPushName\28unsigned\20int\29 can change the state due to TinyGL::GLContext::gl_add_op\28TinyGL::GLParam*\29
[asyncify] tglPopName\28\29 can change the state due to TinyGL::GLContext::gl_add_op\28TinyGL::GLParam*\29
[asyncify] tglLoadName\28unsigned\20int\29 can change the state due to TinyGL::GLContext::gl_add_op\28TinyGL::GLParam*\29
[asyncify] tglCallList\28unsigned\20int\29 can change the state due to TinyGL::GLContext::gl_add_op\28TinyGL::GLParam*\29
[asyncify] tglArrayElement\28int\29 can change the state due to TinyGL::GLContext::gl_add_op\28TinyGL::GLParam*\29
[asyncify] tglDrawArrays\28int\2c\20int\2c\20int\29 can change the state due to TinyGL::GLContext::gl_add_op\28TinyGL::GLParam*\29
[asyncify] tglDrawElements\28int\2c\20int\2c\20int\2c\20void\20const*\29 can change the state due to TinyGL::GLContext::gl_add_op\28TinyGL::GLParam*\29
[asyncify] tglEnableClientState\28int\29 can change the state due to TinyGL::GLContext::gl_add_op\28TinyGL::GLParam*\29
[asyncify] tglDisableClientState\28int\29 can change the state due to TinyGL::GLContext::gl_add_op\28TinyGL::GLParam*\29
[asyncify] tglVertexPointer\28int\2c\20int\2c\20int\2c\20void\20const*\29 can change the state due to TinyGL::GLContext::gl_add_op\28TinyGL::GLParam*\29
[asyncify] tglColorPointer\28int\2c\20int\2c\20int\2c\20void\20const*\29 can change the state due to TinyGL::GLContext::gl_add_op\28TinyGL::GLParam*\29
[asyncify] tglNormalPointer\28int\2c\20int\2c\20void\20const*\29 can change the state due to TinyGL::GLContext::gl_add_op\28TinyGL::GLParam*\29
[asyncify] tglTexCoordPointer\28int\2c\20int\2c\20int\2c\20void\20const*\29 can change the state due to TinyGL::GLContext::gl_add_op\28TinyGL::GLParam*\29
[asyncify] tglFogfv\28int\2c\20float\20const*\29 can change the state due to TinyGL::GLContext::gl_add_op\28TinyGL::GLParam*\29
[asyncify] tglFogf\28int\2c\20float\29 can change the state due to TinyGL::GLContext::gl_add_op\28TinyGL::GLParam*\29
[asyncify] tglFogiv\28int\2c\20int\20const*\29 can change the state due to TinyGL::GLContext::gl_add_op\28TinyGL::GLParam*\29
[asyncify] tglFogi\28int\2c\20int\29 can change the state due to TinyGL::GLContext::gl_add_op\28TinyGL::GLParam*\29
[asyncify] TinyGL::glopViewport\28TinyGL::GLContext*\2c\20TinyGL::GLParam*\29 can change the state due to TinyGL::GLContext::glopViewport\28TinyGL::GLParam*\29
[asyncify] TinyGL::GLContext::endSharedState\28\29 can change the state due to TinyGL::GLContext::free_texture\28unsigned\20int\29
[asyncify] TinyGL::GLContext::deinit\28\29 can change the state due to TinyGL::GLContext::free_texture\28unsigned\20int\29
[asyncify] TinyGL::GLContext::disposeResources\28\29 can change the state due to TinyGL::GLContext::free_texture\28TinyGL::GLTexture*\29
[asyncify] TinyGL::glopTexImage2D\28TinyGL::GLContext*\2c\20TinyGL::GLParam*\29 can change the state due to TinyGL::GLContext::glopTexImage2D\28TinyGL::GLParam*\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to TinyGL::TexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const
[asyncify] tglBlit\28TinyGL::BlitImage*\2c\20int\2c\20int\29 can change the state due to TinyGL::GLContext::issueDrawCall\28TinyGL::DrawCall*\29
[asyncify] tglBlit\28TinyGL::BlitImage*\2c\20TinyGL::BlitTransform\20const&\29 can change the state due to TinyGL::GLContext::issueDrawCall\28TinyGL::DrawCall*\29
[asyncify] tglBlitNoBlend\28TinyGL::BlitImage*\2c\20TinyGL::BlitTransform\20const&\29 can change the state due to TinyGL::GLContext::issueDrawCall\28TinyGL::DrawCall*\29
[asyncify] tglBlitFast\28TinyGL::BlitImage*\2c\20int\2c\20int\29 can change the state due to TinyGL::GLContext::issueDrawCall\28TinyGL::DrawCall*\29
[asyncify] tglBlitZBuffer\28TinyGL::BlitImage*\2c\20int\2c\20int\29 can change the state due to TinyGL::GLContext::issueDrawCall\28TinyGL::DrawCall*\29
[asyncify] TinyGL::GLContext::glopClear\28TinyGL::GLParam*\29 can change the state due to TinyGL::GLContext::issueDrawCall\28TinyGL::DrawCall*\29
[asyncify] TinyGL::GLContext::glopEnd\28TinyGL::GLParam*\29 can change the state due to TinyGL::GLContext::issueDrawCall\28TinyGL::DrawCall*\29
[asyncify] TinyGL::presentBuffer\28Common::List<Common::Rect>&\29 can change the state due to TinyGL::GLContext::presentBufferDirtyRects\28Common::List<Common::Rect>&\29
[asyncify] TinyGL::presentBuffer\28\29 can change the state due to TinyGL::GLContext::presentBufferDirtyRects\28Common::List<Common::Rect>&\29
[asyncify] AdLibPart::noteOff\28unsigned\20char\29 can change the state due to MidiDriver_ADLIB::partKeyOff\28AdLibPart*\2c\20unsigned\20char\29
[asyncify] AdLibPercussionChannel::noteOff\28unsigned\20char\29 can change the state due to MidiDriver_ADLIB::partKeyOff\28AdLibPart*\2c\20unsigned\20char\29
[asyncify] AdLibPart::noteOn\28unsigned\20char\2c\20unsigned\20char\29 can change the state due to MidiDriver_ADLIB::allocateVoice\28unsigned\20char\29
[asyncify] MidiDriver_ADLIB::partKeyOn\28AdLibPart*\2c\20AdLibInstrument\20const*\2c\20unsigned\20char\2c\20unsigned\20char\2c\20AdLibInstrument\20const*\2c\20unsigned\20char\29 can change the state due to MidiDriver_ADLIB::allocateVoice\28unsigned\20char\29
[asyncify] AdLibPercussionChannel::noteOn\28unsigned\20char\2c\20unsigned\20char\29 can change the state due to MidiDriver_ADLIB::allocateVoice\28unsigned\20char\29
[asyncify] AdLibPart::pitchBend\28short\29 can change the state due to MidiDriver_ADLIB::adlibPlayNote\28int\2c\20int\29
[asyncify] MidiDriver_ADLIB::adlibNoteOn\28int\2c\20unsigned\20char\2c\20int\29 can change the state due to MidiDriver_ADLIB::adlibPlayNote\28int\2c\20int\29
[asyncify] AdLibPart::pitchBendFactor\28unsigned\20char\29 can change the state due to MidiDriver_ADLIB::adlibPlayNote\28int\2c\20int\29
[asyncify] AdLibPart::detune\28unsigned\20char\29 can change the state due to MidiDriver_ADLIB::adlibPlayNote\28int\2c\20int\29
[asyncify] AdLibPart::transpose\28signed\20char\29 can change the state due to MidiDriver_ADLIB::adlibPlayNote\28int\2c\20int\29
[asyncify] MidiDriver_ADLIB::setPitchBendRange\28unsigned\20char\2c\20unsigned\20int\29 can change the state due to MidiDriver_ADLIB::adlibPlayNote\28int\2c\20int\29
[asyncify] MidiDriver_ADLIB::mcKeyOn\28AdLibVoice*\2c\20AdLibInstrument\20const*\2c\20unsigned\20char\2c\20unsigned\20char\2c\20AdLibInstrument\20const*\2c\20unsigned\20char\29 can change the state due to MidiDriver_ADLIB::adlibNoteOnEx\28int\2c\20unsigned\20char\2c\20int\29
[asyncify] AdLibEmuMusicPlugin::createInstance\28MidiDriver**\2c\20unsigned\20int\29\20const can change the state due to MidiDriver_ADLIB::MidiDriver_ADLIB\28\29
[asyncify] MidiDriver_ADLIB_Multisource::~MidiDriver_ADLIB_Multisource\28\29.1 can change the state due to MidiDriver_ADLIB_Multisource::~MidiDriver_ADLIB_Multisource\28\29
[asyncify] MidiDriver_ADLIB_Multisource::recalculateVolumes\28unsigned\20char\2c\20unsigned\20char\29 can change the state due to MidiDriver_ADLIB_Multisource::writeVolume\28unsigned\20char\2c\20unsigned\20char\2c\20OplInstrumentRhythmType\29
[asyncify] virtual\20thunk\20to\20Audio::LoopingAudioStream::readBuffer\28short*\2c\20int\29 can change the state due to Audio::LoopingAudioStream::readBuffer\28short*\2c\20int\29
[asyncify] Audio::make8SVXStream\28Common::ReadStream&\2c\20bool\29 can change the state due to Audio::SubLoopingAudioStream::SubLoopingAudioStream\28Audio::SeekableAudioStream*\2c\20unsigned\20int\2c\20Audio::Timestamp\2c\20Audio::Timestamp\2c\20DisposeAfterUse::Flag\29.1
[asyncify] virtual\20thunk\20to\20Audio::SubLoopingAudioStream::readBuffer\28short*\2c\20int\29 can change the state due to Audio::SubLoopingAudioStream::readBuffer\28short*\2c\20int\29
[asyncify] Video::IMDDecoder::emptySoundSlice\28bool\29 can change the state due to Audio::QueuingAudioStream::queueBuffer\28unsigned\20char*\2c\20unsigned\20int\2c\20DisposeAfterUse::Flag\2c\20unsigned\20char\29
[asyncify] Video::VMDDecoder::emptySoundSlice\28unsigned\20int\29 can change the state due to Audio::QueuingAudioStream::queueBuffer\28unsigned\20char*\2c\20unsigned\20int\2c\20DisposeAfterUse::Flag\2c\20unsigned\20char\29
[asyncify] Video::SmackerDecoder::SmackerAudioTrack::queueCompressedBuffer\28unsigned\20char*\2c\20unsigned\20int\2c\20unsigned\20int\29 can change the state due to Audio::QueuingAudioStream::queueBuffer\28unsigned\20char*\2c\20unsigned\20int\2c\20DisposeAfterUse::Flag\2c\20unsigned\20char\29
[asyncify] Video::SmackerDecoder::SmackerAudioTrack::queuePCM\28unsigned\20char*\2c\20unsigned\20int\29 can change the state due to Audio::QueuingAudioStream::queueBuffer\28unsigned\20char*\2c\20unsigned\20int\2c\20DisposeAfterUse::Flag\2c\20unsigned\20char\29
[asyncify] Audio::QueuingAudioStreamImpl::~QueuingAudioStreamImpl\28\29.1 can change the state due to Audio::QueuingAudioStreamImpl::~QueuingAudioStreamImpl\28\29
[asyncify] MidiDriver_Casio::~MidiDriver_Casio\28\29.1 can change the state due to MidiDriver_Casio::~MidiDriver_Casio\28\29
[asyncify] non-virtual\20thunk\20to\20CMS::EmulatedCMS::~EmulatedCMS\28\29 can change the state due to CMS::EmulatedCMS::~EmulatedCMS\28\29
[asyncify] DOSBoxCMS::~DOSBoxCMS\28\29 can change the state due to CMS::EmulatedCMS::~EmulatedCMS\28\29
[asyncify] non-virtual\20thunk\20to\20DOSBoxCMS::~DOSBoxCMS\28\29 can change the state due to CMS::EmulatedCMS::~EmulatedCMS\28\29
[asyncify] non-virtual\20thunk\20to\20DOSBoxCMS::~DOSBoxCMS\28\29.1 can change the state due to CMS::EmulatedCMS::~EmulatedCMS\28\29
[asyncify] OPL::NUKED::OPL::~OPL\28\29 can change the state due to OPL::OPL::stop\28\29
[asyncify] OPL::DOSBox::OPL::~OPL\28\29 can change the state due to OPL::OPL::stop\28\29
[asyncify] OPL::MAME::OPL::~OPL\28\29 can change the state due to OPL::OPL::stop\28\29
[asyncify] non-virtual\20thunk\20to\20OPL::EmulatedOPL::~EmulatedOPL\28\29 can change the state due to OPL::EmulatedOPL::~EmulatedOPL\28\29
[asyncify] MidiDriver_BASE::MidiDriver_BASE\28\29 can change the state due to MidiDriver_BASE::midiDumpInit\28\29
[asyncify] MidiDriver::midiDriverCommonSend\28unsigned\20int\29 can change the state due to MidiDriver_BASE::midiDumpDo\28unsigned\20int\29
[asyncify] MidiDriver::midiDriverCommonSysEx\28unsigned\20char\20const*\2c\20unsigned\20short\29 can change the state due to MidiDriver_BASE::midiDumpSysEx\28unsigned\20char\20const*\2c\20unsigned\20short\29
[asyncify] MidiDriver_BASE::~MidiDriver_BASE\28\29 can change the state due to MidiDriver_BASE::midiDumpFinish\28\29
[asyncify] MidiDriver_MT32GM::polyAftertouch\28unsigned\20char\2c\20unsigned\20char\2c\20unsigned\20char\2c\20signed\20char\2c\20MidiDriver_MT32GM::MidiChannelControlData&\2c\20bool\29 can change the state due to MidiDriver_BASE::send\28unsigned\20char\2c\20unsigned\20char\2c\20unsigned\20char\29
[asyncify] MidiDriver_MT32GM::channelAftertouch\28unsigned\20char\2c\20unsigned\20char\2c\20signed\20char\2c\20MidiDriver_MT32GM::MidiChannelControlData&\2c\20bool\29 can change the state due to MidiDriver_BASE::send\28unsigned\20char\2c\20unsigned\20char\2c\20unsigned\20char\29
[asyncify] MidiDriver_MT32GM::pitchBend\28unsigned\20char\2c\20unsigned\20char\2c\20unsigned\20char\2c\20signed\20char\2c\20MidiDriver_MT32GM::MidiChannelControlData&\2c\20bool\29 can change the state due to MidiDriver_BASE::send\28unsigned\20char\2c\20unsigned\20char\2c\20unsigned\20char\29
[asyncify] MidiDriver_MT32GM::stopAllNotes\28bool\29 can change the state due to MidiDriver_BASE::send\28unsigned\20char\2c\20unsigned\20char\2c\20unsigned\20char\29
[asyncify] MidiDriver::setPitchBendRange\28unsigned\20char\2c\20unsigned\20int\29 can change the state due to MidiDriver_BASE::send\28unsigned\20char\2c\20unsigned\20char\2c\20unsigned\20char\29
[asyncify] Audio::MidiDriver_Miles_Midi::initMidiDevice\28\29 can change the state due to MidiDriver_BASE::send\28signed\20char\2c\20unsigned\20char\2c\20unsigned\20char\2c\20unsigned\20char\29
[asyncify] Audio::MidiDriver_Miles_AdLib::deinitSource\28unsigned\20char\29 can change the state due to MidiDriver_Multisource::deinitSource\28unsigned\20char\29
[asyncify] Audio::MidiDriver_Miles_Midi::MidiDriver_Miles_Midi\28MusicType\2c\20Audio::MilesMT32InstrumentEntry*\2c\20unsigned\20short\29 can change the state due to MidiDriver_Multisource::setSourceVolume\28unsigned\20short\29
[asyncify] MidiParser_QT::initFromContainerTracks\28\29 can change the state due to MidiParser_QT::initCommon\28\29
[asyncify] non-virtual\20thunk\20to\20MidiParser_QT::readSampleDesc\28Common::QuickTimeParser::Track*\2c\20unsigned\20int\2c\20unsigned\20int\29 can change the state due to MidiParser_QT::readSampleDesc\28Common::QuickTimeParser::Track*\2c\20unsigned\20int\2c\20unsigned\20int\29
[asyncify] Audio::MidiPlayer::onTimer\28\29 can change the state due to MidiParser::onTimer\28\29
[asyncify] MidiParser_QT::~MidiParser_QT\28\29 can change the state due to MidiParser::stopPlaying\28\29
[asyncify] MidiParser_SMF::~MidiParser_SMF\28\29 can change the state due to MidiParser::stopPlaying\28\29
[asyncify] MidiParser_XMIDI::~MidiParser_XMIDI\28\29 can change the state due to MidiParser::stopPlaying\28\29
[asyncify] MidiParser_XMIDI::~MidiParser_XMIDI\28\29.1 can change the state due to MidiParser::stopPlaying\28\29
[asyncify] MidiParser_QT::unloadMusic\28\29 can change the state due to MidiParser::unloadMusic\28\29
[asyncify] Audio::MidiPlayer::~MidiPlayer\28\29.1 can change the state due to Audio::MidiPlayer::~MidiPlayer\28\29
[asyncify] Audio::MidiPlayer::resume\28\29 can change the state due to Audio::MidiPlayer::syncVolume\28\29
[asyncify] Audio::MidiDriver_Miles_AdLib::send\28unsigned\20int\29 can change the state due to Audio::MidiDriver_Miles_AdLib::updatePhysicalFmVoice\28unsigned\20char\2c\20bool\2c\20unsigned\20short\29
[asyncify] Audio::MidiDriver_Miles_AdLib::noteOff\28unsigned\20char\2c\20unsigned\20char\29 can change the state due to Audio::MidiDriver_Miles_AdLib::updatePhysicalFmVoice\28unsigned\20char\2c\20bool\2c\20unsigned\20short\29
[asyncify] Audio::MidiDriver_Miles_AdLib::noteOn\28unsigned\20char\2c\20unsigned\20char\2c\20unsigned\20char\29 can change the state due to Audio::MidiDriver_Miles_AdLib::updatePhysicalFmVoice\28unsigned\20char\2c\20bool\2c\20unsigned\20short\29
[asyncify] Audio::MidiDriver_Miles_AdLib::controlChange\28unsigned\20char\2c\20unsigned\20char\2c\20unsigned\20char\29 can change the state due to Audio::MidiDriver_Miles_AdLib::updatePhysicalFmVoice\28unsigned\20char\2c\20bool\2c\20unsigned\20short\29
[asyncify] Audio::MidiDriver_Miles_AdLib::prioritySort\28\29 can change the state due to Audio::MidiDriver_Miles_AdLib::updatePhysicalFmVoice\28unsigned\20char\2c\20bool\2c\20unsigned\20short\29
[asyncify] Audio::MidiDriver_Miles_AdLib::pitchBendChange\28unsigned\20char\2c\20unsigned\20char\2c\20unsigned\20char\29 can change the state due to Audio::MidiDriver_Miles_AdLib::updatePhysicalFmVoice\28unsigned\20char\2c\20bool\2c\20unsigned\20short\29
[asyncify] Audio::MidiDriver_Miles_AdLib::stopAllNotes\28unsigned\20char\2c\20unsigned\20char\29 can change the state due to Audio::MidiDriver_Miles_AdLib::updatePhysicalFmVoice\28unsigned\20char\2c\20bool\2c\20unsigned\20short\29
[asyncify] Audio::MidiDriver_Miles_AdLib::releaseFmVoice\28unsigned\20char\29 can change the state due to Audio::MidiDriver_Miles_AdLib::updatePhysicalFmVoice\28unsigned\20char\2c\20bool\2c\20unsigned\20short\29
[asyncify] Audio::MidiDriver_Miles_AdLib::applySourceVolume\28unsigned\20char\29 can change the state due to Audio::MidiDriver_Miles_AdLib::updatePhysicalFmVoice\28unsigned\20char\2c\20bool\2c\20unsigned\20short\29
[asyncify] Audio::MidiDriver_Miles_Midi::deinitSource\28unsigned\20char\29 can change the state due to Audio::MidiDriver_Miles_Midi::unlockChannel\28unsigned\20char\29
[asyncify] Audio::MidiDriver_Miles_MT32_create\28Common::String\20const&\29 can change the state due to Audio::MidiDriver_Miles_MIDI_create\28MusicType\2c\20Common::String\20const&\29
[asyncify] SdlMixerManager::callbackHandler\28unsigned\20char*\2c\20int\29 can change the state due to Audio::MixerImpl::mixCallback\28unsigned\20char*\2c\20unsigned\20int\29
[asyncify] Audio::MixerImpl::getElapsedTime\28Audio::SoundHandle\29 can change the state due to Audio::Channel::getElapsedTime\28\29
[asyncify] Audio::MixerImpl::loopChannel\28Audio::SoundHandle\29 can change the state due to Audio::Channel::loop\28\29
[asyncify] Audio::MixerImpl::~MixerImpl\28\29 can change the state due to Audio::Channel::~Channel\28\29
[asyncify] Audio::MixerImpl::insertChannel\28Audio::SoundHandle*\2c\20Audio::Channel*\29 can change the state due to Audio::Channel::~Channel\28\29
[asyncify] Audio::MixerImpl::stopAll\28\29 can change the state due to Audio::Channel::~Channel\28\29
[asyncify] Audio::MixerImpl::stopID\28int\29 can change the state due to Audio::Channel::~Channel\28\29
[asyncify] Audio::MixerImpl::stopHandle\28Audio::SoundHandle\29 can change the state due to Audio::Channel::~Channel\28\29
[asyncify] MidiDriver_SEQ::close\28\29 can change the state due to MidiDriver_MPU401::close\28\29
[asyncify] MidiDriver_TIMIDITY::close\28\29 can change the state due to MidiDriver_MPU401::close\28\29
[asyncify] Audio::MidiDriver_Miles_Midi::~MidiDriver_Miles_Midi\28\29 can change the state due to MidiDriver_MT32GM::~MidiDriver_MT32GM\28\29
[asyncify] MidiDriver_MT32GM::~MidiDriver_MT32GM\28\29.1 can change the state due to MidiDriver_MT32GM::~MidiDriver_MT32GM\28\29
[asyncify] Audio::MidiDriver_Miles_Midi::programChange\28unsigned\20char\2c\20unsigned\20char\2c\20signed\20char\2c\20MidiDriver_MT32GM::MidiChannelControlData&\2c\20bool\29 can change the state due to MidiDriver_MT32GM::programChange\28unsigned\20char\2c\20unsigned\20char\2c\20signed\20char\2c\20MidiDriver_MT32GM::MidiChannelControlData&\2c\20bool\29
[asyncify] Audio::MidiDriver_Miles_Midi::writePatchByte\28unsigned\20char\2c\20unsigned\20char\2c\20unsigned\20char\29 can change the state due to MidiDriver_MT32GM::sysExMT32\28unsigned\20char\20const*\2c\20unsigned\20short\2c\20unsigned\20int\2c\20bool\2c\20bool\2c\20signed\20char\29
[asyncify] Audio::MidiDriver_Miles_Midi::writeRhythmSetup\28unsigned\20char\2c\20unsigned\20char\29 can change the state due to MidiDriver_MT32GM::sysExMT32\28unsigned\20char\20const*\2c\20unsigned\20short\2c\20unsigned\20int\2c\20bool\2c\20bool\2c\20signed\20char\29
[asyncify] Audio::MidiDriver_Miles_Midi::writeToSystemArea\28unsigned\20char\2c\20unsigned\20char\29 can change the state due to MidiDriver_MT32GM::sysExMT32\28unsigned\20char\20const*\2c\20unsigned\20short\2c\20unsigned\20int\2c\20bool\2c\20bool\2c\20signed\20char\29
[asyncify] Audio::MidiDriver_Miles_Midi::setupPatch\28unsigned\20char\2c\20unsigned\20char\2c\20bool\29 can change the state due to MidiDriver_MT32GM::sysExMT32\28unsigned\20char\20const*\2c\20unsigned\20short\2c\20unsigned\20int\2c\20bool\2c\20bool\2c\20signed\20char\29
[asyncify] Audio::MidiDriver_Miles_Midi::writePatchTimbre\28unsigned\20char\2c\20unsigned\20char\2c\20unsigned\20char\2c\20bool\29 can change the state due to MidiDriver_MT32GM::sysExMT32\28unsigned\20char\20const*\2c\20unsigned\20short\2c\20unsigned\20int\2c\20bool\2c\20bool\2c\20signed\20char\29
[asyncify] Audio::MidiDriver_Miles_Midi::installCustomTimbre\28unsigned\20char\2c\20unsigned\20char\29 can change the state due to MidiDriver_MT32GM::sysExMT32\28unsigned\20char\20const*\2c\20unsigned\20short\2c\20unsigned\20int\2c\20bool\2c\20bool\2c\20signed\20char\29
[asyncify] AppleIIGSMusicPlugin::getDevices\28\29\20const can change the state due to MusicDevice::MusicDevice\28MusicPluginObject\20const*\2c\20Common::String\2c\20MusicType\29
[asyncify] MT32EmuMusicPlugin::getDevices\28\29\20const can change the state due to MusicDevice::MusicDevice\28MusicPluginObject\20const*\2c\20Common::String\2c\20MusicType\29
[asyncify] PCSpeakerMusicPlugin::getDevices\28\29\20const can change the state due to MusicDevice::MusicDevice\28MusicPluginObject\20const*\2c\20Common::String\2c\20MusicType\29
[asyncify] PCjrMusicPlugin::getDevices\28\29\20const can change the state due to MusicDevice::MusicDevice\28MusicPluginObject\20const*\2c\20Common::String\2c\20MusicType\29
[asyncify] AdLibEmuMusicPlugin::getDevices\28\29\20const can change the state due to MusicDevice::MusicDevice\28MusicPluginObject\20const*\2c\20Common::String\2c\20MusicType\29
[asyncify] NullMusicPlugin::getDevices\28\29\20const can change the state due to MusicDevice::MusicDevice\28MusicPluginObject\20const*\2c\20Common::String\2c\20MusicType\29
[asyncify] AutoMusicPlugin::getDevices\28\29\20const can change the state due to MusicDevice::MusicDevice\28MusicPluginObject\20const*\2c\20Common::String\2c\20MusicType\29
[asyncify] AmigaMusicPlugin::getDevices\28\29\20const can change the state due to MusicDevice::MusicDevice\28MusicPluginObject\20const*\2c\20Common::String\2c\20MusicType\29
[asyncify] CMSMusicPlugin::getDevices\28\29\20const can change the state due to MusicDevice::MusicDevice\28MusicPluginObject\20const*\2c\20Common::String\2c\20MusicType\29
[asyncify] TownsEmuMusicPlugin::getDevices\28\29\20const can change the state due to MusicDevice::MusicDevice\28MusicPluginObject\20const*\2c\20Common::String\2c\20MusicType\29
[asyncify] PC98EmuMusicPlugin::getDevices\28\29\20const can change the state due to MusicDevice::MusicDevice\28MusicPluginObject\20const*\2c\20Common::String\2c\20MusicType\29
[asyncify] SegaCDSoundPlugin::getDevices\28\29\20const can change the state due to MusicDevice::MusicDevice\28MusicPluginObject\20const*\2c\20Common::String\2c\20MusicType\29
[asyncify] SeqMusicPlugin::getDevices\28\29\20const can change the state due to MusicDevice::MusicDevice\28MusicPluginObject\20const*\2c\20Common::String\2c\20MusicType\29
[asyncify] TimidityMusicPlugin::getDevices\28\29\20const can change the state due to MusicDevice::MusicDevice\28MusicPluginObject\20const*\2c\20Common::String\2c\20MusicType\29
[asyncify] C64MusicPlugin::getDevices\28\29\20const can change the state due to MusicDevice::MusicDevice\28MusicPluginObject\20const*\2c\20Common::String\2c\20MusicType\29
[asyncify] virtual\20thunk\20to\20Audio::Audio3DO_ADP4_Stream::readBuffer\28short*\2c\20int\29 can change the state due to Audio::Audio3DO_ADP4_Stream::readBuffer\28short*\2c\20int\29
[asyncify] virtual\20thunk\20to\20Audio::Audio3DO_SDX2_Stream::readBuffer\28short*\2c\20int\29 can change the state due to Audio::Audio3DO_SDX2_Stream::readBuffer\28short*\2c\20int\29
[asyncify] virtual\20thunk\20to\20Audio::Oki_ADPCMStream::readBuffer\28short*\2c\20int\29 can change the state due to Audio::Oki_ADPCMStream::readBuffer\28short*\2c\20int\29
[asyncify] virtual\20thunk\20to\20Audio::XA_ADPCMStream::readBuffer\28short*\2c\20int\29 can change the state due to Audio::XA_ADPCMStream::readBuffer\28short*\2c\20int\29
[asyncify] virtual\20thunk\20to\20Audio::DVI_ADPCMStream::readBuffer\28short*\2c\20int\29 can change the state due to Audio::DVI_ADPCMStream::readBuffer\28short*\2c\20int\29
[asyncify] virtual\20thunk\20to\20Audio::Apple_ADPCMStream::readBuffer\28short*\2c\20int\29 can change the state due to Audio::Apple_ADPCMStream::readBuffer\28short*\2c\20int\29
[asyncify] virtual\20thunk\20to\20Audio::MSIma_ADPCMStream::readBuffer\28short*\2c\20int\29 can change the state due to Audio::MSIma_ADPCMStream::readBuffer\28short*\2c\20int\29
[asyncify] virtual\20thunk\20to\20Audio::MS_ADPCMStream::readBuffer\28short*\2c\20int\29 can change the state due to Audio::MS_ADPCMStream::readBuffer\28short*\2c\20int\29
[asyncify] virtual\20thunk\20to\20Audio::DK3_ADPCMStream::readBuffer\28short*\2c\20int\29 can change the state due to Audio::DK3_ADPCMStream::readBuffer\28short*\2c\20int\29
[asyncify] Audio::makeAIFFStream\28Common::SeekableReadStream*\2c\20DisposeAfterUse::Flag\29 can change the state due to Audio::AIFFHeader::readAIFFHeader\28Common::SeekableReadStream*\2c\20DisposeAfterUse::Flag\29
[asyncify] Audio::makeQDM2Decoder\28Common::SeekableReadStream*\2c\20DisposeAfterUse::Flag\29 can change the state due to Audio::QDM2Stream::QDM2Stream\28Common::SeekableReadStream*\2c\20DisposeAfterUse::Flag\29
[asyncify] Audio::QuickTimeAudioDecoder::~QuickTimeAudioDecoder\28\29.1 can change the state due to Audio::QuickTimeAudioDecoder::~QuickTimeAudioDecoder\28\29
[asyncify] Audio::QuickTimeAudioDecoder::init\28\29 can change the state due to Audio::QuickTimeAudioDecoder::QuickTimeAudioTrack::QuickTimeAudioTrack\28Audio::QuickTimeAudioDecoder*\2c\20Common::QuickTimeParser::Track*\29
[asyncify] Audio::QuickTimeAudioDecoder::QuickTimeAudioTrack::findEdit\28Audio::Timestamp\20const&\29 can change the state due to Audio::QuickTimeAudioDecoder::QuickTimeAudioTrack::enterNewEdit\28Audio::Timestamp\20const&\29
[asyncify] Audio::QuickTimeAudioDecoder::AudioSampleDesc::~AudioSampleDesc\28\29.1 can change the state due to Audio::QuickTimeAudioDecoder::AudioSampleDesc::~AudioSampleDesc\28\29
[asyncify] Video::VMDDecoder::create8bitRaw\28Common::SeekableReadStream*\29 can change the state due to Audio::makeRawStream\28Common::SeekableReadStream*\2c\20int\2c\20unsigned\20char\2c\20DisposeAfterUse::Flag\29
[asyncify] Audio::makeRawStream\28unsigned\20char\20const*\2c\20unsigned\20int\2c\20int\2c\20unsigned\20char\2c\20DisposeAfterUse::Flag\29 can change the state due to Audio::makeRawStream\28Common::SeekableReadStream*\2c\20int\2c\20unsigned\20char\2c\20DisposeAfterUse::Flag\29
[asyncify] Audio::WMACodec::decodeFrame\28Common::SeekableReadStream&\29 can change the state due to Audio::makeRawStream\28Common::SeekableReadStream*\2c\20int\2c\20unsigned\20char\2c\20DisposeAfterUse::Flag\29
[asyncify] Audio::RawStream<3\2c\20true\2c\20true>::readBuffer\28short*\2c\20int\29 can change the state due to Audio::RawStream<3\2c\20true\2c\20true>::fillBuffer\28int\29
[asyncify] Audio::RawStream<3\2c\20true\2c\20false>::readBuffer\28short*\2c\20int\29 can change the state due to Audio::RawStream<3\2c\20true\2c\20false>::fillBuffer\28int\29
[asyncify] Audio::RawStream<2\2c\20true\2c\20true>::readBuffer\28short*\2c\20int\29 can change the state due to Audio::RawStream<2\2c\20true\2c\20true>::fillBuffer\28int\29
[asyncify] Audio::RawStream<2\2c\20true\2c\20false>::readBuffer\28short*\2c\20int\29 can change the state due to Audio::RawStream<2\2c\20true\2c\20false>::fillBuffer\28int\29
[asyncify] Audio::RawStream<1\2c\20true\2c\20false>::readBuffer\28short*\2c\20int\29 can change the state due to Audio::RawStream<1\2c\20true\2c\20false>::fillBuffer\28int\29
[asyncify] Audio::RawStream<3\2c\20false\2c\20true>::readBuffer\28short*\2c\20int\29 can change the state due to Audio::RawStream<3\2c\20false\2c\20true>::fillBuffer\28int\29
[asyncify] Audio::RawStream<3\2c\20false\2c\20false>::readBuffer\28short*\2c\20int\29 can change the state due to Audio::RawStream<3\2c\20false\2c\20false>::fillBuffer\28int\29
[asyncify] Audio::RawStream<2\2c\20false\2c\20true>::readBuffer\28short*\2c\20int\29 can change the state due to Audio::RawStream<2\2c\20false\2c\20true>::fillBuffer\28int\29
[asyncify] Audio::RawStream<2\2c\20false\2c\20false>::readBuffer\28short*\2c\20int\29 can change the state due to Audio::RawStream<2\2c\20false\2c\20false>::fillBuffer\28int\29
[asyncify] Audio::RawStream<1\2c\20false\2c\20false>::readBuffer\28short*\2c\20int\29 can change the state due to Audio::RawStream<1\2c\20false\2c\20false>::fillBuffer\28int\29
[asyncify] Audio::VocStream::VocStream\28Common::SeekableReadStream*\2c\20bool\2c\20DisposeAfterUse::Flag\29 can change the state due to Audio::VocStream::preProcess\28\29
[asyncify] Audio::VocStream::VocStream\28Common::SeekableReadStream*\2c\20bool\2c\20DisposeAfterUse::Flag\29.1 can change the state due to Audio::VocStream::preProcess\28\29
[asyncify] Audio::VocStream::readBuffer\28short*\2c\20int\29 can change the state due to Audio::VocStream::fillBuffer\28int\29
[asyncify] virtual\20thunk\20to\20Audio::VocStream::readBuffer\28short*\2c\20int\29 can change the state due to Audio::VocStream::fillBuffer\28int\29
[asyncify] Audio::WMACodec::WMACodec\28int\2c\20unsigned\20int\2c\20unsigned\20char\2c\20unsigned\20int\2c\20unsigned\20int\2c\20Common::SeekableReadStream*\29 can change the state due to Audio::WMACodec::init\28Common::SeekableReadStream*\29
[asyncify] Audio::WMACodec::decodeSpectralCoef\28Common::BitStreamImpl<Common::SeekableReadStream\2c\20unsigned\20long\20long\2c\208\2c\20false\2c\20true>&\2c\20bool\2c\20bool*\2c\20int*\2c\20int\29 can change the state due to Common::BitStreamImpl<Common::SeekableReadStream\2c\20unsigned\20long\20long\2c\208\2c\20false\2c\20true>::skip\28unsigned\20int\29
[asyncify] Audio::WMACodec::evalBlockLength\28Common::BitStreamImpl<Common::SeekableReadStream\2c\20unsigned\20long\20long\2c\208\2c\20false\2c\20true>&\29 can change the state due to Common::BitStreamImpl<Common::SeekableReadStream\2c\20unsigned\20long\20long\2c\208\2c\20false\2c\20true>::getBits\28unsigned\20long\29
[asyncify] Audio::WMACodec::decodeRunLevel\28Common::BitStreamImpl<Common::SeekableReadStream\2c\20unsigned\20long\20long\2c\208\2c\20false\2c\20true>&\2c\20Common::Huffman<Common::BitStreamImpl<Common::SeekableReadStream\2c\20unsigned\20long\20long\2c\208\2c\20false\2c\20true>>\20const&\2c\20float\20const*\2c\20unsigned\20short\20const*\2c\20int\2c\20float*\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\29 can change the state due to Common::BitStreamImpl<Common::SeekableReadStream\2c\20unsigned\20long\20long\2c\208\2c\20false\2c\20true>::getBits\28unsigned\20long\29
[asyncify] Audio::WMACodec::decodeExpLSP\28Common::BitStreamImpl<Common::SeekableReadStream\2c\20unsigned\20long\20long\2c\208\2c\20false\2c\20true>&\2c\20int\29 can change the state due to unsigned\20int\20Common::BitStreamImpl<Common::SeekableReadStream\2c\20unsigned\20long\20long\2c\208\2c\20false\2c\20true>::getBits<4>\28\29
[asyncify] Audio::WMACodec::getLargeVal\28Common::BitStreamImpl<Common::SeekableReadStream\2c\20unsigned\20long\20long\2c\208\2c\20false\2c\20true>&\29 can change the state due to unsigned\20int\20Common::BitStreamImpl<Common::SeekableReadStream\2c\20unsigned\20long\20long\2c\208\2c\20false\2c\20true>::getBits<8>\28\29
[asyncify] Audio::WMACodec::decodeBlock\28Common::BitStreamImpl<Common::SeekableReadStream\2c\20unsigned\20long\20long\2c\208\2c\20false\2c\20true>&\29 can change the state due to Common::BitStreamImpl<Common::SeekableReadStream\2c\20unsigned\20long\20long\2c\208\2c\20false\2c\20true>::getBit\28\29
[asyncify] Audio::WMACodec::decodeChannels\28Common::BitStreamImpl<Common::SeekableReadStream\2c\20unsigned\20long\20long\2c\208\2c\20false\2c\20true>&\2c\20int\2c\20bool\2c\20bool*\29 can change the state due to Common::BitStreamImpl<Common::SeekableReadStream\2c\20unsigned\20long\20long\2c\208\2c\20false\2c\20true>::getBit\28\29
[asyncify] Audio::WMACodec::decodeNoise\28Common::BitStreamImpl<Common::SeekableReadStream\2c\20unsigned\20long\20long\2c\208\2c\20false\2c\20true>&\2c\20int\2c\20bool*\2c\20int*\29 can change the state due to Common::BitStreamImpl<Common::SeekableReadStream\2c\20unsigned\20long\20long\2c\208\2c\20false\2c\20true>::getBit\28\29
[asyncify] Audio::WMACodec::decodeExponents\28Common::BitStreamImpl<Common::SeekableReadStream\2c\20unsigned\20long\20long\2c\208\2c\20false\2c\20true>&\2c\20int\2c\20bool*\29 can change the state due to Common::BitStreamImpl<Common::SeekableReadStream\2c\20unsigned\20long\20long\2c\208\2c\20false\2c\20true>::getBit\28\29
[asyncify] Audio::WMACodec::readTotalGain\28Common::BitStreamImpl<Common::SeekableReadStream\2c\20unsigned\20long\20long\2c\208\2c\20false\2c\20true>&\29 can change the state due to unsigned\20int\20Common::BitStreamImpl<Common::SeekableReadStream\2c\20unsigned\20long\20long\2c\208\2c\20false\2c\20true>::getBits<7>\28\29
[asyncify] Audio::WMACodec::decodeExpHuffman\28Common::BitStreamImpl<Common::SeekableReadStream\2c\20unsigned\20long\20long\2c\208\2c\20false\2c\20true>&\2c\20int\29 can change the state due to Common::Huffman<Common::BitStreamImpl<Common::SeekableReadStream\2c\20unsigned\20long\20long\2c\208\2c\20false\2c\20true>>::getSymbol\28Common::BitStreamImpl<Common::SeekableReadStream\2c\20unsigned\20long\20long\2c\208\2c\20false\2c\20true>&\29\20const
[asyncify] virtual\20thunk\20to\20Audio::XAStream::readBuffer\28short*\2c\20int\29 can change the state due to Audio::XAStream::readBuffer\28short*\2c\20int\29
[asyncify] Audio::Infogrames::Instruments::load\28char\20const*\29 can change the state due to Audio::Infogrames::Instruments::load\28Common::SeekableReadStream&\29
[asyncify] Audio::Infogrames::load\28char\20const*\29 can change the state due to Audio::Infogrames::load\28Common::SeekableReadStream&\29
[asyncify] Modules::ModXmS3mStream::ModXmS3mStream\28Common::SeekableReadStream*\2c\20int\2c\20int\2c\20int\29 can change the state due to Modules::ModuleModXmS3m::load\28Common::SeekableReadStream&\29
[asyncify] Modules::ModXmS3mStream::ModXmS3mStream\28Common::SeekableReadStream*\2c\20int\2c\20int\2c\20int\29.1 can change the state due to Modules::ModuleModXmS3m::load\28Common::SeekableReadStream&\29
[asyncify] Audio::makeProtrackerStream\28Common::SeekableReadStream*\2c\20int\2c\20int\2c\20bool\2c\20Modules::Module**\29 can change the state due to Modules::ProtrackerStream::ProtrackerStream\28Common::SeekableReadStream*\2c\20int\2c\20int\2c\20bool\29
[asyncify] Modules::ProtrackerStream::~ProtrackerStream\28\29.1 can change the state due to Modules::ProtrackerStream::~ProtrackerStream\28\29
[asyncify] Modules::ProtrackerStream::interrupt\28\29 can change the state due to Modules::ProtrackerStream::updateRow\28\29
[asyncify] Audio::Infogrames::Infogrames\28Audio::Infogrames::Instruments&\2c\20bool\2c\20int\2c\20int\29 can change the state due to Audio::Paula::Paula\28bool\2c\20int\2c\20unsigned\20int\2c\20Audio::Paula::FilterMode\2c\20int\29
[asyncify] Audio::MaxTrax::MaxTrax\28int\2c\20bool\2c\20unsigned\20short\2c\20unsigned\20short\29 can change the state due to Audio::Paula::Paula\28bool\2c\20int\2c\20unsigned\20int\2c\20Audio::Paula::FilterMode\2c\20int\29
[asyncify] Modules::ProtrackerStream::ProtrackerStream\28int\2c\20bool\29 can change the state due to Audio::Paula::Paula\28bool\2c\20int\2c\20unsigned\20int\2c\20Audio::Paula::FilterMode\2c\20int\29
[asyncify] Audio::Rjp1::Rjp1\28int\2c\20bool\29 can change the state due to Audio::Paula::Paula\28bool\2c\20int\2c\20unsigned\20int\2c\20Audio::Paula::FilterMode\2c\20int\29
[asyncify] Audio::SoundFx::SoundFx\28int\2c\20bool\2c\20bool\2c\20int\29 can change the state due to Audio::Paula::Paula\28bool\2c\20int\2c\20unsigned\20int\2c\20Audio::Paula::FilterMode\2c\20int\29
[asyncify] Audio::Tfmx::Tfmx\28int\2c\20bool\29 can change the state due to Audio::Paula::Paula\28bool\2c\20int\2c\20unsigned\20int\2c\20Audio::Paula::FilterMode\2c\20int\29
[asyncify] Audio::Paula::readBuffer\28short*\2c\20int\29 can change the state due to int\20Audio::Paula::readBufferIntern<true>\28short*\2c\20int\29
[asyncify] Audio::Tfmx::advancePatterns\28\29 can change the state due to Audio::Tfmx::trackRun\28bool\29
[asyncify] DOSBoxCMS::generateSamples\28short*\2c\20int\29 can change the state due to DOSBoxCMS::update\28int\2c\20short*\2c\20int\29
[asyncify] OPL::DOSBox::DBOPL::Channel*\20OPL::DOSBox::DBOPL::Channel::BlockTemplate<\28OPL::DOSBox::DBOPL::SynthMode\2911>\28OPL::DOSBox::DBOPL::Chip*\2c\20unsigned\20int\2c\20int*\29 can change the state due to void\20OPL::DOSBox::DBOPL::Channel::GeneratePercussion<true>\28OPL::DOSBox::DBOPL::Chip*\2c\20int*\29
[asyncify] OPL::DOSBox::DBOPL::Channel*\20OPL::DOSBox::DBOPL::Channel::BlockTemplate<\28OPL::DOSBox::DBOPL::SynthMode\2910>\28OPL::DOSBox::DBOPL::Chip*\2c\20unsigned\20int\2c\20int*\29 can change the state due to void\20OPL::DOSBox::DBOPL::Channel::GeneratePercussion<false>\28OPL::DOSBox::DBOPL::Chip*\2c\20int*\29
[asyncify] OPL::DOSBox::OPL::generateSamples\28short*\2c\20int\29 can change the state due to OPL::DOSBox::DBOPL::Chip::GenerateBlock2\28unsigned\20int\2c\20int*\29
[asyncify] OPL::DOSBox::OPL::write\28int\2c\20int\29 can change the state due to OPL::DOSBox::Chip::write\28unsigned\20int\2c\20unsigned\20char\29
[asyncify] OPL::DOSBox::OPL::dualWrite\28unsigned\20char\2c\20unsigned\20char\2c\20unsigned\20char\29 can change the state due to OPL::DOSBox::Chip::write\28unsigned\20int\2c\20unsigned\20char\29
[asyncify] OPL::MAME::OPLCreate\28int\2c\20int\2c\20int\29 can change the state due to OPL::MAME::OPLResetChip\28OPL::MAME::fm_opl_f*\29
[asyncify] OPL::MAME::OPL::reset\28\29 can change the state due to OPL::MAME::OPLResetChip\28OPL::MAME::fm_opl_f*\29
[asyncify] OPL::MAME::OPL::writeReg\28int\2c\20int\29 can change the state due to OPL::MAME::OPLWriteReg\28OPL::MAME::fm_opl_f*\2c\20int\2c\20int\29
[asyncify] SegaAudioInterfaceInternal::nextTickEx\28int*\2c\20unsigned\20int\29 can change the state due to PCMDevice_Base::readBuffer\28int*\2c\20unsigned\20int\29
[asyncify] TownsAudioInterfaceInternal::intf_loadWaveTable\28void*&\29 can change the state due to TownsAudioInterfaceInternal::callback\28int\2c\20...\29
[asyncify] TownsAudioInterfaceInternal::intf_unloadWaveTable\28void*&\29 can change the state due to TownsAudioInterfaceInternal::callback\28int\2c\20...\29
[asyncify] TownsAudioInterfaceInternal::init\28\29 can change the state due to TownsAudioInterfaceInternal::callback\28int\2c\20...\29
[asyncify] TownsAudioInterfaceInternal::intf_reset\28void*&\29 can change the state due to TownsAudioInterfaceInternal::callback\28int\2c\20...\29
[asyncify] TownsAudioInterfaceInternal::~TownsAudioInterfaceInternal\28\29.1 can change the state due to TownsAudioInterfaceInternal::~TownsAudioInterfaceInternal\28\29
[asyncify] TownsAudioInterfaceInternal::releaseRef\28TownsAudioInterface*\29 can change the state due to TownsAudioInterfaceInternal::~TownsAudioInterfaceInternal\28\29
[asyncify] TownsAudioInterface::~TownsAudioInterface\28\29 can change the state due to TownsAudioInterfaceInternal::~TownsAudioInterfaceInternal\28\29
[asyncify] EuphonyPlayer::event_setTempo\28\29 can change the state due to TownsAudioInterface::callback\28int\2c\20...\29
[asyncify] EuphonyPlayer::reset\28\29 can change the state due to TownsAudioInterface::callback\28int\2c\20...\29
[asyncify] EuphonyDriver::reset\28\29 can change the state due to TownsAudioInterface::callback\28int\2c\20...\29
[asyncify] EuphonyPlayer::setTempo\28int\29 can change the state due to TownsAudioInterface::callback\28int\2c\20...\29
[asyncify] EuphonyPlayer::sendTempo\28int\29 can change the state due to TownsAudioInterface::callback\28int\2c\20...\29
[asyncify] EuphonyDriver::setTimerA\28bool\2c\20int\29 can change the state due to TownsAudioInterface::callback\28int\2c\20...\29
[asyncify] EuphonyDriver::setTimerB\28bool\2c\20int\29 can change the state due to TownsAudioInterface::callback\28int\2c\20...\29
[asyncify] EuphonyDriver::assignPartToChannel\28int\2c\20int\29 can change the state due to TownsAudioInterface::callback\28int\2c\20...\29
[asyncify] EuphonyDriver::noteOff\28\29 can change the state due to TownsAudioInterface::callback\28int\2c\20...\29
[asyncify] EuphonyDriver::noteOn\28\29 can change the state due to TownsAudioInterface::callback\28int\2c\20...\29
[asyncify] EuphonyDriver::controlChange_volume\28\29 can change the state due to TownsAudioInterface::callback\28int\2c\20...\29
[asyncify] EuphonyDriver::controlChange_panPos\28\29 can change the state due to TownsAudioInterface::callback\28int\2c\20...\29
[asyncify] EuphonyDriver::controlChange_allNotesOff\28\29 can change the state due to TownsAudioInterface::callback\28int\2c\20...\29
[asyncify] EuphonyDriver::programChange\28\29 can change the state due to TownsAudioInterface::callback\28int\2c\20...\29
[asyncify] EuphonyDriver::pitchWheel\28\29 can change the state due to TownsAudioInterface::callback\28int\2c\20...\29
[asyncify] EuphonyDriver::loadInstrument\28int\2c\20int\2c\20unsigned\20char\20const*\29 can change the state due to TownsAudioInterface::callback\28int\2c\20...\29
[asyncify] EuphonyDriver::setInstrument\28int\2c\20int\29 can change the state due to TownsAudioInterface::callback\28int\2c\20...\29
[asyncify] EuphonyDriver::loadWaveTable\28unsigned\20char\20const*\29 can change the state due to TownsAudioInterface::callback\28int\2c\20...\29
[asyncify] EuphonyDriver::unloadWaveTable\28int\29 can change the state due to TownsAudioInterface::callback\28int\2c\20...\29
[asyncify] EuphonyDriver::reserveSoundEffectChannels\28int\29 can change the state due to TownsAudioInterface::callback\28int\2c\20...\29
[asyncify] EuphonyDriver::playSoundEffect\28int\2c\20int\2c\20int\2c\20unsigned\20char\20const*\29 can change the state due to TownsAudioInterface::callback\28int\2c\20...\29
[asyncify] EuphonyDriver::stopSoundEffect\28int\29 can change the state due to TownsAudioInterface::callback\28int\2c\20...\29
[asyncify] EuphonyDriver::soundEffectIsPlaying\28int\29 can change the state due to TownsAudioInterface::callback\28int\2c\20...\29
[asyncify] EuphonyDriver::channelPan\28int\2c\20int\29 can change the state due to TownsAudioInterface::callback\28int\2c\20...\29
[asyncify] EuphonyDriver::channelPitch\28int\2c\20int\29 can change the state due to TownsAudioInterface::callback\28int\2c\20...\29
[asyncify] EuphonyDriver::channelVolume\28int\2c\20int\29 can change the state due to TownsAudioInterface::callback\28int\2c\20...\29
[asyncify] EuphonyDriver::setOutputVolume\28int\2c\20int\2c\20int\29 can change the state due to TownsAudioInterface::callback\28int\2c\20...\29
[asyncify] EuphonyDriver::cdaToggle\28int\29 can change the state due to TownsAudioInterface::callback\28int\2c\20...\29
[asyncify] EuphonyPlayer::~EuphonyPlayer\28\29.1 can change the state due to EuphonyPlayer::~EuphonyPlayer\28\29
[asyncify] EuphonyPlayer::stop\28\29 can change the state due to EuphonyPlayer::sendControllerReset\28int\2c\20int\29
[asyncify] EuphonyPlayer::resetAllControls\28\29 can change the state due to EuphonyPlayer::sendControllerReset\28int\2c\20int\29
[asyncify] EuphonyPlayer::updateCheckEot\28\29 can change the state due to EuphonyPlayer::sendControllerReset\28int\2c\20int\29
[asyncify] EuphonyPlayer::pause\28\29 can change the state due to EuphonyPlayer::clearHangingNotes\28\29
[asyncify] EuphonyPlayer::timerCallback\28int\29 can change the state due to EuphonyPlayer::clearHangingNotes\28\29
[asyncify] EuphonyPlayer::updateParser\28\29 can change the state due to EuphonyPlayer::clearHangingNotes\28\29
[asyncify] TownsPC98_MusicChannel::~TownsPC98_MusicChannel\28\29.1 can change the state due to TownsPC98_MusicChannel::~TownsPC98_MusicChannel\28\29
[asyncify] TownsPC98_MusicChannelPCM::~TownsPC98_MusicChannelPCM\28\29.1 can change the state due to TownsPC98_MusicChannelPCM::~TownsPC98_MusicChannelPCM\28\29
[asyncify] TownsPC98_AudioDriver::~TownsPC98_AudioDriver\28\29.1 can change the state due to TownsPC98_AudioDriver::~TownsPC98_AudioDriver\28\29
[asyncify] TownsPC98_AudioDriver::init\28\29 can change the state due to TownsPC98_AudioDriver::reset\28\29
[asyncify] TownsPC98_MusicChannelSSG::~TownsPC98_MusicChannelSSG\28\29 can change the state due to TownsPC98_MusicChannelSSG::~TownsPC98_MusicChannelSSG\28\29.1
[asyncify] TownsPC98_SfxChannel::~TownsPC98_SfxChannel\28\29 can change the state due to TownsPC98_MusicChannelSSG::~TownsPC98_MusicChannelSSG\28\29.1
[asyncify] PC98AudioCoreInternal::PC98AudioCoreInternal\28Audio::Mixer*\2c\20PC98AudioCore*\2c\20PC98AudioPluginDriver*\2c\20PC98AudioPluginDriver::EmuType\29 can change the state due to TownsPC98_FmSynth::TownsPC98_FmSynth\28Audio::Mixer*\2c\20TownsPC98_FmSynth::EmuType\29
[asyncify] SegaAudioInterfaceInternal::SegaAudioInterfaceInternal\28Audio::Mixer*\2c\20SegaAudioInterface*\2c\20SegaAudioPluginDriver*\29 can change the state due to TownsPC98_FmSynth::TownsPC98_FmSynth\28Audio::Mixer*\2c\20TownsPC98_FmSynth::EmuType\29
[asyncify] TownsAudioInterfaceInternal::TownsAudioInterfaceInternal\28Audio::Mixer*\2c\20TownsAudioInterface*\2c\20TownsAudioInterfacePluginDriver*\2c\20bool\29 can change the state due to TownsPC98_FmSynth::TownsPC98_FmSynth\28Audio::Mixer*\2c\20TownsPC98_FmSynth::EmuType\29
[asyncify] PC98AudioCoreInternal::~PC98AudioCoreInternal\28\29 can change the state due to TownsPC98_FmSynth::~TownsPC98_FmSynth\28\29
[asyncify] SegaAudioInterfaceInternal::~SegaAudioInterfaceInternal\28\29 can change the state due to TownsPC98_FmSynth::~TownsPC98_FmSynth\28\29
[asyncify] PC98AudioCoreInternal::init\28\29 can change the state due to TownsPC98_FmSynth::init\28\29
[asyncify] SegaAudioInterfaceInternal::init\28\29 can change the state due to TownsPC98_FmSynth::init\28\29
[asyncify] MidiDriver_MT32::~MidiDriver_MT32\28\29 can change the state due to MidiDriver_MT32::close\28\29
[asyncify] non-virtual\20thunk\20to\20MidiDriver_MT32::close\28\29 can change the state due to MidiDriver_MT32::close\28\29
[asyncify] non-virtual\20thunk\20to\20MidiDriver_MT32::open\28\29 can change the state due to MidiDriver_MT32::open\28\29
[asyncify] VGMItem::GetBytes\28unsigned\20int\2c\20unsigned\20int\2c\20void*\29 can change the state due to RawFile::GetBytes\28unsigned\20long\2c\20unsigned\20int\2c\20void*\29\20const
[asyncify] VGMFile::GetBytes\28unsigned\20int\2c\20unsigned\20int\2c\20void*\29 can change the state due to RawFile::GetBytes\28unsigned\20long\2c\20unsigned\20int\2c\20void*\29\20const
[asyncify] MemFile::~MemFile\28\29.1 can change the state due to MemFile::~MemFile\28\29
[asyncify] VGMColl::CreateSynthFile\28VGMInstrSet*\29 can change the state due to SynthSampInfo::SetLoopInfo\28Loop&\2c\20VGMSamp*\29
[asyncify] VGMInstrSet::~VGMInstrSet\28\29.1 can change the state due to VGMInstrSet::~VGMInstrSet\28\29
[asyncify] Vab::~Vab\28\29 can change the state due to VGMInstrSet::~VGMInstrSet\28\29
[asyncify] VGMInstr::~VGMInstr\28\29.1 can change the state due to VGMInstr::~VGMInstr\28\29
[asyncify] VabInstr::~VabInstr\28\29 can change the state due to VGMInstr::~VGMInstr\28\29
[asyncify] VabRgn::LoadRgn\28\29 can change the state due to VGMItem::GetByte\28unsigned\20int\29
[asyncify] VGMContainerItem::~VGMContainerItem\28\29.1 can change the state due to VGMContainerItem::~VGMContainerItem\28\29
[asyncify] VGMHeader::~VGMHeader\28\29 can change the state due to VGMContainerItem::~VGMContainerItem\28\29
[asyncify] VGMRgn::~VGMRgn\28\29.1 can change the state due to VGMRgn::~VGMRgn\28\29
[asyncify] VabRgn::~VabRgn\28\29 can change the state due to VGMRgn::~VGMRgn\28\29
[asyncify] VGMSampColl::~VGMSampColl\28\29.1 can change the state due to VGMSampColl::~VGMSampColl\28\29
[asyncify] PSXSampColl::~PSXSampColl\28\29 can change the state due to VGMSampColl::~VGMSampColl\28\29
[asyncify] PSXSampColl::~PSXSampColl\28\29.1 can change the state due to VGMSampColl::~VGMSampColl\28\29
[asyncify] OPL::NUKED::OPL3_GenerateResampled\28OPL::NUKED::_opl3_chip*\2c\20short*\29 can change the state due to OPL::NUKED::OPL3_Generate\28OPL::NUKED::_opl3_chip*\2c\20short*\29
[asyncify] OPL::NUKED::OPL3_GenerateStream\28OPL::NUKED::_opl3_chip*\2c\20short*\2c\20unsigned\20int\29 can change the state due to OPL::NUKED::OPL3_Generate\28OPL::NUKED::_opl3_chip*\2c\20short*\29
[asyncify] OPL::NUKED::OPL::generateSamples\28short*\2c\20int\29 can change the state due to OPL::NUKED::OPL3_Generate\28OPL::NUKED::_opl3_chip*\2c\20short*\29
[asyncify] Common::SearchSet::addDirectory\28Common::String\20const&\2c\20Common::FSNode\20const&\2c\20int\2c\20int\2c\20bool\29 can change the state due to Common::SearchSet::add\28Common::String\20const&\2c\20Common::Archive*\2c\20int\2c\20bool\29
[asyncify] Common::SearchSet::~SearchSet\28\29 can change the state due to Common::SearchSet::clear\28\29
[asyncify] Common::SearchSet::~SearchSet\28\29.1 can change the state due to Common::SearchSet::clear\28\29
[asyncify] Common::SearchManager::~SearchManager\28\29 can change the state due to Common::SearchSet::clear\28\29
[asyncify] Common::SearchManager::~SearchManager\28\29.1 can change the state due to Common::SearchSet::clear\28\29
[asyncify] non-virtual\20thunk\20to\20Common::SearchManager::~SearchManager\28\29 can change the state due to Common::SearchSet::clear\28\29
[asyncify] non-virtual\20thunk\20to\20Common::SearchManager::~SearchManager\28\29.1 can change the state due to Common::SearchSet::clear\28\29
[asyncify] Common::SearchManager::SearchManager\28\29 can change the state due to Common::SearchManager::clear\28\29
[asyncify] non-virtual\20thunk\20to\20Common::SearchManager::clear\28\29 can change the state due to Common::SearchManager::clear\28\29
[asyncify] Common::MemcachingCaseInsensitiveArchive::~MemcachingCaseInsensitiveArchive\28\29 can change the state due to Common::HashMap<Common::String\2c\20Common::SharedArchiveContents\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>::~HashMap\28\29
[asyncify] Common::ArjArchive::~ArjArchive\28\29 can change the state due to Common::HashMap<Common::String\2c\20Common::SharedArchiveContents\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>::~HashMap\28\29
[asyncify] Common::ZipArchive::~ZipArchive\28\29 can change the state due to Common::HashMap<Common::String\2c\20Common::SharedArchiveContents\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>::~HashMap\28\29
[asyncify] virtual\20thunk\20to\20Common::ConcatReadStream::read\28void*\2c\20unsigned\20int\29 can change the state due to Common::ConcatReadStream::read\28void*\2c\20unsigned\20int\29
[asyncify] Common::ConfigManager::setAndFlush\28Common::String\20const&\2c\20Common::String\20const&\29 can change the state due to Common::ConfigManager::flushToDisk\28\29
[asyncify] Lua::LuaFileConfig::writeSettings\28\29 can change the state due to Common::ConfigManager::flushToDisk\28\29
[asyncify] DefaultSaveFileManager::getSavePath\28\29\20const can change the state due to Common::ConfigManager::flushToDisk\28\29
[asyncify] saveLastLaunchedTarget\28Common::String\20const&\29 can change the state due to Common::ConfigManager::flushToDisk\28\29
[asyncify] Engines::upgradeTargetIfNecessary\28Engines::ObsoleteGameID\20const*\29 can change the state due to Common::ConfigManager::flushToDisk\28\29
[asyncify] Common::CoroutineScheduler::CoroutineScheduler\28\29 can change the state due to Common::CoroutineScheduler::reset\28\29
[asyncify] Common::CoroutineScheduler::~CoroutineScheduler\28\29.1 can change the state due to Common::CoroutineScheduler::~CoroutineScheduler\28\29
[asyncify] Common::CoroBaseContext::~CoroBaseContext\28\29 can change the state due to Common::CoroBaseContext::~CoroBaseContext\28\29.1
[asyncify] VGMColl::CreateSF2File\28VGMInstrSet*\29 can change the state due to debug\28char\20const*\2c\20...\29
[asyncify] Graphics::MacMenu::printMenu\28int\2c\20Graphics::MacMenuSubMenu*\29 can change the state due to debug\28char\20const*\2c\20...\29
[asyncify] SdlEventSource::openJoystick\28int\29 can change the state due to debug\28char\20const*\2c\20...\29
[asyncify] Graphics::TransparentSurface::blit\28Graphics::Surface&\2c\20int\2c\20int\2c\20int\2c\20Common::Rect*\2c\20unsigned\20int\2c\20int\2c\20int\2c\20Graphics::TSpriteBlendMode\29 can change the state due to debug\28int\2c\20char\20const*\2c\20...\29
[asyncify] Graphics::TransparentSurface::blitClip\28Graphics::Surface&\2c\20Common::Rect\2c\20int\2c\20int\2c\20int\2c\20Common::Rect*\2c\20unsigned\20int\2c\20int\2c\20int\2c\20Graphics::TSpriteBlendMode\29 can change the state due to debug\28int\2c\20char\20const*\2c\20...\29
[asyncify] MT32Emu::ScummVMReportHandler::printDebug\28char\20const*\2c\20void*\29 can change the state due to debug\28int\2c\20char\20const*\2c\20...\29
[asyncify] Common::File::open\28Common::SeekableReadStream*\2c\20Common::String\20const&\29 can change the state due to debug\28int\2c\20char\20const*\2c\20...\29
[asyncify] Common::punycode_decode\28Common::String\20const&\29 can change the state due to debug\28int\2c\20char\20const*\2c\20...\29
[asyncify] Common::Rational::debugPrint\28int\2c\20char\20const*\29\20const can change the state due to debug\28int\2c\20char\20const*\2c\20...\29
[asyncify] Common::StreamDebug::~StreamDebug\28\29 can change the state due to debug\28int\2c\20char\20const*\2c\20...\29
[asyncify] Video::SRTParser::parseFile\28char\20const*\29 can change the state due to debug\28int\2c\20char\20const*\2c\20...\29
[asyncify] Video::Subtitles::loadSRTFile\28char\20const*\29 can change the state due to debug\28int\2c\20char\20const*\2c\20...\29
[asyncify] Image::pngWarning\28png_struct_def*\2c\20char\20const*\29 can change the state due to debug\28int\2c\20char\20const*\2c\20...\29
[asyncify] Image::Indeo4Decoder::decodeRLETransparency\28short\20\28*\29\20\5b2\5d\29 can change the state due to debug\28int\2c\20char\20const*\2c\20...\29
[asyncify] Image::Indeo4Decoder::decodeTransparency\28\29 can change the state due to debug\28int\2c\20char\20const*\2c\20...\29
[asyncify] Image::SVQ1Decoder::SVQ1Decoder\28unsigned\20short\2c\20unsigned\20short\29 can change the state due to debug\28int\2c\20char\20const*\2c\20...\29
[asyncify] Audio::MaxTrax::pickvoice\28unsigned\20int\2c\20short\29 can change the state due to debug\28int\2c\20char\20const*\2c\20...\29
[asyncify] Audio::Tfmx::macroRun\28Audio::Tfmx::ChannelContext&\29 can change the state due to debug\28int\2c\20char\20const*\2c\20...\29
[asyncify] Audio::Tfmx::patternRun\28Audio::Tfmx::PatternContext&\29 can change the state due to debug\28int\2c\20char\20const*\2c\20...\29
[asyncify] Audio::Tfmx::doSfx\28unsigned\20short\2c\20bool\29 can change the state due to debug\28int\2c\20char\20const*\2c\20...\29
[asyncify] DOSBoxCMS::portWriteIntern\28int\2c\20int\2c\20int\29 can change the state due to debug\28int\2c\20char\20const*\2c\20...\29
[asyncify] Graphics::FontTowns::getCharFMTChunk\28unsigned\20short\29 can change the state due to debug\28int\2c\20char\20const*\2c\20...\29
[asyncify] Graphics::FontPCEngine::getCharData\28unsigned\20short\29\20const can change the state due to debug\28int\2c\20char\20const*\2c\20...\29
[asyncify] Graphics::Surface::debugPrint\28int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20unsigned\20char\20const*\29\20const can change the state due to debug\28int\2c\20char\20const*\2c\20...\29
[asyncify] SdlWindow::getDpiScalingFactor\28\29\20const can change the state due to debug\28int\2c\20char\20const*\2c\20...\29
[asyncify] Common::AchievementsManager::unsetActiveDomain\28\29 can change the state due to debug\28int\2c\20char\20const*\2c\20...\29
[asyncify] GUI::GuiManager::addToTrash\28GUI::GuiObject*\2c\20GUI::Dialog*\29 can change the state due to debug\28int\2c\20char\20const*\2c\20...\29
[asyncify] Graphics::MacWindowManager::printWMMode\28int\29 can change the state due to debug\28int\2c\20char\20const*\2c\20...\29
[asyncify] Adl::readSector_NIB\28unsigned\20char*\2c\20unsigned\20int\2c\20unsigned\20char\20const*\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20unsigned\20char\2c\20unsigned\20char\20const*\2c\20unsigned\20int\2c\20unsigned\20int\29 can change the state due to debug\28int\2c\20char\20const*\2c\20...\29
[asyncify] Agi::WagFileParser::convertToAgiVersionNumber\28Agi::WagProperty\20const&\29 can change the state due to debug\28int\2c\20char\20const*\2c\20...\29
[asyncify] GUI::PredictiveDialog::mergeDicts\28\29 can change the state due to debug\28int\2c\20char\20const*\2c\20...\29
[asyncify] GUI::PredictiveDialog::bringWordtoTop\28char*\2c\20int\29 can change the state due to debug\28int\2c\20char\20const*\2c\20...\29
[asyncify] GUI::PredictiveDialog::countWordsInString\28char\20const*\29 can change the state due to debug\28int\2c\20char\20const*\2c\20...\29
[asyncify] SdlEventSource::handleJoystickAdded\28SDL_JoyDeviceEvent\20const&\2c\20Common::Event&\29 can change the state due to debug\28int\2c\20char\20const*\2c\20...\29
[asyncify] SdlEventSource::handleJoystickRemoved\28SDL_JoyDeviceEvent\20const&\2c\20Common::Event&\29 can change the state due to debug\28int\2c\20char\20const*\2c\20...\29
[asyncify] Common::hexdump\28unsigned\20char\20const*\2c\20int\2c\20int\2c\20int\29 can change the state due to debugN\28char\20const*\2c\20...\29
[asyncify] MidiDriver_BASE::midiDumpVarLength\28unsigned\20int\20const&\29 can change the state due to debugN\28char\20const*\2c\20...\29
[asyncify] Image::CDToonsDecoder::CDToonsDecoder\28unsigned\20short\2c\20unsigned\20short\29 can change the state due to debugN\28int\2c\20char\20const*\2c\20...\29
[asyncify] Image::CDToonsDecoder::renderBlock\28unsigned\20char*\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20int\2c\20unsigned\20int\29 can change the state due to debugN\28int\2c\20char\20const*\2c\20...\29
[asyncify] TownsAudioInterfaceInternal::intf_loadSamples\28void*&\29 can change the state due to debugN\28int\2c\20char\20const*\2c\20...\29
[asyncify] AdvancedMetaEngineDetection::detectGameFilebased\28Common::HashMap<Common::String\2c\20Common::FSNode\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>\20const&\2c\20ADFileBasedFallback\20const*\29\20const can change the state due to debugC\28int\2c\20unsigned\20int\2c\20char\20const*\2c\20...\29
[asyncify] Common::EventManager::~EventManager\28\29 can change the state due to Common::EventDispatcher::~EventDispatcher\28\29
[asyncify] DefaultEventManager::purgeMouseEvents\28\29 can change the state due to Common::EventDispatcher::dispatch\28\29
[asyncify] DefaultEventManager::purgeKeyboardEvents\28\29 can change the state due to Common::EventDispatcher::dispatch\28\29
[asyncify] Common::OSDMessageQueue::~OSDMessageQueue\28\29 can change the state due to Common::EventDispatcher::unregisterSource\28Common::EventSource*\29
[asyncify] Common::VirtualMouse::~VirtualMouse\28\29 can change the state due to Common::EventDispatcher::unregisterSource\28Common::EventSource*\29
[asyncify] Common::InputWatcher::stopWatching\28\29 can change the state due to Common::EventDispatcher::unregisterObserver\28Common::EventObserver*\29
[asyncify] SdlGraphicsManager::deactivateManager\28\29 can change the state due to Common::EventDispatcher::unregisterObserver\28Common::EventObserver*\29
[asyncify] Scumm::ScummFile::~ScummFile\28\29 can change the state due to Common::File::~File\28\29
[asyncify] Scumm::ScummFile::~ScummFile\28\29.1 can change the state due to Common::File::~File\28\29
[asyncify] Scumm::ScummSteamFile::~ScummSteamFile\28\29 can change the state due to Common::File::~File\28\29
[asyncify] Scumm::ScummSteamFile::~ScummSteamFile\28\29.1 can change the state due to Common::File::~File\28\29
[asyncify] Scumm::ScummDiskImage::~ScummDiskImage\28\29 can change the state due to Common::File::~File\28\29
[asyncify] Scumm::ScummDiskImage::~ScummDiskImage\28\29.1 can change the state due to Common::File::~File\28\29
[asyncify] Scumm::ScummNESFile::~ScummNESFile\28\29 can change the state due to Common::File::~File\28\29
[asyncify] Scumm::ScummNESFile::~ScummNESFile\28\29.1 can change the state due to Common::File::~File\28\29
[asyncify] Common::INIFile::loadFromFile\28Common::String\20const&\29 can change the state due to Common::File::~File\28\29.1
[asyncify] Lua::LuaFileRead::~LuaFileRead\28\29 can change the state due to Common::File::~File\28\29.1
[asyncify] Lua::LuaFileRead::~LuaFileRead\28\29.1 can change the state due to Common::File::~File\28\29.1
[asyncify] Glk::Blorb::createReadStreamForMember\28Common::Path\20const&\29\20const can change the state due to Common::File::~File\28\29.1
[asyncify] Gob::DataIO::~DataIO\28\29 can change the state due to Common::File::~File\28\29.1
[asyncify] Gob::DataIO::closeArchive\28bool\29 can change the state due to Common::File::~File\28\29.1
[asyncify] Gob::DataIO::getFile\28Common::String\20const&\2c\20int&\29 can change the state due to Common::File::~File\28\29.1
[asyncify] Lua::LuaFileRead::LuaFileRead\28Common::String\20const&\2c\20Common::String\20const&\29 can change the state due to Common::File::open\28Common::Path\20const&\29
[asyncify] Scumm::ScummDiskImage::openDisk\28char\29 can change the state due to Common::File::open\28Common::Path\20const&\29
[asyncify] MT32EmuMusicPlugin::checkDevice\28unsigned\20int\29\20const can change the state due to Common::File::exists\28Common::Path\20const&\29
[asyncify] DefaultAudioCDManager::existExtractedCDAudioFiles\28unsigned\20int\29 can change the state due to Common::File::exists\28Common::Path\20const&\29
[asyncify] Adl::Files_Plain::exists\28Common::String\20const&\29\20const can change the state due to Common::File::exists\28Common::Path\20const&\29
[asyncify] Gob::DataIO::hasFile\28Common::String\20const&\29 can change the state due to Common::File::exists\28Common::Path\20const&\29
[asyncify] Gob::DataIO::closeArchive\28Gob::DataIO::Archive&\29 can change the state due to Common::File::close\28\29
[asyncify] Scumm::ScummFile::clearErr\28\29 can change the state due to Common::File::clearErr\28\29
[asyncify] Lua::LuaFileRead::eof\28\29\20const can change the state due to Common::File::eos\28\29\20const
[asyncify] Scumm::ScummFile::eos\28\29\20const can change the state due to Common::File::eos\28\29\20const
[asyncify] virtual\20thunk\20to\20Scumm::ScummFile::eos\28\29\20const can change the state due to Common::File::eos\28\29\20const
[asyncify] legalstub$Common::File::pos\28\29\20const can change the state due to Common::File::pos\28\29\20const
[asyncify] Scumm::ScummFile::pos\28\29\20const can change the state due to Common::File::pos\28\29\20const
[asyncify] Scumm::ScummFile::seek\28long\20long\2c\20int\29 can change the state due to Common::File::pos\28\29\20const
[asyncify] legalstub$Common::File::size\28\29\20const can change the state due to Common::File::size\28\29\20const
[asyncify] Scumm::ScummFile::size\28\29\20const can change the state due to Common::File::size\28\29\20const
[asyncify] legalstub$Common::File::seek\28long\20long\2c\20int\29 can change the state due to Common::File::seek\28long\20long\2c\20int\29
[asyncify] Scumm::ScummDiskImage::fileReadByte\28\29 can change the state due to Common::File::read\28void*\2c\20unsigned\20int\29
[asyncify] Scumm::ScummDiskImage::fileReadUint16LE\28\29 can change the state due to Common::File::read\28void*\2c\20unsigned\20int\29
[asyncify] Scumm::ScummNESFile::fileReadByte\28\29 can change the state due to Common::File::read\28void*\2c\20unsigned\20int\29
[asyncify] Scumm::ScummNESFile::fileReadUint16LE\28\29 can change the state due to Common::File::read\28void*\2c\20unsigned\20int\29
[asyncify] Common::INIFile::saveToFile\28Common::String\20const&\29 can change the state due to Common::DumpFile::~DumpFile\28\29.1
[asyncify] SurfaceSdlGraphicsManager::saveScreenshot\28Common::String\20const&\29\20const can change the state due to Common::DumpFile::~DumpFile\28\29.1
[asyncify] legalstub$Common::DumpFile::pos\28\29\20const can change the state due to Common::DumpFile::pos\28\29\20const
[asyncify] legalstub$Common::DumpFile::seek\28long\20long\2c\20int\29 can change the state due to Common::DumpFile::seek\28long\20long\2c\20int\29
[asyncify] legalstub$Common::DumpFile::size\28\29\20const can change the state due to Common::DumpFile::size\28\29\20const
[asyncify] Common::FSDirectory::FSDirectory\28Common::Path\20const&\2c\20int\2c\20bool\2c\20bool\2c\20bool\29 can change the state due to Common::FSNode::FSNode\28Common::Path\20const&\29
[asyncify] Common::FSDirectory::FSDirectory\28Common::Path\20const&\2c\20Common::Path\20const&\2c\20int\2c\20bool\2c\20bool\2c\20bool\29 can change the state due to Common::FSNode::FSNode\28Common::Path\20const&\29
[asyncify] POSIXPluginProvider::createPlugin\28Common::FSNode\20const&\29\20const can change the state due to Common::FSNode::getPath\28\29\20const
[asyncify] Engine::initializePath\28Common::FSNode\20const&\29 can change the state due to Common::FSNode::getPath\28\29\20const
[asyncify] SDLPluginProvider::createPlugin\28Common::FSNode\20const&\29\20const can change the state due to Common::FSNode::getPath\28\29\20const
[asyncify] Common::FSDirectory::~FSDirectory\28\29.1 can change the state due to Common::FSDirectory::~FSDirectory\28\29
[asyncify] Common::FSDirectory::lookupCache\28Common::HashMap<Common::String\2c\20Common::FSNode\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>&\2c\20Common::String\20const&\29\20const can change the state due to Common::FSDirectory::ensureCached\28\29\20const
[asyncify] Common::MacResManager::~MacResManager\28\29 can change the state due to Common::MacResManager::close\28\29
[asyncify] Common::MacResManager::open\28Common::Path\20const&\29 can change the state due to Common::MacResManager::open\28Common::Path\20const&\2c\20Common::Archive&\29
[asyncify] Common::MacResManager::isMacBinary\28Common::SeekableReadStream&\29 can change the state due to Common::MacResManager::readAndValidateMacBinaryHeader\28Common::SeekableReadStream&\2c\20unsigned\20char\20\28&\29\20\5b128\5d\29
[asyncify] Common::MacResManager::getFinderInfoFromMacBinary\28Common::SeekableReadStream*\2c\20Common::MacFinderInfo&\2c\20Common::MacFinderExtendedInfo&\29 can change the state due to Common::MacResManager::readAndValidateMacBinaryHeader\28Common::SeekableReadStream&\2c\20unsigned\20char\20\28&\29\20\5b128\5d\29
[asyncify] Common::MacResManager::openFileOrDataFork\28Common::Path\20const&\29 can change the state due to Common::MacResManager::openFileOrDataFork\28Common::Path\20const&\2c\20Common::Archive&\29
[asyncify] Common::MacResManager::getFileFinderInfo\28Common::Path\20const&\2c\20Common::Archive&\2c\20Common::MacFinderInfo&\29 can change the state due to Common::MacResManager::getFileFinderInfo\28Common::Path\20const&\2c\20Common::Archive&\2c\20Common::MacFinderInfo&\2c\20Common::MacFinderExtendedInfo&\29
[asyncify] Common::MacResManager::getFileFinderInfo\28Common::Path\20const&\2c\20Common::MacFinderInfo&\29 can change the state due to Common::MacResManager::getFileFinderInfo\28Common::Path\20const&\2c\20Common::Archive&\2c\20Common::MacFinderInfo&\2c\20Common::MacFinderExtendedInfo&\29
[asyncify] Common::MacResManager::getFileFinderInfo\28Common::Path\20const&\2c\20Common::MacFinderInfo&\2c\20Common::MacFinderExtendedInfo&\29 can change the state due to Common::MacResManager::getFileFinderInfo\28Common::Path\20const&\2c\20Common::Archive&\2c\20Common::MacFinderInfo&\2c\20Common::MacFinderExtendedInfo&\29
[asyncify] Common::computeStreamMD5AsString\28Common::ReadStream&\2c\20unsigned\20int\29 can change the state due to Common::computeStreamMD5\28Common::ReadStream&\2c\20unsigned\20char*\2c\20unsigned\20int\29
[asyncify] MidiDriver_MT32::MidiDriver_MT32\28Audio::Mixer*\29 can change the state due to Common::Mutex::Mutex\28\29
[asyncify] Audio::PCSpeaker::PCSpeaker\28int\29 can change the state due to Common::Mutex::Mutex\28\29
[asyncify] Common::BaseString<char>::incRefCount\28\29\20const can change the state due to Common::Mutex::Mutex\28\29
[asyncify] Common::BaseString<char>::decRefCount\28int*\29 can change the state due to Common::Mutex::Mutex\28\29
[asyncify] Common::lockMemoryPoolMutex\28\29 can change the state due to Common::Mutex::Mutex\28\29
[asyncify] Common::BaseString<char32_t>::incRefCount\28\29\20const can change the state due to Common::Mutex::Mutex\28\29
[asyncify] Common::BaseString<char32_t>::decRefCount\28int*\29 can change the state due to Common::Mutex::Mutex\28\29
[asyncify] Common::OSDMessageQueue::OSDMessageQueue\28\29 can change the state due to Common::Mutex::Mutex\28\29
[asyncify] MidiDriver_ADLIB_Multisource::MidiDriver_ADLIB_Multisource\28OPL::Config::OplType\2c\20int\29 can change the state due to Common::Mutex::Mutex\28\29
[asyncify] Audio::makeQueuingAudioStream\28int\2c\20bool\29 can change the state due to Common::Mutex::Mutex\28\29
[asyncify] MidiDriver_Casio::MidiDriver_Casio\28MusicType\29 can change the state due to Common::Mutex::Mutex\28\29
[asyncify] MidiDriver_Multisource::MidiDriver_Multisource\28\29 can change the state due to Common::Mutex::Mutex\28\29
[asyncify] Audio::MidiPlayer::MidiPlayer\28\29 can change the state due to Common::Mutex::Mutex\28\29
[asyncify] Audio::MixerImpl::MixerImpl\28unsigned\20int\2c\20bool\2c\20unsigned\20int\29 can change the state due to Common::Mutex::Mutex\28\29
[asyncify] MidiDriver_MT32GM::MidiDriver_MT32GM\28MusicType\29 can change the state due to Common::Mutex::Mutex\28\29
[asyncify] AudioCDStream::AudioCDStream\28\29 can change the state due to Common::Mutex::Mutex\28\29
[asyncify] DefaultTimerManager::DefaultTimerManager\28\29 can change the state due to Common::Mutex::Mutex\28\29
[asyncify] Audio::PCSpeaker::~PCSpeaker\28\29 can change the state due to Common::Mutex::~Mutex\28\29
[asyncify] Common::BaseString<char>::releaseMemoryPoolMutex\28\29 can change the state due to Common::Mutex::~Mutex\28\29
[asyncify] Common::BaseString<char32_t>::releaseMemoryPoolMutex\28\29 can change the state due to Common::Mutex::~Mutex\28\29
[asyncify] MidiDriver_Multisource::~MidiDriver_Multisource\28\29.1 can change the state due to Common::Mutex::~Mutex\28\29
[asyncify] MidiDriver_NULL_Multisource::~MidiDriver_NULL_Multisource\28\29 can change the state due to Common::Mutex::~Mutex\28\29
[asyncify] Audio::MidiDriver_Miles_AdLib::~MidiDriver_Miles_AdLib\28\29 can change the state due to Common::Mutex::~Mutex\28\29
[asyncify] DefaultTimerManager::~DefaultTimerManager\28\29 can change the state due to Common::Mutex::~Mutex\28\29
[asyncify] Common::OSDMessageQueue::addMessage\28Common::U32String\20const&\29 can change the state due to Common::Mutex::lock\28\29
[asyncify] MidiDriver_ADLIB_Multisource::allocateOplChannel\28unsigned\20char\2c\20unsigned\20char\2c\20unsigned\20char\29 can change the state due to Common::Mutex::lock\28\29
[asyncify] MidiDriver_MT32GM::sysExQueue\28unsigned\20char\20const*\2c\20unsigned\20short\2c\20signed\20char\29 can change the state due to Common::Mutex::lock\28\29
[asyncify] PC98AudioCore::MutexLock::MutexLock\28PC98AudioCoreInternal*\2c\20int\29 can change the state due to Common::Mutex::lock\28\29
[asyncify] PC98AudioCore::MutexLock::~MutexLock\28\29 can change the state due to Common::Mutex::lock\28\29
[asyncify] SegaAudioInterface::MutexLock::MutexLock\28SegaAudioInterfaceInternal*\2c\20int\29 can change the state due to Common::Mutex::lock\28\29
[asyncify] SegaAudioInterface::MutexLock::~MutexLock\28\29 can change the state due to Common::Mutex::lock\28\29
[asyncify] SurfaceSdlGraphicsManager::lockScreen\28\29 can change the state due to Common::Mutex::lock\28\29
[asyncify] Common::unlockMemoryPoolMutex\28\29 can change the state due to Common::Mutex::unlock\28\29
[asyncify] SurfaceSdlGraphicsManager::unlockScreen\28\29 can change the state due to Common::Mutex::unlock\28\29
[asyncify] virtual\20thunk\20to\20SurfaceSdlGraphicsManager::unlockScreen\28\29 can change the state due to Common::Mutex::unlock\28\29
[asyncify] MidiDriver_MT32::send\28unsigned\20int\29 can change the state due to Common::StackLock::StackLock\28Common::Mutex\20const&\2c\20char\20const*\29
[asyncify] non-virtual\20thunk\20to\20MidiDriver_MT32::send\28unsigned\20int\29 can change the state due to Common::StackLock::StackLock\28Common::Mutex\20const&\2c\20char\20const*\29
[asyncify] MidiDriver_MT32::setPitchBendRange\28unsigned\20char\2c\20unsigned\20int\29 can change the state due to Common::StackLock::StackLock\28Common::Mutex\20const&\2c\20char\20const*\29
[asyncify] non-virtual\20thunk\20to\20MidiDriver_MT32::setPitchBendRange\28unsigned\20char\2c\20unsigned\20int\29 can change the state due to Common::StackLock::StackLock\28Common::Mutex\20const&\2c\20char\20const*\29
[asyncify] MidiDriver_MT32::sysEx\28unsigned\20char\20const*\2c\20unsigned\20short\29 can change the state due to Common::StackLock::StackLock\28Common::Mutex\20const&\2c\20char\20const*\29
[asyncify] MidiDriver_MT32::generateSamples\28short*\2c\20int\29 can change the state due to Common::StackLock::StackLock\28Common::Mutex\20const&\2c\20char\20const*\29
[asyncify] Audio::PCSpeaker::play\28Audio::PCSpeaker::WaveForm\2c\20int\2c\20int\29 can change the state due to Common::StackLock::StackLock\28Common::Mutex\20const&\2c\20char\20const*\29
[asyncify] Audio::PCSpeaker::stop\28int\29 can change the state due to Common::StackLock::StackLock\28Common::Mutex\20const&\2c\20char\20const*\29
[asyncify] Audio::PCSpeaker::playQueue\28Audio::PCSpeaker::WaveForm\2c\20float\2c\20unsigned\20int\29 can change the state due to Common::StackLock::StackLock\28Common::Mutex\20const&\2c\20char\20const*\29
[asyncify] Audio::PCSpeaker::isPlaying\28\29\20const can change the state due to Common::StackLock::StackLock\28Common::Mutex\20const&\2c\20char\20const*\29
[asyncify] TownsAudioInterfaceInternal::addNewRef\28Audio::Mixer*\2c\20TownsAudioInterface*\2c\20TownsAudioInterfacePluginDriver*\2c\20bool\29 can change the state due to Common::StackLock::StackLock\28Common::Mutex\20const&\2c\20char\20const*\29
[asyncify] TownsAudioInterfaceInternal::assignPluginDriver\28TownsAudioInterface*\2c\20TownsAudioInterfacePluginDriver*\29 can change the state due to Common::StackLock::StackLock\28Common::Mutex\20const&\2c\20char\20const*\29
[asyncify] TownsAudioInterfaceInternal::removePluginDriver\28TownsAudioInterface*\29 can change the state due to Common::StackLock::StackLock\28Common::Mutex\20const&\2c\20char\20const*\29
[asyncify] TownsAudioInterfaceInternal::setMusicVolume\28int\29 can change the state due to Common::StackLock::StackLock\28Common::Mutex\20const&\2c\20char\20const*\29
[asyncify] TownsAudioInterfaceInternal::setSoundEffectVolume\28int\29 can change the state due to Common::StackLock::StackLock\28Common::Mutex\20const&\2c\20char\20const*\29
[asyncify] TownsAudioInterfaceInternal::setSoundEffectChanMask\28int\29 can change the state due to Common::StackLock::StackLock\28Common::Mutex\20const&\2c\20char\20const*\29
[asyncify] TownsAudioInterface::setMusicVolume\28int\29 can change the state due to Common::StackLock::StackLock\28Common::Mutex\20const&\2c\20char\20const*\29
[asyncify] TownsAudioInterface::setSoundEffectVolume\28int\29 can change the state due to Common::StackLock::StackLock\28Common::Mutex\20const&\2c\20char\20const*\29
[asyncify] TownsAudioInterface::setSoundEffectChanMask\28int\29 can change the state due to Common::StackLock::StackLock\28Common::Mutex\20const&\2c\20char\20const*\29
[asyncify] TownsPC98_FmSynth::reset\28\29 can change the state due to Common::StackLock::StackLock\28Common::Mutex\20const&\2c\20char\20const*\29
[asyncify] TownsPC98_FmSynth::writeReg\28unsigned\20char\2c\20unsigned\20char\2c\20unsigned\20char\29 can change the state due to Common::StackLock::StackLock\28Common::Mutex\20const&\2c\20char\20const*\29
[asyncify] TownsPC98_FmSynth::readReg\28unsigned\20char\2c\20unsigned\20char\29 can change the state due to Common::StackLock::StackLock\28Common::Mutex\20const&\2c\20char\20const*\29
[asyncify] TownsPC98_FmSynth::setVolumeIntern\28int\2c\20int\29 can change the state due to Common::StackLock::StackLock\28Common::Mutex\20const&\2c\20char\20const*\29
[asyncify] TownsPC98_FmSynth::setVolumeChannelMasks\28int\2c\20int\29 can change the state due to Common::StackLock::StackLock\28Common::Mutex\20const&\2c\20char\20const*\29
[asyncify] TownsPC98_FmSynth::setLevelSSG\28int\29 can change the state due to Common::StackLock::StackLock\28Common::Mutex\20const&\2c\20char\20const*\29
[asyncify] Audio::QueuingAudioStreamImpl::endOfStream\28\29\20const can change the state due to Common::StackLock::StackLock\28Common::Mutex\20const&\2c\20char\20const*\29
[asyncify] Audio::QueuingAudioStreamImpl::finish\28\29 can change the state due to Common::StackLock::StackLock\28Common::Mutex\20const&\2c\20char\20const*\29
[asyncify] Audio::QueuingAudioStreamImpl::numQueuedStreams\28\29\20const can change the state due to Common::StackLock::StackLock\28Common::Mutex\20const&\2c\20char\20const*\29
[asyncify] MidiDriver_Multisource::startFade\28unsigned\20short\2c\20unsigned\20short\29 can change the state due to Common::StackLock::StackLock\28Common::Mutex\20const&\2c\20char\20const*\29
[asyncify] MidiDriver_Multisource::startFade\28unsigned\20char\2c\20unsigned\20short\2c\20unsigned\20short\29 can change the state due to Common::StackLock::StackLock\28Common::Mutex\20const&\2c\20char\20const*\29
[asyncify] Audio::MidiDriver_Miles_Midi::removeActiveNotes\28unsigned\20char\2c\20bool\29 can change the state due to Common::StackLock::StackLock\28Common::Mutex\20const&\2c\20char\20const*\29
[asyncify] Audio::MixerImpl::setReady\28bool\29 can change the state due to Common::StackLock::StackLock\28Common::Mutex\20const&\2c\20char\20const*\29
[asyncify] Audio::MixerImpl::isSoundIDActive\28int\29 can change the state due to Common::StackLock::StackLock\28Common::Mutex\20const&\2c\20char\20const*\29
[asyncify] Audio::MixerImpl::getSoundID\28Audio::SoundHandle\29 can change the state due to Common::StackLock::StackLock\28Common::Mutex\20const&\2c\20char\20const*\29
[asyncify] Audio::MixerImpl::isSoundHandleActive\28Audio::SoundHandle\29 can change the state due to Common::StackLock::StackLock\28Common::Mutex\20const&\2c\20char\20const*\29
[asyncify] Audio::MixerImpl::hasActiveChannelOfType\28Audio::Mixer::SoundType\29 can change the state due to Common::StackLock::StackLock\28Common::Mutex\20const&\2c\20char\20const*\29
[asyncify] Audio::MixerImpl::isReady\28\29\20const can change the state due to Common::StackLock::StackLock\28Common::Mutex\20const&\2c\20char\20const*\29
[asyncify] MidiDriver_MT32GM::isReady\28signed\20char\29 can change the state due to Common::StackLock::StackLock\28Common::Mutex\20const&\2c\20char\20const*\29
[asyncify] MidiDriver_MT32GM::addActiveNote\28unsigned\20char\2c\20unsigned\20char\2c\20signed\20char\29 can change the state due to Common::StackLock::StackLock\28Common::Mutex\20const&\2c\20char\20const*\29
[asyncify] MidiDriver_MT32GM::removeActiveNote\28unsigned\20char\2c\20unsigned\20char\2c\20signed\20char\29 can change the state due to Common::StackLock::StackLock\28Common::Mutex\20const&\2c\20char\20const*\29
[asyncify] MidiDriver_MT32GM::removeActiveNotes\28unsigned\20char\2c\20bool\29 can change the state due to Common::StackLock::StackLock\28Common::Mutex\20const&\2c\20char\20const*\29
[asyncify] MidiDriver_MT32GM::clearSysExQueue\28\29 can change the state due to Common::StackLock::StackLock\28Common::Mutex\20const&\2c\20char\20const*\29
[asyncify] Audio::MaxTrax::stopMusic\28\29 can change the state due to Common::StackLock::StackLock\28Common::Mutex\20const&\2c\20char\20const*\29
[asyncify] Audio::MaxTrax::setTempo\28unsigned\20short\29 can change the state due to Common::StackLock::StackLock\28Common::Mutex\20const&\2c\20char\20const*\29
[asyncify] Audio::MaxTrax::playSong\28int\2c\20bool\29 can change the state due to Common::StackLock::StackLock\28Common::Mutex\20const&\2c\20char\20const*\29
[asyncify] Audio::MaxTrax::advanceSong\28int\29 can change the state due to Common::StackLock::StackLock\28Common::Mutex\20const&\2c\20char\20const*\29
[asyncify] Audio::MaxTrax::setSignalCallback\28void\20\28*\29\28int\29\29 can change the state due to Common::StackLock::StackLock\28Common::Mutex\20const&\2c\20char\20const*\29
[asyncify] Audio::MaxTrax::playNote\28unsigned\20char\2c\20unsigned\20char\2c\20unsigned\20short\2c\20unsigned\20short\2c\20bool\29 can change the state due to Common::StackLock::StackLock\28Common::Mutex\20const&\2c\20char\20const*\29
[asyncify] Audio::Tfmx::setModuleData\28Audio::Tfmx::MdatResource\20const*\2c\20signed\20char\20const*\2c\20unsigned\20int\2c\20bool\29 can change the state due to Common::StackLock::StackLock\28Common::Mutex\20const&\2c\20char\20const*\29
[asyncify] Audio::Tfmx::doMacro\28int\2c\20int\2c\20int\2c\20int\2c\20int\29 can change the state due to Common::StackLock::StackLock\28Common::Mutex\20const&\2c\20char\20const*\29
[asyncify] Audio::Tfmx::stopMacroEffect\28int\29 can change the state due to Common::StackLock::StackLock\28Common::Mutex\20const&\2c\20char\20const*\29
[asyncify] PC98AudioCoreInternal::addNewRef\28Audio::Mixer*\2c\20PC98AudioCore*\2c\20PC98AudioPluginDriver*\2c\20PC98AudioPluginDriver::EmuType\29 can change the state due to Common::StackLock::StackLock\28Common::Mutex\20const&\2c\20char\20const*\29
[asyncify] PC98AudioCoreInternal::assignPluginDriver\28PC98AudioCore*\2c\20PC98AudioPluginDriver*\2c\20bool\29 can change the state due to Common::StackLock::StackLock\28Common::Mutex\20const&\2c\20char\20const*\29
[asyncify] PC98AudioCoreInternal::releaseRef\28PC98AudioCore*\29 can change the state due to Common::StackLock::StackLock\28Common::Mutex\20const&\2c\20char\20const*\29
[asyncify] PC98AudioCoreInternal::removePluginDriver\28PC98AudioCore*\29 can change the state due to Common::StackLock::StackLock\28Common::Mutex\20const&\2c\20char\20const*\29
[asyncify] PC98AudioCoreInternal::ssgSetVolume\28int\29 can change the state due to Common::StackLock::StackLock\28Common::Mutex\20const&\2c\20char\20const*\29
[asyncify] PC98AudioCoreInternal::writePort\28unsigned\20short\2c\20unsigned\20char\29 can change the state due to Common::StackLock::StackLock\28Common::Mutex\20const&\2c\20char\20const*\29
[asyncify] PC98AudioCoreInternal::readPort\28unsigned\20short\29 can change the state due to Common::StackLock::StackLock\28Common::Mutex\20const&\2c\20char\20const*\29
[asyncify] PC98AudioCoreInternal::setMusicVolume\28int\29 can change the state due to Common::StackLock::StackLock\28Common::Mutex\20const&\2c\20char\20const*\29
[asyncify] PC98AudioCoreInternal::setSoundEffectVolume\28int\29 can change the state due to Common::StackLock::StackLock\28Common::Mutex\20const&\2c\20char\20const*\29
[asyncify] PC98AudioCoreInternal::setSoundEffectChanMask\28int\29 can change the state due to Common::StackLock::StackLock\28Common::Mutex\20const&\2c\20char\20const*\29
[asyncify] PC98AudioCore::~PC98AudioCore\28\29 can change the state due to Common::StackLock::StackLock\28Common::Mutex\20const&\2c\20char\20const*\29
[asyncify] PC98AudioCore::readPort\28unsigned\20short\29 can change the state due to Common::StackLock::StackLock\28Common::Mutex\20const&\2c\20char\20const*\29
[asyncify] PC98AudioCore::setMusicVolume\28int\29 can change the state due to Common::StackLock::StackLock\28Common::Mutex\20const&\2c\20char\20const*\29
[asyncify] PC98AudioCore::setSoundEffectVolume\28int\29 can change the state due to Common::StackLock::StackLock\28Common::Mutex\20const&\2c\20char\20const*\29
[asyncify] PC98AudioCore::setSoundEffectChanMask\28int\29 can change the state due to Common::StackLock::StackLock\28Common::Mutex\20const&\2c\20char\20const*\29
[asyncify] PC98AudioCore::ssgSetVolume\28int\29 can change the state due to Common::StackLock::StackLock\28Common::Mutex\20const&\2c\20char\20const*\29
[asyncify] SegaAudioInterfaceInternal::addNewRef\28Audio::Mixer*\2c\20SegaAudioInterface*\2c\20SegaAudioPluginDriver*\29 can change the state due to Common::StackLock::StackLock\28Common::Mutex\20const&\2c\20char\20const*\29
[asyncify] SegaAudioInterfaceInternal::assignPluginDriver\28SegaAudioInterface*\2c\20SegaAudioPluginDriver*\2c\20bool\29 can change the state due to Common::StackLock::StackLock\28Common::Mutex\20const&\2c\20char\20const*\29
[asyncify] SegaAudioInterfaceInternal::releaseRef\28SegaAudioInterface*\29 can change the state due to Common::StackLock::StackLock\28Common::Mutex\20const&\2c\20char\20const*\29
[asyncify] SegaAudioInterfaceInternal::removePluginDriver\28SegaAudioInterface*\29 can change the state due to Common::StackLock::StackLock\28Common::Mutex\20const&\2c\20char\20const*\29
[asyncify] SegaAudioInterfaceInternal::setSoundEffectChanMask\28int\29 can change the state due to Common::StackLock::StackLock\28Common::Mutex\20const&\2c\20char\20const*\29
[asyncify] SegaAudioInterfaceInternal::loadPCMData\28unsigned\20short\2c\20unsigned\20char\20const*\2c\20unsigned\20short\29 can change the state due to Common::StackLock::StackLock\28Common::Mutex\20const&\2c\20char\20const*\29
[asyncify] SegaAudioInterfaceInternal::playPCMChannel\28unsigned\20char\2c\20unsigned\20char\2c\20unsigned\20short\2c\20unsigned\20short\2c\20unsigned\20char\2c\20unsigned\20char\29 can change the state due to Common::StackLock::StackLock\28Common::Mutex\20const&\2c\20char\20const*\29
[asyncify] SegaAudioInterfaceInternal::stopPCMChannel\28unsigned\20char\29 can change the state due to Common::StackLock::StackLock\28Common::Mutex\20const&\2c\20char\20const*\29
[asyncify] SegaAudioInterfaceInternal::psgWrite\28unsigned\20char\29 can change the state due to Common::StackLock::StackLock\28Common::Mutex\20const&\2c\20char\20const*\29
[asyncify] SegaAudioInterfaceInternal::setMusicVolume\28int\29 can change the state due to Common::StackLock::StackLock\28Common::Mutex\20const&\2c\20char\20const*\29
[asyncify] SegaAudioInterfaceInternal::setSoundEffectVolume\28int\29 can change the state due to Common::StackLock::StackLock\28Common::Mutex\20const&\2c\20char\20const*\29
[asyncify] SegaAudioInterface::~SegaAudioInterface\28\29 can change the state due to Common::StackLock::StackLock\28Common::Mutex\20const&\2c\20char\20const*\29
[asyncify] SegaAudioInterface::loadPCMData\28unsigned\20short\2c\20unsigned\20char\20const*\2c\20unsigned\20short\29 can change the state due to Common::StackLock::StackLock\28Common::Mutex\20const&\2c\20char\20const*\29
[asyncify] SegaAudioInterface::stopPCMChannel\28unsigned\20char\29 can change the state due to Common::StackLock::StackLock\28Common::Mutex\20const&\2c\20char\20const*\29
[asyncify] SegaAudioInterface::setMusicVolume\28int\29 can change the state due to Common::StackLock::StackLock\28Common::Mutex\20const&\2c\20char\20const*\29
[asyncify] SegaAudioInterface::setSoundEffectVolume\28int\29 can change the state due to Common::StackLock::StackLock\28Common::Mutex\20const&\2c\20char\20const*\29
[asyncify] SegaAudioInterface::setSoundEffectChanMask\28int\29 can change the state due to Common::StackLock::StackLock\28Common::Mutex\20const&\2c\20char\20const*\29
[asyncify] AudioCDStream::readNextFrame\28\29 can change the state due to Common::StackLock::StackLock\28Common::Mutex\20const&\2c\20char\20const*\29
[asyncify] AudioCDStream::shouldForceStop\28\29\20const can change the state due to Common::StackLock::StackLock\28Common::Mutex\20const&\2c\20char\20const*\29
[asyncify] AudioCDStream::forceStop\28\29 can change the state due to Common::StackLock::StackLock\28Common::Mutex\20const&\2c\20char\20const*\29
[asyncify] DefaultTimerManager::removeTimerProc\28void\20\28*\29\28void*\29\29 can change the state due to Common::StackLock::StackLock\28Common::Mutex\20const&\2c\20char\20const*\29
[asyncify] SurfaceSdlGraphicsManager::setFilteringMode\28bool\29 can change the state due to Common::StackLock::StackLock\28Common::Mutex\20const&\2c\20char\20const*\29
[asyncify] SurfaceSdlGraphicsManager::setStretchMode\28int\29 can change the state due to Common::StackLock::StackLock\28Common::Mutex\20const&\2c\20char\20const*\29
[asyncify] SurfaceSdlGraphicsManager::setAspectRatioCorrection\28bool\29 can change the state due to Common::StackLock::StackLock\28Common::Mutex\20const&\2c\20char\20const*\29
[asyncify] SurfaceSdlGraphicsManager::displayActivityIconOnOSD\28Graphics::Surface\20const*\29 can change the state due to Common::StackLock::StackLock\28Common::Mutex\20const&\2c\20char\20const*\29
[asyncify] non-virtual\20thunk\20to\20Common::OSDMessageQueue::pollEvent\28Common::Event&\29 can change the state due to Common::OSDMessageQueue::pollEvent\28Common::Event&\29
[asyncify] Common::convertBiDiStringByLines\28Common::String\20const&\2c\20Common::CodePage\2c\20Common::BiDiParagraph\29 can change the state due to Common::String::forEachLine\28Common::String\20\28*\29\28Common::String\2c\20void*\29\2c\20...\29\20const
[asyncify] Common::QuickTimeParser::readSMI\28Common::QuickTimeParser::Atom\29 can change the state due to Common::ReadStream::readStream\28unsigned\20int\29
[asyncify] virtual\20thunk\20to\20Common::SeekableSubReadStream::seek\28long\20long\2c\20int\29 can change the state due to Common::SeekableSubReadStream::seek\28long\20long\2c\20int\29
[asyncify] legalstub$Common::SeekableSubReadStream::seek\28long\20long\2c\20int\29 can change the state due to Common::SeekableSubReadStream::seek\28long\20long\2c\20int\29
[asyncify] Common::String::encodeWindows949\28Common::U32String\20const&\2c\20char\29 can change the state due to Common::loadCJKTables\28\29
[asyncify] Common::U32String::decodeWindows932\28char\20const*\2c\20unsigned\20int\29 can change the state due to Common::loadCJKTables\28\29
[asyncify] Common::convertUHCToUCS\28unsigned\20char\2c\20unsigned\20char\29 can change the state due to Common::loadCJKTables\28\29
[asyncify] Common::U32String::decodeWindows949\28char\20const*\2c\20unsigned\20int\29 can change the state due to Common::loadCJKTables\28\29
[asyncify] Common::U32String::decodeWindows950\28char\20const*\2c\20unsigned\20int\29 can change the state due to Common::loadCJKTables\28\29
[asyncify] Common::U32String::decodeJohab\28char\20const*\2c\20unsigned\20int\29 can change the state due to Common::loadCJKTables\28\29
[asyncify] Common::String::encodeWindows932\28Common::U32String\20const&\2c\20char\29 can change the state due to Common::loadCJKTables\28\29
[asyncify] Common::String::encodeWindows950\28Common::U32String\20const&\2c\20bool\2c\20char\29 can change the state due to Common::loadCJKTables\28\29
[asyncify] Common::String::encodeJohab\28Common::U32String\20const&\2c\20char\29 can change the state due to Common::loadCJKTables\28\29
[asyncify] OSystem_SDL::quit\28\29 can change the state due to OSystem::destroy\28\29
[asyncify] virtual\20thunk\20to\20OSystem_SDL::quit\28\29 can change the state due to OSystem::destroy\28\29
[asyncify] OSystem_SDL::fatalError\28\29 can change the state due to OSystem::destroy\28\29
[asyncify] virtual\20thunk\20to\20OSystem_SDL::fatalError\28\29 can change the state due to OSystem::destroy\28\29
[asyncify] Graphics::createThumbnail\28Graphics::Surface&\29 can change the state due to warning\28char\20const*\2c\20...\29
[asyncify] Common::SearchSet::setPriority\28Common::String\20const&\2c\20int\29 can change the state due to warning\28char\20const*\2c\20...\29
[asyncify] Common::BaseString<char>::assignAppend\28char\29 can change the state due to warning\28char\20const*\2c\20...\29
[asyncify] Common::BaseString<char32_t>::assignAppend\28char32_t\29 can change the state due to warning\28char\20const*\2c\20...\29
[asyncify] Common::ConfigManager::addDomain\28Common::String\20const&\2c\20Common::ConfigManager::Domain\20const&\29 can change the state due to warning\28char\20const*\2c\20...\29
[asyncify] Common::DebugManager::addDebugChannel\28unsigned\20int\2c\20Common::String\20const&\2c\20Common::String\20const&\29 can change the state due to warning\28char\20const*\2c\20...\29
[asyncify] Common::punycode_encode\28Common::U32String\20const&\29 can change the state due to warning\28char\20const*\2c\20...\29
[asyncify] Common::strcpy_s\28char*\2c\20unsigned\20long\2c\20char\20const*\29 can change the state due to warning\28char\20const*\2c\20...\29
[asyncify] Common::strcat_s\28char*\2c\20unsigned\20long\2c\20char\20const*\29 can change the state due to warning\28char\20const*\2c\20...\29
[asyncify] Common::vsprintf_s\28char*\2c\20unsigned\20long\2c\20char\20const*\2c\20void*\29 can change the state due to warning\28char\20const*\2c\20...\29
[asyncify] Common::sprintf_s\28char*\2c\20unsigned\20long\2c\20char\20const*\2c\20...\29 can change the state due to warning\28char\20const*\2c\20...\29
[asyncify] scumm_strdup\28char\20const*\29 can change the state due to warning\28char\20const*\2c\20...\29
[asyncify] OSystem::isConnectionLimited\28\29 can change the state due to warning\28char\20const*\2c\20...\29
[asyncify] Common::TranslationManager::getLangById\28int\29\20const can change the state due to warning\28char\20const*\2c\20...\29
[asyncify] Common::UnicodeBiDiText::UnicodeBiDiText\28Common::U32String\20const&\2c\20Common::BiDiParagraph\29 can change the state due to warning\28char\20const*\2c\20...\29
[asyncify] Common::UnicodeBiDiText::initWithU32String\28Common::U32String\20const&\29 can change the state due to warning\28char\20const*\2c\20...\29
[asyncify] Common::UnicodeBiDiText::UnicodeBiDiText\28Common::String\20const&\2c\20Common::CodePage\2c\20unsigned\20int*\29 can change the state due to warning\28char\20const*\2c\20...\29
[asyncify] Common::U32String::vformat\28char32_t\20const*\2c\20char32_t\20const*\2c\20Common::U32String&\2c\20void*\29 can change the state due to warning\28char\20const*\2c\20...\29
[asyncify] Common::XPFloat::toDouble\28Common::XPFloat::Semantics\29\20const can change the state due to warning\28char\20const*\2c\20...\29
[asyncify] Common::INIFile::addSection\28Common::String\20const&\29 can change the state due to warning\28char\20const*\2c\20...\29
[asyncify] Common::INIFile::removeSection\28Common::String\20const&\29 can change the state due to warning\28char\20const*\2c\20...\29
[asyncify] Common::INIFile::hasSection\28Common::String\20const&\29\20const can change the state due to warning\28char\20const*\2c\20...\29
[asyncify] Common::INIFile::renameSection\28Common::String\20const&\2c\20Common::String\20const&\29 can change the state due to warning\28char\20const*\2c\20...\29
[asyncify] Common::INIFile::hasKey\28Common::String\20const&\2c\20Common::String\20const&\29\20const can change the state due to warning\28char\20const*\2c\20...\29
[asyncify] Common::INIFile::removeKey\28Common::String\20const&\2c\20Common::String\20const&\29 can change the state due to warning\28char\20const*\2c\20...\29
[asyncify] Common::INIFile::getKey\28Common::String\20const&\2c\20Common::String\20const&\2c\20Common::String&\29\20const can change the state due to warning\28char\20const*\2c\20...\29
[asyncify] Common::INIFile::setKey\28Common::String\20const&\2c\20Common::String\20const&\2c\20Common::String\20const&\29 can change the state due to warning\28char\20const*\2c\20...\29
[asyncify] Common::JSONValue::stringifyString\28Common::String\20const&\29 can change the state due to warning\28char\20const*\2c\20...\29
[asyncify] Common::JSONValue::decodeUtf8Char\28char\20const*&\2c\20char\20const*\20const&\29 can change the state due to warning\28char\20const*\2c\20...\29
[asyncify] POSIXPlugin::findSymbol\28char\20const*\29 can change the state due to warning\28char\20const*\2c\20...\29
[asyncify] Video::AVIDecoder::AVIAudioTrack::createAudioStream\28\29 can change the state due to warning\28char\20const*\2c\20...\29
[asyncify] Video::CoktelDecoder::deLZ77\28unsigned\20char*\2c\20unsigned\20char\20const*\2c\20unsigned\20int\2c\20unsigned\20int\29 can change the state due to warning\28char\20const*\2c\20...\29
[asyncify] Video::CoktelDecoder::renderBlockSparse2Y\28Graphics::Surface&\2c\20unsigned\20char\20const*\2c\20Common::Rect&\29 can change the state due to warning\28char\20const*\2c\20...\29
[asyncify] Video::HNMDecoder::HNM4VideoTrack::decodeInterframeA\28unsigned\20char*\2c\20unsigned\20int\29 can change the state due to warning\28char\20const*\2c\20...\29
[asyncify] Video::HNMDecoder::HNM4VideoTrack::decodeInterframe\28unsigned\20char*\2c\20unsigned\20int\29 can change the state due to warning\28char\20const*\2c\20...\29
[asyncify] Video::HNMDecoder::HNM5VideoTrack::decodeFrame\28unsigned\20char*\2c\20unsigned\20int\29 can change the state due to warning\28char\20const*\2c\20...\29
[asyncify] Video::HNMDecoder::DPCMAudioTrack::DPCMAudioTrack\28unsigned\20short\2c\20unsigned\20short\2c\20unsigned\20int\2c\20bool\2c\20Audio::Mixer::SoundType\29 can change the state due to warning\28char\20const*\2c\20...\29
[asyncify] Image::Indeo3Decoder::decodeChunk\28unsigned\20char*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20unsigned\20char\20const*\2c\20unsigned\20int\2c\20unsigned\20char\20const*\2c\20unsigned\20char\20const*\2c\20int\29 can change the state due to warning\28char\20const*\2c\20...\29
[asyncify] Image::Indeo4Decoder::decodePictureHeader\28\29 can change the state due to warning\28char\20const*\2c\20...\29
[asyncify] Image::Indeo4Decoder::decodeBandHeader\28Image::Indeo::IVIBandDesc*\29 can change the state due to warning\28char\20const*\2c\20...\29
[asyncify] Image::Indeo4Decoder::decodeMbInfo\28Image::Indeo::IVIBandDesc*\2c\20Image::Indeo::IVITile*\29 can change the state due to warning\28char\20const*\2c\20...\29
[asyncify] Image::Indeo5Decoder::decodePictureHeader\28\29 can change the state due to warning\28char\20const*\2c\20...\29
[asyncify] Image::Indeo5Decoder::decode_gop_header\28\29 can change the state due to warning\28char\20const*\2c\20...\29
[asyncify] Image::Indeo5Decoder::decodeBandHeader\28Image::Indeo::IVIBandDesc*\29 can change the state due to warning\28char\20const*\2c\20...\29
[asyncify] Image::Indeo5Decoder::decodeMbInfo\28Image::Indeo::IVIBandDesc*\2c\20Image::Indeo::IVITile*\29 can change the state due to warning\28char\20const*\2c\20...\29
[asyncify] Image::Indeo::IVIHuffTab::decodeHuffDesc\28Image::Indeo::IVI45DecContext*\2c\20int\2c\20int\29 can change the state due to warning\28char\20const*\2c\20...\29
[asyncify] Image::Indeo::IVIBandDesc::initTiles\28Image::Indeo::IVITile*\2c\20int\2c\20int\2c\20int\2c\20int\29 can change the state due to warning\28char\20const*\2c\20...\29
[asyncify] Image::Indeo::VLC::init_vlc\28int\2c\20int\2c\20void\20const*\2c\20int\2c\20int\2c\20void\20const*\2c\20int\2c\20int\2c\20void\20const*\2c\20int\2c\20int\2c\20int\29 can change the state due to warning\28char\20const*\2c\20...\29
[asyncify] Image::Indeo::VLC::buildTable\28int\2c\20int\2c\20Image::Indeo::VLCcode*\2c\20int\29 can change the state due to warning\28char\20const*\2c\20...\29
[asyncify] Graphics::BdfFont::scaleFont\28Graphics::BdfFont*\2c\20int\29 can change the state due to warning\28char\20const*\2c\20...\29
[asyncify] Graphics::TTFFont::load\28unsigned\20char*\2c\20unsigned\20int\2c\20int\2c\20bool\2c\20bool\2c\20int\2c\20Graphics::TTFSizeMode\2c\20unsigned\20int\2c\20Graphics::TTFRenderMode\2c\20unsigned\20int\20const*\2c\20bool\29 can change the state due to warning\28char\20const*\2c\20...\29
[asyncify] Graphics::TTFFont::cacheGlyph\28Graphics::TTFFont::Glyph&\2c\20unsigned\20int\29\20const can change the state due to warning\28char\20const*\2c\20...\29
[asyncify] Graphics::MacWindowManager::loadDataBundle\28\29 can change the state due to warning\28char\20const*\2c\20...\29
[asyncify] Graphics::MacFontManager::getFontAliasForId\28unsigned\20short\29 can change the state due to warning\28char\20const*\2c\20...\29
[asyncify] Graphics::MacFontManager::getFontLanguage\28unsigned\20short\29 can change the state due to warning\28char\20const*\2c\20...\29
[asyncify] Graphics::MacFontManager::getFontName\28unsigned\20short\2c\20int\2c\20int\2c\20bool\29 can change the state due to warning\28char\20const*\2c\20...\29
[asyncify] Graphics::MacFontManager::getFontName\28unsigned\20short\29 can change the state due to warning\28char\20const*\2c\20...\29
[asyncify] TownsPC98_AudioDriver::loadSoundEffectData\28unsigned\20char*\2c\20unsigned\20char\29 can change the state due to warning\28char\20const*\2c\20...\29
[asyncify] TownsPC98_FmSynthSquareWaveSource::writeReg\28unsigned\20char\2c\20unsigned\20char\2c\20bool\29 can change the state due to warning\28char\20const*\2c\20...\29
[asyncify] TownsPC98_FmSynthSquareWaveSource::nextTick\28int*\2c\20unsigned\20int\29 can change the state due to warning\28char\20const*\2c\20...\29
[asyncify] TownsPC98_FmSynthSquareWaveSource::updateRegs\28\29 can change the state due to warning\28char\20const*\2c\20...\29
[asyncify] TownsPC98_FmSynth::writeRegInternal\28unsigned\20char\2c\20unsigned\20char\2c\20unsigned\20char\29 can change the state due to warning\28char\20const*\2c\20...\29
[asyncify] AdLibPart::sysEx_customInstrument\28unsigned\20int\2c\20unsigned\20char\20const*\2c\20unsigned\20int\29 can change the state due to warning\28char\20const*\2c\20...\29
[asyncify] AdLibPercussionChannel::sysEx_customInstrument\28unsigned\20int\2c\20unsigned\20char\20const*\2c\20unsigned\20int\29 can change the state due to warning\28char\20const*\2c\20...\29
[asyncify] OPL::Config::detect\28OPL::Config::OplType\29 can change the state due to warning\28char\20const*\2c\20...\29
[asyncify] OPL::Config::create\28signed\20char\2c\20OPL::Config::OplType\29 can change the state due to warning\28char\20const*\2c\20...\29
[asyncify] MidiDriver_Multisource::setControllerDefault\28MidiDriver_Multisource::ControllerDefaultType\29 can change the state due to warning\28char\20const*\2c\20...\29
[asyncify] MidiDriver_Multisource::setControllerDefault\28MidiDriver_Multisource::ControllerDefaultType\2c\20short\29 can change the state due to warning\28char\20const*\2c\20...\29
[asyncify] MidiDriver_Multisource::setControllerDefaults\28MidiDriver_Multisource::ControllerDefaultType\2c\20short*\29 can change the state due to warning\28char\20const*\2c\20...\29
[asyncify] MidiDriver_Multisource::clearControllerDefault\28MidiDriver_Multisource::ControllerDefaultType\29 can change the state due to warning\28char\20const*\2c\20...\29
[asyncify] MidiParser_QT::handleControllerEvent\28unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20char\2c\20unsigned\20char\29 can change the state due to warning\28char\20const*\2c\20...\29
[asyncify] MidiParser_QT::handleGeneralEvent\28unsigned\20int\29 can change the state due to warning\28char\20const*\2c\20...\29
[asyncify] MidiParser_QT::definePart\28unsigned\20int\2c\20unsigned\20int\29 can change the state due to warning\28char\20const*\2c\20...\29
[asyncify] MidiParser_SMF::parseNextEvent\28EventInfo&\29 can change the state due to warning\28char\20const*\2c\20...\29
[asyncify] MidiParser_SMF::compressToType0\28unsigned\20char**\2c\20unsigned\20char\2c\20unsigned\20char*\2c\20bool\29 can change the state due to warning\28char\20const*\2c\20...\29
[asyncify] MidiParser::defaultXMidiCallback\28unsigned\20char\2c\20void*\29 can change the state due to warning\28char\20const*\2c\20...\29
[asyncify] Audio::MidiDriver_Miles_AdLib::programChange\28unsigned\20char\2c\20unsigned\20char\29 can change the state due to warning\28char\20const*\2c\20...\29
[asyncify] Audio::MidiDriver_Miles_Midi::removeActiveNote\28unsigned\20char\2c\20unsigned\20char\2c\20signed\20char\29 can change the state due to warning\28char\20const*\2c\20...\29
[asyncify] Audio::MidiDriver_Miles_Midi::processXMIDITimbreChunk\28unsigned\20char\20const*\2c\20unsigned\20int\29 can change the state due to warning\28char\20const*\2c\20...\29
[asyncify] MidiDriver_MT32GM::mapSourceChannel\28unsigned\20char\2c\20unsigned\20char\29 can change the state due to warning\28char\20const*\2c\20...\29
[asyncify] Audio::QDM2Stream::fix_coding_method_array\28int\2c\20int\2c\20signed\20char\20\28*\29\20\5b30\5d\5b64\5d\29 can change the state due to warning\28char\20const*\2c\20...\29
[asyncify] Audio::QDM2Stream::fill_coding_method_array\28signed\20char\20\28*\29\20\5b30\5d\5b64\5d\2c\20signed\20char\20\28*\29\20\5b30\5d\5b64\5d\2c\20signed\20char\20\28*\29\20\5b30\5d\5b64\5d\2c\20int\2c\20int\2c\20int\2c\20int\29 can change the state due to warning\28char\20const*\2c\20...\29
[asyncify] Audio::QDM2Stream::synthfilt_build_sb_samples\28Common::BitStreamImpl<Common::BitStreamMemoryStream\2c\20unsigned\20long\20long\2c\2032\2c\20true\2c\20false>*\2c\20int\2c\20int\2c\20int\29 can change the state due to warning\28char\20const*\2c\20...\29
[asyncify] Audio::QuickTimeAudioDecoder::AudioSampleDesc::isAudioCodecSupported\28\29\20const can change the state due to warning\28char\20const*\2c\20...\29
[asyncify] Audio::Infogrames::getNextSample\28Audio::Infogrames::Channel&\29 can change the state due to warning\28char\20const*\2c\20...\29
[asyncify] Audio::Rjp1::startSong\28int\29 can change the state due to warning\28char\20const*\2c\20...\29
[asyncify] Audio::SoundFx::updateEffects\28int\29 can change the state due to warning\28char\20const*\2c\20...\29
[asyncify] Audio::SoundFx::handleTick\28\29 can change the state due to warning\28char\20const*\2c\20...\29
[asyncify] DOSBoxCMS::write\28int\2c\20int\29 can change the state due to warning\28char\20const*\2c\20...\29
[asyncify] OPL::MAME::OPL::read\28int\29 can change the state due to warning\28char\20const*\2c\20...\29
[asyncify] OPL::MAME::OPLRead\28OPL::MAME::fm_opl_f*\2c\20int\29 can change the state due to warning\28char\20const*\2c\20...\29
[asyncify] panic\28lua_State*\29 can change the state due to warning\28char\20const*\2c\20...\29
[asyncify] GUI::ListWidget::getThemeColor\28Common::U32String\20const&\29 can change the state due to warning\28char\20const*\2c\20...\29
[asyncify] Common::Keymapper::addGlobalKeymap\28Common::Keymap*\29 can change the state due to warning\28char\20const*\2c\20...\29
[asyncify] Common::Keymapper::initKeymap\28Common::Keymap*\2c\20Common::ConfigManager::Domain*\29 can change the state due to warning\28char\20const*\2c\20...\29
[asyncify] Common::Keymapper::addGameKeymap\28Common::Keymap*\29 can change the state due to warning\28char\20const*\2c\20...\29
[asyncify] MidiDriver_SEQ::open\28\29 can change the state due to warning\28char\20const*\2c\20...\29
[asyncify] MidiDriver_SEQ::send\28unsigned\20int\29 can change the state due to warning\28char\20const*\2c\20...\29
[asyncify] MidiDriver_SEQ::sysEx\28unsigned\20char\20const*\2c\20unsigned\20short\29 can change the state due to warning\28char\20const*\2c\20...\29
[asyncify] MidiDriver_TIMIDITY::open\28\29 can change the state due to warning\28char\20const*\2c\20...\29
[asyncify] MidiDriver_TIMIDITY::connect_to_server\28char\20const*\2c\20char\20const*\29 can change the state due to warning\28char\20const*\2c\20...\29
[asyncify] MidiDriver_TIMIDITY::timidity_ctl_command\28char\20const*\2c\20...\29 can change the state due to warning\28char\20const*\2c\20...\29
[asyncify] MidiDriver_TIMIDITY::timidity_write_data\28void\20const*\2c\20unsigned\20long\29 can change the state due to warning\28char\20const*\2c\20...\29
[asyncify] MidiDriver_TIMIDITY::timidity_sync\28int\29 can change the state due to warning\28char\20const*\2c\20...\29
[asyncify] MidiDriver_TIMIDITY::send\28unsigned\20int\29 can change the state due to warning\28char\20const*\2c\20...\29
[asyncify] OpenGL::OpenGLGraphicsManager::setGraphicsMode\28int\2c\20unsigned\20int\29 can change the state due to warning\28char\20const*\2c\20...\29
[asyncify] virtual\20thunk\20to\20OpenGL::OpenGLGraphicsManager::setGraphicsMode\28int\2c\20unsigned\20int\29 can change the state due to warning\28char\20const*\2c\20...\29
[asyncify] OpenGL::Shader::getAttribute\28char\20const*\29 can change the state due to warning\28char\20const*\2c\20...\29
[asyncify] Graphics::PaletteLookup::findBestColor\28unsigned\20char\2c\20unsigned\20char\2c\20unsigned\20char\2c\20bool\29 can change the state due to warning\28char\20const*\2c\20...\29
[asyncify] Graphics::Renderer::getBestMatchingType\28Graphics::RendererType\2c\20unsigned\20int\29 can change the state due to warning\28char\20const*\2c\20...\29
[asyncify] SdlWindow::setupIcon\28\29 can change the state due to warning\28char\20const*\2c\20...\29
[asyncify] ScalerManager::updateOldSettings\28\29 can change the state due to warning\28char\20const*\2c\20...\29
[asyncify] Graphics::MacFontManager::getFontEncoding\28unsigned\20short\29 can change the state due to warning\28char\20const*\2c\20...\29
[asyncify] GUI::OptionsDialog::getSubtitleMode\28bool\2c\20bool\29 can change the state due to warning\28char\20const*\2c\20...\29
[asyncify] Graphics::MacMenu::addSubMenu\28Graphics::MacMenuSubMenu*\2c\20int\29 can change the state due to warning\28char\20const*\2c\20...\29
[asyncify] Graphics::MacMenu::getSubMenuItem\28Graphics::MacMenuItem*\2c\20Common::String\20const&\29 can change the state due to warning\28char\20const*\2c\20...\29
[asyncify] Graphics::MacMenu::getSubMenuItem\28Graphics::MacMenuItem*\2c\20int\29 can change the state due to warning\28char\20const*\2c\20...\29
[asyncify] Graphics::MacMenu::numberOfMenuItems\28Graphics::MacMenuItem*\29 can change the state due to warning\28char\20const*\2c\20...\29
[asyncify] Graphics::MacMenu::checkCallback\28bool\29 can change the state due to warning\28char\20const*\2c\20...\29
[asyncify] Graphics::MacText::setTextColor\28unsigned\20int\2c\20unsigned\20int\29 can change the state due to warning\28char\20const*\2c\20...\29
[asyncify] Graphics::MacWindowBorder::addBorder\28Graphics::TransparentSurface*\2c\20unsigned\20int\2c\20int\29 can change the state due to warning\28char\20const*\2c\20...\29
[asyncify] Graphics::MacWindowBorder::blitBorderInto\28Graphics::ManagedSurface&\2c\20unsigned\20int\2c\20Graphics::MacWindowManager*\29 can change the state due to warning\28char\20const*\2c\20...\29
[asyncify] Graphics::MacWindowManager::setMenuItemCheckMark\28Graphics::MacMenuItem*\2c\20bool\29 can change the state due to warning\28char\20const*\2c\20...\29
[asyncify] Graphics::MacWindowManager::setMenuItemEnabled\28Graphics::MacMenuItem*\2c\20bool\29 can change the state due to warning\28char\20const*\2c\20...\29
[asyncify] Graphics::MacWindowManager::setMenuItemName\28Graphics::MacMenuItem*\2c\20Common::String\20const&\29 can change the state due to warning\28char\20const*\2c\20...\29
[asyncify] Graphics::MacWindowManager::setMenuItemAction\28Graphics::MacMenuItem*\2c\20int\29 can change the state due to warning\28char\20const*\2c\20...\29
[asyncify] Graphics::MacWindowManager::getMenuItemCheckMark\28Graphics::MacMenuItem*\29 can change the state due to warning\28char\20const*\2c\20...\29
[asyncify] Graphics::MacWindowManager::getMenuItemEnabled\28Graphics::MacMenuItem*\29 can change the state due to warning\28char\20const*\2c\20...\29
[asyncify] Graphics::MacWindowManager::getMenuItemName\28Graphics::MacMenuItem*\29 can change the state due to warning\28char\20const*\2c\20...\29
[asyncify] Graphics::MacWindowManager::getMenuItemAction\28Graphics::MacMenuItem*\29 can change the state due to warning\28char\20const*\2c\20...\29
[asyncify] Graphics::MacWindowManager::getDrawInvertPixel\28\29 can change the state due to warning\28char\20const*\2c\20...\29
[asyncify] Graphics::NinePatchSide::init\28Graphics::TransparentSurface*\2c\20bool\2c\20int\2c\20int*\29 can change the state due to warning\28char\20const*\2c\20...\29
[asyncify] Graphics::NinePatchBitmap::NinePatchBitmap\28Graphics::TransparentSurface*\2c\20bool\2c\20int\29 can change the state due to warning\28char\20const*\2c\20...\29
[asyncify] TinyGL::GLContext::gl_GetFloatv\28int\2c\20float*\29 can change the state due to warning\28char\20const*\2c\20...\29
[asyncify] TinyGL::GLContext::glopLightModel\28TinyGL::GLParam*\29 can change the state due to warning\28char\20const*\2c\20...\29
[asyncify] OSystem_SDL::openUrl\28Common::String\20const&\29 can change the state due to warning\28char\20const*\2c\20...\29
[asyncify] virtual\20thunk\20to\20OSystem_SDL::openUrl\28Common::String\20const&\29 can change the state due to warning\28char\20const*\2c\20...\29
[asyncify] GUI::PredictiveDialog::addWordToDict\28\29 can change the state due to warning\28char\20const*\2c\20...\29
[asyncify] GUI::PredictiveDialog::addWord\28GUI::PredictiveDialog::Dict&\2c\20Common::String\20const&\2c\20Common::String\20const&\29 can change the state due to warning\28char\20const*\2c\20...\29
[asyncify] GUI::ThemeEngine::themeConfigParseHeader\28Common::String\2c\20Common::String&\29 can change the state due to warning\28char\20const*\2c\20...\29
[asyncify] GUI::parseBoolean\28Common::String\20const&\29 can change the state due to warning\28char\20const*\2c\20...\29
[asyncify] GUI::ThemeParser::parseDrawStep\28Common::XMLParser::ParserNode*\2c\20Graphics::DrawStep*\2c\20bool\29 can change the state due to warning\28char\20const*\2c\20...\29
[asyncify] GUI::ThemeParser::resolutionCheck\28Common::String\20const&\29 can change the state due to warning\28char\20const*\2c\20...\29
[asyncify] GUI::ThemeParser::parserCallback_def\28Common::XMLParser::ParserNode*\29 can change the state due to warning\28char\20const*\2c\20...\29
[asyncify] GUI::ThemeParser::parserCallback_widget\28Common::XMLParser::ParserNode*\29 can change the state due to warning\28char\20const*\2c\20...\29
[asyncify] OpenGL::ShaderManager::query\28OpenGL::ShaderManager::ShaderUsage\29\20const can change the state due to warning\28char\20const*\2c\20...\29
[asyncify] OpenGL::LibRetro::PresetParser::lookUpValue\28Common::String\20const&\2c\20unsigned\20int*\29 can change the state due to warning\28char\20const*\2c\20...\29
[asyncify] SdlGraphicsManager::getPreferredFullscreenResolution\28\29 can change the state due to warning\28char\20const*\2c\20...\29
[asyncify] SdlGraphicsManager::initSizeHint\28Common::Array<Graphics::Mode>\20const&\29 can change the state due to warning\28char\20const*\2c\20...\29
[asyncify] SurfaceSdlGraphicsManager::fixupResolutionForAspectRatio\28AspectRatio\2c\20int&\2c\20int&\29\20const can change the state due to warning\28char\20const*\2c\20...\29
[asyncify] SDLPlugin::findSymbol\28char\20const*\29 can change the state due to warning\28char\20const*\2c\20...\29
[asyncify] Graphics::TransparentSurface::convertTo\28Graphics::PixelFormat\20const&\2c\20unsigned\20char\20const*\29\20const can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Graphics::VectorRenderer::stepGetPositions\28Graphics::DrawStep\20const&\2c\20Common::Rect\20const&\2c\20unsigned\20short&\2c\20unsigned\20short&\2c\20unsigned\20short&\2c\20unsigned\20short&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Common::Array<SynthInstr*>::insert_aux\28SynthInstr**\2c\20SynthInstr*\20const*\2c\20SynthInstr*\20const*\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Common::Array<SynthWave*>::insert_aux\28SynthWave**\2c\20SynthWave*\20const*\2c\20SynthWave*\20const*\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Common::Array<SynthRgn*>::insert_aux\28SynthRgn**\2c\20SynthRgn*\20const*\2c\20SynthRgn*\20const*\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Common::Array<VGMSamp*>::insert_aux\28VGMSamp**\2c\20VGMSamp*\20const*\2c\20VGMSamp*\20const*\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Common::Array<VGMInstrSet*>::insert_aux\28VGMInstrSet**\2c\20VGMInstrSet*\20const*\2c\20VGMInstrSet*\20const*\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Common::Array<VGMSampColl*>::insert_aux\28VGMSampColl**\2c\20VGMSampColl*\20const*\2c\20VGMSampColl*\20const*\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Common::Array<Common::Array<VGMItem*>*>::insert_aux\28Common::Array<VGMItem*>**\2c\20Common::Array<VGMItem*>*\20const*\2c\20Common::Array<VGMItem*>*\20const*\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Common::Array<VGMHeader*>::insert_aux\28VGMHeader**\2c\20VGMHeader*\20const*\2c\20VGMHeader*\20const*\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Common::Array<VGMItem*>::insert_aux\28VGMItem**\2c\20VGMItem*\20const*\2c\20VGMItem*\20const*\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Common::Array<VGMRgnItem*>::insert_aux\28VGMRgnItem**\2c\20VGMRgnItem*\20const*\2c\20VGMRgnItem*\20const*\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] PSXSampColl::PSXSampColl\28VGMInstrSet*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20Common::Array<SizeOffsetPair>\20const&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Common::Array<VGMInstr*>::insert_aux\28VGMInstr**\2c\20VGMInstr*\20const*\2c\20VGMInstr*\20const*\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Common::Array<SizeOffsetPair>::insert_aux\28SizeOffsetPair*\2c\20SizeOffsetPair\20const*\2c\20SizeOffsetPair\20const*\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Common::Array<VGMRgn*>::insert_aux\28VGMRgn**\2c\20VGMRgn*\20const*\2c\20VGMRgn*\20const*\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20PSXConvADSR<VabRgn>\28VabRgn*\2c\20unsigned\20char\2c\20unsigned\20char\2c\20unsigned\20char\2c\20unsigned\20char\2c\20unsigned\20char\2c\20unsigned\20char\2c\20unsigned\20char\2c\20unsigned\20char\2c\20unsigned\20char\2c\20bool\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Math::Rotation3D<Math::Matrix<4\2c\204>>::buildFromEuler\28Math::Angle\20const&\2c\20Math::Angle\20const&\2c\20Math::Angle\20const&\2c\20Math::EulerOrder\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Math::Rotation3D<Math::Matrix<4\2c\204>>::getEuler\28Math::Angle*\2c\20Math::Angle*\2c\20Math::Angle*\2c\20Math::EulerOrder\29\20const can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Math::Rect2d::intersectsRect\28Math::Rect2d\20const&\29\20const can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Common::ConfigManager::removeKey\28Common::String\20const&\2c\20Common::String\20const&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Common::ConfigManager::get\28Common::String\20const&\2c\20Common::String\20const&\29\20const can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Common::ConfigManager::getInt\28Common::String\20const&\2c\20Common::String\20const&\29\20const can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Common::ConfigManager::getBool\28Common::String\20const&\2c\20Common::String\20const&\29\20const can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Common::ConfigManager::set\28Common::String\20const&\2c\20Common::String\20const&\2c\20Common::String\20const&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20Common::unknownKeyError<Common::String>\28Common::String\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20Common::unknownKeyError<signed\20char>\28signed\20char\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20Common::unknownKeyError<unsigned\20char>\28unsigned\20char\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20Common::unknownKeyError<short>\28short\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20Common::unknownKeyError<unsigned\20short>\28unsigned\20short\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20Common::unknownKeyError<long>\28long\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20Common::unknownKeyError<unsigned\20long>\28unsigned\20long\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20Common::unknownKeyError<int>\28int\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20Common::unknownKeyError<unsigned\20int>\28unsigned\20int\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20Common::unknownKeyError<long\20long>\28long\20long\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20Common::unknownKeyError<unsigned\20long\20long>\28unsigned\20long\20long\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20Common::unknownKeyError<void*>\28void*\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20Common::unknownKeyError<char\20const*>\28char\20const*\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Common::MacResManager::getResIDArray\28unsigned\20int\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Common::MacResManager::getResTagArray\28\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Common::Array<Common::MemoryPool::Page>::insert_aux\28Common::MemoryPool::Page*\2c\20Common::MemoryPool::Page\20const*\2c\20Common::MemoryPool::Page\20const*\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Common::MemoryPool::freeUnusedPages\28\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Common::convertToU32String\28char\20const*\2c\20Common::CodePage\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Common::String::decode\28Common::CodePage\29\20const can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Common::convertFromU32String\28Common::U32String\20const&\2c\20Common::CodePage\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Common::U32String::encode\28Common::CodePage\29\20const can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Common::U32String::encode\28Common::String&\2c\20Common::CodePage\2c\20char\29\20const can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Common::Array<Common::U32String>::reserve\28unsigned\20int\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Common::Array<Common::PoMessageEntry>::reserve\28unsigned\20int\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Common::Array<Common::TLanguage>::insert_aux\28Common::TLanguage*\2c\20Common::TLanguage\20const*\2c\20Common::TLanguage\20const*\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Common::PowerPackerStream::getCrunchType\28unsigned\20int\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Common::PowerPackerStream::unpackBuffer\28unsigned\20char\20const*\2c\20unsigned\20int\2c\20unsigned\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Common::ArjDecoder::make_table\28int\2c\20unsigned\20char*\2c\20int\2c\20unsigned\20short*\2c\20int\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Common::Array<Common::ArjFileChunk>::insert_aux\28Common::ArjFileChunk*\2c\20Common::ArjFileChunk\20const*\2c\20Common::ArjFileChunk\20const*\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Common::makeArjArchive\28Common::String\20const&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Common::Array<Common::MacVISEArchive::DirectoryDesc>::insert_aux\28Common::MacVISEArchive::DirectoryDesc*\2c\20Common::MacVISEArchive::DirectoryDesc\20const*\2c\20Common::MacVISEArchive::DirectoryDesc\20const*\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Common::Array<Common::MacVISEArchive::FileDesc>::insert_aux\28Common::MacVISEArchive::FileDesc*\2c\20Common::MacVISEArchive::FileDesc\20const*\2c\20Common::MacVISEArchive::FileDesc\20const*\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Common::Array<Common::JSONValue*>::insert_aux\28Common::JSONValue**\2c\20Common::JSONValue*\20const*\2c\20Common::JSONValue*\20const*\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Common::JSONValue::JSONValue\28Common::Array<Common::JSONValue*>\20const&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Common::JSONValue::JSONValue\28Common::JSONValue\20const&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Common::Array<Common::QuickTimeParser::EditListEntry>::resize\28unsigned\20int\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Common::Array<Common::QuickTimeParser::SampleDesc*>::insert_aux\28Common::QuickTimeParser::SampleDesc**\2c\20Common::QuickTimeParser::SampleDesc*\20const*\2c\20Common::QuickTimeParser::SampleDesc*\20const*\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Common::Array<Common::QuickTimeParser::Track*>::insert_aux\28Common::QuickTimeParser::Track**\2c\20Common::QuickTimeParser::Track*\20const*\2c\20Common::QuickTimeParser::Track*\20const*\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Common::Array<Common::WinResourceID>::insert_aux\28Common::WinResourceID*\2c\20Common::WinResourceID\20const*\2c\20Common::WinResourceID\20const*\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20Common::unknownKeyError<Common::WinResourceID>\28Common::WinResourceID\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Common::Array<Common::XMLParser::ParserNode*>::insert_aux\28Common::XMLParser::ParserNode**\2c\20Common::XMLParser::ParserNode*\20const*\2c\20Common::XMLParser::ParserNode*\20const*\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Common::Array<Video::ThreeDOMovieDecoder::StreamAudioTrack*>::insert_aux\28Video::ThreeDOMovieDecoder::StreamAudioTrack**\2c\20Video::ThreeDOMovieDecoder::StreamAudioTrack*\20const*\2c\20Video::ThreeDOMovieDecoder::StreamAudioTrack*\20const*\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Video::ThreeDOMovieDecoder::StreamAudioTrack::StreamAudioTrack\28unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int\2c\20Audio::Mixer::SoundType\2c\20unsigned\20int\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Common::Array<Video::AVIDecoder::OldIndex>::insert_aux\28Video::AVIDecoder::OldIndex*\2c\20Video::AVIDecoder::OldIndex\20const*\2c\20Video::AVIDecoder::OldIndex\20const*\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Common::Array<Video::AVIDecoder::TrackStatus>::insert_aux\28Video::AVIDecoder::TrackStatus*\2c\20Video::AVIDecoder::TrackStatus\20const*\2c\20Video::AVIDecoder::TrackStatus\20const*\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Common::Array<Video::VMDDecoder::File>::reserve\28unsigned\20int\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Common::Array<Video::VMDDecoder::File>::insert_aux\28Video::VMDDecoder::File*\2c\20Video::VMDDecoder::File\20const*\2c\20Video::VMDDecoder::File\20const*\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Video::DXADecoder::DXAVideoTrack::decode12\28int\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Video::DXADecoder::DXAVideoTrack::decode13\28int\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Video::HNMDecoder::HNM45VideoTrack::HNM45VideoTrack\28unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20char\20const*\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Video::HNMDecoder::HNM45VideoTrack::decodePalette\28unsigned\20char*\2c\20unsigned\20int\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Video::HNMDecoder::HNM4VideoTrack::presentFrame\28unsigned\20short\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Video::HNMDecoder::HNM5VideoTrack::decodeChunk\28unsigned\20char*\2c\20unsigned\20int\2c\20unsigned\20short\2c\20unsigned\20short\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Video::PSXStreamDecoder::PSXVideoTrack::decodeFrame\28Common::BitStreamMemoryStream*\2c\20unsigned\20int\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Common::Array<Common::List<Common::Huffman<Common::BitStreamImpl<Common::BitStreamMemoryStream\2c\20unsigned\20long\20long\2c\2016\2c\20true\2c\20true>>::Symbol>>::reserve\28unsigned\20int\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Video::PSXStreamDecoder::PSXVideoTrack::readDC\28Common::BitStreamImpl<Common::BitStreamMemoryStream\2c\20unsigned\20long\20long\2c\2016\2c\20true\2c\20true>*\2c\20unsigned\20short\2c\20Video::PSXStreamDecoder::PSXVideoTrack::PlaneType\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Video::PSXStreamDecoder::PSXVideoTrack::readAC\28Common::BitStreamImpl<Common::BitStreamMemoryStream\2c\20unsigned\20long\20long\2c\2016\2c\20true\2c\20true>*\2c\20int*\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Common::Huffman<Common::BitStreamImpl<Common::BitStreamMemoryStream\2c\20unsigned\20long\20long\2c\2016\2c\20true\2c\20true>>::getSymbol\28Common::BitStreamImpl<Common::BitStreamMemoryStream\2c\20unsigned\20long\20long\2c\2016\2c\20true\2c\20true>&\29\20const can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Common::BitStreamImpl<Common::BitStreamMemoryStream\2c\20unsigned\20long\20long\2c\2016\2c\20true\2c\20true>::peekBits\28unsigned\20long\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Video::QuickTimeDecoder::VideoTrackHandler::getCurFrameDuration\28\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Common::Array<Video::SRTEntry*>::insert_aux\28Video::SRTEntry**\2c\20Video::SRTEntry*\20const*\2c\20Video::SRTEntry*\20const*\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Common::Array<Video::VideoDecoder::Track*>::insert_aux\28Video::VideoDecoder::Track**\2c\20Video::VideoDecoder::Track*\20const*\2c\20Video::VideoDecoder::Track*\20const*\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Video::BinkDecoder::BinkVideoTrack::blockInter\28Video::BinkDecoder::BinkVideoTrack::DecodeContext&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Video::BinkDecoder::BinkVideoTrack::blockScaled\28Video::BinkDecoder::BinkVideoTrack::DecodeContext&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Video::BinkDecoder::BinkVideoTrack::blockMotion\28Video::BinkDecoder::BinkVideoTrack::DecodeContext&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Common::Array<Common::List<Common::Huffman<Common::BitStreamImpl<Common::SeekableReadStream\2c\20unsigned\20long\20long\2c\2032\2c\20true\2c\20false>>::Symbol>>::reserve\28unsigned\20int\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Common::Array<Image::IFFDecoder::PaletteRange>::insert_aux\28Image::IFFDecoder::PaletteRange*\2c\20Image::IFFDecoder::PaletteRange\20const*\2c\20Image::IFFDecoder::PaletteRange\20const*\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Common::Array<Image::PICTDecoder::PICTOpcode>::insert_aux\28Image::PICTDecoder::PICTOpcode*\2c\20Image::PICTDecoder::PICTOpcode\20const*\2c\20Image::PICTDecoder::PICTOpcode\20const*\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Image::pngError\28png_struct_def*\2c\20char\20const*\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Image::writePNG\28Common::WriteStream&\2c\20Graphics::Surface\20const&\2c\20unsigned\20char\20const*\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Common::Array<unsigned\20char\20const*>::insert_aux\28unsigned\20char\20const**\2c\20unsigned\20char\20const*\20const*\2c\20unsigned\20char\20const*\20const*\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Image::BitmapRawDecoder::BitmapRawDecoder\28int\2c\20int\2c\20int\2c\20bool\2c\20bool\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Image::BitmapRawDecoder::getPixelFormat\28\29\20const can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Common::Array<Image::CDToonsAction>::insert_aux\28Image::CDToonsAction*\2c\20Image::CDToonsAction\20const*\2c\20Image::CDToonsAction\20const*\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Common::Array<Image::CDToonsDiff>::insert_aux\28Image::CDToonsDiff*\2c\20Image::CDToonsDiff\20const*\2c\20Image::CDToonsDiff\20const*\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Image::HNM6::DecoderImpl::decodeIWkf88\28Graphics::Surface&\2c\20unsigned\20int\2c\20unsigned\20int\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Image::HNM6::DecoderImpl::renderPlane\28int*\2c\20int*\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Image::HNM6::DecoderImpl::decodeIWkf44\28Graphics::Surface&\2c\20unsigned\20int\2c\20unsigned\20int\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Image::HNM6::DecoderImpl::decodeIXkf44\28Graphics::Surface&\2c\20unsigned\20int\2c\20unsigned\20int\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Image::HNM6::DecoderImpl::decodeIXif88\28Graphics::Surface&\2c\20Graphics::Surface&\2c\20unsigned\20int\2c\20unsigned\20int\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Image::HNM6::DecoderImpl::decodeIXif44\28Graphics::Surface&\2c\20Graphics::Surface&\2c\20unsigned\20int\2c\20unsigned\20int\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Image::HNM6::DecoderImpl::decodeIXif22\28Graphics::Surface&\2c\20Graphics::Surface&\2c\20unsigned\20int\2c\20unsigned\20int\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Image::HNM6::DecoderImpl::DecoderImpl\28unsigned\20short\2c\20unsigned\20short\2c\20Graphics::PixelFormat\20const&\2c\20unsigned\20int\2c\20bool\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Image::HNM6::DecoderImpl::decodeIXkf88\28Graphics::Surface&\2c\20unsigned\20int\2c\20unsigned\20int\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Common::BitStreamImpl<Common::BitStreamMemoryStream\2c\20unsigned\20long\20long\2c\208\2c\20false\2c\20true>::getBits\28unsigned\20long\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Image::QTRLEDecoder::getPixelFormat\28\29\20const can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Common::Array<Common::List<Common::Huffman<Common::BitStreamImpl<Common::SeekableReadStream\2c\20unsigned\20long\20long\2c\2032\2c\20false\2c\20true>>::Symbol>>::reserve\28unsigned\20int\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Image::TrueMotion1Decoder::decode16\28\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Image::XanDecoder::XanDecoder\28int\2c\20int\2c\20int\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Image::Indeo::IVIPlaneDesc::initPlanes\28Image::Indeo::IVIPlaneDesc*\2c\20Image::Indeo::IVIPicConfig\20const*\2c\20bool\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Image::Indeo::IVIPlaneDesc::checkImageSize\28unsigned\20int\2c\20unsigned\20int\2c\20int\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Common::Array<Graphics::CursorManager::Cursor*>::insert_aux\28Graphics::CursorManager::Cursor**\2c\20Graphics::CursorManager::Cursor*\20const*\2c\20Graphics::CursorManager::Cursor*\20const*\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Common::Array<Graphics::CursorManager::Palette*>::insert_aux\28Graphics::CursorManager::Palette**\2c\20Graphics::CursorManager::Palette*\20const*\2c\20Graphics::CursorManager::Palette*\20const*\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Common::Array<Graphics::Font\20const*>::insert_aux\28Graphics::Font\20const**\2c\20Graphics::Font\20const*\20const*\2c\20Graphics::Font\20const*\20const*\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Graphics::AmigaFont::getCharWidth\28unsigned\20int\29\20const can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Graphics::AmigaFont::mapChar\28unsigned\20int\29\20const can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Graphics::AmigaFont::getKerningOffset\28unsigned\20int\2c\20unsigned\20int\29\20const can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Graphics::AmigaFont::drawChar\28Graphics::Surface*\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20int\29\20const can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Common::Array<Graphics::MacFontFamily::StyleWidthEntry>::reserve\28unsigned\20int\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Common::Array<Graphics::MacFontFamily::KernEntry>::resize\28unsigned\20int\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Graphics::MacFontFamily::KernEntry::KernEntry\28Graphics::MacFontFamily::KernEntry\20const&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Graphics::MacFONTFont::MacFONTFont\28Graphics::MacFONTdata\20const&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Graphics::MarginedBitmap<bool>::MarginedBitmap\28int\2c\20int\2c\20bool\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Common::Array<Graphics::MacFontFamily*>::insert_aux\28Graphics::MacFontFamily**\2c\20Graphics::MacFontFamily*\20const*\2c\20Graphics::MacFontFamily*\20const*\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] TinyGL::BlitImage::loadData\28Graphics::Surface\20const&\2c\20unsigned\20int\2c\20bool\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::BlitImage::tglBlitScale<true\2c\20false\2c\20false\2c\20false>\28int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20float\2c\20float\2c\20float\2c\20float\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::BlitImage::tglBlitRotoScale<true\2c\20false\2c\20false\2c\20false>\28int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20float\2c\20float\2c\20float\2c\20float\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::BlitImage::tglBlitScale<true\2c\20false\2c\20true\2c\20false>\28int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20float\2c\20float\2c\20float\2c\20float\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::BlitImage::tglBlitRotoScale<true\2c\20false\2c\20true\2c\20false>\28int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20float\2c\20float\2c\20float\2c\20float\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::BlitImage::tglBlitScale<true\2c\20false\2c\20false\2c\20true>\28int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20float\2c\20float\2c\20float\2c\20float\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::BlitImage::tglBlitRotoScale<true\2c\20false\2c\20false\2c\20true>\28int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20float\2c\20float\2c\20float\2c\20float\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Common::Array<TinyGL::BlitImage::Line>::insert_aux\28TinyGL::BlitImage::Line*\2c\20TinyGL::BlitImage::Line\20const*\2c\20TinyGL::BlitImage::Line\20const*\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::BlitImage::tglBlitSimple<true\2c\20true\2c\20true\2c\20true>\28int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20float\2c\20float\2c\20float\2c\20float\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::BlitImage::tglBlitRotoScale<false\2c\20true\2c\20true\2c\20true>\28int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20float\2c\20float\2c\20float\2c\20float\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::BlitImage::tglBlitSimple<true\2c\20true\2c\20false\2c\20true>\28int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20float\2c\20float\2c\20float\2c\20float\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::BlitImage::tglBlitSimple<true\2c\20true\2c\20true\2c\20false>\28int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20float\2c\20float\2c\20float\2c\20float\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::BlitImage::tglBlitSimple<false\2c\20true\2c\20true\2c\20true>\28int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20float\2c\20float\2c\20float\2c\20float\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::BlitImage::tglBlitSimple<false\2c\20true\2c\20false\2c\20true>\28int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20float\2c\20float\2c\20float\2c\20float\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::BlitImage::tglBlitScale<false\2c\20true\2c\20false\2c\20false>\28int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20float\2c\20float\2c\20float\2c\20float\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::BlitImage::tglBlitSimple<false\2c\20true\2c\20true\2c\20false>\28int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20float\2c\20float\2c\20float\2c\20float\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::BlitImage::tglBlitRLE<true\2c\20false\2c\20true>\28int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20float\2c\20float\2c\20float\2c\20float\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::BlitImage::tglBlitScale<true\2c\20true\2c\20true\2c\20true>\28int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20float\2c\20float\2c\20float\2c\20float\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::BlitImage::tglBlitRotoScale<true\2c\20true\2c\20true\2c\20true>\28int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20float\2c\20float\2c\20float\2c\20float\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::BlitImage::tglBlitScale<true\2c\20true\2c\20false\2c\20true>\28int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20float\2c\20float\2c\20float\2c\20float\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::BlitImage::tglBlitRotoScale<true\2c\20true\2c\20false\2c\20true>\28int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20float\2c\20float\2c\20float\2c\20float\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::BlitImage::tglBlitScale<true\2c\20true\2c\20true\2c\20false>\28int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20float\2c\20float\2c\20float\2c\20float\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::BlitImage::tglBlitRotoScale<true\2c\20true\2c\20true\2c\20false>\28int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20float\2c\20float\2c\20float\2c\20float\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::BlitImage::tglBlitScale<true\2c\20true\2c\20false\2c\20false>\28int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20float\2c\20float\2c\20float\2c\20float\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::BlitImage::tglBlitRotoScale<true\2c\20true\2c\20false\2c\20false>\28int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20float\2c\20float\2c\20float\2c\20float\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::BlitImage::tglBlitScale<false\2c\20true\2c\20true\2c\20true>\28int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20float\2c\20float\2c\20float\2c\20float\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::BlitImage::tglBlitScale<false\2c\20true\2c\20false\2c\20true>\28int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20float\2c\20float\2c\20float\2c\20float\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::BlitImage::tglBlitRotoScale<false\2c\20true\2c\20false\2c\20true>\28int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20float\2c\20float\2c\20float\2c\20float\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::BlitImage::tglBlitScale<false\2c\20true\2c\20true\2c\20false>\28int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20float\2c\20float\2c\20float\2c\20float\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::BlitImage::tglBlitRotoScale<false\2c\20true\2c\20true\2c\20false>\28int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20float\2c\20float\2c\20float\2c\20float\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::BlitImage::tglBlitRotoScale<false\2c\20true\2c\20false\2c\20false>\28int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20float\2c\20float\2c\20float\2c\20float\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::BlitImage::tglBlitSimple<true\2c\20false\2c\20true\2c\20true>\28int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20float\2c\20float\2c\20float\2c\20float\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::BlitImage::tglBlitSimple<true\2c\20false\2c\20false\2c\20true>\28int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20float\2c\20float\2c\20float\2c\20float\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::BlitImage::tglBlitSimple<true\2c\20false\2c\20true\2c\20false>\28int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20float\2c\20float\2c\20float\2c\20float\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::BlitImage::tglBlitRLE<false\2c\20true\2c\20true>\28int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20float\2c\20float\2c\20float\2c\20float\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] TinyGL::RasterizationDrawCall::RasterizationDrawCall\28\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] TinyGL::Internal::allocateFrame\28int\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Common::Array<Common::Functor0Mem<bool\2c\20EuphonyPlayer>\20const*>::insert_aux\28Common::Functor0Mem<bool\2c\20EuphonyPlayer>\20const**\2c\20Common::Functor0Mem<bool\2c\20EuphonyPlayer>\20const*\20const*\2c\20Common::Functor0Mem<bool\2c\20EuphonyPlayer>\20const*\20const*\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Common::Array<Common::Functor1Mem<unsigned\20char\2c\20bool\2c\20TownsPC98_MusicChannel>\20const*>::insert_aux\28Common::Functor1Mem<unsigned\20char\2c\20bool\2c\20TownsPC98_MusicChannel>\20const**\2c\20Common::Functor1Mem<unsigned\20char\2c\20bool\2c\20TownsPC98_MusicChannel>\20const*\20const*\2c\20Common::Functor1Mem<unsigned\20char\2c\20bool\2c\20TownsPC98_MusicChannel>\20const*\20const*\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Common::Array<Common::Functor1Mem<unsigned\20char\2c\20bool\2c\20TownsPC98_MusicChannelSSG>\20const*>::insert_aux\28Common::Functor1Mem<unsigned\20char\2c\20bool\2c\20TownsPC98_MusicChannelSSG>\20const**\2c\20Common::Functor1Mem<unsigned\20char\2c\20bool\2c\20TownsPC98_MusicChannelSSG>\20const*\20const*\2c\20Common::Functor1Mem<unsigned\20char\2c\20bool\2c\20TownsPC98_MusicChannelSSG>\20const*\20const*\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Common::Array<Common::Functor1Mem<unsigned\20char\2c\20bool\2c\20TownsPC98_MusicChannelPCM>\20const*>::insert_aux\28Common::Functor1Mem<unsigned\20char\2c\20bool\2c\20TownsPC98_MusicChannelPCM>\20const**\2c\20Common::Functor1Mem<unsigned\20char\2c\20bool\2c\20TownsPC98_MusicChannelPCM>\20const*\20const*\2c\20Common::Functor1Mem<unsigned\20char\2c\20bool\2c\20TownsPC98_MusicChannelPCM>\20const*\20const*\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::BlitImage::tglBlitSimple<false\2c\20false\2c\20true\2c\20true>\28int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20float\2c\20float\2c\20float\2c\20float\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::BlitImage::tglBlitSimple<false\2c\20false\2c\20false\2c\20true>\28int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20float\2c\20float\2c\20float\2c\20float\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::BlitImage::tglBlitSimple<false\2c\20false\2c\20true\2c\20false>\28int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20float\2c\20float\2c\20float\2c\20float\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::BlitImage::tglBlitRLE<false\2c\20false\2c\20true>\28int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20float\2c\20float\2c\20float\2c\20float\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::BlitImage::tglBlitScale<true\2c\20false\2c\20true\2c\20true>\28int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20float\2c\20float\2c\20float\2c\20float\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::BlitImage::tglBlitRotoScale<true\2c\20false\2c\20true\2c\20true>\28int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20float\2c\20float\2c\20float\2c\20float\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::BlitImage::tglBlitScale<false\2c\20false\2c\20true\2c\20true>\28int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20float\2c\20float\2c\20float\2c\20float\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::BlitImage::tglBlitRotoScale<false\2c\20false\2c\20true\2c\20true>\28int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20float\2c\20float\2c\20float\2c\20float\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::BlitImage::tglBlitScale<false\2c\20false\2c\20false\2c\20true>\28int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20float\2c\20float\2c\20float\2c\20float\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::BlitImage::tglBlitRotoScale<false\2c\20false\2c\20false\2c\20true>\28int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20float\2c\20float\2c\20float\2c\20float\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::BlitImage::tglBlitScale<false\2c\20false\2c\20true\2c\20false>\28int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20float\2c\20float\2c\20float\2c\20float\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::BlitImage::tglBlitRotoScale<false\2c\20false\2c\20true\2c\20false>\28int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20float\2c\20float\2c\20float\2c\20float\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::BlitImage::tglBlitScale<false\2c\20false\2c\20false\2c\20false>\28int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20float\2c\20float\2c\20float\2c\20float\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::BlitImage::tglBlitRotoScale<false\2c\20false\2c\20false\2c\20false>\28int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20float\2c\20float\2c\20float\2c\20float\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::BlitImage::tglBlitSimple<false\2c\20true\2c\20false\2c\20false>\28int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20float\2c\20float\2c\20float\2c\20float\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::BlitImage::tglBlitRLE<false\2c\20true\2c\20false>\28int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20float\2c\20float\2c\20float\2c\20float\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::BlitImage::tglBlitSimple<false\2c\20false\2c\20false\2c\20false>\28int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20float\2c\20float\2c\20float\2c\20float\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] TinyGL::GLContext::debugDrawRectangle\28Common::Rect\2c\20int\2c\20int\2c\20int\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] CMS::Config::create\28\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] CMS::CMS::CMS\28\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] CMS::EmulatedCMS::EmulatedCMS\28\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] OPL::OPL::OPL\28\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] OPL::RealOPL::RealOPL\28\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] OPL::EmulatedOPL::EmulatedOPL\28\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Common::Array<unsigned\20char>::insert_aux\28unsigned\20char*\2c\20unsigned\20char\20const*\2c\20unsigned\20char\20const*\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Common::Array<MidiParser_QT::MIDITrackInfo>::insert_aux\28MidiParser_QT::MIDITrackInfo*\2c\20MidiParser_QT::MIDITrackInfo\20const*\2c\20MidiParser_QT::MIDITrackInfo\20const*\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] MidiParser_QT::readNextEvent\28\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] MidiParser_QT::findFreeChannel\28unsigned\20int\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] MidiParser_QT::deallocateFreeChannel\28\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Audio::RateConverter*\20Audio::makeRateConverter<true\2c\20true\2c\20true>\28unsigned\20int\2c\20unsigned\20int\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Audio::RateConverter*\20Audio::makeRateConverter<true\2c\20true\2c\20false>\28unsigned\20int\2c\20unsigned\20int\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Audio::RateConverter*\20Audio::makeRateConverter<true\2c\20false\2c\20false>\28unsigned\20int\2c\20unsigned\20int\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Audio::RateConverter*\20Audio::makeRateConverter<false\2c\20true\2c\20false>\28unsigned\20int\2c\20unsigned\20int\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Audio::RateConverter*\20Audio::makeRateConverter<false\2c\20false\2c\20false>\28unsigned\20int\2c\20unsigned\20int\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Audio::ASFStream::createCodec\28\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Common::Array<Audio::ASFStream::Packet::Segment>::reserve\28unsigned\20int\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Common::Array<Common::SeekableReadStream*>::insert_aux\28Common::SeekableReadStream**\2c\20Common::SeekableReadStream*\20const*\2c\20Common::SeekableReadStream*\20const*\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Audio::initVlcSparse\28Audio::VLC*\2c\20int\2c\20int\2c\20void\20const*\2c\20int\2c\20int\2c\20void\20const*\2c\20int\2c\20int\2c\20void\20const*\2c\20int\2c\20int\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Audio::build_table\28Audio::VLC*\2c\20int\2c\20int\2c\20void\20const*\2c\20int\2c\20int\2c\20void\20const*\2c\20int\2c\20int\2c\20void\20const*\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Audio::QDM2Stream::initVlc\28\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Audio::qdm2_get_vlc\28Common::BitStreamImpl<Common::BitStreamMemoryStream\2c\20unsigned\20long\20long\2c\2032\2c\20true\2c\20false>*\2c\20Audio::VLC*\2c\20int\2c\20int\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Common::BitStreamImpl<Common::BitStreamMemoryStream\2c\20unsigned\20long\20long\2c\2032\2c\20true\2c\20false>::peekBits\28unsigned\20long\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Audio::QDM2Stream::qdm2_decode_super_block\28\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Common::Array<Audio::QuickTimeAudioDecoder::QuickTimeAudioTrack*>::insert_aux\28Audio::QuickTimeAudioDecoder::QuickTimeAudioTrack**\2c\20Audio::QuickTimeAudioDecoder::QuickTimeAudioTrack*\20const*\2c\20Audio::QuickTimeAudioDecoder::QuickTimeAudioTrack*\20const*\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Audio::WMACodec::initMDCT\28\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Common::Array<Math::MDCT*>::insert_aux\28Math::MDCT**\2c\20Math::MDCT*\20const*\2c\20Math::MDCT*\20const*\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Common::Array<float\20const*>::insert_aux\28float\20const**\2c\20float\20const*\20const*\2c\20float\20const*\20const*\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Common::Array<Common::List<Common::Huffman<Common::BitStreamImpl<Common::SeekableReadStream\2c\20unsigned\20long\20long\2c\208\2c\20false\2c\20true>>::Symbol>>::reserve\28unsigned\20int\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Audio::Rjp1::modulateVolumeEnvelope\28Audio::Rjp1Channel*\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] lua_dump\28lua_State*\2c\20int\20\28*\29\28lua_State*\2c\20void\20const*\2c\20unsigned\20long\2c\20void*\29\2c\20void*\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Lua::LuaFileConfig::getLanguage\28\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] f_parser\28lua_State*\2c\20void*\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] io_fclose\28lua_State*\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] io_pclose\28lua_State*\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] f_flush\28lua_State*\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] io_readline\28lua_State*\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] f_read\28lua_State*\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] f_seek\28lua_State*\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] f_setvbuf\28lua_State*\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] io_tostring\28lua_State*\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] io_flush\28lua_State*\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] io_input\28lua_State*\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] io_lines\28lua_State*\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] io_output\28lua_State*\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] io_popen\28lua_State*\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] io_read\28lua_State*\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] io_write\28lua_State*\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Lua::LuaFileConfig::setLanguage\28Common::String\20const&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Common::Array<bool>::insert_aux\28bool*\2c\20bool\20const*\2c\20bool\20const*\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20Common::unknownKeyError<Common::U32String>\28Common::U32String\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Common::Array<GUI::GridItemWidget*>::insert_aux\28GUI::GridItemWidget**\2c\20GUI::GridItemWidget*\20const*\2c\20GUI::GridItemWidget*\20const*\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Common::Array<Common::U32String>::operator=\28Common::Array<Common::U32String>\20const&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] GUI::GroupedListWidget::startEditMode\28\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] GUI::ListWidget::copyListData\28Common::Array<Common::U32String>\20const&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Common::Array<GUI::ListWidget::ListData>::insert_aux\28GUI::ListWidget::ListData*\2c\20GUI::ListWidget::ListData\20const*\2c\20GUI::ListWidget::ListData\20const*\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] GUI::ListWidget::stripGUIformatting\28Common::U32String\20const&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Common::Array<GUI::PopUpWidget::Entry>::insert_aux\28GUI::PopUpWidget::Entry*\2c\20GUI::PopUpWidget::Entry\20const*\2c\20GUI::PopUpWidget::Entry\20const*\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Common::Array<GUI::TabWidget::Tab>::insert_aux\28GUI::TabWidget::Tab*\2c\20GUI::TabWidget::Tab\20const*\2c\20GUI::TabWidget::Tab\20const*\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Common::Array<Common::HardwareInputSet*>::insert_aux\28Common::HardwareInputSet**\2c\20Common::HardwareInputSet*\20const*\2c\20Common::HardwareInputSet*\20const*\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Common::Keymap::addAction\28Common::Action*\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Common::Array<Common::Action*>::insert_aux\28Common::Action**\2c\20Common::Action*\20const*\2c\20Common::Action*\20const*\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Common::Keymap::getActionDefaultMappings\28Common::Action*\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Common::Array<Common::HardwareInput>::insert_aux\28Common::HardwareInput*\2c\20Common::HardwareInput\20const*\2c\20Common::HardwareInput\20const*\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Common::Array<Common::RemapWidget::ActionRow>::insert_aux\28Common::RemapWidget::ActionRow*\2c\20Common::RemapWidget::ActionRow\20const*\2c\20Common::RemapWidget::ActionRow\20const*\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Common::Array<Common::String>::operator=\28Common::Array<Common::String>\20const&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Common::Array<OpenGL::VertexAttrib>::insert_aux\28OpenGL::VertexAttrib*\2c\20OpenGL::VertexAttrib\20const*\2c\20OpenGL::VertexAttrib\20const*\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] OpenGL::Shader::fromStrings\28Common::String\20const&\2c\20char\20const*\2c\20char\20const*\2c\20char\20const*\20const*\2c\20int\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Common::Array<Graphics::RendererTypeDescription>::insert_aux\28Graphics::RendererTypeDescription*\2c\20Graphics::RendererTypeDescription\20const*\2c\20Graphics::RendererTypeDescription\20const*\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Graphics::Surface::hLine\28int\2c\20int\2c\20int\2c\20unsigned\20int\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Graphics::Surface::vLine\28int\2c\20int\2c\20int\2c\20unsigned\20int\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Graphics::Surface::fillRect\28Common::Rect\2c\20unsigned\20int\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Graphics::Surface::move\28int\2c\20int\2c\20int\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Graphics::Surface::convertToInPlace\28Graphics::PixelFormat\20const&\2c\20unsigned\20char\20const*\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Graphics::Surface::convertTo\28Graphics::PixelFormat\20const&\2c\20unsigned\20char\20const*\2c\20int\2c\20unsigned\20char\20const*\2c\20int\2c\20Graphics::DitherMethod\29\20const can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Graphics::Surface::ditherFloyd\28unsigned\20char\20const*\2c\20int\2c\20Graphics::Surface*\2c\20unsigned\20char\20const*\2c\20int\2c\20Graphics::DitherMethod\29\20const can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Graphics::FloodFill::addSeed\28int\2c\20int\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Common::Array<Common::String>::reserve\28unsigned\20int\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Common::Array<Plugin*>::insert_aux\28Plugin**\2c\20Plugin*\20const*\2c\20Plugin*\20const*\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Common::Array<PluginProvider*>::insert_aux\28PluginProvider**\2c\20PluginProvider*\20const*\2c\20PluginProvider*\20const*\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Common::Array<QualifiedGameDescriptor>::insert_aux\28QualifiedGameDescriptor*\2c\20QualifiedGameDescriptor\20const*\2c\20QualifiedGameDescriptor\20const*\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Common::Array<Common::AchievementDescription>::insert_aux\28Common::AchievementDescription*\2c\20Common::AchievementDescription\20const*\2c\20Common::AchievementDescription\20const*\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Common::Array<Common::StatDescription>::insert_aux\28Common::StatDescription*\2c\20Common::StatDescription\20const*\2c\20Common::StatDescription\20const*\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] generatePreferredTarget\28ADGameDescription\20const*\2c\20int\2c\20Common::String\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Common::Array<ExtraGuiOption>::insert_aux\28ExtraGuiOption*\2c\20ExtraGuiOption\20const*\2c\20ExtraGuiOption\20const*\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Common::Array<Plugin*>::Array\28Common::Array<Plugin*>\20const&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Common::Array<GUI::CheckboxWidget*>::insert_aux\28GUI::CheckboxWidget**\2c\20GUI::CheckboxWidget*\20const*\2c\20GUI::CheckboxWidget*\20const*\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Common::Array<Common::U32String>::insert_aux\28Common::U32String*\2c\20Common::U32String\20const*\2c\20Common::U32String\20const*\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] PauseToken::operator=\28PauseToken\20const&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] PauseToken::operator=\28PauseToken&&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] DetectionResults::DetectionResults\28Common::Array<DetectedGame>\20const&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] DetectionResults::listDetectedGames\28\29\20const can change the state due to error\28char\20const*\2c\20...\29
[asyncify] MetaEngine::initKeymaps\28char\20const*\29\20const can change the state due to error\28char\20const*\2c\20...\29
[asyncify] GUI::ThemeEval::getVar\28Common::String\20const&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Common::Array<GUI::Debugger::Var>::insert_aux\28GUI::Debugger::Var*\2c\20GUI::Debugger::Var\20const*\2c\20GUI::Debugger::Var\20const*\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Common::Array<GUI::Debugger::Var>::reserve\28unsigned\20int\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Common::Array<Graphics::MacFont*>::insert_aux\28Graphics::MacFont**\2c\20Graphics::MacFont*\20const*\2c\20Graphics::MacFont*\20const*\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Common::Array<GUI::GridItemInfo>::insert_aux\28GUI::GridItemInfo*\2c\20GUI::GridItemInfo\20const*\2c\20GUI::GridItemInfo\20const*\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Common::Array<GUI::LauncherEntry>::insert_aux\28GUI::LauncherEntry*\2c\20GUI::LauncherEntry\20const*\2c\20GUI::LauncherEntry\20const*\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Common::Array<Common::XMLParser::XMLKeyLayout*>::insert_aux\28Common::XMLParser::XMLKeyLayout**\2c\20Common::XMLParser::XMLKeyLayout*\20const*\2c\20Common::XMLParser::XMLKeyLayout*\20const*\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Common::Array<Graphics::MacMenuSubMenu*>::insert_aux\28Graphics::MacMenuSubMenu**\2c\20Graphics::MacMenuSubMenu*\20const*\2c\20Graphics::MacMenuSubMenu*\20const*\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Common::Array<Graphics::MacMenuItem*>::insert_aux\28Graphics::MacMenuItem**\2c\20Graphics::MacMenuItem*\20const*\2c\20Graphics::MacMenuItem*\20const*\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Common::Array<Graphics::MacFontRun>::insert_aux\28Graphics::MacFontRun*\2c\20Graphics::MacFontRun\20const*\2c\20Graphics::MacFontRun\20const*\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Common::Array<Graphics::MacTextLine>::insert_aux\28Graphics::MacTextLine*\2c\20Graphics::MacTextLine\20const*\2c\20Graphics::MacTextLine\20const*\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Common::Array<Graphics::MacTextLine>::reserve\28unsigned\20int\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Common::Array<Graphics::MacTextLine>::remove_at\28unsigned\20int\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Common::Array<Graphics::MacFontRun>::operator=\28Common::Array<Graphics::MacFontRun>\20const&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Common::Array<Graphics::MacWidget*>::insert_aux\28Graphics::MacWidget**\2c\20Graphics::MacWidget*\20const*\2c\20Graphics::MacWidget*\20const*\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Graphics::MacWindowBorder::MacWindowBorder\28\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Common::Array<unsigned\20char*>::insert_aux\28unsigned\20char**\2c\20unsigned\20char*\20const*\2c\20unsigned\20char*\20const*\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Common::Array<Graphics::MacGUIConstants::MacCursorType>::insert_aux\28Graphics::MacGUIConstants::MacCursorType*\2c\20Graphics::MacGUIConstants::MacCursorType\20const*\2c\20Graphics::MacGUIConstants::MacCursorType\20const*\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Common::Array<Common::Rect>::insert_aux\28Common::Rect*\2c\20Common::Rect\20const*\2c\20Common::Rect\20const*\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Common::Array<Graphics::ZoomBox*>::insert_aux\28Graphics::ZoomBox**\2c\20Graphics::ZoomBox*\20const*\2c\20Graphics::ZoomBox*\20const*\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Common::Array<Graphics::NinePatchMark*>::insert_aux\28Graphics::NinePatchMark**\2c\20Graphics::NinePatchMark*\20const*\2c\20Graphics::NinePatchMark*\20const*\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Graphics::NinePatchBitmap::blit\28Graphics::Surface&\2c\20int\2c\20int\2c\20int\2c\20int\2c\20unsigned\20char*\2c\20int\2c\20Graphics::MacWindowManager*\2c\20unsigned\20int\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Common::Array<unsigned\20short>::insert_aux\28unsigned\20short*\2c\20unsigned\20short\20const*\2c\20unsigned\20short\20const*\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Common::Array<Graphics::WinCursorGroup::CursorItem>::reserve\28unsigned\20int\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Common::Array<Graphics::WinCursorGroup::CursorItem>::insert_aux\28Graphics::WinCursorGroup::CursorItem*\2c\20Graphics::WinCursorGroup::CursorItem\20const*\2c\20Graphics::WinCursorGroup::CursorItem\20const*\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] TinyGL::GLContext::glopFog\28TinyGL::GLParam*\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] TinyGL::GLContext::gl_GetIntegerv\28int\2c\20int*\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] TinyGL::GLContext::gl_resizeImage\28Graphics::PixelBuffer&\2c\20int\2c\20int\2c\20Graphics::PixelBuffer\20const&\2c\20int\2c\20int\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] TinyGL::GLContext::gl_resizeImageNoInterpolate\28Graphics::PixelBuffer&\2c\20int\2c\20int\2c\20Graphics::PixelBuffer\20const&\2c\20int\2c\20int\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] TinyGL::GLContext::init\28int\2c\20int\2c\20Graphics::PixelFormat\2c\20int\2c\20bool\2c\20bool\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Common::Array<TinyGL::tglColorAssociation>::insert_aux\28TinyGL::tglColorAssociation*\2c\20TinyGL::tglColorAssociation\20const*\2c\20TinyGL::tglColorAssociation\20const*\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Graphics::PixelBuffer::copyBuffer\28int\2c\20int\2c\20int\2c\20Graphics::PixelBuffer\20const&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] TinyGL::GLContext::specbuf_get_buffer\28int\2c\20float\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] TinyGL::GLContext::glopTexEnv\28TinyGL::GLParam*\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] TinyGL::GLContext::glopTexParameter\28TinyGL::GLParam*\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] TinyGL::GLContext::glopPixelStore\28TinyGL::GLParam*\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] TinyGL::NearestTexelBuffer::getARGBAt\28unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\2c\20unsigned\20char&\29\20const can change the state due to error\28char\20const*\2c\20...\29
[asyncify] TinyGL::BilinearTexelBuffer::BilinearTexelBuffer\28Graphics::PixelBuffer\20const&\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] TinyGL::GLContext::glopVertex\28TinyGL::GLParam*\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] TinyGL::FrameBuffer::clear\28int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20bool\2c\20int\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] TinyGL::FrameBuffer::clearRegion\28int\2c\20int\2c\20int\2c\20int\2c\20bool\2c\20int\2c\20bool\2c\20int\2c\20int\2c\20int\2c\20bool\2c\20int\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] TinyGL::FrameBuffer::plot\28TinyGL::ZBufferPoint*\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::drawLine<false\2c\20true\2c\20true\2c\20true>\28TinyGL::ZBufferPoint\20const*\2c\20TinyGL::ZBufferPoint\20const*\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::drawLine<false\2c\20true\2c\20true\2c\20false>\28TinyGL::ZBufferPoint\20const*\2c\20TinyGL::ZBufferPoint\20const*\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::drawLine<false\2c\20true\2c\20false\2c\20true>\28TinyGL::ZBufferPoint\20const*\2c\20TinyGL::ZBufferPoint\20const*\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::drawLine<false\2c\20true\2c\20false\2c\20false>\28TinyGL::ZBufferPoint\20const*\2c\20TinyGL::ZBufferPoint\20const*\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::drawLine<true\2c\20true\2c\20true\2c\20true>\28TinyGL::ZBufferPoint\20const*\2c\20TinyGL::ZBufferPoint\20const*\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::drawLine<true\2c\20true\2c\20true\2c\20false>\28TinyGL::ZBufferPoint\20const*\2c\20TinyGL::ZBufferPoint\20const*\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::drawLine<true\2c\20true\2c\20false\2c\20true>\28TinyGL::ZBufferPoint\20const*\2c\20TinyGL::ZBufferPoint\20const*\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::drawLine<true\2c\20true\2c\20false\2c\20false>\28TinyGL::ZBufferPoint\20const*\2c\20TinyGL::ZBufferPoint\20const*\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::drawLine<false\2c\20false\2c\20true\2c\20true>\28TinyGL::ZBufferPoint\20const*\2c\20TinyGL::ZBufferPoint\20const*\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::drawLine<false\2c\20false\2c\20true\2c\20false>\28TinyGL::ZBufferPoint\20const*\2c\20TinyGL::ZBufferPoint\20const*\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::drawLine<false\2c\20false\2c\20false\2c\20true>\28TinyGL::ZBufferPoint\20const*\2c\20TinyGL::ZBufferPoint\20const*\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::drawLine<false\2c\20false\2c\20false\2c\20false>\28TinyGL::ZBufferPoint\20const*\2c\20TinyGL::ZBufferPoint\20const*\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Common::Array<ADDetectedGame>::insert_aux\28ADDetectedGame*\2c\20ADDetectedGame\20const*\2c\20ADDetectedGame\20const*\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Common::Array<Adl::Files_AppleDOS::TrackSector>::insert_aux\28Adl::Files_AppleDOS::TrackSector*\2c\20Adl::Files_AppleDOS::TrackSector\20const*\2c\20Adl::Files_AppleDOS::TrackSector\20const*\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Common::Array<Agi::WagProperty>::insert_aux\28Agi::WagProperty*\2c\20Agi::WagProperty\20const*\2c\20Agi::WagProperty\20const*\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Common::Array<DetectedGame>::insert_aux\28DetectedGame*\2c\20DetectedGame\20const*\2c\20DetectedGame\20const*\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Glk::AGT::AGTMetaEngine::detectClashes\28Common::HashMap<Common::String\2c\20Common::String\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Glk::AdvSys::Game::setVariable\28int\2c\20int\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Common::Array<PlainGameDescriptor>::insert_aux\28PlainGameDescriptor*\2c\20PlainGameDescriptor\20const*\2c\20PlainGameDescriptor\20const*\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Glk::Adrift::AdriftMetaEngine::detectClashes\28Common::HashMap<Common::String\2c\20Common::String\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Glk::AdvSys::AdvSysMetaEngine::detectClashes\28Common::HashMap<Common::String\2c\20Common::String\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Glk::Alan2::Alan2MetaEngine::detectClashes\28Common::HashMap<Common::String\2c\20Common::String\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Glk::Alan3::Alan3MetaEngine::detectClashes\28Common::HashMap<Common::String\2c\20Common::String\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Glk::Archetype::ArchetypeMetaEngine::detectClashes\28Common::HashMap<Common::String\2c\20Common::String\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Glk::Comprehend::ComprehendMetaEngine::detectClashes\28Common::HashMap<Common::String\2c\20Common::String\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Glk::Glulx::GlulxMetaEngine::detectClashes\28Common::HashMap<Common::String\2c\20Common::String\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Glk::Hugo::HugoMetaEngine::detectClashes\28Common::HashMap<Common::String\2c\20Common::String\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Glk::JACL::JACLMetaEngine::detectClashes\28Common::HashMap<Common::String\2c\20Common::String\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Glk::Level9::Scanner::scan\28unsigned\20char*\2c\20unsigned\20int\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Glk::Level9::Scanner::ScanV2\28unsigned\20char*\2c\20unsigned\20int\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Glk::Level9::Scanner::ScanV1\28unsigned\20char*\2c\20unsigned\20int\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Glk::Level9::Level9MetaEngine::detectClashes\28Common::HashMap<Common::String\2c\20Common::String\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Glk::Magnetic::MagneticMetaEngine::detectClashes\28Common::HashMap<Common::String\2c\20Common::String\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Glk::Quest::QuestMetaEngine::detectClashes\28Common::HashMap<Common::String\2c\20Common::String\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Glk::Scott::ScottMetaEngine::detectClashes\28Common::HashMap<Common::String\2c\20Common::String\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Glk::TADS::TADSMetaEngine::detectClashes\28Common::HashMap<Common::String\2c\20Common::String\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Glk::ZCode::ZCodeMetaEngine::detectClashes\28Common::HashMap<Common::String\2c\20Common::String\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Common::Array<Glk::ChunkEntry>::insert_aux\28Glk::ChunkEntry*\2c\20Glk::ChunkEntry\20const*\2c\20Glk::ChunkEntry\20const*\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Common::Array<Common::String>::insert_aux\28Common::String*\2c\20Common::String\20const*\2c\20Common::String\20const*\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Glk::AdvSys::Game::Game\28\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Glk::AdvSys::Game::hasVerb\28int\2c\20Common::Array<int>\20const&\29\20const can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Glk::AdvSys::Game::findAction\28Common::Array<int>\20const&\2c\20int\2c\20int\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Glk::AdvSys::Game::getObjectProperty\28int\2c\20int\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Glk::AdvSys::Game::findProperty\28int\2c\20int\29\20const can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Glk::AdvSys::Game::setObjectProperty\28int\2c\20int\2c\20int\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Glk::AdvSys::Game::getObjectLocation\28int\29\20const can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Glk::AdvSys::Game::getActionLocation\28int\29\20const can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Glk::AdvSys::Game::getVariable\28int\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Glk::AdvSys::Game::hasNoun\28int\2c\20int\29\20const can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Glk::AdvSys::Game::hasAdjective\28int\2c\20int\29\20const can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Common::Array<Glk::AdvSys::Game::CacheEntry*>::insert_aux\28Glk::AdvSys::Game::CacheEntry**\2c\20Glk::AdvSys::Game::CacheEntry*\20const*\2c\20Glk::AdvSys::Game::CacheEntry*\20const*\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Gob::DataIO::DataIO\28\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Common::Array<Gob::DataIO::Archive*>::insert_aux\28Gob::DataIO::Archive**\2c\20Gob::DataIO::Archive*\20const*\2c\20Gob::DataIO::Archive*\20const*\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Common::Array<Gob::ArchiveInfo>::reserve\28unsigned\20int\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Common::Array<unsigned\20int>::insert_aux\28unsigned\20int*\2c\20unsigned\20int\20const*\2c\20unsigned\20int\20const*\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Common::Array<OSystem::GraphicsMode>::insert_aux\28OSystem::GraphicsMode*\2c\20OSystem::GraphicsMode\20const*\2c\20OSystem::GraphicsMode\20const*\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Common::Array<int>::insert_aux\28int*\2c\20int\20const*\2c\20int\20const*\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] OSystem_SDL::initSDL\28\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] OSystem_SDL::getSupportedAntiAliasingLevels\28\29\20const can change the state due to error\28char\20const*\2c\20...\29
[asyncify] virtual\20thunk\20to\20OSystem_SDL::getSupportedAntiAliasingLevels\28\29\20const can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Common::Array<Common::Keymap*>::insert_aux\28Common::Keymap**\2c\20Common::Keymap*\20const*\2c\20Common::Keymap*\20const*\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] GUI::SaveLoadChooser::runModalWithCurrentTarget\28\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Common::Array<GUI::SaveLoadChooserGrid::SlotButton>::insert_aux\28GUI::SaveLoadChooserGrid::SlotButton*\2c\20GUI::SaveLoadChooserGrid::SlotButton\20const*\2c\20GUI::SaveLoadChooserGrid::SlotButton\20const*\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Common::Array<Common::Language>::insert_aux\28Common::Language*\2c\20Common::Language\20const*\2c\20Common::Language\20const*\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] GUI::LangExtraFont::LangExtraFont\28GUI::TextData\2c\20Common::Array<Common::Language>&\2c\20Common::String\20const&\2c\20Common::String\20const&\2c\20int\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Common::Array<GUI::LangExtraFont>::push_back\28GUI::LangExtraFont\20const&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Common::Array<GUI::LangExtraFont>::insert_aux\28GUI::LangExtraFont*\2c\20GUI::LangExtraFont\20const*\2c\20GUI::LangExtraFont\20const*\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] GUI::LangExtraFont*\20Common::uninitialized_copy<GUI::LangExtraFont*\2c\20GUI::LangExtraFont>\28GUI::LangExtraFont*\2c\20GUI::LangExtraFont*\2c\20GUI::LangExtraFont*\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] GUI::LangExtraFont*\20Common::uninitialized_copy<GUI::LangExtraFont\20const*\2c\20GUI::LangExtraFont>\28GUI::LangExtraFont\20const*\2c\20GUI::LangExtraFont\20const*\2c\20GUI::LangExtraFont*\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] GUI::LangExtraFont*\20Common::copy_backward<GUI::LangExtraFont*\2c\20GUI::LangExtraFont*>\28GUI::LangExtraFont*\2c\20GUI::LangExtraFont*\2c\20GUI::LangExtraFont*\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] GUI::LangExtraFont*\20Common::copy<GUI::LangExtraFont\20const*\2c\20GUI::LangExtraFont*>\28GUI::LangExtraFont\20const*\2c\20GUI::LangExtraFont\20const*\2c\20GUI::LangExtraFont*\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Common::Array<GUI::ThemeLayout*>::insert_aux\28GUI::ThemeLayout**\2c\20GUI::ThemeLayout*\20const*\2c\20GUI::ThemeLayout*\20const*\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] GUI::ThemeLayoutTabWidget::makeClone\28GUI::ThemeLayout*\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] GUI::ThemeLayoutSpacing::makeClone\28GUI::ThemeLayout*\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] GUI::ThemeLayoutWidget::makeClone\28GUI::ThemeLayout*\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Common::Array<GUI::StaticTextWidget*>::insert_aux\28GUI::StaticTextWidget**\2c\20GUI::StaticTextWidget*\20const*\2c\20GUI::StaticTextWidget*\20const*\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Common::Array<GUI::DropdownButtonWidget::Entry>::insert_aux\28GUI::DropdownButtonWidget::Entry*\2c\20GUI::DropdownButtonWidget::Entry\20const*\2c\20GUI::DropdownButtonWidget::Entry\20const*\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Common::Array<GUI::RadiobuttonWidget*>::insert_aux\28GUI::RadiobuttonWidget**\2c\20GUI::RadiobuttonWidget*\20const*\2c\20GUI::RadiobuttonWidget*\20const*\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Common::Array<GUI::GridItemInfo*>::insert_aux\28GUI::GridItemInfo**\2c\20GUI::GridItemInfo*\20const*\2c\20GUI::GridItemInfo*\20const*\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] WindowedGraphicsManager::convertWindowToVirtual\28int\2c\20int\29\20const can change the state due to error\28char\20const*\2c\20...\29
[asyncify] WindowedGraphicsManager::convertVirtualToWindow\28int\2c\20int\29\20const can change the state due to error\28char\20const*\2c\20...\29
[asyncify] OpenGL::Shader::Shader\28OpenGL::Shader\20const&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Common::Array<OpenGL::LibRetroPipeline::Texture>::insert_aux\28OpenGL::LibRetroPipeline::Texture*\2c\20OpenGL::LibRetroPipeline::Texture\20const*\2c\20OpenGL::LibRetroPipeline::Texture\20const*\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] OpenGL::LibRetroPipeline::Pass::Pass\28OpenGL::LibRetroPipeline::Pass\20const&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Common::Array<OpenGL::LibRetroPipeline::Pass>::insert_aux\28OpenGL::LibRetroPipeline::Pass*\2c\20OpenGL::LibRetroPipeline::Pass\20const*\2c\20OpenGL::LibRetroPipeline::Pass\20const*\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Common::Array<OpenGL::LibRetroPipeline::Pass::TexCoordAttribute>::insert_aux\28OpenGL::LibRetroPipeline::Pass::TexCoordAttribute*\2c\20OpenGL::LibRetroPipeline::Pass::TexCoordAttribute\20const*\2c\20OpenGL::LibRetroPipeline::Pass::TexCoordAttribute\20const*\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Common::Array<OpenGL::LibRetroPipeline::Pass::TextureSampler>::insert_aux\28OpenGL::LibRetroPipeline::Pass::TextureSampler*\2c\20OpenGL::LibRetroPipeline::Pass::TextureSampler\20const*\2c\20OpenGL::LibRetroPipeline::Pass::TextureSampler\20const*\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] OpenGL::LibRetroPipeline::Pass*\20Common::copy_backward<OpenGL::LibRetroPipeline::Pass*\2c\20OpenGL::LibRetroPipeline::Pass*>\28OpenGL::LibRetroPipeline::Pass*\2c\20OpenGL::LibRetroPipeline::Pass*\2c\20OpenGL::LibRetroPipeline::Pass*\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] OpenGL::LibRetroPipeline::Pass*\20Common::copy<OpenGL::LibRetroPipeline::Pass\20const*\2c\20OpenGL::LibRetroPipeline::Pass*>\28OpenGL::LibRetroPipeline::Pass\20const*\2c\20OpenGL::LibRetroPipeline::Pass\20const*\2c\20OpenGL::LibRetroPipeline::Pass*\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Common::Array<OpenGL::LibRetroPipeline::Pass::TexCoordAttribute>::operator=\28Common::Array<OpenGL::LibRetroPipeline::Pass::TexCoordAttribute>\20const&\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Common::Array<OpenGL::LibRetro::ShaderTexture>::insert_aux\28OpenGL::LibRetro::ShaderTexture*\2c\20OpenGL::LibRetro::ShaderTexture\20const*\2c\20OpenGL::LibRetro::ShaderTexture\20const*\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Common::Array<OpenGL::LibRetro::ShaderPass>::insert_aux\28OpenGL::LibRetro::ShaderPass*\2c\20OpenGL::LibRetro::ShaderPass\20const*\2c\20OpenGL::LibRetro::ShaderPass\20const*\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] SurfaceSdlGraphicsManager::detectSupportedFormats\28\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] SurfaceSdlGraphicsManager::grabOverlay\28Graphics::Surface&\29\20const can change the state due to error\28char\20const*\2c\20...\29
[asyncify] SdlTimerManager::SdlTimerManager\28\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] OpenGL::createBestSurfaceRenderer\28\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Common::Array<OpenGL::TiledSurface::Tile>::insert_aux\28OpenGL::TiledSurface::Tile*\2c\20OpenGL::TiledSurface::Tile\20const*\2c\20OpenGL::TiledSurface::Tile\20const*\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Common::Array<OpenGLSdlGraphicsManager::VideoMode>::insert_aux\28OpenGLSdlGraphicsManager::VideoMode*\2c\20OpenGLSdlGraphicsManager::VideoMode\20const*\2c\20OpenGLSdlGraphicsManager::VideoMode\20const*\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Common::Array<OpenGLSdlGraphics3dManager::OpenGLPixelFormat>::insert_aux\28OpenGLSdlGraphics3dManager::OpenGLPixelFormat*\2c\20OpenGLSdlGraphics3dManager::OpenGLPixelFormat\20const*\2c\20OpenGLSdlGraphics3dManager::OpenGLPixelFormat\20const*\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Common::Array<AbstractFSNode*>::insert_aux\28AbstractFSNode**\2c\20AbstractFSNode*\20const*\2c\20AbstractFSNode*\20const*\29 can change the state due to error\28char\20const*\2c\20...\29
[asyncify] Common::TextToSpeechManager::clearState\28\29 can change the state due to Common::TTSVoice::~TTSVoice\28\29
[asyncify] Common::TranslationManager::TranslationManager\28Common::String\20const&\29 can change the state due to Common::TranslationManager::loadTranslationsInfoDat\28Common::String\20const&\29
[asyncify] Common::ClickteamInstaller::ClickteamInstaller\28Common::HashMap<Common::String\2c\20Common::ClickteamInstaller::ClickteamFileDescriptor\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>\2c\20Common::HashMap<unsigned\20short\2c\20Common::SharedPtr<Common::ClickteamInstaller::ClickteamTag>\2c\20Common::Hash<unsigned\20short>\2c\20Common::EqualTo<unsigned\20short>>\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int\2c\20Common::SeekableReadStream*\2c\20DisposeAfterUse::Flag\29 can change the state due to Common::HashMap<unsigned\20short\2c\20Common::SharedPtr<Common::ClickteamInstaller::ClickteamTag>\2c\20Common::Hash<unsigned\20short>\2c\20Common::EqualTo<unsigned\20short>>::assign\28Common::HashMap<unsigned\20short\2c\20Common::SharedPtr<Common::ClickteamInstaller::ClickteamTag>\2c\20Common::Hash<unsigned\20short>\2c\20Common::EqualTo<unsigned\20short>>\20const&\29
[asyncify] legalstub$Common::GzioReadStream::parentSeek\28long\20long\29 can change the state due to Common::GzioReadStream::parentSeek\28long\20long\29
[asyncify] Common::GzioReadStream::read\28void*\2c\20unsigned\20int\29 can change the state due to Common::GzioReadStream::readAtOffset\28long\20long\2c\20unsigned\20char*\2c\20unsigned\20int\29
[asyncify] virtual\20thunk\20to\20Common::GzioReadStream::read\28void*\2c\20unsigned\20int\29 can change the state due to Common::GzioReadStream::readAtOffset\28long\20long\2c\20unsigned\20char*\2c\20unsigned\20int\29
[asyncify] legalstub$Common::GzioReadStream::readAtOffset\28long\20long\2c\20unsigned\20char*\2c\20unsigned\20int\29 can change the state due to Common::GzioReadStream::readAtOffset\28long\20long\2c\20unsigned\20char*\2c\20unsigned\20int\29
[asyncify] legalstub$Common::GzioReadStream::openDeflate\28Common::SeekableReadStream*\2c\20unsigned\20long\20long\2c\20DisposeAfterUse::Flag\29 can change the state due to Common::GzioReadStream::openDeflate\28Common::SeekableReadStream*\2c\20unsigned\20long\20long\2c\20DisposeAfterUse::Flag\29
[asyncify] legalstub$Common::GzioReadStream::openClickteam\28Common::SeekableReadStream*\2c\20unsigned\20long\20long\2c\20DisposeAfterUse::Flag\29 can change the state due to Common::GzioReadStream::openClickteam\28Common::SeekableReadStream*\2c\20unsigned\20long\20long\2c\20DisposeAfterUse::Flag\29
[asyncify] legalstub$Common::GzioReadStream::openZlib\28Common::SeekableReadStream*\2c\20unsigned\20long\20long\2c\20DisposeAfterUse::Flag\29 can change the state due to Common::GzioReadStream::openZlib\28Common::SeekableReadStream*\2c\20unsigned\20long\20long\2c\20DisposeAfterUse::Flag\29
[asyncify] legalstub$Common::GzioReadStream::clickteamDecompress\28unsigned\20char*\2c\20unsigned\20int\2c\20unsigned\20char*\2c\20unsigned\20int\2c\20long\20long\29 can change the state due to Common::GzioReadStream::clickteamDecompress\28unsigned\20char*\2c\20unsigned\20int\2c\20unsigned\20char*\2c\20unsigned\20int\2c\20long\20long\29
[asyncify] legalstub$Common::GzioReadStream::deflateDecompress\28unsigned\20char*\2c\20unsigned\20int\2c\20unsigned\20char*\2c\20unsigned\20int\2c\20long\20long\29 can change the state due to Common::GzioReadStream::deflateDecompress\28unsigned\20char*\2c\20unsigned\20int\2c\20unsigned\20char*\2c\20unsigned\20int\2c\20long\20long\29
[asyncify] Video::DXADecoder::DXAVideoTrack::decodeZlib\28unsigned\20char*\2c\20int\2c\20int\29 can change the state due to Common::GzioReadStream::zlibDecompress\28unsigned\20char*\2c\20unsigned\20int\2c\20unsigned\20char*\2c\20unsigned\20int\2c\20long\20long\29
[asyncify] legalstub$Common::GzioReadStream::zlibDecompress\28unsigned\20char*\2c\20unsigned\20int\2c\20unsigned\20char*\2c\20unsigned\20int\2c\20long\20long\29 can change the state due to Common::GzioReadStream::zlibDecompress\28unsigned\20char*\2c\20unsigned\20int\2c\20unsigned\20char*\2c\20unsigned\20int\2c\20long\20long\29
[asyncify] Common::InstallShieldV3::~InstallShieldV3\28\29.1 can change the state due to Common::InstallShieldV3::~InstallShieldV3\28\29
[asyncify] legalstub$Common::PowerPackerStream::pos\28\29\20const can change the state due to Common::PowerPackerStream::pos\28\29\20const
[asyncify] legalstub$Common::PowerPackerStream::size\28\29\20const can change the state due to Common::PowerPackerStream::size\28\29\20const
[asyncify] legalstub$Common::PowerPackerStream::seek\28long\20long\2c\20int\29 can change the state due to Common::PowerPackerStream::seek\28long\20long\2c\20int\29
[asyncify] Common::StuffItArchive::~StuffItArchive\28\29.1 can change the state due to Common::StuffItArchive::~StuffItArchive\28\29
[asyncify] Common::StuffItArchive::readTree14\28Common::BitStreamImpl<Common::SeekableReadStream\2c\20unsigned\20long\20long\2c\208\2c\20false\2c\20false>*\2c\20Common::SIT14Data*\2c\20unsigned\20short\2c\20unsigned\20short*\29\20const can change the state due to Common::BitStreamImpl<Common::SeekableReadStream\2c\20unsigned\20long\20long\2c\208\2c\20false\2c\20false>::getBits\28unsigned\20long\29
[asyncify] Common::makeArjArchive\28Common::Array<Common::String>\20const&\29 can change the state due to Common::ArjArchive::ArjArchive\28Common::Array<Common::String>\20const&\29
[asyncify] Common::makeZipArchive\28Common::SeekableReadStream*\29 can change the state due to unzOpen\28Common::SeekableReadStream*\29
[asyncify] unzGoToFirstFile\28void*\29 can change the state due to unzlocal_GetCurrentFileInfoInternal\28void*\2c\20unz_file_info*\2c\20unz_file_info_internal*\2c\20char*\2c\20unsigned\20long\2c\20void*\2c\20unsigned\20long\2c\20char*\2c\20unsigned\20long\29
[asyncify] unzGetCurrentFileInfo\28void*\2c\20unz_file_info*\2c\20char*\2c\20unsigned\20long\2c\20void*\2c\20unsigned\20long\2c\20char*\2c\20unsigned\20long\29 can change the state due to unzlocal_GetCurrentFileInfoInternal\28void*\2c\20unz_file_info*\2c\20unz_file_info_internal*\2c\20char*\2c\20unsigned\20long\2c\20void*\2c\20unsigned\20long\2c\20char*\2c\20unsigned\20long\29
[asyncify] unzGoToNextFile\28void*\29 can change the state due to unzlocal_GetCurrentFileInfoInternal\28void*\2c\20unz_file_info*\2c\20unz_file_info_internal*\2c\20char*\2c\20unsigned\20long\2c\20void*\2c\20unsigned\20long\2c\20char*\2c\20unsigned\20long\29
[asyncify] Common::ZipArchive::readContentsForPath\28Common::String\20const&\29\20const can change the state due to unzOpenCurrentFile\28void*\2c\20Common::CRC32\20const&\29
[asyncify] legalstub$Common::GZipReadStream::seek\28long\20long\2c\20int\29 can change the state due to Common::GZipReadStream::seek\28long\20long\2c\20int\29
[asyncify] Common::GZipWriteStream::~GZipWriteStream\28\29.1 can change the state due to Common::GZipWriteStream::~GZipWriteStream\28\29
[asyncify] Common::IFFParser::IFFParser\28Common::ReadStream*\2c\20bool\29 can change the state due to Common::IFFParser::setInputStream\28Common::ReadStream*\29
[asyncify] Common::INIFile::loadFromFileOrDataFork\28Common::String\20const&\29 can change the state due to Common::INIFile::loadFromStream\28Common::SeekableReadStream&\29
[asyncify] Common::AchievementsManager::setSpecialString\28Common::String\20const&\2c\20Common::String\20const&\29 can change the state due to Common::INIFile::saveToSaveFile\28Common::String\20const&\29
[asyncify] Common::AchievementsManager::clearAchievement\28Common::String\20const&\29 can change the state due to Common::INIFile::saveToSaveFile\28Common::String\20const&\29
[asyncify] Common::AchievementsManager::setStatFloatEx\28Common::String\20const&\2c\20float\2c\20Common::String\20const&\29\20const can change the state due to Common::INIFile::saveToSaveFile\28Common::String\20const&\29
[asyncify] Common::AchievementsManager::setStatFloat\28Common::String\20const&\2c\20float\29 can change the state due to Common::INIFile::saveToSaveFile\28Common::String\20const&\29
[asyncify] Common::AchievementsManager::updateAverageRateStatFloat\28Common::String\20const&\2c\20float\2c\20float\29 can change the state due to Common::INIFile::saveToSaveFile\28Common::String\20const&\29
[asyncify] Common::AchievementsManager::setStatInt\28Common::String\20const&\2c\20int\29 can change the state due to Common::INIFile::saveToSaveFile\28Common::String\20const&\29
[asyncify] Common::AchievementsManager::resetAllAchievements\28\29 can change the state due to Common::INIFile::saveToSaveFile\28Common::String\20const&\29
[asyncify] Common::AchievementsManager::resetAllStats\28\29 can change the state due to Common::INIFile::saveToSaveFile\28Common::String\20const&\29
[asyncify] Audio::QuickTimeAudioDecoder::loadAudioFile\28Common::String\20const&\29 can change the state due to Common::QuickTimeParser::parseFile\28Common::Path\20const&\29
[asyncify] Common::QuickTimeParser::readMOOV\28Common::QuickTimeParser::Atom\29 can change the state due to Common::QuickTimeParser::readDefault\28Common::QuickTimeParser::Atom\29
[asyncify] Common::QuickTimeParser::readTRAK\28Common::QuickTimeParser::Atom\29 can change the state due to Common::QuickTimeParser::readDefault\28Common::QuickTimeParser::Atom\29
[asyncify] Audio::QuickTimeAudioDecoder::loadAudioStream\28Common::SeekableReadStream*\2c\20DisposeAfterUse::Flag\29 can change the state due to Common::QuickTimeParser::parseStream\28Common::SeekableReadStream*\2c\20DisposeAfterUse::Flag\29
[asyncify] Common::QuickTimeParser::SampleDesc::~SampleDesc\28\29.1 can change the state due to Common::QuickTimeParser::SampleDesc::~SampleDesc\28\29
[asyncify] MidiParser_QT::MIDISampleDesc::~MIDISampleDesc\28\29 can change the state due to Common::QuickTimeParser::SampleDesc::~SampleDesc\28\29
[asyncify] Common::QuickTimeParser::init\28\29 can change the state due to Common::QuickTimeParser::Track::~Track\28\29
[asyncify] Common::NEResources::~NEResources\28\29.1 can change the state due to Common::NEResources::~NEResources\28\29
[asyncify] Common::PEResources::~PEResources\28\29 can change the state due to Common::PEResources::clear\28\29
[asyncify] GUI::MetadataParser::~MetadataParser\28\29 can change the state due to Common::XMLParser::~XMLParser\28\29
[asyncify] GUI::ThemeParser::~ThemeParser\28\29 can change the state due to Common::XMLParser::~XMLParser\28\29
[asyncify] GUI::ThemeEngine::loadDefaultXML\28\29 can change the state due to Common::XMLParser::close\28\29
[asyncify] Common::XMLParser::parseXMLHeader\28Common::XMLParser::ParserNode*\29 can change the state due to Common::XMLParser::parserError\28Common::String\20const&\29
[asyncify] GUI::ThemeParser::parserCallback_defaults\28Common::XMLParser::ParserNode*\29 can change the state due to Common::XMLParser::parserError\28Common::String\20const&\29
[asyncify] GUI::ThemeParser::parserCallback_text_color\28Common::XMLParser::ParserNode*\29 can change the state due to Common::XMLParser::parserError\28Common::String\20const&\29
[asyncify] GUI::ThemeParser::parserCallback_cursor\28Common::XMLParser::ParserNode*\29 can change the state due to Common::XMLParser::parserError\28Common::String\20const&\29
[asyncify] GUI::ThemeParser::parserCallback_text\28Common::XMLParser::ParserNode*\29 can change the state due to Common::XMLParser::parserError\28Common::String\20const&\29
[asyncify] GUI::ThemeParser::parserCallback_color\28Common::XMLParser::ParserNode*\29 can change the state due to Common::XMLParser::parserError\28Common::String\20const&\29
[asyncify] GUI::ThemeParser::parserCallback_drawstep\28Common::XMLParser::ParserNode*\29 can change the state due to Common::XMLParser::parserError\28Common::String\20const&\29
[asyncify] GUI::ThemeParser::parserCallback_drawdata\28Common::XMLParser::ParserNode*\29 can change the state due to Common::XMLParser::parserError\28Common::String\20const&\29
[asyncify] GUI::ThemeParser::parseCommonLayoutProps\28Common::XMLParser::ParserNode*\2c\20Common::String\20const&\29 can change the state due to Common::XMLParser::parserError\28Common::String\20const&\29
[asyncify] GUI::ThemeParser::parserCallback_import\28Common::XMLParser::ParserNode*\29 can change the state due to Common::XMLParser::parserError\28Common::String\20const&\29
[asyncify] GUI::ThemeParser::parserCallback_layout\28Common::XMLParser::ParserNode*\29 can change the state due to Common::XMLParser::parserError\28Common::String\20const&\29
[asyncify] luaB_dofile\28lua_State*\29 can change the state due to luaL_loadfile\28lua_State*\2c\20char\20const*\29
[asyncify] luaB_loadfile\28lua_State*\29 can change the state due to luaL_loadfile\28lua_State*\2c\20char\20const*\29
[asyncify] luaG_errormsg\28lua_State*\29 can change the state due to luaD_throw\28lua_State*\2c\20int\29
[asyncify] growCI\28lua_State*\29 can change the state due to luaD_throw\28lua_State*\2c\20int\29
[asyncify] luaD_call\28lua_State*\2c\20lua_TValue*\2c\20int\29 can change the state due to luaD_throw\28lua_State*\2c\20int\29
[asyncify] luaX_lexerror\28LexState*\2c\20char\20const*\2c\20int\29 can change the state due to luaD_throw\28lua_State*\2c\20int\29
[asyncify] save\28LexState*\2c\20int\29 can change the state due to luaD_throw\28lua_State*\2c\20int\29
[asyncify] llex\28LexState*\2c\20SemInfo*\29 can change the state due to luaD_throw\28lua_State*\2c\20int\29
[asyncify] read_long_string\28LexState*\2c\20SemInfo*\2c\20int\29 can change the state due to luaD_throw\28lua_State*\2c\20int\29
[asyncify] read_numeral\28LexState*\2c\20SemInfo*\29 can change the state due to luaD_throw\28lua_State*\2c\20int\29
[asyncify] luaV_execute\28lua_State*\2c\20int\29 can change the state due to luaD_callhook\28lua_State*\2c\20int\2c\20int\29
[asyncify] luaD_poscall\28lua_State*\2c\20lua_TValue*\29 can change the state due to luaD_callhook\28lua_State*\2c\20int\2c\20int\29
[asyncify] resume\28lua_State*\2c\20void*\29 can change the state due to luaD_precall\28lua_State*\2c\20lua_TValue*\2c\20int\29
[asyncify] luaK_code\28FuncState*\2c\20unsigned\20int\2c\20int\29 can change the state due to luaM_growaux_\28lua_State*\2c\20void*\2c\20int*\2c\20unsigned\20long\2c\20int\2c\20char\20const*\29
[asyncify] addk\28FuncState*\2c\20lua_TValue*\2c\20lua_TValue*\29 can change the state due to luaM_growaux_\28lua_State*\2c\20void*\2c\20int*\2c\20unsigned\20long\2c\20int\2c\20char\20const*\29
[asyncify] new_localvar\28LexState*\2c\20TString*\2c\20int\29 can change the state due to luaM_growaux_\28lua_State*\2c\20void*\2c\20int*\2c\20unsigned\20long\2c\20int\2c\20char\20const*\29
[asyncify] pushclosure\28LexState*\2c\20FuncState*\2c\20expdesc*\29 can change the state due to luaM_growaux_\28lua_State*\2c\20void*\2c\20int*\2c\20unsigned\20long\2c\20int\2c\20char\20const*\29
[asyncify] singlevaraux\28FuncState*\2c\20TString*\2c\20expdesc*\2c\20int\29 can change the state due to luaM_growaux_\28lua_State*\2c\20void*\2c\20int*\2c\20unsigned\20long\2c\20int\2c\20char\20const*\29
[asyncify] resize\28lua_State*\2c\20Table*\2c\20int\2c\20int\29 can change the state due to luaM_realloc_\28lua_State*\2c\20void*\2c\20unsigned\20long\2c\20unsigned\20long\29
[asyncify] setnodevector\28lua_State*\2c\20Table*\2c\20int\29 can change the state due to luaM_realloc_\28lua_State*\2c\20void*\2c\20unsigned\20long\2c\20unsigned\20long\29
[asyncify] luaH_new\28lua_State*\2c\20int\2c\20int\29 can change the state due to luaM_realloc_\28lua_State*\2c\20void*\2c\20unsigned\20long\2c\20unsigned\20long\29
[asyncify] luaH_free\28lua_State*\2c\20Table*\29 can change the state due to luaM_realloc_\28lua_State*\2c\20void*\2c\20unsigned\20long\2c\20unsigned\20long\29
[asyncify] luaZ_openspace\28lua_State*\2c\20Mbuffer*\2c\20unsigned\20long\29 can change the state due to luaM_realloc_\28lua_State*\2c\20void*\2c\20unsigned\20long\2c\20unsigned\20long\29
[asyncify] luaD_reallocstack\28lua_State*\2c\20int\29 can change the state due to luaM_realloc_\28lua_State*\2c\20void*\2c\20unsigned\20long\2c\20unsigned\20long\29
[asyncify] luaD_reallocCI\28lua_State*\2c\20int\29 can change the state due to luaM_realloc_\28lua_State*\2c\20void*\2c\20unsigned\20long\2c\20unsigned\20long\29
[asyncify] luaD_pcall\28lua_State*\2c\20void\20\28*\29\28lua_State*\2c\20void*\29\2c\20void*\2c\20long\2c\20long\29 can change the state due to luaM_realloc_\28lua_State*\2c\20void*\2c\20unsigned\20long\2c\20unsigned\20long\29
[asyncify] luaD_protectedparser\28lua_State*\2c\20Zio*\2c\20char\20const*\29 can change the state due to luaM_realloc_\28lua_State*\2c\20void*\2c\20unsigned\20long\2c\20unsigned\20long\29
[asyncify] luaF_newCclosure\28lua_State*\2c\20int\2c\20Table*\29 can change the state due to luaM_realloc_\28lua_State*\2c\20void*\2c\20unsigned\20long\2c\20unsigned\20long\29
[asyncify] luaF_newLclosure\28lua_State*\2c\20int\2c\20Table*\29 can change the state due to luaM_realloc_\28lua_State*\2c\20void*\2c\20unsigned\20long\2c\20unsigned\20long\29
[asyncify] luaF_newupval\28lua_State*\29 can change the state due to luaM_realloc_\28lua_State*\2c\20void*\2c\20unsigned\20long\2c\20unsigned\20long\29
[asyncify] luaF_findupval\28lua_State*\2c\20lua_TValue*\29 can change the state due to luaM_realloc_\28lua_State*\2c\20void*\2c\20unsigned\20long\2c\20unsigned\20long\29
[asyncify] luaF_freeupval\28lua_State*\2c\20UpVal*\29 can change the state due to luaM_realloc_\28lua_State*\2c\20void*\2c\20unsigned\20long\2c\20unsigned\20long\29
[asyncify] luaF_close\28lua_State*\2c\20lua_TValue*\29 can change the state due to luaM_realloc_\28lua_State*\2c\20void*\2c\20unsigned\20long\2c\20unsigned\20long\29
[asyncify] luaF_newproto\28lua_State*\29 can change the state due to luaM_realloc_\28lua_State*\2c\20void*\2c\20unsigned\20long\2c\20unsigned\20long\29
[asyncify] luaF_freeproto\28lua_State*\2c\20Proto*\29 can change the state due to luaM_realloc_\28lua_State*\2c\20void*\2c\20unsigned\20long\2c\20unsigned\20long\29
[asyncify] luaF_freeclosure\28lua_State*\2c\20Closure*\29 can change the state due to luaM_realloc_\28lua_State*\2c\20void*\2c\20unsigned\20long\2c\20unsigned\20long\29
[asyncify] sweeplist\28lua_State*\2c\20GCObject**\2c\20unsigned\20long\29 can change the state due to luaM_realloc_\28lua_State*\2c\20void*\2c\20unsigned\20long\2c\20unsigned\20long\29
[asyncify] singlestep\28lua_State*\29 can change the state due to luaM_realloc_\28lua_State*\2c\20void*\2c\20unsigned\20long\2c\20unsigned\20long\29
[asyncify] luaX_setinput\28lua_State*\2c\20LexState*\2c\20Zio*\2c\20TString*\29 can change the state due to luaM_realloc_\28lua_State*\2c\20void*\2c\20unsigned\20long\2c\20unsigned\20long\29
[asyncify] close_func\28LexState*\29 can change the state due to luaM_realloc_\28lua_State*\2c\20void*\2c\20unsigned\20long\2c\20unsigned\20long\29
[asyncify] luaE_newthread\28lua_State*\29 can change the state due to luaM_realloc_\28lua_State*\2c\20void*\2c\20unsigned\20long\2c\20unsigned\20long\29
[asyncify] luaE_freethread\28lua_State*\2c\20lua_State*\29 can change the state due to luaM_realloc_\28lua_State*\2c\20void*\2c\20unsigned\20long\2c\20unsigned\20long\29
[asyncify] f_luaopen\28lua_State*\2c\20void*\29 can change the state due to luaM_realloc_\28lua_State*\2c\20void*\2c\20unsigned\20long\2c\20unsigned\20long\29
[asyncify] luaS_newudata\28lua_State*\2c\20unsigned\20long\2c\20Table*\29 can change the state due to luaM_realloc_\28lua_State*\2c\20void*\2c\20unsigned\20long\2c\20unsigned\20long\29
[asyncify] luaS_newlstr\28lua_State*\2c\20char\20const*\2c\20unsigned\20long\29 can change the state due to luaM_realloc_\28lua_State*\2c\20void*\2c\20unsigned\20long\2c\20unsigned\20long\29
[asyncify] luaS_resize\28lua_State*\2c\20int\29 can change the state due to luaM_realloc_\28lua_State*\2c\20void*\2c\20unsigned\20long\2c\20unsigned\20long\29
[asyncify] luaL_newstate\28\29 can change the state due to lua_newstate\28void*\20\28*\29\28void*\2c\20void*\2c\20unsigned\20long\2c\20unsigned\20long\29\2c\20void*\29
[asyncify] lua_close\28lua_State*\29 can change the state due to close_state\28lua_State*\29
[asyncify] Lua::persistLua\28lua_State*\2c\20Common::WriteStream*\29 can change the state due to Lua::persist\28Lua::SerializationInfo*\29
[asyncify] Lua::persistTable\28Lua::SerializationInfo*\29 can change the state due to Lua::persist\28Lua::SerializationInfo*\29
[asyncify] Lua::persistUpValue\28Lua::SerializationInfo*\29 can change the state due to Lua::persist\28Lua::SerializationInfo*\29
[asyncify] Lua::unpersistLua\28lua_State*\2c\20Common::ReadStream*\29 can change the state due to Lua::unpersist\28Lua::UnSerializationInfo*\29
[asyncify] inclinenumber\28LexState*\29 can change the state due to luaZ_fill\28Zio*\29
[asyncify] skip_sep\28LexState*\29 can change the state due to luaZ_fill\28Zio*\29
[asyncify] MT32Emu::AnalogImpl<int>::process\28short*\2c\20short\20const*\2c\20short\20const*\2c\20short\20const*\2c\20short\20const*\2c\20short\20const*\2c\20short\20const*\2c\20unsigned\20int\29 can change the state due to void\20MT32Emu::AnalogImpl<int>::produceOutput<short>\28short*\2c\20short\20const*\2c\20short\20const*\2c\20short\20const*\2c\20short\20const*\2c\20short\20const*\2c\20short\20const*\2c\20unsigned\20int\29
[asyncify] MT32Emu::AnalogImpl<float>::process\28float*\2c\20float\20const*\2c\20float\20const*\2c\20float\20const*\2c\20float\20const*\2c\20float\20const*\2c\20float\20const*\2c\20unsigned\20int\29 can change the state due to void\20MT32Emu::AnalogImpl<float>::produceOutput<float>\28float*\2c\20float\20const*\2c\20float\20const*\2c\20float\20const*\2c\20float\20const*\2c\20float\20const*\2c\20float\20const*\2c\20unsigned\20int\29
[asyncify] MT32Emu::BReverbModelImpl<short>::process\28short\20const*\2c\20short\20const*\2c\20short*\2c\20short*\2c\20unsigned\20int\29 can change the state due to void\20MT32Emu::BReverbModelImpl<short>::produceOutput<int>\28short\20const*\2c\20short\20const*\2c\20short*\2c\20short*\2c\20unsigned\20int\29
[asyncify] MT32Emu::BReverbModelImpl<float>::process\28float\20const*\2c\20float\20const*\2c\20float*\2c\20float*\2c\20unsigned\20int\29 can change the state due to void\20MT32Emu::BReverbModelImpl<float>::produceOutput<float>\28float\20const*\2c\20float\20const*\2c\20float*\2c\20float*\2c\20unsigned\20int\29
[asyncify] MT32Emu::BReverbModelImpl<short>::~BReverbModelImpl\28\29 can change the state due to MT32Emu::BReverbModelImpl<short>::close\28\29
[asyncify] MT32Emu::BReverbModelImpl<short>::~BReverbModelImpl\28\29.1 can change the state due to MT32Emu::BReverbModelImpl<short>::close\28\29
[asyncify] MT32Emu::BReverbModelImpl<float>::~BReverbModelImpl\28\29 can change the state due to MT32Emu::BReverbModelImpl<float>::close\28\29
[asyncify] MT32Emu::BReverbModelImpl<float>::~BReverbModelImpl\28\29.1 can change the state due to MT32Emu::BReverbModelImpl<float>::close\28\29
[asyncify] MT32Emu::FileStream::~FileStream\28\29.1 can change the state due to MT32Emu::FileStream::~FileStream\28\29
[asyncify] mt32emu_parse_stream can change the state due to MT32Emu::MidiStreamParserImpl::parseStream\28unsigned\20char\20const*\2c\20unsigned\20int\29
[asyncify] mt32emu_parse_stream_at can change the state due to MT32Emu::MidiStreamParserImpl::parseStream\28unsigned\20char\20const*\2c\20unsigned\20int\29
[asyncify] mt32emu_play_short_message can change the state due to MT32Emu::MidiStreamParserImpl::processShortMessage\28unsigned\20int\29
[asyncify] mt32emu_play_short_message_at can change the state due to MT32Emu::MidiStreamParserImpl::processShortMessage\28unsigned\20int\29
[asyncify] MT32Emu::Part::noteOn\28unsigned\20int\2c\20unsigned\20int\29 can change the state due to MT32Emu::Part::playPoly\28MT32Emu::PatchCache\20const*\2c\20MT32Emu::MemParams::RhythmTemp\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int\29
[asyncify] MT32Emu::PartialManager::~PartialManager\28\29 can change the state due to MT32Emu::Partial::~Partial\28\29
[asyncify] bool\20MT32Emu::Partial::generateNextSample<MT32Emu::LA32IntPartialPair>\28MT32Emu::LA32IntPartialPair*\29 can change the state due to MT32Emu::Partial::deactivate\28\29
[asyncify] bool\20MT32Emu::Partial::generateNextSample<MT32Emu::LA32FloatPartialPair>\28MT32Emu::LA32FloatPartialPair*\29 can change the state due to MT32Emu::Partial::deactivate\28\29
[asyncify] MT32Emu::PartialManager::deactivateAll\28\29 can change the state due to MT32Emu::Partial::deactivate\28\29
[asyncify] MT32Emu::Part::allNotesOff\28\29 can change the state due to MT32Emu::Poly::noteOff\28bool\29
[asyncify] MT32Emu::RhythmPart::noteOff\28unsigned\20int\29 can change the state due to MT32Emu::Poly::noteOff\28bool\29
[asyncify] MT32Emu::Part::stopNote\28unsigned\20int\29 can change the state due to MT32Emu::Poly::noteOff\28bool\29
[asyncify] MT32Emu::Part::noteOff\28unsigned\20int\29 can change the state due to MT32Emu::Poly::noteOff\28bool\29
[asyncify] MT32Emu::Part::reset\28\29 can change the state due to MT32Emu::Poly::startDecay\28\29
[asyncify] MT32Emu::Part::allSoundOff\28\29 can change the state due to MT32Emu::Poly::startDecay\28\29
[asyncify] MT32Emu::Part::setVolumeOverride\28unsigned\20char\29 can change the state due to MT32Emu::Poly::startDecay\28\29
[asyncify] MT32Emu::Part::setHoldPedal\28bool\29 can change the state due to MT32Emu::Poly::stopPedalHold\28\29
[asyncify] MT32Emu::Part::stopPedalHold\28\29 can change the state due to MT32Emu::Poly::stopPedalHold\28\29
[asyncify] MT32Emu::Part::resetAllControllers\28\29 can change the state due to MT32Emu::Poly::stopPedalHold\28\29
[asyncify] MT32Emu::identifyROM\28mt32emu_rom_info*\2c\20MT32Emu::File*\2c\20char\20const*\29 can change the state due to MT32Emu::ROMInfo::getROMInfo\28MT32Emu::File*\29
[asyncify] MT32Emu::ROMImage::makeROMImage\28MT32Emu::File*\2c\20MT32Emu::File*\29 can change the state due to MT32Emu::ROMImage::appendImages\28MT32Emu::ROMImage\20const*\2c\20MT32Emu::ROMImage\20const*\29
[asyncify] MT32Emu::ROMImage::mergeROMImages\28MT32Emu::ROMImage\20const*\2c\20MT32Emu::ROMImage\20const*\29 can change the state due to MT32Emu::ROMImage::appendImages\28MT32Emu::ROMImage\20const*\2c\20MT32Emu::ROMImage\20const*\29
[asyncify] MT32Emu::ROMImage::makeFullROMImage\28unsigned\20char*\2c\20unsigned\20long\29 can change the state due to MT32Emu::ROMImage::ROMImage\28MT32Emu::File*\2c\20bool\2c\20MT32Emu::ROMInfo\20const*\20const*\29
[asyncify] MT32Emu::ROMImage::makeROMImage\28MT32Emu::File*\29 can change the state due to MT32Emu::ROMImage::ROMImage\28MT32Emu::File*\2c\20bool\2c\20MT32Emu::ROMInfo\20const*\20const*\29
[asyncify] MT32Emu::ROMImage::makeROMImage\28MT32Emu::File*\2c\20MT32Emu::ROMInfo\20const*\20const*\29 can change the state due to MT32Emu::ROMImage::ROMImage\28MT32Emu::File*\2c\20bool\2c\20MT32Emu::ROMInfo\20const*\20const*\29
[asyncify] MT32Emu::ROMImage::freeROMImage\28MT32Emu::ROMImage\20const*\29 can change the state due to MT32Emu::ROMImage::~ROMImage\28\29
[asyncify] mt32emu_create_context can change the state due to MT32Emu::Synth::Synth\28MT32Emu::ReportHandler*\29
[asyncify] mt32emu_set_output_gain can change the state due to MT32Emu::Synth::setOutputGain\28float\29
[asyncify] mt32emu_set_reverb_output_gain can change the state due to MT32Emu::Synth::setReverbOutputGain\28float\29
[asyncify] MT32Emu::Synth::~Synth\28\29 can change the state due to MT32Emu::Synth::dispose\28\29
[asyncify] MT32Emu::Synth::close\28\29 can change the state due to MT32Emu::Synth::dispose\28\29
[asyncify] MT32Emu::Part::refresh\28\29 can change the state due to MT32Emu::Synth::newTimbreSet\28unsigned\20char\29\20const
[asyncify] MT32Emu::DefaultMidiStreamParser::printDebug\28char\20const*\29 can change the state due to MT32Emu::Synth::printDebug\28char\20const*\2c\20...\29
[asyncify] non-virtual\20thunk\20to\20MT32Emu::DefaultMidiStreamParser::printDebug\28char\20const*\29 can change the state due to MT32Emu::Synth::printDebug\28char\20const*\2c\20...\29
[asyncify] MT32Emu::RhythmPart::setTimbre\28MT32Emu::TimbreParam*\29 can change the state due to MT32Emu::Synth::printDebug\28char\20const*\2c\20...\29
[asyncify] MT32Emu::RhythmPart::getAbsTimbreNum\28\29\20const can change the state due to MT32Emu::Synth::printDebug\28char\20const*\2c\20...\29
[asyncify] MT32Emu::Partial::canProduceOutput\28\29 can change the state due to MT32Emu::Synth::printDebug\28char\20const*\2c\20...\29
[asyncify] MT32Emu::Partial::produceOutput\28short*\2c\20short*\2c\20unsigned\20int\29 can change the state due to MT32Emu::Synth::printDebug\28char\20const*\2c\20...\29
[asyncify] bool\20MT32Emu::Partial::doProduceOutput<short\2c\20MT32Emu::LA32IntPartialPair>\28short*\2c\20short*\2c\20unsigned\20int\2c\20MT32Emu::LA32IntPartialPair*\29 can change the state due to MT32Emu::Synth::printDebug\28char\20const*\2c\20...\29
[asyncify] MT32Emu::Partial::produceOutput\28float*\2c\20float*\2c\20unsigned\20int\29 can change the state due to MT32Emu::Synth::printDebug\28char\20const*\2c\20...\29
[asyncify] bool\20MT32Emu::Partial::doProduceOutput<float\2c\20MT32Emu::LA32FloatPartialPair>\28float*\2c\20float*\2c\20unsigned\20int\2c\20MT32Emu::LA32FloatPartialPair*\29 can change the state due to MT32Emu::Synth::printDebug\28char\20const*\2c\20...\29
[asyncify] MT32Emu::PartialManager::allocPartial\28int\29 can change the state due to MT32Emu::Synth::printDebug\28char\20const*\2c\20...\29
[asyncify] MT32Emu::PartialManager::polyFreed\28MT32Emu::Poly*\29 can change the state due to MT32Emu::Synth::printDebug\28char\20const*\2c\20...\29
[asyncify] MT32Emu::PartialManager::partialDeactivated\28int\29 can change the state due to MT32Emu::Synth::printDebug\28char\20const*\2c\20...\29
[asyncify] MT32Emu::Synth::initPCMList\28unsigned\20short\2c\20unsigned\20short\29 can change the state due to MT32Emu::Synth::printDebug\28char\20const*\2c\20...\29
[asyncify] MT32Emu::Synth::initTimbres\28unsigned\20short\2c\20unsigned\20short\2c\20unsigned\20short\2c\20unsigned\20short\2c\20bool\29 can change the state due to MT32Emu::Synth::printDebug\28char\20const*\2c\20...\29
[asyncify] MT32Emu::Synth::playSysexWithoutFraming\28unsigned\20char\20const*\2c\20unsigned\20int\29 can change the state due to MT32Emu::Synth::printDebug\28char\20const*\2c\20...\29
[asyncify] MT32Emu::Synth::playSysexNow\28unsigned\20char\20const*\2c\20unsigned\20int\29 can change the state due to MT32Emu::Synth::printDebug\28char\20const*\2c\20...\29
[asyncify] MT32Emu::Synth::playSysexWithoutHeader\28unsigned\20char\2c\20unsigned\20char\2c\20unsigned\20char\20const*\2c\20unsigned\20int\29 can change the state due to MT32Emu::Synth::printDebug\28char\20const*\2c\20...\29
[asyncify] MT32Emu::Synth::writeSysexGlobal\28unsigned\20int\2c\20unsigned\20char\20const*\2c\20unsigned\20int\29 can change the state due to MT32Emu::Synth::printDebug\28char\20const*\2c\20...\29
[asyncify] MT32Emu::Synth::printPartialUsage\28unsigned\20int\29 can change the state due to MT32Emu::Synth::printDebug\28char\20const*\2c\20...\29
[asyncify] MT32Emu::TVA::nextPhase\28\29 can change the state due to MT32Emu::Synth::printDebug\28char\20const*\2c\20...\29
[asyncify] mt32emu_set_reverb_enabled can change the state due to MT32Emu::Synth::setReverbEnabled\28bool\29
[asyncify] MT32Emu::Synth::refreshSystem\28\29 can change the state due to MT32Emu::Synth::refreshSystemReverbParameters\28\29
[asyncify] mt32emu_set_reverb_compatibility_mode can change the state due to MT32Emu::Synth::setReverbCompatibilityMode\28bool\29
[asyncify] mt32emu_is_mt32_reverb_compatibility_mode can change the state due to MT32Emu::Synth::isMT32ReverbCompatibilityMode\28\29\20const
[asyncify] mt32emu_preallocate_reverb_memory can change the state due to MT32Emu::Synth::preallocateReverbMemory\28bool\29
[asyncify] MT32Emu::Synth::open\28MT32Emu::ROMImage\20const&\2c\20MT32Emu::ROMImage\20const&\2c\20MT32Emu::AnalogOutputMode\29 can change the state due to MT32Emu::Synth::open\28MT32Emu::ROMImage\20const&\2c\20MT32Emu::ROMImage\20const&\2c\20unsigned\20int\2c\20MT32Emu::AnalogOutputMode\29
[asyncify] mt32emu_open_synth can change the state due to MT32Emu::Synth::open\28MT32Emu::ROMImage\20const&\2c\20MT32Emu::ROMImage\20const&\2c\20unsigned\20int\2c\20MT32Emu::AnalogOutputMode\29
[asyncify] MT32Emu::Synth::setMIDIEventQueueSize\28unsigned\20int\29 can change the state due to MT32Emu::Synth::flushMIDIQueue\28\29
[asyncify] MT32Emu::Synth::configureMIDIEventQueueSysexStorage\28unsigned\20int\29 can change the state due to MT32Emu::Synth::flushMIDIQueue\28\29
[asyncify] mt32emu_flush_midi_queue can change the state due to MT32Emu::Synth::flushMIDIQueue\28\29
[asyncify] MT32Emu::Synth::playMsgNow\28unsigned\20int\29 can change the state due to MT32Emu::Synth::playMsgOnPart\28unsigned\20char\2c\20unsigned\20char\2c\20unsigned\20char\2c\20unsigned\20char\29
[asyncify] mt32emu_play_msg_on_part can change the state due to MT32Emu::Synth::playMsgOnPart\28unsigned\20char\2c\20unsigned\20char\2c\20unsigned\20char\2c\20unsigned\20char\29
[asyncify] MT32Emu::Synth::playMsg\28unsigned\20int\29 can change the state due to MT32Emu::Synth::playMsg\28unsigned\20int\2c\20unsigned\20int\29
[asyncify] mt32emu_play_msg_at can change the state due to MT32Emu::Synth::playMsg\28unsigned\20int\2c\20unsigned\20int\29
[asyncify] MT32Emu::Synth::playSysex\28unsigned\20char\20const*\2c\20unsigned\20int\29 can change the state due to MT32Emu::Synth::playSysex\28unsigned\20char\20const*\2c\20unsigned\20int\2c\20unsigned\20int\29
[asyncify] mt32emu_play_sysex_at can change the state due to MT32Emu::Synth::playSysex\28unsigned\20char\20const*\2c\20unsigned\20int\2c\20unsigned\20int\29
[asyncify] mt32emu_write_sysex can change the state due to MT32Emu::Synth::writeSysex\28unsigned\20char\2c\20unsigned\20char\20const*\2c\20unsigned\20int\29
[asyncify] mt32emu_is_active can change the state due to MT32Emu::Synth::isActive\28\29
[asyncify] mt32emu_get_actual_stereo_output_samplerate can change the state due to MT32Emu::Synth::getStereoOutputSampleRate\28\29\20const
[asyncify] MT32Emu::InternalResampler::InternalResampler\28MT32Emu::Synth&\2c\20double\2c\20MT32Emu::SamplerateConversionQuality\29 can change the state due to MT32Emu::Synth::getStereoOutputSampleRate\28\29\20const
[asyncify] MT32Emu::SampleRateConverter::SampleRateConverter\28MT32Emu::Synth&\2c\20double\2c\20MT32Emu::SamplerateConversionQuality\29 can change the state due to MT32Emu::Synth::getStereoOutputSampleRate\28\29\20const
[asyncify] MT32Emu::RendererImpl<short>::render\28short*\2c\20unsigned\20int\29 can change the state due to MT32Emu::RendererImpl<short>::doRender\28short*\2c\20unsigned\20int\29
[asyncify] MT32Emu::RendererImpl<short>::render\28float*\2c\20unsigned\20int\29 can change the state due to MT32Emu::RendererImpl<short>::doRender\28short*\2c\20unsigned\20int\29
[asyncify] MT32Emu::RendererImpl<short>::renderStreams\28MT32Emu::DACOutputStreams<short>\20const&\2c\20unsigned\20int\29 can change the state due to MT32Emu::RendererImpl<short>::doRenderStreams\28MT32Emu::DACOutputStreams<short>\20const&\2c\20unsigned\20int\29
[asyncify] void\20MT32Emu::RendererImpl<short>::doRenderAndConvertStreams<float>\28MT32Emu::DACOutputStreams<float>\20const&\2c\20unsigned\20int\29 can change the state due to MT32Emu::RendererImpl<short>::doRenderStreams\28MT32Emu::DACOutputStreams<short>\20const&\2c\20unsigned\20int\29
[asyncify] MT32Emu::RendererImpl<float>::render\28short*\2c\20unsigned\20int\29 can change the state due to MT32Emu::RendererImpl<float>::doRender\28float*\2c\20unsigned\20int\29
[asyncify] MT32Emu::RendererImpl<float>::render\28float*\2c\20unsigned\20int\29 can change the state due to MT32Emu::RendererImpl<float>::doRender\28float*\2c\20unsigned\20int\29
[asyncify] void\20MT32Emu::RendererImpl<float>::doRenderAndConvertStreams<short>\28MT32Emu::DACOutputStreams<short>\20const&\2c\20unsigned\20int\29 can change the state due to MT32Emu::RendererImpl<float>::doRenderStreams\28MT32Emu::DACOutputStreams<float>\20const&\2c\20unsigned\20int\29
[asyncify] MT32Emu::RendererImpl<float>::renderStreams\28MT32Emu::DACOutputStreams<float>\20const&\2c\20unsigned\20int\29 can change the state due to MT32Emu::RendererImpl<float>::doRenderStreams\28MT32Emu::DACOutputStreams<float>\20const&\2c\20unsigned\20int\29
[asyncify] mt32emu_render_bit16s can change the state due to MT32Emu::Synth::render\28short*\2c\20unsigned\20int\29
[asyncify] MT32Emu::SampleRateConverter::getOutputSamples\28short*\2c\20unsigned\20int\29 can change the state due to MT32Emu::Synth::render\28short*\2c\20unsigned\20int\29
[asyncify] mt32emu_render_float can change the state due to MT32Emu::Synth::render\28float*\2c\20unsigned\20int\29
[asyncify] MT32Emu::SynthWrapper::getOutputSamples\28float*\2c\20unsigned\20int\29 can change the state due to MT32Emu::Synth::render\28float*\2c\20unsigned\20int\29
[asyncify] MT32Emu::SampleRateConverter::getOutputSamples\28float*\2c\20unsigned\20int\29 can change the state due to MT32Emu::Synth::render\28float*\2c\20unsigned\20int\29
[asyncify] mt32emu_render_bit16s_streams can change the state due to MT32Emu::Synth::renderStreams\28MT32Emu::DACOutputStreams<short>\20const&\2c\20unsigned\20int\29
[asyncify] mt32emu_render_float_streams can change the state due to MT32Emu::Synth::renderStreams\28MT32Emu::DACOutputStreams<float>\20const&\2c\20unsigned\20int\29
[asyncify] MT32Emu::addROMFiles\28mt32emu_data*\2c\20MT32Emu::File*\2c\20MT32Emu::File*\2c\20MT32Emu::MachineConfiguration\20const*\29 can change the state due to MT32Emu::replaceOrMergeROMImage\28MT32Emu::ROMImage\20const*&\2c\20MT32Emu::ROMImage\20const*\2c\20MT32Emu::MachineConfiguration\20const*\2c\20mt32emu_return_code\2c\20mt32emu_return_code\29
[asyncify] MT32Emu::SampleRateConverter::~SampleRateConverter\28\29 can change the state due to MT32Emu::InternalResampler::~InternalResampler\28\29
[asyncify] oggpack_writecopy can change the state due to oggpack_writecopy_helper
[asyncify] oggpackB_writecopy can change the state due to oggpack_writecopy_helper
[asyncify] jcopy_markers_execute can change the state due to jpeg_write_marker
[asyncify] encode_mcu_DC_first can change the state due to emit_restart
[asyncify] encode_mcu_AC_first can change the state due to emit_restart
[asyncify] encode_mcu_DC_refine can change the state due to emit_restart
[asyncify] encode_mcu_AC_refine can change the state due to emit_restart
[asyncify] encode_mcu can change the state due to emit_restart
[asyncify] finish_pass_gather can change the state due to emit_eobrun
[asyncify] jpeg_abort_compress can change the state due to jpeg_abort
[asyncify] jpeg_abort_decompress can change the state due to jpeg_abort
[asyncify] jpeg_destroy_compress can change the state due to jpeg_destroy
[asyncify] jpeg_destroy_decompress can change the state due to jpeg_destroy
[asyncify] read_quant_tables can change the state due to jpeg_add_quant_table
[asyncify] set_quality_ratings can change the state due to jpeg_default_qtables
[asyncify] jpeg_set_quality can change the state due to jpeg_set_linear_quality
[asyncify] decode_mcu_DC_refine can change the state due to process_restart
[asyncify] jcopy_markers_setup can change the state due to jpeg_save_markers
[asyncify] self_destruct can change the state due to free_pool
[asyncify] realize_virt_arrays can change the state due to alloc_barray
[asyncify] start_output_gif can change the state due to emit_header
[asyncify] SDL_CalculateBlit can change the state due to SDL_UnRLESurface
[asyncify] SDL_MapSurface can change the state due to SDL_UnRLESurface
[asyncify] SDL_RLESurface can change the state due to SDL_UnRLESurface
[asyncify] SDL_FreeSurface can change the state due to SDL_UnRLESurface
[asyncify] SDL_LockSurface can change the state due to SDL_UnRLESurface
[asyncify] SDL_ConvertColorkeyToAlpha can change the state due to SDL_UnRLESurface
[asyncify] DISKAUDIO_PlayDevice can change the state due to SDL_OpenedAudioDeviceDisconnected
[asyncify] SDL_InitSubSystem can change the state due to SDL_AudioInit
[asyncify] SDL_QuitSubSystem can change the state due to SDL_AudioQuit
[asyncify] SDL_CloseAudioDevice can change the state due to close_audio_device
[asyncify] SDL_CloseAudio can change the state due to close_audio_device
[asyncify] SDL_OpenAudio can change the state due to open_audio_device
[asyncify] SDL_OpenAudioDevice can change the state due to open_audio_device
[asyncify] SdlMixerManager::startAudio\28\29 can change the state due to SDL_PauseAudio
[asyncify] SdlMixerManager::resumeAudio\28\29 can change the state due to SDL_PauseAudio
[asyncify] SDL_AudioStreamPut can change the state due to SDL_AudioStreamPutInternal
[asyncify] SDL_AudioStreamFlush can change the state due to SDL_AudioStreamPutInternal
[asyncify] SDL_ResampleCVT_c1 can change the state due to SDL_ResampleCVT
[asyncify] SDL_ResampleCVT_c2 can change the state due to SDL_ResampleCVT
[asyncify] SDL_ResampleCVT_c4 can change the state due to SDL_ResampleCVT
[asyncify] SDL_ResampleCVT_c6 can change the state due to SDL_ResampleCVT
[asyncify] SDL_ResampleCVT_c8 can change the state due to SDL_ResampleCVT
[asyncify] SW_RunCommandQueue can change the state due to SDL_BlendFillRects
[asyncify] OSystem_SDL::setTextInClipboard\28Common::U32String\20const&\29 can change the state due to SDL_SetClipboardText
[asyncify] virtual\20thunk\20to\20OSystem_SDL::setTextInClipboard\28Common::U32String\20const&\29 can change the state due to SDL_SetClipboardText
[asyncify] OSystem_SDL::hasTextInClipboard\28\29 can change the state due to SDL_HasClipboardText
[asyncify] virtual\20thunk\20to\20OSystem_SDL::hasTextInClipboard\28\29 can change the state due to SDL_HasClipboardText
[asyncify] Emscripten_GLES_CreateContext can change the state due to SDL_EGL_CreateContext
[asyncify] Emscripten_GLES_MakeCurrent can change the state due to SDL_EGL_MakeCurrent
[asyncify] Emscripten_CreateWindow can change the state due to SDL_EGL_CreateSurface
[asyncify] Emscripten_DestroyWindow can change the state due to SDL_EGL_DestroySurface
[asyncify] SDL_LoadBMP_RW can change the state due to SDL_SetError
[asyncify] SDL_SaveBMP_RW can change the state due to SDL_SetError
[asyncify] SDL_WriteToDataQueue can change the state due to SDL_SetError
[asyncify] SDL_ReserveSpaceInDataQueue can change the state due to SDL_SetError
[asyncify] SDL_HapticClose can change the state due to SDL_SetError
[asyncify] SDL_DrawPoint can change the state due to SDL_SetError
[asyncify] SDL_DrawPoints can change the state due to SDL_SetError
[asyncify] SDL_EGL_SetErrorEx can change the state due to SDL_SetError
[asyncify] SDL_EGL_GetSwapInterval can change the state due to SDL_SetError
[asyncify] EMSCRIPTENAUDIO_Init can change the state due to SDL_SetError
[asyncify] EMSCRIPTENAUDIO_OpenDevice can change the state due to SDL_SetError
[asyncify] SDL_Error can change the state due to SDL_SetError
[asyncify] SDL_GameControllerMapping can change the state due to SDL_SetError
[asyncify] SDL_FillRect can change the state due to SDL_SetError
[asyncify] SDL_GameControllerAddMappingsFromRW can change the state due to SDL_SetError
[asyncify] SDL_PrivateGameControllerAddMapping can change the state due to SDL_SetError
[asyncify] SDL_PrivateAddMappingForGUID can change the state due to SDL_SetError
[asyncify] SDL_GameControllerMappingForIndex can change the state due to SDL_SetError
[asyncify] SDL_GameControllerMappingForGUID can change the state due to SDL_SetError
[asyncify] mem_seek can change the state due to SDL_SetError
[asyncify] SDL_PrivateGetControllerMapping can change the state due to SDL_SetError
[asyncify] SDL_GameControllerOpen can change the state due to SDL_SetError
[asyncify] SDL_PrivateLoadButtonMapping can change the state due to SDL_SetError
[asyncify] SDL_PrivateGameControllerParseElement can change the state due to SDL_SetError
[asyncify] SDL_GameControllerGetTouchpadFinger can change the state due to SDL_SetError
[asyncify] SDL_GameControllerGetSensorData can change the state due to SDL_SetError
[asyncify] SDL_SaveDollarTemplate can change the state due to SDL_SetError
[asyncify] SDL_LoadDollarTemplates can change the state due to SDL_SetError
[asyncify] SDL_AddDollarGesture can change the state due to SDL_SetError
[asyncify] dollarNormalize can change the state due to SDL_SetError
[asyncify] SDL_HapticName can change the state due to SDL_SetError
[asyncify] SDL_HapticOpen can change the state due to SDL_SetError
[asyncify] SDL_HapticSetGain can change the state due to SDL_SetError
[asyncify] SDL_HapticSetAutocenter can change the state due to SDL_SetError
[asyncify] SDL_HapticOpened can change the state due to SDL_SetError
[asyncify] SDL_HapticIndex can change the state due to SDL_SetError
[asyncify] SDL_HapticOpenFromMouse can change the state due to SDL_SetError
[asyncify] SDL_HapticOpenFromJoystick can change the state due to SDL_SetError
[asyncify] SDL_HapticDestroyEffect can change the state due to SDL_SetError
[asyncify] SDL_HapticNumEffects can change the state due to SDL_SetError
[asyncify] SDL_HapticNumEffectsPlaying can change the state due to SDL_SetError
[asyncify] SDL_HapticQuery can change the state due to SDL_SetError
[asyncify] SDL_HapticNumAxes can change the state due to SDL_SetError
[asyncify] SDL_HapticEffectSupported can change the state due to SDL_SetError
[asyncify] SDL_HapticNewEffect can change the state due to SDL_SetError
[asyncify] SDL_HapticUpdateEffect can change the state due to SDL_SetError
[asyncify] SDL_HapticRunEffect can change the state due to SDL_SetError
[asyncify] SDL_HapticStopEffect can change the state due to SDL_SetError
[asyncify] SDL_HapticGetEffectStatus can change the state due to SDL_SetError
[asyncify] SDL_HapticPause can change the state due to SDL_SetError
[asyncify] SDL_HapticUnpause can change the state due to SDL_SetError
[asyncify] SDL_HapticStopAll can change the state due to SDL_SetError
[asyncify] SDL_HapticRumbleSupported can change the state due to SDL_SetError
[asyncify] SDL_HapticRumbleInit can change the state due to SDL_SetError
[asyncify] SDL_HapticRumblePlay can change the state due to SDL_SetError
[asyncify] SDL_HapticRumbleStop can change the state due to SDL_SetError
[asyncify] SDL_JoystickAttachVirtual can change the state due to SDL_SetError
[asyncify] SDL_JoystickAttachVirtualEx can change the state due to SDL_SetError
[asyncify] SDL_JoystickDetachVirtual can change the state due to SDL_SetError
[asyncify] SDL_JoystickSetVirtualAxis can change the state due to SDL_SetError
[asyncify] SDL_JoystickSetVirtualButton can change the state due to SDL_SetError
[asyncify] SDL_JoystickSetVirtualHat can change the state due to SDL_SetError
[asyncify] SDL_PrivateJoystickValid can change the state due to SDL_SetError
[asyncify] SDL_JoystickNumAxes can change the state due to SDL_SetError
[asyncify] SDL_JoystickNumHats can change the state due to SDL_SetError
[asyncify] SDL_JoystickNumBalls can change the state due to SDL_SetError
[asyncify] SDL_JoystickNumButtons can change the state due to SDL_SetError
[asyncify] SDL_JoystickGetAxis can change the state due to SDL_SetError
[asyncify] SDL_JoystickGetAxisInitialState can change the state due to SDL_SetError
[asyncify] SDL_JoystickGetHat can change the state due to SDL_SetError
[asyncify] SDL_JoystickGetBall can change the state due to SDL_SetError
[asyncify] SDL_JoystickGetButton can change the state due to SDL_SetError
[asyncify] SDL_JoystickInstanceID can change the state due to SDL_SetError
[asyncify] SDL_JoystickName can change the state due to SDL_SetError
[asyncify] SDL_JoystickPath can change the state due to SDL_SetError
[asyncify] SDL_JoystickGetPlayerIndex can change the state due to SDL_SetError
[asyncify] SDL_JoystickSetPlayerIndex can change the state due to SDL_SetError
[asyncify] mem_writeconst can change the state due to SDL_SetError
[asyncify] SDL_JoystickGetGUID can change the state due to SDL_SetError
[asyncify] SDL_JoystickGetVendor can change the state due to SDL_SetError
[asyncify] SDL_JoystickGetProduct can change the state due to SDL_SetError
[asyncify] SDL_JoystickGetProductVersion can change the state due to SDL_SetError
[asyncify] SDL_JoystickGetFirmwareVersion can change the state due to SDL_SetError
[asyncify] SDL_JoystickGetSerial can change the state due to SDL_SetError
[asyncify] SDL_JoystickGetType can change the state due to SDL_SetError
[asyncify] SDL_JoystickCurrentPowerLevel can change the state due to SDL_SetError
[asyncify] SDL_GetKeyFromScancode can change the state due to SDL_SetError
[asyncify] SDL_GetScancodeName can change the state due to SDL_SetError
[asyncify] SDL_GetScancodeFromName can change the state due to SDL_SetError
[asyncify] SDL_GetKeyName can change the state due to SDL_SetError
[asyncify] SDL_GetKeyFromName can change the state due to SDL_SetError
[asyncify] SDL_SetMemoryFunctions can change the state due to SDL_SetError
[asyncify] SDL_MixAudioFormat can change the state due to SDL_SetError
[asyncify] SDL_CaptureMouse can change the state due to SDL_SetError
[asyncify] SDL_PixelFormatEnumToMasks can change the state due to SDL_SetError
[asyncify] SDL_AllocFormat can change the state due to SDL_SetError
[asyncify] SDL_FreeFormat can change the state due to SDL_SetError
[asyncify] SDL_FreePalette can change the state due to SDL_SetError
[asyncify] SDL_AllocPalette can change the state due to SDL_SetError
[asyncify] SDL_SetPixelFormatPalette can change the state due to SDL_SetError
[asyncify] SDL_CalculateGammaRamp can change the state due to SDL_SetError
[asyncify] SDL_GetSpanEnclosingRect can change the state due to SDL_SetError
[asyncify] SDL_HasIntersection can change the state due to SDL_SetError
[asyncify] SDL_IntersectRect can change the state due to SDL_SetError
[asyncify] SDL_UnionRect can change the state due to SDL_SetError
[asyncify] SDL_EnclosePoints can change the state due to SDL_SetError
[asyncify] SDL_IntersectRectAndLine can change the state due to SDL_SetError
[asyncify] SDL_HasIntersectionF can change the state due to SDL_SetError
[asyncify] SDL_IntersectFRect can change the state due to SDL_SetError
[asyncify] SDL_UnionFRect can change the state due to SDL_SetError
[asyncify] SDL_EncloseFPoints can change the state due to SDL_SetError
[asyncify] SDL_IntersectFRectAndLine can change the state due to SDL_SetError
[asyncify] SDL_GetRenderDriverInfo can change the state due to SDL_SetError
[asyncify] SDL_RenderGetWindow can change the state due to SDL_SetError
[asyncify] SDL_GetRendererInfo can change the state due to SDL_SetError
[asyncify] SDL_QueryTexture can change the state due to SDL_SetError
[asyncify] SDL_GetAudioDeviceName can change the state due to SDL_SetError
[asyncify] SDL_GetAudioDeviceSpec can change the state due to SDL_SetError
[asyncify] SDL_GetAudioDeviceStatus can change the state due to SDL_SetError
[asyncify] SDL_GetAudioStatus can change the state due to SDL_SetError
[asyncify] SDL_AudioStreamGet can change the state due to SDL_SetError
[asyncify] SDL_MixAudio can change the state due to SDL_SetError
[asyncify] SDL_BuildAudioCVT can change the state due to SDL_SetError
[asyncify] SDL_AddAudioCVTFilter can change the state due to SDL_SetError
[asyncify] SDL_BuildAudioTypeCVTToFloat can change the state due to SDL_SetError
[asyncify] SDL_BuildAudioResampleCVT can change the state due to SDL_SetError
[asyncify] SDL_BuildAudioTypeCVTFromFloat can change the state due to SDL_SetError
[asyncify] SDL_BlendFillRect can change the state due to SDL_SetError
[asyncify] SDL_SetTextureColorMod can change the state due to SDL_SetError
[asyncify] SDL_SetTextureAlphaMod can change the state due to SDL_SetError
[asyncify] SDL_GetTextureColorMod can change the state due to SDL_SetError
[asyncify] SDL_GetTextureAlphaMod can change the state due to SDL_SetError
[asyncify] SDL_GetTextureBlendMode can change the state due to SDL_SetError
[asyncify] SDL_GetTextureScaleMode can change the state due to SDL_SetError
[asyncify] SDL_SetTextureUserData can change the state due to SDL_SetError
[asyncify] SDL_GetTextureUserData can change the state due to SDL_SetError
[asyncify] SDL_GetRenderTarget can change the state due to SDL_SetError
[asyncify] SDL_RenderSetLogicalSize can change the state due to SDL_SetError
[asyncify] SDL_RenderSetScale can change the state due to SDL_SetError
[asyncify] SDL_RenderGetLogicalSize can change the state due to SDL_SetError
[asyncify] SDL_RenderSetIntegerScale can change the state due to SDL_SetError
[asyncify] SDL_RenderGetIntegerScale can change the state due to SDL_SetError
[asyncify] SDL_RenderGetViewport can change the state due to SDL_SetError
[asyncify] SDL_RenderGetClipRect can change the state due to SDL_SetError
[asyncify] SDL_RenderIsClipEnabled can change the state due to SDL_SetError
[asyncify] SDL_RenderGetScale can change the state due to SDL_SetError
[asyncify] SDL_RenderWindowToLogical can change the state due to SDL_SetError
[asyncify] SDL_RenderLogicalToWindow can change the state due to SDL_SetError
[asyncify] SDL_SetRenderDrawColor can change the state due to SDL_SetError
[asyncify] SDL_GetRenderDrawColor can change the state due to SDL_SetError
[asyncify] SDL_GetRenderDrawBlendMode can change the state due to SDL_SetError
[asyncify] SDL_RenderDrawLines can change the state due to SDL_SetError
[asyncify] SDL_RenderDrawRectF can change the state due to SDL_SetError
[asyncify] SDL_RenderDrawRects can change the state due to SDL_SetError
[asyncify] SDL_RenderDrawRectsF can change the state due to SDL_SetError
[asyncify] SDL_RenderFillRect can change the state due to SDL_SetError
[asyncify] SDL_RenderFillRectF can change the state due to SDL_SetError
[asyncify] SDL_RenderCopyF can change the state due to SDL_SetError
[asyncify] SDL_RenderCopyExF can change the state due to SDL_SetError
[asyncify] SDL_RenderGeometry can change the state due to SDL_SetError
[asyncify] SDL_RenderGeometryRaw can change the state due to SDL_SetError
[asyncify] SW_CreateRendererForSurface can change the state due to SDL_SetError
[asyncify] SW_CreateTexture can change the state due to SDL_SetError
[asyncify] SW_GetOutputSize can change the state due to SDL_SetError
[asyncify] SW_RenderReadPixels can change the state due to SDL_SetError
[asyncify] SDL_RWFromFile can change the state due to SDL_SetError
[asyncify] stdio_seek can change the state due to SDL_SetError
[asyncify] SDL_RWFromMem can change the state due to SDL_SetError
[asyncify] SDL_RWFromConstMem can change the state due to SDL_SetError
[asyncify] SDL_SensorGetName can change the state due to SDL_SetError
[asyncify] SDL_SensorGetType can change the state due to SDL_SetError
[asyncify] SDL_SensorGetNonPortableType can change the state due to SDL_SetError
[asyncify] SDL_SensorGetInstanceID can change the state due to SDL_SetError
[asyncify] SDL_SensorGetData can change the state due to SDL_SetError
[asyncify] SDL_UpperSoftStretch can change the state due to SDL_SetError
[asyncify] SDL_CreateRGBSurfaceWithFormat can change the state due to SDL_SetError
[asyncify] SDL_SetSurfacePalette can change the state due to SDL_SetError
[asyncify] SDL_CreateRGBSurface can change the state due to SDL_SetError
[asyncify] SDL_CreateRGBSurfaceFrom can change the state due to SDL_SetError
[asyncify] SDL_CreateRGBSurfaceWithFormatFrom can change the state due to SDL_SetError
[asyncify] SDL_SetColorKey can change the state due to SDL_SetError
[asyncify] SDL_GetColorKey can change the state due to SDL_SetError
[asyncify] SDL_PrivateUpperBlitScaled can change the state due to SDL_SetError
[asyncify] SDL_ConvertPixels can change the state due to SDL_SetError
[asyncify] SDL_CreateSurfaceOnStack can change the state due to SDL_SetError
[asyncify] SDL_PremultiplyAlpha can change the state due to SDL_SetError
[asyncify] SDL_CondSignal can change the state due to SDL_SetError
[asyncify] SDL_CondBroadcast can change the state due to SDL_SetError
[asyncify] SDL_CondWaitTimeout can change the state due to SDL_SetError
[asyncify] SDL_GetPrefPath can change the state due to SDL_SetError
[asyncify] SDL_SYS_HapticName can change the state due to SDL_SetError
[asyncify] SDL_SYS_HapticOpen can change the state due to SDL_SetError
[asyncify] SDL_SYS_HapticOpenFromJoystick can change the state due to SDL_SetError
[asyncify] SDL_SYS_HapticNewEffect can change the state due to SDL_SetError
[asyncify] SDL_SYS_HapticUpdateEffect can change the state due to SDL_SetError
[asyncify] SDL_SYS_HapticRunEffect can change the state due to SDL_SetError
[asyncify] SDL_SYS_HapticStopEffect can change the state due to SDL_SetError
[asyncify] SDL_SYS_HapticDestroyEffect can change the state due to SDL_SetError
[asyncify] SDL_SYS_HapticGetEffectStatus can change the state due to SDL_SetError
[asyncify] SDL_SYS_HapticSetGain can change the state due to SDL_SetError
[asyncify] SDL_SYS_HapticSetAutocenter can change the state due to SDL_SetError
[asyncify] SDL_SYS_HapticPause can change the state due to SDL_SetError
[asyncify] SDL_SYS_HapticUnpause can change the state due to SDL_SetError
[asyncify] SDL_SYS_HapticStopAll can change the state due to SDL_SetError
[asyncify] EMSCRIPTEN_JoystickInit can change the state due to SDL_SetError
[asyncify] EMSCRIPTEN_JoystickOpen can change the state due to SDL_SetError
[asyncify] SDL_LoadObject can change the state due to SDL_SetError
[asyncify] SDL_LoadFunction can change the state due to SDL_SetError
[asyncify] SDL_CreateSemaphore can change the state due to SDL_SetError
[asyncify] SDL_SemTryWait can change the state due to SDL_SetError
[asyncify] SDL_SemWaitTimeout can change the state due to SDL_SetError
[asyncify] SDL_SemWait can change the state due to SDL_SetError
[asyncify] SDL_SemPost can change the state due to SDL_SetError
[asyncify] SDL_SYS_CreateThread can change the state due to SDL_SetError
[asyncify] SDL_TLSSet can change the state due to SDL_SetError
[asyncify] SDL_GetTouchDevice can change the state due to SDL_SetError
[asyncify] SDL_GetTouchName can change the state due to SDL_SetError
[asyncify] SDL_GetTouchFinger can change the state due to SDL_SetError
[asyncify] SDL_OpenURL can change the state due to SDL_SetError
[asyncify] SDL_ResetDisplayModes can change the state due to SDL_SetError
[asyncify] SDL_GetCurrentVideoDriver can change the state due to SDL_SetError
[asyncify] SDL_GetNumVideoDisplays can change the state due to SDL_SetError
[asyncify] SDL_GetDisplayDriverData can change the state due to SDL_SetError
[asyncify] SDL_GetDisplayName can change the state due to SDL_SetError
[asyncify] SDL_GetDisplayOrientation can change the state due to SDL_SetError
[asyncify] SDL_GetDesktopDisplayMode can change the state due to SDL_SetError
[asyncify] SDL_GetCurrentDisplayMode can change the state due to SDL_SetError
[asyncify] SDL_GetClosestDisplayMode can change the state due to SDL_SetError
[asyncify] SDL_GetDisplay can change the state due to SDL_SetError
[asyncify] GetRectDisplayIndex can change the state due to SDL_SetError
[asyncify] SDL_SetWindowDisplayMode can change the state due to SDL_SetError
[asyncify] SDL_GetWindowDisplayMode can change the state due to SDL_SetError
[asyncify] SDL_GetWindowPixelFormat can change the state due to SDL_SetError
[asyncify] SDL_SetWindowFullscreen can change the state due to SDL_SetError
[asyncify] SDL_SetWindowGrab can change the state due to SDL_SetError
[asyncify] SDL_GetWindowID can change the state due to SDL_SetError
[asyncify] SDL_GetWindowFlags can change the state due to SDL_SetError
[asyncify] SDL_GetWindowTitle can change the state due to SDL_SetError
[asyncify] SDL_SetWindowData can change the state due to SDL_SetError
[asyncify] SDL_GetWindowData can change the state due to SDL_SetError
[asyncify] SDL_GetWindowPosition can change the state due to SDL_SetError
[asyncify] SDL_GetWindowSize can change the state due to SDL_SetError
[asyncify] SDL_GetWindowMinimumSize can change the state due to SDL_SetError
[asyncify] SDL_GetWindowMaximumSize can change the state due to SDL_SetError
[asyncify] SDL_SetWindowBrightness can change the state due to SDL_SetError
[asyncify] SDL_GetWindowBrightness can change the state due to SDL_SetError
[asyncify] SDL_GetWindowOpacity can change the state due to SDL_SetError
[asyncify] SDL_SetWindowMouseGrab can change the state due to SDL_SetError
[asyncify] SDL_SetWindowKeyboardGrab can change the state due to SDL_SetError
[asyncify] SDL_GetWindowGrab can change the state due to SDL_SetError
[asyncify] SDL_GetWindowKeyboardGrab can change the state due to SDL_SetError
[asyncify] SDL_GetWindowMouseGrab can change the state due to SDL_SetError
[asyncify] SDL_GetWindowMouseRect can change the state due to SDL_SetError
[asyncify] SDL_GL_SetAttribute can change the state due to SDL_SetError
[asyncify] SDL_GL_GetCurrentWindow can change the state due to SDL_SetError
[asyncify] SDL_GL_GetCurrentContext can change the state due to SDL_SetError
[asyncify] SDL_Vulkan_GetVkGetInstanceProcAddr can change the state due to SDL_SetError
[asyncify] SDL_LoadWAV_RW can change the state due to SDL_SetError
[asyncify] WaveReadFormat can change the state due to SDL_SetError
[asyncify] WaveCheckFormat can change the state due to SDL_SetError
[asyncify] LAW_Decode can change the state due to SDL_SetError
[asyncify] MS_ADPCM_Decode can change the state due to SDL_SetError
[asyncify] IMA_ADPCM_Decode can change the state due to SDL_SetError
[asyncify] PCM_Decode can change the state due to SDL_SetError
[asyncify] LAW_Init can change the state due to SDL_SetError
[asyncify] MS_ADPCM_Init can change the state due to SDL_SetError
[asyncify] IMA_ADPCM_Init can change the state due to SDL_SetError
[asyncify] PCM_Init can change the state due to SDL_SetError
[asyncify] MS_ADPCM_CalculateSampleFrames can change the state due to SDL_SetError
[asyncify] IMA_ADPCM_CalculateSampleFrames can change the state due to SDL_SetError
[asyncify] SDL_ConvertPixels_YUV_to_RGB can change the state due to SDL_SetError
[asyncify] GetYUVPlanes can change the state due to SDL_SetError
[asyncify] SDL_ConvertPixels_ARGB8888_to_YUV can change the state due to SDL_SetError
[asyncify] SDL_ConvertPixels_YUV_to_YUV can change the state due to SDL_SetError
[asyncify] SDL_SW_CreateYUVTexture can change the state due to SDL_SetError
[asyncify] SDL_SW_LockYUVTexture can change the state due to SDL_SetError
[asyncify] SDL_BlendPoint can change the state due to SDL_SetError
[asyncify] SDL_PeepEvents can change the state due to SDL_PeepEventsInternal
[asyncify] SDL_HasEvent can change the state due to SDL_PeepEventsInternal
[asyncify] SDL_HasEvents can change the state due to SDL_PeepEventsInternal
[asyncify] SDL_WaitEventTimeout can change the state due to SDL_PeepEventsInternal
[asyncify] SdlEventSource::obtainUnicode\28SDL_Keysym\29 can change the state due to SDL_PumpEvents
[asyncify] SDL_SendClipboardUpdate can change the state due to SDL_PushEvent
[asyncify] SDL_SendDisplayEvent can change the state due to SDL_PushEvent
[asyncify] SDL_SendDrop can change the state due to SDL_PushEvent
[asyncify] SDL_SendAppEvent can change the state due to SDL_PushEvent
[asyncify] SDL_SendSysWMEvent can change the state due to SDL_PushEvent
[asyncify] SDL_SendKeymapChangedEvent can change the state due to SDL_PushEvent
[asyncify] SDL_SendLocaleChangedEvent can change the state due to SDL_PushEvent
[asyncify] SDL_GameControllerInit can change the state due to SDL_PushEvent
[asyncify] SDL_GameControllerEventWatcher can change the state due to SDL_PushEvent
[asyncify] SDL_PrivateJoystickAxis can change the state due to SDL_PushEvent
[asyncify] SDL_PrivateGameControllerButton can change the state due to SDL_PushEvent
[asyncify] ResetOutput can change the state due to SDL_PushEvent
[asyncify] SDL_GameControllerHandleDelayedGuideButton can change the state due to SDL_PushEvent
[asyncify] SDL_GestureProcessEvent can change the state due to SDL_PushEvent
[asyncify] SDL_PrivateJoystickBatteryLevel can change the state due to SDL_PushEvent
[asyncify] SDL_PrivateJoystickRemoved can change the state due to SDL_PushEvent
[asyncify] SDL_PrivateJoystickButton can change the state due to SDL_PushEvent
[asyncify] SDL_PrivateJoystickHat can change the state due to SDL_PushEvent
[asyncify] SDL_PrivateJoystickTouchpad can change the state due to SDL_PushEvent
[asyncify] SDL_PrivateJoystickBall can change the state due to SDL_PushEvent
[asyncify] SDL_PrivateJoystickSensor can change the state due to SDL_PushEvent
[asyncify] SDL_SendKeyboardKeyInternal can change the state due to SDL_PushEvent
[asyncify] SDL_SendKeyboardText can change the state due to SDL_PushEvent
[asyncify] SDL_SendEditingText can change the state due to SDL_PushEvent
[asyncify] SDL_PrivateSendMouseButton can change the state due to SDL_PushEvent
[asyncify] SDL_AddAudioDevice can change the state due to SDL_PushEvent
[asyncify] SDL_AudioDetectDevices_Default can change the state due to SDL_PushEvent
[asyncify] SDL_PrivateSensorUpdate can change the state due to SDL_PushEvent
[asyncify] SDL_SendTouch can change the state due to SDL_PushEvent
[asyncify] SDL_SendTouchMotion can change the state due to SDL_PushEvent
[asyncify] SDL_SendWindowEvent can change the state due to SDL_PushEvent
[asyncify] SDL_SetHint can change the state due to SDL_SetHintWithPriority
[asyncify] SDL_EventsInit can change the state due to SDL_AddHintCallback
[asyncify] SDL_GameControllerInitMappings can change the state due to SDL_AddHintCallback
[asyncify] SDL_MouseInit can change the state due to SDL_AddHintCallback
[asyncify] SDL_GameControllerNameForIndex can change the state due to SDL_JoystickNameForIndex
[asyncify] SDL_GameControllerTypeForIndex can change the state due to SDL_JoystickNameForIndex
[asyncify] SDL_GameControllerPathForIndex can change the state due to SDL_JoystickPathForIndex
[asyncify] SDL_GameControllerClose can change the state due to SDL_JoystickClose
[asyncify] SdlEventSource::~SdlEventSource\28\29 can change the state due to SDL_JoystickClose
[asyncify] SdlEventSource::closeJoystick\28\29 can change the state due to SDL_JoystickClose
[asyncify] SDL_GameControllerRumble can change the state due to SDL_JoystickRumble
[asyncify] SDL_GameControllerRumbleTriggers can change the state due to SDL_JoystickRumbleTriggers
[asyncify] SDL_GameControllerHasLED can change the state due to SDL_JoystickHasLED
[asyncify] SDL_GameControllerHasRumble can change the state due to SDL_JoystickHasRumble
[asyncify] SDL_GameControllerHasRumbleTriggers can change the state due to SDL_JoystickHasRumbleTriggers
[asyncify] SDL_GameControllerSetLED can change the state due to SDL_JoystickSetLED
[asyncify] SDL_GameControllerSendEffect can change the state due to SDL_JoystickSendEffect
[asyncify] Emscripten_JoyStickConnected can change the state due to SDL_PrivateJoystickAdded
[asyncify] SDL_GameControllerUpdate can change the state due to SDL_JoystickUpdate
[asyncify] SDL_GameControllerMappingForDeviceIndex can change the state due to SDL_JoystickGetDeviceGUID
[asyncify] SDL_Log can change the state due to SDL_LogMessageV
[asyncify] SDL_LogVerbose can change the state due to SDL_LogMessageV
[asyncify] SDL_LogDebug can change the state due to SDL_LogMessageV
[asyncify] SDL_LogInfo can change the state due to SDL_LogMessageV
[asyncify] SDL_LogWarn can change the state due to SDL_LogMessageV
[asyncify] SDL_LogError can change the state due to SDL_LogMessageV
[asyncify] SDL_LogCritical can change the state due to SDL_LogMessageV
[asyncify] SDL_LogMessage can change the state due to SDL_LogMessageV
[asyncify] debug_print can change the state due to SDL_LogMessageV
[asyncify] WaveReadPartialChunkData can change the state due to SDL_malloc
[asyncify] SDL_SIMDAlloc can change the state due to SDL_malloc
[asyncify] SDL_NewDataQueue can change the state due to SDL_malloc
[asyncify] DISKAUDIO_OpenDevice can change the state due to SDL_malloc
[asyncify] CreateMappingString can change the state due to SDL_malloc
[asyncify] UpdateEventsForDeviceRemoval can change the state due to SDL_malloc
[asyncify] SDL_iconv_string can change the state due to SDL_malloc
[asyncify] UpdateEventsForDeviceRemoval.1 can change the state due to SDL_malloc
[asyncify] SDL_CreateJoystickName can change the state due to SDL_malloc
[asyncify] SDL_ListAdd can change the state due to SDL_malloc
[asyncify] SDL_LogSetPriority can change the state due to SDL_malloc
[asyncify] SDL_PromptAssertion can change the state due to SDL_malloc
[asyncify] add_audio_device can change the state due to SDL_malloc
[asyncify] SDL_UpdateTextureNative can change the state due to SDL_malloc
[asyncify] SDL_UpdateTextureYUVPlanar can change the state due to SDL_malloc
[asyncify] SDL_UpdateTextureNVPlanar can change the state due to SDL_malloc
[asyncify] RenderDrawPointsWithRectsF can change the state due to SDL_malloc
[asyncify] RenderDrawPointsWithRects can change the state due to SDL_malloc
[asyncify] RenderDrawLinesWithRectsF can change the state due to SDL_malloc
[asyncify] SDL_RWFromFP can change the state due to SDL_malloc
[asyncify] SDL_AllocRW can change the state due to SDL_malloc
[asyncify] RecursivelyCalculateShapeTree can change the state due to SDL_malloc
[asyncify] SDL_wcsdup can change the state due to SDL_malloc
[asyncify] SDL_strdup can change the state due to SDL_malloc
[asyncify] SDL_asprintf can change the state due to SDL_malloc
[asyncify] SDL_vasprintf can change the state due to SDL_malloc
[asyncify] SDL_CreateCond can change the state due to SDL_malloc
[asyncify] SDL_Generic_SetTLSData can change the state due to SDL_malloc
[asyncify] SDL_AddTimer can change the state due to SDL_malloc
[asyncify] SDL_AddTouch can change the state due to SDL_malloc
[asyncify] SDL_ConvertPixels_RGB_to_YUV can change the state due to SDL_malloc
[asyncify] SDL_ConvertPixels_SwapUVPlanes can change the state due to SDL_malloc
[asyncify] SDL_ConvertPixels_PackUVPlanes_to_NV can change the state due to SDL_malloc
[asyncify] SDL_ConvertPixels_SplitNV_to_UVPlanes can change the state due to SDL_malloc
[asyncify] Emscripten_InitMouse can change the state due to SDL_calloc
[asyncify] Emscripten_CreateCursor can change the state due to SDL_calloc
[asyncify] Emscripten_CreateSystemCursor can change the state due to SDL_calloc
[asyncify] Emscripten_CreateDevice can change the state due to SDL_calloc
[asyncify] SDL_EventState can change the state due to SDL_calloc
[asyncify] SDL_PrivateJoystickAddTouchpad can change the state due to SDL_calloc
[asyncify] SDL_GetPreferredLocales can change the state due to SDL_calloc
[asyncify] SDL_AllocBlitMap can change the state due to SDL_calloc
[asyncify] Map1to1 can change the state due to SDL_calloc
[asyncify] QueueCmdSetClipRect can change the state due to SDL_calloc
[asyncify] SDL_CreateMutex can change the state due to SDL_calloc
[asyncify] SDL_CreateThreadWithStackSize can change the state due to SDL_calloc
[asyncify] SDL_SIMDRealloc can change the state due to SDL_realloc
[asyncify] SDL_AddEventWatch can change the state due to SDL_realloc
[asyncify] SDL_LoadVIDPIDListFromHint can change the state due to SDL_realloc
[asyncify] SDL_GestureAddTouch can change the state due to SDL_realloc
[asyncify] SDL_PrivateJoystickAddSensor can change the state due to SDL_realloc
[asyncify] SDL_AllocateRenderVertices can change the state due to SDL_realloc
[asyncify] SDL_AddVideoDisplay can change the state due to SDL_realloc
[asyncify] SDL_AddDisplayMode can change the state due to SDL_realloc
[asyncify] SDL_SIMDFree can change the state due to SDL_free
[asyncify] SDL_FreeDataQueue can change the state due to SDL_free
[asyncify] SDL_ClearDataQueue can change the state due to SDL_free
[asyncify] DISKAUDIO_CloseDevice can change the state due to SDL_free
[asyncify] Emscripten_FreeCursor can change the state due to SDL_free
[asyncify] Emscripten_DeleteDevice can change the state due to SDL_free
[asyncify] SDL_StopEventLoop can change the state due to SDL_free
[asyncify] SDL_GameControllerQuitMappings can change the state due to SDL_free
[asyncify] SDL_GestureQuit can change the state due to SDL_free
[asyncify] SDL_GestureDelTouch can change the state due to SDL_free
[asyncify] SDL_DelHintCallback can change the state due to SDL_free
[asyncify] SDL_ClearHints can change the state due to SDL_free
[asyncify] SDL_ListPop can change the state due to SDL_free
[asyncify] SDL_ListRemove can change the state due to SDL_free
[asyncify] SDL_ListClear can change the state due to SDL_free
[asyncify] SDL_LogQuit can change the state due to SDL_free
[asyncify] SDL_LogResetPriorities can change the state due to SDL_free
[asyncify] SDL_InvalidateAllBlitMap can change the state due to SDL_free
[asyncify] SDL_InvalidateMap can change the state due to SDL_free
[asyncify] SDL_FreeBlitMap can change the state due to SDL_free
[asyncify] SDL_GetNumAudioDevices can change the state due to SDL_free
[asyncify] SDL_CleanupAudioStreamResampler can change the state due to SDL_free
[asyncify] SW_DestroyRenderer can change the state due to SDL_free
[asyncify] stdio_close can change the state due to SDL_free
[asyncify] mem_close can change the state due to SDL_free
[asyncify] SDL_FreeRW can change the state due to SDL_free
[asyncify] SDL_FreeShapeTree can change the state due to SDL_free
[asyncify] SDL_DestroyCond can change the state due to SDL_free
[asyncify] EMSCRIPTEN_JoystickQuit can change the state due to SDL_free
[asyncify] Emscripten_JoyStickDisconnected can change the state due to SDL_free
[asyncify] SDL_DestroyMutex can change the state due to SDL_free
[asyncify] SDL_WaitThread can change the state due to SDL_free
[asyncify] SDL_DetachThread can change the state due to SDL_free
[asyncify] SDL_TimerQuit can change the state due to SDL_free
[asyncify] SDL_RemoveTimer can change the state due to SDL_free
[asyncify] SDL_DelTouch can change the state due to SDL_free
[asyncify] SDL_TouchQuit can change the state due to SDL_free
[asyncify] SDL_FreeWAV can change the state due to SDL_free
[asyncify] SDL_SW_DestroyYUVTexture can change the state due to SDL_free
[asyncify] SDL_MouseAutoCaptureChanged can change the state due to SDL_UpdateMouseCapture
[asyncify] Emscripten_HandleMouseFocus can change the state due to SDL_SetMouseFocus
[asyncify] SDL_SendMouseMotion can change the state due to SDL_UpdateMouseFocus
[asyncify] Emscripten_HandleWheel can change the state due to SDL_SendMouseWheel
[asyncify] SdlWindow::lockMouse\28bool\29 can change the state due to SDL_SetRelativeMouseMode
[asyncify] SdlGraphicsManager::showSystemMouseCursor\28bool\29 can change the state due to SDL_ShowCursor
[asyncify] OpenGLSdlGraphics3dManager::showMouse\28bool\29 can change the state due to SDL_ShowCursor
[asyncify] virtual\20thunk\20to\20OpenGLSdlGraphics3dManager::showMouse\28bool\29 can change the state due to SDL_ShowCursor
[asyncify] SdlWindow::warpMouseInWindow\28int\2c\20int\29 can change the state due to SDL_WarpMouseInWindow
[asyncify] SDL_CreateCursor can change the state due to SDL_CreateColorCursor
[asyncify] SDL_CreateWindowAndRenderer can change the state due to SDL_CreateRenderer
[asyncify] SDL_CreateSoftwareRenderer can change the state due to SDL_RenderSetViewport
[asyncify] SurfaceSdlGraphicsManager::recreateScreenTexture\28\29 can change the state due to SDL_CreateTexture
[asyncify] SurfaceSdlGraphicsManager::unloadGFXMode\28\29 can change the state due to SDL_DestroyTexture
[asyncify] SurfaceSdlGraphicsManager::deinitializeRenderer\28\29 can change the state due to SDL_DestroyTexture
[asyncify] SurfaceSdlGraphicsManager::SDL_UpdateRects\28SDL_Surface*\2c\20int\2c\20SDL_Rect*\29 can change the state due to SDL_UpdateTexture
[asyncify] SDL_LockTextureToSurface can change the state due to SDL_LockTexture
[asyncify] SDL_RenderDrawPoint can change the state due to SDL_RenderDrawPointsF
[asyncify] SDL_RenderDrawPointF can change the state due to SDL_RenderDrawPointsF
[asyncify] SDL_RenderDrawLine can change the state due to SDL_RenderDrawLinesF
[asyncify] SDL_RenderDrawLineF can change the state due to SDL_RenderDrawLinesF
[asyncify] GLES2_UnlockTexture can change the state due to GLES2_UpdateTexture
[asyncify] GLES2_CacheShaders can change the state due to GLES2_CacheShader
[asyncify] SDL_LoadFile can change the state due to SDL_LoadFile_RW
[asyncify] legalstub$SDL_RWsize can change the state due to SDL_RWsize
[asyncify] readRlePixels can change the state due to SDL_RWread
[asyncify] DISKAUDIO_CaptureFromDevice can change the state due to SDL_RWread
[asyncify] legalstub$SDL_RWseek can change the state due to SDL_RWseek
[asyncify] legalstub$SDL_RWtell can change the state due to SDL_RWtell
[asyncify] SDL_SaveAllDollarTemplates can change the state due to SDL_RWwrite
[asyncify] legalstub$SDL_ReadLE64 can change the state due to SDL_ReadLE64
[asyncify] legalstub$SDL_ReadBE64 can change the state due to SDL_ReadBE64
[asyncify] legalstub$SDL_WriteLE64 can change the state due to SDL_WriteLE64
[asyncify] legalstub$SDL_WriteBE64 can change the state due to SDL_WriteBE64
[asyncify] SDL_SW_FillTriangle can change the state due to SDL_UpperBlit
[asyncify] SurfaceSdlGraphicsManager::drawOSD\28\29 can change the state due to SDL_UpperBlit
[asyncify] SDL_LowerBlitScaled can change the state due to SDL_PrivateLowerBlitScaled
[asyncify] SDL_DuplicateSurface can change the state due to SDL_ConvertSurface
[asyncify] SDL_ConvertSurfaceFormat can change the state due to SDL_ConvertSurface
[asyncify] SDL_GetTouchDeviceType can change the state due to SDL_GetTouch
[asyncify] SDL_GetNumTouchFingers can change the state due to SDL_GetTouch
[asyncify] legalstub$SDL_GetTouch can change the state due to SDL_GetTouch
[asyncify] SdlWindow::~SdlWindow\28\29 can change the state due to SDL_DestroyWindow
[asyncify] SdlWindow::destroyWindow\28\29 can change the state due to SDL_DestroyWindow
[asyncify] OSystem_SDL::detectAntiAliasingSupport\28\29 can change the state due to SDL_DestroyWindow
[asyncify] OSystem_SDL::engineInit\28\29 can change the state due to SDL_DisableScreenSaver
[asyncify] virtual\20thunk\20to\20OSystem_SDL::engineInit\28\29 can change the state due to SDL_DisableScreenSaver
[asyncify] SdlWindow::getDisplayDpi\28float*\2c\20float*\29\20const can change the state due to SDL_GetDisplayDPI
[asyncify] SDL_GetDisplayForWindow can change the state due to SDL_GetWindowDisplayIndex
[asyncify] SDL_OnWindowResized can change the state due to SDL_GetWindowDisplayIndex
[asyncify] SDL_OnWindowMoved can change the state due to SDL_GetWindowDisplayIndex
[asyncify] SdlWindow::getDesktopResolution\28\29 can change the state due to SDL_GetWindowDisplayIndex
[asyncify] SdlWindow::getDisplayIndex\28\29\20const can change the state due to SDL_GetWindowDisplayIndex
[asyncify] SdlWindow::setWindowCaption\28Common::String\20const&\29 can change the state due to SDL_SetWindowTitle
[asyncify] SDL_OnWindowShown can change the state due to SDL_UpdateFullscreenMode
[asyncify] SDL_OnWindowRestored can change the state due to SDL_UpdateFullscreenMode
[asyncify] SDL_OnWindowHidden can change the state due to SDL_UpdateFullscreenMode
[asyncify] SDL_OnWindowMinimized can change the state due to SDL_UpdateFullscreenMode
[asyncify] SdlWindow::iconifyWindow\28\29 can change the state due to SDL_MinimizeWindow
[asyncify] SW_CreateRenderer can change the state due to SDL_GetWindowSurface
[asyncify] SW_RenderPresent can change the state due to SDL_UpdateWindowSurface
[asyncify] SdlWindow::grabMouse\28bool\29 can change the state due to SDL_SetWindowMouseRect
[asyncify] SdlWindow::setMouseRect\28Common::Rect\20const&\29 can change the state due to SDL_SetWindowMouseRect
[asyncify] OSystem_SDL::engineDone\28\29 can change the state due to SDL_EnableScreenSaver
[asyncify] virtual\20thunk\20to\20OSystem_SDL::engineDone\28\29 can change the state due to SDL_EnableScreenSaver
[asyncify] OSystem_SDL::getOpenGLProcAddress\28char\20const*\29\20const can change the state due to SDL_GL_GetProcAddress
[asyncify] virtual\20thunk\20to\20OSystem_SDL::getOpenGLProcAddress\28char\20const*\29\20const can change the state due to SDL_GL_GetProcAddress
[asyncify] SDL_GL_DeduceMaxSupportedESProfile can change the state due to SDL_GL_ExtensionSupported
[asyncify] GLES2_GetOutputSize can change the state due to SDL_GL_GetDrawableSize
[asyncify] SdlWindow::getSdlDpiScalingFactor\28\29\20const can change the state due to SDL_GL_GetDrawableSize
[asyncify] GLES2_SetVSync can change the state due to SDL_GL_SetSwapInterval
[asyncify] OpenGLSdlGraphicsManager::getFeatureState\28OSystem::Feature\29\20const can change the state due to SDL_GL_GetSwapInterval
[asyncify] virtual\20thunk\20to\20OpenGLSdlGraphicsManager::getFeatureState\28OSystem::Feature\29\20const can change the state due to SDL_GL_GetSwapInterval
[asyncify] OpenGLSdlGraphics3dManager::getFeatureState\28OSystem::Feature\29\20const can change the state due to SDL_GL_GetSwapInterval
[asyncify] OpenGLSdlGraphics3dManager::isVSyncEnabled\28\29\20const can change the state due to SDL_GL_GetSwapInterval
[asyncify] virtual\20thunk\20to\20OpenGLSdlGraphics3dManager::getFeatureState\28OSystem::Feature\29\20const can change the state due to SDL_GL_GetSwapInterval
[asyncify] GLES2_RenderPresent can change the state due to SDL_GL_SwapWindow
[asyncify] OpenGLSdlGraphicsManager::refreshScreen\28\29 can change the state due to SDL_GL_SwapWindow
[asyncify] OpenGLSdlGraphics3dManager::deinitializeRenderer\28\29 can change the state due to SDL_GL_DeleteContext
[asyncify] SdlWindow::getSDLWMInformation\28SDL_SysWMinfo*\29\20const can change the state due to SDL_GetWindowWMInfo
[asyncify] png_set_sig_bytes can change the state due to png_error
[asyncify] png_data_freer can change the state due to png_error
[asyncify] png_colorspace_set_chromaticities can change the state due to png_error
[asyncify] png_colorspace_set_endpoints can change the state due to png_error
[asyncify] png_colorspace_set_rgb_coefficients can change the state due to png_error
[asyncify] png_check_IHDR can change the state due to png_error
[asyncify] png_ascii_from_fp can change the state due to png_error
[asyncify] png_ascii_from_fixed can change the state due to png_error
[asyncify] png_benign_error can change the state due to png_error
[asyncify] png_chunk_error can change the state due to png_error
[asyncify] png_app_warning can change the state due to png_error
[asyncify] png_app_error can change the state due to png_error
[asyncify] png_chunk_report can change the state due to png_error
[asyncify] png_fixed_error can change the state due to png_error
[asyncify] png_set_longjmp_fn can change the state due to png_error
[asyncify] png_malloc_default can change the state due to png_error
[asyncify] png_push_read_IDAT can change the state due to png_error
[asyncify] png_push_read_sig can change the state due to png_error
[asyncify] png_push_save_buffer can change the state due to png_error
[asyncify] png_process_IDAT_data can change the state due to png_error
[asyncify] png_create_colormap_entry can change the state due to png_error
[asyncify] png_read_png can change the state due to png_error
[asyncify] png_image_memory_read can change the state due to png_error
[asyncify] png_image_read_colormap can change the state due to png_error
[asyncify] png_image_read_colormapped can change the state due to png_error
[asyncify] png_image_read_direct can change the state due to png_error
[asyncify] decode_gamma can change the state due to png_error
[asyncify] png_image_read_and_map can change the state due to png_error
[asyncify] png_image_read_composite can change the state due to png_error
[asyncify] png_image_read_background can change the state due to png_error
[asyncify] png_default_read_data can change the state due to png_error
[asyncify] png_set_alpha_mode_fixed can change the state due to png_error
[asyncify] png_set_gamma_fixed can change the state due to png_error
[asyncify] png_set_rgb_to_gray_fixed can change the state due to png_error
[asyncify] png_init_read_transformations can change the state due to png_error
[asyncify] png_read_transform_info can change the state due to png_error
[asyncify] png_get_uint_31 can change the state due to png_error
[asyncify] png_read_sig can change the state due to png_error
[asyncify] png_read_chunk_header can change the state due to png_error
[asyncify] png_handle_IHDR can change the state due to png_error
[asyncify] png_combine_row can change the state due to png_error
[asyncify] png_read_IDAT_data can change the state due to png_error
[asyncify] png_read_start_row can change the state due to png_error
[asyncify] png_set_sCAL_s can change the state due to png_error
[asyncify] png_set_PLTE can change the state due to png_error
[asyncify] png_set_text can change the state due to png_error
[asyncify] png_set_unknown_chunks can change the state due to png_error
[asyncify] png_set_unknown_chunk_location can change the state due to png_error
[asyncify] png_set_compression_buffer_size can change the state due to png_error
[asyncify] png_default_write_data can change the state due to png_error
[asyncify] png_write_info can change the state due to png_error
[asyncify] png_write_end can change the state due to png_error
[asyncify] png_set_filter can change the state due to png_error
[asyncify] image_memory_write can change the state due to png_error
[asyncify] png_image_write_main can change the state due to png_error
[asyncify] png_write_image_16bit can change the state due to png_error
[asyncify] png_write_complete_chunk can change the state due to png_error
[asyncify] png_write_IHDR can change the state due to png_error
[asyncify] png_write_PLTE can change the state due to png_error
[asyncify] png_compress_IDAT can change the state due to png_error
[asyncify] png_write_iCCP can change the state due to png_error
[asyncify] png_write_sPLT can change the state due to png_error
[asyncify] png_write_tEXt can change the state due to png_error
[asyncify] png_write_zTXt can change the state due to png_error
[asyncify] png_write_iTXt can change the state due to png_error
[asyncify] png_write_pCAL can change the state due to png_error
[asyncify] png_default_error can change the state due to png_longjmp
[asyncify] png_destroy_read_struct can change the state due to png_destroy_png_struct
[asyncify] png_destroy_write_struct can change the state due to png_destroy_png_struct
[asyncify] png_zfree can change the state due to png_free
[asyncify] png_destroy_info_struct can change the state due to png_free
[asyncify] png_free_data can change the state due to png_free
[asyncify] png_colorspace_sync_info can change the state due to png_free
[asyncify] png_colorspace_sync can change the state due to png_free
[asyncify] png_handle_sCAL can change the state due to png_free
[asyncify] png_destroy_gamma_table can change the state due to png_free
[asyncify] png_image_free can change the state due to png_free
[asyncify] png_set_quantize can change the state due to png_free
[asyncify] png_read_buffer can change the state due to png_free
[asyncify] png_handle_sPLT can change the state due to png_free
[asyncify] png_handle_eXIf can change the state due to png_free
[asyncify] png_handle_pCAL can change the state due to png_free
[asyncify] png_handle_tEXt can change the state due to png_free
[asyncify] png_handle_zTXt can change the state due to png_free
[asyncify] png_decompress_chunk can change the state due to png_free
[asyncify] png_handle_iTXt can change the state due to png_free
[asyncify] png_cache_unknown_chunk can change the state due to png_free
[asyncify] png_set_eXIf_1 can change the state due to png_free
[asyncify] png_set_iCCP can change the state due to png_free
[asyncify] png_set_text_2 can change the state due to png_free
[asyncify] png_set_sPLT can change the state due to png_free
[asyncify] png_set_keep_unknown_chunks can change the state due to png_free
[asyncify] png_free_buffer_list can change the state due to png_free
[asyncify] png_build_gamma_table can change the state due to png_calloc
[asyncify] png_build_16bit_table can change the state due to png_calloc
[asyncify] png_write_start_row can change the state due to png_calloc
[asyncify] png_set_tRNS can change the state due to png_malloc
[asyncify] png_create_info_struct can change the state due to png_malloc_base
[asyncify] png_info_init_3 can change the state due to png_malloc_base
[asyncify] png_handle_iCCP can change the state due to png_malloc_base
[asyncify] png_text_compress can change the state due to png_malloc_base
[asyncify] png_zalloc can change the state due to png_malloc_warn
[asyncify] png_image_read_init can change the state due to png_malloc_warn
[asyncify] png_set_hIST can change the state due to png_malloc_warn
[asyncify] png_set_pCAL can change the state due to png_malloc_warn
[asyncify] png_image_write_init can change the state due to png_malloc_warn
[asyncify] png_process_data can change the state due to png_push_read_chunk
[asyncify] png_process_some_data can change the state due to png_push_read_chunk
[asyncify] png_read_rows can change the state due to png_read_row
[asyncify] png_read_image can change the state due to png_read_row
[asyncify] png_crc_read can change the state due to png_read_data
[asyncify] png_crc_finish can change the state due to png_read_data
[asyncify] png_crc_error can change the state due to png_read_data
[asyncify] png_handle_PLTE can change the state due to png_read_data
[asyncify] png_handle_gAMA can change the state due to png_read_data
[asyncify] png_handle_sBIT can change the state due to png_read_data
[asyncify] png_handle_cHRM can change the state due to png_read_data
[asyncify] png_handle_sRGB can change the state due to png_read_data
[asyncify] png_inflate_read can change the state due to png_read_data
[asyncify] png_handle_tRNS can change the state due to png_read_data
[asyncify] png_handle_tIME can change the state due to png_read_data
[asyncify] png_handle_bKGD can change the state due to png_read_data
[asyncify] png_handle_hIST can change the state due to png_read_data
[asyncify] png_handle_pHYs can change the state due to png_read_data
[asyncify] png_handle_oFFs can change the state due to png_read_data
[asyncify] png_read_info can change the state due to png_handle_unknown
[asyncify] png_read_end can change the state due to png_handle_unknown
[asyncify] png_write_sig can change the state due to png_write_data
[asyncify] png_write_chunk_start can change the state due to png_write_data
[asyncify] png_write_chunk_data can change the state due to png_write_data
[asyncify] png_write_chunk_end can change the state due to png_write_data
[asyncify] png_write_eXIf can change the state due to png_write_data
[asyncify] png_write_hIST can change the state due to png_write_data
[asyncify] png_write_flush can change the state due to png_flush
[asyncify] png_write_rows can change the state due to png_write_row
[asyncify] png_write_image can change the state due to png_write_row
[asyncify] png_write_png can change the state due to png_write_row
[asyncify] png_write_image_8bit can change the state due to png_write_row
[asyncify] Common::wrapCompressedWriteStream\28Common::WriteStream*\29 can change the state due to deflateInit2_
[asyncify] png_deflate_claim can change the state due to deflateInit2_
[asyncify] deflateInit_ can change the state due to deflateInit2_
[asyncify] gz_init can change the state due to deflateInit2_
[asyncify] compress2 can change the state due to deflateEnd
[asyncify] compress can change the state due to deflateEnd
[asyncify] gzclose_w can change the state due to deflateEnd
[asyncify] deflateParams can change the state due to deflate
[asyncify] gz_comp can change the state due to deflate
[asyncify] png_inflate_claim can change the state due to inflateReset2
[asyncify] Common::inflateZlibHeaderless\28unsigned\20char*\2c\20unsigned\20int\2c\20unsigned\20char\20const*\2c\20unsigned\20int\2c\20unsigned\20char\20const*\2c\20unsigned\20int\29 can change the state due to inflateInit2_
[asyncify] Common::inflateZlibInstallShield\28unsigned\20char*\2c\20unsigned\20int\2c\20unsigned\20char\20const*\2c\20unsigned\20int\29 can change the state due to inflateInit2_
[asyncify] gz_look can change the state due to inflateInit2_
[asyncify] uncompress2 can change the state due to inflateInit_
[asyncify] inflate can change the state due to updatewindow
[asyncify] inflateSetDictionary can change the state due to updatewindow
[asyncify] gzclose_r can change the state due to inflateEnd
[asyncify] cf2_interpT2CharString can change the state due to cf2_glyphpath_lineTo
[asyncify] cf2_glyphpath_moveTo can change the state due to cf2_glyphpath_lineTo
[asyncify] cf2_glyphpath_closeOpenPath can change the state due to cf2_glyphpath_lineTo
[asyncify] cf2_doFlex can change the state due to cf2_glyphpath_curveTo
[asyncify] cff_subfont_load can change the state due to cff_parser_run
[asyncify] af_latin_metrics_init can change the state due to FT_Get_Advance
[asyncify] af_cjk_metrics_init can change the state due to FT_Get_Advance
[asyncify] af_indic_metrics_init can change the state due to FT_Get_Advance
[asyncify] FTC_Manager_LookupSize can change the state due to FTC_MruList_New
[asyncify] FTC_Manager_LookupFace can change the state due to FTC_MruList_New
[asyncify] FTC_CMapCache_Lookup can change the state due to FTC_MruList_New
[asyncify] ftc_scaler_lookup_size can change the state due to FTC_MruList_New
[asyncify] ftc_basic_family_get_count can change the state due to FTC_MruList_New
[asyncify] ftc_snode_compare can change the state due to ftc_node_destroy
[asyncify] FTC_CMapCache_New can change the state due to FTC_Manager_RegisterCache
[asyncify] FTC_ImageCache_New can change the state due to FTC_Manager_RegisterCache
[asyncify] FTC_SBitCache_New can change the state due to FTC_Manager_RegisterCache
[asyncify] Graphics::FreeType::Glyph_Copy\28FT_GlyphRec_*\2c\20FT_GlyphRec_**\29 can change the state due to FT_Glyph_Copy
[asyncify] FT_Glyph_Stroke can change the state due to FT_Glyph_Copy
[asyncify] FT_Glyph_StrokeBorder can change the state due to FT_Glyph_Copy
[asyncify] Graphics::FreeType::Done_Glyph\28FT_GlyphRec_*\29 can change the state due to FT_Done_Glyph
[asyncify] Graphics::FreeType::Get_Glyph\28FT_GlyphSlotRec_*\2c\20FT_GlyphRec_**\29 can change the state due to FT_Get_Glyph
[asyncify] ftc_basic_family_load_glyph can change the state due to FT_Get_Glyph
[asyncify] Graphics::FreeType::Glyph_To_Bitmap\28FT_GlyphRec_**\2c\20FT_Render_Mode_\2c\20FT_Vector_*\2c\20unsigned\20char\29 can change the state due to FT_Glyph_To_Bitmap
[asyncify] FT_Stream_OpenGzip can change the state due to inflateInit2_.1
[asyncify] ft_gzip_stream_io can change the state due to ft_gzip_file_io
[asyncify] ft_gzip_stream_close can change the state due to inflateEnd.1
[asyncify] FT_Open_Face can change the state due to FT_New_GlyphSlot
[asyncify] T42_GlyphSlot_Init can change the state due to FT_New_GlyphSlot
[asyncify] T42_GlyphSlot_Done can change the state due to FT_Done_GlyphSlot
[asyncify] Graphics::FreeType::Load_Glyph\28FT_FaceRec_*\2c\20unsigned\20int\2c\20int\29 can change the state due to FT_Load_Glyph
[asyncify] af_cjk_metrics_init_widths can change the state due to FT_Load_Glyph
[asyncify] ftc_basic_family_load_bitmap can change the state due to FT_Load_Glyph
[asyncify] Graphics::FreeType::Get_Char_Index\28FT_FaceRec_*\2c\20unsigned\20long\29 can change the state due to FT_Get_Char_Index
[asyncify] af_get_char_index can change the state due to FT_Get_Char_Index
[asyncify] af_face_globals_new can change the state due to FT_Get_Char_Index
[asyncify] T1_Read_PFM can change the state due to FT_Get_Char_Index
[asyncify] T42_Size_Init can change the state due to FT_New_Size
[asyncify] FT_Done_Face can change the state due to destroy_face
[asyncify] FT_Done_Library can change the state due to destroy_face
[asyncify] ftc_size_node_reset can change the state due to FT_Done_Size
[asyncify] ftc_size_node_done can change the state due to FT_Done_Size
[asyncify] T42_Size_Done can change the state due to FT_Done_Size
[asyncify] T42_Size_Select can change the state due to FT_Select_Size
[asyncify] FT_Set_Char_Size can change the state due to FT_Request_Size
[asyncify] FT_Set_Pixel_Sizes can change the state due to FT_Request_Size
[asyncify] T42_Size_Request can change the state due to FT_Request_Size
[asyncify] Graphics::FreeType::Get_Kerning\28FT_FaceRec_*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int\2c\20FT_Vector_*\29 can change the state due to FT_Get_Kerning
[asyncify] Graphics::TTFFont::getKerningOffset\28unsigned\20int\2c\20unsigned\20int\29\20const can change the state due to FT_Get_Kerning
[asyncify] PCF_Face_Init can change the state due to FT_CMap_New
[asyncify] pfr_face_init can change the state due to FT_CMap_New
[asyncify] FNT_Face_Init can change the state due to FT_CMap_New
[asyncify] tt_check_single_notdef can change the state due to FT_Get_Glyph_Name
[asyncify] Graphics::TTFFont::computePointSizeFromHeaders\28int\29\20const can change the state due to FT_Get_Sfnt_Table
[asyncify] Graphics::TTFFont::readTTFTable\28unsigned\20long\29\20const can change the state due to FT_Load_Sfnt_Table
[asyncify] FT_Add_Default_Modules can change the state due to FT_Add_Module
[asyncify] t1_decoder_init can change the state due to ft_module_get_service
[asyncify] FT_Outline_Get_BBox can change the state due to FT_Outline_Decompose
[asyncify] FT_Stream_Free can change the state due to FT_Stream_Close
[asyncify] open_face_from_buffer can change the state due to FT_Stream_Close
[asyncify] PCF_Face_Done can change the state due to FT_Stream_Close
[asyncify] cff_index_get_pointers can change the state due to FT_Stream_Seek
[asyncify] CFF_Load_FD_Select can change the state due to FT_Stream_Seek
[asyncify] cff_charset_load can change the state due to FT_Stream_Seek
[asyncify] cff_encoding_load can change the state due to FT_Stream_Seek
[asyncify] cff_index_access_element can change the state due to FT_Stream_Seek
[asyncify] ft_gzip_check_header can change the state due to FT_Stream_Seek
[asyncify] FT_Stream_OpenLZW can change the state due to FT_Stream_Seek
[asyncify] ft_lzw_stream_io can change the state due to FT_Stream_Seek
[asyncify] ft_lzwstate_io can change the state due to FT_Stream_Seek
[asyncify] open_face_PS_from_sfnt_stream can change the state due to FT_Stream_Seek
[asyncify] IsMacResource can change the state due to FT_Stream_Seek
[asyncify] FT_Raccess_Get_HeaderInfo can change the state due to FT_Stream_Seek
[asyncify] FT_Raccess_Get_DataOffsets can change the state due to FT_Stream_Seek
[asyncify] FT_Get_Sfnt_Name can change the state due to FT_Stream_Seek
[asyncify] pcf_load_font can change the state due to FT_Stream_Seek
[asyncify] PCF_Glyph_Load can change the state due to FT_Stream_Seek
[asyncify] pfr_slot_load can change the state due to FT_Stream_Seek
[asyncify] pfr_glyph_load_rec can change the state due to FT_Stream_Seek
[asyncify] pfr_face_get_kerning can change the state due to FT_Stream_Seek
[asyncify] tt_face_goto_table can change the state due to FT_Stream_Seek
[asyncify] tt_face_load_font_dir can change the state due to FT_Stream_Seek
[asyncify] tt_face_get_metrics can change the state due to FT_Stream_Seek
[asyncify] sfnt_get_ps_name can change the state due to FT_Stream_Seek
[asyncify] tt_face_find_bdf_prop can change the state due to FT_Stream_Seek
[asyncify] TT_Access_Glyph_Frame can change the state due to FT_Stream_Seek
[asyncify] TT_Vary_Apply_Glyph_Deltas can change the state due to FT_Stream_Seek
[asyncify] TT_Process_Composite_Glyph can change the state due to FT_Stream_Seek
[asyncify] check_type1_format can change the state due to FT_Stream_Seek
[asyncify] cid_hex_to_binary can change the state due to FT_Stream_Seek
[asyncify] fnt_font_load can change the state due to FT_Stream_Seek
[asyncify] cff_index_init can change the state due to FT_Stream_Skip
[asyncify] raccess_guess_apple_generic can change the state due to FT_Stream_Skip
[asyncify] pcf_get_accel can change the state due to FT_Stream_Skip
[asyncify] pcf_get_encodings can change the state due to FT_Stream_Skip
[asyncify] tt_face_load_any can change the state due to FT_Stream_ReadAt
[asyncify] ft_lzwstate_get_code can change the state due to FT_Stream_TryRead
[asyncify] _tt_check_patents_in_range can change the state due to FT_Stream_EnterFrame
[asyncify] FT_Stream_ExtractFrame can change the state due to FT_Stream_EnterFrame
[asyncify] FT_Stream_ReadFields can change the state due to FT_Stream_EnterFrame
[asyncify] _bdf_parse_start can change the state due to ft_mem_alloc
[asyncify] bdf_interpret_style can change the state due to ft_mem_alloc
[asyncify] hash_insert can change the state due to ft_mem_alloc
[asyncify] cff_index_get_name can change the state due to ft_mem_alloc
[asyncify] cf2_decoder_parse_charstrings can change the state due to ft_mem_alloc
[asyncify] FTC_Manager_New can change the state due to ft_mem_alloc
[asyncify] ftc_cmap_node_new can change the state due to ft_mem_alloc
[asyncify] ftc_sbit_copy_bitmap can change the state due to ft_mem_alloc
[asyncify] FT_GlyphLoader_New can change the state due to ft_mem_alloc
[asyncify] ft_gzip_alloc can change the state due to ft_mem_alloc
[asyncify] zcalloc.1 can change the state due to ft_mem_alloc
[asyncify] FT_Stream_New can change the state due to ft_mem_alloc
[asyncify] ft_glyphslot_alloc_bitmap can change the state due to ft_mem_alloc
[asyncify] FT_New_Library can change the state due to ft_mem_alloc
[asyncify] raccess_make_file_name can change the state due to ft_mem_alloc
[asyncify] raccess_guess_darwin_newvfs can change the state due to ft_mem_alloc
[asyncify] raccess_guess_darwin_hfsplus can change the state due to ft_mem_alloc
[asyncify] FT_Stroker_New can change the state due to ft_mem_alloc
[asyncify] pcf_interpret_style can change the state due to ft_mem_alloc
[asyncify] pfr_aux_name_load can change the state due to ft_mem_alloc
[asyncify] pfr_extra_item_load_font_id can change the state due to ft_mem_alloc
[asyncify] pfr_extra_item_load_kerning_pairs can change the state due to ft_mem_alloc
[asyncify] ps_table_done can change the state due to ft_mem_alloc
[asyncify] ps_table_add can change the state due to ft_mem_alloc
[asyncify] ps_parser_load_field can change the state due to ft_mem_alloc
[asyncify] afm_parser_init can change the state due to ft_mem_alloc
[asyncify] psh_globals_new can change the state due to ft_mem_alloc
[asyncify] ft_black_new can change the state due to ft_mem_alloc
[asyncify] gray_raster_new can change the state due to ft_mem_alloc
[asyncify] TT_New_Context can change the state due to ft_mem_alloc
[asyncify] T1_Get_MM_Var can change the state due to ft_mem_alloc
[asyncify] t1_allocate_blend can change the state due to ft_mem_alloc
[asyncify] FT_Bitmap_Copy can change the state due to ft_mem_qalloc
[asyncify] af_glyph_hints_reload can change the state due to ft_mem_realloc
[asyncify] af_latin_hints_compute_segments can change the state due to ft_mem_realloc
[asyncify] af_axis_hints_new_edge can change the state due to ft_mem_realloc
[asyncify] hash_init can change the state due to ft_mem_realloc
[asyncify] _bdf_list_split can change the state due to ft_mem_realloc
[asyncify] _bdf_add_property can change the state due to ft_mem_realloc
[asyncify] _bdf_parse_glyphs can change the state due to ft_mem_realloc
[asyncify] cf2_arrstack_push can change the state due to ft_mem_realloc
[asyncify] ftc_cache_resize can change the state due to ft_mem_realloc
[asyncify] ftc_cache_init can change the state due to ft_mem_realloc
[asyncify] ftc_gcache_init can change the state due to ft_mem_realloc
[asyncify] FT_GlyphLoader_CreateExtra can change the state due to ft_mem_realloc
[asyncify] FT_GlyphLoader_CheckPoints can change the state due to ft_mem_realloc
[asyncify] FT_GlyphLoader_CheckSubGlyphs can change the state due to ft_mem_realloc
[asyncify] FT_Outline_New_Internal can change the state due to ft_mem_realloc
[asyncify] tt_name_entry_ascii_from_other can change the state due to ft_mem_realloc
[asyncify] ft_stroke_border_lineto can change the state due to ft_mem_realloc
[asyncify] ft_stroke_border_conicto can change the state due to ft_mem_realloc
[asyncify] ft_stroke_border_cubicto can change the state due to ft_mem_realloc
[asyncify] FT_Stroker_EndSubPath can change the state due to ft_mem_realloc
[asyncify] pfr_extra_item_load_bitmap_info can change the state due to ft_mem_realloc
[asyncify] pfr_extra_item_load_stem_snaps can change the state due to ft_mem_realloc
[asyncify] ps_table_new can change the state due to ft_mem_realloc
[asyncify] afm_parser_parse can change the state due to ft_mem_realloc
[asyncify] ps_hints_apply can change the state due to ft_mem_realloc
[asyncify] psh_hint_table_init can change the state due to ft_mem_realloc
[asyncify] ps_hints_t1reset can change the state due to ft_mem_realloc
[asyncify] ps_hints_t1stem3 can change the state due to ft_mem_realloc
[asyncify] ps_dimension_end can change the state due to ft_mem_realloc
[asyncify] ps_dimension_add_t1stem can change the state due to ft_mem_realloc
[asyncify] ps_dimension_set_mask_bits can change the state due to ft_mem_realloc
[asyncify] tt_cmap14_variants can change the state due to ft_mem_realloc
[asyncify] tt_cmap14_char_variants can change the state due to ft_mem_realloc
[asyncify] tt_cmap14_variant_chars can change the state due to ft_mem_realloc
[asyncify] tt_cmap14_get_def_chars can change the state due to ft_mem_realloc
[asyncify] tt_name_entry_ascii_from_utf16 can change the state due to ft_mem_realloc
[asyncify] TT_Load_Context can change the state due to ft_mem_realloc
[asyncify] ft_var_readpackedpoints can change the state due to ft_mem_realloc
[asyncify] ft_var_readpackeddeltas can change the state due to ft_mem_realloc
[asyncify] Update_Max can change the state due to ft_mem_realloc
[asyncify] FNT_Load_Glyph can change the state due to ft_mem_realloc
[asyncify] FT_Bitmap_Embolden can change the state due to ft_mem_qrealloc
[asyncify] FT_Bitmap_Convert can change the state due to ft_mem_qrealloc
[asyncify] af_glyph_hints_done can change the state due to ft_mem_free
[asyncify] bdf_free_font can change the state due to ft_mem_free
[asyncify] BDF_Face_Done can change the state due to ft_mem_free
[asyncify] _bdf_set_default_spacing can change the state due to ft_mem_free
[asyncify] cff_index_done can change the state due to ft_mem_free
[asyncify] cff_cmap_unicode_done can change the state due to ft_mem_free
[asyncify] FT_Bitmap_Done can change the state due to ft_mem_free
[asyncify] ftc_cmap_node_free can change the state due to ft_mem_free
[asyncify] FT_GlyphLoader_Reset can change the state due to ft_mem_free
[asyncify] FT_GlyphLoader_Done can change the state due to ft_mem_free
[asyncify] FT_TrueTypeGX_Free can change the state due to ft_mem_free
[asyncify] FT_ClassicKern_Free can change the state due to ft_mem_free
[asyncify] ft_gzip_free can change the state due to ft_mem_free
[asyncify] zcfree.1 can change the state due to ft_mem_free
[asyncify] ft_lzw_stream_close can change the state due to ft_mem_free
[asyncify] ft_lzwstate_done can change the state due to ft_mem_free
[asyncify] ft_glyphslot_free_bitmap can change the state due to ft_mem_free
[asyncify] ft_glyphslot_set_bitmap can change the state due to ft_mem_free
[asyncify] memory_stream_close can change the state due to ft_mem_free
[asyncify] FT_OpenType_Free can change the state due to ft_mem_free
[asyncify] FT_Outline_Done_Internal can change the state due to ft_mem_free
[asyncify] FT_Outline_Done can change the state due to ft_mem_free
[asyncify] raccess_guess_darwin_ufs_export can change the state due to ft_mem_free
[asyncify] raccess_guess_linux_double can change the state due to ft_mem_free
[asyncify] raccess_guess_linux_netatalk can change the state due to ft_mem_free
[asyncify] FT_Stream_ReleaseFrame can change the state due to ft_mem_free
[asyncify] FT_Stream_ExitFrame can change the state due to ft_mem_free
[asyncify] FT_Stroker_Done can change the state due to ft_mem_free
[asyncify] pfr_face_done can change the state due to ft_mem_free
[asyncify] pfr_slot_done can change the state due to ft_mem_free
[asyncify] ps_table_release can change the state due to ft_mem_free
[asyncify] afm_parser_done can change the state due to ft_mem_free
[asyncify] t1_cmap_unicode_done can change the state due to ft_mem_free
[asyncify] psh_globals_destroy can change the state due to ft_mem_free
[asyncify] ps_dimension_done can change the state due to ft_mem_free
[asyncify] ft_black_done can change the state due to ft_mem_free
[asyncify] tt_cmap14_done can change the state due to ft_mem_free
[asyncify] sfnt_stream_close can change the state due to ft_mem_free
[asyncify] tt_face_free_name can change the state due to ft_mem_free
[asyncify] tt_face_free_ps_names can change the state due to ft_mem_free
[asyncify] gray_raster_done can change the state due to ft_mem_free
[asyncify] tt_size_done_bytecode can change the state due to ft_mem_free
[asyncify] tt_glyphzone_done can change the state due to ft_mem_free
[asyncify] T1_Done_Blend can change the state due to ft_mem_free
[asyncify] T1_Face_Done can change the state due to ft_mem_free
[asyncify] cid_face_done can change the state due to ft_mem_free
[asyncify] T42_Face_Done can change the state due to ft_mem_free
[asyncify] FNT_Face_Done can change the state due to ft_mem_free
[asyncify] Render_Glyph can change the state due to Render_Single_Pass
[asyncify] Conic_To can change the state due to Bezier_Up
[asyncify] Cubic_To can change the state due to Bezier_Up
[asyncify] sfnt_get_glyph_name can change the state due to tt_face_get_ps_name
[asyncify] sfnt_get_name_index can change the state due to tt_face_get_ps_name
[asyncify] tt_sbit_decoder_load_image can change the state due to tt_sbit_decoder_load_bitmap
[asyncify] gray_raster_render can change the state due to gray_convert_glyph
[asyncify] ft_smooth_render can change the state due to ft_smooth_render_generic
[asyncify] ft_smooth_render_lcd can change the state due to ft_smooth_render_generic
[asyncify] ft_smooth_render_lcd_v can change the state due to ft_smooth_render_generic
[asyncify] TT_Process_Simple_Glyph can change the state due to TT_Hint_Glyph
[asyncify] __lookup_serv can change the state due to __fclose_ca
[asyncify] __get_resolv_conf can change the state due to __fclose_ca
[asyncify] do_putc can change the state due to __overflow
[asyncify] locking_putc can change the state due to __overflow
[asyncify] __fputwc_unlocked can change the state due to __overflow
[asyncify] do_putc.1 can change the state due to __overflow
[asyncify] locking_putc.1 can change the state due to __overflow
[asyncify] putc_unlocked can change the state due to __overflow
[asyncify] do_putc.2 can change the state due to __overflow
[asyncify] locking_putc.2 can change the state due to __overflow
[asyncify] putchar_unlocked can change the state due to __overflow
[asyncify] puts can change the state due to __overflow
[asyncify] setrlimit can change the state due to __synccall
[asyncify] ungetc can change the state due to __toread
[asyncify] ungetwc can change the state due to __toread
[asyncify] vfscanf can change the state due to __toread
[asyncify] do_getc can change the state due to __uflow
[asyncify] locking_getc can change the state due to __uflow
[asyncify] fgetln can change the state due to __uflow
[asyncify] fgets can change the state due to __uflow
[asyncify] __fgetwc_unlocked_internal can change the state due to __uflow
[asyncify] do_getc.1 can change the state due to __uflow
[asyncify] locking_getc.1 can change the state due to __uflow
[asyncify] getc_unlocked can change the state due to __uflow
[asyncify] do_getc.2 can change the state due to __uflow
[asyncify] locking_getc.2 can change the state due to __uflow
[asyncify] getchar_unlocked can change the state due to __uflow
[asyncify] getdelim can change the state due to __uflow
[asyncify] gets can change the state due to __uflow
[asyncify] __shgetc can change the state due to __uflow
[asyncify] Video::SRTParser::getSubtitle\28unsigned\20int\29 can change the state due to bsearch
[asyncify] SDL_bsearch can change the state due to bsearch
[asyncify] emscripten_console_logf can change the state due to vlogf
[asyncify] emscripten_console_errorf can change the state due to vlogf
[asyncify] emscripten_console_warnf can change the state due to vlogf
[asyncify] _emscripten_outf can change the state due to vlogf
[asyncify] _emscripten_errf can change the state due to vlogf
[asyncify] png_image_begin_read_from_file can change the state due to fclose
[asyncify] png_image_write_to_file can change the state due to fclose
[asyncify] FT_Stream_Open can change the state due to fclose
[asyncify] ft_ansi_stream_close can change the state due to fclose
[asyncify] freopen can change the state due to fclose
[asyncify] endmntent can change the state due to fclose
[asyncify] std::__2::basic_filebuf<char\2c\20std::__2::char_traits<char>>::open\28char\20const*\2c\20unsigned\20int\29 can change the state due to fclose
[asyncify] std::__2::basic_filebuf<char\2c\20std::__2::char_traits<char>>::__open\28int\2c\20unsigned\20int\29 can change the state due to fclose
[asyncify] StdioStream::~StdioStream\28\29 can change the state due to fclose
[asyncify] StdioStream::~StdioStream\28\29.1 can change the state due to fclose
[asyncify] virtual\20thunk\20to\20StdioStream::~StdioStream\28\29 can change the state due to fclose
[asyncify] non-virtual\20thunk\20to\20StdioStream::~StdioStream\28\29 can change the state due to fclose
[asyncify] StdioStream::~StdioStream\28\29.2 can change the state due to fclose
[asyncify] virtual\20thunk\20to\20StdioStream::~StdioStream\28\29.1 can change the state due to fclose
[asyncify] non-virtual\20thunk\20to\20StdioStream::~StdioStream\28\29.1 can change the state due to fclose
[asyncify] png_default_flush can change the state due to fflush
[asyncify] _flushlbf can change the state due to fflush
[asyncify] std::__2::__stdoutbuf<char>::sync\28\29 can change the state due to fflush
[asyncify] std::__2::__stdoutbuf<wchar_t>::sync\28\29 can change the state due to fflush
[asyncify] StdioStream::flush\28\29 can change the state due to fflush
[asyncify] non-virtual\20thunk\20to\20StdioStream::flush\28\29 can change the state due to fflush
[asyncify] stdio_read can change the state due to fread
[asyncify] ft_ansi_stream_io can change the state due to fread
[asyncify] getw can change the state due to fread
[asyncify] std::__2::basic_filebuf<char\2c\20std::__2::char_traits<char>>::underflow\28\29 can change the state due to fread
[asyncify] StdioStream::read\28void*\2c\20unsigned\20int\29 can change the state due to fread
[asyncify] virtual\20thunk\20to\20StdioStream::read\28void*\2c\20unsigned\20int\29 can change the state due to fread
[asyncify] __fseeko can change the state due to __fseeko_unlocked
[asyncify] rewind can change the state due to __fseeko_unlocked
[asyncify] __ftello can change the state due to __ftello_unlocked
[asyncify] fputws can change the state due to __fwritex
[asyncify] fwrite can change the state due to __fwritex
[asyncify] out can change the state due to __fwritex
[asyncify] glob can change the state due to do_glob
[asyncify] call_once can change the state due to __pthread_once
[asyncify] __emutls_get_address can change the state due to __pthread_once
[asyncify] __rtnetlink_enumerate can change the state due to __netlink_enumerate
[asyncify] nftw can change the state due to do_nftw
[asyncify] __res_msend_rc can change the state due to _pthread_cleanup_pop
[asyncify] __qsort_r can change the state due to sift
[asyncify] kill can change the state due to raise
[asyncify] pthread_sigmask can change the state due to raise
[asyncify] twalk can change the state due to walk
[asyncify] vfprintf can change the state due to __vfprintf_internal
[asyncify] vfiprintf can change the state due to __vfprintf_internal
[asyncify] __small_vfprintf can change the state due to __vfprintf_internal
[asyncify] std::__2::__shared_weak_count::__release_shared\5babi:v15006\5d\28\29 can change the state due to std::__2::__shared_count::__release_shared\5babi:v15006\5d\28\29
[asyncify] std::__2::future<void>::~future\28\29 can change the state due to std::__2::__shared_count::__release_shared\5babi:v15006\5d\28\29
[asyncify] std::__2::promise<void>::~promise\28\29 can change the state due to std::__2::__shared_count::__release_shared\5babi:v15006\5d\28\29
[asyncify] std::__2::shared_future<void>::~shared_future\28\29 can change the state due to std::__2::__shared_count::__release_shared\5babi:v15006\5d\28\29
[asyncify] std::__2::shared_future<void>::operator=\28std::__2::shared_future<void>\20const&\29 can change the state due to std::__2::__shared_count::__release_shared\5babi:v15006\5d\28\29
[asyncify] std::__2::__release_shared_count::operator\28\29\28std::__2::__shared_count*\29 can change the state due to std::__2::__shared_count::__release_shared\5babi:v15006\5d\28\29
[asyncify] std::__2::locale::__imp::install\28std::__2::locale::facet*\2c\20long\29 can change the state due to std::__2::__shared_count::__release_shared\5babi:v15006\5d\28\29
[asyncify] std::__2::locale::__imp::~__imp\28\29 can change the state due to std::__2::__shared_count::__release_shared\5babi:v15006\5d\28\29
[asyncify] std::__2::locale::~locale\28\29 can change the state due to std::__2::__shared_count::__release_shared\5babi:v15006\5d\28\29
[asyncify] std::__2::locale::operator=\28std::__2::locale\20const&\29 can change the state due to std::__2::__shared_count::__release_shared\5babi:v15006\5d\28\29
[asyncify] std::__2::\28anonymous\20namespace\29::release::operator\28\29\28std::__2::locale::facet*\29 can change the state due to std::__2::__shared_count::__release_shared\5babi:v15006\5d\28\29
[asyncify] std::__2::__thread_struct_imp::~__thread_struct_imp\28\29 can change the state due to std::__2::__shared_count::__release_shared\5babi:v15006\5d\28\29
[asyncify] std::__2::__assoc_sub_state::copy\28\29 can change the state due to std::__2::__assoc_sub_state::__sub_wait\28std::__2::unique_lock<std::__2::mutex>&\29
[asyncify] std::__2::__assoc_sub_state::wait\28\29 can change the state due to std::__2::__assoc_sub_state::__sub_wait\28std::__2::unique_lock<std::__2::mutex>&\29
[asyncify] std::__2::basic_ostream<char\2c\20std::__2::char_traits<char>>::flush\28\29 can change the state due to std::__2::basic_streambuf<char\2c\20std::__2::char_traits<char>>::pubsync\5babi:v15006\5d\28\29
[asyncify] std::__2::basic_istream<char\2c\20std::__2::char_traits<char>>::sync\28\29 can change the state due to std::__2::basic_streambuf<char\2c\20std::__2::char_traits<char>>::pubsync\5babi:v15006\5d\28\29
[asyncify] std::__2::basic_ostream<char\2c\20std::__2::char_traits<char>>::sentry::~sentry\28\29 can change the state due to std::__2::basic_streambuf<char\2c\20std::__2::char_traits<char>>::pubsync\5babi:v15006\5d\28\29
[asyncify] std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>::operator*\5babi:v15006\5d\28\29\20const can change the state due to std::__2::basic_streambuf<char\2c\20std::__2::char_traits<char>>::sgetc\5babi:v15006\5d\28\29
[asyncify] std::__2::basic_istream<char\2c\20std::__2::char_traits<char>>::operator>>\28std::__2::basic_streambuf<char\2c\20std::__2::char_traits<char>>*\29 can change the state due to std::__2::basic_streambuf<char\2c\20std::__2::char_traits<char>>::sgetc\5babi:v15006\5d\28\29
[asyncify] std::__2::basic_istream<char\2c\20std::__2::char_traits<char>>::get\28char*\2c\20long\2c\20char\29 can change the state due to std::__2::basic_streambuf<char\2c\20std::__2::char_traits<char>>::sgetc\5babi:v15006\5d\28\29
[asyncify] std::__2::basic_istream<char\2c\20std::__2::char_traits<char>>::get\28std::__2::basic_streambuf<char\2c\20std::__2::char_traits<char>>&\2c\20char\29 can change the state due to std::__2::basic_streambuf<char\2c\20std::__2::char_traits<char>>::sgetc\5babi:v15006\5d\28\29
[asyncify] std::__2::basic_istream<char\2c\20std::__2::char_traits<char>>::getline\28char*\2c\20long\2c\20char\29 can change the state due to std::__2::basic_streambuf<char\2c\20std::__2::char_traits<char>>::sgetc\5babi:v15006\5d\28\29
[asyncify] std::__2::basic_istream<char\2c\20std::__2::char_traits<char>>::peek\28\29 can change the state due to std::__2::basic_streambuf<char\2c\20std::__2::char_traits<char>>::sgetc\5babi:v15006\5d\28\29
[asyncify] std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>::__test_for_eof\5babi:v15006\5d\28\29\20const can change the state due to std::__2::basic_streambuf<char\2c\20std::__2::char_traits<char>>::sgetc\5babi:v15006\5d\28\29
[asyncify] std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>::operator++\5babi:v15006\5d\28\29 can change the state due to std::__2::basic_streambuf<char\2c\20std::__2::char_traits<char>>::sbumpc\5babi:v15006\5d\28\29
[asyncify] std::__2::basic_istream<char\2c\20std::__2::char_traits<char>>::get\28\29 can change the state due to std::__2::basic_streambuf<char\2c\20std::__2::char_traits<char>>::sbumpc\5babi:v15006\5d\28\29
[asyncify] std::__2::basic_istream<char\2c\20std::__2::char_traits<char>>::ignore\28long\2c\20int\29 can change the state due to std::__2::basic_streambuf<char\2c\20std::__2::char_traits<char>>::sbumpc\5babi:v15006\5d\28\29
[asyncify] std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>::operator++\5babi:v15006\5d\28int\29 can change the state due to std::__2::basic_streambuf<char\2c\20std::__2::char_traits<char>>::sbumpc\5babi:v15006\5d\28\29
[asyncify] std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>::operator=\5babi:v15006\5d\28char\29 can change the state due to std::__2::basic_streambuf<char\2c\20std::__2::char_traits<char>>::sputc\5babi:v15006\5d\28char\29
[asyncify] std::__2::basic_stringbuf<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::overflow\28int\29 can change the state due to std::__2::basic_streambuf<char\2c\20std::__2::char_traits<char>>::sputc\5babi:v15006\5d\28char\29
[asyncify] std::__2::basic_istream<char\2c\20std::__2::char_traits<char>>&\20std::__2::__input_arithmetic\5babi:v15006\5d<bool\2c\20char\2c\20std::__2::char_traits<char>>\28std::__2::basic_istream<char\2c\20std::__2::char_traits<char>>&\2c\20bool&\29 can change the state due to std::__2::num_get<char\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>>::get\5babi:v15006\5d\28std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::ios_base&\2c\20unsigned\20int&\2c\20bool&\29\20const
[asyncify] std::__2::basic_istream<char\2c\20std::__2::char_traits<char>>&\20std::__2::__input_arithmetic_with_numeric_limits\5babi:v15006\5d<short\2c\20char\2c\20std::__2::char_traits<char>>\28std::__2::basic_istream<char\2c\20std::__2::char_traits<char>>&\2c\20short&\29 can change the state due to std::__2::num_get<char\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>>::get\5babi:v15006\5d\28std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::ios_base&\2c\20unsigned\20int&\2c\20long&\29\20const
[asyncify] std::__2::basic_istream<char\2c\20std::__2::char_traits<char>>&\20std::__2::__input_arithmetic_with_numeric_limits\5babi:v15006\5d<int\2c\20char\2c\20std::__2::char_traits<char>>\28std::__2::basic_istream<char\2c\20std::__2::char_traits<char>>&\2c\20int&\29 can change the state due to std::__2::num_get<char\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>>::get\5babi:v15006\5d\28std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::ios_base&\2c\20unsigned\20int&\2c\20long&\29\20const
[asyncify] std::__2::basic_istream<char\2c\20std::__2::char_traits<char>>&\20std::__2::__input_arithmetic\5babi:v15006\5d<long\2c\20char\2c\20std::__2::char_traits<char>>\28std::__2::basic_istream<char\2c\20std::__2::char_traits<char>>&\2c\20long&\29 can change the state due to std::__2::num_get<char\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>>::get\5babi:v15006\5d\28std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::ios_base&\2c\20unsigned\20int&\2c\20long&\29\20const
[asyncify] std::__2::basic_istream<char\2c\20std::__2::char_traits<char>>&\20std::__2::__input_arithmetic\5babi:v15006\5d<unsigned\20short\2c\20char\2c\20std::__2::char_traits<char>>\28std::__2::basic_istream<char\2c\20std::__2::char_traits<char>>&\2c\20unsigned\20short&\29 can change the state due to std::__2::num_get<char\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>>::get\5babi:v15006\5d\28std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::ios_base&\2c\20unsigned\20int&\2c\20unsigned\20short&\29\20const
[asyncify] std::__2::basic_istream<char\2c\20std::__2::char_traits<char>>&\20std::__2::__input_arithmetic\5babi:v15006\5d<unsigned\20int\2c\20char\2c\20std::__2::char_traits<char>>\28std::__2::basic_istream<char\2c\20std::__2::char_traits<char>>&\2c\20unsigned\20int&\29 can change the state due to std::__2::num_get<char\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>>::get\5babi:v15006\5d\28std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::ios_base&\2c\20unsigned\20int&\2c\20unsigned\20int&\29\20const
[asyncify] std::__2::basic_istream<char\2c\20std::__2::char_traits<char>>&\20std::__2::__input_arithmetic\5babi:v15006\5d<unsigned\20long\2c\20char\2c\20std::__2::char_traits<char>>\28std::__2::basic_istream<char\2c\20std::__2::char_traits<char>>&\2c\20unsigned\20long&\29 can change the state due to std::__2::num_get<char\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>>::get\5babi:v15006\5d\28std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::ios_base&\2c\20unsigned\20int&\2c\20unsigned\20long&\29\20const
[asyncify] std::__2::basic_istream<char\2c\20std::__2::char_traits<char>>&\20std::__2::__input_arithmetic\5babi:v15006\5d<long\20long\2c\20char\2c\20std::__2::char_traits<char>>\28std::__2::basic_istream<char\2c\20std::__2::char_traits<char>>&\2c\20long\20long&\29 can change the state due to std::__2::num_get<char\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>>::get\5babi:v15006\5d\28std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::ios_base&\2c\20unsigned\20int&\2c\20long\20long&\29\20const
[asyncify] std::__2::basic_istream<char\2c\20std::__2::char_traits<char>>&\20std::__2::__input_arithmetic\5babi:v15006\5d<unsigned\20long\20long\2c\20char\2c\20std::__2::char_traits<char>>\28std::__2::basic_istream<char\2c\20std::__2::char_traits<char>>&\2c\20unsigned\20long\20long&\29 can change the state due to std::__2::num_get<char\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>>::get\5babi:v15006\5d\28std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::ios_base&\2c\20unsigned\20int&\2c\20unsigned\20long\20long&\29\20const
[asyncify] std::__2::basic_istream<char\2c\20std::__2::char_traits<char>>&\20std::__2::__input_arithmetic\5babi:v15006\5d<float\2c\20char\2c\20std::__2::char_traits<char>>\28std::__2::basic_istream<char\2c\20std::__2::char_traits<char>>&\2c\20float&\29 can change the state due to std::__2::num_get<char\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>>::get\5babi:v15006\5d\28std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::ios_base&\2c\20unsigned\20int&\2c\20float&\29\20const
[asyncify] std::__2::basic_istream<char\2c\20std::__2::char_traits<char>>&\20std::__2::__input_arithmetic\5babi:v15006\5d<double\2c\20char\2c\20std::__2::char_traits<char>>\28std::__2::basic_istream<char\2c\20std::__2::char_traits<char>>&\2c\20double&\29 can change the state due to std::__2::num_get<char\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>>::get\5babi:v15006\5d\28std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::ios_base&\2c\20unsigned\20int&\2c\20double&\29\20const
[asyncify] std::__2::basic_istream<char\2c\20std::__2::char_traits<char>>&\20std::__2::__input_arithmetic\5babi:v15006\5d<long\20double\2c\20char\2c\20std::__2::char_traits<char>>\28std::__2::basic_istream<char\2c\20std::__2::char_traits<char>>&\2c\20long\20double&\29 can change the state due to std::__2::num_get<char\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>>::get\5babi:v15006\5d\28std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::ios_base&\2c\20unsigned\20int&\2c\20long\20double&\29\20const
[asyncify] std::__2::basic_istream<char\2c\20std::__2::char_traits<char>>&\20std::__2::__input_arithmetic\5babi:v15006\5d<void*\2c\20char\2c\20std::__2::char_traits<char>>\28std::__2::basic_istream<char\2c\20std::__2::char_traits<char>>&\2c\20void*&\29 can change the state due to std::__2::num_get<char\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>>::get\5babi:v15006\5d\28std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::ios_base&\2c\20unsigned\20int&\2c\20void*&\29\20const
[asyncify] std::__2::basic_istream<char\2c\20std::__2::char_traits<char>>::read\28char*\2c\20long\29 can change the state due to std::__2::basic_streambuf<char\2c\20std::__2::char_traits<char>>::sgetn\5babi:v15006\5d\28char*\2c\20long\29
[asyncify] std::__2::basic_istream<char\2c\20std::__2::char_traits<char>>::readsome\28char*\2c\20long\29 can change the state due to std::__2::basic_streambuf<char\2c\20std::__2::char_traits<char>>::sgetn\5babi:v15006\5d\28char*\2c\20long\29
[asyncify] std::__2::basic_istream<char\2c\20std::__2::char_traits<char>>::putback\28char\29 can change the state due to std::__2::basic_streambuf<char\2c\20std::__2::char_traits<char>>::sputbackc\5babi:v15006\5d\28char\29
[asyncify] std::__2::basic_istream<char\2c\20std::__2::char_traits<char>>::unget\28\29 can change the state due to std::__2::basic_streambuf<char\2c\20std::__2::char_traits<char>>::sungetc\5babi:v15006\5d\28\29
[asyncify] std::__2::basic_istream<char\2c\20std::__2::char_traits<char>>::tellg\28\29 can change the state due to std::__2::basic_streambuf<char\2c\20std::__2::char_traits<char>>::pubseekoff\5babi:v15006\5d\28long\20long\2c\20std::__2::ios_base::seekdir\2c\20unsigned\20int\29
[asyncify] std::__2::basic_istream<char\2c\20std::__2::char_traits<char>>::seekg\28long\20long\2c\20std::__2::ios_base::seekdir\29 can change the state due to std::__2::basic_streambuf<char\2c\20std::__2::char_traits<char>>::pubseekoff\5babi:v15006\5d\28long\20long\2c\20std::__2::ios_base::seekdir\2c\20unsigned\20int\29
[asyncify] legalstub$std::__2::basic_streambuf<char\2c\20std::__2::char_traits<char>>::pubseekoff\5babi:v15006\5d\28long\20long\2c\20std::__2::ios_base::seekdir\2c\20unsigned\20int\29 can change the state due to std::__2::basic_streambuf<char\2c\20std::__2::char_traits<char>>::pubseekoff\5babi:v15006\5d\28long\20long\2c\20std::__2::ios_base::seekdir\2c\20unsigned\20int\29
[asyncify] std::__2::basic_istream<char\2c\20std::__2::char_traits<char>>::seekg\28std::__2::fpos<__mbstate_t>\29 can change the state due to std::__2::basic_streambuf<char\2c\20std::__2::char_traits<char>>::pubseekpos\5babi:v15006\5d\28std::__2::fpos<__mbstate_t>\2c\20unsigned\20int\29
[asyncify] std::__2::basic_ostream<char\2c\20std::__2::char_traits<char>>::operator<<\28bool\29 can change the state due to std::__2::num_put<char\2c\20std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>>::put\5babi:v15006\5d\28std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::ios_base&\2c\20char\2c\20bool\29\20const
[asyncify] std::__2::basic_ostream<char\2c\20std::__2::char_traits<char>>::operator<<\28short\29 can change the state due to std::__2::num_put<char\2c\20std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>>::put\5babi:v15006\5d\28std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::ios_base&\2c\20char\2c\20long\29\20const
[asyncify] std::__2::basic_ostream<char\2c\20std::__2::char_traits<char>>::operator<<\28int\29 can change the state due to std::__2::num_put<char\2c\20std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>>::put\5babi:v15006\5d\28std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::ios_base&\2c\20char\2c\20long\29\20const
[asyncify] std::__2::basic_ostream<char\2c\20std::__2::char_traits<char>>::operator<<\28long\29 can change the state due to std::__2::num_put<char\2c\20std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>>::put\5babi:v15006\5d\28std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::ios_base&\2c\20char\2c\20long\29\20const
[asyncify] std::__2::basic_ostream<char\2c\20std::__2::char_traits<char>>::operator<<\28unsigned\20short\29 can change the state due to std::__2::num_put<char\2c\20std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>>::put\5babi:v15006\5d\28std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::ios_base&\2c\20char\2c\20unsigned\20long\29\20const
[asyncify] std::__2::basic_ostream<char\2c\20std::__2::char_traits<char>>::operator<<\28unsigned\20int\29 can change the state due to std::__2::num_put<char\2c\20std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>>::put\5babi:v15006\5d\28std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::ios_base&\2c\20char\2c\20unsigned\20long\29\20const
[asyncify] std::__2::basic_ostream<char\2c\20std::__2::char_traits<char>>::operator<<\28unsigned\20long\29 can change the state due to std::__2::num_put<char\2c\20std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>>::put\5babi:v15006\5d\28std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::ios_base&\2c\20char\2c\20unsigned\20long\29\20const
[asyncify] std::__2::basic_ostream<char\2c\20std::__2::char_traits<char>>::operator<<\28long\20long\29 can change the state due to std::__2::num_put<char\2c\20std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>>::put\5babi:v15006\5d\28std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::ios_base&\2c\20char\2c\20long\20long\29\20const
[asyncify] legalstub$std::__2::num_put<char\2c\20std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>>::put\5babi:v15006\5d\28std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::ios_base&\2c\20char\2c\20long\20long\29\20const can change the state due to std::__2::num_put<char\2c\20std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>>::put\5babi:v15006\5d\28std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::ios_base&\2c\20char\2c\20long\20long\29\20const
[asyncify] std::__2::basic_ostream<char\2c\20std::__2::char_traits<char>>::operator<<\28unsigned\20long\20long\29 can change the state due to std::__2::num_put<char\2c\20std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>>::put\5babi:v15006\5d\28std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::ios_base&\2c\20char\2c\20unsigned\20long\20long\29\20const
[asyncify] legalstub$std::__2::num_put<char\2c\20std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>>::put\5babi:v15006\5d\28std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::ios_base&\2c\20char\2c\20unsigned\20long\20long\29\20const can change the state due to std::__2::num_put<char\2c\20std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>>::put\5babi:v15006\5d\28std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::ios_base&\2c\20char\2c\20unsigned\20long\20long\29\20const
[asyncify] std::__2::basic_ostream<char\2c\20std::__2::char_traits<char>>::operator<<\28float\29 can change the state due to std::__2::num_put<char\2c\20std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>>::put\5babi:v15006\5d\28std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::ios_base&\2c\20char\2c\20double\29\20const
[asyncify] std::__2::basic_ostream<char\2c\20std::__2::char_traits<char>>::operator<<\28double\29 can change the state due to std::__2::num_put<char\2c\20std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>>::put\5babi:v15006\5d\28std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::ios_base&\2c\20char\2c\20double\29\20const
[asyncify] std::__2::basic_ostream<char\2c\20std::__2::char_traits<char>>::operator<<\28long\20double\29 can change the state due to std::__2::num_put<char\2c\20std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>>::put\5babi:v15006\5d\28std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::ios_base&\2c\20char\2c\20long\20double\29\20const
[asyncify] legalstub$std::__2::num_put<char\2c\20std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>>::put\5babi:v15006\5d\28std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::ios_base&\2c\20char\2c\20long\20double\29\20const can change the state due to std::__2::num_put<char\2c\20std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>>::put\5babi:v15006\5d\28std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::ios_base&\2c\20char\2c\20long\20double\29\20const
[asyncify] std::__2::basic_ostream<char\2c\20std::__2::char_traits<char>>::operator<<\28void\20const*\29 can change the state due to std::__2::num_put<char\2c\20std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>>::put\5babi:v15006\5d\28std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::ios_base&\2c\20char\2c\20void\20const*\29\20const
[asyncify] std::__2::basic_ostream<char\2c\20std::__2::char_traits<char>>::write\28char\20const*\2c\20long\29 can change the state due to std::__2::basic_streambuf<char\2c\20std::__2::char_traits<char>>::sputn\5babi:v15006\5d\28char\20const*\2c\20long\29
[asyncify] std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>\20std::__2::__pad_and_output<char\2c\20std::__2::char_traits<char>>\28std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20char\20const*\2c\20char\20const*\2c\20char\20const*\2c\20std::__2::ios_base&\2c\20char\29 can change the state due to std::__2::basic_streambuf<char\2c\20std::__2::char_traits<char>>::sputn\5babi:v15006\5d\28char\20const*\2c\20long\29
[asyncify] std::__2::basic_istream<wchar_t\2c\20std::__2::char_traits<wchar_t>>::sentry::sentry\28std::__2::basic_istream<wchar_t\2c\20std::__2::char_traits<wchar_t>>&\2c\20bool\29 can change the state due to std::__2::ctype<wchar_t>::is\5babi:v15006\5d\28unsigned\20long\2c\20wchar_t\29\20const
[asyncify] int\20std::__2::__get_up_to_n_digits<wchar_t\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>\28std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>&\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20unsigned\20int&\2c\20std::__2::ctype<wchar_t>\20const&\2c\20int\29 can change the state due to std::__2::ctype<wchar_t>::is\5babi:v15006\5d\28unsigned\20long\2c\20wchar_t\29\20const
[asyncify] std::__2::time_get<wchar_t\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>::__get_white_space\28std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>&\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20unsigned\20int&\2c\20std::__2::ctype<wchar_t>\20const&\29\20const can change the state due to std::__2::ctype<wchar_t>::is\5babi:v15006\5d\28unsigned\20long\2c\20wchar_t\29\20const
[asyncify] std::__2::money_get<wchar_t\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>::__do_get\28std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>&\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20bool\2c\20std::__2::locale\20const&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20bool&\2c\20std::__2::ctype<wchar_t>\20const&\2c\20std::__2::unique_ptr<wchar_t\2c\20void\20\28*\29\28void*\29>&\2c\20wchar_t*&\2c\20wchar_t*\29 can change the state due to std::__2::ctype<wchar_t>::is\5babi:v15006\5d\28unsigned\20long\2c\20wchar_t\29\20const
[asyncify] std::__2::__money_put<wchar_t>::__format\28wchar_t*\2c\20wchar_t*&\2c\20wchar_t*&\2c\20unsigned\20int\2c\20wchar_t\20const*\2c\20wchar_t\20const*\2c\20std::__2::ctype<wchar_t>\20const&\2c\20bool\2c\20std::__2::money_base::pattern\20const&\2c\20wchar_t\2c\20wchar_t\2c\20std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\2c\20std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>\20const&\2c\20std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>\20const&\2c\20int\29 can change the state due to std::__2::ctype<wchar_t>::is\5babi:v15006\5d\28unsigned\20long\2c\20wchar_t\29\20const
[asyncify] std::__2::__time_get_storage<wchar_t>::__analyze\28char\2c\20std::__2::ctype<wchar_t>\20const&\29 can change the state due to std::__2::ctype<wchar_t>::is\5babi:v15006\5d\28unsigned\20long\2c\20wchar_t\29\20const
[asyncify] int\20std::__2::__get_up_to_n_digits<wchar_t\2c\20wchar_t*>\28wchar_t*&\2c\20wchar_t*\2c\20unsigned\20int&\2c\20std::__2::ctype<wchar_t>\20const&\2c\20int\29 can change the state due to std::__2::ctype<wchar_t>::is\5babi:v15006\5d\28unsigned\20long\2c\20wchar_t\29\20const
[asyncify] std::__2::basic_ostream<wchar_t\2c\20std::__2::char_traits<wchar_t>>::flush\28\29 can change the state due to std::__2::basic_streambuf<wchar_t\2c\20std::__2::char_traits<wchar_t>>::pubsync\5babi:v15006\5d\28\29
[asyncify] std::__2::basic_istream<wchar_t\2c\20std::__2::char_traits<wchar_t>>::sync\28\29 can change the state due to std::__2::basic_streambuf<wchar_t\2c\20std::__2::char_traits<wchar_t>>::pubsync\5babi:v15006\5d\28\29
[asyncify] std::__2::basic_ostream<wchar_t\2c\20std::__2::char_traits<wchar_t>>::sentry::~sentry\28\29 can change the state due to std::__2::basic_streambuf<wchar_t\2c\20std::__2::char_traits<wchar_t>>::pubsync\5babi:v15006\5d\28\29
[asyncify] std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>::operator*\5babi:v15006\5d\28\29\20const can change the state due to std::__2::basic_streambuf<wchar_t\2c\20std::__2::char_traits<wchar_t>>::sgetc\5babi:v15006\5d\28\29
[asyncify] std::__2::basic_istream<wchar_t\2c\20std::__2::char_traits<wchar_t>>::operator>>\28std::__2::basic_streambuf<wchar_t\2c\20std::__2::char_traits<wchar_t>>*\29 can change the state due to std::__2::basic_streambuf<wchar_t\2c\20std::__2::char_traits<wchar_t>>::sgetc\5babi:v15006\5d\28\29
[asyncify] std::__2::basic_istream<wchar_t\2c\20std::__2::char_traits<wchar_t>>::get\28wchar_t*\2c\20long\2c\20wchar_t\29 can change the state due to std::__2::basic_streambuf<wchar_t\2c\20std::__2::char_traits<wchar_t>>::sgetc\5babi:v15006\5d\28\29
[asyncify] std::__2::basic_istream<wchar_t\2c\20std::__2::char_traits<wchar_t>>::get\28std::__2::basic_streambuf<wchar_t\2c\20std::__2::char_traits<wchar_t>>&\2c\20wchar_t\29 can change the state due to std::__2::basic_streambuf<wchar_t\2c\20std::__2::char_traits<wchar_t>>::sgetc\5babi:v15006\5d\28\29
[asyncify] std::__2::basic_istream<wchar_t\2c\20std::__2::char_traits<wchar_t>>::getline\28wchar_t*\2c\20long\2c\20wchar_t\29 can change the state due to std::__2::basic_streambuf<wchar_t\2c\20std::__2::char_traits<wchar_t>>::sgetc\5babi:v15006\5d\28\29
[asyncify] std::__2::basic_istream<wchar_t\2c\20std::__2::char_traits<wchar_t>>::peek\28\29 can change the state due to std::__2::basic_streambuf<wchar_t\2c\20std::__2::char_traits<wchar_t>>::sgetc\5babi:v15006\5d\28\29
[asyncify] std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>::__test_for_eof\5babi:v15006\5d\28\29\20const can change the state due to std::__2::basic_streambuf<wchar_t\2c\20std::__2::char_traits<wchar_t>>::sgetc\5babi:v15006\5d\28\29
[asyncify] std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>::operator++\5babi:v15006\5d\28\29 can change the state due to std::__2::basic_streambuf<wchar_t\2c\20std::__2::char_traits<wchar_t>>::sbumpc\5babi:v15006\5d\28\29
[asyncify] std::__2::basic_istream<wchar_t\2c\20std::__2::char_traits<wchar_t>>::get\28\29 can change the state due to std::__2::basic_streambuf<wchar_t\2c\20std::__2::char_traits<wchar_t>>::sbumpc\5babi:v15006\5d\28\29
[asyncify] std::__2::basic_istream<wchar_t\2c\20std::__2::char_traits<wchar_t>>::ignore\28long\2c\20unsigned\20int\29 can change the state due to std::__2::basic_streambuf<wchar_t\2c\20std::__2::char_traits<wchar_t>>::sbumpc\5babi:v15006\5d\28\29
[asyncify] std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>::operator++\5babi:v15006\5d\28int\29 can change the state due to std::__2::basic_streambuf<wchar_t\2c\20std::__2::char_traits<wchar_t>>::sbumpc\5babi:v15006\5d\28\29
[asyncify] std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>::operator=\5babi:v15006\5d\28wchar_t\29 can change the state due to std::__2::basic_streambuf<wchar_t\2c\20std::__2::char_traits<wchar_t>>::sputc\5babi:v15006\5d\28wchar_t\29
[asyncify] std::__2::basic_istream<wchar_t\2c\20std::__2::char_traits<wchar_t>>&\20std::__2::__input_arithmetic\5babi:v15006\5d<bool\2c\20wchar_t\2c\20std::__2::char_traits<wchar_t>>\28std::__2::basic_istream<wchar_t\2c\20std::__2::char_traits<wchar_t>>&\2c\20bool&\29 can change the state due to std::__2::num_get<wchar_t\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>::get\5babi:v15006\5d\28std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::ios_base&\2c\20unsigned\20int&\2c\20bool&\29\20const
[asyncify] std::__2::basic_istream<wchar_t\2c\20std::__2::char_traits<wchar_t>>&\20std::__2::__input_arithmetic_with_numeric_limits\5babi:v15006\5d<short\2c\20wchar_t\2c\20std::__2::char_traits<wchar_t>>\28std::__2::basic_istream<wchar_t\2c\20std::__2::char_traits<wchar_t>>&\2c\20short&\29 can change the state due to std::__2::num_get<wchar_t\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>::get\5babi:v15006\5d\28std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::ios_base&\2c\20unsigned\20int&\2c\20long&\29\20const
[asyncify] std::__2::basic_istream<wchar_t\2c\20std::__2::char_traits<wchar_t>>&\20std::__2::__input_arithmetic_with_numeric_limits\5babi:v15006\5d<int\2c\20wchar_t\2c\20std::__2::char_traits<wchar_t>>\28std::__2::basic_istream<wchar_t\2c\20std::__2::char_traits<wchar_t>>&\2c\20int&\29 can change the state due to std::__2::num_get<wchar_t\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>::get\5babi:v15006\5d\28std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::ios_base&\2c\20unsigned\20int&\2c\20long&\29\20const
[asyncify] std::__2::basic_istream<wchar_t\2c\20std::__2::char_traits<wchar_t>>&\20std::__2::__input_arithmetic\5babi:v15006\5d<long\2c\20wchar_t\2c\20std::__2::char_traits<wchar_t>>\28std::__2::basic_istream<wchar_t\2c\20std::__2::char_traits<wchar_t>>&\2c\20long&\29 can change the state due to std::__2::num_get<wchar_t\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>::get\5babi:v15006\5d\28std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::ios_base&\2c\20unsigned\20int&\2c\20long&\29\20const
[asyncify] std::__2::basic_istream<wchar_t\2c\20std::__2::char_traits<wchar_t>>&\20std::__2::__input_arithmetic\5babi:v15006\5d<unsigned\20short\2c\20wchar_t\2c\20std::__2::char_traits<wchar_t>>\28std::__2::basic_istream<wchar_t\2c\20std::__2::char_traits<wchar_t>>&\2c\20unsigned\20short&\29 can change the state due to std::__2::num_get<wchar_t\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>::get\5babi:v15006\5d\28std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::ios_base&\2c\20unsigned\20int&\2c\20unsigned\20short&\29\20const
[asyncify] std::__2::basic_istream<wchar_t\2c\20std::__2::char_traits<wchar_t>>&\20std::__2::__input_arithmetic\5babi:v15006\5d<unsigned\20int\2c\20wchar_t\2c\20std::__2::char_traits<wchar_t>>\28std::__2::basic_istream<wchar_t\2c\20std::__2::char_traits<wchar_t>>&\2c\20unsigned\20int&\29 can change the state due to std::__2::num_get<wchar_t\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>::get\5babi:v15006\5d\28std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::ios_base&\2c\20unsigned\20int&\2c\20unsigned\20int&\29\20const
[asyncify] std::__2::basic_istream<wchar_t\2c\20std::__2::char_traits<wchar_t>>&\20std::__2::__input_arithmetic\5babi:v15006\5d<unsigned\20long\2c\20wchar_t\2c\20std::__2::char_traits<wchar_t>>\28std::__2::basic_istream<wchar_t\2c\20std::__2::char_traits<wchar_t>>&\2c\20unsigned\20long&\29 can change the state due to std::__2::num_get<wchar_t\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>::get\5babi:v15006\5d\28std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::ios_base&\2c\20unsigned\20int&\2c\20unsigned\20long&\29\20const
[asyncify] std::__2::basic_istream<wchar_t\2c\20std::__2::char_traits<wchar_t>>&\20std::__2::__input_arithmetic\5babi:v15006\5d<long\20long\2c\20wchar_t\2c\20std::__2::char_traits<wchar_t>>\28std::__2::basic_istream<wchar_t\2c\20std::__2::char_traits<wchar_t>>&\2c\20long\20long&\29 can change the state due to std::__2::num_get<wchar_t\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>::get\5babi:v15006\5d\28std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::ios_base&\2c\20unsigned\20int&\2c\20long\20long&\29\20const
[asyncify] std::__2::basic_istream<wchar_t\2c\20std::__2::char_traits<wchar_t>>&\20std::__2::__input_arithmetic\5babi:v15006\5d<unsigned\20long\20long\2c\20wchar_t\2c\20std::__2::char_traits<wchar_t>>\28std::__2::basic_istream<wchar_t\2c\20std::__2::char_traits<wchar_t>>&\2c\20unsigned\20long\20long&\29 can change the state due to std::__2::num_get<wchar_t\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>::get\5babi:v15006\5d\28std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::ios_base&\2c\20unsigned\20int&\2c\20unsigned\20long\20long&\29\20const
[asyncify] std::__2::basic_istream<wchar_t\2c\20std::__2::char_traits<wchar_t>>&\20std::__2::__input_arithmetic\5babi:v15006\5d<float\2c\20wchar_t\2c\20std::__2::char_traits<wchar_t>>\28std::__2::basic_istream<wchar_t\2c\20std::__2::char_traits<wchar_t>>&\2c\20float&\29 can change the state due to std::__2::num_get<wchar_t\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>::get\5babi:v15006\5d\28std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::ios_base&\2c\20unsigned\20int&\2c\20float&\29\20const
[asyncify] std::__2::basic_istream<wchar_t\2c\20std::__2::char_traits<wchar_t>>&\20std::__2::__input_arithmetic\5babi:v15006\5d<double\2c\20wchar_t\2c\20std::__2::char_traits<wchar_t>>\28std::__2::basic_istream<wchar_t\2c\20std::__2::char_traits<wchar_t>>&\2c\20double&\29 can change the state due to std::__2::num_get<wchar_t\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>::get\5babi:v15006\5d\28std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::ios_base&\2c\20unsigned\20int&\2c\20double&\29\20const
[asyncify] std::__2::basic_istream<wchar_t\2c\20std::__2::char_traits<wchar_t>>&\20std::__2::__input_arithmetic\5babi:v15006\5d<long\20double\2c\20wchar_t\2c\20std::__2::char_traits<wchar_t>>\28std::__2::basic_istream<wchar_t\2c\20std::__2::char_traits<wchar_t>>&\2c\20long\20double&\29 can change the state due to std::__2::num_get<wchar_t\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>::get\5babi:v15006\5d\28std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::ios_base&\2c\20unsigned\20int&\2c\20long\20double&\29\20const
[asyncify] std::__2::basic_istream<wchar_t\2c\20std::__2::char_traits<wchar_t>>&\20std::__2::__input_arithmetic\5babi:v15006\5d<void*\2c\20wchar_t\2c\20std::__2::char_traits<wchar_t>>\28std::__2::basic_istream<wchar_t\2c\20std::__2::char_traits<wchar_t>>&\2c\20void*&\29 can change the state due to std::__2::num_get<wchar_t\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>::get\5babi:v15006\5d\28std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::ios_base&\2c\20unsigned\20int&\2c\20void*&\29\20const
[asyncify] std::__2::basic_istream<wchar_t\2c\20std::__2::char_traits<wchar_t>>::read\28wchar_t*\2c\20long\29 can change the state due to std::__2::basic_streambuf<wchar_t\2c\20std::__2::char_traits<wchar_t>>::sgetn\5babi:v15006\5d\28wchar_t*\2c\20long\29
[asyncify] std::__2::basic_istream<wchar_t\2c\20std::__2::char_traits<wchar_t>>::readsome\28wchar_t*\2c\20long\29 can change the state due to std::__2::basic_streambuf<wchar_t\2c\20std::__2::char_traits<wchar_t>>::sgetn\5babi:v15006\5d\28wchar_t*\2c\20long\29
[asyncify] std::__2::basic_istream<wchar_t\2c\20std::__2::char_traits<wchar_t>>::putback\28wchar_t\29 can change the state due to std::__2::basic_streambuf<wchar_t\2c\20std::__2::char_traits<wchar_t>>::sputbackc\5babi:v15006\5d\28wchar_t\29
[asyncify] std::__2::basic_istream<wchar_t\2c\20std::__2::char_traits<wchar_t>>::unget\28\29 can change the state due to std::__2::basic_streambuf<wchar_t\2c\20std::__2::char_traits<wchar_t>>::sungetc\5babi:v15006\5d\28\29
[asyncify] std::__2::basic_istream<wchar_t\2c\20std::__2::char_traits<wchar_t>>::tellg\28\29 can change the state due to std::__2::basic_streambuf<wchar_t\2c\20std::__2::char_traits<wchar_t>>::pubseekoff\5babi:v15006\5d\28long\20long\2c\20std::__2::ios_base::seekdir\2c\20unsigned\20int\29
[asyncify] std::__2::basic_istream<wchar_t\2c\20std::__2::char_traits<wchar_t>>::seekg\28long\20long\2c\20std::__2::ios_base::seekdir\29 can change the state due to std::__2::basic_streambuf<wchar_t\2c\20std::__2::char_traits<wchar_t>>::pubseekoff\5babi:v15006\5d\28long\20long\2c\20std::__2::ios_base::seekdir\2c\20unsigned\20int\29
[asyncify] legalstub$std::__2::basic_streambuf<wchar_t\2c\20std::__2::char_traits<wchar_t>>::pubseekoff\5babi:v15006\5d\28long\20long\2c\20std::__2::ios_base::seekdir\2c\20unsigned\20int\29 can change the state due to std::__2::basic_streambuf<wchar_t\2c\20std::__2::char_traits<wchar_t>>::pubseekoff\5babi:v15006\5d\28long\20long\2c\20std::__2::ios_base::seekdir\2c\20unsigned\20int\29
[asyncify] std::__2::basic_istream<wchar_t\2c\20std::__2::char_traits<wchar_t>>::seekg\28std::__2::fpos<__mbstate_t>\29 can change the state due to std::__2::basic_streambuf<wchar_t\2c\20std::__2::char_traits<wchar_t>>::pubseekpos\5babi:v15006\5d\28std::__2::fpos<__mbstate_t>\2c\20unsigned\20int\29
[asyncify] std::__2::basic_ostream<wchar_t\2c\20std::__2::char_traits<wchar_t>>::operator<<\28bool\29 can change the state due to std::__2::num_put<wchar_t\2c\20std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>::put\5babi:v15006\5d\28std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::ios_base&\2c\20wchar_t\2c\20bool\29\20const
[asyncify] std::__2::basic_ostream<wchar_t\2c\20std::__2::char_traits<wchar_t>>::operator<<\28short\29 can change the state due to std::__2::num_put<wchar_t\2c\20std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>::put\5babi:v15006\5d\28std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::ios_base&\2c\20wchar_t\2c\20long\29\20const
[asyncify] std::__2::basic_ostream<wchar_t\2c\20std::__2::char_traits<wchar_t>>::operator<<\28int\29 can change the state due to std::__2::num_put<wchar_t\2c\20std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>::put\5babi:v15006\5d\28std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::ios_base&\2c\20wchar_t\2c\20long\29\20const
[asyncify] std::__2::basic_ostream<wchar_t\2c\20std::__2::char_traits<wchar_t>>::operator<<\28long\29 can change the state due to std::__2::num_put<wchar_t\2c\20std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>::put\5babi:v15006\5d\28std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::ios_base&\2c\20wchar_t\2c\20long\29\20const
[asyncify] std::__2::basic_ostream<wchar_t\2c\20std::__2::char_traits<wchar_t>>::operator<<\28unsigned\20short\29 can change the state due to std::__2::num_put<wchar_t\2c\20std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>::put\5babi:v15006\5d\28std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::ios_base&\2c\20wchar_t\2c\20unsigned\20long\29\20const
[asyncify] std::__2::basic_ostream<wchar_t\2c\20std::__2::char_traits<wchar_t>>::operator<<\28unsigned\20int\29 can change the state due to std::__2::num_put<wchar_t\2c\20std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>::put\5babi:v15006\5d\28std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::ios_base&\2c\20wchar_t\2c\20unsigned\20long\29\20const
[asyncify] std::__2::basic_ostream<wchar_t\2c\20std::__2::char_traits<wchar_t>>::operator<<\28unsigned\20long\29 can change the state due to std::__2::num_put<wchar_t\2c\20std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>::put\5babi:v15006\5d\28std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::ios_base&\2c\20wchar_t\2c\20unsigned\20long\29\20const
[asyncify] std::__2::basic_ostream<wchar_t\2c\20std::__2::char_traits<wchar_t>>::operator<<\28long\20long\29 can change the state due to std::__2::num_put<wchar_t\2c\20std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>::put\5babi:v15006\5d\28std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::ios_base&\2c\20wchar_t\2c\20long\20long\29\20const
[asyncify] legalstub$std::__2::num_put<wchar_t\2c\20std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>::put\5babi:v15006\5d\28std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::ios_base&\2c\20wchar_t\2c\20long\20long\29\20const can change the state due to std::__2::num_put<wchar_t\2c\20std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>::put\5babi:v15006\5d\28std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::ios_base&\2c\20wchar_t\2c\20long\20long\29\20const
[asyncify] std::__2::basic_ostream<wchar_t\2c\20std::__2::char_traits<wchar_t>>::operator<<\28unsigned\20long\20long\29 can change the state due to std::__2::num_put<wchar_t\2c\20std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>::put\5babi:v15006\5d\28std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::ios_base&\2c\20wchar_t\2c\20unsigned\20long\20long\29\20const
[asyncify] legalstub$std::__2::num_put<wchar_t\2c\20std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>::put\5babi:v15006\5d\28std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::ios_base&\2c\20wchar_t\2c\20unsigned\20long\20long\29\20const can change the state due to std::__2::num_put<wchar_t\2c\20std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>::put\5babi:v15006\5d\28std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::ios_base&\2c\20wchar_t\2c\20unsigned\20long\20long\29\20const
[asyncify] std::__2::basic_ostream<wchar_t\2c\20std::__2::char_traits<wchar_t>>::operator<<\28float\29 can change the state due to std::__2::num_put<wchar_t\2c\20std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>::put\5babi:v15006\5d\28std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::ios_base&\2c\20wchar_t\2c\20double\29\20const
[asyncify] std::__2::basic_ostream<wchar_t\2c\20std::__2::char_traits<wchar_t>>::operator<<\28double\29 can change the state due to std::__2::num_put<wchar_t\2c\20std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>::put\5babi:v15006\5d\28std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::ios_base&\2c\20wchar_t\2c\20double\29\20const
[asyncify] std::__2::basic_ostream<wchar_t\2c\20std::__2::char_traits<wchar_t>>::operator<<\28long\20double\29 can change the state due to std::__2::num_put<wchar_t\2c\20std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>::put\5babi:v15006\5d\28std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::ios_base&\2c\20wchar_t\2c\20long\20double\29\20const
[asyncify] legalstub$std::__2::num_put<wchar_t\2c\20std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>::put\5babi:v15006\5d\28std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::ios_base&\2c\20wchar_t\2c\20long\20double\29\20const can change the state due to std::__2::num_put<wchar_t\2c\20std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>::put\5babi:v15006\5d\28std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::ios_base&\2c\20wchar_t\2c\20long\20double\29\20const
[asyncify] std::__2::basic_ostream<wchar_t\2c\20std::__2::char_traits<wchar_t>>::operator<<\28void\20const*\29 can change the state due to std::__2::num_put<wchar_t\2c\20std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>::put\5babi:v15006\5d\28std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::ios_base&\2c\20wchar_t\2c\20void\20const*\29\20const
[asyncify] std::__2::basic_ostream<wchar_t\2c\20std::__2::char_traits<wchar_t>>::write\28wchar_t\20const*\2c\20long\29 can change the state due to std::__2::basic_streambuf<wchar_t\2c\20std::__2::char_traits<wchar_t>>::sputn\5babi:v15006\5d\28wchar_t\20const*\2c\20long\29
[asyncify] std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\20std::__2::__pad_and_output<wchar_t\2c\20std::__2::char_traits<wchar_t>>\28std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20wchar_t\20const*\2c\20wchar_t\20const*\2c\20wchar_t\20const*\2c\20std::__2::ios_base&\2c\20wchar_t\29 can change the state due to std::__2::basic_streambuf<wchar_t\2c\20std::__2::char_traits<wchar_t>>::sputn\5babi:v15006\5d\28wchar_t\20const*\2c\20long\29
[asyncify] std::__2::basic_stringbuf<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::basic_stringbuf\28std::__2::basic_stringbuf<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>&&\29 can change the state due to std::__2::basic_streambuf<char\2c\20std::__2::char_traits<char>>::pubimbue\5babi:v15006\5d\28std::__2::locale\20const&\29
[asyncify] std::__2::basic_stringbuf<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::operator=\28std::__2::basic_stringbuf<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>&&\29 can change the state due to std::__2::basic_streambuf<char\2c\20std::__2::char_traits<char>>::pubimbue\5babi:v15006\5d\28std::__2::locale\20const&\29
[asyncify] std::__2::basic_stringbuf<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::swap\28std::__2::basic_stringbuf<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>&\29 can change the state due to std::__2::basic_streambuf<char\2c\20std::__2::char_traits<char>>::pubimbue\5babi:v15006\5d\28std::__2::locale\20const&\29
[asyncify] MT32Emu::FileStream::FileStream\28\29 can change the state due to std::__2::basic_filebuf<char\2c\20std::__2::char_traits<char>>::basic_filebuf\28\29
[asyncify] std::__2::basic_ifstream<char\2c\20std::__2::char_traits<char>>::basic_ifstream\28\29 can change the state due to std::__2::basic_filebuf<char\2c\20std::__2::char_traits<char>>::basic_filebuf\28\29
[asyncify] std::__2::basic_ofstream<char\2c\20std::__2::char_traits<char>>::basic_ofstream\28\29 can change the state due to std::__2::basic_filebuf<char\2c\20std::__2::char_traits<char>>::basic_filebuf\28\29
[asyncify] std::__2::__stdoutbuf<char>::__stdoutbuf\28_IO_FILE*\2c\20__mbstate_t*\29 can change the state due to std::__2::codecvt<char\2c\20char\2c\20__mbstate_t>::always_noconv\5babi:v15006\5d\28\29\20const
[asyncify] std::__2::__stdinbuf<char>::imbue\28std::__2::locale\20const&\29 can change the state due to std::__2::codecvt<char\2c\20char\2c\20__mbstate_t>::always_noconv\5babi:v15006\5d\28\29\20const
[asyncify] MT32Emu::FileStream::close\28\29 can change the state due to std::__2::basic_filebuf<char\2c\20std::__2::char_traits<char>>::close\28\29
[asyncify] std::__2::basic_filebuf<char\2c\20std::__2::char_traits<char>>::~basic_filebuf\28\29 can change the state due to std::__2::basic_filebuf<char\2c\20std::__2::char_traits<char>>::close\28\29
[asyncify] std::__2::unique_ptr<_IO_FILE\2c\20int\20\28*\29\28_IO_FILE*\29>::~unique_ptr\5babi:v15006\5d\28\29 can change the state due to std::__2::unique_ptr<_IO_FILE\2c\20int\20\28*\29\28_IO_FILE*\29>::reset\5babi:v15006\5d\28_IO_FILE*\29
[asyncify] std::__2::__stdinbuf<char>::__getchar\28bool\29 can change the state due to std::__2::codecvt<char\2c\20char\2c\20__mbstate_t>::in\5babi:v15006\5d\28__mbstate_t&\2c\20char\20const*\2c\20char\20const*\2c\20char\20const*&\2c\20char*\2c\20char*\2c\20char*&\29\20const
[asyncify] std::__2::basic_filebuf<char\2c\20std::__2::char_traits<char>>::overflow\28int\29 can change the state due to std::__2::codecvt<char\2c\20char\2c\20__mbstate_t>::out\5babi:v15006\5d\28__mbstate_t&\2c\20char\20const*\2c\20char\20const*\2c\20char\20const*&\2c\20char*\2c\20char*\2c\20char*&\29\20const
[asyncify] std::__2::__stdinbuf<char>::pbackfail\28int\29 can change the state due to std::__2::codecvt<char\2c\20char\2c\20__mbstate_t>::out\5babi:v15006\5d\28__mbstate_t&\2c\20char\20const*\2c\20char\20const*\2c\20char\20const*&\2c\20char*\2c\20char*\2c\20char*&\29\20const
[asyncify] std::__2::__stdoutbuf<char>::overflow\28int\29 can change the state due to std::__2::codecvt<char\2c\20char\2c\20__mbstate_t>::out\5babi:v15006\5d\28__mbstate_t&\2c\20char\20const*\2c\20char\20const*\2c\20char\20const*&\2c\20char*\2c\20char*\2c\20char*&\29\20const
[asyncify] legalstub$std::__2::basic_filebuf<char\2c\20std::__2::char_traits<char>>::seekoff\28long\20long\2c\20std::__2::ios_base::seekdir\2c\20unsigned\20int\29 can change the state due to std::__2::basic_filebuf<char\2c\20std::__2::char_traits<char>>::seekoff\28long\20long\2c\20std::__2::ios_base::seekdir\2c\20unsigned\20int\29
[asyncify] std::__2::basic_ios<char\2c\20std::__2::char_traits<char>>::widen\5babi:v15006\5d\28char\29\20const can change the state due to std::__2::ctype<char>::widen\5babi:v15006\5d\28char\29\20const
[asyncify] std::__2::__num_put<char>::__widen_and_group_int\28char*\2c\20char*\2c\20char*\2c\20char*\2c\20char*&\2c\20char*&\2c\20std::__2::locale\20const&\29 can change the state due to std::__2::ctype<char>::widen\5babi:v15006\5d\28char\29\20const
[asyncify] std::__2::__num_put<char>::__widen_and_group_float\28char*\2c\20char*\2c\20char*\2c\20char*\2c\20char*&\2c\20char*&\2c\20std::__2::locale\20const&\29 can change the state due to std::__2::ctype<char>::widen\5babi:v15006\5d\28char\29\20const
[asyncify] std::__2::money_get<char\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>>::do_get\28std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20bool\2c\20std::__2::ios_base&\2c\20unsigned\20int&\2c\20std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>&\29\20const can change the state due to std::__2::ctype<char>::widen\5babi:v15006\5d\28char\29\20const
[asyncify] std::__2::__money_put<char>::__format\28char*\2c\20char*&\2c\20char*&\2c\20unsigned\20int\2c\20char\20const*\2c\20char\20const*\2c\20std::__2::ctype<char>\20const&\2c\20bool\2c\20std::__2::money_base::pattern\20const&\2c\20char\2c\20char\2c\20std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\2c\20std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\2c\20std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\2c\20int\29 can change the state due to std::__2::ctype<char>::widen\5babi:v15006\5d\28char\29\20const
[asyncify] std::__2::money_put<char\2c\20std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>>::do_put\28std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20bool\2c\20std::__2::ios_base&\2c\20char\2c\20std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\29\20const can change the state due to std::__2::ctype<char>::widen\5babi:v15006\5d\28char\29\20const
[asyncify] std::__2::basic_ios<wchar_t\2c\20std::__2::char_traits<wchar_t>>::widen\5babi:v15006\5d\28char\29\20const can change the state due to std::__2::ctype<wchar_t>::widen\5babi:v15006\5d\28char\29\20const
[asyncify] std::__2::__num_put<wchar_t>::__widen_and_group_int\28char*\2c\20char*\2c\20char*\2c\20wchar_t*\2c\20wchar_t*&\2c\20wchar_t*&\2c\20std::__2::locale\20const&\29 can change the state due to std::__2::ctype<wchar_t>::widen\5babi:v15006\5d\28char\29\20const
[asyncify] std::__2::__num_put<wchar_t>::__widen_and_group_float\28char*\2c\20char*\2c\20char*\2c\20wchar_t*\2c\20wchar_t*&\2c\20wchar_t*&\2c\20std::__2::locale\20const&\29 can change the state due to std::__2::ctype<wchar_t>::widen\5babi:v15006\5d\28char\29\20const
[asyncify] std::__2::money_get<wchar_t\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>::do_get\28std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20bool\2c\20std::__2::ios_base&\2c\20unsigned\20int&\2c\20std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>&\29\20const can change the state due to std::__2::ctype<wchar_t>::widen\5babi:v15006\5d\28char\29\20const
[asyncify] std::__2::money_put<wchar_t\2c\20std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>::do_put\28std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20bool\2c\20std::__2::ios_base&\2c\20wchar_t\2c\20std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>\20const&\29\20const can change the state due to std::__2::ctype<wchar_t>::widen\5babi:v15006\5d\28char\29\20const
[asyncify] std::__2::basic_ios<char\2c\20std::__2::char_traits<char>>::copyfmt\28std::__2::basic_ios<char\2c\20std::__2::char_traits<char>>\20const&\29 can change the state due to std::__2::ios_base::__call_callbacks\28std::__2::ios_base::event\29
[asyncify] std::__2::basic_ios<wchar_t\2c\20std::__2::char_traits<wchar_t>>::copyfmt\28std::__2::basic_ios<wchar_t\2c\20std::__2::char_traits<wchar_t>>\20const&\29 can change the state due to std::__2::ios_base::__call_callbacks\28std::__2::ios_base::event\29
[asyncify] std::__2::ios_base::imbue\28std::__2::locale\20const&\29 can change the state due to std::__2::ios_base::__call_callbacks\28std::__2::ios_base::event\29
[asyncify] std::__2::ios_base::~ios_base\28\29 can change the state due to std::__2::ios_base::__call_callbacks\28std::__2::ios_base::event\29
[asyncify] std::__2::ios_base::copyfmt\28std::__2::ios_base\20const&\29 can change the state due to std::__2::unique_ptr<void\20\28*\29\28std::__2::ios_base::event\2c\20std::__2::ios_base&\2c\20int\29\2c\20void\20\28*\29\28void*\29>::reset\5babi:v15006\5d\28void\20\28**\29\28std::__2::ios_base::event\2c\20std::__2::ios_base&\2c\20int\29\29
[asyncify] std::__2::unique_ptr<void\20\28*\29\28std::__2::ios_base::event\2c\20std::__2::ios_base&\2c\20int\29\2c\20void\20\28*\29\28void*\29>::~unique_ptr\5babi:v15006\5d\28\29 can change the state due to std::__2::unique_ptr<void\20\28*\29\28std::__2::ios_base::event\2c\20std::__2::ios_base&\2c\20int\29\2c\20void\20\28*\29\28void*\29>::reset\5babi:v15006\5d\28void\20\28**\29\28std::__2::ios_base::event\2c\20std::__2::ios_base&\2c\20int\29\29
[asyncify] std::__2::unique_ptr<int\2c\20void\20\28*\29\28void*\29>::~unique_ptr\5babi:v15006\5d\28\29 can change the state due to std::__2::unique_ptr<int\2c\20void\20\28*\29\28void*\29>::reset\5babi:v15006\5d\28int*\29
[asyncify] std::__2::unique_ptr<long\2c\20void\20\28*\29\28void*\29>::~unique_ptr\5babi:v15006\5d\28\29 can change the state due to std::__2::unique_ptr<long\2c\20void\20\28*\29\28void*\29>::reset\5babi:v15006\5d\28long*\29
[asyncify] std::__2::unique_ptr<void*\2c\20void\20\28*\29\28void*\29>::~unique_ptr\5babi:v15006\5d\28\29 can change the state due to std::__2::unique_ptr<void*\2c\20void\20\28*\29\28void*\29>::reset\5babi:v15006\5d\28void**\29
[asyncify] std::__2::DoIOSInit::DoIOSInit\28\29 can change the state due to std::__2::__stdinbuf<char>::__stdinbuf\28_IO_FILE*\2c\20__mbstate_t*\29
[asyncify] std::__2::__stdoutbuf<wchar_t>::__stdoutbuf\28_IO_FILE*\2c\20__mbstate_t*\29 can change the state due to std::__2::codecvt<wchar_t\2c\20char\2c\20__mbstate_t>::always_noconv\5babi:v15006\5d\28\29\20const
[asyncify] std::__2::__stdinbuf<wchar_t>::imbue\28std::__2::locale\20const&\29 can change the state due to std::__2::codecvt<wchar_t\2c\20char\2c\20__mbstate_t>::always_noconv\5babi:v15006\5d\28\29\20const
[asyncify] std::__2::__stdinbuf<wchar_t>::pbackfail\28unsigned\20int\29 can change the state due to std::__2::codecvt<wchar_t\2c\20char\2c\20__mbstate_t>::out\5babi:v15006\5d\28__mbstate_t&\2c\20wchar_t\20const*\2c\20wchar_t\20const*\2c\20wchar_t\20const*&\2c\20char*\2c\20char*\2c\20char*&\29\20const
[asyncify] std::__2::__stdoutbuf<wchar_t>::overflow\28unsigned\20int\29 can change the state due to std::__2::codecvt<wchar_t\2c\20char\2c\20__mbstate_t>::out\5babi:v15006\5d\28__mbstate_t&\2c\20wchar_t\20const*\2c\20wchar_t\20const*\2c\20wchar_t\20const*&\2c\20char*\2c\20char*\2c\20char*&\29\20const
[asyncify] std::__2::__stdinbuf<wchar_t>::__getchar\28bool\29 can change the state due to std::__2::codecvt<wchar_t\2c\20char\2c\20__mbstate_t>::in\5babi:v15006\5d\28__mbstate_t&\2c\20char\20const*\2c\20char\20const*\2c\20char\20const*&\2c\20wchar_t*\2c\20wchar_t*\2c\20wchar_t*&\29\20const
[asyncify] std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const*\20std::__2::__scan_keyword<std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const*\2c\20std::__2::ctype<char>>\28std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>&\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const*\2c\20std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const*\2c\20std::__2::ctype<char>\20const&\2c\20unsigned\20int&\2c\20bool\29 can change the state due to std::__2::unique_ptr<unsigned\20char\2c\20void\20\28*\29\28void*\29>::reset\5babi:v15006\5d\28unsigned\20char*\29
[asyncify] std::__2::unique_ptr<unsigned\20char\2c\20void\20\28*\29\28void*\29>::~unique_ptr\5babi:v15006\5d\28\29 can change the state due to std::__2::unique_ptr<unsigned\20char\2c\20void\20\28*\29\28void*\29>::reset\5babi:v15006\5d\28unsigned\20char*\29
[asyncify] std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>\20const*\20std::__2::__scan_keyword<std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>\20const*\2c\20std::__2::ctype<wchar_t>>\28std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>&\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>\20const*\2c\20std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>\20const*\2c\20std::__2::ctype<wchar_t>\20const&\2c\20unsigned\20int&\2c\20bool\29 can change the state due to std::__2::unique_ptr<unsigned\20char\2c\20void\20\28*\29\28void*\29>::reset\5babi:v15006\5d\28unsigned\20char*\29
[asyncify] std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>*\20std::__2::__scan_keyword<char*\2c\20std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>*\2c\20std::__2::ctype<char>>\28char*&\2c\20char*\2c\20std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>*\2c\20std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>*\2c\20std::__2::ctype<char>\20const&\2c\20unsigned\20int&\2c\20bool\29 can change the state due to std::__2::unique_ptr<unsigned\20char\2c\20void\20\28*\29\28void*\29>::reset\5babi:v15006\5d\28unsigned\20char*\29
[asyncify] std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>*\20std::__2::__scan_keyword<wchar_t*\2c\20std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>*\2c\20std::__2::ctype<wchar_t>>\28wchar_t*&\2c\20wchar_t*\2c\20std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>*\2c\20std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>*\2c\20std::__2::ctype<wchar_t>\20const&\2c\20unsigned\20int&\2c\20bool\29 can change the state due to std::__2::unique_ptr<unsigned\20char\2c\20void\20\28*\29\28void*\29>::reset\5babi:v15006\5d\28unsigned\20char*\29
[asyncify] std::__2::__num_get<char>::__stage2_float_prep\28std::__2::ios_base&\2c\20char*\2c\20char&\2c\20char&\29 can change the state due to std::__2::ctype<char>::widen\5babi:v15006\5d\28char\20const*\2c\20char\20const*\2c\20char*\29\20const
[asyncify] std::__2::num_get<char\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>>::do_get\28std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::ios_base&\2c\20unsigned\20int&\2c\20void*&\29\20const can change the state due to std::__2::ctype<char>::widen\5babi:v15006\5d\28char\20const*\2c\20char\20const*\2c\20char*\29\20const
[asyncify] std::__2::num_put<char\2c\20std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>>::do_put\28std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::ios_base&\2c\20char\2c\20void\20const*\29\20const can change the state due to std::__2::ctype<char>::widen\5babi:v15006\5d\28char\20const*\2c\20char\20const*\2c\20char*\29\20const
[asyncify] std::__2::money_get<char\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>>::do_get\28std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20bool\2c\20std::__2::ios_base&\2c\20unsigned\20int&\2c\20long\20double&\29\20const can change the state due to std::__2::ctype<char>::widen\5babi:v15006\5d\28char\20const*\2c\20char\20const*\2c\20char*\29\20const
[asyncify] std::__2::money_put<char\2c\20std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>>::do_put\28std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20bool\2c\20std::__2::ios_base&\2c\20char\2c\20long\20double\29\20const can change the state due to std::__2::ctype<char>::widen\5babi:v15006\5d\28char\20const*\2c\20char\20const*\2c\20char*\29\20const
[asyncify] std::__2::__num_get<wchar_t>::__stage2_float_prep\28std::__2::ios_base&\2c\20wchar_t*\2c\20wchar_t&\2c\20wchar_t&\29 can change the state due to std::__2::ctype<wchar_t>::widen\5babi:v15006\5d\28char\20const*\2c\20char\20const*\2c\20wchar_t*\29\20const
[asyncify] std::__2::num_get<wchar_t\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>::do_get\28std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::ios_base&\2c\20unsigned\20int&\2c\20void*&\29\20const can change the state due to std::__2::ctype<wchar_t>::widen\5babi:v15006\5d\28char\20const*\2c\20char\20const*\2c\20wchar_t*\29\20const
[asyncify] wchar_t\20const*\20std::__2::__num_get<wchar_t>::__do_widen_p<wchar_t>\28std::__2::ios_base&\2c\20wchar_t*\29\20const can change the state due to std::__2::ctype<wchar_t>::widen\5babi:v15006\5d\28char\20const*\2c\20char\20const*\2c\20wchar_t*\29\20const
[asyncify] std::__2::num_put<wchar_t\2c\20std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>::do_put\28std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::ios_base&\2c\20wchar_t\2c\20void\20const*\29\20const can change the state due to std::__2::ctype<wchar_t>::widen\5babi:v15006\5d\28char\20const*\2c\20char\20const*\2c\20wchar_t*\29\20const
[asyncify] std::__2::money_get<wchar_t\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>::do_get\28std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20bool\2c\20std::__2::ios_base&\2c\20unsigned\20int&\2c\20long\20double&\29\20const can change the state due to std::__2::ctype<wchar_t>::widen\5babi:v15006\5d\28char\20const*\2c\20char\20const*\2c\20wchar_t*\29\20const
[asyncify] std::__2::money_put<wchar_t\2c\20std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>::do_put\28std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20bool\2c\20std::__2::ios_base&\2c\20wchar_t\2c\20long\20double\29\20const can change the state due to std::__2::ctype<wchar_t>::widen\5babi:v15006\5d\28char\20const*\2c\20char\20const*\2c\20wchar_t*\29\20const
[asyncify] std::__2::__num_get<char>::__stage2_int_prep\28std::__2::ios_base&\2c\20char&\29 can change the state due to std::__2::numpunct<char>::thousands_sep\5babi:v15006\5d\28\29\20const
[asyncify] std::__2::__num_get<wchar_t>::__stage2_int_prep\28std::__2::ios_base&\2c\20wchar_t&\29 can change the state due to std::__2::numpunct<wchar_t>::thousands_sep\5babi:v15006\5d\28\29\20const
[asyncify] std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>\20std::__2::num_put<char\2c\20std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>>::__do_put_floating_point\5babi:v15006\5d<double>\28std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::ios_base&\2c\20char\2c\20double\2c\20char\20const*\29\20const can change the state due to std::__2::unique_ptr<char\2c\20void\20\28*\29\28void*\29>::reset\5babi:v15006\5d\28char*\29
[asyncify] std::__2::unique_ptr<char\2c\20void\20\28*\29\28void*\29>::~unique_ptr\5babi:v15006\5d\28\29 can change the state due to std::__2::unique_ptr<char\2c\20void\20\28*\29\28void*\29>::reset\5babi:v15006\5d\28char*\29
[asyncify] std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>\20std::__2::num_put<char\2c\20std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>>::__do_put_floating_point\5babi:v15006\5d<long\20double>\28std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::ios_base&\2c\20char\2c\20long\20double\2c\20char\20const*\29\20const can change the state due to std::__2::unique_ptr<char\2c\20void\20\28*\29\28void*\29>::reset\5babi:v15006\5d\28char*\29
[asyncify] std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\20std::__2::num_put<wchar_t\2c\20std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>::__do_put_floating_point\5babi:v15006\5d<double>\28std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::ios_base&\2c\20wchar_t\2c\20double\2c\20char\20const*\29\20const can change the state due to std::__2::unique_ptr<char\2c\20void\20\28*\29\28void*\29>::reset\5babi:v15006\5d\28char*\29
[asyncify] std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\20std::__2::num_put<wchar_t\2c\20std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>::__do_put_floating_point\5babi:v15006\5d<long\20double>\28std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::ios_base&\2c\20wchar_t\2c\20long\20double\2c\20char\20const*\29\20const can change the state due to std::__2::unique_ptr<char\2c\20void\20\28*\29\28void*\29>::reset\5babi:v15006\5d\28char*\29
[asyncify] std::__2::unique_ptr<char\2c\20void\20\28*\29\28void*\29>::operator=\5babi:v15006\5d\28std::__2::unique_ptr<char\2c\20void\20\28*\29\28void*\29>&&\29 can change the state due to std::__2::unique_ptr<char\2c\20void\20\28*\29\28void*\29>::reset\5babi:v15006\5d\28char*\29
[asyncify] std::__2::unique_ptr<wchar_t\2c\20void\20\28*\29\28void*\29>::~unique_ptr\5babi:v15006\5d\28\29 can change the state due to std::__2::unique_ptr<wchar_t\2c\20void\20\28*\29\28void*\29>::reset\5babi:v15006\5d\28wchar_t*\29
[asyncify] std::__2::unique_ptr<wchar_t\2c\20void\20\28*\29\28void*\29>::operator=\5babi:v15006\5d\28std::__2::unique_ptr<wchar_t\2c\20void\20\28*\29\28void*\29>&&\29 can change the state due to std::__2::unique_ptr<wchar_t\2c\20void\20\28*\29\28void*\29>::reset\5babi:v15006\5d\28wchar_t*\29
[asyncify] std::__2::time_get<char\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>>::do_get_time\28std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::ios_base&\2c\20unsigned\20int&\2c\20tm*\29\20const can change the state due to std::__2::time_get<char\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>>::get\28std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::ios_base&\2c\20unsigned\20int&\2c\20tm*\2c\20char\20const*\2c\20char\20const*\29\20const
[asyncify] int\20std::__2::__get_up_to_n_digits<char\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>>\28std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>&\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20unsigned\20int&\2c\20std::__2::ctype<char>\20const&\2c\20int\29 can change the state due to std::__2::ctype<char>::narrow\5babi:v15006\5d\28char\2c\20char\29\20const
[asyncify] std::__2::time_get<char\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>>::__get_percent\28std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>&\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20unsigned\20int&\2c\20std::__2::ctype<char>\20const&\29\20const can change the state due to std::__2::ctype<char>::narrow\5babi:v15006\5d\28char\2c\20char\29\20const
[asyncify] int\20std::__2::__get_up_to_n_digits<char\2c\20char*>\28char*&\2c\20char*\2c\20unsigned\20int&\2c\20std::__2::ctype<char>\20const&\2c\20int\29 can change the state due to std::__2::ctype<char>::narrow\5babi:v15006\5d\28char\2c\20char\29\20const
[asyncify] std::__2::time_get<char\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>>::do_get_weekday\28std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::ios_base&\2c\20unsigned\20int&\2c\20tm*\29\20const can change the state due to std::__2::time_get<char\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>>::__get_weekdayname\28int&\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>&\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20unsigned\20int&\2c\20std::__2::ctype<char>\20const&\29\20const
[asyncify] std::__2::time_get<char\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>>::do_get_monthname\28std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::ios_base&\2c\20unsigned\20int&\2c\20tm*\29\20const can change the state due to std::__2::time_get<char\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>>::__get_monthname\28int&\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>&\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20unsigned\20int&\2c\20std::__2::ctype<char>\20const&\29\20const
[asyncify] std::__2::time_get<wchar_t\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>::do_get_time\28std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::ios_base&\2c\20unsigned\20int&\2c\20tm*\29\20const can change the state due to std::__2::time_get<wchar_t\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>::get\28std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::ios_base&\2c\20unsigned\20int&\2c\20tm*\2c\20wchar_t\20const*\2c\20wchar_t\20const*\29\20const
[asyncify] std::__2::time_get<wchar_t\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>::__get_percent\28std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>&\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20unsigned\20int&\2c\20std::__2::ctype<wchar_t>\20const&\29\20const can change the state due to std::__2::ctype<wchar_t>::narrow\5babi:v15006\5d\28wchar_t\2c\20char\29\20const
[asyncify] std::__2::time_get<wchar_t\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>::do_get_weekday\28std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::ios_base&\2c\20unsigned\20int&\2c\20tm*\29\20const can change the state due to std::__2::time_get<wchar_t\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>::__get_weekdayname\28int&\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>&\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20unsigned\20int&\2c\20std::__2::ctype<wchar_t>\20const&\29\20const
[asyncify] std::__2::time_get<wchar_t\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>::do_get_monthname\28std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::ios_base&\2c\20unsigned\20int&\2c\20tm*\29\20const can change the state due to std::__2::time_get<wchar_t\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>::__get_monthname\28int&\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>&\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20unsigned\20int&\2c\20std::__2::ctype<wchar_t>\20const&\29\20const
[asyncify] std::__2::__money_get<char>::__gather_info\28bool\2c\20std::__2::locale\20const&\2c\20std::__2::money_base::pattern&\2c\20char&\2c\20char&\2c\20std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>&\2c\20std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>&\2c\20std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>&\2c\20std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>&\2c\20int&\29 can change the state due to std::__2::moneypunct<char\2c\20true>::neg_format\5babi:v15006\5d\28\29\20const
[asyncify] std::__2::__money_put<char>::__gather_info\28bool\2c\20bool\2c\20std::__2::locale\20const&\2c\20std::__2::money_base::pattern&\2c\20char&\2c\20char&\2c\20std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>&\2c\20std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>&\2c\20std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>&\2c\20int&\29 can change the state due to std::__2::moneypunct<char\2c\20true>::neg_format\5babi:v15006\5d\28\29\20const
[asyncify] std::__2::unique_ptr<unsigned\20int\2c\20void\20\28*\29\28void*\29>::~unique_ptr\5babi:v15006\5d\28\29 can change the state due to std::__2::unique_ptr<unsigned\20int\2c\20void\20\28*\29\28void*\29>::reset\5babi:v15006\5d\28unsigned\20int*\29
[asyncify] std::__2::unique_ptr<unsigned\20int\2c\20void\20\28*\29\28void*\29>::operator=\5babi:v15006\5d\28std::__2::unique_ptr<unsigned\20int\2c\20void\20\28*\29\28void*\29>&&\29 can change the state due to std::__2::unique_ptr<unsigned\20int\2c\20void\20\28*\29\28void*\29>::reset\5babi:v15006\5d\28unsigned\20int*\29
[asyncify] std::__2::__money_get<wchar_t>::__gather_info\28bool\2c\20std::__2::locale\20const&\2c\20std::__2::money_base::pattern&\2c\20wchar_t&\2c\20wchar_t&\2c\20std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>&\2c\20std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>&\2c\20std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>&\2c\20std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>&\2c\20int&\29 can change the state due to std::__2::moneypunct<wchar_t\2c\20true>::neg_format\5babi:v15006\5d\28\29\20const
[asyncify] std::__2::__money_put<wchar_t>::__gather_info\28bool\2c\20bool\2c\20std::__2::locale\20const&\2c\20std::__2::money_base::pattern&\2c\20wchar_t&\2c\20wchar_t&\2c\20std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>&\2c\20std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>&\2c\20std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>&\2c\20int&\29 can change the state due to std::__2::moneypunct<wchar_t\2c\20true>::neg_format\5babi:v15006\5d\28\29\20const
[asyncify] decltype\28std::declval<std::__2::\28anonymous\20namespace\29::__fake_bind>\28\29\28\29\29\20std::__2::__invoke\5babi:v15006\5d<std::__2::\28anonymous\20namespace\29::__fake_bind>\28std::__2::\28anonymous\20namespace\29::__fake_bind&&\29 can change the state due to std::__2::\28anonymous\20namespace\29::__fake_bind::operator\28\29\28\29\20const
[asyncify] void\20std::__2::call_once\5babi:v15006\5d<std::__2::\28anonymous\20namespace\29::__fake_bind>\28std::__2::once_flag&\2c\20std::__2::\28anonymous\20namespace\29::__fake_bind&&\29 can change the state due to std::__2::__call_once\28unsigned\20long\20volatile&\2c\20void*\2c\20void\20\28*\29\28void*\29\29
[asyncify] g_ACCESS_DETECTION_getObject\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] Graphics::TransparentSurface::scale\28short\2c\20short\2c\20bool\29\20const can change the state due to operator\20new\28unsigned\20long\29
[asyncify] Graphics::TransparentSurface::rotoscale\28Graphics::TransformStruct\20const&\2c\20bool\29\20const can change the state due to operator\20new\28unsigned\20long\29
[asyncify] Graphics::scale\28Graphics::Surface\20const&\2c\20int\2c\20int\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] g_TOWNS_getObject\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] g_PC98_getObject\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] g_SEGACD_getObject\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] g_APPLEIIGS_getObject\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] g_MT32_getObject\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] MT32Emu::ScummVMReportHandler::showLCDMessage\28char\20const*\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] g_PCSPK_getObject\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] g_PCJR_getObject\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] SynthFile::AddInstr\28unsigned\20int\2c\20unsigned\20int\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] SynthFile::AddWave\28unsigned\20short\2c\20unsigned\20short\2c\20int\2c\20int\2c\20unsigned\20short\2c\20unsigned\20short\2c\20unsigned\20int\2c\20unsigned\20char*\2c\20Common::String\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] SynthInstr::AddRgn\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] SynthRgn::AddArt\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] SynthRgn::AddSampInfo\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] SynthWave::AddSampInfo\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] VGMContainerItem::AddHeader\28unsigned\20int\2c\20unsigned\20int\2c\20Common::String\20const&\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] VGMContainerItem::AddSimpleItem\28unsigned\20int\2c\20unsigned\20int\2c\20Common::String\20const&\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] VGMRgn::AddGeneralItem\28unsigned\20int\2c\20unsigned\20int\2c\20Common::String\20const&\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] VGMRgn::AddPan\28unsigned\20char\2c\20unsigned\20int\2c\20unsigned\20int\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] VGMRgn::AddVolume\28double\2c\20unsigned\20int\2c\20unsigned\20int\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] VGMRgn::AddUnityKey\28signed\20char\2c\20unsigned\20int\2c\20unsigned\20int\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] VGMRgn::AddKeyLow\28unsigned\20char\2c\20unsigned\20int\2c\20unsigned\20int\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] VGMRgn::AddKeyHigh\28unsigned\20char\2c\20unsigned\20int\2c\20unsigned\20int\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] VGMRgn::AddSampNum\28int\2c\20unsigned\20int\2c\20unsigned\20int\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] Math::DCT::DCT\28int\2c\20Math::DCT::TransformType\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] Math::FFT::FFT\28int\2c\20int\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] Math::MDCT::MDCT\28int\2c\20bool\2c\20double\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] Math::RDFT::RDFT\28int\2c\20Math::RDFT::TransformType\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] Common::SearchSet::insert\28Common::SearchSet::Node\20const&\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] Common::CoroutineScheduler::createEvent\28bool\2c\20bool\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] Common::DebugManager::getDebugChannels\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] debugChannelSet\28int\2c\20unsigned\20int\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] Common::EventDispatcher::registerMapper\28Common::EventMapper*\2c\20bool\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] Common::EventDispatcher::registerSource\28Common::EventSource*\2c\20bool\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] Common::EventDispatcher::registerObserver\28Common::EventObserver*\2c\20unsigned\20int\2c\20bool\2c\20bool\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] Common::makeKeyboardRepeatingEventSource\28Common::EventSource*\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] Common::FSNode::FSNode\28AbstractFSNode*\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] Common::updateGameGUIOptions\28Common::String\20const&\2c\20Common::String\20const&\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] Common::getLanguageList\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] Common::getLanguageYesNo\28Common::KeyCode&\2c\20Common::KeyCode&\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] Common::getPlatformList\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] Common::normalizePath\28Common::String\20const&\2c\20char\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] Common::wrapBufferedReadStream\28Common::ReadStream*\2c\20unsigned\20int\2c\20DisposeAfterUse::Flag\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] Common::wrapBufferedSeekableReadStream\28Common::SeekableReadStream*\2c\20unsigned\20int\2c\20DisposeAfterUse::Flag\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] Common::wrapBufferedWriteStream\28Common::SeekableWriteStream*\2c\20unsigned\20int\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] Common::wrapBufferedWriteStream\28Common::WriteStream*\2c\20unsigned\20int\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] Common::StreamDebug::StreamDebug\28int\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] Common::String::encodeOneByte\28Common::U32String\20const&\2c\20Common::CodePage\2c\20bool\2c\20char\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] Common::TTSVoice::TTSVoice\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] Common::TTSVoice::TTSVoice\28Common::TTSVoice::Gender\2c\20Common::TTSVoice::Age\2c\20void*\2c\20Common::String\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] Common::TextToSpeechManager::TextToSpeechManager\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] Common::getHumanReadableBytes\28unsigned\20long\20long\2c\20Common::String&\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] Common::ClickteamInstaller::listMembers\28Common::List<Common::SharedPtr<Common::ArchiveMember>>&\29\20const can change the state due to operator\20new\28unsigned\20long\29
[asyncify] Common::\28anonymous\20namespace\29::InstallShieldCabinet::getMember\28Common::Path\20const&\29\20const can change the state due to operator\20new\28unsigned\20long\29
[asyncify] Common::InstallShieldV3::getMember\28Common::Path\20const&\29\20const can change the state due to operator\20new\28unsigned\20long\29
[asyncify] Common::StuffItArchive::getMember\28Common::Path\20const&\29\20const can change the state due to operator\20new\28unsigned\20long\29
[asyncify] Common::ArjArchive::listMembers\28Common::List<Common::SharedPtr<Common::ArchiveMember>>&\29\20const can change the state due to operator\20new\28unsigned\20long\29
[asyncify] Common::ZipArchive::listMembers\28Common::List<Common::SharedPtr<Common::ArchiveMember>>&\29\20const can change the state due to operator\20new\28unsigned\20long\29
[asyncify] Common::MacVISEArchive::listMembers\28Common::List<Common::SharedPtr<Common::ArchiveMember>>&\29\20const can change the state due to operator\20new\28unsigned\20long\29
[asyncify] Common::MacVISEArchive::getMember\28Common::Path\20const&\29\20const can change the state due to operator\20new\28unsigned\20long\29
[asyncify] Common::INIFile::Section::setKey\28Common::String\20const&\2c\20Common::String\20const&\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] Common::JSONValue::parse\28char\20const**\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] Common::JSONValue::JSONValue\28char\20const*\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] Common::JSONValue::JSONValue\28Common::String\20const&\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] Common::JSONValue::JSONValue\28Common::HashMap<Common::String\2c\20Common::JSONValue*\2c\20Common::Hash<Common::String>\2c\20Common::EqualTo<Common::String>>\20const&\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] Common::QuickTimeParser::QuickTimeParser\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] Common::XMLParser::loadBuffer\28unsigned\20char\20const*\2c\20unsigned\20int\2c\20DisposeAfterUse::Flag\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] ChRootFilesystemFactory::makeRootFileNode\28\29\20const can change the state due to operator\20new\28unsigned\20long\29
[asyncify] ChRootFilesystemFactory::makeCurrentDirectoryFileNode\28\29\20const can change the state due to operator\20new\28unsigned\20long\29
[asyncify] ChRootFilesystemFactory::makeFileNodePath\28Common::String\20const&\29\20const can change the state due to operator\20new\28unsigned\20long\29
[asyncify] Video::AVIDecoder::createAudioTrack\28Video::AVIDecoder::AVIStreamHeader\2c\20Video::AVIDecoder::PCMWaveFormat\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] Video::PreIMDDecoder::renderFrame\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] Video::VMDDecoder::create16bitDPCM\28Common::SeekableReadStream*\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] Video::PacoDecoder::PacoVideoTrack::PacoVideoTrack\28unsigned\20short\2c\20unsigned\20short\2c\20unsigned\20short\2c\20unsigned\20short\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] Common::Huffman<Common::BitStreamImpl<Common::BitStreamMemoryStream\2c\20unsigned\20long\20long\2c\2016\2c\20true\2c\20true>>::Huffman\28unsigned\20char\2c\20unsigned\20int\2c\20unsigned\20int\20const*\2c\20unsigned\20char\20const*\2c\20unsigned\20int\20const*\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] Video::QuickTimeDecoder::VideoTrackHandler::forceDither\28Graphics::Surface\20const&\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] Video::BigHuffmanTree::BigHuffmanTree\28Common::BitStreamImpl<Common::BitStreamMemoryStream\2c\20unsigned\20int\2c\208\2c\20false\2c\20false>&\2c\20int\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] Video::SmackerDecoder::SmackerVideoTrack::readTrees\28Common::BitStreamImpl<Common::BitStreamMemoryStream\2c\20unsigned\20int\2c\208\2c\20false\2c\20false>&\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] Video::SmackerDecoder::SmackerVideoTrack::SmackerVideoTrack\28unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int\2c\20Common::Rational\20const&\2c\20unsigned\20int\2c\20unsigned\20int\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] Video::SmackerDecoder::createVideoTrack\28unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int\2c\20Common::Rational\20const&\2c\20unsigned\20int\2c\20unsigned\20int\29\20const can change the state due to operator\20new\28unsigned\20long\29
[asyncify] Video::Subtitles::Subtitles\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] Video::BinkDecoder::BinkVideoTrack::BinkVideoTrack\28unsigned\20int\2c\20unsigned\20int\2c\20Graphics::PixelFormat\20const&\2c\20unsigned\20int\2c\20Common::Rational\20const&\2c\20bool\2c\20bool\2c\20unsigned\20int\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] Common::Huffman<Common::BitStreamImpl<Common::SeekableReadStream\2c\20unsigned\20long\20long\2c\2032\2c\20true\2c\20false>>::Huffman\28unsigned\20char\2c\20unsigned\20int\2c\20unsigned\20int\20const*\2c\20unsigned\20char\20const*\2c\20unsigned\20int\20const*\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] Video::BinkDecoder::BinkVideoTrack::initHuffman\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] Image::Codec::createQuickTimeDitherTable\28unsigned\20char\20const*\2c\20unsigned\20int\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] Image::createHNM6Decoder\28unsigned\20short\2c\20unsigned\20short\2c\20Graphics::PixelFormat\20const&\2c\20unsigned\20int\2c\20bool\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] Common::Singleton<Graphics::YUVToRGBManager>::instance\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] Image::MSRLEDecoder::MSRLEDecoder\28unsigned\20short\2c\20unsigned\20short\2c\20unsigned\20char\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] Image::MSRLE4Decoder::MSRLE4Decoder\28unsigned\20short\2c\20unsigned\20short\2c\20unsigned\20char\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] Image::MSVideo1Decoder::MSVideo1Decoder\28unsigned\20short\2c\20unsigned\20short\2c\20unsigned\20char\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] Image::SMCDecoder::SMCDecoder\28unsigned\20short\2c\20unsigned\20short\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] Common::Huffman<Common::BitStreamImpl<Common::SeekableReadStream\2c\20unsigned\20long\20long\2c\2032\2c\20false\2c\20true>>::Huffman\28unsigned\20char\2c\20unsigned\20int\2c\20unsigned\20int\20const*\2c\20unsigned\20char\20const*\2c\20unsigned\20int\20const*\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] Image::XanDecoder::convertYUVtoRGBSurface\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] Graphics::create_g_consolefont\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] Graphics::create_g_sysfont_big\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] Graphics::create_g_sysfont\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] Graphics::TTFFont::~TTFFont\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] Graphics::MacFont::MacFont\28int\2c\20int\2c\20int\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] tglGenBlitImage\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] Common::List<TinyGL::DrawCall*>::operator=\28Common::List<TinyGL::DrawCall*>\20const&\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] DotMatrixPlugin::createInstance\28Graphics::PixelFormat\20const&\29\20const can change the state due to operator\20new\28unsigned\20long\29
[asyncify] g_DOTMATRIX_getObject\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] SAIPlugin::createInstance\28Graphics::PixelFormat\20const&\29\20const can change the state due to operator\20new\28unsigned\20long\29
[asyncify] g_SAI_getObject\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] SuperSAIPlugin::createInstance\28Graphics::PixelFormat\20const&\29\20const can change the state due to operator\20new\28unsigned\20long\29
[asyncify] g_SUPERSAI_getObject\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] SuperEaglePlugin::createInstance\28Graphics::PixelFormat\20const&\29\20const can change the state due to operator\20new\28unsigned\20long\29
[asyncify] g_SUPEREAGLE_getObject\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] PMPlugin::createInstance\28Graphics::PixelFormat\20const&\29\20const can change the state due to operator\20new\28unsigned\20long\29
[asyncify] g_PM_getObject\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] AdvMamePlugin::createInstance\28Graphics::PixelFormat\20const&\29\20const can change the state due to operator\20new\28unsigned\20long\29
[asyncify] g_ADVMAME_getObject\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] TVPlugin::createInstance\28Graphics::PixelFormat\20const&\29\20const can change the state due to operator\20new\28unsigned\20long\29
[asyncify] g_TV_getObject\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] EuphonyPlayer::EuphonyPlayer\28Audio::Mixer*\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] EuphonyDriver::EuphonyDriver\28Audio::Mixer*\2c\20EuphonyPlayer*\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] TownsPC98_MusicChannel::TownsPC98_MusicChannel\28TownsPC98_AudioDriver*\2c\20unsigned\20char\2c\20unsigned\20char\2c\20unsigned\20char\2c\20unsigned\20char\2c\20unsigned\20char\2c\20unsigned\20char\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] TownsPC98_MusicChannelSSG::TownsPC98_MusicChannelSSG\28TownsPC98_AudioDriver*\2c\20unsigned\20char\2c\20unsigned\20char\2c\20unsigned\20char\2c\20unsigned\20char\2c\20unsigned\20char\2c\20unsigned\20char\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] TownsPC98_MusicChannelPCM::TownsPC98_MusicChannelPCM\28TownsPC98_AudioDriver*\2c\20unsigned\20char\2c\20unsigned\20char\2c\20unsigned\20char\2c\20unsigned\20char\2c\20unsigned\20char\2c\20unsigned\20char\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] TownsPC98_AudioDriver::TownsPC98_AudioDriver\28Audio::Mixer*\2c\20PC98AudioPluginDriver::EmuType\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] EdgePlugin::createInstance\28Graphics::PixelFormat\20const&\29\20const can change the state due to operator\20new\28unsigned\20long\29
[asyncify] g_EDGE_getObject\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] g_ADLIB_getObject\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] Audio::makeNullAudioStream\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] Audio::makeSilentAudioStream\28int\2c\20bool\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] MidiParser_QT::handleNoteEvent\28unsigned\20int\2c\20unsigned\20char\2c\20unsigned\20char\2c\20unsigned\20int\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] MidiParser_QT::setupPart\28unsigned\20int\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] MidiParser::createParser_QT\28signed\20char\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] MidiParser::createParser_SMF\28signed\20char\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] MidiParser::createParser_XMIDI\28void\20\28*\29\28unsigned\20char\2c\20void*\29\2c\20void*\2c\20int\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] Audio::MidiDriver_Miles_Midi::initControlData\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] MidiDriver_MT32GM::initControlData\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] NullMusicPlugin::createInstance\28MidiDriver**\2c\20unsigned\20int\29\20const can change the state due to operator\20new\28unsigned\20long\29
[asyncify] g_AUTO_getObject\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] g_NULL_getObject\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] Audio::makePacketizedADPCMStream\28Audio::ADPCMType\2c\20int\2c\20int\2c\20unsigned\20int\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] Audio::makeAPCStream\28unsigned\20int\2c\20bool\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] Audio::makeALawStream\28Common::SeekableReadStream*\2c\20DisposeAfterUse::Flag\2c\20int\2c\20int\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] Audio::makeMuLawStream\28Common::SeekableReadStream*\2c\20DisposeAfterUse::Flag\2c\20int\2c\20int\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] Audio::makePacketizedRawStream\28int\2c\20unsigned\20char\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] Common::Huffman<Common::BitStreamImpl<Common::SeekableReadStream\2c\20unsigned\20long\20long\2c\208\2c\20false\2c\20true>>::Huffman\28unsigned\20char\2c\20unsigned\20int\2c\20unsigned\20int\20const*\2c\20unsigned\20char\20const*\2c\20unsigned\20int\20const*\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] Audio::WMACodec::initCoefHuffman\28unsigned\20short*&\2c\20float*&\2c\20unsigned\20short*&\2c\20Audio::WMACoefHuffmanParam\20const&\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] Audio::WMACodec::initExponents\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] Audio::WMACodec::initNoise\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] Audio::makeXAStream\28Common::SeekableReadStream*\2c\20int\2c\20DisposeAfterUse::Flag\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] g_AMIGA_getObject\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] g_CMS_getObject\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] Lua::LuaFileProxy::create\28Common::String\20const&\2c\20Common::String\20const&\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] Lua::LuaFileConfig::setupConfigFile\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] Lua::LuaFileConfig::updateSetting\28Common::String\20const&\2c\20Common::String\20const&\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] MT32Emu::Analog::createAnalog\28MT32Emu::AnalogOutputMode\2c\20bool\2c\20MT32Emu::RendererType\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] MT32Emu::AnalogImpl<int>::AnalogImpl\28MT32Emu::AnalogOutputMode\2c\20bool\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] MT32Emu::AnalogImpl<float>::AnalogImpl\28MT32Emu::AnalogOutputMode\2c\20bool\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] MT32Emu::AbstractLowPassFilter<int>::createLowPassFilter\28MT32Emu::AnalogOutputMode\2c\20bool\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] MT32Emu::AbstractLowPassFilter<float>::createLowPassFilter\28MT32Emu::AnalogOutputMode\2c\20bool\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] MT32Emu::BReverbModel::createBReverbModel\28MT32Emu::ReverbMode\2c\20bool\2c\20MT32Emu::RendererType\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] MT32Emu::Partial::Partial\28MT32Emu::Synth*\2c\20int\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] MT32Emu::PartialManager::PartialManager\28MT32Emu::Synth*\2c\20MT32Emu::Part**\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] MT32Emu::Synth::initMemoryRegions\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] MT32Emu::MidiEventQueue::SysexDataStorage::create\28unsigned\20int\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] MT32Emu::MidiEventQueue::MidiEventQueue\28unsigned\20int\2c\20unsigned\20int\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] mt32emu_add_rom_data can change the state due to operator\20new\28unsigned\20long\29
[asyncify] SRCTools::ResamplerModel::createResamplerModel\28SRCTools::FloatSampleProvider&\2c\20double\2c\20double\2c\20SRCTools::ResamplerModel::Quality\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] SRCTools::ResamplerModel::createResamplerModel\28SRCTools::FloatSampleProvider&\2c\20SRCTools::ResamplerStage**\2c\20unsigned\20int\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] SRCTools::ResamplerModel::createResamplerModel\28SRCTools::FloatSampleProvider&\2c\20SRCTools::ResamplerStage&\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] SRCTools::SincResampler::createSincResampler\28double\2c\20double\2c\20double\2c\20double\2c\20double\2c\20unsigned\20int\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] std::__2::__construct_barrier_algorithm_base\28long&\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] std::__2::notify_all_at_thread_exit\28std::__2::condition_variable&\2c\20std::__2::unique_lock<std::__2::mutex>\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] void*\20std::__2::__libcpp_operator_new\5babi:v15006\5d<unsigned\20long>\28unsigned\20long\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] std::__2::promise<void>::promise\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] std::__2::locale::__imp::__imp\28std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\2c\20unsigned\20long\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] std::__2::locale::__imp::__imp\28std::__2::locale::__imp\20const&\2c\20std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\2c\20int\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] std::__2::locale::locale\28char\20const*\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] std::__2::locale::locale\28std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] std::__2::locale::locale\28std::__2::locale\20const&\2c\20char\20const*\2c\20int\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] std::__2::locale::locale\28std::__2::locale\20const&\2c\20std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\2c\20int\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] std::__2::locale::locale\28std::__2::locale\20const&\2c\20std::__2::locale\20const&\2c\20int\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] std::__2::locale::__install_ctor\28std::__2::locale\20const&\2c\20std::__2::locale::facet*\2c\20long\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] operator\20new\28unsigned\20long\2c\20std::nothrow_t\20const&\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] operator\20new\5b\5d\28unsigned\20long\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] std::__2::__libcpp_refstring::__libcpp_refstring\28char\20const*\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] std::__2::__thread_struct::__thread_struct\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] std::__2::__hidden_allocator<std::__2::pair<std::__2::condition_variable*\2c\20std::__2::mutex*>>::allocate\28unsigned\20long\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] std::__2::__hidden_allocator<std::__2::__assoc_sub_state*>::allocate\28unsigned\20long\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] GUI::ListWidget::ListWidget\28GUI::Dialog*\2c\20Common::String\20const&\2c\20Common::U32String\20const&\2c\20unsigned\20int\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] GUI::ListWidget::ListWidget\28GUI::Dialog*\2c\20int\2c\20int\2c\20int\2c\20int\2c\20Common::U32String\20const&\2c\20unsigned\20int\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] DefaultEventManager::DefaultEventManager\28Common::EventSource*\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] DefaultEventManager::pushEvent\28Common::Event\20const&\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] Common::List<Common::Event>::operator=\28Common::List<Common::Event>\20const&\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] DefaultEventManager::notifyEvent\28Common::Event\20const&\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] non-virtual\20thunk\20to\20DefaultEventManager::notifyEvent\28Common::Event\20const&\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] StdioStream::makeFromPath\28Common::String\20const&\2c\20bool\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] Common::KeyboardHardwareInputSet::findHardwareInput\28Common::String\20const&\29\20const can change the state due to operator\20new\28unsigned\20long\29
[asyncify] Common::KeyboardHardwareInputSet::findHardwareInput\28Common::Event\20const&\29\20const can change the state due to operator\20new\28unsigned\20long\29
[asyncify] Common::MouseHardwareInputSet::findHardwareInput\28Common::String\20const&\29\20const can change the state due to operator\20new\28unsigned\20long\29
[asyncify] Common::MouseHardwareInputSet::findHardwareInput\28Common::Event\20const&\29\20const can change the state due to operator\20new\28unsigned\20long\29
[asyncify] Common::JoystickHardwareInputSet::findHardwareInput\28Common::String\20const&\29\20const can change the state due to operator\20new\28unsigned\20long\29
[asyncify] Common::JoystickHardwareInputSet::findHardwareInput\28Common::Event\20const&\29\20const can change the state due to operator\20new\28unsigned\20long\29
[asyncify] Common::CustomHardwareInputSet::findHardwareInput\28Common::String\20const&\29\20const can change the state due to operator\20new\28unsigned\20long\29
[asyncify] Common::CustomHardwareInputSet::findHardwareInput\28Common::Event\20const&\29\20const can change the state due to operator\20new\28unsigned\20long\29
[asyncify] Common::Keymapper::Keymapper\28Common::EventManager*\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] Common::VirtualMouse::VirtualMouse\28Common::EventDispatcher*\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] Common::VirtualMouse::handleAxisMotion\28short\2c\20short\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] Common::VirtualMouse::computeJoystickMouseSpeedFactor\28\29\20const can change the state due to operator\20new\28unsigned\20long\29
[asyncify] Common::VirtualMouse::addActionsToKeymap\28Common::Keymap*\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] SeqMusicPlugin::createInstance\28MidiDriver**\2c\20unsigned\20int\29\20const can change the state due to operator\20new\28unsigned\20long\29
[asyncify] g_SEQ_getObject\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] TimidityMusicPlugin::createInstance\28MidiDriver**\2c\20unsigned\20int\29\20const can change the state due to operator\20new\28unsigned\20long\29
[asyncify] g_TIMIDITY_getObject\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] DefaultSaveFileManager::DefaultSaveFileManager\28Common::String\20const&\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] OpenGL::TextureTarget::TextureTarget\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] OpenGL::OpenGLGraphicsManager::OpenGLGraphicsManager\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] OpenGL::LibRetroPipeline::isSupportedByContext\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] OpenGL::OpenGLGraphicsManager::getSupportedFormats\28\29\20const can change the state due to operator\20new\28unsigned\20long\29
[asyncify] OpenGL::OpenGLGraphicsManager::getGLPixelFormat\28Graphics::PixelFormat\20const&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\29\20const can change the state due to operator\20new\28unsigned\20long\29
[asyncify] OpenGL::TextureCLUT8GPU::isSupportedByContext\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] Graphics::Screen::addDirtyRect\28Common::Rect\20const&\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] NormalPlugin::createInstance\28Graphics::PixelFormat\20const&\29\20const can change the state due to operator\20new\28unsigned\20long\29
[asyncify] g_NORMAL_getObject\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] Graphics::Surface::scale\28short\2c\20short\2c\20bool\29\20const can change the state due to operator\20new\28unsigned\20long\29
[asyncify] Graphics::Surface::rotoscale\28Graphics::TransformStruct\20const&\2c\20bool\29\20const can change the state due to operator\20new\28unsigned\20long\29
[asyncify] Graphics::FloodFill::FloodFill\28Graphics::Surface*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20bool\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] Graphics::FloodFill::fillMask\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] HQPlugin::createInstance\28Graphics::PixelFormat\20const&\29\20const can change the state due to operator\20new\28unsigned\20long\29
[asyncify] g_HQ_getObject\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] g_C64_getObject\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] MemFile::MemFile\28unsigned\20char\20const*\2c\20unsigned\20int\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] ListTypeChunk::AddChildChunk\28Chunk*\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] SF2InfoListChunk::SF2InfoListChunk\28Common::String\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] SF2File::SF2File\28SynthFile*\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] Base::registerDefaults\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] Common::Singleton<Common::ConfigManager>::instance\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] Base::createTemporaryTarget\28Common::String\20const&\2c\20Common::String\20const&\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] PluginManager::instance\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] PluginManager::PluginManager\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] EngineManager::getPlugins\28PluginType\29\20const can change the state due to operator\20new\28unsigned\20long\29
[asyncify] EngineManager::generateUniqueDomain\28Common::String\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] EngineManager::createTargetForGame\28DetectedGame\20const&\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] MusicManager::getPlugins\28\29\20const can change the state due to operator\20new\28unsigned\20long\29
[asyncify] ScalerManager::getPlugins\28\29\20const can change the state due to operator\20new\28unsigned\20long\29
[asyncify] StaticPluginProvider::getPlugins\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] Common::List<Common::INIFile::Section>::List\28Common::List<Common::INIFile::Section>\20const&\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] Common::AchievementsManager::getCurrentLang\28\29\20const can change the state due to operator\20new\28unsigned\20long\29
[asyncify] Common::List<Common::INIFile::KeyValue>::List\28Common::List<Common::INIFile::KeyValue>\20const&\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] FileMapArchive::listMembers\28Common::List<Common::SharedPtr<Common::ArchiveMember>>&\29\20const can change the state due to operator\20new\28unsigned\20long\29
[asyncify] FileMapArchive::getMember\28Common::Path\20const&\29\20const can change the state due to operator\20new\28unsigned\20long\29
[asyncify] GUI::ExtraGuiOptionsWidget::dialogLayout\28Common::String\20const&\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] GUI::ExtraGuiOptionsWidget::save\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] ChainedGamesManager::push\28Common::String\2c\20int\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] Graphics::MacFontManager::registerFontName\28Common::String\2c\20int\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] Common::Singleton<Common::MainTranslationManager>::instance\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] Engine::getOrCreateDebugger\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] generateUnknownGameReport\28Common::Array<DetectedGame>\20const&\2c\20bool\2c\20bool\2c\20unsigned\20int\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] SaveStateDescriptor::hasAutosaveName\28\29\20const can change the state due to operator\20new\28unsigned\20long\29
[asyncify] GUI::Debugger::cmdDebugFlagsList\28int\2c\20char\20const**\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] GUI::Debugger::cmdDebugFlagEnable\28int\2c\20char\20const**\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] GUI::Debugger::cmdDebugFlagDisable\28int\2c\20char\20const**\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] GUI::GuiManager::setLanguageRTL\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] GUI::GuiManager::getKeymap\28\29\20const can change the state due to operator\20new\28unsigned\20long\29
[asyncify] GUI::LauncherDialog::getGameConfig\28int\2c\20Common::String\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] GUI::LauncherSimple::groupEntries\28Common::Array<GUI::LauncherEntry>\20const&\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] GUI::LauncherGrid::groupEntries\28Common::Array<GUI::LauncherEntry>\20const&\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] GUI::MessageDialogWithURL::MessageDialogWithURL\28Common::U32String\20const&\2c\20char\20const*\2c\20Common::U32String\20const&\2c\20Graphics::TextAlign\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] GUI::MessageDialogWithURL::MessageDialogWithURL\28Common::String\20const&\2c\20char\20const*\2c\20char\20const*\2c\20Graphics::TextAlign\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] GUI::MetadataParser::buildLayout\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] GUI::OptionsDialog::setMIDISettingsState\28bool\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] Graphics::MacMenu::addMenuItem\28Graphics::MacMenuSubMenu*\2c\20Common::U32String\20const&\2c\20int\2c\20int\2c\20char\2c\20bool\2c\20bool\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] Graphics::MacMenu::addMenuItem\28Graphics::MacMenuSubMenu*\2c\20Common::String\20const&\2c\20int\2c\20int\2c\20char\2c\20bool\2c\20bool\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] Graphics::MacMenu::insertMenuItem\28Graphics::MacMenuSubMenu*\2c\20Common::String\20const&\2c\20unsigned\20int\2c\20int\2c\20int\2c\20char\2c\20bool\2c\20bool\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] Graphics::MacMenu::insertMenuItem\28Graphics::MacMenuSubMenu*\2c\20Common::U32String\20const&\2c\20unsigned\20int\2c\20int\2c\20int\2c\20char\2c\20bool\2c\20bool\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] Graphics::MacWindow::addDirtyRect\28Common::Rect\20const&\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] Graphics::MacWindow::markAllDirty\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] Graphics::MacWindowBorder::disableBorder\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] Graphics::MacWindowManager::addWindowInitialized\28Graphics::MacWindow*\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] Graphics::MacWindowManager::removeWindow\28Graphics::MacWindow*\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] Graphics::makeDefaultWinCursor\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] Graphics::makeBusyWinCursor\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] Graphics::YUVToRGBManager::getLookup\28Graphics::PixelFormat\2c\20Graphics::YUVToRGBManager::LuminanceScale\2c\20bool\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] TinyGL::createContext\28int\2c\20int\2c\20Graphics::PixelFormat\2c\20int\2c\20bool\2c\20bool\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] g_ADL_DETECTION_getObject\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] Adl::Files_Plain::getDataBlock\28Common::String\20const&\2c\20unsigned\20int\29\20const can change the state due to operator\20new\28unsigned\20long\29
[asyncify] Adl::DiskImage::getDataBlock\28unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int\29\20const can change the state due to operator\20new\28unsigned\20long\29
[asyncify] Adl::Files_AppleDOS::getDataBlock\28Common::String\20const&\2c\20unsigned\20int\29\20const can change the state due to operator\20new\28unsigned\20long\29
[asyncify] AgiMetaEngineDetection::parseAndCustomizeGuiOptions\28Common::String\20const&\2c\20Common::String\20const&\29\20const can change the state due to operator\20new\28unsigned\20long\29
[asyncify] g_AGI_DETECTION_getObject\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] g_AGOS_DETECTION_getObject\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] g_AGS_DETECTION_getObject\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] g_ASYLUM_DETECTION_getObject\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] g_AVALANCHE_DETECTION_getObject\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] g_BBVS_DETECTION_getObject\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] g_BLADERUNNER_DETECTION_getObject\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] g_BURIED_DETECTION_getObject\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] g_CGE_DETECTION_getObject\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] g_CGE2_DETECTION_getObject\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] g_CHEWY_DETECTION_getObject\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] g_CINE_DETECTION_getObject\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] g_COMPOSER_DETECTION_getObject\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] g_CRUISE_DETECTION_getObject\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] g_CRYO_DETECTION_getObject\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] g_CRYOMNI3D_DETECTION_getObject\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] g_DIRECTOR_DETECTION_getObject\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] g_DM_DETECTION_getObject\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] g_DRACI_DETECTION_getObject\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] g_DRAGONS_DETECTION_getObject\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] g_DRASCULA_DETECTION_getObject\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] g_DREAMWEB_DETECTION_getObject\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] g_FREESCAPE_DETECTION_getObject\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] g_GLK_DETECTION_getObject\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] Glk::Blorb::listMembers\28Common::List<Common::SharedPtr<Common::ArchiveMember>>&\29\20const can change the state due to operator\20new\28unsigned\20long\29
[asyncify] g_GNAP_DETECTION_getObject\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] g_GOB_DETECTION_getObject\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] g_GRIFFON_DETECTION_getObject\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] g_GRIM_DETECTION_getObject\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] g_GROOVIE_DETECTION_getObject\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] g_HADESCH_DETECTION_getObject\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] g_HDB_DETECTION_getObject\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] g_HOPKINS_DETECTION_getObject\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] g_HUGO_DETECTION_getObject\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] g_HYPNO_DETECTION_getObject\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] g_ICB_DETECTION_getObject\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] g_ILLUSIONS_DETECTION_getObject\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] g_KINGDOM_DETECTION_getObject\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] g_KYRA_DETECTION_getObject\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] g_LAB_DETECTION_getObject\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] g_LASTEXPRESS_DETECTION_getObject\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] g_LILLIPUT_DETECTION_getObject\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] g_LURE_DETECTION_getObject\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] g_MACVENTURE_DETECTION_getObject\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] g_MADE_DETECTION_getObject\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] g_MADS_DETECTION_getObject\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] g_MOHAWK_DETECTION_getObject\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] Mohawk::MohawkMetaEngine_Myst::registerDefaultSettings\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] Mohawk::MohawkMetaEngine_Riven::registerDefaultSettings\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] g_MORTEVIELLE_DETECTION_getObject\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] g_MTROPOLIS_DETECTION_getObject\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] g_MUTATIONOFJB_DETECTION_getObject\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] g_MYST3_DETECTION_getObject\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] g_NANCY_DETECTION_getObject\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] g_NEVERHOOD_DETECTION_getObject\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] g_NGI_DETECTION_getObject\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] g_PARALLACTION_DETECTION_getObject\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] g_PEGASUS_DETECTION_getObject\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] g_PETKA_DETECTION_getObject\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] g_PINK_DETECTION_getObject\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] g_PLAYGROUND3D_DETECTION_getObject\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] g_PLUMBERS_DETECTION_getObject\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] g_PRINCE_DETECTION_getObject\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] g_PRIVATE_DETECTION_getObject\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] g_QUEEN_DETECTION_getObject\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] g_SAGA_DETECTION_getObject\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] g_SAGA2_DETECTION_getObject\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] g_SCI_DETECTION_getObject\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] ScummMetaEngineDetection::parseAndCustomizeGuiOptions\28Common::String\20const&\2c\20Common::String\20const&\29\20const can change the state due to operator\20new\28unsigned\20long\29
[asyncify] g_SCUMM_DETECTION_getObject\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] g_SHERLOCK_DETECTION_getObject\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] g_SKY_DETECTION_getObject\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] g_SLUDGE_DETECTION_getObject\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] g_STARK_DETECTION_getObject\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] g_STARTREK_DETECTION_getObject\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] g_SUPERNOVA_DETECTION_getObject\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] g_SWORD1_DETECTION_getObject\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] g_SWORD2_DETECTION_getObject\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] g_SWORD25_DETECTION_getObject\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] g_TEENAGENT_DETECTION_getObject\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] g_TESTBED_DETECTION_getObject\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] g_TINSEL_DETECTION_getObject\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] g_TITANIC_DETECTION_getObject\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] g_TOLTECS_DETECTION_getObject\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] g_TONY_DETECTION_getObject\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] g_TOON_DETECTION_getObject\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] g_TOUCHE_DETECTION_getObject\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] g_TRECISION_DETECTION_getObject\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] g_TSAGE_DETECTION_getObject\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] g_TUCKER_DETECTION_getObject\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] g_TWINE_DETECTION_getObject\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] g_ULTIMA_DETECTION_getObject\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] g_VOYEUR_DETECTION_getObject\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] g_WAGE_DETECTION_getObject\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] g_WINTERMUTE_DETECTION_getObject\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] g_XEEN_DETECTION_getObject\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] g_ZVISION_DETECTION_getObject\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] OSystem_SDL::getHardwareInputSet\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] OSystem_SDL::getDefaultIconsPath\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] OSystem_SDL::getScreenshotsPath\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] GUI::GlobalOptionsDialog::apply\28\29::$_0::operator\28\29\28GUI::StaticTextWidget*\2c\20Common::String\20const&\2c\20Common::U32String\20const&\29\20const can change the state due to operator\20new\28unsigned\20long\29
[asyncify] GUI::ThemeEngine::addDirtyRect\28Common::Rect\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] GUI::ThemeEngine::addDrawStep\28Common::String\20const&\2c\20Graphics::DrawStep\20const&\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] GUI::ThemeEngine::addTextColor\28GUI::TextColor\2c\20int\2c\20int\2c\20int\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] GUI::ThemeEngine::addDrawData\28Common::String\20const&\2c\20bool\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] Common::List<GUI::ThemeEngine::ThemeDescriptor>::operator=\28Common::List<GUI::ThemeEngine::ThemeDescriptor>\20const&\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] GUI::ThemeEval::addWidget\28Common::String\20const&\2c\20Common::String\20const&\2c\20int\2c\20int\2c\20Graphics::TextAlign\2c\20bool\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] GUI::ThemeEval::addLayout\28GUI::ThemeLayout::LayoutType\2c\20int\2c\20GUI::ThemeLayout::ItemAlign\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] GUI::ThemeParser::ThemeParser\28GUI::ThemeEngine*\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] GUI::ThemeParser::defaultDrawStep\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] GUI::ThemeParser::cleanup\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] GUI::ThemeParser::newDrawStep\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] GUI::ThemeParser::buildLayout\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] GUI::GridItemTray::GridItemTray\28GUI::GuiObject*\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20GUI::GridWidget*\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] OpenGL::OpenGLGraphicsManager::getFontOSD\28\29\20const can change the state due to operator\20new\28unsigned\20long\29
[asyncify] OpenGL::CLUT8LookUpPipeline::CLUT8LookUpPipeline\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] OpenGL::LibRetroPipeline::LibRetroPipeline\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] OpenGL::LibRetroPipeline::LibRetroPipeline\28Common::FSNode\20const&\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] LegacySdlEventSource::LegacySdlEventSource\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] LegacySdlEventSource::computeJoystickMouseSpeedFactor\28\29\20const can change the state due to operator\20new\28unsigned\20long\29
[asyncify] LegacySdlEventSource::handleAxisToMouseMotion\28short\2c\20short\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] SdlGraphicsManager::SdlGraphicsManager\28SdlEventSource*\2c\20SdlWindow*\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] SdlGraphicsManager::defaultGraphicsModeConfig\28\29\20const can change the state due to operator\20new\28unsigned\20long\29
[asyncify] getDesiredAspectRatio\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] SurfaceSdlGraphicsManager::getSupportedFormats\28\29\20const can change the state due to operator\20new\28unsigned\20long\29
[asyncify] virtual\20thunk\20to\20SurfaceSdlGraphicsManager::getSupportedFormats\28\29\20const can change the state due to operator\20new\28unsigned\20long\29
[asyncify] SdlMixerManager::getAudioSpec\28unsigned\20int\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] createSdlMutexInternal\28\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] OpenGLSdlGraphicsManager::OpenGLSdlGraphicsManager\28SdlEventSource*\2c\20SdlWindow*\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] OpenGLSdlGraphicsManager::OpenGLSdlGraphicsManager\28SdlEventSource*\2c\20SdlWindow*\29.1 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] OpenGLSdlGraphics3dManager::OpenGLSdlGraphics3dManager\28SdlEventSource*\2c\20SdlWindow*\2c\20bool\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] OpenGLSdlGraphics3dManager::OpenGLSdlGraphics3dManager\28SdlEventSource*\2c\20SdlWindow*\2c\20bool\29.1 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] OpenGLSdlGraphics3dManager::createFramebuffer\28unsigned\20int\2c\20unsigned\20int\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] POSIXFilesystemNode::getChildren\28Common::Array<AbstractFSNode*>&\2c\20Common::FSNode::ListMode\2c\20bool\29\20const can change the state due to operator\20new\28unsigned\20long\29
[asyncify] PosixIoStream::makeFromPath\28Common::String\20const&\2c\20bool\29 can change the state due to operator\20new\28unsigned\20long\29
[asyncify] DrivePOSIXFilesystemNode::getChildWithKnownType\28Common::String\20const&\2c\20bool\29\20const can change the state due to operator\20new\28unsigned\20long\29
[asyncify] DrivePOSIXFilesystemNode::makeNode\28Common::String\20const&\29\20const can change the state due to operator\20new\28unsigned\20long\29
[asyncify] DrivesPOSIXFilesystemFactory::makeRootFileNode\28\29\20const can change the state due to operator\20new\28unsigned\20long\29
[asyncify] DrivesPOSIXFilesystemFactory::makeFileNodePath\28Common::String\20const&\29\20const can change the state due to operator\20new\28unsigned\20long\29
[asyncify] void*\20std::__2::__libcpp_operator_new\5babi:v15006\5d<unsigned\20long\2c\20std::align_val_t>\28unsigned\20long\2c\20std::align_val_t\29 can change the state due to operator\20new\28unsigned\20long\2c\20std::align_val_t\29
[asyncify] operator\20new\28unsigned\20long\2c\20std::align_val_t\2c\20std::nothrow_t\20const&\29 can change the state due to operator\20new\28unsigned\20long\2c\20std::align_val_t\29
[asyncify] operator\20new\5b\5d\28unsigned\20long\2c\20std::align_val_t\29 can change the state due to operator\20new\28unsigned\20long\2c\20std::align_val_t\29
[asyncify] std::__2::__fs::filesystem::\28anonymous\20namespace\29::remove_all_impl\28int\2c\20std::__2::__fs::filesystem::path\20const&\2c\20std::__2::error_code&\29 can change the state due to std::__2::operator==\5babi:v15006\5d\28std::__2::error_code\20const&\2c\20std::__2::error_condition\20const&\29
[asyncify] unsigned\20long\20std::__2::__str_find_first_of\5babi:v15006\5d<char\2c\20unsigned\20long\2c\20std::__2::char_traits<char>\2c\204294967295ul>\28char\20const*\2c\20unsigned\20long\2c\20char\20const*\2c\20unsigned\20long\2c\20unsigned\20long\29 can change the state due to char\20const*\20std::__2::__find_first_of_ce<char\20const*\2c\20char\20const*\2c\20bool\20\28&\29\28char\2c\20char\29\20noexcept>\28char\20const*\2c\20char\20const*\2c\20char\20const*\2c\20char\20const*\2c\20bool\20\28&\29\28char\2c\20char\29\20noexcept\29
[asyncify] unsigned\20long\20std::__2::__str_find_first_of\5babi:v15006\5d<wchar_t\2c\20unsigned\20long\2c\20std::__2::char_traits<wchar_t>\2c\204294967295ul>\28wchar_t\20const*\2c\20unsigned\20long\2c\20wchar_t\20const*\2c\20unsigned\20long\2c\20unsigned\20long\29 can change the state due to wchar_t\20const*\20std::__2::__find_first_of_ce<wchar_t\20const*\2c\20wchar_t\20const*\2c\20bool\20\28&\29\28wchar_t\2c\20wchar_t\29\20noexcept>\28wchar_t\20const*\2c\20wchar_t\20const*\2c\20wchar_t\20const*\2c\20wchar_t\20const*\2c\20bool\20\28&\29\28wchar_t\2c\20wchar_t\29\20noexcept\29
[asyncify] std::__2::pair<char\20const*\2c\20char\20const*>\20std::__2::__find_end_impl\5babi:v15006\5d<std::__2::_ClassicAlgPolicy\2c\20char\20const*\2c\20char\20const*\2c\20char\20const*\2c\20char\20const*\2c\20bool\20\28char\2c\20char\29\20noexcept\2c\20std::__2::__identity\2c\20std::__2::__identity>\28char\20const*\2c\20char\20const*\2c\20char\20const*\2c\20char\20const*\2c\20bool\20\28&\29\28char\2c\20char\29\20noexcept\2c\20std::__2::__identity&\2c\20std::__2::__identity&\2c\20std::__2::forward_iterator_tag\2c\20std::__2::forward_iterator_tag\29 can change the state due to decltype\28std::declval<bool\20\28&\29\28char\2c\20char\29\20noexcept>\28\29\28std::declval<char\20const&>\28\29\2c\20std::declval<char\20const&>\28\29\29\29\20std::__2::__invoke\5babi:v15006\5d<bool\20\28&\29\28char\2c\20char\29\20noexcept\2c\20char\20const&\2c\20char\20const&>\28bool\20\28&\29\28char\2c\20char\29\20noexcept\2c\20char\20const&\2c\20char\20const&\29
[asyncify] std::__2::pair<wchar_t\20const*\2c\20wchar_t\20const*>\20std::__2::__find_end_impl\5babi:v15006\5d<std::__2::_ClassicAlgPolicy\2c\20wchar_t\20const*\2c\20wchar_t\20const*\2c\20wchar_t\20const*\2c\20wchar_t\20const*\2c\20bool\20\28wchar_t\2c\20wchar_t\29\20noexcept\2c\20std::__2::__identity\2c\20std::__2::__identity>\28wchar_t\20const*\2c\20wchar_t\20const*\2c\20wchar_t\20const*\2c\20wchar_t\20const*\2c\20bool\20\28&\29\28wchar_t\2c\20wchar_t\29\20noexcept\2c\20std::__2::__identity&\2c\20std::__2::__identity&\2c\20std::__2::forward_iterator_tag\2c\20std::__2::forward_iterator_tag\29 can change the state due to decltype\28std::declval<bool\20\28&\29\28wchar_t\2c\20wchar_t\29\20noexcept>\28\29\28std::declval<wchar_t\20const&>\28\29\2c\20std::declval<wchar_t\20const&>\28\29\29\29\20std::__2::__invoke\5babi:v15006\5d<bool\20\28&\29\28wchar_t\2c\20wchar_t\29\20noexcept\2c\20wchar_t\20const&\2c\20wchar_t\20const&>\28bool\20\28&\29\28wchar_t\2c\20wchar_t\29\20noexcept\2c\20wchar_t\20const&\2c\20wchar_t\20const&\29
[asyncify] std::__2::strstreambuf::~strstreambuf\28\29.1 can change the state due to std::__2::strstreambuf::~strstreambuf\28\29
[asyncify] std::__2::istrstream::~istrstream\28\29 can change the state due to std::__2::strstreambuf::~strstreambuf\28\29
[asyncify] std::__2::ostrstream::~ostrstream\28\29 can change the state due to std::__2::strstreambuf::~strstreambuf\28\29
[asyncify] std::__2::strstream::~strstream\28\29 can change the state due to std::__2::strstreambuf::~strstreambuf\28\29
[asyncify] std::__2::future_error::future_error\28std::__2::error_code\29 can change the state due to std::__2::error_code::message\28\29\20const
[asyncify] std::__2::system_error::__init\28std::__2::error_code\20const&\2c\20std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\29 can change the state due to std::__2::error_code::message\28\29\20const
[asyncify] __cxa_demangle can change the state due to \28anonymous\20namespace\29::itanium_demangle::Node::print\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\29\20const
[asyncify] \28anonymous\20namespace\29::itanium_demangle::SpecialName::printLeft\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\29\20const can change the state due to \28anonymous\20namespace\29::itanium_demangle::Node::print\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\29\20const
[asyncify] \28anonymous\20namespace\29::itanium_demangle::CtorVtableSpecialName::printLeft\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\29\20const can change the state due to \28anonymous\20namespace\29::itanium_demangle::Node::print\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\29\20const
[asyncify] \28anonymous\20namespace\29::itanium_demangle::ModuleName::printLeft\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\29\20const can change the state due to \28anonymous\20namespace\29::itanium_demangle::Node::print\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\29\20const
[asyncify] \28anonymous\20namespace\29::itanium_demangle::Node::printAsOperand\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node::Prec\2c\20bool\29\20const can change the state due to \28anonymous\20namespace\29::itanium_demangle::Node::print\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\29\20const
[asyncify] \28anonymous\20namespace\29::itanium_demangle::NewExpr::printLeft\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\29\20const can change the state due to \28anonymous\20namespace\29::itanium_demangle::Node::print\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\29\20const
[asyncify] \28anonymous\20namespace\29::itanium_demangle::DeleteExpr::printLeft\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\29\20const can change the state due to \28anonymous\20namespace\29::itanium_demangle::Node::print\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\29\20const
[asyncify] \28anonymous\20namespace\29::itanium_demangle::CallExpr::printLeft\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\29\20const can change the state due to \28anonymous\20namespace\29::itanium_demangle::Node::print\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\29\20const
[asyncify] \28anonymous\20namespace\29::itanium_demangle::ConversionExpr::printLeft\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\29\20const can change the state due to \28anonymous\20namespace\29::itanium_demangle::Node::print\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\29\20const
[asyncify] \28anonymous\20namespace\29::itanium_demangle::EnclosingExpr::printLeft\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\29\20const can change the state due to \28anonymous\20namespace\29::itanium_demangle::Node::print\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\29\20const
[asyncify] \28anonymous\20namespace\29::itanium_demangle::StringLiteral::printLeft\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\29\20const can change the state due to \28anonymous\20namespace\29::itanium_demangle::Node::print\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\29\20const
[asyncify] \28anonymous\20namespace\29::itanium_demangle::TypeTemplateParamDecl::printRight\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\29\20const can change the state due to \28anonymous\20namespace\29::itanium_demangle::Node::print\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\29\20const
[asyncify] \28anonymous\20namespace\29::itanium_demangle::TemplateTemplateParamDecl::printRight\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\29\20const can change the state due to \28anonymous\20namespace\29::itanium_demangle::Node::print\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\29\20const
[asyncify] \28anonymous\20namespace\29::itanium_demangle::EnumLiteral::printLeft\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\29\20const can change the state due to \28anonymous\20namespace\29::itanium_demangle::Node::print\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\29\20const
[asyncify] \28anonymous\20namespace\29::itanium_demangle::FoldExpr::printLeft\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\29\20const::'lambda'\28\29::operator\28\29\28\29\20const can change the state due to \28anonymous\20namespace\29::itanium_demangle::Node::print\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\29\20const
[asyncify] \28anonymous\20namespace\29::itanium_demangle::ParameterPackExpansion::printLeft\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\29\20const can change the state due to \28anonymous\20namespace\29::itanium_demangle::Node::print\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\29\20const
[asyncify] \28anonymous\20namespace\29::itanium_demangle::BracedExpr::printLeft\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\29\20const can change the state due to \28anonymous\20namespace\29::itanium_demangle::Node::print\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\29\20const
[asyncify] \28anonymous\20namespace\29::itanium_demangle::ElaboratedTypeSpefType::printLeft\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\29\20const can change the state due to \28anonymous\20namespace\29::itanium_demangle::Node::print\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\29\20const
[asyncify] \28anonymous\20namespace\29::itanium_demangle::BracedRangeExpr::printLeft\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\29\20const can change the state due to \28anonymous\20namespace\29::itanium_demangle::Node::print\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\29\20const
[asyncify] \28anonymous\20namespace\29::itanium_demangle::InitListExpr::printLeft\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\29\20const can change the state due to \28anonymous\20namespace\29::itanium_demangle::Node::print\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\29\20const
[asyncify] \28anonymous\20namespace\29::itanium_demangle::PointerToMemberConversionExpr::printLeft\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\29\20const can change the state due to \28anonymous\20namespace\29::itanium_demangle::Node::print\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\29\20const
[asyncify] \28anonymous\20namespace\29::itanium_demangle::SubobjectExpr::printLeft\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\29\20const can change the state due to \28anonymous\20namespace\29::itanium_demangle::Node::print\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\29\20const
[asyncify] \28anonymous\20namespace\29::itanium_demangle::ThrowExpr::printLeft\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\29\20const can change the state due to \28anonymous\20namespace\29::itanium_demangle::Node::print\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\29\20const
[asyncify] \28anonymous\20namespace\29::itanium_demangle::QualifiedName::printLeft\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\29\20const can change the state due to \28anonymous\20namespace\29::itanium_demangle::Node::print\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\29\20const
[asyncify] \28anonymous\20namespace\29::itanium_demangle::ConversionOperatorType::printLeft\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\29\20const can change the state due to \28anonymous\20namespace\29::itanium_demangle::Node::print\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\29\20const
[asyncify] \28anonymous\20namespace\29::itanium_demangle::LiteralOperator::printLeft\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\29\20const can change the state due to \28anonymous\20namespace\29::itanium_demangle::Node::print\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\29\20const
[asyncify] \28anonymous\20namespace\29::itanium_demangle::GlobalQualifiedName::printLeft\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\29\20const can change the state due to \28anonymous\20namespace\29::itanium_demangle::Node::print\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\29\20const
[asyncify] \28anonymous\20namespace\29::itanium_demangle::ModuleEntity::printLeft\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\29\20const can change the state due to \28anonymous\20namespace\29::itanium_demangle::Node::print\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\29\20const
[asyncify] \28anonymous\20namespace\29::itanium_demangle::NestedName::printLeft\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\29\20const can change the state due to \28anonymous\20namespace\29::itanium_demangle::Node::print\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\29\20const
[asyncify] \28anonymous\20namespace\29::itanium_demangle::LocalName::printLeft\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\29\20const can change the state due to \28anonymous\20namespace\29::itanium_demangle::Node::print\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\29\20const
[asyncify] \28anonymous\20namespace\29::itanium_demangle::NameWithTemplateArgs::printLeft\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\29\20const can change the state due to \28anonymous\20namespace\29::itanium_demangle::Node::print\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\29\20const
[asyncify] \28anonymous\20namespace\29::itanium_demangle::DotSuffix::printLeft\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\29\20const can change the state due to \28anonymous\20namespace\29::itanium_demangle::Node::print\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\29\20const
[asyncify] \28anonymous\20namespace\29::itanium_demangle::ObjCProtoName::printLeft\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\29\20const can change the state due to \28anonymous\20namespace\29::itanium_demangle::Node::print\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\29\20const
[asyncify] \28anonymous\20namespace\29::itanium_demangle::VendorExtQualType::printLeft\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\29\20const can change the state due to \28anonymous\20namespace\29::itanium_demangle::Node::print\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\29\20const
[asyncify] \28anonymous\20namespace\29::itanium_demangle::BinaryFPType::printLeft\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\29\20const can change the state due to \28anonymous\20namespace\29::itanium_demangle::Node::print\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\29\20const
[asyncify] \28anonymous\20namespace\29::itanium_demangle::PixelVectorType::printLeft\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\29\20const can change the state due to \28anonymous\20namespace\29::itanium_demangle::Node::print\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\29\20const
[asyncify] \28anonymous\20namespace\29::itanium_demangle::VectorType::printLeft\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\29\20const can change the state due to \28anonymous\20namespace\29::itanium_demangle::Node::print\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\29\20const
[asyncify] \28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::parseType\28\29 can change the state due to \28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::parseExpr\28\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::parseTemplateArg\28\29 can change the state due to \28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::parseExpr\28\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::parseDecltype\28\29 can change the state due to \28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::parseExpr\28\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::parseVectorType\28\29 can change the state due to \28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::parseExpr\28\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::parseArrayType\28\29 can change the state due to \28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::parseExpr\28\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::parseFunctionType\28\29 can change the state due to \28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::parseExpr\28\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::parseBinaryExpr\28\28anonymous\20namespace\29::itanium_demangle::StringView\2c\20\28anonymous\20namespace\29::itanium_demangle::Node::Prec\29 can change the state due to \28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::parseExpr\28\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::parsePrefixExpr\28\28anonymous\20namespace\29::itanium_demangle::StringView\2c\20\28anonymous\20namespace\29::itanium_demangle::Node::Prec\29 can change the state due to \28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::parseExpr\28\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::parseFoldExpr\28\29 can change the state due to \28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::parseExpr\28\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::parseBracedExpr\28\29 can change the state due to \28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::parseExpr\28\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::parsePointerToMemberConversionExpr\28\28anonymous\20namespace\29::itanium_demangle::Node::Prec\29 can change the state due to \28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::parseExpr\28\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::parseSubobjectExpr\28\29 can change the state due to \28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::parseExpr\28\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::ForwardTemplateReference::hasRHSComponentSlow\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\29\20const can change the state due to \28anonymous\20namespace\29::itanium_demangle::Node::hasRHSComponent\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\29\20const
[asyncify] \28anonymous\20namespace\29::itanium_demangle::ParameterPack::hasRHSComponentSlow\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\29\20const can change the state due to \28anonymous\20namespace\29::itanium_demangle::Node::hasRHSComponent\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\29\20const
[asyncify] \28anonymous\20namespace\29::itanium_demangle::QualType::hasRHSComponentSlow\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\29\20const can change the state due to \28anonymous\20namespace\29::itanium_demangle::Node::hasRHSComponent\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\29\20const
[asyncify] \28anonymous\20namespace\29::itanium_demangle::PointerToMemberType::hasRHSComponentSlow\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\29\20const can change the state due to \28anonymous\20namespace\29::itanium_demangle::Node::hasRHSComponent\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\29\20const
[asyncify] \28anonymous\20namespace\29::itanium_demangle::PointerType::hasRHSComponentSlow\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\29\20const can change the state due to \28anonymous\20namespace\29::itanium_demangle::Node::hasRHSComponent\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\29\20const
[asyncify] \28anonymous\20namespace\29::itanium_demangle::ReferenceType::hasRHSComponentSlow\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\29\20const can change the state due to \28anonymous\20namespace\29::itanium_demangle::Node::hasRHSComponent\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\29\20const
[asyncify] \28anonymous\20namespace\29::itanium_demangle::ForwardTemplateReference::hasArraySlow\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\29\20const can change the state due to \28anonymous\20namespace\29::itanium_demangle::Node::hasArray\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\29\20const
[asyncify] \28anonymous\20namespace\29::itanium_demangle::ParameterPack::hasArraySlow\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\29\20const can change the state due to \28anonymous\20namespace\29::itanium_demangle::Node::hasArray\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\29\20const
[asyncify] \28anonymous\20namespace\29::itanium_demangle::QualType::hasArraySlow\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\29\20const can change the state due to \28anonymous\20namespace\29::itanium_demangle::Node::hasArray\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\29\20const
[asyncify] \28anonymous\20namespace\29::itanium_demangle::ForwardTemplateReference::hasFunctionSlow\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\29\20const can change the state due to \28anonymous\20namespace\29::itanium_demangle::Node::hasFunction\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\29\20const
[asyncify] \28anonymous\20namespace\29::itanium_demangle::ParameterPack::hasFunctionSlow\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\29\20const can change the state due to \28anonymous\20namespace\29::itanium_demangle::Node::hasFunction\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\29\20const
[asyncify] \28anonymous\20namespace\29::itanium_demangle::QualType::hasFunctionSlow\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\29\20const can change the state due to \28anonymous\20namespace\29::itanium_demangle::Node::hasFunction\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\29\20const
[asyncify] std::unexpected\28\29 can change the state due to std::__unexpected\28void\20\28*\29\28\29\29
[asyncify] std::terminate\28\29 can change the state due to std::__terminate\28void\20\28*\29\28\29\29
[asyncify] __cxxabiv1::\28anonymous\20namespace\29::DtorsManager::~DtorsManager\28\29 can change the state due to __cxxabiv1::\28anonymous\20namespace\29::run_dtors\28void*\29
[asyncify] MidiParser_XMIDI::setMidiDriver\28MidiDriver_BASE*\29 can change the state due to __dynamic_cast
[asyncify] __cxxabiv1::__pbase_type_info::can_catch\28__cxxabiv1::__shim_type_info\20const*\2c\20void*&\29\20const can change the state due to __dynamic_cast
[asyncify] __cxxabiv1::__pointer_type_info::can_catch_nested\28__cxxabiv1::__shim_type_info\20const*\29\20const can change the state due to __dynamic_cast
[asyncify] __cxxabiv1::__pointer_to_member_type_info::can_catch_nested\28__cxxabiv1::__shim_type_info\20const*\29\20const can change the state due to __dynamic_cast
[asyncify] __cxxabiv1::__pointer_to_member_type_info::can_catch\28__cxxabiv1::__shim_type_info\20const*\2c\20void*&\29\20const can change the state due to __dynamic_cast
[asyncify] __cxa_is_pointer_type can change the state due to __dynamic_cast
[asyncify] __cxxabiv1::__vmi_class_type_info::has_unambiguous_public_base\28__cxxabiv1::__dynamic_cast_info*\2c\20void*\2c\20int\29\20const can change the state due to __cxxabiv1::__base_class_type_info::has_unambiguous_public_base\28__cxxabiv1::__dynamic_cast_info*\2c\20void*\2c\20int\29\20const
[asyncify] __cxxabiv1::__vmi_class_type_info::search_below_dst\28__cxxabiv1::__dynamic_cast_info*\2c\20void\20const*\2c\20int\2c\20bool\29\20const can change the state due to __cxxabiv1::__base_class_type_info::search_above_dst\28__cxxabiv1::__dynamic_cast_info*\2c\20void\20const*\2c\20void\20const*\2c\20int\2c\20bool\29\20const
[asyncify] __cxxabiv1::__vmi_class_type_info::search_above_dst\28__cxxabiv1::__dynamic_cast_info*\2c\20void\20const*\2c\20void\20const*\2c\20int\2c\20bool\29\20const can change the state due to __cxxabiv1::__base_class_type_info::search_above_dst\28__cxxabiv1::__dynamic_cast_info*\2c\20void\20const*\2c\20void\20const*\2c\20int\2c\20bool\29\20const
[asyncify] legalstub$dynCall_ji can change the state due to dynCall_ji
[asyncify] legalstub$dynCall_iiji can change the state due to dynCall_iiji
[asyncify] legalstub$dynCall_jiji can change the state due to dynCall_jiji
[asyncify] legalstub$dynCall_viijii can change the state due to dynCall_viijii
[asyncify] legalstub$dynCall_iiiiij can change the state due to dynCall_iiiiij
[asyncify] legalstub$dynCall_iiiiijj can change the state due to dynCall_iiiiijj
[asyncify] legalstub$dynCall_iiiiiijj can change the state due to dynCall_iiiiiijj
[asyncify] lua_resume\28lua_State*\2c\20int\29 can change the state due to luaD_rawrunprotected\28lua_State*\2c\20void\20\28*\29\28lua_State*\2c\20void*\29\2c\20void*\29
[asyncify] DISKAUDIO_WaitDevice can change the state due to SDL_Delay
[asyncify] DUMMYAUDIO_CaptureFromDevice can change the state due to SDL_Delay
[asyncify] SDL_AtomicLock can change the state due to SDL_Delay
[asyncify] OSystem_SDL::delayMillis\28unsigned\20int\29 can change the state due to SDL_Delay
[asyncify] virtual\20thunk\20to\20OSystem_SDL::delayMillis\28unsigned\20int\29 can change the state due to SDL_Delay
[asyncify] png_create_read_struct can change the state due to png_create_png_struct
[asyncify] png_create_read_struct_2 can change the state due to png_create_png_struct
[asyncify] png_create_write_struct can change the state due to png_create_png_struct
[asyncify] png_create_write_struct_2 can change the state due to png_create_png_struct
[asyncify] png_image_begin_read_from_stdio can change the state due to png_safe_execute
[asyncify] png_image_begin_read_from_memory can change the state due to png_safe_execute
[asyncify] png_image_finish_read can change the state due to png_safe_execute
[asyncify] png_image_write_to_memory can change the state due to png_safe_execute
[asyncify] png_image_write_to_stdio can change the state due to png_safe_execute
[asyncify] Common::Array<SaveStateDescriptor>::push_back\28SaveStateDescriptor\20const&\29 can change the state due to Common::Array<SaveStateDescriptor>::insert_aux\28SaveStateDescriptor*\2c\20SaveStateDescriptor\20const*\2c\20SaveStateDescriptor\20const*\29
[asyncify] GUI::ConsoleDialog::printFormat\28int\2c\20char\20const*\2c\20...\29 can change the state due to GUI::ConsoleDialog::vprintFormat\28int\2c\20char\20const*\2c\20void*\29
[asyncify] GUI::Debugger::debugPrintf\28char\20const*\2c\20...\29 can change the state due to GUI::ConsoleDialog::vprintFormat\28int\2c\20char\20const*\2c\20void*\29
[asyncify] GUI::ConsoleDialog::~ConsoleDialog\28\29.1 can change the state due to GUI::ConsoleDialog::~ConsoleDialog\28\29
[asyncify] void\20Common::sort<Common::ListInternal::Iterator<Common::SharedPtr<Common::ArchiveMember>>\2c\20GUI::ArchiveMemberLess>\28Common::ListInternal::Iterator<Common::SharedPtr<Common::ArchiveMember>>\2c\20Common::ListInternal::Iterator<Common::SharedPtr<Common::ArchiveMember>>\2c\20GUI::ArchiveMemberLess\29 can change the state due to Common::ListInternal::Iterator<Common::SharedPtr<Common::ArchiveMember>>\20Common::sortPartition<Common::ListInternal::Iterator<Common::SharedPtr<Common::ArchiveMember>>\2c\20GUI::ArchiveMemberLess>\28Common::ListInternal::Iterator<Common::SharedPtr<Common::ArchiveMember>>\2c\20Common::ListInternal::Iterator<Common::SharedPtr<Common::ArchiveMember>>\2c\20Common::ListInternal::Iterator<Common::SharedPtr<Common::ArchiveMember>>\2c\20GUI::ArchiveMemberLess&\29
[asyncify] void\20Common::sort<Common::ListInternal::Iterator<Common::SharedPtr<Common::ArchiveMember>>\2c\20GUI::ArchiveMemberListBackComparator>\28Common::ListInternal::Iterator<Common::SharedPtr<Common::ArchiveMember>>\2c\20Common::ListInternal::Iterator<Common::SharedPtr<Common::ArchiveMember>>\2c\20GUI::ArchiveMemberListBackComparator\29 can change the state due to Common::ListInternal::Iterator<Common::SharedPtr<Common::ArchiveMember>>\20Common::sortPartition<Common::ListInternal::Iterator<Common::SharedPtr<Common::ArchiveMember>>\2c\20GUI::ArchiveMemberListBackComparator>\28Common::ListInternal::Iterator<Common::SharedPtr<Common::ArchiveMember>>\2c\20Common::ListInternal::Iterator<Common::SharedPtr<Common::ArchiveMember>>\2c\20Common::ListInternal::Iterator<Common::SharedPtr<Common::ArchiveMember>>\2c\20GUI::ArchiveMemberListBackComparator&\29
[asyncify] GUI::Tooltip::Tooltip\28\29 can change the state due to GUI::Dialog::Dialog\28int\2c\20int\2c\20int\2c\20int\29
[asyncify] GUI::OptionsDialog::setAudioSettingsState\28bool\29 can change the state due to GUI::Widget::setEnabled\28bool\29
[asyncify] GUI::OptionsDialog::setVolumeSettingsState\28bool\29 can change the state due to GUI::Widget::setEnabled\28bool\29
[asyncify] GUI::OptionsDialog::setMT32SettingsState\28bool\29 can change the state due to GUI::Widget::setEnabled\28bool\29
[asyncify] GUI::OptionsDialog::setSubtitleSettingsState\28bool\29 can change the state due to GUI::Widget::setEnabled\28bool\29
[asyncify] GUI::GridItemTray::reflowLayout\28\29 can change the state due to GUI::PicButtonWidget::setGfxFromTheme\28char\20const*\2c\20int\2c\20bool\29
[asyncify] GUI::PredictiveDialog::~PredictiveDialog\28\29.1 can change the state due to GUI::PredictiveDialog::~PredictiveDialog\28\29
[asyncify] GUI::ConfigDialog::~ConfigDialog\28\29.1 can change the state due to GUI::ConfigDialog::~ConfigDialog\28\29
[asyncify] Common::Array<GUI::ExistingSave>::push_back\28GUI::ExistingSave\20const&\29 can change the state due to Common::Array<GUI::ExistingSave>::insert_aux\28GUI::ExistingSave*\2c\20GUI::ExistingSave\20const*\2c\20GUI::ExistingSave\20const*\29
[asyncify] non-virtual\20thunk\20to\20GUI::ScrollContainerWidget::~ScrollContainerWidget\28\29 can change the state due to GUI::ScrollContainerWidget::~ScrollContainerWidget\28\29
[asyncify] GUI::ScrollContainerWidget::~ScrollContainerWidget\28\29.1 can change the state due to GUI::ScrollContainerWidget::~ScrollContainerWidget\28\29
[asyncify] non-virtual\20thunk\20to\20GUI::ScrollContainerWidget::~ScrollContainerWidget\28\29.1 can change the state due to GUI::ScrollContainerWidget::~ScrollContainerWidget\28\29
[asyncify] GUI::ListWidget::~ListWidget\28\29 can change the state due to GUI::EditableWidget::~EditableWidget\28\29
[asyncify] GUI::EditTextWidget::~EditTextWidget\28\29 can change the state due to GUI::EditableWidget::~EditableWidget\28\29
[asyncify] GUI::DomainEditTextWidget::~DomainEditTextWidget\28\29 can change the state due to GUI::EditableWidget::~EditableWidget\28\29
[asyncify] non-virtual\20thunk\20to\20GUI::DomainEditTextWidget::~DomainEditTextWidget\28\29 can change the state due to GUI::EditableWidget::~EditableWidget\28\29
[asyncify] non-virtual\20thunk\20to\20GUI::DomainEditTextWidget::~DomainEditTextWidget\28\29.1 can change the state due to GUI::EditableWidget::~EditableWidget\28\29
[asyncify] non-virtual\20thunk\20to\20GUI::EditableWidget::~EditableWidget\28\29 can change the state due to GUI::EditableWidget::~EditableWidget\28\29
[asyncify] GUI::EditTextWidget::~EditTextWidget\28\29.1 can change the state due to GUI::EditableWidget::~EditableWidget\28\29
[asyncify] non-virtual\20thunk\20to\20GUI::EditTextWidget::~EditTextWidget\28\29 can change the state due to GUI::EditableWidget::~EditableWidget\28\29
[asyncify] non-virtual\20thunk\20to\20GUI::EditTextWidget::~EditTextWidget\28\29.1 can change the state due to GUI::EditableWidget::~EditableWidget\28\29
[asyncify] GUI::PicButtonWidget::PicButtonWidget\28GUI::GuiObject*\2c\20int\2c\20int\2c\20int\2c\20int\2c\20Common::U32String\20const&\2c\20unsigned\20int\2c\20unsigned\20char\29 can change the state due to GUI::ButtonWidget::ButtonWidget\28GUI::GuiObject*\2c\20int\2c\20int\2c\20int\2c\20int\2c\20Common::U32String\20const&\2c\20Common::U32String\20const&\2c\20unsigned\20int\2c\20unsigned\20char\2c\20Common::U32String\20const&\29
[asyncify] GUI::PicButtonWidget::PicButtonWidget\28GUI::GuiObject*\2c\20Common::String\20const&\2c\20Common::U32String\20const&\2c\20unsigned\20int\2c\20unsigned\20char\29 can change the state due to GUI::ButtonWidget::ButtonWidget\28GUI::GuiObject*\2c\20Common::String\20const&\2c\20Common::U32String\20const&\2c\20Common::U32String\20const&\2c\20unsigned\20int\2c\20unsigned\20char\2c\20Common::U32String\20const&\29
[asyncify] non-virtual\20thunk\20to\20GUI::GridWidget::~GridWidget\28\29 can change the state due to GUI::GridWidget::~GridWidget\28\29
[asyncify] GUI::GridWidget::~GridWidget\28\29.1 can change the state due to GUI::GridWidget::~GridWidget\28\29
[asyncify] non-virtual\20thunk\20to\20GUI::GridWidget::~GridWidget\28\29.1 can change the state due to GUI::GridWidget::~GridWidget\28\29
[asyncify] GUI::ExtraGuiOptionsWidget::~ExtraGuiOptionsWidget\28\29.1 can change the state due to GUI::ExtraGuiOptionsWidget::~ExtraGuiOptionsWidget\28\29
[asyncify] GUI::PopUpDialog::handleMouseWheel\28int\2c\20int\2c\20int\29 can change the state due to GUI::PopUpDialog::moveUp\28\29
[asyncify] OSystem_POSIX::hasFeature\28OSystem::Feature\29 can change the state due to OSystem_SDL::hasFeature\28OSystem::Feature\29
[asyncify] non-virtual\20thunk\20to\20OSystem_POSIX::hasFeature\28OSystem::Feature\29 can change the state due to OSystem_SDL::hasFeature\28OSystem::Feature\29
[asyncify] virtual\20thunk\20to\20OSystem_POSIX::hasFeature\28OSystem::Feature\29 can change the state due to OSystem_SDL::hasFeature\28OSystem::Feature\29
[asyncify] virtual\20thunk\20to\20EventsBaseBackend::initBackend\28\29 can change the state due to EventsBaseBackend::initBackend\28\29
[asyncify] OSystem_POSIX::createAudioCDManager\28\29 can change the state due to OSystem_SDL::createAudioCDManager\28\29
[asyncify] Common::Keymapper::reloadAllMappings\28\29 can change the state due to Common::Keymap::loadMappings\28\29
[asyncify] Common::Keymapper::reloadKeymapMappings\28Common::Keymap*\29 can change the state due to Common::Keymap::loadMappings\28\29
[asyncify] Common::Keymapper::~Keymapper\28\29.1 can change the state due to Common::Keymapper::~Keymapper\28\29
[asyncify] OpenGL::Texture::Texture\28unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int\2c\20Graphics::PixelFormat\20const&\29 can change the state due to OpenGL::GLTexture::GLTexture\28unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int\29
[asyncify] OpenGL::FakeTexture::FakeTexture\28unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int\2c\20Graphics::PixelFormat\20const&\2c\20Graphics::PixelFormat\20const&\29 can change the state due to OpenGL::GLTexture::GLTexture\28unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int\29
[asyncify] OpenGL::Texture::~Texture\28\29.1 can change the state due to OpenGL::Texture::~Texture\28\29
[asyncify] OpenGL::FakeTexture::~FakeTexture\28\29 can change the state due to OpenGL::FakeTexture::~FakeTexture\28\29.1
[asyncify] OpenGL::CLUT8LookUpPipeline::~CLUT8LookUpPipeline\28\29 can change the state due to OpenGL::ShaderPipeline::~ShaderPipeline\28\29
[asyncify] OpenGL::ShaderPipeline::~ShaderPipeline\28\29.1 can change the state due to OpenGL::ShaderPipeline::~ShaderPipeline\28\29
[asyncify] Video::AVIDecoder::~AVIDecoder\28\29.1 can change the state due to Video::AVIDecoder::~AVIDecoder\28\29
[asyncify] Video::PreIMDDecoder::~PreIMDDecoder\28\29.1 can change the state due to Video::PreIMDDecoder::~PreIMDDecoder\28\29
[asyncify] Video::IMDDecoder::~IMDDecoder\28\29.1 can change the state due to Video::IMDDecoder::~IMDDecoder\28\29
[asyncify] Video::VMDDecoder::~VMDDecoder\28\29.1 can change the state due to Video::VMDDecoder::~VMDDecoder\28\29
[asyncify] Video::MPEGPSDecoder::~MPEGPSDecoder\28\29.1 can change the state due to Video::MPEGPSDecoder::~MPEGPSDecoder\28\29
[asyncify] Video::QuickTimeDecoder::VideoTrackHandler::VideoTrackHandler\28Video::QuickTimeDecoder*\2c\20Common::QuickTimeParser::Track*\29 can change the state due to Video::QuickTimeDecoder::VideoTrackHandler::enterNewEditListEntry\28bool\2c\20bool\29
[asyncify] Video::DXADecoder::~DXADecoder\28\29.1 can change the state due to Video::DXADecoder::~DXADecoder\28\29
[asyncify] Video::FlicDecoder::~FlicDecoder\28\29.1 can change the state due to Video::FlicDecoder::~FlicDecoder\28\29
[asyncify] non-virtual\20thunk\20to\20Video::QuickTimeDecoder::~QuickTimeDecoder\28\29 can change the state due to Video::QuickTimeDecoder::~QuickTimeDecoder\28\29
[asyncify] Video::QuickTimeDecoder::~QuickTimeDecoder\28\29.1 can change the state due to Video::QuickTimeDecoder::~QuickTimeDecoder\28\29
[asyncify] non-virtual\20thunk\20to\20Video::QuickTimeDecoder::~QuickTimeDecoder\28\29.1 can change the state due to Video::QuickTimeDecoder::~QuickTimeDecoder\28\29
[asyncify] Video::BinkDecoder::~BinkDecoder\28\29.1 can change the state due to Video::BinkDecoder::~BinkDecoder\28\29
[asyncify] Video::BinkDecoder::BinkAudioTrack::audioBlock\28short*\29 can change the state due to Video::BinkDecoder::BinkAudioTrack::audioBlockDCT\28\29
[asyncify] Video::BinkDecoder::BinkVideoTrack::blockIntra\28Video::BinkDecoder::BinkVideoTrack::DecodeContext&\29 can change the state due to Video::BinkDecoder::BinkVideoTrack::readDCTCoeffs\28Video::BinkDecoder::VideoFrame&\2c\20int*\2c\20bool\29
[asyncify] Video::BinkDecoder::BinkVideoTrack::blockScaledIntra\28Video::BinkDecoder::BinkVideoTrack::DecodeContext&\29 can change the state due to Video::BinkDecoder::BinkVideoTrack::readDCTCoeffs\28Video::BinkDecoder::VideoFrame&\2c\20int*\2c\20bool\29
[asyncify] Video::BinkDecoder::BinkAudioTrack::audioBlockRDFT\28\29 can change the state due to Video::BinkDecoder::BinkAudioTrack::readAudioCoeffs\28float*\29
[asyncify] Video::BinkDecoder::BinkVideoTrack::readBundle\28Video::BinkDecoder::VideoFrame&\2c\20Video::BinkDecoder::BinkVideoTrack::Source\29 can change the state due to Video::BinkDecoder::BinkVideoTrack::readHuffman\28Video::BinkDecoder::VideoFrame&\2c\20Video::BinkDecoder::BinkVideoTrack::Huffman&\29
[asyncify] Graphics::MacWindow::loadBorder\28Common::SeekableReadStream&\2c\20unsigned\20int\2c\20Graphics::BorderOffsets\29 can change the state due to Graphics::MacWindowBorder::loadBorder\28Common::SeekableReadStream&\2c\20unsigned\20int\2c\20Graphics::BorderOffsets\29
[asyncify] Graphics::MacWindowBorder::loadBorder\28Common::SeekableReadStream&\2c\20unsigned\20int\2c\20int\2c\20int\2c\20int\2c\20int\29 can change the state due to Graphics::MacWindowBorder::loadBorder\28Common::SeekableReadStream&\2c\20unsigned\20int\2c\20Graphics::BorderOffsets\29
[asyncify] Video::AVIDecoder::AVIVideoTrack::AVIVideoTrack\28int\2c\20Video::AVIDecoder::AVIStreamHeader\20const&\2c\20Video::AVIDecoder::BitmapInfoHeader\20const&\2c\20unsigned\20char*\29 can change the state due to Image::createBitmapCodec\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20int\29
[asyncify] Video::AVIDecoder::AVIVideoTrack::createCodec\28\29 can change the state due to Image::createBitmapCodec\28unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20int\29
[asyncify] Video::QuickTimeDecoder::VideoSampleDesc::initCodec\28\29 can change the state due to Image::createQuickTimeCodec\28unsigned\20int\2c\20int\2c\20int\2c\20int\29
[asyncify] Image::SVQ1Decoder::svq1MotionInterBlock\28Common::BitStreamImpl<Common::SeekableReadStream\2c\20unsigned\20long\20long\2c\2032\2c\20false\2c\20true>*\2c\20unsigned\20char*\2c\20unsigned\20char*\2c\20int\2c\20Common::Point*\2c\20int\2c\20int\29 can change the state due to Image::SVQ1Decoder::svq1DecodeMotionVector\28Common::BitStreamImpl<Common::SeekableReadStream\2c\20unsigned\20long\20long\2c\2032\2c\20false\2c\20true>*\2c\20Common::Point*\2c\20Common::Point**\29
[asyncify] Image::SVQ1Decoder::svq1MotionInter4vBlock\28Common::BitStreamImpl<Common::SeekableReadStream\2c\20unsigned\20long\20long\2c\2032\2c\20false\2c\20true>*\2c\20unsigned\20char*\2c\20unsigned\20char*\2c\20int\2c\20Common::Point*\2c\20int\2c\20int\29 can change the state due to Image::SVQ1Decoder::svq1DecodeMotionVector\28Common::BitStreamImpl<Common::SeekableReadStream\2c\20unsigned\20long\20long\2c\2032\2c\20false\2c\20true>*\2c\20Common::Point*\2c\20Common::Point**\29
[asyncify] Graphics::MacMenu::calcSubMenuBounds\28Graphics::MacMenuSubMenu*\2c\20int\2c\20int\29 can change the state due to Graphics::MacMenu::calcSubMenuWidth\28Graphics::MacMenuSubMenu*\29
[asyncify] Graphics::MacText::setSelection\28int\2c\20bool\29 can change the state due to Graphics::MacText::getStringWidth\28Graphics::MacFontRun&\2c\20Common::U32String\20const&\29
[asyncify] Graphics::MacWindow::setTitle\28Common::String\20const&\29 can change the state due to Graphics::MacWindowBorder::setTitle\28Common::String\20const&\2c\20int\2c\20Graphics::MacWindowManager*\29
[asyncify] Graphics::MacMenu::processTabs\28\29 can change the state due to Graphics::MacMenu::processSubmenuTabs\28Graphics::MacMenuSubMenu*\29
[asyncify] Graphics::MacFontManager::getFont\28Graphics::MacFont\29 can change the state due to Graphics::MacFontManager::getFont\28Graphics::MacFont*\29
[asyncify] Graphics::MacButton::draw\28Graphics::ManagedSurface*\2c\20bool\29 can change the state due to Graphics::MacButton::draw\28bool\29
[asyncify] Graphics::MacText::appendText\28Common::U32String\20const&\2c\20int\2c\20int\2c\20int\2c\20bool\29 can change the state due to Graphics::MacText::appendText\28Common::U32String\20const&\2c\20int\2c\20int\2c\20int\2c\20unsigned\20short\2c\20unsigned\20short\2c\20unsigned\20short\2c\20bool\29
[asyncify] Graphics::MacText::appendTextDefault\28Common::String\20const&\2c\20bool\29 can change the state due to Graphics::MacText::appendTextDefault\28Common::U32String\20const&\2c\20bool\29
[asyncify] Graphics::MacTextWindow::clearText\28\29 can change the state due to Graphics::MacText::clearText\28\29
[asyncify] Graphics::MacText::cutSelection\28\29 can change the state due to Graphics::MacText::deleteSelection\28\29
[asyncify] Graphics::MacTextWindow::cutSelection\28\29 can change the state due to Graphics::MacTextWindow::appendInput\28Common::U32String\20const&\29
[asyncify] Graphics::MacTextWindow::appendInput\28Common::String\20const&\29 can change the state due to Graphics::MacTextWindow::appendInput\28Common::U32String\20const&\29
[asyncify] Graphics::MacWindow::move\28int\2c\20int\29 can change the state due to Graphics::MacWindow::updateInnerDims\28\29
[asyncify] Graphics::MacWindow::draw\28bool\29 can change the state due to Graphics::MacWindow::drawBorder\28\29
[asyncify] Graphics::MacWindowBorder::setBorder\28Graphics::TransparentSurface*\2c\20unsigned\20int\2c\20int\2c\20int\2c\20int\2c\20int\29 can change the state due to Graphics::MacWindow::resizeBorderSurface\28\29
[asyncify] Graphics::MacWindowBorder::setBorder\28Graphics::TransparentSurface*\2c\20unsigned\20int\2c\20Graphics::BorderOffsets\29 can change the state due to Graphics::MacWindow::resizeBorderSurface\28\29
[asyncify] Graphics::BaseMacWindow::BaseMacWindow\28int\2c\20bool\2c\20Graphics::MacWindowManager*\29 can change the state due to Graphics::MacWidget::MacWidget\28Graphics::MacWidget*\2c\20int\2c\20int\2c\20int\2c\20int\2c\20Graphics::MacWindowManager*\2c\20bool\2c\20unsigned\20short\2c\20unsigned\20short\2c\20unsigned\20short\2c\20unsigned\20int\2c\20unsigned\20int\29
[asyncify] Graphics::MacWindow::MacWindow\28int\2c\20bool\2c\20bool\2c\20bool\2c\20Graphics::MacWindowManager*\29 can change the state due to Graphics::MacWidget::MacWidget\28Graphics::MacWidget*\2c\20int\2c\20int\2c\20int\2c\20int\2c\20Graphics::MacWindowManager*\2c\20bool\2c\20unsigned\20short\2c\20unsigned\20short\2c\20unsigned\20short\2c\20unsigned\20int\2c\20unsigned\20int\29
[asyncify] Graphics::VectorRendererSpec<unsigned\20int>::blitKeyBitmap\28Graphics::ManagedSurface\20const*\2c\20Common::Point\20const&\2c\20bool\29 can change the state due to Graphics::ManagedSurface::blitFrom\28Graphics::ManagedSurface\20const&\2c\20Common::Rect\20const&\2c\20Common::Point\20const&\29
[asyncify] Graphics::ManagedSurface::blitFrom\28Graphics::ManagedSurface\20const&\29 can change the state due to Graphics::ManagedSurface::blitFrom\28Graphics::ManagedSurface\20const&\2c\20Common::Rect\20const&\2c\20Common::Point\20const&\29
[asyncify] Graphics::ManagedSurface::blitFrom\28Graphics::ManagedSurface\20const&\2c\20Common::Point\20const&\29 can change the state due to Graphics::ManagedSurface::blitFrom\28Graphics::ManagedSurface\20const&\2c\20Common::Rect\20const&\2c\20Common::Point\20const&\29
[asyncify] Graphics::VectorRendererSpec<unsigned\20short>::blitKeyBitmap\28Graphics::ManagedSurface\20const*\2c\20Common::Point\20const&\2c\20bool\29 can change the state due to Graphics::ManagedSurface::blitFrom\28Graphics::ManagedSurface\20const&\2c\20Common::Rect\20const&\2c\20Common::Point\20const&\29
[asyncify] Graphics::MacTextWindow::blit\28Graphics::ManagedSurface*\2c\20Common::Rect&\29 can change the state due to Graphics::ManagedSurface::transBlitFrom\28Graphics::ManagedSurface\20const&\2c\20Common::Rect\20const&\2c\20Common::Rect\20const&\2c\20unsigned\20int\2c\20bool\2c\20unsigned\20int\2c\20unsigned\20int\2c\20Graphics::Surface\20const*\2c\20bool\29
[asyncify] Graphics::MacWidget::blit\28Graphics::ManagedSurface*\2c\20Common::Rect&\29 can change the state due to Graphics::ManagedSurface::transBlitFrom\28Graphics::ManagedSurface\20const&\2c\20Common::Rect\20const&\2c\20Common::Rect\20const&\2c\20unsigned\20int\2c\20bool\2c\20unsigned\20int\2c\20unsigned\20int\2c\20Graphics::Surface\20const*\2c\20bool\29
[asyncify] Graphics::MacWindow::blit\28Graphics::ManagedSurface*\2c\20Common::Rect&\29 can change the state due to Graphics::ManagedSurface::transBlitFrom\28Graphics::ManagedSurface\20const&\2c\20Common::Rect\20const&\2c\20Common::Rect\20const&\2c\20unsigned\20int\2c\20bool\2c\20unsigned\20int\2c\20unsigned\20int\2c\20Graphics::Surface\20const*\2c\20bool\29
[asyncify] OpenGL::ShaderSurfaceRenderer::~ShaderSurfaceRenderer\28\29.1 can change the state due to OpenGL::ShaderSurfaceRenderer::~ShaderSurfaceRenderer\28\29
[asyncify] OpenGL::LibRetroPipeline::Pass::buildTexCoords\28unsigned\20int\2c\20Common::Array<Common::String>\20const&\29 can change the state due to OpenGL::LibRetroPipeline::Pass::addTexCoord\28Common::String\20const&\2c\20OpenGL::LibRetroPipeline::Pass::TexCoordAttribute::Type\2c\20unsigned\20int\29
[asyncify] OpenGL::ShaderManager::~ShaderManager\28\29.1 can change the state due to OpenGL::ShaderManager::~ShaderManager\28\29
[asyncify] Graphics::MacWindowManager::drawDesktop\28\29 can change the state due to Graphics::drawRoundRect\28Common::Rect&\2c\20int\2c\20unsigned\20int\2c\20bool\2c\20void\20\28*\29\28int\2c\20int\2c\20int\2c\20void*\29\2c\20void*\29
[asyncify] virtual\20thunk\20to\20SurfaceSdlGraphicsManager::clearOverlay\28\29 can change the state due to SurfaceSdlGraphicsManager::clearOverlay\28\29
[asyncify] MetaEngine::getSavegameThumbnail\28Graphics::Surface&\29 can change the state due to createThumbnailFromScreen\28Graphics::Surface*\29
[asyncify] TinyGL::destroyContext\28\29 can change the state due to TinyGL::GLContext::deinit\28\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelTexture<true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true>\28int\2c\20TinyGL::TexelBuffer\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] TinyGL::glopClear\28TinyGL::GLContext*\2c\20TinyGL::GLParam*\29 can change the state due to TinyGL::GLContext::glopClear\28TinyGL::GLParam*\29
[asyncify] TinyGL::GLContext::glopDrawArrays\28TinyGL::GLParam*\29 can change the state due to TinyGL::GLContext::glopEnd\28TinyGL::GLParam*\29
[asyncify] TinyGL::GLContext::glopDrawElements\28TinyGL::GLParam*\29 can change the state due to TinyGL::GLContext::glopEnd\28TinyGL::GLParam*\29
[asyncify] TinyGL::glopEnd\28TinyGL::GLContext*\2c\20TinyGL::GLParam*\29 can change the state due to TinyGL::GLContext::glopEnd\28TinyGL::GLParam*\29
[asyncify] non-virtual\20thunk\20to\20OPL::NUKED::OPL::~OPL\28\29 can change the state due to OPL::NUKED::OPL::~OPL\28\29
[asyncify] OPL::NUKED::OPL::~OPL\28\29.1 can change the state due to OPL::NUKED::OPL::~OPL\28\29
[asyncify] non-virtual\20thunk\20to\20OPL::NUKED::OPL::~OPL\28\29.1 can change the state due to OPL::NUKED::OPL::~OPL\28\29
[asyncify] non-virtual\20thunk\20to\20OPL::DOSBox::OPL::~OPL\28\29 can change the state due to OPL::DOSBox::OPL::~OPL\28\29
[asyncify] OPL::DOSBox::OPL::~OPL\28\29.1 can change the state due to OPL::DOSBox::OPL::~OPL\28\29
[asyncify] non-virtual\20thunk\20to\20OPL::DOSBox::OPL::~OPL\28\29.1 can change the state due to OPL::DOSBox::OPL::~OPL\28\29
[asyncify] non-virtual\20thunk\20to\20OPL::MAME::OPL::~OPL\28\29 can change the state due to OPL::MAME::OPL::~OPL\28\29
[asyncify] OPL::MAME::OPL::~OPL\28\29.1 can change the state due to OPL::MAME::OPL::~OPL\28\29
[asyncify] non-virtual\20thunk\20to\20OPL::MAME::OPL::~OPL\28\29.1 can change the state due to OPL::MAME::OPL::~OPL\28\29
[asyncify] MidiDriver_MPU401::MidiDriver_MPU401\28\29 can change the state due to MidiDriver_BASE::MidiDriver_BASE\28\29
[asyncify] MidiDriver_TIMIDITY::sysEx\28unsigned\20char\20const*\2c\20unsigned\20short\29 can change the state due to MidiDriver::midiDriverCommonSysEx\28unsigned\20char\20const*\2c\20unsigned\20short\29
[asyncify] MidiDriver_Emulated::~MidiDriver_Emulated\28\29 can change the state due to MidiDriver_BASE::~MidiDriver_BASE\28\29
[asyncify] non-virtual\20thunk\20to\20MidiDriver_Emulated::~MidiDriver_Emulated\28\29 can change the state due to MidiDriver_BASE::~MidiDriver_BASE\28\29
[asyncify] MidiDriver_ADLIB::~MidiDriver_ADLIB\28\29 can change the state due to MidiDriver_BASE::~MidiDriver_BASE\28\29
[asyncify] MidiDriver_ADLIB::~MidiDriver_ADLIB\28\29.1 can change the state due to MidiDriver_BASE::~MidiDriver_BASE\28\29
[asyncify] MidiDriver_MPU401::~MidiDriver_MPU401\28\29 can change the state due to MidiDriver_BASE::~MidiDriver_BASE\28\29
[asyncify] Audio::MidiDriver_Miles_Midi::stopAllNotes\28bool\29 can change the state due to MidiDriver_MT32GM::stopAllNotes\28bool\29
[asyncify] MidiParser_QT::~MidiParser_QT\28\29.1 can change the state due to MidiParser_QT::~MidiParser_QT\28\29
[asyncify] non-virtual\20thunk\20to\20MidiParser_QT::~MidiParser_QT\28\29 can change the state due to MidiParser_QT::~MidiParser_QT\28\29
[asyncify] non-virtual\20thunk\20to\20MidiParser_QT::~MidiParser_QT\28\29.1 can change the state due to MidiParser_QT::~MidiParser_QT\28\29
[asyncify] MidiParser_SMF::~MidiParser_SMF\28\29.1 can change the state due to MidiParser_SMF::~MidiParser_SMF\28\29
[asyncify] Audio::MidiDriver_Miles_AdLib::releaseSustain\28unsigned\20char\29 can change the state due to Audio::MidiDriver_Miles_AdLib::noteOff\28unsigned\20char\2c\20unsigned\20char\29
[asyncify] Audio::MixerImpl::~MixerImpl\28\29.1 can change the state due to Audio::MixerImpl::~MixerImpl\28\29
[asyncify] non-virtual\20thunk\20to\20Audio::MidiDriver_Miles_Midi::~MidiDriver_Miles_Midi\28\29 can change the state due to Audio::MidiDriver_Miles_Midi::~MidiDriver_Miles_Midi\28\29
[asyncify] Audio::MidiDriver_Miles_Midi::~MidiDriver_Miles_Midi\28\29.1 can change the state due to Audio::MidiDriver_Miles_Midi::~MidiDriver_Miles_Midi\28\29
[asyncify] non-virtual\20thunk\20to\20Audio::MidiDriver_Miles_Midi::~MidiDriver_Miles_Midi\28\29.1 can change the state due to Audio::MidiDriver_Miles_Midi::~MidiDriver_Miles_Midi\28\29
[asyncify] Audio::WMACodec::decodeFrame\28Common::BitStreamImpl<Common::SeekableReadStream\2c\20unsigned\20long\20long\2c\208\2c\20false\2c\20true>&\2c\20short*\29 can change the state due to Audio::WMACodec::decodeBlock\28Common::BitStreamImpl<Common::SeekableReadStream\2c\20unsigned\20long\20long\2c\208\2c\20false\2c\20true>&\29
[asyncify] Audio::Tfmx::interrupt\28\29 can change the state due to Audio::Tfmx::advancePatterns\28\29
[asyncify] OPL::MAME::makeAdLibOPL\28int\29 can change the state due to OPL::MAME::OPLCreate\28int\2c\20int\2c\20int\29
[asyncify] TownsAudioInterface::init\28\29 can change the state due to TownsAudioInterfaceInternal::init\28\29
[asyncify] EuphonyDriver::~EuphonyDriver\28\29 can change the state due to TownsAudioInterface::~TownsAudioInterface\28\29
[asyncify] EuphonyDriver::send\28unsigned\20char\29 can change the state due to EuphonyDriver::noteOff\28\29
[asyncify] PC98AudioCoreInternal::~PC98AudioCoreInternal\28\29.1 can change the state due to PC98AudioCoreInternal::~PC98AudioCoreInternal\28\29
[asyncify] SegaAudioInterfaceInternal::~SegaAudioInterfaceInternal\28\29.1 can change the state due to SegaAudioInterfaceInternal::~SegaAudioInterfaceInternal\28\29
[asyncify] PC98AudioCore::init\28\29 can change the state due to PC98AudioCoreInternal::init\28\29
[asyncify] SegaAudioInterface::init\28\29 can change the state due to SegaAudioInterfaceInternal::init\28\29
[asyncify] non-virtual\20thunk\20to\20MidiDriver_MT32::~MidiDriver_MT32\28\29 can change the state due to MidiDriver_MT32::~MidiDriver_MT32\28\29
[asyncify] MidiDriver_MT32::~MidiDriver_MT32\28\29.1 can change the state due to MidiDriver_MT32::~MidiDriver_MT32\28\29
[asyncify] non-virtual\20thunk\20to\20MidiDriver_MT32::~MidiDriver_MT32\28\29.1 can change the state due to MidiDriver_MT32::~MidiDriver_MT32\28\29
[asyncify] Vab::~Vab\28\29.1 can change the state due to Vab::~Vab\28\29
[asyncify] VabInstr::~VabInstr\28\29.1 can change the state due to VabInstr::~VabInstr\28\29
[asyncify] Common::ArjArchive::~ArjArchive\28\29.1 can change the state due to Common::ArjArchive::~ArjArchive\28\29
[asyncify] Common::ZipArchive::~ZipArchive\28\29.1 can change the state due to Common::ZipArchive::~ZipArchive\28\29
[asyncify] Lua::LuaFileConfig::~LuaFileConfig\28\29 can change the state due to Lua::LuaFileConfig::writeSettings\28\29
[asyncify] Graphics::NinePatchBitmap::drawRegions\28Graphics::Surface&\2c\20int\2c\20int\2c\20int\2c\20int\29 can change the state due to Graphics::TransparentSurface::blit\28Graphics::Surface&\2c\20int\2c\20int\2c\20int\2c\20Common::Rect*\2c\20unsigned\20int\2c\20int\2c\20int\2c\20Graphics::TSpriteBlendMode\29
[asyncify] Graphics::NinePatchBitmap::blitClip\28Graphics::Surface&\2c\20Common::Rect\2c\20int\2c\20int\2c\20int\2c\20int\29 can change the state due to Graphics::TransparentSurface::blitClip\28Graphics::Surface&\2c\20Common::Rect\2c\20int\2c\20int\2c\20int\2c\20Common::Rect*\2c\20unsigned\20int\2c\20int\2c\20int\2c\20Graphics::TSpriteBlendMode\29
[asyncify] Common::punycode_decodefilename\28Common::String\20const&\29 can change the state due to Common::punycode_decode\28Common::String\20const&\29
[asyncify] Audio::MaxTrax::noteOn\28Audio::MaxTrax::ChannelContext&\2c\20unsigned\20char\2c\20unsigned\20short\2c\20unsigned\20short\29 can change the state due to Audio::MaxTrax::pickvoice\28unsigned\20int\2c\20short\29
[asyncify] DOSBoxCMS::writeReg\28int\2c\20int\29 can change the state due to DOSBoxCMS::portWriteIntern\28int\2c\20int\2c\20int\29
[asyncify] Graphics::FontTowns::getCharData\28unsigned\20short\29\20const can change the state due to Graphics::FontTowns::getCharFMTChunk\28unsigned\20short\29
[asyncify] Common::AchievementsManager::AchievementsManager\28\29 can change the state due to Common::AchievementsManager::unsetActiveDomain\28\29
[asyncify] AsylumMetaEngineDetection::fallbackDetect\28Common::HashMap<Common::String\2c\20Common::FSNode\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>\20const&\2c\20Common::FSList\20const&\2c\20ADDetectedGameExtraInfo**\29\20const can change the state due to AdvancedMetaEngineDetection::detectGameFilebased\28Common::HashMap<Common::String\2c\20Common::FSNode\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>\20const&\2c\20ADFileBasedFallback\20const*\29\20const
[asyncify] CryOmni3D::CryOmni3DMetaEngineDetection::fallbackDetect\28Common::HashMap<Common::String\2c\20Common::FSNode\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>\20const&\2c\20Common::FSList\20const&\2c\20ADDetectedGameExtraInfo**\29\20const can change the state due to AdvancedMetaEngineDetection::detectGameFilebased\28Common::HashMap<Common::String\2c\20Common::FSNode\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>\20const&\2c\20ADFileBasedFallback\20const*\29\20const
[asyncify] MohawkMetaEngineDetection::fallbackDetect\28Common::HashMap<Common::String\2c\20Common::FSNode\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>\20const&\2c\20Common::FSList\20const&\2c\20ADDetectedGameExtraInfo**\29\20const can change the state due to AdvancedMetaEngineDetection::detectGameFilebased\28Common::HashMap<Common::String\2c\20Common::FSNode\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>\20const&\2c\20ADFileBasedFallback\20const*\29\20const
[asyncify] ToonMetaEngineDetection::fallbackDetect\28Common::HashMap<Common::String\2c\20Common::FSNode\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>\20const&\2c\20Common::FSList\20const&\2c\20ADDetectedGameExtraInfo**\29\20const can change the state due to AdvancedMetaEngineDetection::detectGameFilebased\28Common::HashMap<Common::String\2c\20Common::FSNode\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>\20const&\2c\20ADFileBasedFallback\20const*\29\20const
[asyncify] ToucheMetaEngineDetection::fallbackDetect\28Common::HashMap<Common::String\2c\20Common::FSNode\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>\20const&\2c\20Common::FSList\20const&\2c\20ADDetectedGameExtraInfo**\29\20const can change the state due to AdvancedMetaEngineDetection::detectGameFilebased\28Common::HashMap<Common::String\2c\20Common::FSNode\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>\20const&\2c\20ADFileBasedFallback\20const*\29\20const
[asyncify] non-virtual\20thunk\20to\20Common::OSDMessageQueue::~OSDMessageQueue\28\29 can change the state due to Common::OSDMessageQueue::~OSDMessageQueue\28\29
[asyncify] Common::OSDMessageQueue::~OSDMessageQueue\28\29.1 can change the state due to Common::OSDMessageQueue::~OSDMessageQueue\28\29
[asyncify] non-virtual\20thunk\20to\20Common::OSDMessageQueue::~OSDMessageQueue\28\29.1 can change the state due to Common::OSDMessageQueue::~OSDMessageQueue\28\29
[asyncify] non-virtual\20thunk\20to\20Common::VirtualMouse::~VirtualMouse\28\29 can change the state due to Common::VirtualMouse::~VirtualMouse\28\29
[asyncify] Common::VirtualMouse::~VirtualMouse\28\29.1 can change the state due to Common::VirtualMouse::~VirtualMouse\28\29
[asyncify] non-virtual\20thunk\20to\20Common::VirtualMouse::~VirtualMouse\28\29.1 can change the state due to Common::VirtualMouse::~VirtualMouse\28\29
[asyncify] legalstub$Scumm::ScummFile::pos\28\29\20const can change the state due to Scumm::ScummFile::pos\28\29\20const
[asyncify] legalstub$Scumm::ScummFile::seek\28long\20long\2c\20int\29 can change the state due to Scumm::ScummFile::seek\28long\20long\2c\20int\29
[asyncify] legalstub$Scumm::ScummFile::size\28\29\20const can change the state due to Scumm::ScummFile::size\28\29\20const
[asyncify] Common::BaseString<char>::BaseString\28Common::BaseString<char>\20const&\29 can change the state due to Common::BaseString<char>::incRefCount\28\29\20const
[asyncify] Common::BaseString<char>::assign\28Common::BaseString<char>\20const&\29 can change the state due to Common::BaseString<char>::incRefCount\28\29\20const
[asyncify] Common::BaseString<char>::ensureCapacity\28unsigned\20int\2c\20bool\29 can change the state due to Common::BaseString<char>::decRefCount\28int*\29
[asyncify] Common::BaseString<char>::clear\28\29 can change the state due to Common::BaseString<char>::decRefCount\28int*\29
[asyncify] Common::BaseString<char>::~BaseString\28\29 can change the state due to Common::BaseString<char>::decRefCount\28int*\29
[asyncify] Common::BaseString<char>::assign\28Common::BaseString<char>&&\29 can change the state due to Common::BaseString<char>::decRefCount\28int*\29
[asyncify] Common::BaseString<char>::assign\28char\29 can change the state due to Common::BaseString<char>::decRefCount\28int*\29
[asyncify] Common::BaseString<char>::assign\28char\20const*\29 can change the state due to Common::BaseString<char>::decRefCount\28int*\29
[asyncify] Common::BaseString<char32_t>::BaseString\28Common::BaseString<char32_t>\20const&\29 can change the state due to Common::BaseString<char32_t>::incRefCount\28\29\20const
[asyncify] Common::BaseString<char32_t>::assign\28Common::BaseString<char32_t>\20const&\29 can change the state due to Common::BaseString<char32_t>::incRefCount\28\29\20const
[asyncify] Common::BaseString<char32_t>::ensureCapacity\28unsigned\20int\2c\20bool\29 can change the state due to Common::BaseString<char32_t>::decRefCount\28int*\29
[asyncify] Common::BaseString<char32_t>::clear\28\29 can change the state due to Common::BaseString<char32_t>::decRefCount\28int*\29
[asyncify] Common::BaseString<char32_t>::~BaseString\28\29 can change the state due to Common::BaseString<char32_t>::decRefCount\28int*\29
[asyncify] Common::BaseString<char32_t>::assign\28Common::BaseString<char32_t>&&\29 can change the state due to Common::BaseString<char32_t>::decRefCount\28int*\29
[asyncify] Common::BaseString<char32_t>::assign\28char32_t\29 can change the state due to Common::BaseString<char32_t>::decRefCount\28int*\29
[asyncify] Common::BaseString<char32_t>::assign\28char32_t\20const*\29 can change the state due to Common::BaseString<char32_t>::decRefCount\28int*\29
[asyncify] Video::SmackerDecoder::SmackerAudioTrack::SmackerAudioTrack\28Video::SmackerDecoder::AudioInfo\20const&\2c\20Audio::Mixer::SoundType\29 can change the state due to Audio::makeQueuingAudioStream\28int\2c\20bool\29
[asyncify] Video::BinkDecoder::BinkAudioTrack::BinkAudioTrack\28Video::BinkDecoder::AudioInfo&\2c\20Audio::Mixer::SoundType\29 can change the state due to Audio::makeQueuingAudioStream\28int\2c\20bool\29
[asyncify] Audio::QuickTimeAudioDecoder::QuickTimeAudioTrack::createStream\28\29\20const can change the state due to Audio::makeQueuingAudioStream\28int\2c\20bool\29
[asyncify] Audio::XanDPCMStream::XanDPCMStream\28int\2c\20int\29 can change the state due to Audio::makeQueuingAudioStream\28int\2c\20bool\29
[asyncify] Audio::XanDPCMStream::XanDPCMStream\28int\2c\20int\29.1 can change the state due to Audio::makeQueuingAudioStream\28int\2c\20bool\29
[asyncify] Audio::MidiDriver_Miles_AdLib::MidiDriver_Miles_AdLib\28Audio::InstrumentEntry*\2c\20unsigned\20short\29 can change the state due to MidiDriver_Multisource::MidiDriver_Multisource\28\29
[asyncify] Audio::PCSpeaker::~PCSpeaker\28\29.1 can change the state due to Audio::PCSpeaker::~PCSpeaker\28\29
[asyncify] Audio::MidiDriver_Miles_AdLib::~MidiDriver_Miles_AdLib\28\29.1 can change the state due to Audio::MidiDriver_Miles_AdLib::~MidiDriver_Miles_AdLib\28\29
[asyncify] DefaultTimerManager::~DefaultTimerManager\28\29.1 can change the state due to DefaultTimerManager::~DefaultTimerManager\28\29
[asyncify] SdlTimerManager::~SdlTimerManager\28\29 can change the state due to DefaultTimerManager::~DefaultTimerManager\28\29
[asyncify] PC98AudioCore::stackLockMutex\28\29 can change the state due to PC98AudioCore::MutexLock::MutexLock\28PC98AudioCoreInternal*\2c\20int\29
[asyncify] PC98AudioCore::stackUnlockMutex\28\29 can change the state due to PC98AudioCore::MutexLock::MutexLock\28PC98AudioCoreInternal*\2c\20int\29
[asyncify] SegaAudioInterface::stackLockMutex\28\29 can change the state due to SegaAudioInterface::MutexLock::MutexLock\28SegaAudioInterfaceInternal*\2c\20int\29
[asyncify] SegaAudioInterface::stackUnlockMutex\28\29 can change the state due to SegaAudioInterface::MutexLock::MutexLock\28SegaAudioInterfaceInternal*\2c\20int\29
[asyncify] virtual\20thunk\20to\20SurfaceSdlGraphicsManager::lockScreen\28\29 can change the state due to SurfaceSdlGraphicsManager::lockScreen\28\29
[asyncify] non-virtual\20thunk\20to\20MidiDriver_MT32::sysEx\28unsigned\20char\20const*\2c\20unsigned\20short\29 can change the state due to MidiDriver_MT32::sysEx\28unsigned\20char\20const*\2c\20unsigned\20short\29
[asyncify] TownsAudioInterface::TownsAudioInterface\28Audio::Mixer*\2c\20TownsAudioInterfacePluginDriver*\2c\20bool\29 can change the state due to TownsAudioInterfaceInternal::addNewRef\28Audio::Mixer*\2c\20TownsAudioInterface*\2c\20TownsAudioInterfacePluginDriver*\2c\20bool\29
[asyncify] EuphonyDriver::setMusicVolume\28int\29 can change the state due to TownsAudioInterface::setMusicVolume\28int\29
[asyncify] EuphonyDriver::setSoundEffectVolume\28int\29 can change the state due to TownsAudioInterface::setSoundEffectVolume\28int\29
[asyncify] PC98AudioCore::reset\28\29 can change the state due to TownsPC98_FmSynth::reset\28\29
[asyncify] SegaAudioInterface::reset\28\29 can change the state due to TownsPC98_FmSynth::reset\28\29
[asyncify] TownsAudioInterfaceInternal::fmReset\28\29 can change the state due to TownsPC98_FmSynth::reset\28\29
[asyncify] TownsAudioInterfaceInternal::fmSetLevel\28int\2c\20int\29 can change the state due to TownsPC98_FmSynth::writeReg\28unsigned\20char\2c\20unsigned\20char\2c\20unsigned\20char\29
[asyncify] TownsAudioInterfaceInternal::intf_chanOff\28void*&\29 can change the state due to TownsPC98_FmSynth::writeReg\28unsigned\20char\2c\20unsigned\20char\2c\20unsigned\20char\29
[asyncify] TownsAudioInterfaceInternal::intf_writeReg\28void*&\29 can change the state due to TownsPC98_FmSynth::writeReg\28unsigned\20char\2c\20unsigned\20char\2c\20unsigned\20char\29
[asyncify] TownsAudioInterfaceInternal::intf_setTimerA\28void*&\29 can change the state due to TownsPC98_FmSynth::writeReg\28unsigned\20char\2c\20unsigned\20char\2c\20unsigned\20char\29
[asyncify] TownsAudioInterfaceInternal::intf_setTimerB\28void*&\29 can change the state due to TownsPC98_FmSynth::writeReg\28unsigned\20char\2c\20unsigned\20char\2c\20unsigned\20char\29
[asyncify] TownsAudioInterfaceInternal::intf_enableTimerA\28void*&\29 can change the state due to TownsPC98_FmSynth::writeReg\28unsigned\20char\2c\20unsigned\20char\2c\20unsigned\20char\29
[asyncify] TownsAudioInterfaceInternal::intf_enableTimerB\28void*&\29 can change the state due to TownsPC98_FmSynth::writeReg\28unsigned\20char\2c\20unsigned\20char\2c\20unsigned\20char\29
[asyncify] TownsAudioInterfaceInternal::intf_fmKeyOff\28void*&\29 can change the state due to TownsPC98_FmSynth::writeReg\28unsigned\20char\2c\20unsigned\20char\2c\20unsigned\20char\29
[asyncify] TownsAudioInterfaceInternal::intf_fmSetPanPos\28void*&\29 can change the state due to TownsPC98_FmSynth::writeReg\28unsigned\20char\2c\20unsigned\20char\2c\20unsigned\20char\29
[asyncify] TownsAudioInterfaceInternal::fmKeyOff\28int\29 can change the state due to TownsPC98_FmSynth::writeReg\28unsigned\20char\2c\20unsigned\20char\2c\20unsigned\20char\29
[asyncify] TownsAudioInterfaceInternal::fmSetPanPos\28int\2c\20int\29 can change the state due to TownsPC98_FmSynth::writeReg\28unsigned\20char\2c\20unsigned\20char\2c\20unsigned\20char\29
[asyncify] TownsAudioInterfaceInternal::fmChanOff\28int\29 can change the state due to TownsPC98_FmSynth::writeReg\28unsigned\20char\2c\20unsigned\20char\2c\20unsigned\20char\29
[asyncify] TownsAudioInterfaceInternal::bufferedWriteReg\28unsigned\20char\2c\20unsigned\20char\2c\20unsigned\20char\29 can change the state due to TownsPC98_FmSynth::writeReg\28unsigned\20char\2c\20unsigned\20char\2c\20unsigned\20char\29
[asyncify] PC98AudioCore::writeReg\28unsigned\20char\2c\20unsigned\20char\2c\20unsigned\20char\29 can change the state due to TownsPC98_FmSynth::writeReg\28unsigned\20char\2c\20unsigned\20char\2c\20unsigned\20char\29
[asyncify] SegaAudioInterface::writeReg\28unsigned\20char\2c\20unsigned\20char\2c\20unsigned\20char\29 can change the state due to TownsPC98_FmSynth::writeReg\28unsigned\20char\2c\20unsigned\20char\2c\20unsigned\20char\29
[asyncify] TownsAudioInterfaceInternal::fmKeyOn\28int\2c\20int\2c\20int\29 can change the state due to TownsPC98_FmSynth::writeReg\28unsigned\20char\2c\20unsigned\20char\2c\20unsigned\20char\29
[asyncify] TownsAudioInterfaceInternal::intf_keyOff\28void*&\29 can change the state due to TownsPC98_FmSynth::writeReg\28unsigned\20char\2c\20unsigned\20char\2c\20unsigned\20char\29
[asyncify] TownsAudioInterfaceInternal::intf_setPanPos\28void*&\29 can change the state due to TownsPC98_FmSynth::writeReg\28unsigned\20char\2c\20unsigned\20char\2c\20unsigned\20char\29
[asyncify] TownsAudioInterfaceInternal::fmSetInstrument\28int\2c\20int\29 can change the state due to TownsPC98_FmSynth::writeReg\28unsigned\20char\2c\20unsigned\20char\2c\20unsigned\20char\29
[asyncify] TownsAudioInterfaceInternal::fmSetPitch\28int\2c\20int\29 can change the state due to TownsPC98_FmSynth::writeReg\28unsigned\20char\2c\20unsigned\20char\2c\20unsigned\20char\29
[asyncify] PC98AudioCore::readReg\28unsigned\20char\2c\20unsigned\20char\29 can change the state due to TownsPC98_FmSynth::readReg\28unsigned\20char\2c\20unsigned\20char\29
[asyncify] SegaAudioInterface::readReg\28unsigned\20char\2c\20unsigned\20char\29 can change the state due to TownsPC98_FmSynth::readReg\28unsigned\20char\2c\20unsigned\20char\29
[asyncify] Audio::MidiDriver_Miles_Midi::addActiveNote\28unsigned\20char\2c\20unsigned\20char\2c\20signed\20char\29 can change the state due to MidiDriver_MT32GM::addActiveNote\28unsigned\20char\2c\20unsigned\20char\2c\20signed\20char\29
[asyncify] Audio::MaxTrax::~MaxTrax\28\29 can change the state due to Audio::MaxTrax::stopMusic\28\29
[asyncify] Audio::Tfmx::setModuleData\28Audio::Tfmx&\29 can change the state due to Audio::Tfmx::setModuleData\28Audio::Tfmx::MdatResource\20const*\2c\20signed\20char\20const*\2c\20unsigned\20int\2c\20bool\29
[asyncify] PC98AudioCore::PC98AudioCore\28Audio::Mixer*\2c\20PC98AudioPluginDriver*\2c\20PC98AudioPluginDriver::EmuType\29 can change the state due to PC98AudioCoreInternal::addNewRef\28Audio::Mixer*\2c\20PC98AudioCore*\2c\20PC98AudioPluginDriver*\2c\20PC98AudioPluginDriver::EmuType\29
[asyncify] PC98AudioCore::writePort\28unsigned\20short\2c\20unsigned\20char\29 can change the state due to PC98AudioCoreInternal::writePort\28unsigned\20short\2c\20unsigned\20char\29
[asyncify] TownsPC98_AudioDriver::setMusicVolume\28int\29 can change the state due to PC98AudioCore::setMusicVolume\28int\29
[asyncify] TownsPC98_AudioDriver::setSoundEffectVolume\28int\29 can change the state due to PC98AudioCore::setSoundEffectVolume\28int\29
[asyncify] SegaAudioInterface::SegaAudioInterface\28Audio::Mixer*\2c\20SegaAudioPluginDriver*\29 can change the state due to SegaAudioInterfaceInternal::addNewRef\28Audio::Mixer*\2c\20SegaAudioInterface*\2c\20SegaAudioPluginDriver*\29
[asyncify] SegaAudioInterface::playPCMChannel\28unsigned\20char\2c\20unsigned\20char\2c\20unsigned\20short\2c\20unsigned\20short\2c\20unsigned\20char\2c\20unsigned\20char\29 can change the state due to SegaAudioInterfaceInternal::playPCMChannel\28unsigned\20char\2c\20unsigned\20char\2c\20unsigned\20short\2c\20unsigned\20short\2c\20unsigned\20char\2c\20unsigned\20char\29
[asyncify] SegaAudioInterface::psgWrite\28unsigned\20char\29 can change the state due to SegaAudioInterfaceInternal::psgWrite\28unsigned\20char\29
[asyncify] virtual\20thunk\20to\20SurfaceSdlGraphicsManager::setStretchMode\28int\29 can change the state due to SurfaceSdlGraphicsManager::setStretchMode\28int\29
[asyncify] virtual\20thunk\20to\20SurfaceSdlGraphicsManager::displayActivityIconOnOSD\28Graphics::Surface\20const*\29 can change the state due to SurfaceSdlGraphicsManager::displayActivityIconOnOSD\28Graphics::Surface\20const*\29
[asyncify] legalstub$virtual\20thunk\20to\20Common::SeekableSubReadStream::seek\28long\20long\2c\20int\29 can change the state due to virtual\20thunk\20to\20Common::SeekableSubReadStream::seek\28long\20long\2c\20int\29
[asyncify] Common::String::encodeInternal\28Common::U32String\20const&\2c\20Common::CodePage\2c\20char\29 can change the state due to Common::String::encodeWindows949\28Common::U32String\20const&\2c\20char\29
[asyncify] Common::U32String::decodeInternal\28char\20const*\2c\20unsigned\20int\2c\20Common::CodePage\29 can change the state due to Common::U32String::decodeWindows932\28char\20const*\2c\20unsigned\20int\29
[asyncify] Graphics::ConvertKSToUCS2\28unsigned\20short\29 can change the state due to Common::convertUHCToUCS\28unsigned\20char\2c\20unsigned\20char\29
[asyncify] Graphics::FontKoreanSVM::getCharData\28unsigned\20short\29\20const can change the state due to Common::convertUHCToUCS\28unsigned\20char\2c\20unsigned\20char\29
[asyncify] Graphics::FontKoreanSVM::getCharDataDefault\28unsigned\20short\29\20const can change the state due to Common::convertUHCToUCS\28unsigned\20char\2c\20unsigned\20char\29
[asyncify] Graphics::FontKoreanSVM::getCharDataPCE\28unsigned\20short\29\20const can change the state due to Common::convertUHCToUCS\28unsigned\20char\2c\20unsigned\20char\29
[asyncify] Common::String::operator+=\28char\29 can change the state due to Common::BaseString<char>::assignAppend\28char\29
[asyncify] Common::operator+\28Common::String\20const&\2c\20char\29 can change the state due to Common::BaseString<char>::assignAppend\28char\29
[asyncify] Common::tag2string\28unsigned\20int\2c\20bool\29 can change the state due to Common::BaseString<char>::assignAppend\28char\29
[asyncify] Common::toPrintable\28Common::String\20const&\2c\20bool\29 can change the state due to Common::BaseString<char>::assignAppend\28char\29
[asyncify] Common::DebugManager::addDebugChannels\28DebugChannelDef\20const*\29 can change the state due to Common::DebugManager::addDebugChannel\28unsigned\20int\2c\20Common::String\20const&\2c\20Common::String\20const&\29
[asyncify] Common::punycode_encodefilename\28Common::U32String\20const&\29 can change the state due to Common::punycode_encode\28Common::U32String\20const&\29
[asyncify] int\20Common::sprintf_s<char\2c\2020ul>\28char\20\28&\29\20\5b20ul\5d\2c\20char\20const*\2c\20...\29 can change the state due to Common::vsprintf_s\28char*\2c\20unsigned\20long\2c\20char\20const*\2c\20void*\29
[asyncify] int\20Common::sprintf_s<char\2c\208ul>\28char\20\28&\29\20\5b8ul\5d\2c\20char\20const*\2c\20...\29 can change the state due to Common::vsprintf_s\28char*\2c\20unsigned\20long\2c\20char\20const*\2c\20void*\29
[asyncify] Agi::WagFileParser::addPropFromIni\28Common::INIFile*\2c\20Common::String\2c\20Common::String\2c\20Agi::WagProperty::WagPropertyCode\29 can change the state due to scumm_strdup\28char\20const*\29
[asyncify] Agi::WagProperty::setPropDataSize\28Common::String\29 can change the state due to scumm_strdup\28char\20const*\29
[asyncify] Common::convertBiDiString\28Common::String\20const&\2c\20Common::Language\2c\20Common::BiDiParagraph\29 can change the state due to Common::UnicodeBiDiText::UnicodeBiDiText\28Common::U32String\20const&\2c\20Common::BiDiParagraph\29
[asyncify] Common::convertBiDiString\28Common::String\20const&\2c\20Common::CodePage\2c\20Common::BiDiParagraph\29 can change the state due to Common::UnicodeBiDiText::UnicodeBiDiText\28Common::U32String\20const&\2c\20Common::BiDiParagraph\29
[asyncify] Common::convertBiDiU32String\28Common::U32String\20const&\2c\20Common::BiDiParagraph\29 can change the state due to Common::UnicodeBiDiText::UnicodeBiDiText\28Common::U32String\20const&\2c\20Common::BiDiParagraph\29
[asyncify] Common::bidiByLineHelper\28Common::String\2c\20void*\29 can change the state due to Common::UnicodeBiDiText::UnicodeBiDiText\28Common::String\20const&\2c\20Common::CodePage\2c\20unsigned\20int*\29
[asyncify] Common::U32String::formatInternal\28Common::U32String\20const*\2c\20...\29 can change the state due to Common::U32String::vformat\28char32_t\20const*\2c\20char32_t\20const*\2c\20Common::U32String&\2c\20void*\29
[asyncify] Common::U32String::format\28char\20const*\2c\20...\29 can change the state due to Common::U32String::vformat\28char32_t\20const*\2c\20char32_t\20const*\2c\20Common::U32String&\2c\20void*\29
[asyncify] Common::AchievementsManager::isAchieved\28Common::String\20const&\29\20const can change the state due to Common::INIFile::hasKey\28Common::String\20const&\2c\20Common::String\20const&\29\20const
[asyncify] Common::AchievementsManager::getStatFloatEx\28Common::String\20const&\2c\20Common::String\20const&\29\20const can change the state due to Common::INIFile::getKey\28Common::String\20const&\2c\20Common::String\20const&\2c\20Common::String&\29\20const
[asyncify] Common::AchievementsManager::getStatFloat\28Common::String\20const&\29\20const can change the state due to Common::INIFile::getKey\28Common::String\20const&\2c\20Common::String\20const&\2c\20Common::String&\29\20const
[asyncify] Common::AchievementsManager::getAverageRateStatFloat\28Common::String\20const&\29\20const can change the state due to Common::INIFile::getKey\28Common::String\20const&\2c\20Common::String\20const&\2c\20Common::String&\29\20const
[asyncify] Common::AchievementsManager::getStatInt\28Common::String\20const&\29\20const can change the state due to Common::INIFile::getKey\28Common::String\20const&\2c\20Common::String\20const&\2c\20Common::String&\29\20const
[asyncify] Common::AchievementsManager::getStatRaw\28Common::String\20const&\29\20const can change the state due to Common::INIFile::getKey\28Common::String\20const&\2c\20Common::String\20const&\2c\20Common::String&\29\20const
[asyncify] Common::JSONValue::stringifyImpl\28unsigned\20long\29\20const can change the state due to Common::JSONValue::stringifyString\28Common::String\20const&\29
[asyncify] Video::IMDDecoder::renderFrame\28Common::Rect&\29 can change the state due to Video::CoktelDecoder::deLZ77\28unsigned\20char*\2c\20unsigned\20char\20const*\2c\20unsigned\20int\2c\20unsigned\20int\29
[asyncify] Image::Indeo::IVIPlaneDesc::initTiles\28Image::Indeo::IVIPlaneDesc*\2c\20int\2c\20int\29 can change the state due to Image::Indeo::IVIBandDesc::initTiles\28Image::Indeo::IVITile*\2c\20int\2c\20int\2c\20int\2c\20int\29
[asyncify] Image::Indeo::VLC::init_vlc\28int\2c\20int\2c\20void\20const*\2c\20int\2c\20int\2c\20void\20const*\2c\20int\2c\20int\2c\20int\29 can change the state due to Image::Indeo::VLC::init_vlc\28int\2c\20int\2c\20void\20const*\2c\20int\2c\20int\2c\20void\20const*\2c\20int\2c\20int\2c\20void\20const*\2c\20int\2c\20int\2c\20int\29
[asyncify] Graphics::TTFFont::assureCached\28unsigned\20int\29\20const can change the state due to Graphics::TTFFont::cacheGlyph\28Graphics::TTFFont::Glyph&\2c\20unsigned\20int\29\20const
[asyncify] Graphics::MacFontManager::getFontName\28Graphics::MacFont&\29 can change the state due to Graphics::MacFontManager::getFontName\28unsigned\20short\2c\20int\2c\20int\2c\20bool\29
[asyncify] MidiDriver_ADLIB_Multisource::detectOplType\28OPL::Config::OplType\29 can change the state due to OPL::Config::detect\28OPL::Config::OplType\29
[asyncify] OPL::Config::create\28OPL::Config::OplType\29 can change the state due to OPL::Config::create\28signed\20char\2c\20OPL::Config::OplType\29
[asyncify] non-virtual\20thunk\20to\20Audio::MidiDriver_Miles_Midi::processXMIDITimbreChunk\28unsigned\20char\20const*\2c\20unsigned\20int\29 can change the state due to Audio::MidiDriver_Miles_Midi::processXMIDITimbreChunk\28unsigned\20char\20const*\2c\20unsigned\20int\29
[asyncify] Audio::QDM2Stream::process_subpacket_11\28Audio::QDM2SubPNode*\2c\20int\29 can change the state due to Audio::QDM2Stream::fill_coding_method_array\28signed\20char\20\28*\29\20\5b30\5d\5b64\5d\2c\20signed\20char\20\28*\29\20\5b30\5d\5b64\5d\2c\20signed\20char\20\28*\29\20\5b30\5d\5b64\5d\2c\20int\2c\20int\2c\20int\2c\20int\29
[asyncify] Audio::QDM2Stream::process_subpacket_12\28Audio::QDM2SubPNode*\2c\20int\29 can change the state due to Audio::QDM2Stream::synthfilt_build_sb_samples\28Common::BitStreamImpl<Common::BitStreamMemoryStream\2c\20unsigned\20long\20long\2c\2032\2c\20true\2c\20false>*\2c\20int\2c\20int\2c\20int\29
[asyncify] Audio::Infogrames::interrupt\28\29 can change the state due to Audio::Infogrames::getNextSample\28Audio::Infogrames::Channel&\29
[asyncify] Audio::SoundFx::interrupt\28\29 can change the state due to Audio::SoundFx::handleTick\28\29
[asyncify] MidiDriver_TIMIDITY::teardown\28\29 can change the state due to MidiDriver_TIMIDITY::timidity_ctl_command\28char\20const*\2c\20...\29
[asyncify] MidiDriver_TIMIDITY::timidity_eot\28\29 can change the state due to MidiDriver_TIMIDITY::timidity_write_data\28void\20const*\2c\20unsigned\20long\29
[asyncify] MidiDriver_TIMIDITY::timidity_meta_seq\28int\2c\20int\2c\20int\29 can change the state due to MidiDriver_TIMIDITY::timidity_write_data\28void\20const*\2c\20unsigned\20long\29
[asyncify] OpenGL::Shader::enableVertexAttribute\28char\20const*\2c\20int\2c\20unsigned\20int\2c\20unsigned\20char\2c\20int\2c\20void\20const*\29 can change the state due to OpenGL::Shader::getAttribute\28char\20const*\29
[asyncify] OpenGL::Shader::enableVertexAttribute\28char\20const*\2c\20unsigned\20int\2c\20int\2c\20unsigned\20int\2c\20unsigned\20char\2c\20int\2c\20unsigned\20int\29 can change the state due to OpenGL::Shader::getAttribute\28char\20const*\29
[asyncify] OpenGL::Shader::disableVertexAttribute\28char\20const*\2c\20int\2c\20float\20const*\29 can change the state due to OpenGL::Shader::getAttribute\28char\20const*\29
[asyncify] Graphics::MacWindowManager::findBestColor\28unsigned\20char\2c\20unsigned\20char\2c\20unsigned\20char\29 can change the state due to Graphics::PaletteLookup::findBestColor\28unsigned\20char\2c\20unsigned\20char\2c\20unsigned\20char\2c\20bool\29
[asyncify] Graphics::MacWindowManager::passPalette\28unsigned\20char\20const*\2c\20unsigned\20int\29 can change the state due to Graphics::PaletteLookup::findBestColor\28unsigned\20char\2c\20unsigned\20char\2c\20unsigned\20char\2c\20bool\29
[asyncify] Graphics::MacWindowManager::findBestColor\28unsigned\20int\29 can change the state due to Graphics::PaletteLookup::findBestColor\28unsigned\20char\2c\20unsigned\20char\2c\20unsigned\20char\2c\20bool\29
[asyncify] Graphics::MacWindowManager::inverter\28unsigned\20char\29 can change the state due to Graphics::PaletteLookup::findBestColor\28unsigned\20char\2c\20unsigned\20char\2c\20unsigned\20char\2c\20bool\29
[asyncify] Graphics::MacFontRun::getEncoding\28\29 can change the state due to Graphics::MacFontManager::getFontEncoding\28unsigned\20short\29
[asyncify] Graphics::MacFontRun::plainByteMode\28\29 can change the state due to Graphics::MacFontManager::getFontEncoding\28unsigned\20short\29
[asyncify] Graphics::MacFontRun::getEncodedText\28\29 can change the state due to Graphics::MacFontManager::getFontEncoding\28unsigned\20short\29
[asyncify] Graphics::MacMenu::createSubMenuFromString\28int\2c\20char\20const*\2c\20int\29 can change the state due to Graphics::MacMenu::addSubMenu\28Graphics::MacMenuSubMenu*\2c\20int\29
[asyncify] tglGetFloatv\28int\2c\20float*\29 can change the state due to TinyGL::GLContext::gl_GetFloatv\28int\2c\20float*\29
[asyncify] TinyGL::glopLightModel\28TinyGL::GLContext*\2c\20TinyGL::GLParam*\29 can change the state due to TinyGL::GLContext::glopLightModel\28TinyGL::GLParam*\29
[asyncify] GUI::ThemeParser::parserCallback_font\28Common::XMLParser::ParserNode*\29 can change the state due to GUI::ThemeParser::resolutionCheck\28Common::String\20const&\29
[asyncify] GUI::ThemeParser::parserCallback_render_info\28Common::XMLParser::ParserNode*\29 can change the state due to GUI::ThemeParser::resolutionCheck\28Common::String\20const&\29
[asyncify] GUI::ThemeParser::parserCallback_layout_info\28Common::XMLParser::ParserNode*\29 can change the state due to GUI::ThemeParser::resolutionCheck\28Common::String\20const&\29
[asyncify] OpenGL::LibRetro::PresetParser::parsePasses\28\29 can change the state due to OpenGL::LibRetro::PresetParser::lookUpValue\28Common::String\20const&\2c\20unsigned\20int*\29
[asyncify] OpenGL::LibRetro::PresetParser::lookUpValueScale\28Common::String\20const&\2c\20float*\2c\20unsigned\20int*\2c\20OpenGL::LibRetro::ScaleType\29 can change the state due to OpenGL::LibRetro::PresetParser::lookUpValue\28Common::String\20const&\2c\20unsigned\20int*\29
[asyncify] bool\20OpenGL::LibRetro::PresetParser::lookUpValue<unsigned\20int\2c\20int>\28Common::String\20const&\2c\20unsigned\20int*\2c\20int\20const&\29 can change the state due to OpenGL::LibRetro::PresetParser::lookUpValue\28Common::String\20const&\2c\20unsigned\20int*\29
[asyncify] virtual\20thunk\20to\20SdlGraphicsManager::initSizeHint\28Common::Array<Graphics::Mode>\20const&\29 can change the state due to SdlGraphicsManager::initSizeHint\28Common::Array<Graphics::Mode>\20const&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] VGMInstrSet::VGMInstrSet\28RawFile*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20Common::String\2c\20VGMSampColl*\29 can change the state due to Common::Array<Common::Array<VGMItem*>*>::insert_aux\28Common::Array<VGMItem*>**\2c\20Common::Array<VGMItem*>*\20const*\2c\20Common::Array<VGMItem*>*\20const*\29
[asyncify] VGMInstr::VGMInstr\28VGMInstrSet*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int\2c\20Common::String\20const&\29 can change the state due to Common::Array<Common::Array<VGMItem*>*>::insert_aux\28Common::Array<VGMItem*>**\2c\20Common::Array<VGMItem*>*\20const*\2c\20Common::Array<VGMItem*>*\20const*\29
[asyncify] VGMContainerItem::VGMContainerItem\28\29 can change the state due to Common::Array<Common::Array<VGMItem*>*>::insert_aux\28Common::Array<VGMItem*>**\2c\20Common::Array<VGMItem*>*\20const*\2c\20Common::Array<VGMItem*>*\20const*\29
[asyncify] VGMContainerItem::VGMContainerItem\28VGMFile*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20Common::String\29 can change the state due to Common::Array<Common::Array<VGMItem*>*>::insert_aux\28Common::Array<VGMItem*>**\2c\20Common::Array<VGMItem*>*\20const*\2c\20Common::Array<VGMItem*>*\20const*\29
[asyncify] VGMRgn::VGMRgn\28VGMInstr*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20Common::String\29 can change the state due to Common::Array<Common::Array<VGMItem*>*>::insert_aux\28Common::Array<VGMItem*>**\2c\20Common::Array<VGMItem*>*\20const*\2c\20Common::Array<VGMItem*>*\20const*\29
[asyncify] VGMSampColl::VGMSampColl\28RawFile*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20Common::String\29 can change the state due to Common::Array<Common::Array<VGMItem*>*>::insert_aux\28Common::Array<VGMItem*>**\2c\20Common::Array<VGMItem*>*\20const*\2c\20Common::Array<VGMItem*>*\20const*\29
[asyncify] VGMSampColl::VGMSampColl\28RawFile*\2c\20VGMInstrSet*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20Common::String\29 can change the state due to Common::Array<Common::Array<VGMItem*>*>::insert_aux\28Common::Array<VGMItem*>**\2c\20Common::Array<VGMItem*>*\20const*\2c\20Common::Array<VGMItem*>*\20const*\29
[asyncify] Math::Quaternion::fromEuler\28Math::Angle\20const&\2c\20Math::Angle\20const&\2c\20Math::Angle\20const&\2c\20Math::EulerOrder\29 can change the state due to Math::Rotation3D<Math::Matrix<4\2c\204>>::buildFromEuler\28Math::Angle\20const&\2c\20Math::Angle\20const&\2c\20Math::Angle\20const&\2c\20Math::EulerOrder\29
[asyncify] Math::Quaternion::getEuler\28Math::Angle*\2c\20Math::Angle*\2c\20Math::Angle*\2c\20Math::EulerOrder\29\20const can change the state due to Math::Rotation3D<Math::Matrix<4\2c\204>>::getEuler\28Math::Angle*\2c\20Math::Angle*\2c\20Math::Angle*\2c\20Math::EulerOrder\29\20const
[asyncify] Common::ConfigManager::setInt\28Common::String\20const&\2c\20int\2c\20Common::String\20const&\29 can change the state due to Common::ConfigManager::set\28Common::String\20const&\2c\20Common::String\20const&\2c\20Common::String\20const&\29
[asyncify] Common::ConfigManager::setBool\28Common::String\20const&\2c\20bool\2c\20Common::String\20const&\29 can change the state due to Common::ConfigManager::set\28Common::String\20const&\2c\20Common::String\20const&\2c\20Common::String\20const&\29
[asyncify] Common::HashMap<Common::String\2c\20Common::FSNode\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>::getVal\28Common::String\20const&\29\20const can change the state due to void\20Common::unknownKeyError<Common::String>\28Common::String\29
[asyncify] Common::HashMap<Common::String\2c\20Common::ConfigManager::Domain\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>::getVal\28Common::String\20const&\29\20const can change the state due to void\20Common::unknownKeyError<Common::String>\28Common::String\29
[asyncify] Common::HashMap<Common::String\2c\20Common::ClickteamInstaller::ClickteamFileDescriptor\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>::getVal\28Common::String\20const&\29\20const can change the state due to void\20Common::unknownKeyError<Common::String>\28Common::String\29
[asyncify] Common::HashMap<Common::String\2c\20Common::InstallShieldV3::FileEntry\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>::getVal\28Common::String\20const&\29\20const can change the state due to void\20Common::unknownKeyError<Common::String>\28Common::String\29
[asyncify] Common::HashMap<Common::String\2c\20Common::MacFinderInfoData\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>::getVal\28Common::String\20const&\29\20const can change the state due to void\20Common::unknownKeyError<Common::String>\28Common::String\29
[asyncify] Common::HashMap<Common::String\2c\20Common::StuffItArchive::FileEntry\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>::getVal\28Common::String\20const&\29\20const can change the state due to void\20Common::unknownKeyError<Common::String>\28Common::String\29
[asyncify] Common::HashMap<Common::String\2c\20Common::Array<Common::ArjFileChunk>\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>::getVal\28Common::String\20const&\29\20const can change the state due to void\20Common::unknownKeyError<Common::String>\28Common::String\29
[asyncify] Common::HashMap<Common::String\2c\20Graphics::Font\20const*\2c\20Common::Hash<Common::String>\2c\20Common::EqualTo<Common::String>>::getVal\28Common::String\20const&\29 can change the state due to void\20Common::unknownKeyError<Common::String>\28Common::String\29
[asyncify] Common::HashMap<Common::String\2c\20Graphics::Font\20const*\2c\20Common::Hash<Common::String>\2c\20Common::EqualTo<Common::String>>::getVal\28Common::String\20const&\29\20const can change the state due to void\20Common::unknownKeyError<Common::String>\28Common::String\29
[asyncify] Common::HashMap<Common::String\2c\20Graphics::Font*\2c\20Common::Hash<Common::String>\2c\20Common::EqualTo<Common::String>>::getVal\28Common::String\20const&\29 can change the state due to void\20Common::unknownKeyError<Common::String>\28Common::String\29
[asyncify] Common::HashMap<Common::String\2c\20Common::String\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>::getVal\28Common::String\20const&\29 can change the state due to void\20Common::unknownKeyError<Common::String>\28Common::String\29
[asyncify] Common::HashMap<Common::String\2c\20Common::String\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>::getVal\28Common::String\20const&\29\20const can change the state due to void\20Common::unknownKeyError<Common::String>\28Common::String\29
[asyncify] Common::HashMap<Common::String\2c\20Common::Array<Common::AchievementDescription>\2c\20Common::Hash<Common::String>\2c\20Common::EqualTo<Common::String>>::getVal\28Common::String\20const&\29\20const can change the state due to void\20Common::unknownKeyError<Common::String>\28Common::String\29
[asyncify] Common::HashMap<Common::String\2c\20long\20long\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>::getVal\28Common::String\20const&\29 can change the state due to void\20Common::unknownKeyError<Common::String>\28Common::String\29
[asyncify] Common::HashMap<Common::String\2c\20Graphics::ManagedSurface*\2c\20Common::Hash<Common::String>\2c\20Common::EqualTo<Common::String>>::getVal\28Common::String\20const&\29\20const can change the state due to void\20Common::unknownKeyError<Common::String>\28Common::String\29
[asyncify] Common::HashMap<Common::String\2c\20Adl::Files_AppleDOS::TOCEntry\2c\20Common::Hash<Common::String>\2c\20Common::EqualTo<Common::String>>::getVal\28Common::String\20const&\29\20const can change the state due to void\20Common::unknownKeyError<Common::String>\28Common::String\29
[asyncify] Graphics::MacFontFamily::getKerningOffset\28unsigned\20int\2c\20int\2c\20unsigned\20int\29\20const can change the state due to void\20Common::unknownKeyError<unsigned\20short>\28unsigned\20short\29
[asyncify] legalstub$void\20Common::unknownKeyError<long\20long>\28long\20long\29 can change the state due to void\20Common::unknownKeyError<long\20long>\28long\20long\29
[asyncify] legalstub$void\20Common::unknownKeyError<unsigned\20long\20long>\28unsigned\20long\20long\29 can change the state due to void\20Common::unknownKeyError<unsigned\20long\20long>\28unsigned\20long\20long\29
[asyncify] Common::MemoryPool::allocPage\28\29 can change the state due to Common::Array<Common::MemoryPool::Page>::insert_aux\28Common::MemoryPool::Page*\2c\20Common::MemoryPool::Page\20const*\2c\20Common::MemoryPool::Page\20const*\29
[asyncify] Common::HashMap<Common::String\2c\20Common::ConfigManager::Domain\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>::clear\28bool\29 can change the state due to Common::MemoryPool::freeUnusedPages\28\29
[asyncify] Common::DebugManager::removeAllDebugChannels\28\29 can change the state due to Common::MemoryPool::freeUnusedPages\28\29
[asyncify] MidiParser_QT::resetTracking\28\29 can change the state due to Common::MemoryPool::freeUnusedPages\28\29
[asyncify] Common::HashMap<Common::HardwareInput\2c\20Common::Array<Common::Action*>\2c\20Common::HardwareInput_Hash\2c\20Common::HardwareInput_EqualTo>::clear\28bool\29 can change the state due to Common::MemoryPool::freeUnusedPages\28\29
[asyncify] Graphics::PaletteLookup::setPalette\28unsigned\20char\20const*\2c\20unsigned\20int\29 can change the state due to Common::MemoryPool::freeUnusedPages\28\29
[asyncify] Common::HashMap<Common::String\2c\20Common::String\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>::clear\28bool\29 can change the state due to Common::MemoryPool::freeUnusedPages\28\29
[asyncify] Common::HashMap<Common::String\2c\20long\20long\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>::clear\28bool\29 can change the state due to Common::MemoryPool::freeUnusedPages\28\29
[asyncify] Common::HashMap<Common::String\2c\20FileProperties\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>::operator=\28Common::HashMap<Common::String\2c\20FileProperties\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>\20const&\29 can change the state due to Common::MemoryPool::freeUnusedPages\28\29
[asyncify] Common::HashMap<Common::String\2c\20Common::String\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>::operator=\28Common::HashMap<Common::String\2c\20Common::String\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>\20const&\29 can change the state due to Common::MemoryPool::freeUnusedPages\28\29
[asyncify] MetaEngine::parseSavegameHeader\28ExtendedSavegameHeader*\2c\20SaveStateDescriptor*\29 can change the state due to Common::String::decode\28Common::CodePage\29\20const
[asyncify] Common::String::String\28Common::U32String\20const&\2c\20Common::CodePage\29 can change the state due to Common::U32String::encode\28Common::CodePage\29\20const
[asyncify] OSystem_SDL::setWindowCaption\28Common::U32String\20const&\29 can change the state due to Common::U32String::encode\28Common::CodePage\29\20const
[asyncify] virtual\20thunk\20to\20OSystem_SDL::setWindowCaption\28Common::U32String\20const&\29 can change the state due to Common::U32String::encode\28Common::CodePage\29\20const
[asyncify] Common::TranslationManager::getSupportedLanguageNames\28\29\20const can change the state due to Common::Array<Common::TLanguage>::insert_aux\28Common::TLanguage*\2c\20Common::TLanguage\20const*\2c\20Common::TLanguage\20const*\29
[asyncify] Common::QuickTimeParser::flattenEditLists\28\29 can change the state due to Common::Array<Common::QuickTimeParser::EditListEntry>::resize\28unsigned\20int\29
[asyncify] Common::NEResources::getIDList\28Common::WinResourceID\20const&\29\20const can change the state due to Common::Array<Common::WinResourceID>::insert_aux\28Common::WinResourceID*\2c\20Common::WinResourceID\20const*\2c\20Common::WinResourceID\20const*\29
[asyncify] Common::PEResources::getTypeList\28\29\20const can change the state due to Common::Array<Common::WinResourceID>::insert_aux\28Common::WinResourceID*\2c\20Common::WinResourceID\20const*\2c\20Common::WinResourceID\20const*\29
[asyncify] Common::PEResources::getIDList\28Common::WinResourceID\20const&\29\20const can change the state due to Common::Array<Common::WinResourceID>::insert_aux\28Common::WinResourceID*\2c\20Common::WinResourceID\20const*\2c\20Common::WinResourceID\20const*\29
[asyncify] Common::PEResources::getLangList\28Common::WinResourceID\20const&\2c\20Common::WinResourceID\20const&\29\20const can change the state due to Common::Array<Common::WinResourceID>::insert_aux\28Common::WinResourceID*\2c\20Common::WinResourceID\20const*\2c\20Common::WinResourceID\20const*\29
[asyncify] Common::HashMap<Common::WinResourceID\2c\20Common::HashMap<Common::WinResourceID\2c\20Common::String\2c\20Common::WinResourceID_Hash\2c\20Common::WinResourceID_EqualTo>\2c\20Common::WinResourceID_Hash\2c\20Common::WinResourceID_EqualTo>::getVal\28Common::WinResourceID\20const&\29\20const can change the state due to void\20Common::unknownKeyError<Common::WinResourceID>\28Common::WinResourceID\29
[asyncify] Common::HashMap<Common::WinResourceID\2c\20Common::String\2c\20Common::WinResourceID_Hash\2c\20Common::WinResourceID_EqualTo>::getVal\28Common::WinResourceID\20const&\29\20const can change the state due to void\20Common::unknownKeyError<Common::WinResourceID>\28Common::WinResourceID\29
[asyncify] Common::HashMap<Common::WinResourceID\2c\20Common::HashMap<Common::WinResourceID\2c\20Common::HashMap<Common::WinResourceID\2c\20Common::PEResources::Resource\2c\20Common::WinResourceID_Hash\2c\20Common::WinResourceID_EqualTo>\2c\20Common::WinResourceID_Hash\2c\20Common::WinResourceID_EqualTo>\2c\20Common::WinResourceID_Hash\2c\20Common::WinResourceID_EqualTo>::getVal\28Common::WinResourceID\20const&\29\20const can change the state due to void\20Common::unknownKeyError<Common::WinResourceID>\28Common::WinResourceID\29
[asyncify] Common::HashMap<Common::WinResourceID\2c\20Common::HashMap<Common::WinResourceID\2c\20Common::PEResources::Resource\2c\20Common::WinResourceID_Hash\2c\20Common::WinResourceID_EqualTo>\2c\20Common::WinResourceID_Hash\2c\20Common::WinResourceID_EqualTo>::getVal\28Common::WinResourceID\20const&\29\20const can change the state due to void\20Common::unknownKeyError<Common::WinResourceID>\28Common::WinResourceID\29
[asyncify] Common::HashMap<Common::WinResourceID\2c\20Common::PEResources::Resource\2c\20Common::WinResourceID_Hash\2c\20Common::WinResourceID_EqualTo>::getVal\28Common::WinResourceID\20const&\29\20const can change the state due to void\20Common::unknownKeyError<Common::WinResourceID>\28Common::WinResourceID\29
[asyncify] Video::HNMDecoder::HNM4VideoTrack::HNM4VideoTrack\28unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20char\20const*\29 can change the state due to Video::HNMDecoder::HNM45VideoTrack::HNM45VideoTrack\28unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20char\20const*\29
[asyncify] Video::PSXStreamDecoder::PSXVideoTrack::decodeBlock\28Common::BitStreamImpl<Common::BitStreamMemoryStream\2c\20unsigned\20long\20long\2c\2016\2c\20true\2c\20true>*\2c\20unsigned\20char*\2c\20int\2c\20unsigned\20short\2c\20unsigned\20short\2c\20Video::PSXStreamDecoder::PSXVideoTrack::PlaneType\29 can change the state due to Video::PSXStreamDecoder::PSXVideoTrack::readDC\28Common::BitStreamImpl<Common::BitStreamMemoryStream\2c\20unsigned\20long\20long\2c\2016\2c\20true\2c\20true>*\2c\20unsigned\20short\2c\20Video::PSXStreamDecoder::PSXVideoTrack::PlaneType\29
[asyncify] Image::PICTDecoder::setupOpcodesCommon\28\29 can change the state due to Common::Array<Image::PICTDecoder::PICTOpcode>::insert_aux\28Image::PICTDecoder::PICTOpcode*\2c\20Image::PICTDecoder::PICTOpcode\20const*\2c\20Image::PICTDecoder::PICTOpcode\20const*\29
[asyncify] Image::PICTDecoder::setupOpcodesNormal\28\29 can change the state due to Common::Array<Image::PICTDecoder::PICTOpcode>::insert_aux\28Image::PICTDecoder::PICTOpcode*\2c\20Image::PICTDecoder::PICTOpcode\20const*\2c\20Image::PICTDecoder::PICTOpcode\20const*\29
[asyncify] Image::PICTDecoder::setupOpcodesQuickTime\28\29 can change the state due to Common::Array<Image::PICTDecoder::PICTOpcode>::insert_aux\28Image::PICTDecoder::PICTOpcode*\2c\20Image::PICTDecoder::PICTOpcode\20const*\2c\20Image::PICTDecoder::PICTOpcode\20const*\29
[asyncify] Graphics::FontManager::assignFontToName\28Common::String\20const&\2c\20Graphics::Font\20const*\29 can change the state due to Common::Array<Graphics::Font\20const*>::insert_aux\28Graphics::Font\20const**\2c\20Graphics::Font\20const*\20const*\2c\20Graphics::Font\20const*\20const*\29
[asyncify] Graphics::createMarginedLinePixelsBitmap\28Graphics::MarginedBitmap<unsigned\20char>\20const&\29 can change the state due to Graphics::MarginedBitmap<bool>::MarginedBitmap\28int\2c\20int\2c\20bool\29
[asyncify] tglUploadBlitImage\28TinyGL::BlitImage*\2c\20Graphics::Surface\20const&\2c\20unsigned\20int\2c\20bool\29 can change the state due to TinyGL::BlitImage::loadData\28Graphics::Surface\20const&\2c\20unsigned\20int\2c\20bool\29
[asyncify] void\20TinyGL::BlitImage::tglBlitGeneric<true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false>\28TinyGL::BlitTransform\20const&\29 can change the state due to void\20TinyGL::BlitImage::tglBlitScale<true\2c\20false\2c\20false\2c\20false>\28int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20float\2c\20float\2c\20float\2c\20float\29
[asyncify] void\20TinyGL::BlitImage::tglBlitGeneric<true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true>\28TinyGL::BlitTransform\20const&\29 can change the state due to void\20TinyGL::BlitImage::tglBlitScale<true\2c\20false\2c\20false\2c\20false>\28int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20float\2c\20float\2c\20float\2c\20float\29
[asyncify] void\20TinyGL::BlitImage::tglBlitGeneric<true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false>\28TinyGL::BlitTransform\20const&\29 can change the state due to void\20TinyGL::BlitImage::tglBlitScale<true\2c\20false\2c\20true\2c\20false>\28int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20float\2c\20float\2c\20float\2c\20float\29
[asyncify] void\20TinyGL::BlitImage::tglBlitGeneric<true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true>\28TinyGL::BlitTransform\20const&\29 can change the state due to void\20TinyGL::BlitImage::tglBlitScale<true\2c\20false\2c\20true\2c\20false>\28int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20float\2c\20float\2c\20float\2c\20float\29
[asyncify] void\20TinyGL::BlitImage::tglBlitGeneric<true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false>\28TinyGL::BlitTransform\20const&\29 can change the state due to void\20TinyGL::BlitImage::tglBlitScale<true\2c\20false\2c\20false\2c\20true>\28int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20float\2c\20float\2c\20float\2c\20float\29
[asyncify] void\20TinyGL::BlitImage::tglBlitGeneric<true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true>\28TinyGL::BlitTransform\20const&\29 can change the state due to void\20TinyGL::BlitImage::tglBlitScale<true\2c\20false\2c\20false\2c\20true>\28int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20float\2c\20float\2c\20float\2c\20float\29
[asyncify] Common::Array<TinyGL::BlitImage::Line>::push_back\28TinyGL::BlitImage::Line\20const&\29 can change the state due to Common::Array<TinyGL::BlitImage::Line>::insert_aux\28TinyGL::BlitImage::Line*\2c\20TinyGL::BlitImage::Line\20const*\2c\20TinyGL::BlitImage::Line\20const*\29
[asyncify] void\20TinyGL::Internal::tglBlit<true\2c\20true\2c\20true\2c\20true>\28TinyGL::BlitImage*\2c\20TinyGL::BlitTransform\20const&\29 can change the state due to void\20TinyGL::BlitImage::tglBlitSimple<true\2c\20true\2c\20true\2c\20true>\28int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20float\2c\20float\2c\20float\2c\20float\29
[asyncify] void\20TinyGL::Internal::tglBlit<false\2c\20true\2c\20true\2c\20true>\28TinyGL::BlitImage*\2c\20TinyGL::BlitTransform\20const&\29 can change the state due to void\20TinyGL::BlitImage::tglBlitSimple<true\2c\20true\2c\20true\2c\20true>\28int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20float\2c\20float\2c\20float\2c\20float\29
[asyncify] void\20TinyGL::BlitImage::tglBlitGeneric<false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true>\28TinyGL::BlitTransform\20const&\29 can change the state due to void\20TinyGL::BlitImage::tglBlitRotoScale<false\2c\20true\2c\20true\2c\20true>\28int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20float\2c\20float\2c\20float\2c\20float\29
[asyncify] void\20TinyGL::BlitImage::tglBlitGeneric<false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false>\28TinyGL::BlitTransform\20const&\29 can change the state due to void\20TinyGL::BlitImage::tglBlitRotoScale<false\2c\20true\2c\20true\2c\20true>\28int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20float\2c\20float\2c\20float\2c\20float\29
[asyncify] void\20TinyGL::Internal::tglBlit<true\2c\20true\2c\20true\2c\20false>\28TinyGL::BlitImage*\2c\20TinyGL::BlitTransform\20const&\29 can change the state due to void\20TinyGL::BlitImage::tglBlitSimple<false\2c\20true\2c\20true\2c\20true>\28int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20float\2c\20float\2c\20float\2c\20float\29
[asyncify] void\20TinyGL::Internal::tglBlit<false\2c\20true\2c\20true\2c\20false>\28TinyGL::BlitImage*\2c\20TinyGL::BlitTransform\20const&\29 can change the state due to void\20TinyGL::BlitImage::tglBlitSimple<false\2c\20true\2c\20true\2c\20true>\28int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20float\2c\20float\2c\20float\2c\20float\29
[asyncify] void\20TinyGL::BlitImage::tglBlitGeneric<false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true>\28TinyGL::BlitTransform\20const&\29 can change the state due to void\20TinyGL::BlitImage::tglBlitScale<false\2c\20true\2c\20false\2c\20false>\28int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20float\2c\20float\2c\20float\2c\20float\29
[asyncify] void\20TinyGL::BlitImage::tglBlitGeneric<false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false>\28TinyGL::BlitTransform\20const&\29 can change the state due to void\20TinyGL::BlitImage::tglBlitScale<false\2c\20true\2c\20false\2c\20false>\28int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20float\2c\20float\2c\20float\2c\20float\29
[asyncify] void\20TinyGL::BlitImage::tglBlitGeneric<true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true>\28TinyGL::BlitTransform\20const&\29 can change the state due to void\20TinyGL::BlitImage::tglBlitScale<true\2c\20true\2c\20true\2c\20true>\28int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20float\2c\20float\2c\20float\2c\20float\29
[asyncify] void\20TinyGL::BlitImage::tglBlitGeneric<true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false>\28TinyGL::BlitTransform\20const&\29 can change the state due to void\20TinyGL::BlitImage::tglBlitScale<true\2c\20true\2c\20true\2c\20true>\28int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20float\2c\20float\2c\20float\2c\20float\29
[asyncify] void\20TinyGL::BlitImage::tglBlitGeneric<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true>\28TinyGL::BlitTransform\20const&\29 can change the state due to void\20TinyGL::BlitImage::tglBlitScale<true\2c\20true\2c\20false\2c\20true>\28int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20float\2c\20float\2c\20float\2c\20float\29
[asyncify] void\20TinyGL::BlitImage::tglBlitGeneric<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false>\28TinyGL::BlitTransform\20const&\29 can change the state due to void\20TinyGL::BlitImage::tglBlitScale<true\2c\20true\2c\20false\2c\20true>\28int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20float\2c\20float\2c\20float\2c\20float\29
[asyncify] void\20TinyGL::BlitImage::tglBlitGeneric<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true>\28TinyGL::BlitTransform\20const&\29 can change the state due to void\20TinyGL::BlitImage::tglBlitScale<true\2c\20true\2c\20true\2c\20false>\28int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20float\2c\20float\2c\20float\2c\20float\29
[asyncify] void\20TinyGL::BlitImage::tglBlitGeneric<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false>\28TinyGL::BlitTransform\20const&\29 can change the state due to void\20TinyGL::BlitImage::tglBlitScale<true\2c\20true\2c\20true\2c\20false>\28int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20float\2c\20float\2c\20float\2c\20float\29
[asyncify] void\20TinyGL::BlitImage::tglBlitGeneric<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true>\28TinyGL::BlitTransform\20const&\29 can change the state due to void\20TinyGL::BlitImage::tglBlitScale<true\2c\20true\2c\20false\2c\20false>\28int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20float\2c\20float\2c\20float\2c\20float\29
[asyncify] void\20TinyGL::BlitImage::tglBlitGeneric<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false>\28TinyGL::BlitTransform\20const&\29 can change the state due to void\20TinyGL::BlitImage::tglBlitScale<true\2c\20true\2c\20false\2c\20false>\28int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20float\2c\20float\2c\20float\2c\20float\29
[asyncify] void\20TinyGL::BlitImage::tglBlitGeneric<false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true>\28TinyGL::BlitTransform\20const&\29 can change the state due to void\20TinyGL::BlitImage::tglBlitScale<false\2c\20true\2c\20false\2c\20true>\28int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20float\2c\20float\2c\20float\2c\20float\29
[asyncify] void\20TinyGL::BlitImage::tglBlitGeneric<false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false>\28TinyGL::BlitTransform\20const&\29 can change the state due to void\20TinyGL::BlitImage::tglBlitScale<false\2c\20true\2c\20false\2c\20true>\28int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20float\2c\20float\2c\20float\2c\20float\29
[asyncify] void\20TinyGL::BlitImage::tglBlitGeneric<false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true>\28TinyGL::BlitTransform\20const&\29 can change the state due to void\20TinyGL::BlitImage::tglBlitScale<false\2c\20true\2c\20true\2c\20false>\28int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20float\2c\20float\2c\20float\2c\20float\29
[asyncify] void\20TinyGL::BlitImage::tglBlitGeneric<false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false>\28TinyGL::BlitTransform\20const&\29 can change the state due to void\20TinyGL::BlitImage::tglBlitScale<false\2c\20true\2c\20true\2c\20false>\28int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20float\2c\20float\2c\20float\2c\20float\29
[asyncify] void\20TinyGL::Internal::tglBlit<true\2c\20false\2c\20true\2c\20true>\28TinyGL::BlitImage*\2c\20TinyGL::BlitTransform\20const&\29 can change the state due to void\20TinyGL::BlitImage::tglBlitSimple<true\2c\20false\2c\20true\2c\20true>\28int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20float\2c\20float\2c\20float\2c\20float\29
[asyncify] void\20TinyGL::Internal::tglBlit<false\2c\20false\2c\20true\2c\20true>\28TinyGL::BlitImage*\2c\20TinyGL::BlitTransform\20const&\29 can change the state due to void\20TinyGL::BlitImage::tglBlitSimple<true\2c\20false\2c\20true\2c\20true>\28int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20float\2c\20float\2c\20float\2c\20float\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::Internal::tglBlit<true\2c\20false\2c\20true\2c\20false>\28TinyGL::BlitImage*\2c\20TinyGL::BlitTransform\20const&\29 can change the state due to void\20TinyGL::BlitImage::tglBlitSimple<false\2c\20false\2c\20true\2c\20true>\28int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20float\2c\20float\2c\20float\2c\20float\29
[asyncify] void\20TinyGL::Internal::tglBlit<false\2c\20false\2c\20true\2c\20false>\28TinyGL::BlitImage*\2c\20TinyGL::BlitTransform\20const&\29 can change the state due to void\20TinyGL::BlitImage::tglBlitSimple<false\2c\20false\2c\20true\2c\20true>\28int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20float\2c\20float\2c\20float\2c\20float\29
[asyncify] void\20TinyGL::BlitImage::tglBlitGeneric<true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true>\28TinyGL::BlitTransform\20const&\29 can change the state due to void\20TinyGL::BlitImage::tglBlitScale<true\2c\20false\2c\20true\2c\20true>\28int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20float\2c\20float\2c\20float\2c\20float\29
[asyncify] void\20TinyGL::BlitImage::tglBlitGeneric<true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false>\28TinyGL::BlitTransform\20const&\29 can change the state due to void\20TinyGL::BlitImage::tglBlitScale<true\2c\20false\2c\20true\2c\20true>\28int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20float\2c\20float\2c\20float\2c\20float\29
[asyncify] void\20TinyGL::BlitImage::tglBlitGeneric<false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true>\28TinyGL::BlitTransform\20const&\29 can change the state due to void\20TinyGL::BlitImage::tglBlitScale<false\2c\20false\2c\20true\2c\20true>\28int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20float\2c\20float\2c\20float\2c\20float\29
[asyncify] void\20TinyGL::BlitImage::tglBlitGeneric<false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false>\28TinyGL::BlitTransform\20const&\29 can change the state due to void\20TinyGL::BlitImage::tglBlitScale<false\2c\20false\2c\20true\2c\20true>\28int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20float\2c\20float\2c\20float\2c\20float\29
[asyncify] void\20TinyGL::BlitImage::tglBlitGeneric<false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true>\28TinyGL::BlitTransform\20const&\29 can change the state due to void\20TinyGL::BlitImage::tglBlitScale<false\2c\20false\2c\20false\2c\20true>\28int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20float\2c\20float\2c\20float\2c\20float\29
[asyncify] void\20TinyGL::BlitImage::tglBlitGeneric<false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false>\28TinyGL::BlitTransform\20const&\29 can change the state due to void\20TinyGL::BlitImage::tglBlitScale<false\2c\20false\2c\20false\2c\20true>\28int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20float\2c\20float\2c\20float\2c\20float\29
[asyncify] void\20TinyGL::BlitImage::tglBlitGeneric<false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true>\28TinyGL::BlitTransform\20const&\29 can change the state due to void\20TinyGL::BlitImage::tglBlitScale<false\2c\20false\2c\20true\2c\20false>\28int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20float\2c\20float\2c\20float\2c\20float\29
[asyncify] void\20TinyGL::BlitImage::tglBlitGeneric<false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false>\28TinyGL::BlitTransform\20const&\29 can change the state due to void\20TinyGL::BlitImage::tglBlitScale<false\2c\20false\2c\20true\2c\20false>\28int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20float\2c\20float\2c\20float\2c\20float\29
[asyncify] void\20TinyGL::BlitImage::tglBlitGeneric<false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true>\28TinyGL::BlitTransform\20const&\29 can change the state due to void\20TinyGL::BlitImage::tglBlitScale<false\2c\20false\2c\20false\2c\20false>\28int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20float\2c\20float\2c\20float\2c\20float\29
[asyncify] void\20TinyGL::BlitImage::tglBlitGeneric<false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false>\28TinyGL::BlitTransform\20const&\29 can change the state due to void\20TinyGL::BlitImage::tglBlitScale<false\2c\20false\2c\20false\2c\20false>\28int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20float\2c\20float\2c\20float\2c\20float\29
[asyncify] OPL::NUKED::OPL::OPL\28OPL::Config::OplType\29 can change the state due to OPL::EmulatedOPL::EmulatedOPL\28\29
[asyncify] OPL::DOSBox::OPL::OPL\28OPL::Config::OplType\29 can change the state due to OPL::EmulatedOPL::EmulatedOPL\28\29
[asyncify] MidiParser_QT::parseNextEvent\28EventInfo&\29 can change the state due to MidiParser_QT::readNextEvent\28\29
[asyncify] MidiParser_QT::getChannel\28unsigned\20int\29 can change the state due to MidiParser_QT::findFreeChannel\28unsigned\20int\29
[asyncify] Audio::makeRateConverter\28unsigned\20int\2c\20unsigned\20int\2c\20bool\2c\20bool\2c\20bool\29 can change the state due to Audio::RateConverter*\20Audio::makeRateConverter<true\2c\20true\2c\20true>\28unsigned\20int\2c\20unsigned\20int\29
[asyncify] Audio::QDM2Stream::init_quantized_coeffs_elem0\28signed\20char*\2c\20Common::BitStreamImpl<Common::BitStreamMemoryStream\2c\20unsigned\20long\20long\2c\2032\2c\20true\2c\20false>*\2c\20int\29 can change the state due to Audio::qdm2_get_vlc\28Common::BitStreamImpl<Common::BitStreamMemoryStream\2c\20unsigned\20long\20long\2c\2032\2c\20true\2c\20false>*\2c\20Audio::VLC*\2c\20int\2c\20int\29
[asyncify] Audio::QDM2Stream::init_tone_level_dequantization\28Common::BitStreamImpl<Common::BitStreamMemoryStream\2c\20unsigned\20long\20long\2c\2032\2c\20true\2c\20false>*\2c\20int\29 can change the state due to Audio::qdm2_get_vlc\28Common::BitStreamImpl<Common::BitStreamMemoryStream\2c\20unsigned\20long\20long\2c\2032\2c\20true\2c\20false>*\2c\20Audio::VLC*\2c\20int\2c\20int\29
[asyncify] Audio::QDM2Stream::process_subpacket_9\28Audio::QDM2SubPNode*\29 can change the state due to Audio::qdm2_get_vlc\28Common::BitStreamImpl<Common::BitStreamMemoryStream\2c\20unsigned\20long\20long\2c\2032\2c\20true\2c\20false>*\2c\20Audio::VLC*\2c\20int\2c\20int\29
[asyncify] Audio::QDM2Stream::qdm2_fft_decode_tones\28int\2c\20Common::BitStreamImpl<Common::BitStreamMemoryStream\2c\20unsigned\20long\20long\2c\2032\2c\20true\2c\20false>*\2c\20int\29 can change the state due to Audio::qdm2_get_vlc\28Common::BitStreamImpl<Common::BitStreamMemoryStream\2c\20unsigned\20long\20long\2c\2032\2c\20true\2c\20false>*\2c\20Audio::VLC*\2c\20int\2c\20int\29
[asyncify] Audio::Rjp1::playChannel\28Audio::Rjp1Channel*\29 can change the state due to Audio::Rjp1::modulateVolumeEnvelope\28Audio::Rjp1Channel*\29
[asyncify] Audio::Rjp1::modulateVolume\28Audio::Rjp1Channel*\29 can change the state due to Audio::Rjp1::modulateVolumeEnvelope\28Audio::Rjp1Channel*\29
[asyncify] str_dump\28lua_State*\29 can change the state due to lua_dump\28lua_State*\2c\20int\20\28*\29\28lua_State*\2c\20void\20const*\2c\20unsigned\20long\2c\20void*\29\2c\20void*\29
[asyncify] Common::HashMap<Common::U32String\2c\20int\2c\20Common::Hash<Common::U32String>\2c\20Common::EqualTo<Common::U32String>>::getVal\28Common::U32String\20const&\29 can change the state due to void\20Common::unknownKeyError<Common::U32String>\28Common::U32String\29
[asyncify] GUI::GroupedListWidget::setAttributeValues\28Common::Array<Common::U32String>\20const&\29 can change the state due to Common::Array<Common::U32String>::operator=\28Common::Array<Common::U32String>\20const&\29
[asyncify] GUI::SaveLoadChooserSimple::getResultString\28\29\20const can change the state due to GUI::ListWidget::stripGUIformatting\28Common::U32String\20const&\29
[asyncify] GUI::PopUpWidget::appendEntry\28Common::U32String\20const&\2c\20unsigned\20int\29 can change the state due to Common::Array<GUI::PopUpWidget::Entry>::insert_aux\28GUI::PopUpWidget::Entry*\2c\20GUI::PopUpWidget::Entry\20const*\2c\20GUI::PopUpWidget::Entry\20const*\29
[asyncify] GUI::PopUpWidget::appendEntry\28Common::String\20const&\2c\20unsigned\20int\29 can change the state due to Common::Array<GUI::PopUpWidget::Entry>::insert_aux\28GUI::PopUpWidget::Entry*\2c\20GUI::PopUpWidget::Entry\20const*\2c\20GUI::PopUpWidget::Entry\20const*\29
[asyncify] Common::CompositeHardwareInputSet::addHardwareInputSet\28Common::HardwareInputSet*\29 can change the state due to Common::Array<Common::HardwareInputSet*>::insert_aux\28Common::HardwareInputSet**\2c\20Common::HardwareInputSet*\20const*\2c\20Common::HardwareInputSet*\20const*\29
[asyncify] Common::Keymap::registerMapping\28Common::Action*\2c\20Common::HardwareInput\20const&\29 can change the state due to Common::Array<Common::Action*>::insert_aux\28Common::Action**\2c\20Common::Action*\20const*\2c\20Common::Action*\20const*\29
[asyncify] Common::Keymap::getMappedActions\28Common::Event\20const&\2c\20Common::Array<Common::Action*>&\29\20const can change the state due to Common::Array<Common::Action*>::insert_aux\28Common::Action**\2c\20Common::Action*\20const*\2c\20Common::Action*\20const*\29
[asyncify] Common::Array<Common::Action*>::push_back\28Common::Array<Common::Action*>\20const&\29 can change the state due to Common::Array<Common::Action*>::insert_aux\28Common::Action**\2c\20Common::Action*\20const*\2c\20Common::Action*\20const*\29
[asyncify] Common::Keymapper::getMappedActions\28Common::Event\20const&\2c\20Common::Array<Common::Action*>&\2c\20Common::Keymap::KeymapType\29\20const can change the state due to Common::Array<Common::Action*>::insert_aux\28Common::Action**\2c\20Common::Action*\20const*\2c\20Common::Action*\20const*\29
[asyncify] Common::Keymap::getActionMapping\28Common::Action*\29\20const can change the state due to Common::Array<Common::HardwareInput>::insert_aux\28Common::HardwareInput*\2c\20Common::HardwareInput\20const*\2c\20Common::HardwareInput\20const*\29
[asyncify] Common::RemapWidget::loadKeymap\28\29 can change the state due to Common::Array<Common::RemapWidget::ActionRow>::insert_aux\28Common::RemapWidget::ActionRow*\2c\20Common::RemapWidget::ActionRow\20const*\2c\20Common::RemapWidget::ActionRow\20const*\29
[asyncify] Common::ConfigManager::copyFrom\28Common::ConfigManager&\29 can change the state due to Common::Array<Common::String>::operator=\28Common::Array<Common::String>\20const&\29
[asyncify] DefaultSaveFileManager::updateSavefilesList\28Common::Array<Common::String>&\29 can change the state due to Common::Array<Common::String>::operator=\28Common::Array<Common::String>\20const&\29
[asyncify] Graphics::Surface::frameRect\28Common::Rect\20const&\2c\20unsigned\20int\29 can change the state due to Graphics::Surface::hLine\28int\2c\20int\2c\20int\2c\20unsigned\20int\29
[asyncify] OpenGL::TiledSurface::fill\28unsigned\20int\29 can change the state due to Graphics::Surface::fillRect\28Common::Rect\2c\20unsigned\20int\29
[asyncify] TinyGL::copyToBuffer\28Graphics::PixelFormat\20const&\29 can change the state due to Graphics::Surface::convertTo\28Graphics::PixelFormat\20const&\2c\20unsigned\20char\20const*\2c\20int\2c\20unsigned\20char\20const*\2c\20int\2c\20Graphics::DitherMethod\29\20const
[asyncify] Graphics::FloodFill::fill\28\29 can change the state due to Graphics::FloodFill::addSeed\28int\2c\20int\29
[asyncify] DefaultAudioCDManager::fillPotentialTrackNames\28Common::Array<Common::String>&\2c\20int\29\20const can change the state due to Common::Array<Common::String>::reserve\28unsigned\20int\29
[asyncify] PluginManager::addPluginProvider\28PluginProvider*\29 can change the state due to Common::Array<PluginProvider*>::insert_aux\28PluginProvider**\2c\20PluginProvider*\20const*\2c\20PluginProvider*\20const*\29
[asyncify] GUI::PopUpDialog::appendEntry\28Common::U32String\20const&\29 can change the state due to Common::Array<Common::U32String>::insert_aux\28Common::U32String*\2c\20Common::U32String\20const*\2c\20Common::U32String\20const*\29
[asyncify] GUI::Debugger::registerVarImpl\28Common::String\20const&\2c\20void*\2c\20GUI::Debugger::VarType\2c\20int\29 can change the state due to Common::Array<GUI::Debugger::Var>::insert_aux\28GUI::Debugger::Var*\2c\20GUI::Debugger::Var\20const*\2c\20GUI::Debugger::Var\20const*\29
[asyncify] GUI::Debugger::clearVars\28\29 can change the state due to Common::Array<GUI::Debugger::Var>::reserve\28unsigned\20int\29
[asyncify] Common::Array<GUI::GridItemInfo>::push_back\28GUI::GridItemInfo\20const&\29 can change the state due to Common::Array<GUI::GridItemInfo>::insert_aux\28GUI::GridItemInfo*\2c\20GUI::GridItemInfo\20const*\2c\20GUI::GridItemInfo\20const*\29
[asyncify] Common::Array<GUI::LauncherEntry>::push_back\28GUI::LauncherEntry\20const&\29 can change the state due to Common::Array<GUI::LauncherEntry>::insert_aux\28GUI::LauncherEntry*\2c\20GUI::LauncherEntry\20const*\2c\20GUI::LauncherEntry\20const*\29
[asyncify] Graphics::MacText::deletePreviousCharInternal\28int*\2c\20int*\29 can change the state due to Common::Array<Graphics::MacFontRun>::insert_aux\28Graphics::MacFontRun*\2c\20Graphics::MacFontRun\20const*\2c\20Graphics::MacFontRun\20const*\29
[asyncify] Common::Array<Graphics::MacTextLine>::resize\28unsigned\20int\29 can change the state due to Common::Array<Graphics::MacTextLine>::reserve\28unsigned\20int\29
[asyncify] Graphics::MacWindowManager::replaceCursorType\28Graphics::MacGUIConstants::MacCursorType\29 can change the state due to Common::Array<Graphics::MacGUIConstants::MacCursorType>::insert_aux\28Graphics::MacGUIConstants::MacCursorType*\2c\20Graphics::MacGUIConstants::MacCursorType\20const*\2c\20Graphics::MacGUIConstants::MacCursorType\20const*\29
[asyncify] Graphics::MacWindowManager::addZoomBox\28Graphics::ZoomBox*\29 can change the state due to Common::Array<Graphics::ZoomBox*>::insert_aux\28Graphics::ZoomBox**\2c\20Graphics::ZoomBox*\20const*\2c\20Graphics::ZoomBox*\20const*\29
[asyncify] Graphics::VectorRendererSpec<unsigned\20short>::precalcGradient\28int\29 can change the state due to Common::Array<unsigned\20short>::insert_aux\28unsigned\20short*\2c\20unsigned\20short\20const*\2c\20unsigned\20short\20const*\29
[asyncify] TinyGL::glopFog\28TinyGL::GLContext*\2c\20TinyGL::GLParam*\29 can change the state due to TinyGL::GLContext::glopFog\28TinyGL::GLParam*\29
[asyncify] tglGetIntegerv\28int\2c\20int*\29 can change the state due to TinyGL::GLContext::gl_GetIntegerv\28int\2c\20int*\29
[asyncify] TinyGL::BlitImage::tglBlitZBuffer\28int\2c\20int\29 can change the state due to Graphics::PixelBuffer::copyBuffer\28int\2c\20int\2c\20int\2c\20Graphics::PixelBuffer\20const&\29
[asyncify] TinyGL::BlitImage::Line::operator=\28TinyGL::BlitImage::Line\20const&\29 can change the state due to Graphics::PixelBuffer::copyBuffer\28int\2c\20int\2c\20int\2c\20Graphics::PixelBuffer\20const&\29
[asyncify] TinyGL::NearestTexelBuffer::NearestTexelBuffer\28Graphics::PixelBuffer\20const&\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int\29 can change the state due to Graphics::PixelBuffer::copyBuffer\28int\2c\20int\2c\20int\2c\20Graphics::PixelBuffer\20const&\29
[asyncify] TinyGL::GLContext::gl_shade_vertex\28TinyGL::GLVertex*\29 can change the state due to TinyGL::GLContext::specbuf_get_buffer\28int\2c\20float\29
[asyncify] TinyGL::glopTexEnv\28TinyGL::GLContext*\2c\20TinyGL::GLParam*\29 can change the state due to TinyGL::GLContext::glopTexEnv\28TinyGL::GLParam*\29
[asyncify] TinyGL::glopTexParameter\28TinyGL::GLContext*\2c\20TinyGL::GLParam*\29 can change the state due to TinyGL::GLContext::glopTexParameter\28TinyGL::GLParam*\29
[asyncify] TinyGL::glopPixelStore\28TinyGL::GLContext*\2c\20TinyGL::GLParam*\29 can change the state due to TinyGL::GLContext::glopPixelStore\28TinyGL::GLParam*\29
[asyncify] TinyGL::GLContext::glopArrayElement\28TinyGL::GLParam*\29 can change the state due to TinyGL::GLContext::glopVertex\28TinyGL::GLParam*\29
[asyncify] TinyGL::glopVertex\28TinyGL::GLContext*\2c\20TinyGL::GLParam*\29 can change the state due to TinyGL::GLContext::glopVertex\28TinyGL::GLParam*\29
[asyncify] TinyGL::ClearBufferDrawCall::execute\28bool\29\20const can change the state due to TinyGL::FrameBuffer::clear\28int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20bool\2c\20int\29
[asyncify] TinyGL::GLContext::gl_draw_point\28TinyGL::GLVertex*\29 can change the state due to TinyGL::FrameBuffer::plot\28TinyGL::ZBufferPoint*\29
[asyncify] TinyGL::GLContext::gl_draw_triangle_point\28TinyGL::GLContext*\2c\20TinyGL::GLVertex*\2c\20TinyGL::GLVertex*\2c\20TinyGL::GLVertex*\29 can change the state due to TinyGL::FrameBuffer::plot\28TinyGL::ZBufferPoint*\29
[asyncify] TinyGL::FrameBuffer::fillLineFlatZ\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::drawLine<false\2c\20true\2c\20true\2c\20true>\28TinyGL::ZBufferPoint\20const*\2c\20TinyGL::ZBufferPoint\20const*\29
[asyncify] TinyGL::FrameBuffer::fillLineInterp\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::drawLine<false\2c\20true\2c\20true\2c\20true>\28TinyGL::ZBufferPoint\20const*\2c\20TinyGL::ZBufferPoint\20const*\29
[asyncify] TinyGL::FrameBuffer::fillLineZ\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::drawLine<false\2c\20true\2c\20true\2c\20true>\28TinyGL::ZBufferPoint\20const*\2c\20TinyGL::ZBufferPoint\20const*\29
[asyncify] TinyGL::FrameBuffer::fillLine\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::drawLine<false\2c\20true\2c\20true\2c\20true>\28TinyGL::ZBufferPoint\20const*\2c\20TinyGL::ZBufferPoint\20const*\29
[asyncify] TinyGL::FrameBuffer::fillLineInterpZ\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::drawLine<true\2c\20true\2c\20true\2c\20true>\28TinyGL::ZBufferPoint\20const*\2c\20TinyGL::ZBufferPoint\20const*\29
[asyncify] TinyGL::FrameBuffer::fillLineFlat\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::drawLine<false\2c\20false\2c\20true\2c\20true>\28TinyGL::ZBufferPoint\20const*\2c\20TinyGL::ZBufferPoint\20const*\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::putPixelNoTexture<false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false>\28int\2c\20unsigned\20int*\2c\20unsigned\20char*\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20unsigned\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20int&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20int\2c\20int\2c\20int\2c\20int&\29
[asyncify] Common::Array<ADDetectedGame>::push_back\28ADDetectedGame\20const&\29 can change the state due to Common::Array<ADDetectedGame>::insert_aux\28ADDetectedGame*\2c\20ADDetectedGame\20const*\2c\20ADDetectedGame\20const*\29
[asyncify] DetectionResults::listRecognizedGames\28\29\20const can change the state due to Common::Array<DetectedGame>::insert_aux\28DetectedGame*\2c\20DetectedGame\20const*\2c\20DetectedGame\20const*\29
[asyncify] generateUnknownGameReport\28DetectedGame\20const&\2c\20bool\2c\20bool\2c\20unsigned\20int\29 can change the state due to Common::Array<DetectedGame>::insert_aux\28DetectedGame*\2c\20DetectedGame\20const*\2c\20DetectedGame\20const*\29
[asyncify] GlkMetaEngineDetection::detectClashes\28\29\20const can change the state due to Glk::AGT::AGTMetaEngine::detectClashes\28Common::HashMap<Common::String\2c\20Common::String\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>&\29
[asyncify] AdvancedMetaEngineDetection::getSupportedGames\28\29\20const can change the state due to Common::Array<PlainGameDescriptor>::insert_aux\28PlainGameDescriptor*\2c\20PlainGameDescriptor\20const*\2c\20PlainGameDescriptor\20const*\29
[asyncify] Glk::Adrift::AdriftMetaEngine::getSupportedGames\28PlainGameList&\29 can change the state due to Common::Array<PlainGameDescriptor>::insert_aux\28PlainGameDescriptor*\2c\20PlainGameDescriptor\20const*\2c\20PlainGameDescriptor\20const*\29
[asyncify] Glk::AdvSys::AdvSysMetaEngine::getSupportedGames\28PlainGameList&\29 can change the state due to Common::Array<PlainGameDescriptor>::insert_aux\28PlainGameDescriptor*\2c\20PlainGameDescriptor\20const*\2c\20PlainGameDescriptor\20const*\29
[asyncify] Glk::AGT::AGTMetaEngine::getSupportedGames\28PlainGameList&\29 can change the state due to Common::Array<PlainGameDescriptor>::insert_aux\28PlainGameDescriptor*\2c\20PlainGameDescriptor\20const*\2c\20PlainGameDescriptor\20const*\29
[asyncify] Glk::Alan2::Alan2MetaEngine::getSupportedGames\28PlainGameList&\29 can change the state due to Common::Array<PlainGameDescriptor>::insert_aux\28PlainGameDescriptor*\2c\20PlainGameDescriptor\20const*\2c\20PlainGameDescriptor\20const*\29
[asyncify] Glk::Alan3::Alan3MetaEngine::getSupportedGames\28PlainGameList&\29 can change the state due to Common::Array<PlainGameDescriptor>::insert_aux\28PlainGameDescriptor*\2c\20PlainGameDescriptor\20const*\2c\20PlainGameDescriptor\20const*\29
[asyncify] Glk::Archetype::ArchetypeMetaEngine::getSupportedGames\28PlainGameList&\29 can change the state due to Common::Array<PlainGameDescriptor>::insert_aux\28PlainGameDescriptor*\2c\20PlainGameDescriptor\20const*\2c\20PlainGameDescriptor\20const*\29
[asyncify] Glk::Comprehend::ComprehendMetaEngine::getSupportedGames\28PlainGameList&\29 can change the state due to Common::Array<PlainGameDescriptor>::insert_aux\28PlainGameDescriptor*\2c\20PlainGameDescriptor\20const*\2c\20PlainGameDescriptor\20const*\29
[asyncify] Glk::Glulx::GlulxMetaEngine::getSupportedGames\28PlainGameList&\29 can change the state due to Common::Array<PlainGameDescriptor>::insert_aux\28PlainGameDescriptor*\2c\20PlainGameDescriptor\20const*\2c\20PlainGameDescriptor\20const*\29
[asyncify] Glk::Hugo::HugoMetaEngine::getSupportedGames\28PlainGameList&\29 can change the state due to Common::Array<PlainGameDescriptor>::insert_aux\28PlainGameDescriptor*\2c\20PlainGameDescriptor\20const*\2c\20PlainGameDescriptor\20const*\29
[asyncify] Glk::JACL::JACLMetaEngine::getSupportedGames\28PlainGameList&\29 can change the state due to Common::Array<PlainGameDescriptor>::insert_aux\28PlainGameDescriptor*\2c\20PlainGameDescriptor\20const*\2c\20PlainGameDescriptor\20const*\29
[asyncify] Glk::Level9::Level9MetaEngine::getSupportedGames\28PlainGameList&\29 can change the state due to Common::Array<PlainGameDescriptor>::insert_aux\28PlainGameDescriptor*\2c\20PlainGameDescriptor\20const*\2c\20PlainGameDescriptor\20const*\29
[asyncify] Glk::Magnetic::MagneticMetaEngine::getSupportedGames\28PlainGameList&\29 can change the state due to Common::Array<PlainGameDescriptor>::insert_aux\28PlainGameDescriptor*\2c\20PlainGameDescriptor\20const*\2c\20PlainGameDescriptor\20const*\29
[asyncify] Glk::Quest::QuestMetaEngine::getSupportedGames\28PlainGameList&\29 can change the state due to Common::Array<PlainGameDescriptor>::insert_aux\28PlainGameDescriptor*\2c\20PlainGameDescriptor\20const*\2c\20PlainGameDescriptor\20const*\29
[asyncify] Glk::Scott::ScottMetaEngine::getSupportedGames\28PlainGameList&\29 can change the state due to Common::Array<PlainGameDescriptor>::insert_aux\28PlainGameDescriptor*\2c\20PlainGameDescriptor\20const*\2c\20PlainGameDescriptor\20const*\29
[asyncify] Glk::TADS::TADSMetaEngine::getSupportedGames\28PlainGameList&\29 can change the state due to Common::Array<PlainGameDescriptor>::insert_aux\28PlainGameDescriptor*\2c\20PlainGameDescriptor\20const*\2c\20PlainGameDescriptor\20const*\29
[asyncify] Glk::ZCode::ZCodeMetaEngine::getSupportedGames\28PlainGameList&\29 can change the state due to Common::Array<PlainGameDescriptor>::insert_aux\28PlainGameDescriptor*\2c\20PlainGameDescriptor\20const*\2c\20PlainGameDescriptor\20const*\29
[asyncify] ScummMetaEngineDetection::getSupportedGames\28\29\20const can change the state due to Common::Array<PlainGameDescriptor>::insert_aux\28PlainGameDescriptor*\2c\20PlainGameDescriptor\20const*\2c\20PlainGameDescriptor\20const*\29
[asyncify] SkyMetaEngineDetection::getSupportedGames\28\29\20const can change the state due to Common::Array<PlainGameDescriptor>::insert_aux\28PlainGameDescriptor*\2c\20PlainGameDescriptor\20const*\2c\20PlainGameDescriptor\20const*\29
[asyncify] Glk::Level9::Scanner::scanner\28unsigned\20char*\2c\20unsigned\20int\2c\20unsigned\20char**\2c\20unsigned\20char**\29 can change the state due to Glk::Level9::Scanner::scan\28unsigned\20char*\2c\20unsigned\20int\29
[asyncify] Common::ConfigManager::addGameDomain\28Common::String\20const&\29 can change the state due to Common::Array<Common::String>::insert_aux\28Common::String*\2c\20Common::String\20const*\2c\20Common::String\20const*\29
[asyncify] Common::JSONValue::objectKeys\28\29\20const can change the state due to Common::Array<Common::String>::insert_aux\28Common::String*\2c\20Common::String\20const*\2c\20Common::String\20const*\29
[asyncify] Common::Action::addDefaultInputMapping\28Common::String\20const&\29 can change the state due to Common::Array<Common::String>::insert_aux\28Common::String*\2c\20Common::String\20const*\2c\20Common::String\20const*\29
[asyncify] AdvancedMetaEngineDetection::getPathsFromEntry\28ADGameDescription\20const*\29 can change the state due to Common::Array<Common::String>::insert_aux\28Common::String*\2c\20Common::String\20const*\2c\20Common::String\20const*\29
[asyncify] GUI::Debugger::cmdHelp\28int\2c\20char\20const**\29 can change the state due to Common::Array<Common::String>::insert_aux\28Common::String*\2c\20Common::String\20const*\2c\20Common::String\20const*\29
[asyncify] Glk::Blorb::getBlorbFilenames\28Common::String\20const&\2c\20Common::Array<Common::String>&\2c\20Glk::InterpreterType\2c\20Common::String\20const&\29 can change the state due to Common::Array<Common::String>::insert_aux\28Common::String*\2c\20Common::String\20const*\2c\20Common::String\20const*\29
[asyncify] Glk::Blorb::getInfocomBlorbFilenames\28Common::Array<Common::String>&\2c\20Common::String\20const&\29 can change the state due to Common::Array<Common::String>::insert_aux\28Common::String*\2c\20Common::String\20const*\2c\20Common::String\20const*\29
[asyncify] Common::Array<Common::String>::push_back\28Common::String\20const&\29 can change the state due to Common::Array<Common::String>::insert_aux\28Common::String*\2c\20Common::String\20const*\2c\20Common::String\20const*\29
[asyncify] DrivesPOSIXFilesystemFactory::addDrive\28Common::String\20const&\29 can change the state due to Common::Array<Common::String>::insert_aux\28Common::String*\2c\20Common::String\20const*\2c\20Common::String\20const*\29
[asyncify] Glk::AdvSys::Game::checkVerb\28Common::Array<int>\20const&\29 can change the state due to Glk::AdvSys::Game::hasVerb\28int\2c\20Common::Array<int>\20const&\29\20const
[asyncify] Gob::DataIO::getArchiveInfo\28Common::Array<Gob::ArchiveInfo>&\29\20const can change the state due to Common::Array<Gob::ArchiveInfo>::reserve\28unsigned\20int\29
[asyncify] Graphics::VectorRendererSpec<unsigned\20int>::precalcGradient\28int\29 can change the state due to Common::Array<unsigned\20int>::insert_aux\28unsigned\20int*\2c\20unsigned\20int\20const*\2c\20unsigned\20int\20const*\29
[asyncify] DotMatrixPlugin::DotMatrixPlugin\28\29 can change the state due to Common::Array<unsigned\20int>::insert_aux\28unsigned\20int*\2c\20unsigned\20int\20const*\2c\20unsigned\20int\20const*\29
[asyncify] SAIPlugin::SAIPlugin\28\29 can change the state due to Common::Array<unsigned\20int>::insert_aux\28unsigned\20int*\2c\20unsigned\20int\20const*\2c\20unsigned\20int\20const*\29
[asyncify] SuperSAIPlugin::SuperSAIPlugin\28\29 can change the state due to Common::Array<unsigned\20int>::insert_aux\28unsigned\20int*\2c\20unsigned\20int\20const*\2c\20unsigned\20int\20const*\29
[asyncify] SuperEaglePlugin::SuperEaglePlugin\28\29 can change the state due to Common::Array<unsigned\20int>::insert_aux\28unsigned\20int*\2c\20unsigned\20int\20const*\2c\20unsigned\20int\20const*\29
[asyncify] PMPlugin::PMPlugin\28\29 can change the state due to Common::Array<unsigned\20int>::insert_aux\28unsigned\20int*\2c\20unsigned\20int\20const*\2c\20unsigned\20int\20const*\29
[asyncify] AdvMamePlugin::AdvMamePlugin\28\29 can change the state due to Common::Array<unsigned\20int>::insert_aux\28unsigned\20int*\2c\20unsigned\20int\20const*\2c\20unsigned\20int\20const*\29
[asyncify] TVPlugin::TVPlugin\28\29 can change the state due to Common::Array<unsigned\20int>::insert_aux\28unsigned\20int*\2c\20unsigned\20int\20const*\2c\20unsigned\20int\20const*\29
[asyncify] EdgePlugin::EdgePlugin\28\29 can change the state due to Common::Array<unsigned\20int>::insert_aux\28unsigned\20int*\2c\20unsigned\20int\20const*\2c\20unsigned\20int\20const*\29
[asyncify] NormalPlugin::NormalPlugin\28\29 can change the state due to Common::Array<unsigned\20int>::insert_aux\28unsigned\20int*\2c\20unsigned\20int\20const*\2c\20unsigned\20int\20const*\29
[asyncify] HQPlugin::HQPlugin\28\29 can change the state due to Common::Array<unsigned\20int>::insert_aux\28unsigned\20int*\2c\20unsigned\20int\20const*\2c\20unsigned\20int\20const*\29
[asyncify] Common::TextToSpeechManager::getVoiceIndicesByGender\28Common::TTSVoice::Gender\29 can change the state due to Common::Array<int>::insert_aux\28int*\2c\20int\20const*\2c\20int\20const*\29
[asyncify] GUI::getLangIdentifiers\28Common::String\20const&\29 can change the state due to Common::Array<Common::Language>::insert_aux\28Common::Language*\2c\20Common::Language\20const*\2c\20Common::Language\20const*\29
[asyncify] GUI::ThemeEngine::storeFontNames\28GUI::TextData\2c\20Common::String\20const&\2c\20Common::String\20const&\2c\20Common::String\20const&\2c\20int\29 can change the state due to Common::Array<Common::Language>::insert_aux\28Common::Language*\2c\20Common::Language\20const*\2c\20Common::Language\20const*\29
[asyncify] GUI::DropdownButtonWidget::appendEntry\28Common::U32String\20const&\2c\20unsigned\20int\29 can change the state due to Common::Array<GUI::DropdownButtonWidget::Entry>::insert_aux\28GUI::DropdownButtonWidget::Entry*\2c\20GUI::DropdownButtonWidget::Entry\20const*\2c\20GUI::DropdownButtonWidget::Entry\20const*\29
[asyncify] GUI::GridWidget::calcVisibleEntries\28\29 can change the state due to Common::Array<GUI::GridItemInfo*>::insert_aux\28GUI::GridItemInfo**\2c\20GUI::GridItemInfo*\20const*\2c\20GUI::GridItemInfo*\20const*\29
[asyncify] SdlGraphicsManager::setSystemMousePosition\28int\2c\20int\29 can change the state due to WindowedGraphicsManager::convertWindowToVirtual\28int\2c\20int\29\20const
[asyncify] virtual\20thunk\20to\20SdlGraphicsManager::setSystemMousePosition\28int\2c\20int\29 can change the state due to WindowedGraphicsManager::convertWindowToVirtual\28int\2c\20int\29\20const
[asyncify] OpenGL::LibRetro::PresetParser::parseTexture\28Common::String\20const&\29 can change the state due to Common::Array<OpenGL::LibRetro::ShaderTexture>::insert_aux\28OpenGL::LibRetro::ShaderTexture*\2c\20OpenGL::LibRetro::ShaderTexture\20const*\2c\20OpenGL::LibRetro::ShaderTexture\20const*\29
[asyncify] Common::Array<OpenGL::LibRetro::ShaderPass>::push_back\28OpenGL::LibRetro::ShaderPass\20const&\29 can change the state due to Common::Array<OpenGL::LibRetro::ShaderPass>::insert_aux\28OpenGL::LibRetro::ShaderPass*\2c\20OpenGL::LibRetro::ShaderPass\20const*\2c\20OpenGL::LibRetro::ShaderPass\20const*\29
[asyncify] virtual\20thunk\20to\20SurfaceSdlGraphicsManager::grabOverlay\28Graphics::Surface&\29\20const can change the state due to SurfaceSdlGraphicsManager::grabOverlay\28Graphics::Surface&\29\20const
[asyncify] OpenGL::TiledSurface::TiledSurface\28unsigned\20int\2c\20unsigned\20int\2c\20Graphics::PixelFormat\20const&\29 can change the state due to Common::Array<OpenGL::TiledSurface::Tile>::insert_aux\28OpenGL::TiledSurface::Tile*\2c\20OpenGL::TiledSurface::Tile\20const*\2c\20OpenGL::TiledSurface::Tile\20const*\29
[asyncify] Common::PEResources::~PEResources\28\29.1 can change the state due to Common::PEResources::~PEResources\28\29
[asyncify] GUI::MetadataParser::~MetadataParser\28\29.1 can change the state due to GUI::MetadataParser::~MetadataParser\28\29
[asyncify] GUI::ThemeParser::~ThemeParser\28\29.1 can change the state due to GUI::ThemeParser::~ThemeParser\28\29
[asyncify] lua_error\28lua_State*\29 can change the state due to luaG_errormsg\28lua_State*\29
[asyncify] luaG_runerror\28lua_State*\2c\20char\20const*\2c\20...\29 can change the state due to luaG_errormsg\28lua_State*\29
[asyncify] luaV_gettable\28lua_State*\2c\20lua_TValue\20const*\2c\20lua_TValue*\2c\20lua_TValue*\29 can change the state due to luaD_call\28lua_State*\2c\20lua_TValue*\2c\20int\29
[asyncify] luaV_settable\28lua_State*\2c\20lua_TValue\20const*\2c\20lua_TValue*\2c\20lua_TValue*\29 can change the state due to luaD_call\28lua_State*\2c\20lua_TValue*\2c\20int\29
[asyncify] call_orderTM\28lua_State*\2c\20lua_TValue\20const*\2c\20lua_TValue\20const*\2c\20TMS\29 can change the state due to luaD_call\28lua_State*\2c\20lua_TValue*\2c\20int\29
[asyncify] luaV_equalval\28lua_State*\2c\20lua_TValue\20const*\2c\20lua_TValue\20const*\29 can change the state due to luaD_call\28lua_State*\2c\20lua_TValue*\2c\20int\29
[asyncify] call_binTM\28lua_State*\2c\20lua_TValue\20const*\2c\20lua_TValue\20const*\2c\20lua_TValue*\2c\20TMS\29 can change the state due to luaD_call\28lua_State*\2c\20lua_TValue*\2c\20int\29
[asyncify] lua_call\28lua_State*\2c\20int\2c\20int\29 can change the state due to luaD_call\28lua_State*\2c\20lua_TValue*\2c\20int\29
[asyncify] f_call\28lua_State*\2c\20void*\29 can change the state due to luaD_call\28lua_State*\2c\20lua_TValue*\2c\20int\29
[asyncify] f_Ccall\28lua_State*\2c\20void*\29 can change the state due to luaD_call\28lua_State*\2c\20lua_TValue*\2c\20int\29
[asyncify] GCTM\28lua_State*\29 can change the state due to luaD_call\28lua_State*\2c\20lua_TValue*\2c\20int\29
[asyncify] luaX_syntaxerror\28LexState*\2c\20char\20const*\29 can change the state due to luaX_lexerror\28LexState*\2c\20char\20const*\2c\20int\29
[asyncify] chunk\28LexState*\29 can change the state due to luaX_lexerror\28LexState*\2c\20char\20const*\2c\20int\29
[asyncify] subexpr\28LexState*\2c\20expdesc*\2c\20unsigned\20int\29 can change the state due to luaX_lexerror\28LexState*\2c\20char\20const*\2c\20int\29
[asyncify] assignment\28LexState*\2c\20LHS_assign*\2c\20int\29 can change the state due to luaX_lexerror\28LexState*\2c\20char\20const*\2c\20int\29
[asyncify] constructor\28LexState*\2c\20expdesc*\29 can change the state due to luaX_lexerror\28LexState*\2c\20char\20const*\2c\20int\29
[asyncify] recfield\28LexState*\2c\20ConsControl*\29 can change the state due to luaX_lexerror\28LexState*\2c\20char\20const*\2c\20int\29
[asyncify] luaX_next\28LexState*\29 can change the state due to llex\28LexState*\2c\20SemInfo*\29
[asyncify] luaX_lookahead\28LexState*\29 can change the state due to llex\28LexState*\2c\20SemInfo*\29
[asyncify] luaK_nil\28FuncState*\2c\20int\2c\20int\29 can change the state due to luaK_code\28FuncState*\2c\20unsigned\20int\2c\20int\29
[asyncify] luaK_codeABC\28FuncState*\2c\20OpCode\2c\20int\2c\20int\2c\20int\29 can change the state due to luaK_code\28FuncState*\2c\20unsigned\20int\2c\20int\29
[asyncify] luaK_jump\28FuncState*\29 can change the state due to luaK_code\28FuncState*\2c\20unsigned\20int\2c\20int\29
[asyncify] luaK_codeABx\28FuncState*\2c\20OpCode\2c\20int\2c\20unsigned\20int\29 can change the state due to luaK_code\28FuncState*\2c\20unsigned\20int\2c\20int\29
[asyncify] luaK_ret\28FuncState*\2c\20int\2c\20int\29 can change the state due to luaK_code\28FuncState*\2c\20unsigned\20int\2c\20int\29
[asyncify] luaK_dischargevars\28FuncState*\2c\20expdesc*\29 can change the state due to luaK_code\28FuncState*\2c\20unsigned\20int\2c\20int\29
[asyncify] exp2reg\28FuncState*\2c\20expdesc*\2c\20int\29 can change the state due to luaK_code\28FuncState*\2c\20unsigned\20int\2c\20int\29
[asyncify] discharge2reg\28FuncState*\2c\20expdesc*\2c\20int\29 can change the state due to luaK_code\28FuncState*\2c\20unsigned\20int\2c\20int\29
[asyncify] luaK_storevar\28FuncState*\2c\20expdesc*\2c\20expdesc*\29 can change the state due to luaK_code\28FuncState*\2c\20unsigned\20int\2c\20int\29
[asyncify] luaK_self\28FuncState*\2c\20expdesc*\2c\20expdesc*\29 can change the state due to luaK_code\28FuncState*\2c\20unsigned\20int\2c\20int\29
[asyncify] luaK_goiftrue\28FuncState*\2c\20expdesc*\29 can change the state due to luaK_code\28FuncState*\2c\20unsigned\20int\2c\20int\29
[asyncify] condjump\28FuncState*\2c\20OpCode\2c\20int\2c\20int\2c\20int\29 can change the state due to luaK_code\28FuncState*\2c\20unsigned\20int\2c\20int\29
[asyncify] luaK_prefix\28FuncState*\2c\20UnOpr\2c\20expdesc*\29 can change the state due to luaK_code\28FuncState*\2c\20unsigned\20int\2c\20int\29
[asyncify] codearith\28FuncState*\2c\20OpCode\2c\20expdesc*\2c\20expdesc*\29 can change the state due to luaK_code\28FuncState*\2c\20unsigned\20int\2c\20int\29
[asyncify] luaK_infix\28FuncState*\2c\20BinOpr\2c\20expdesc*\29 can change the state due to luaK_code\28FuncState*\2c\20unsigned\20int\2c\20int\29
[asyncify] luaK_setlist\28FuncState*\2c\20int\2c\20int\2c\20int\29 can change the state due to luaK_code\28FuncState*\2c\20unsigned\20int\2c\20int\29
[asyncify] luaK_stringK\28FuncState*\2c\20TString*\29 can change the state due to addk\28FuncState*\2c\20lua_TValue*\2c\20lua_TValue*\29
[asyncify] luaK_numberK\28FuncState*\2c\20double\29 can change the state due to addk\28FuncState*\2c\20lua_TValue*\2c\20lua_TValue*\29
[asyncify] luaK_exp2RK\28FuncState*\2c\20expdesc*\29 can change the state due to addk\28FuncState*\2c\20lua_TValue*\2c\20lua_TValue*\29
[asyncify] body\28LexState*\2c\20expdesc*\2c\20int\2c\20int\29 can change the state due to new_localvar\28LexState*\2c\20TString*\2c\20int\29
[asyncify] parlist\28LexState*\29 can change the state due to new_localvar\28LexState*\2c\20TString*\2c\20int\29
[asyncify] singlevar\28LexState*\2c\20expdesc*\29 can change the state due to singlevaraux\28FuncState*\2c\20TString*\2c\20expdesc*\2c\20int\29
[asyncify] luaH_resizearray\28lua_State*\2c\20Table*\2c\20int\29 can change the state due to resize\28lua_State*\2c\20Table*\2c\20int\2c\20int\29
[asyncify] newkey\28lua_State*\2c\20Table*\2c\20lua_TValue\20const*\29 can change the state due to resize\28lua_State*\2c\20Table*\2c\20int\2c\20int\29
[asyncify] lua_createtable\28lua_State*\2c\20int\2c\20int\29 can change the state due to luaH_new\28lua_State*\2c\20int\2c\20int\29
[asyncify] lua_getinfo\28lua_State*\2c\20char\20const*\2c\20lua_Debug*\29 can change the state due to luaH_new\28lua_State*\2c\20int\2c\20int\29
[asyncify] open_func\28LexState*\2c\20FuncState*\29 can change the state due to luaH_new\28lua_State*\2c\20int\2c\20int\29
[asyncify] luaV_concat\28lua_State*\2c\20int\2c\20int\29 can change the state due to luaZ_openspace\28lua_State*\2c\20Mbuffer*\2c\20unsigned\20long\29
[asyncify] luaD_growstack\28lua_State*\2c\20int\29 can change the state due to luaD_reallocstack\28lua_State*\2c\20int\29
[asyncify] propagatemark\28global_State*\29 can change the state due to luaD_reallocstack\28lua_State*\2c\20int\29
[asyncify] lua_pcall\28lua_State*\2c\20int\2c\20int\2c\20int\29 can change the state due to luaD_pcall\28lua_State*\2c\20void\20\28*\29\28lua_State*\2c\20void*\29\2c\20void*\2c\20long\2c\20long\29
[asyncify] lua_cpcall\28lua_State*\2c\20int\20\28*\29\28lua_State*\29\2c\20void*\29 can change the state due to luaD_pcall\28lua_State*\2c\20void\20\28*\29\28lua_State*\2c\20void*\29\2c\20void*\2c\20long\2c\20long\29
[asyncify] lua_load\28lua_State*\2c\20char\20const*\20\28*\29\28lua_State*\2c\20void*\2c\20unsigned\20long*\29\2c\20void*\2c\20char\20const*\29 can change the state due to luaD_protectedparser\28lua_State*\2c\20Zio*\2c\20char\20const*\29
[asyncify] lua_pushcclosure\28lua_State*\2c\20int\20\28*\29\28lua_State*\29\2c\20int\29 can change the state due to luaF_newCclosure\28lua_State*\2c\20int\2c\20Table*\29
[asyncify] luaC_freeall\28lua_State*\29 can change the state due to sweeplist\28lua_State*\2c\20GCObject**\2c\20unsigned\20long\29
[asyncify] luaC_step\28lua_State*\29 can change the state due to singlestep\28lua_State*\29
[asyncify] luaC_fullgc\28lua_State*\29 can change the state due to singlestep\28lua_State*\29
[asyncify] luaY_parser\28lua_State*\2c\20Zio*\2c\20Mbuffer*\2c\20char\20const*\29 can change the state due to luaX_setinput\28lua_State*\2c\20LexState*\2c\20Zio*\2c\20TString*\29
[asyncify] lua_newthread\28lua_State*\29 can change the state due to luaE_newthread\28lua_State*\29
[asyncify] lua_newuserdata\28lua_State*\2c\20unsigned\20long\29 can change the state due to luaS_newudata\28lua_State*\2c\20unsigned\20long\2c\20Table*\29
[asyncify] luaT_init\28lua_State*\29 can change the state due to luaS_newlstr\28lua_State*\2c\20char\20const*\2c\20unsigned\20long\29
[asyncify] luaV_tostring\28lua_State*\2c\20lua_TValue*\29 can change the state due to luaS_newlstr\28lua_State*\2c\20char\20const*\2c\20unsigned\20long\29
[asyncify] lua_pushlstring\28lua_State*\2c\20char\20const*\2c\20unsigned\20long\29 can change the state due to luaS_newlstr\28lua_State*\2c\20char\20const*\2c\20unsigned\20long\29
[asyncify] lua_pushstring\28lua_State*\2c\20char\20const*\29 can change the state due to luaS_newlstr\28lua_State*\2c\20char\20const*\2c\20unsigned\20long\29
[asyncify] lua_getfield\28lua_State*\2c\20int\2c\20char\20const*\29 can change the state due to luaS_newlstr\28lua_State*\2c\20char\20const*\2c\20unsigned\20long\29
[asyncify] lua_setfield\28lua_State*\2c\20int\2c\20char\20const*\29 can change the state due to luaS_newlstr\28lua_State*\2c\20char\20const*\2c\20unsigned\20long\29
[asyncify] lua_concat\28lua_State*\2c\20int\29 can change the state due to luaS_newlstr\28lua_State*\2c\20char\20const*\2c\20unsigned\20long\29
[asyncify] luaD_seterrorobj\28lua_State*\2c\20int\2c\20lua_TValue*\29 can change the state due to luaS_newlstr\28lua_State*\2c\20char\20const*\2c\20unsigned\20long\29
[asyncify] luaX_init\28lua_State*\29 can change the state due to luaS_newlstr\28lua_State*\2c\20char\20const*\2c\20unsigned\20long\29
[asyncify] luaX_newstring\28LexState*\2c\20char\20const*\2c\20unsigned\20long\29 can change the state due to luaS_newlstr\28lua_State*\2c\20char\20const*\2c\20unsigned\20long\29
[asyncify] luaO_pushvfstring\28lua_State*\2c\20char\20const*\2c\20void*\29 can change the state due to luaS_newlstr\28lua_State*\2c\20char\20const*\2c\20unsigned\20long\29
[asyncify] MT32Emu::Synth::refreshSystemChanAssign\28unsigned\20char\2c\20unsigned\20char\29 can change the state due to MT32Emu::Part::allSoundOff\28\29
[asyncify] MT32Emu::Synth::setPartVolumeOverride\28unsigned\20char\2c\20unsigned\20char\29 can change the state due to MT32Emu::Part::setVolumeOverride\28unsigned\20char\29
[asyncify] mt32emu_identify_rom_data can change the state due to MT32Emu::identifyROM\28mt32emu_rom_info*\2c\20MT32Emu::File*\2c\20char\20const*\29
[asyncify] mt32emu_close_synth can change the state due to MT32Emu::Synth::close\28\29
[asyncify] MT32Emu::PartialManager::produceOutput\28int\2c\20short*\2c\20short*\2c\20unsigned\20int\29 can change the state due to MT32Emu::Partial::produceOutput\28short*\2c\20short*\2c\20unsigned\20int\29
[asyncify] MT32Emu::PartialManager::produceOutput\28int\2c\20float*\2c\20float*\2c\20unsigned\20int\29 can change the state due to MT32Emu::Partial::produceOutput\28float*\2c\20float*\2c\20unsigned\20int\29
[asyncify] mt32emu_play_sysex_now can change the state due to MT32Emu::Synth::playSysexNow\28unsigned\20char\20const*\2c\20unsigned\20int\29
[asyncify] MT32Emu::TVA::handleInterrupt\28\29 can change the state due to MT32Emu::TVA::nextPhase\28\29
[asyncify] mt32emu_set_midi_event_queue_size can change the state due to MT32Emu::Synth::setMIDIEventQueueSize\28unsigned\20int\29
[asyncify] mt32emu_configure_midi_event_queue_sysex_storage can change the state due to MT32Emu::Synth::configureMIDIEventQueueSysexStorage\28unsigned\20int\29
[asyncify] mt32emu_play_msg_now can change the state due to MT32Emu::Synth::playMsgNow\28unsigned\20int\29
[asyncify] mt32emu_play_msg can change the state due to MT32Emu::Synth::playMsg\28unsigned\20int\29
[asyncify] mt32emu_play_sysex can change the state due to MT32Emu::Synth::playSysex\28unsigned\20char\20const*\2c\20unsigned\20int\29
[asyncify] MT32Emu::RendererImpl<short>::renderStreams\28MT32Emu::DACOutputStreams<float>\20const&\2c\20unsigned\20int\29 can change the state due to void\20MT32Emu::RendererImpl<short>::doRenderAndConvertStreams<float>\28MT32Emu::DACOutputStreams<float>\20const&\2c\20unsigned\20int\29
[asyncify] MT32Emu::RendererImpl<float>::renderStreams\28MT32Emu::DACOutputStreams<short>\20const&\2c\20unsigned\20int\29 can change the state due to void\20MT32Emu::RendererImpl<float>::doRenderAndConvertStreams<short>\28MT32Emu::DACOutputStreams<short>\20const&\2c\20unsigned\20int\29
[asyncify] SDL_UnlockSurface can change the state due to SDL_RLESurface
[asyncify] Emscripten_CreateWindowFramebuffer can change the state due to SDL_FreeSurface
[asyncify] Emscripten_DestroyWindowFramebuffer can change the state due to SDL_FreeSurface
[asyncify] SW_DestroyTexture can change the state due to SDL_FreeSurface
[asyncify] SDL_SW_CopyYUVToRGB can change the state due to SDL_FreeSurface
[asyncify] SurfaceSdlGraphicsManager::updateOSD\28\29 can change the state due to SDL_FreeSurface
[asyncify] SurfaceSdlGraphicsManager::removeOSDMessage\28\29 can change the state due to SDL_FreeSurface
[asyncify] SDL_RLEBlit can change the state due to SDL_LockSurface
[asyncify] SDL_RLEAlphaBlit can change the state due to SDL_LockSurface
[asyncify] SW_UpdateTexture can change the state due to SDL_LockSurface
[asyncify] SDLgfx_rotateSurface can change the state due to SDL_LockSurface
[asyncify] SDL_CalculateShapeBitmap can change the state due to SDL_LockSurface
[asyncify] SDL_CalculateShapeTree can change the state due to SDL_LockSurface
[asyncify] SDL_SW_BlitTriangle can change the state due to SDL_LockSurface
[asyncify] copySDLSurface\28SDL_Surface*\29 can change the state due to SDL_LockSurface
[asyncify] SDL_Init can change the state due to SDL_InitSubSystem
[asyncify] SDL_Quit can change the state due to SDL_QuitSubSystem
[asyncify] SdlMixerManager::suspendAudio\28\29 can change the state due to SDL_CloseAudio
[asyncify] SDL_BufferQueueFillCallback can change the state due to SDL_WriteToDataQueue
[asyncify] SDL_HapticQuit can change the state due to SDL_HapticClose
[asyncify] SDL_BlendPoint_RGB can change the state due to SDL_Error
[asyncify] SDL_BlendPoint_RGBA can change the state due to SDL_Error
[asyncify] SDL_DUMMY_SensorOpen can change the state due to SDL_Error
[asyncify] Emscripten_WarpMouse can change the state due to SDL_Error
[asyncify] SDL_AudioOpenDevice_Default can change the state due to SDL_Error
[asyncify] SDL_BlendFillRect_RGB can change the state due to SDL_Error
[asyncify] SDL_BlendFillRect_RGBA can change the state due to SDL_Error
[asyncify] stdio_write can change the state due to SDL_Error
[asyncify] SDL_SetSurfaceBlendMode can change the state due to SDL_Error
[asyncify] EMSCRIPTEN_JoystickRumble can change the state due to SDL_Error
[asyncify] EMSCRIPTEN_JoystickRumbleTriggers can change the state due to SDL_Error
[asyncify] EMSCRIPTEN_JoystickSetLED can change the state due to SDL_Error
[asyncify] EMSCRIPTEN_JoystickSendEffect can change the state due to SDL_Error
[asyncify] EMSCRIPTEN_JoystickSetSensorsEnabled can change the state due to SDL_Error
[asyncify] SDL_GameControllerAddMapping can change the state due to SDL_PrivateGameControllerAddMapping
[asyncify] SDL_PrivateGetControllerMappingForGUID can change the state due to SDL_PrivateAddMappingForGUID
[asyncify] SDL_IsGameController can change the state due to SDL_PrivateGetControllerMapping
[asyncify] legalstub$SDL_SaveDollarTemplate can change the state due to SDL_SaveDollarTemplate
[asyncify] legalstub$SDL_LoadDollarTemplates can change the state due to SDL_LoadDollarTemplates
[asyncify] SDL_JoystickIsHaptic can change the state due to SDL_PrivateJoystickValid
[asyncify] SDL_GameControllerGetButton can change the state due to SDL_JoystickGetAxis
[asyncify] SDL_GameControllerGetAxis can change the state due to SDL_JoystickGetAxis
[asyncify] SDL_GameControllerName can change the state due to SDL_JoystickName
[asyncify] SDL_GameControllerGetType can change the state due to SDL_JoystickName
[asyncify] SDL_GameControllerPath can change the state due to SDL_JoystickPath
[asyncify] SDL_GameControllerGetPlayerIndex can change the state due to SDL_JoystickGetPlayerIndex
[asyncify] SDL_GameControllerSetPlayerIndex can change the state due to SDL_JoystickSetPlayerIndex
[asyncify] SDL_GameControllerGetVendor can change the state due to SDL_JoystickGetVendor
[asyncify] SDL_GameControllerGetProduct can change the state due to SDL_JoystickGetProduct
[asyncify] SDL_GameControllerGetProductVersion can change the state due to SDL_JoystickGetProductVersion
[asyncify] SDL_GameControllerGetFirmwareVersion can change the state due to SDL_JoystickGetFirmwareVersion
[asyncify] SDL_GameControllerGetSerial can change the state due to SDL_JoystickGetSerial
[asyncify] SDL_InitFormat can change the state due to SDL_PixelFormatEnumToMasks
[asyncify] SDL_SetClipRect can change the state due to SDL_IntersectRect
[asyncify] SDL_RenderDrawRect can change the state due to SDL_RenderDrawRectF
[asyncify] SDL_RenderCopy can change the state due to SDL_RenderCopyF
[asyncify] SDL_RenderCopyEx can change the state due to SDL_RenderCopyExF
[asyncify] SDL_SoftStretch can change the state due to SDL_UpperSoftStretch
[asyncify] SDL_SoftStretchLinear can change the state due to SDL_UpperSoftStretch
[asyncify] SurfaceSdlGraphicsManager::SDL_SetColorKey\28SDL_Surface*\2c\20unsigned\20int\2c\20unsigned\20int\29 can change the state due to SDL_SetColorKey
[asyncify] SDL_UpperBlitScaled can change the state due to SDL_PrivateUpperBlitScaled
[asyncify] SDL_CondWait can change the state due to SDL_CondWaitTimeout
[asyncify] legalstub$SDL_GetTouchDevice can change the state due to SDL_GetTouchDevice
[asyncify] legalstub$SDL_GetTouchFinger can change the state due to SDL_GetTouchFinger
[asyncify] SDL_GetPointDisplayIndex can change the state due to GetRectDisplayIndex
[asyncify] SDL_GetRectDisplayIndex can change the state due to GetRectDisplayIndex
[asyncify] SdlWindow::hasMouseFocus\28\29\20const can change the state due to SDL_GetWindowFlags
[asyncify] SDL_GetRenderer can change the state due to SDL_GetWindowData
[asyncify] SDL_PollEvent can change the state due to SDL_WaitEventTimeout
[asyncify] SDL_WaitEvent can change the state due to SDL_WaitEventTimeout
[asyncify] SDL_DelVideoDisplay can change the state due to SDL_SendDisplayEvent
[asyncify] SDL_SendDropFile can change the state due to SDL_SendDrop
[asyncify] SDL_SendDropText can change the state due to SDL_SendDrop
[asyncify] SDL_SendDropComplete can change the state due to SDL_SendDrop
[asyncify] Emscripten_HandleBeforeUnload can change the state due to SDL_SendAppEvent
[asyncify] SDL_SendPendingSignalEvents can change the state due to SDL_SendAppEvent
[asyncify] SDL_SendQuit can change the state due to SDL_SendAppEvent
[asyncify] SDL_OnApplicationWillTerminate can change the state due to SDL_SendAppEvent
[asyncify] SDL_OnApplicationDidReceiveMemoryWarning can change the state due to SDL_SendAppEvent
[asyncify] SDL_OnApplicationWillResignActive can change the state due to SDL_SendAppEvent
[asyncify] SDL_OnApplicationDidEnterBackground can change the state due to SDL_SendAppEvent
[asyncify] SDL_OnApplicationWillEnterForeground can change the state due to SDL_SendAppEvent
[asyncify] SDL_OnApplicationDidBecomeActive can change the state due to SDL_SendAppEvent
[asyncify] SDL_SetKeymap can change the state due to SDL_SendKeymapChangedEvent
[asyncify] EMSCRIPTEN_JoystickUpdate can change the state due to SDL_PrivateJoystickAxis
[asyncify] SDL_ResetKeyboard can change the state due to SDL_SendKeyboardKeyInternal
[asyncify] SDL_SendKeyboardKey can change the state due to SDL_SendKeyboardKeyInternal
[asyncify] SDL_SendKeyboardUnicodeKey can change the state due to SDL_SendKeyboardKeyInternal
[asyncify] SDL_SendKeyboardKeyAutoRelease can change the state due to SDL_SendKeyboardKeyInternal
[asyncify] SDL_ReleaseAutoReleaseKeys can change the state due to SDL_SendKeyboardKeyInternal
[asyncify] Emscripten_HandleKeyPress can change the state due to SDL_SendKeyboardText
[asyncify] SDL_SendMouseButtonClicks can change the state due to SDL_PrivateSendMouseButton
[asyncify] SDL_SendMouseButton can change the state due to SDL_PrivateSendMouseButton
[asyncify] DISKAUDIO_DetectDevices can change the state due to SDL_AddAudioDevice
[asyncify] Emscripten_HandleTouch can change the state due to SDL_SendTouch
[asyncify] legalstub$SDL_SendTouch can change the state due to SDL_SendTouch
[asyncify] legalstub$SDL_SendTouchMotion can change the state due to SDL_SendTouchMotion
[asyncify] Emscripten_HandleCanvasResize can change the state due to SDL_SendWindowEvent
[asyncify] Emscripten_HandleFocus can change the state due to SDL_SendWindowEvent
[asyncify] Emscripten_HandleResize can change the state due to SDL_SendWindowEvent
[asyncify] Emscripten_HandleVisibilityChange can change the state due to SDL_SendWindowEvent
[asyncify] SDL_GameControllerQuit can change the state due to SDL_GameControllerClose
[asyncify] LegacySdlEventSource::~LegacySdlEventSource\28\29 can change the state due to SdlEventSource::~SdlEventSource\28\29
[asyncify] SdlEventSource::~SdlEventSource\28\29.1 can change the state due to SdlEventSource::~SdlEventSource\28\29
[asyncify] SDL_AssertionsQuit can change the state due to debug_print
[asyncify] SDL_GetBasePath can change the state due to SDL_strdup
[asyncify] SDL_SYS_SetTLSData can change the state due to SDL_Generic_SetTLSData
[asyncify] SDL_MouseTouchEventsChanged can change the state due to SDL_AddTouch
[asyncify] legalstub$SDL_AddTouch can change the state due to SDL_AddTouch
[asyncify] Emscripten_VideoInit can change the state due to Emscripten_InitMouse
[asyncify] Emscripten_HandleMouseButton can change the state due to SDL_EventState
[asyncify] Emscripten_HandleKey can change the state due to SDL_EventState
[asyncify] SDL_StartEventLoop can change the state due to SDL_EventState
[asyncify] SDL_PollSentinelChanged can change the state due to SDL_EventState
[asyncify] SDL_GameControllerEventState can change the state due to SDL_EventState
[asyncify] SDL_JoystickEventState can change the state due to SDL_EventState
[asyncify] SDL_IsTextInputActive can change the state due to SDL_EventState
[asyncify] SDL_LogInit can change the state due to SDL_CreateMutex
[asyncify] SDL_CreateThread can change the state due to SDL_CreateThreadWithStackSize
[asyncify] SDL_CreateThreadInternal can change the state due to SDL_CreateThreadWithStackSize
[asyncify] SDL_GameControllerIgnoreDevicesChanged can change the state due to SDL_LoadVIDPIDListFromHint
[asyncify] SDL_GameControllerIgnoreDevicesExceptChanged can change the state due to SDL_LoadVIDPIDListFromHint
[asyncify] legalstub$SDL_GestureAddTouch can change the state due to SDL_GestureAddTouch
[asyncify] GLES2_QueueGeometry can change the state due to SDL_AllocateRenderVertices
[asyncify] GLES2_QueueDrawLines can change the state due to SDL_AllocateRenderVertices
[asyncify] GLES2_QueueDrawPoints can change the state due to SDL_AllocateRenderVertices
[asyncify] SW_QueueGeometry can change the state due to SDL_AllocateRenderVertices
[asyncify] SW_QueueCopyEx can change the state due to SDL_AllocateRenderVertices
[asyncify] SW_QueueCopy can change the state due to SDL_AllocateRenderVertices
[asyncify] SW_QueueFillRects can change the state due to SDL_AllocateRenderVertices
[asyncify] SW_QueueDrawPoints can change the state due to SDL_AllocateRenderVertices
[asyncify] SDL_AddBasicVideoDisplay can change the state due to SDL_AddVideoDisplay
[asyncify] SDL_EventsQuit can change the state due to SDL_StopEventLoop
[asyncify] legalstub$SDL_GestureDelTouch can change the state due to SDL_GestureDelTouch
[asyncify] SDL_SetSurfaceRLE can change the state due to SDL_InvalidateMap
[asyncify] SDL_SetSurfaceColorMod can change the state due to SDL_InvalidateMap
[asyncify] SDL_SetSurfaceAlphaMod can change the state due to SDL_InvalidateMap
[asyncify] SdlMutexInternal::~SdlMutexInternal\28\29 can change the state due to SDL_DestroyMutex
[asyncify] SdlMutexInternal::~SdlMutexInternal\28\29.1 can change the state due to SDL_DestroyMutex
[asyncify] legalstub$SDL_DelTouch can change the state due to SDL_DelTouch
[asyncify] Emscripten_HandleMouseMove can change the state due to SDL_SendMouseMotion
[asyncify] SdlGraphicsManager::lockMouse\28bool\29 can change the state due to SdlWindow::lockMouse\28bool\29
[asyncify] virtual\20thunk\20to\20SdlGraphicsManager::lockMouse\28bool\29 can change the state due to SdlWindow::lockMouse\28bool\29
[asyncify] legalstub$SDL_GetTouchDeviceType can change the state due to SDL_GetTouchDeviceType
[asyncify] legalstub$SDL_GetNumTouchFingers can change the state due to SDL_GetNumTouchFingers
[asyncify] SdlWindow::~SdlWindow\28\29.1 can change the state due to SdlWindow::~SdlWindow\28\29
[asyncify] Emscripten_HandleFullscreenChange can change the state due to SDL_GetDisplayForWindow
[asyncify] SdlGraphicsManager::notifyActiveAreaChanged\28\29 can change the state due to SdlWindow::setMouseRect\28Common::Rect\20const&\29
[asyncify] virtual\20thunk\20to\20SdlGraphicsManager::notifyActiveAreaChanged\28\29 can change the state due to SdlWindow::setMouseRect\28Common::Rect\20const&\29
[asyncify] png_set_cHRM_fixed can change the state due to png_colorspace_set_chromaticities
[asyncify] png_set_cHRM can change the state due to png_colorspace_set_chromaticities
[asyncify] png_set_cHRM_XYZ_fixed can change the state due to png_colorspace_set_endpoints
[asyncify] png_set_cHRM_XYZ can change the state due to png_colorspace_set_endpoints
[asyncify] png_get_IHDR can change the state due to png_check_IHDR
[asyncify] png_set_IHDR can change the state due to png_check_IHDR
[asyncify] png_set_sCAL can change the state due to png_ascii_from_fp
[asyncify] png_set_sCAL_fixed can change the state due to png_ascii_from_fixed
[asyncify] png_colorspace_set_sRGB can change the state due to png_benign_error
[asyncify] png_chunk_benign_error can change the state due to png_chunk_error
[asyncify] png_check_chunk_name can change the state due to png_chunk_error
[asyncify] png_check_chunk_length can change the state due to png_chunk_error
[asyncify] png_handle_IEND can change the state due to png_chunk_error
[asyncify] png_process_data_skip can change the state due to png_app_warning
[asyncify] png_write_info_before_PLTE can change the state due to png_app_warning
[asyncify] png_write_tRNS can change the state due to png_app_warning
[asyncify] png_read_update_info can change the state due to png_app_error
[asyncify] png_start_read_image can change the state due to png_app_error
[asyncify] png_set_background_fixed can change the state due to png_app_error
[asyncify] png_set_background can change the state due to png_app_error
[asyncify] png_set_scale_16 can change the state due to png_app_error
[asyncify] png_set_strip_16 can change the state due to png_app_error
[asyncify] png_set_strip_alpha can change the state due to png_app_error
[asyncify] png_set_expand can change the state due to png_app_error
[asyncify] png_set_palette_to_rgb can change the state due to png_app_error
[asyncify] png_set_expand_gray_1_2_4_to_8 can change the state due to png_app_error
[asyncify] png_set_tRNS_to_alpha can change the state due to png_app_error
[asyncify] png_set_expand_16 can change the state due to png_app_error
[asyncify] png_set_gray_to_rgb can change the state due to png_app_error
[asyncify] png_set_filler can change the state due to png_app_error
[asyncify] png_set_add_alpha can change the state due to png_app_error
[asyncify] png_set_user_transform_info can change the state due to png_app_error
[asyncify] png_colorspace_set_gamma can change the state due to png_chunk_report
[asyncify] png_icc_profile_error can change the state due to png_chunk_report
[asyncify] png_icc_set_sRGB can change the state due to png_chunk_report
[asyncify] png_fixed can change the state due to png_fixed_error
[asyncify] png_set_alpha_mode can change the state due to png_fixed_error
[asyncify] png_set_gamma can change the state due to png_fixed_error
[asyncify] png_process_data_pause can change the state due to png_push_save_buffer
[asyncify] make_ga_colormap can change the state due to png_create_colormap_entry
[asyncify] make_rgb_colormap can change the state due to png_create_colormap_entry
[asyncify] png_set_rgb_to_gray can change the state due to png_set_rgb_to_gray_fixed
[asyncify] png_progressive_combine_row can change the state due to png_combine_row
[asyncify] png_read_finish_IDAT can change the state due to png_read_IDAT_data
[asyncify] png_read_finish_row can change the state due to png_read_IDAT_data
[asyncify] png_image_write_memory can change the state due to png_image_write_main
[asyncify] png_write_sCAL_s can change the state due to png_write_complete_chunk
[asyncify] png_write_chunk can change the state due to png_write_complete_chunk
[asyncify] png_write_IEND can change the state due to png_write_complete_chunk
[asyncify] png_write_gAMA_fixed can change the state due to png_write_complete_chunk
[asyncify] png_write_sRGB can change the state due to png_write_complete_chunk
[asyncify] png_write_sBIT can change the state due to png_write_complete_chunk
[asyncify] png_write_cHRM_fixed can change the state due to png_write_complete_chunk
[asyncify] png_write_bKGD can change the state due to png_write_complete_chunk
[asyncify] png_write_oFFs can change the state due to png_write_complete_chunk
[asyncify] png_write_pHYs can change the state due to png_write_complete_chunk
[asyncify] png_write_tIME can change the state due to png_write_complete_chunk
[asyncify] png_write_finish_row can change the state due to png_compress_IDAT
[asyncify] png_write_find_filter can change the state due to png_compress_IDAT
[asyncify] png_set_rows can change the state due to png_free_data
[asyncify] png_set_gAMA_fixed can change the state due to png_colorspace_sync_info
[asyncify] png_set_gAMA can change the state due to png_colorspace_sync_info
[asyncify] png_set_sRGB can change the state due to png_colorspace_sync_info
[asyncify] png_set_sRGB_gAMA_and_cHRM can change the state due to png_colorspace_sync_info
[asyncify] png_image_error can change the state due to png_image_free
[asyncify] png_image_read_header can change the state due to png_read_info
[asyncify] gz_write can change the state due to gz_init
[asyncify] gzvprintf can change the state due to gz_init
[asyncify] gzclose can change the state due to gzclose_w
[asyncify] gzsetparams can change the state due to deflateParams
[asyncify] gz_zero can change the state due to gz_comp
[asyncify] gzflush can change the state due to gz_comp
[asyncify] gz_fetch can change the state due to gz_look
[asyncify] gzdirect can change the state due to gz_look
[asyncify] uncompress can change the state due to uncompress2
[asyncify] png_zlib_inflate can change the state due to inflate
[asyncify] png_inflate can change the state due to inflate
[asyncify] gz_decomp can change the state due to inflate
[asyncify] ftc_size_node_init can change the state due to ftc_scaler_lookup_size
[asyncify] FT_New_Face can change the state due to FT_Open_Face
[asyncify] FT_New_Memory_Face can change the state due to FT_Open_Face
[asyncify] af_property_set can change the state due to af_face_globals_new
[asyncify] af_property_get can change the state due to af_face_globals_new
[asyncify] Graphics::FreeType::Done_Face\28FT_FaceRec_*\29 can change the state due to FT_Done_Face
[asyncify] Graphics::TTFLibrary::closeFont\28FT_FaceRec_*&\29 can change the state due to FT_Done_Face
[asyncify] FT_Done_FreeType can change the state due to FT_Done_Library
[asyncify] Graphics::FreeType::Set_Pixel_Sizes\28FT_FaceRec_*\2c\20unsigned\20int\2c\20unsigned\20int\29 can change the state due to FT_Set_Pixel_Sizes
[asyncify] FT_Init_FreeType can change the state due to FT_Add_Default_Modules
[asyncify] pfr_get_kerning can change the state due to pfr_face_get_kerning
[asyncify] sfnt_get_charset_id can change the state due to tt_face_find_bdf_prop
[asyncify] raccess_guess_apple_double can change the state due to raccess_guess_apple_generic
[asyncify] raccess_guess_apple_single can change the state due to raccess_guess_apple_generic
[asyncify] pcf_get_metric can change the state due to FT_Stream_ReadFields
[asyncify] tt_sbit_decoder_alloc_bitmap can change the state due to ft_glyphslot_alloc_bitmap
[asyncify] raccess_guess_vfat can change the state due to raccess_make_file_name
[asyncify] raccess_guess_linux_cap can change the state due to raccess_make_file_name
[asyncify] ps_parser_load_field_table can change the state due to ps_parser_load_field
[asyncify] FT_GlyphSlot_Own_Bitmap can change the state due to FT_Bitmap_Copy
[asyncify] ft_bitmap_glyph_init can change the state due to FT_Bitmap_Copy
[asyncify] ft_bitmap_glyph_copy can change the state due to FT_Bitmap_Copy
[asyncify] af_dummy_hints_apply can change the state due to af_glyph_hints_reload
[asyncify] af_latin_hints_apply can change the state due to af_glyph_hints_reload
[asyncify] af_cjk_hints_apply can change the state due to af_glyph_hints_reload
[asyncify] af_latin_hints_detect_features can change the state due to af_latin_hints_compute_segments
[asyncify] af_cjk_hints_detect_features can change the state due to af_latin_hints_compute_segments
[asyncify] _bdf_parse_properties can change the state due to _bdf_list_split
[asyncify] cf2_doStems can change the state due to cf2_arrstack_push
[asyncify] cf2_hintmap_build can change the state due to cf2_arrstack_push
[asyncify] tt_slot_init can change the state due to FT_GlyphLoader_CreateExtra
[asyncify] cf2_builder_lineTo can change the state due to FT_GlyphLoader_CheckPoints
[asyncify] cf2_builder_cubeTo can change the state due to FT_GlyphLoader_CheckPoints
[asyncify] cff_builder_start_point can change the state due to FT_GlyphLoader_CheckPoints
[asyncify] FT_GlyphLoader_CopyPoints can change the state due to FT_GlyphLoader_CheckPoints
[asyncify] pfr_glyph_curve_to can change the state due to FT_GlyphLoader_CheckPoints
[asyncify] t1_builder_check_points can change the state due to FT_GlyphLoader_CheckPoints
[asyncify] t1_builder_add_point1 can change the state due to FT_GlyphLoader_CheckPoints
[asyncify] t1_builder_add_contour can change the state due to FT_GlyphLoader_CheckPoints
[asyncify] t1_builder_start_point can change the state due to FT_GlyphLoader_CheckPoints
[asyncify] TT_Load_Simple_Glyph can change the state due to FT_GlyphLoader_CheckPoints
[asyncify] TT_Load_Composite_Glyph can change the state due to FT_GlyphLoader_CheckSubGlyphs
[asyncify] FT_Outline_New can change the state due to FT_Outline_New_Internal
[asyncify] FT_Stroker_CubicTo can change the state due to ft_stroke_border_lineto
[asyncify] FT_Stroker_LineTo can change the state due to ft_stroke_border_lineto
[asyncify] ft_stroker_subpath_start can change the state due to ft_stroke_border_lineto
[asyncify] ft_stroker_inside can change the state due to ft_stroke_border_lineto
[asyncify] ft_stroker_outside can change the state due to ft_stroke_border_lineto
[asyncify] FT_Stroker_ConicTo can change the state due to ft_stroke_border_lineto
[asyncify] ft_stroker_cap can change the state due to ft_stroke_border_lineto
[asyncify] ft_stroker_arcto can change the state due to ft_stroke_border_cubicto
[asyncify] FT_Stroker_ParseOutline can change the state due to FT_Stroker_EndSubPath
[asyncify] ps_hints_close can change the state due to ps_dimension_end
[asyncify] t1_hints_stem can change the state due to ps_dimension_add_t1stem
[asyncify] t2_hints_stems can change the state due to ps_dimension_add_t1stem
[asyncify] ps_hints_t2counter can change the state due to ps_dimension_set_mask_bits
[asyncify] ps_hints_t2mask can change the state due to ps_dimension_set_mask_bits
[asyncify] FT_GlyphSlot_Embolden can change the state due to FT_Bitmap_Embolden
[asyncify] ft_bitmap_glyph_done can change the state due to FT_Bitmap_Done
[asyncify] BDF_Glyph_Load can change the state due to ft_glyphslot_set_bitmap
[asyncify] ft_outline_glyph_done can change the state due to FT_Outline_Done
[asyncify] tt_face_free_sbit can change the state due to FT_Stream_ReleaseFrame
[asyncify] TT_Forget_Glyph_Frame can change the state due to FT_Stream_ExitFrame
[asyncify] ps_hinter_done can change the state due to ps_dimension_done
[asyncify] tt_size_done can change the state due to tt_size_done_bytecode
[asyncify] ft_black_render can change the state due to Render_Glyph
[asyncify] tt_sbit_decoder_load_compound can change the state due to tt_sbit_decoder_load_image
[asyncify] getservbyname_r can change the state due to __lookup_serv
[asyncify] __res_msend can change the state due to __get_resolv_conf
[asyncify] fputc can change the state due to do_putc
[asyncify] fputwc can change the state due to __fputwc_unlocked
[asyncify] putc can change the state due to do_putc.1
[asyncify] putchar can change the state due to do_putc.2
[asyncify] read_scan_integer can change the state due to ungetc
[asyncify] vfwscanf can change the state due to ungetwc
[asyncify] fscanf can change the state due to vfscanf
[asyncify] vscanf can change the state due to vfscanf
[asyncify] vsscanf can change the state due to vfscanf
[asyncify] fgetc can change the state due to do_getc
[asyncify] db_debug\28lua_State*\29 can change the state due to fgets
[asyncify] getmntent_r can change the state due to fgets
[asyncify] __fgetwc_unlocked can change the state due to __fgetwc_unlocked_internal
[asyncify] getc can change the state due to do_getc.1
[asyncify] getchar can change the state due to do_getc.2
[asyncify] getline can change the state due to getdelim
[asyncify] __floatscan can change the state due to __shgetc
[asyncify] hexfloat can change the state due to __shgetc
[asyncify] decfloat can change the state due to __shgetc
[asyncify] scanexp can change the state due to __shgetc
[asyncify] __intscan can change the state due to __shgetc
[asyncify] alcGetProcAddress can change the state due to emscripten_console_errorf
[asyncify] alGetProcAddress can change the state due to emscripten_console_errorf
[asyncify] std::__2::basic_ifstream<char\2c\20std::__2::char_traits<char>>::open\28char\20const*\2c\20unsigned\20int\29 can change the state due to std::__2::basic_filebuf<char\2c\20std::__2::char_traits<char>>::open\28char\20const*\2c\20unsigned\20int\29
[asyncify] std::__2::basic_filebuf<char\2c\20std::__2::char_traits<char>>::open\28std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\2c\20unsigned\20int\29 can change the state due to std::__2::basic_filebuf<char\2c\20std::__2::char_traits<char>>::open\28char\20const*\2c\20unsigned\20int\29
[asyncify] std::__2::basic_ofstream<char\2c\20std::__2::char_traits<char>>::open\28char\20const*\2c\20unsigned\20int\29 can change the state due to std::__2::basic_filebuf<char\2c\20std::__2::char_traits<char>>::open\28char\20const*\2c\20unsigned\20int\29
[asyncify] std::__2::basic_ifstream<char\2c\20std::__2::char_traits<char>>::__open\28int\2c\20unsigned\20int\29 can change the state due to std::__2::basic_filebuf<char\2c\20std::__2::char_traits<char>>::__open\28int\2c\20unsigned\20int\29
[asyncify] std::__2::basic_ofstream<char\2c\20std::__2::char_traits<char>>::__open\28int\2c\20unsigned\20int\29 can change the state due to std::__2::basic_filebuf<char\2c\20std::__2::char_traits<char>>::__open\28int\2c\20unsigned\20int\29
[asyncify] PosixIoStream::~PosixIoStream\28\29 can change the state due to StdioStream::~StdioStream\28\29
[asyncify] PosixIoStream::~PosixIoStream\28\29.1 can change the state due to StdioStream::~StdioStream\28\29
[asyncify] non-virtual\20thunk\20to\20PosixIoStream::~PosixIoStream\28\29 can change the state due to StdioStream::~StdioStream\28\29
[asyncify] non-virtual\20thunk\20to\20PosixIoStream::~PosixIoStream\28\29.1 can change the state due to StdioStream::~StdioStream\28\29
[asyncify] fseek can change the state due to __fseeko
[asyncify] fsetpos can change the state due to __fseeko
[asyncify] legalstub$__fseeko can change the state due to __fseeko
[asyncify] StdioStream::size\28\29\20const can change the state due to __fseeko
[asyncify] non-virtual\20thunk\20to\20StdioStream::size\28\29\20const can change the state due to __fseeko
[asyncify] StdioStream::seek\28long\20long\2c\20int\29 can change the state due to __fseeko
[asyncify] non-virtual\20thunk\20to\20StdioStream::seek\28long\20long\2c\20int\29 can change the state due to __fseeko
[asyncify] fgetpos can change the state due to __ftello
[asyncify] ftell can change the state due to __ftello
[asyncify] legalstub$__ftello can change the state due to __ftello
[asyncify] StdioStream::pos\28\29\20const can change the state due to __ftello
[asyncify] non-virtual\20thunk\20to\20StdioStream::pos\28\29\20const can change the state due to __ftello
[asyncify] jinit_read_gif can change the state due to fwrite
[asyncify] copy_pixel_rows can change the state due to fwrite
[asyncify] put_demapped_gray can change the state due to fwrite
[asyncify] put_demapped_rgb can change the state due to fwrite
[asyncify] put_pixel_rows.2 can change the state due to fwrite
[asyncify] put_demapped_gray.1 can change the state due to fwrite
[asyncify] put_gray_rows.1 can change the state due to fwrite
[asyncify] put_pixel_rows.3 can change the state due to fwrite
[asyncify] fputs can change the state due to fwrite
[asyncify] __getopt_msg can change the state due to fwrite
[asyncify] perror can change the state due to fwrite
[asyncify] putw can change the state due to fwrite
[asyncify] StdioStream::write\28void\20const*\2c\20unsigned\20int\29 can change the state due to fwrite
[asyncify] non-virtual\20thunk\20to\20StdioStream::write\28void\20const*\2c\20unsigned\20int\29 can change the state due to fwrite
[asyncify] pad.3 can change the state due to out
[asyncify] fmt_fp can change the state due to out
[asyncify] getifaddrs can change the state due to __rtnetlink_enumerate
[asyncify] if_nameindex can change the state due to __rtnetlink_enumerate
[asyncify] qsort can change the state due to __qsort_r
[asyncify] killpg can change the state due to kill
[asyncify] forkpty can change the state due to pthread_sigmask
[asyncify] sigprocmask can change the state due to pthread_sigmask
[asyncify] vwarn can change the state due to vfprintf
[asyncify] vwarnx can change the state due to vfprintf
[asyncify] fprintf can change the state due to vfprintf
[asyncify] printf can change the state due to vfprintf
[asyncify] vdprintf can change the state due to vfprintf
[asyncify] vprintf can change the state due to vfprintf
[asyncify] vsnprintf can change the state due to vfprintf
[asyncify] std::__2::__libcpp_verbose_abort\28char\20const*\2c\20...\29 can change the state due to vfprintf
[asyncify] fiprintf can change the state due to vfiprintf
[asyncify] iprintf can change the state due to vfiprintf
[asyncify] vsniprintf can change the state due to vfiprintf
[asyncify] __small_fprintf can change the state due to __small_vfprintf
[asyncify] __small_printf can change the state due to __small_vfprintf
[asyncify] __small_vsnprintf can change the state due to __small_vfprintf
[asyncify] std::__2::shared_ptr<std::__2::__fs::filesystem::__dir_stream>::~shared_ptr\5babi:v15006\5d\28\29 can change the state due to std::__2::__shared_weak_count::__release_shared\5babi:v15006\5d\28\29
[asyncify] std::__2::shared_ptr<std::__2::__fs::filesystem::recursive_directory_iterator::__shared_imp>::~shared_ptr\5babi:v15006\5d\28\29 can change the state due to std::__2::__shared_weak_count::__release_shared\5babi:v15006\5d\28\29
[asyncify] std::__2::shared_ptr<std::__2::__fs::filesystem::filesystem_error::_Storage>::~shared_ptr\5babi:v15006\5d\28\29 can change the state due to std::__2::__shared_weak_count::__release_shared\5babi:v15006\5d\28\29
[asyncify] std::__2::unique_ptr<std::__2::__shared_count\2c\20std::__2::__release_shared_count>::reset\5babi:v15006\5d\28std::__2::__shared_count*\29 can change the state due to std::__2::__release_shared_count::operator\28\29\28std::__2::__shared_count*\29
[asyncify] void\20std::__2::locale::__imp::install<std::__2::collate<char>>\28std::__2::collate<char>*\29 can change the state due to std::__2::locale::__imp::install\28std::__2::locale::facet*\2c\20long\29
[asyncify] void\20std::__2::locale::__imp::install<std::__2::collate<wchar_t>>\28std::__2::collate<wchar_t>*\29 can change the state due to std::__2::locale::__imp::install\28std::__2::locale::facet*\2c\20long\29
[asyncify] void\20std::__2::locale::__imp::install<std::__2::ctype<char>>\28std::__2::ctype<char>*\29 can change the state due to std::__2::locale::__imp::install\28std::__2::locale::facet*\2c\20long\29
[asyncify] void\20std::__2::locale::__imp::install<std::__2::ctype<wchar_t>>\28std::__2::ctype<wchar_t>*\29 can change the state due to std::__2::locale::__imp::install\28std::__2::locale::facet*\2c\20long\29
[asyncify] void\20std::__2::locale::__imp::install<std::__2::codecvt<char\2c\20char\2c\20__mbstate_t>>\28std::__2::codecvt<char\2c\20char\2c\20__mbstate_t>*\29 can change the state due to std::__2::locale::__imp::install\28std::__2::locale::facet*\2c\20long\29
[asyncify] void\20std::__2::locale::__imp::install<std::__2::codecvt<wchar_t\2c\20char\2c\20__mbstate_t>>\28std::__2::codecvt<wchar_t\2c\20char\2c\20__mbstate_t>*\29 can change the state due to std::__2::locale::__imp::install\28std::__2::locale::facet*\2c\20long\29
[asyncify] void\20std::__2::locale::__imp::install<std::__2::codecvt<char16_t\2c\20char\2c\20__mbstate_t>>\28std::__2::codecvt<char16_t\2c\20char\2c\20__mbstate_t>*\29 can change the state due to std::__2::locale::__imp::install\28std::__2::locale::facet*\2c\20long\29
[asyncify] void\20std::__2::locale::__imp::install<std::__2::codecvt<char32_t\2c\20char\2c\20__mbstate_t>>\28std::__2::codecvt<char32_t\2c\20char\2c\20__mbstate_t>*\29 can change the state due to std::__2::locale::__imp::install\28std::__2::locale::facet*\2c\20long\29
[asyncify] void\20std::__2::locale::__imp::install<std::__2::codecvt<char16_t\2c\20char8_t\2c\20__mbstate_t>>\28std::__2::codecvt<char16_t\2c\20char8_t\2c\20__mbstate_t>*\29 can change the state due to std::__2::locale::__imp::install\28std::__2::locale::facet*\2c\20long\29
[asyncify] void\20std::__2::locale::__imp::install<std::__2::codecvt<char32_t\2c\20char8_t\2c\20__mbstate_t>>\28std::__2::codecvt<char32_t\2c\20char8_t\2c\20__mbstate_t>*\29 can change the state due to std::__2::locale::__imp::install\28std::__2::locale::facet*\2c\20long\29
[asyncify] void\20std::__2::locale::__imp::install<std::__2::numpunct<char>>\28std::__2::numpunct<char>*\29 can change the state due to std::__2::locale::__imp::install\28std::__2::locale::facet*\2c\20long\29
[asyncify] void\20std::__2::locale::__imp::install<std::__2::numpunct<wchar_t>>\28std::__2::numpunct<wchar_t>*\29 can change the state due to std::__2::locale::__imp::install\28std::__2::locale::facet*\2c\20long\29
[asyncify] void\20std::__2::locale::__imp::install<std::__2::num_get<char\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>>>\28std::__2::num_get<char\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>>*\29 can change the state due to std::__2::locale::__imp::install\28std::__2::locale::facet*\2c\20long\29
[asyncify] void\20std::__2::locale::__imp::install<std::__2::num_get<wchar_t\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>>\28std::__2::num_get<wchar_t\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>*\29 can change the state due to std::__2::locale::__imp::install\28std::__2::locale::facet*\2c\20long\29
[asyncify] void\20std::__2::locale::__imp::install<std::__2::num_put<char\2c\20std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>>>\28std::__2::num_put<char\2c\20std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>>*\29 can change the state due to std::__2::locale::__imp::install\28std::__2::locale::facet*\2c\20long\29
[asyncify] void\20std::__2::locale::__imp::install<std::__2::num_put<wchar_t\2c\20std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>>\28std::__2::num_put<wchar_t\2c\20std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>*\29 can change the state due to std::__2::locale::__imp::install\28std::__2::locale::facet*\2c\20long\29
[asyncify] void\20std::__2::locale::__imp::install<std::__2::moneypunct<char\2c\20false>>\28std::__2::moneypunct<char\2c\20false>*\29 can change the state due to std::__2::locale::__imp::install\28std::__2::locale::facet*\2c\20long\29
[asyncify] void\20std::__2::locale::__imp::install<std::__2::moneypunct<char\2c\20true>>\28std::__2::moneypunct<char\2c\20true>*\29 can change the state due to std::__2::locale::__imp::install\28std::__2::locale::facet*\2c\20long\29
[asyncify] void\20std::__2::locale::__imp::install<std::__2::moneypunct<wchar_t\2c\20false>>\28std::__2::moneypunct<wchar_t\2c\20false>*\29 can change the state due to std::__2::locale::__imp::install\28std::__2::locale::facet*\2c\20long\29
[asyncify] void\20std::__2::locale::__imp::install<std::__2::moneypunct<wchar_t\2c\20true>>\28std::__2::moneypunct<wchar_t\2c\20true>*\29 can change the state due to std::__2::locale::__imp::install\28std::__2::locale::facet*\2c\20long\29
[asyncify] void\20std::__2::locale::__imp::install<std::__2::money_get<char\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>>>\28std::__2::money_get<char\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>>*\29 can change the state due to std::__2::locale::__imp::install\28std::__2::locale::facet*\2c\20long\29
[asyncify] void\20std::__2::locale::__imp::install<std::__2::money_get<wchar_t\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>>\28std::__2::money_get<wchar_t\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>*\29 can change the state due to std::__2::locale::__imp::install\28std::__2::locale::facet*\2c\20long\29
[asyncify] void\20std::__2::locale::__imp::install<std::__2::money_put<char\2c\20std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>>>\28std::__2::money_put<char\2c\20std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>>*\29 can change the state due to std::__2::locale::__imp::install\28std::__2::locale::facet*\2c\20long\29
[asyncify] void\20std::__2::locale::__imp::install<std::__2::money_put<wchar_t\2c\20std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>>\28std::__2::money_put<wchar_t\2c\20std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>*\29 can change the state due to std::__2::locale::__imp::install\28std::__2::locale::facet*\2c\20long\29
[asyncify] void\20std::__2::locale::__imp::install<std::__2::time_get<char\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>>>\28std::__2::time_get<char\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>>*\29 can change the state due to std::__2::locale::__imp::install\28std::__2::locale::facet*\2c\20long\29
[asyncify] void\20std::__2::locale::__imp::install<std::__2::time_get<wchar_t\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>>\28std::__2::time_get<wchar_t\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>*\29 can change the state due to std::__2::locale::__imp::install\28std::__2::locale::facet*\2c\20long\29
[asyncify] void\20std::__2::locale::__imp::install<std::__2::time_put<char\2c\20std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>>>\28std::__2::time_put<char\2c\20std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>>*\29 can change the state due to std::__2::locale::__imp::install\28std::__2::locale::facet*\2c\20long\29
[asyncify] void\20std::__2::locale::__imp::install<std::__2::time_put<wchar_t\2c\20std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>>\28std::__2::time_put<wchar_t\2c\20std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>*\29 can change the state due to std::__2::locale::__imp::install\28std::__2::locale::facet*\2c\20long\29
[asyncify] void\20std::__2::locale::__imp::install<std::__2::messages<char>>\28std::__2::messages<char>*\29 can change the state due to std::__2::locale::__imp::install\28std::__2::locale::facet*\2c\20long\29
[asyncify] void\20std::__2::locale::__imp::install<std::__2::messages<wchar_t>>\28std::__2::messages<wchar_t>*\29 can change the state due to std::__2::locale::__imp::install\28std::__2::locale::facet*\2c\20long\29
[asyncify] void\20std::__2::locale::__imp::install<std::__2::collate_byname<char>>\28std::__2::collate_byname<char>*\29 can change the state due to std::__2::locale::__imp::install\28std::__2::locale::facet*\2c\20long\29
[asyncify] void\20std::__2::locale::__imp::install<std::__2::collate_byname<wchar_t>>\28std::__2::collate_byname<wchar_t>*\29 can change the state due to std::__2::locale::__imp::install\28std::__2::locale::facet*\2c\20long\29
[asyncify] void\20std::__2::locale::__imp::install_from<std::__2::moneypunct<wchar_t\2c\20false>>\28std::__2::locale::__imp\20const&\29 can change the state due to std::__2::locale::__imp::install\28std::__2::locale::facet*\2c\20long\29
[asyncify] void\20std::__2::locale::__imp::install<std::__2::ctype_byname<char>>\28std::__2::ctype_byname<char>*\29 can change the state due to std::__2::locale::__imp::install\28std::__2::locale::facet*\2c\20long\29
[asyncify] void\20std::__2::locale::__imp::install_from<std::__2::moneypunct<wchar_t\2c\20true>>\28std::__2::locale::__imp\20const&\29 can change the state due to std::__2::locale::__imp::install\28std::__2::locale::facet*\2c\20long\29
[asyncify] void\20std::__2::locale::__imp::install<std::__2::ctype_byname<wchar_t>>\28std::__2::ctype_byname<wchar_t>*\29 can change the state due to std::__2::locale::__imp::install\28std::__2::locale::facet*\2c\20long\29
[asyncify] void\20std::__2::locale::__imp::install<std::__2::codecvt_byname<char\2c\20char\2c\20__mbstate_t>>\28std::__2::codecvt_byname<char\2c\20char\2c\20__mbstate_t>*\29 can change the state due to std::__2::locale::__imp::install\28std::__2::locale::facet*\2c\20long\29
[asyncify] void\20std::__2::locale::__imp::install<std::__2::codecvt_byname<wchar_t\2c\20char\2c\20__mbstate_t>>\28std::__2::codecvt_byname<wchar_t\2c\20char\2c\20__mbstate_t>*\29 can change the state due to std::__2::locale::__imp::install\28std::__2::locale::facet*\2c\20long\29
[asyncify] void\20std::__2::locale::__imp::install<std::__2::codecvt_byname<char16_t\2c\20char\2c\20__mbstate_t>>\28std::__2::codecvt_byname<char16_t\2c\20char\2c\20__mbstate_t>*\29 can change the state due to std::__2::locale::__imp::install\28std::__2::locale::facet*\2c\20long\29
[asyncify] void\20std::__2::locale::__imp::install<std::__2::codecvt_byname<char32_t\2c\20char\2c\20__mbstate_t>>\28std::__2::codecvt_byname<char32_t\2c\20char\2c\20__mbstate_t>*\29 can change the state due to std::__2::locale::__imp::install\28std::__2::locale::facet*\2c\20long\29
[asyncify] void\20std::__2::locale::__imp::install<std::__2::codecvt_byname<char16_t\2c\20char8_t\2c\20__mbstate_t>>\28std::__2::codecvt_byname<char16_t\2c\20char8_t\2c\20__mbstate_t>*\29 can change the state due to std::__2::locale::__imp::install\28std::__2::locale::facet*\2c\20long\29
[asyncify] void\20std::__2::locale::__imp::install<std::__2::codecvt_byname<char32_t\2c\20char8_t\2c\20__mbstate_t>>\28std::__2::codecvt_byname<char32_t\2c\20char8_t\2c\20__mbstate_t>*\29 can change the state due to std::__2::locale::__imp::install\28std::__2::locale::facet*\2c\20long\29
[asyncify] void\20std::__2::locale::__imp::install<std::__2::numpunct_byname<char>>\28std::__2::numpunct_byname<char>*\29 can change the state due to std::__2::locale::__imp::install\28std::__2::locale::facet*\2c\20long\29
[asyncify] void\20std::__2::locale::__imp::install<std::__2::numpunct_byname<wchar_t>>\28std::__2::numpunct_byname<wchar_t>*\29 can change the state due to std::__2::locale::__imp::install\28std::__2::locale::facet*\2c\20long\29
[asyncify] void\20std::__2::locale::__imp::install<std::__2::moneypunct_byname<char\2c\20false>>\28std::__2::moneypunct_byname<char\2c\20false>*\29 can change the state due to std::__2::locale::__imp::install\28std::__2::locale::facet*\2c\20long\29
[asyncify] void\20std::__2::locale::__imp::install<std::__2::moneypunct_byname<char\2c\20true>>\28std::__2::moneypunct_byname<char\2c\20true>*\29 can change the state due to std::__2::locale::__imp::install\28std::__2::locale::facet*\2c\20long\29
[asyncify] void\20std::__2::locale::__imp::install<std::__2::moneypunct_byname<wchar_t\2c\20false>>\28std::__2::moneypunct_byname<wchar_t\2c\20false>*\29 can change the state due to std::__2::locale::__imp::install\28std::__2::locale::facet*\2c\20long\29
[asyncify] void\20std::__2::locale::__imp::install<std::__2::moneypunct_byname<wchar_t\2c\20true>>\28std::__2::moneypunct_byname<wchar_t\2c\20true>*\29 can change the state due to std::__2::locale::__imp::install\28std::__2::locale::facet*\2c\20long\29
[asyncify] void\20std::__2::locale::__imp::install<std::__2::time_get_byname<char\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>>>\28std::__2::time_get_byname<char\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>>*\29 can change the state due to std::__2::locale::__imp::install\28std::__2::locale::facet*\2c\20long\29
[asyncify] void\20std::__2::locale::__imp::install<std::__2::time_get_byname<wchar_t\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>>\28std::__2::time_get_byname<wchar_t\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>*\29 can change the state due to std::__2::locale::__imp::install\28std::__2::locale::facet*\2c\20long\29
[asyncify] void\20std::__2::locale::__imp::install<std::__2::time_put_byname<char\2c\20std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>>>\28std::__2::time_put_byname<char\2c\20std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>>*\29 can change the state due to std::__2::locale::__imp::install\28std::__2::locale::facet*\2c\20long\29
[asyncify] void\20std::__2::locale::__imp::install<std::__2::time_put_byname<wchar_t\2c\20std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>>\28std::__2::time_put_byname<wchar_t\2c\20std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>*\29 can change the state due to std::__2::locale::__imp::install\28std::__2::locale::facet*\2c\20long\29
[asyncify] void\20std::__2::locale::__imp::install<std::__2::messages_byname<char>>\28std::__2::messages_byname<char>*\29 can change the state due to std::__2::locale::__imp::install\28std::__2::locale::facet*\2c\20long\29
[asyncify] void\20std::__2::locale::__imp::install<std::__2::messages_byname<wchar_t>>\28std::__2::messages_byname<wchar_t>*\29 can change the state due to std::__2::locale::__imp::install\28std::__2::locale::facet*\2c\20long\29
[asyncify] void\20std::__2::locale::__imp::install_from<std::__2::collate<char>>\28std::__2::locale::__imp\20const&\29 can change the state due to std::__2::locale::__imp::install\28std::__2::locale::facet*\2c\20long\29
[asyncify] void\20std::__2::locale::__imp::install_from<std::__2::collate<wchar_t>>\28std::__2::locale::__imp\20const&\29 can change the state due to std::__2::locale::__imp::install\28std::__2::locale::facet*\2c\20long\29
[asyncify] void\20std::__2::locale::__imp::install_from<std::__2::ctype<char>>\28std::__2::locale::__imp\20const&\29 can change the state due to std::__2::locale::__imp::install\28std::__2::locale::facet*\2c\20long\29
[asyncify] void\20std::__2::locale::__imp::install_from<std::__2::ctype<wchar_t>>\28std::__2::locale::__imp\20const&\29 can change the state due to std::__2::locale::__imp::install\28std::__2::locale::facet*\2c\20long\29
[asyncify] void\20std::__2::locale::__imp::install_from<std::__2::codecvt<char\2c\20char\2c\20__mbstate_t>>\28std::__2::locale::__imp\20const&\29 can change the state due to std::__2::locale::__imp::install\28std::__2::locale::facet*\2c\20long\29
[asyncify] void\20std::__2::locale::__imp::install_from<std::__2::codecvt<char16_t\2c\20char\2c\20__mbstate_t>>\28std::__2::locale::__imp\20const&\29 can change the state due to std::__2::locale::__imp::install\28std::__2::locale::facet*\2c\20long\29
[asyncify] void\20std::__2::locale::__imp::install_from<std::__2::codecvt<char32_t\2c\20char\2c\20__mbstate_t>>\28std::__2::locale::__imp\20const&\29 can change the state due to std::__2::locale::__imp::install\28std::__2::locale::facet*\2c\20long\29
[asyncify] void\20std::__2::locale::__imp::install_from<std::__2::codecvt<char16_t\2c\20char8_t\2c\20__mbstate_t>>\28std::__2::locale::__imp\20const&\29 can change the state due to std::__2::locale::__imp::install\28std::__2::locale::facet*\2c\20long\29
[asyncify] void\20std::__2::locale::__imp::install_from<std::__2::codecvt<char32_t\2c\20char8_t\2c\20__mbstate_t>>\28std::__2::locale::__imp\20const&\29 can change the state due to std::__2::locale::__imp::install\28std::__2::locale::facet*\2c\20long\29
[asyncify] void\20std::__2::locale::__imp::install_from<std::__2::codecvt<wchar_t\2c\20char\2c\20__mbstate_t>>\28std::__2::locale::__imp\20const&\29 can change the state due to std::__2::locale::__imp::install\28std::__2::locale::facet*\2c\20long\29
[asyncify] void\20std::__2::locale::__imp::install_from<std::__2::moneypunct<char\2c\20false>>\28std::__2::locale::__imp\20const&\29 can change the state due to std::__2::locale::__imp::install\28std::__2::locale::facet*\2c\20long\29
[asyncify] void\20std::__2::locale::__imp::install_from<std::__2::moneypunct<char\2c\20true>>\28std::__2::locale::__imp\20const&\29 can change the state due to std::__2::locale::__imp::install\28std::__2::locale::facet*\2c\20long\29
[asyncify] void\20std::__2::locale::__imp::install_from<std::__2::money_get<char\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>>>\28std::__2::locale::__imp\20const&\29 can change the state due to std::__2::locale::__imp::install\28std::__2::locale::facet*\2c\20long\29
[asyncify] void\20std::__2::locale::__imp::install_from<std::__2::money_get<wchar_t\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>>\28std::__2::locale::__imp\20const&\29 can change the state due to std::__2::locale::__imp::install\28std::__2::locale::facet*\2c\20long\29
[asyncify] void\20std::__2::locale::__imp::install_from<std::__2::money_put<char\2c\20std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>>>\28std::__2::locale::__imp\20const&\29 can change the state due to std::__2::locale::__imp::install\28std::__2::locale::facet*\2c\20long\29
[asyncify] void\20std::__2::locale::__imp::install_from<std::__2::money_put<wchar_t\2c\20std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>>\28std::__2::locale::__imp\20const&\29 can change the state due to std::__2::locale::__imp::install\28std::__2::locale::facet*\2c\20long\29
[asyncify] void\20std::__2::locale::__imp::install_from<std::__2::numpunct<char>>\28std::__2::locale::__imp\20const&\29 can change the state due to std::__2::locale::__imp::install\28std::__2::locale::facet*\2c\20long\29
[asyncify] void\20std::__2::locale::__imp::install_from<std::__2::numpunct<wchar_t>>\28std::__2::locale::__imp\20const&\29 can change the state due to std::__2::locale::__imp::install\28std::__2::locale::facet*\2c\20long\29
[asyncify] void\20std::__2::locale::__imp::install_from<std::__2::num_get<char\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>>>\28std::__2::locale::__imp\20const&\29 can change the state due to std::__2::locale::__imp::install\28std::__2::locale::facet*\2c\20long\29
[asyncify] void\20std::__2::locale::__imp::install_from<std::__2::num_get<wchar_t\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>>\28std::__2::locale::__imp\20const&\29 can change the state due to std::__2::locale::__imp::install\28std::__2::locale::facet*\2c\20long\29
[asyncify] void\20std::__2::locale::__imp::install_from<std::__2::num_put<char\2c\20std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>>>\28std::__2::locale::__imp\20const&\29 can change the state due to std::__2::locale::__imp::install\28std::__2::locale::facet*\2c\20long\29
[asyncify] void\20std::__2::locale::__imp::install_from<std::__2::num_put<wchar_t\2c\20std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>>\28std::__2::locale::__imp\20const&\29 can change the state due to std::__2::locale::__imp::install\28std::__2::locale::facet*\2c\20long\29
[asyncify] void\20std::__2::locale::__imp::install_from<std::__2::time_get<char\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>>>\28std::__2::locale::__imp\20const&\29 can change the state due to std::__2::locale::__imp::install\28std::__2::locale::facet*\2c\20long\29
[asyncify] void\20std::__2::locale::__imp::install_from<std::__2::time_get<wchar_t\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>>\28std::__2::locale::__imp\20const&\29 can change the state due to std::__2::locale::__imp::install\28std::__2::locale::facet*\2c\20long\29
[asyncify] void\20std::__2::locale::__imp::install_from<std::__2::time_put<char\2c\20std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>>>\28std::__2::locale::__imp\20const&\29 can change the state due to std::__2::locale::__imp::install\28std::__2::locale::facet*\2c\20long\29
[asyncify] void\20std::__2::locale::__imp::install_from<std::__2::time_put<wchar_t\2c\20std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>>\28std::__2::locale::__imp\20const&\29 can change the state due to std::__2::locale::__imp::install\28std::__2::locale::facet*\2c\20long\29
[asyncify] void\20std::__2::locale::__imp::install_from<std::__2::messages<char>>\28std::__2::locale::__imp\20const&\29 can change the state due to std::__2::locale::__imp::install\28std::__2::locale::facet*\2c\20long\29
[asyncify] void\20std::__2::locale::__imp::install_from<std::__2::messages<wchar_t>>\28std::__2::locale::__imp\20const&\29 can change the state due to std::__2::locale::__imp::install\28std::__2::locale::facet*\2c\20long\29
[asyncify] std::__2::locale::__imp::__imp\28std::__2::locale::__imp\20const&\2c\20std::__2::locale::facet*\2c\20long\29 can change the state due to std::__2::locale::__imp::install\28std::__2::locale::facet*\2c\20long\29
[asyncify] std::__2::locale::__imp::~__imp\28\29.1 can change the state due to std::__2::locale::__imp::~__imp\28\29
[asyncify] std::__2::basic_streambuf<char\2c\20std::__2::char_traits<char>>::~basic_streambuf\28\29 can change the state due to std::__2::locale::~locale\28\29
[asyncify] std::__2::enable_if<is_move_constructible<std::__2::locale>::value\20&&\20is_move_assignable<std::__2::locale>::value\2c\20void>::type\20std::__2::swap\5babi:v15006\5d<std::__2::locale>\28std::__2::locale&\2c\20std::__2::locale&\29 can change the state due to std::__2::locale::~locale\28\29
[asyncify] std::__2::basic_istream<char\2c\20std::__2::char_traits<char>>::sentry::sentry\28std::__2::basic_istream<char\2c\20std::__2::char_traits<char>>&\2c\20bool\29 can change the state due to std::__2::locale::~locale\28\29
[asyncify] std::__2::basic_streambuf<wchar_t\2c\20std::__2::char_traits<wchar_t>>::~basic_streambuf\28\29 can change the state due to std::__2::locale::~locale\28\29
[asyncify] std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>\20std::__2::num_put<char\2c\20std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>>::__do_put_integral\5babi:v15006\5d<long>\28std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::ios_base&\2c\20char\2c\20long\2c\20char\20const*\29\20const can change the state due to std::__2::locale::~locale\28\29
[asyncify] std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>\20std::__2::num_put<char\2c\20std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>>::__do_put_integral\5babi:v15006\5d<long\20long>\28std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::ios_base&\2c\20char\2c\20long\20long\2c\20char\20const*\29\20const can change the state due to std::__2::locale::~locale\28\29
[asyncify] std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>\20std::__2::num_put<char\2c\20std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>>::__do_put_integral\5babi:v15006\5d<unsigned\20long>\28std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::ios_base&\2c\20char\2c\20unsigned\20long\2c\20char\20const*\29\20const can change the state due to std::__2::locale::~locale\28\29
[asyncify] std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>\20std::__2::num_put<char\2c\20std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>>::__do_put_integral\5babi:v15006\5d<unsigned\20long\20long>\28std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::ios_base&\2c\20char\2c\20unsigned\20long\20long\2c\20char\20const*\29\20const can change the state due to std::__2::locale::~locale\28\29
[asyncify] std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\20std::__2::num_put<wchar_t\2c\20std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>::__do_put_integral\5babi:v15006\5d<long>\28std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::ios_base&\2c\20wchar_t\2c\20long\2c\20char\20const*\29\20const can change the state due to std::__2::locale::~locale\28\29
[asyncify] std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\20std::__2::num_put<wchar_t\2c\20std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>::__do_put_integral\5babi:v15006\5d<long\20long>\28std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::ios_base&\2c\20wchar_t\2c\20long\20long\2c\20char\20const*\29\20const can change the state due to std::__2::locale::~locale\28\29
[asyncify] std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\20std::__2::num_put<wchar_t\2c\20std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>::__do_put_integral\5babi:v15006\5d<unsigned\20long>\28std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::ios_base&\2c\20wchar_t\2c\20unsigned\20long\2c\20char\20const*\29\20const can change the state due to std::__2::locale::~locale\28\29
[asyncify] std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\20std::__2::num_put<wchar_t\2c\20std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>::__do_put_integral\5babi:v15006\5d<unsigned\20long\20long>\28std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::ios_base&\2c\20wchar_t\2c\20unsigned\20long\20long\2c\20char\20const*\29\20const can change the state due to std::__2::locale::~locale\28\29
[asyncify] std::__2::time_get<char\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>>::do_get_year\28std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::ios_base&\2c\20unsigned\20int&\2c\20tm*\29\20const can change the state due to std::__2::locale::~locale\28\29
[asyncify] std::__2::time_get<wchar_t\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>::do_get_year\28std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::ios_base&\2c\20unsigned\20int&\2c\20tm*\29\20const can change the state due to std::__2::locale::~locale\28\29
[asyncify] std::__2::basic_streambuf<char\2c\20std::__2::char_traits<char>>::operator=\28std::__2::basic_streambuf<char\2c\20std::__2::char_traits<char>>\20const&\29 can change the state due to std::__2::locale::operator=\28std::__2::locale\20const&\29
[asyncify] std::__2::basic_streambuf<wchar_t\2c\20std::__2::char_traits<wchar_t>>::operator=\28std::__2::basic_streambuf<wchar_t\2c\20std::__2::char_traits<wchar_t>>\20const&\29 can change the state due to std::__2::locale::operator=\28std::__2::locale\20const&\29
[asyncify] std::__2::locale::global\28std::__2::locale\20const&\29 can change the state due to std::__2::locale::operator=\28std::__2::locale\20const&\29
[asyncify] std::__2::unique_ptr<std::__2::locale::facet\2c\20std::__2::\28anonymous\20namespace\29::release>::reset\5babi:v15006\5d\28std::__2::locale::facet*\29 can change the state due to std::__2::\28anonymous\20namespace\29::release::operator\28\29\28std::__2::locale::facet*\29
[asyncify] std::__2::__thread_struct::~__thread_struct\28\29 can change the state due to std::__2::__thread_struct_imp::~__thread_struct_imp\28\29
[asyncify] std::__2::future<void>::get\28\29 can change the state due to std::__2::__assoc_sub_state::copy\28\29
[asyncify] std::__2::basic_ostream<char\2c\20std::__2::char_traits<char>>::sentry::sentry\28std::__2::basic_ostream<char\2c\20std::__2::char_traits<char>>&\29 can change the state due to std::__2::basic_ostream<char\2c\20std::__2::char_traits<char>>::flush\28\29
[asyncify] std::__2::DoIOSInit::~DoIOSInit\28\29 can change the state due to std::__2::basic_ostream<char\2c\20std::__2::char_traits<char>>::flush\28\29
[asyncify] std::__2::basic_ostream<char\2c\20std::__2::char_traits<char>>::operator<<\28std::__2::basic_streambuf<char\2c\20std::__2::char_traits<char>>*\29 can change the state due to std::__2::basic_ostream<char\2c\20std::__2::char_traits<char>>::sentry::~sentry\28\29
[asyncify] std::__2::basic_ostream<char\2c\20std::__2::char_traits<char>>::put\28char\29 can change the state due to std::__2::basic_ostream<char\2c\20std::__2::char_traits<char>>::sentry::~sentry\28\29
[asyncify] std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\20std::__2::num_get<char\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>>::__do_get_signed<long>\28std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::ios_base&\2c\20unsigned\20int&\2c\20long&\29\20const can change the state due to std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>::operator*\5babi:v15006\5d\28\29\20const
[asyncify] std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\20std::__2::num_get<char\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>>::__do_get_signed<long\20long>\28std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::ios_base&\2c\20unsigned\20int&\2c\20long\20long&\29\20const can change the state due to std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>::operator*\5babi:v15006\5d\28\29\20const
[asyncify] std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\20std::__2::num_get<char\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>>::__do_get_unsigned<unsigned\20short>\28std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::ios_base&\2c\20unsigned\20int&\2c\20unsigned\20short&\29\20const can change the state due to std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>::operator*\5babi:v15006\5d\28\29\20const
[asyncify] std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\20std::__2::num_get<char\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>>::__do_get_unsigned<unsigned\20int>\28std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::ios_base&\2c\20unsigned\20int&\2c\20unsigned\20int&\29\20const can change the state due to std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>::operator*\5babi:v15006\5d\28\29\20const
[asyncify] std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\20std::__2::num_get<char\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>>::__do_get_unsigned<unsigned\20long>\28std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::ios_base&\2c\20unsigned\20int&\2c\20unsigned\20long&\29\20const can change the state due to std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>::operator*\5babi:v15006\5d\28\29\20const
[asyncify] std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\20std::__2::num_get<char\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>>::__do_get_unsigned<unsigned\20long\20long>\28std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::ios_base&\2c\20unsigned\20int&\2c\20unsigned\20long\20long&\29\20const can change the state due to std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>::operator*\5babi:v15006\5d\28\29\20const
[asyncify] std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\20std::__2::num_get<char\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>>::__do_get_floating_point<float>\28std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::ios_base&\2c\20unsigned\20int&\2c\20float&\29\20const can change the state due to std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>::operator*\5babi:v15006\5d\28\29\20const
[asyncify] std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\20std::__2::num_get<char\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>>::__do_get_floating_point<double>\28std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::ios_base&\2c\20unsigned\20int&\2c\20double&\29\20const can change the state due to std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>::operator*\5babi:v15006\5d\28\29\20const
[asyncify] std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\20std::__2::num_get<char\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>>::__do_get_floating_point<long\20double>\28std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::ios_base&\2c\20unsigned\20int&\2c\20long\20double&\29\20const can change the state due to std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>::operator*\5babi:v15006\5d\28\29\20const
[asyncify] std::__2::time_get<char\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>>::__get_white_space\28std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>&\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20unsigned\20int&\2c\20std::__2::ctype<char>\20const&\29\20const can change the state due to std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>::operator*\5babi:v15006\5d\28\29\20const
[asyncify] std::__2::money_get<char\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>>::__do_get\28std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>&\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20bool\2c\20std::__2::locale\20const&\2c\20unsigned\20int\2c\20unsigned\20int&\2c\20bool&\2c\20std::__2::ctype<char>\20const&\2c\20std::__2::unique_ptr<char\2c\20void\20\28*\29\28void*\29>&\2c\20char*&\2c\20char*\29 can change the state due to std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>::operator*\5babi:v15006\5d\28\29\20const
[asyncify] std::__2::pair<std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>>\20std::__2::__copy_impl\5babi:v15006\5d<std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>>\28std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>\29 can change the state due to std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>::operator*\5babi:v15006\5d\28\29\20const
[asyncify] std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>::equal\5babi:v15006\5d\28std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\20const&\29\20const can change the state due to std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>::__test_for_eof\5babi:v15006\5d\28\29\20const
[asyncify] std::__2::pair<char*\2c\20std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>>\20std::__2::__copy_impl\5babi:v15006\5d<char*\2c\20char*\2c\20std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>>\28char*\2c\20char*\2c\20std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>\29 can change the state due to std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>::operator=\5babi:v15006\5d\28char\29
[asyncify] std::__2::basic_istream<char\2c\20std::__2::char_traits<char>>::operator>>\28bool&\29 can change the state due to std::__2::basic_istream<char\2c\20std::__2::char_traits<char>>&\20std::__2::__input_arithmetic\5babi:v15006\5d<bool\2c\20char\2c\20std::__2::char_traits<char>>\28std::__2::basic_istream<char\2c\20std::__2::char_traits<char>>&\2c\20bool&\29
[asyncify] std::__2::basic_istream<char\2c\20std::__2::char_traits<char>>::operator>>\28short&\29 can change the state due to std::__2::basic_istream<char\2c\20std::__2::char_traits<char>>&\20std::__2::__input_arithmetic_with_numeric_limits\5babi:v15006\5d<short\2c\20char\2c\20std::__2::char_traits<char>>\28std::__2::basic_istream<char\2c\20std::__2::char_traits<char>>&\2c\20short&\29
[asyncify] std::__2::basic_istream<char\2c\20std::__2::char_traits<char>>::operator>>\28int&\29 can change the state due to std::__2::basic_istream<char\2c\20std::__2::char_traits<char>>&\20std::__2::__input_arithmetic_with_numeric_limits\5babi:v15006\5d<int\2c\20char\2c\20std::__2::char_traits<char>>\28std::__2::basic_istream<char\2c\20std::__2::char_traits<char>>&\2c\20int&\29
[asyncify] std::__2::basic_istream<char\2c\20std::__2::char_traits<char>>::operator>>\28long&\29 can change the state due to std::__2::basic_istream<char\2c\20std::__2::char_traits<char>>&\20std::__2::__input_arithmetic\5babi:v15006\5d<long\2c\20char\2c\20std::__2::char_traits<char>>\28std::__2::basic_istream<char\2c\20std::__2::char_traits<char>>&\2c\20long&\29
[asyncify] std::__2::basic_istream<char\2c\20std::__2::char_traits<char>>::operator>>\28unsigned\20short&\29 can change the state due to std::__2::basic_istream<char\2c\20std::__2::char_traits<char>>&\20std::__2::__input_arithmetic\5babi:v15006\5d<unsigned\20short\2c\20char\2c\20std::__2::char_traits<char>>\28std::__2::basic_istream<char\2c\20std::__2::char_traits<char>>&\2c\20unsigned\20short&\29
[asyncify] std::__2::basic_istream<char\2c\20std::__2::char_traits<char>>::operator>>\28unsigned\20int&\29 can change the state due to std::__2::basic_istream<char\2c\20std::__2::char_traits<char>>&\20std::__2::__input_arithmetic\5babi:v15006\5d<unsigned\20int\2c\20char\2c\20std::__2::char_traits<char>>\28std::__2::basic_istream<char\2c\20std::__2::char_traits<char>>&\2c\20unsigned\20int&\29
[asyncify] std::__2::basic_istream<char\2c\20std::__2::char_traits<char>>::operator>>\28unsigned\20long&\29 can change the state due to std::__2::basic_istream<char\2c\20std::__2::char_traits<char>>&\20std::__2::__input_arithmetic\5babi:v15006\5d<unsigned\20long\2c\20char\2c\20std::__2::char_traits<char>>\28std::__2::basic_istream<char\2c\20std::__2::char_traits<char>>&\2c\20unsigned\20long&\29
[asyncify] std::__2::basic_istream<char\2c\20std::__2::char_traits<char>>::operator>>\28long\20long&\29 can change the state due to std::__2::basic_istream<char\2c\20std::__2::char_traits<char>>&\20std::__2::__input_arithmetic\5babi:v15006\5d<long\20long\2c\20char\2c\20std::__2::char_traits<char>>\28std::__2::basic_istream<char\2c\20std::__2::char_traits<char>>&\2c\20long\20long&\29
[asyncify] std::__2::basic_istream<char\2c\20std::__2::char_traits<char>>::operator>>\28unsigned\20long\20long&\29 can change the state due to std::__2::basic_istream<char\2c\20std::__2::char_traits<char>>&\20std::__2::__input_arithmetic\5babi:v15006\5d<unsigned\20long\20long\2c\20char\2c\20std::__2::char_traits<char>>\28std::__2::basic_istream<char\2c\20std::__2::char_traits<char>>&\2c\20unsigned\20long\20long&\29
[asyncify] std::__2::basic_istream<char\2c\20std::__2::char_traits<char>>::operator>>\28float&\29 can change the state due to std::__2::basic_istream<char\2c\20std::__2::char_traits<char>>&\20std::__2::__input_arithmetic\5babi:v15006\5d<float\2c\20char\2c\20std::__2::char_traits<char>>\28std::__2::basic_istream<char\2c\20std::__2::char_traits<char>>&\2c\20float&\29
[asyncify] std::__2::basic_istream<char\2c\20std::__2::char_traits<char>>::operator>>\28double&\29 can change the state due to std::__2::basic_istream<char\2c\20std::__2::char_traits<char>>&\20std::__2::__input_arithmetic\5babi:v15006\5d<double\2c\20char\2c\20std::__2::char_traits<char>>\28std::__2::basic_istream<char\2c\20std::__2::char_traits<char>>&\2c\20double&\29
[asyncify] std::__2::basic_istream<char\2c\20std::__2::char_traits<char>>::operator>>\28long\20double&\29 can change the state due to std::__2::basic_istream<char\2c\20std::__2::char_traits<char>>&\20std::__2::__input_arithmetic\5babi:v15006\5d<long\20double\2c\20char\2c\20std::__2::char_traits<char>>\28std::__2::basic_istream<char\2c\20std::__2::char_traits<char>>&\2c\20long\20double&\29
[asyncify] std::__2::basic_istream<char\2c\20std::__2::char_traits<char>>::operator>>\28void*&\29 can change the state due to std::__2::basic_istream<char\2c\20std::__2::char_traits<char>>&\20std::__2::__input_arithmetic\5babi:v15006\5d<void*\2c\20char\2c\20std::__2::char_traits<char>>\28std::__2::basic_istream<char\2c\20std::__2::char_traits<char>>&\2c\20void*&\29
[asyncify] MT32Emu::FileStream::getSize\28\29 can change the state due to std::__2::basic_istream<char\2c\20std::__2::char_traits<char>>::tellg\28\29
[asyncify] legalstub$std::__2::basic_istream<char\2c\20std::__2::char_traits<char>>::seekg\28long\20long\2c\20std::__2::ios_base::seekdir\29 can change the state due to std::__2::basic_istream<char\2c\20std::__2::char_traits<char>>::seekg\28long\20long\2c\20std::__2::ios_base::seekdir\29
[asyncify] legalstub$std::__2::basic_ostream<char\2c\20std::__2::char_traits<char>>::operator<<\28long\20long\29 can change the state due to std::__2::basic_ostream<char\2c\20std::__2::char_traits<char>>::operator<<\28long\20long\29
[asyncify] legalstub$std::__2::basic_ostream<char\2c\20std::__2::char_traits<char>>::operator<<\28unsigned\20long\20long\29 can change the state due to std::__2::basic_ostream<char\2c\20std::__2::char_traits<char>>::operator<<\28unsigned\20long\20long\29
[asyncify] legalstub$std::__2::basic_ostream<char\2c\20std::__2::char_traits<char>>::operator<<\28long\20double\29 can change the state due to std::__2::basic_ostream<char\2c\20std::__2::char_traits<char>>::operator<<\28long\20double\29
[asyncify] std::__2::time_get<wchar_t\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>::__get_year\28int&\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>&\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20unsigned\20int&\2c\20std::__2::ctype<wchar_t>\20const&\29\20const can change the state due to int\20std::__2::__get_up_to_n_digits<wchar_t\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>\28std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>&\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20unsigned\20int&\2c\20std::__2::ctype<wchar_t>\20const&\2c\20int\29
[asyncify] std::__2::time_get<wchar_t\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>::__get_day\28int&\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>&\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20unsigned\20int&\2c\20std::__2::ctype<wchar_t>\20const&\29\20const can change the state due to int\20std::__2::__get_up_to_n_digits<wchar_t\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>\28std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>&\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20unsigned\20int&\2c\20std::__2::ctype<wchar_t>\20const&\2c\20int\29
[asyncify] std::__2::time_get<wchar_t\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>::__get_hour\28int&\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>&\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20unsigned\20int&\2c\20std::__2::ctype<wchar_t>\20const&\29\20const can change the state due to int\20std::__2::__get_up_to_n_digits<wchar_t\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>\28std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>&\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20unsigned\20int&\2c\20std::__2::ctype<wchar_t>\20const&\2c\20int\29
[asyncify] std::__2::time_get<wchar_t\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>::__get_12_hour\28int&\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>&\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20unsigned\20int&\2c\20std::__2::ctype<wchar_t>\20const&\29\20const can change the state due to int\20std::__2::__get_up_to_n_digits<wchar_t\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>\28std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>&\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20unsigned\20int&\2c\20std::__2::ctype<wchar_t>\20const&\2c\20int\29
[asyncify] std::__2::time_get<wchar_t\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>::__get_day_year_num\28int&\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>&\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20unsigned\20int&\2c\20std::__2::ctype<wchar_t>\20const&\29\20const can change the state due to int\20std::__2::__get_up_to_n_digits<wchar_t\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>\28std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>&\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20unsigned\20int&\2c\20std::__2::ctype<wchar_t>\20const&\2c\20int\29
[asyncify] std::__2::time_get<wchar_t\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>::__get_month\28int&\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>&\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20unsigned\20int&\2c\20std::__2::ctype<wchar_t>\20const&\29\20const can change the state due to int\20std::__2::__get_up_to_n_digits<wchar_t\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>\28std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>&\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20unsigned\20int&\2c\20std::__2::ctype<wchar_t>\20const&\2c\20int\29
[asyncify] std::__2::time_get<wchar_t\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>::__get_minute\28int&\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>&\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20unsigned\20int&\2c\20std::__2::ctype<wchar_t>\20const&\29\20const can change the state due to int\20std::__2::__get_up_to_n_digits<wchar_t\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>\28std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>&\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20unsigned\20int&\2c\20std::__2::ctype<wchar_t>\20const&\2c\20int\29
[asyncify] std::__2::time_get<wchar_t\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>::__get_second\28int&\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>&\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20unsigned\20int&\2c\20std::__2::ctype<wchar_t>\20const&\29\20const can change the state due to int\20std::__2::__get_up_to_n_digits<wchar_t\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>\28std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>&\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20unsigned\20int&\2c\20std::__2::ctype<wchar_t>\20const&\2c\20int\29
[asyncify] std::__2::time_get<wchar_t\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>::__get_weekday\28int&\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>&\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20unsigned\20int&\2c\20std::__2::ctype<wchar_t>\20const&\29\20const can change the state due to int\20std::__2::__get_up_to_n_digits<wchar_t\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>\28std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>&\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20unsigned\20int&\2c\20std::__2::ctype<wchar_t>\20const&\2c\20int\29
[asyncify] std::__2::time_get<wchar_t\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>::__get_year4\28int&\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>&\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20unsigned\20int&\2c\20std::__2::ctype<wchar_t>\20const&\29\20const can change the state due to int\20std::__2::__get_up_to_n_digits<wchar_t\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>\28std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>&\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20unsigned\20int&\2c\20std::__2::ctype<wchar_t>\20const&\2c\20int\29
[asyncify] std::__2::__time_get_storage<wchar_t>::init\28std::__2::ctype<wchar_t>\20const&\29 can change the state due to std::__2::__time_get_storage<wchar_t>::__analyze\28char\2c\20std::__2::ctype<wchar_t>\20const&\29
[asyncify] std::__2::basic_ostream<wchar_t\2c\20std::__2::char_traits<wchar_t>>::sentry::sentry\28std::__2::basic_ostream<wchar_t\2c\20std::__2::char_traits<wchar_t>>&\29 can change the state due to std::__2::basic_ostream<wchar_t\2c\20std::__2::char_traits<wchar_t>>::flush\28\29
[asyncify] std::__2::basic_ostream<wchar_t\2c\20std::__2::char_traits<wchar_t>>::operator<<\28std::__2::basic_streambuf<wchar_t\2c\20std::__2::char_traits<wchar_t>>*\29 can change the state due to std::__2::basic_ostream<wchar_t\2c\20std::__2::char_traits<wchar_t>>::sentry::~sentry\28\29
[asyncify] std::__2::basic_ostream<wchar_t\2c\20std::__2::char_traits<wchar_t>>::put\28wchar_t\29 can change the state due to std::__2::basic_ostream<wchar_t\2c\20std::__2::char_traits<wchar_t>>::sentry::~sentry\28\29
[asyncify] std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\20std::__2::num_get<wchar_t\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>::__do_get_signed<long>\28std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::ios_base&\2c\20unsigned\20int&\2c\20long&\29\20const can change the state due to std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>::operator*\5babi:v15006\5d\28\29\20const
[asyncify] std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\20std::__2::num_get<wchar_t\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>::__do_get_signed<long\20long>\28std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::ios_base&\2c\20unsigned\20int&\2c\20long\20long&\29\20const can change the state due to std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>::operator*\5babi:v15006\5d\28\29\20const
[asyncify] std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\20std::__2::num_get<wchar_t\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>::__do_get_unsigned<unsigned\20short>\28std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::ios_base&\2c\20unsigned\20int&\2c\20unsigned\20short&\29\20const can change the state due to std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>::operator*\5babi:v15006\5d\28\29\20const
[asyncify] std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\20std::__2::num_get<wchar_t\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>::__do_get_unsigned<unsigned\20int>\28std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::ios_base&\2c\20unsigned\20int&\2c\20unsigned\20int&\29\20const can change the state due to std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>::operator*\5babi:v15006\5d\28\29\20const
[asyncify] std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\20std::__2::num_get<wchar_t\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>::__do_get_unsigned<unsigned\20long>\28std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::ios_base&\2c\20unsigned\20int&\2c\20unsigned\20long&\29\20const can change the state due to std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>::operator*\5babi:v15006\5d\28\29\20const
[asyncify] std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\20std::__2::num_get<wchar_t\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>::__do_get_unsigned<unsigned\20long\20long>\28std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::ios_base&\2c\20unsigned\20int&\2c\20unsigned\20long\20long&\29\20const can change the state due to std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>::operator*\5babi:v15006\5d\28\29\20const
[asyncify] std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\20std::__2::num_get<wchar_t\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>::__do_get_floating_point<float>\28std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::ios_base&\2c\20unsigned\20int&\2c\20float&\29\20const can change the state due to std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>::operator*\5babi:v15006\5d\28\29\20const
[asyncify] std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\20std::__2::num_get<wchar_t\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>::__do_get_floating_point<double>\28std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::ios_base&\2c\20unsigned\20int&\2c\20double&\29\20const can change the state due to std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>::operator*\5babi:v15006\5d\28\29\20const
[asyncify] std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\20std::__2::num_get<wchar_t\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>::__do_get_floating_point<long\20double>\28std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::ios_base&\2c\20unsigned\20int&\2c\20long\20double&\29\20const can change the state due to std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>::operator*\5babi:v15006\5d\28\29\20const
[asyncify] std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>::equal\5babi:v15006\5d\28std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\20const&\29\20const can change the state due to std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>::__test_for_eof\5babi:v15006\5d\28\29\20const
[asyncify] std::__2::pair<wchar_t*\2c\20std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>\20std::__2::__copy_impl\5babi:v15006\5d<wchar_t*\2c\20wchar_t*\2c\20std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>\28wchar_t*\2c\20wchar_t*\2c\20std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\29 can change the state due to std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>::operator=\5babi:v15006\5d\28wchar_t\29
[asyncify] std::__2::basic_istream<wchar_t\2c\20std::__2::char_traits<wchar_t>>::operator>>\28bool&\29 can change the state due to std::__2::basic_istream<wchar_t\2c\20std::__2::char_traits<wchar_t>>&\20std::__2::__input_arithmetic\5babi:v15006\5d<bool\2c\20wchar_t\2c\20std::__2::char_traits<wchar_t>>\28std::__2::basic_istream<wchar_t\2c\20std::__2::char_traits<wchar_t>>&\2c\20bool&\29
[asyncify] std::__2::basic_istream<wchar_t\2c\20std::__2::char_traits<wchar_t>>::operator>>\28short&\29 can change the state due to std::__2::basic_istream<wchar_t\2c\20std::__2::char_traits<wchar_t>>&\20std::__2::__input_arithmetic_with_numeric_limits\5babi:v15006\5d<short\2c\20wchar_t\2c\20std::__2::char_traits<wchar_t>>\28std::__2::basic_istream<wchar_t\2c\20std::__2::char_traits<wchar_t>>&\2c\20short&\29
[asyncify] std::__2::basic_istream<wchar_t\2c\20std::__2::char_traits<wchar_t>>::operator>>\28int&\29 can change the state due to std::__2::basic_istream<wchar_t\2c\20std::__2::char_traits<wchar_t>>&\20std::__2::__input_arithmetic_with_numeric_limits\5babi:v15006\5d<int\2c\20wchar_t\2c\20std::__2::char_traits<wchar_t>>\28std::__2::basic_istream<wchar_t\2c\20std::__2::char_traits<wchar_t>>&\2c\20int&\29
[asyncify] std::__2::basic_istream<wchar_t\2c\20std::__2::char_traits<wchar_t>>::operator>>\28long&\29 can change the state due to std::__2::basic_istream<wchar_t\2c\20std::__2::char_traits<wchar_t>>&\20std::__2::__input_arithmetic\5babi:v15006\5d<long\2c\20wchar_t\2c\20std::__2::char_traits<wchar_t>>\28std::__2::basic_istream<wchar_t\2c\20std::__2::char_traits<wchar_t>>&\2c\20long&\29
[asyncify] std::__2::basic_istream<wchar_t\2c\20std::__2::char_traits<wchar_t>>::operator>>\28unsigned\20short&\29 can change the state due to std::__2::basic_istream<wchar_t\2c\20std::__2::char_traits<wchar_t>>&\20std::__2::__input_arithmetic\5babi:v15006\5d<unsigned\20short\2c\20wchar_t\2c\20std::__2::char_traits<wchar_t>>\28std::__2::basic_istream<wchar_t\2c\20std::__2::char_traits<wchar_t>>&\2c\20unsigned\20short&\29
[asyncify] std::__2::basic_istream<wchar_t\2c\20std::__2::char_traits<wchar_t>>::operator>>\28unsigned\20int&\29 can change the state due to std::__2::basic_istream<wchar_t\2c\20std::__2::char_traits<wchar_t>>&\20std::__2::__input_arithmetic\5babi:v15006\5d<unsigned\20int\2c\20wchar_t\2c\20std::__2::char_traits<wchar_t>>\28std::__2::basic_istream<wchar_t\2c\20std::__2::char_traits<wchar_t>>&\2c\20unsigned\20int&\29
[asyncify] std::__2::basic_istream<wchar_t\2c\20std::__2::char_traits<wchar_t>>::operator>>\28unsigned\20long&\29 can change the state due to std::__2::basic_istream<wchar_t\2c\20std::__2::char_traits<wchar_t>>&\20std::__2::__input_arithmetic\5babi:v15006\5d<unsigned\20long\2c\20wchar_t\2c\20std::__2::char_traits<wchar_t>>\28std::__2::basic_istream<wchar_t\2c\20std::__2::char_traits<wchar_t>>&\2c\20unsigned\20long&\29
[asyncify] std::__2::basic_istream<wchar_t\2c\20std::__2::char_traits<wchar_t>>::operator>>\28long\20long&\29 can change the state due to std::__2::basic_istream<wchar_t\2c\20std::__2::char_traits<wchar_t>>&\20std::__2::__input_arithmetic\5babi:v15006\5d<long\20long\2c\20wchar_t\2c\20std::__2::char_traits<wchar_t>>\28std::__2::basic_istream<wchar_t\2c\20std::__2::char_traits<wchar_t>>&\2c\20long\20long&\29
[asyncify] std::__2::basic_istream<wchar_t\2c\20std::__2::char_traits<wchar_t>>::operator>>\28unsigned\20long\20long&\29 can change the state due to std::__2::basic_istream<wchar_t\2c\20std::__2::char_traits<wchar_t>>&\20std::__2::__input_arithmetic\5babi:v15006\5d<unsigned\20long\20long\2c\20wchar_t\2c\20std::__2::char_traits<wchar_t>>\28std::__2::basic_istream<wchar_t\2c\20std::__2::char_traits<wchar_t>>&\2c\20unsigned\20long\20long&\29
[asyncify] std::__2::basic_istream<wchar_t\2c\20std::__2::char_traits<wchar_t>>::operator>>\28float&\29 can change the state due to std::__2::basic_istream<wchar_t\2c\20std::__2::char_traits<wchar_t>>&\20std::__2::__input_arithmetic\5babi:v15006\5d<float\2c\20wchar_t\2c\20std::__2::char_traits<wchar_t>>\28std::__2::basic_istream<wchar_t\2c\20std::__2::char_traits<wchar_t>>&\2c\20float&\29
[asyncify] std::__2::basic_istream<wchar_t\2c\20std::__2::char_traits<wchar_t>>::operator>>\28double&\29 can change the state due to std::__2::basic_istream<wchar_t\2c\20std::__2::char_traits<wchar_t>>&\20std::__2::__input_arithmetic\5babi:v15006\5d<double\2c\20wchar_t\2c\20std::__2::char_traits<wchar_t>>\28std::__2::basic_istream<wchar_t\2c\20std::__2::char_traits<wchar_t>>&\2c\20double&\29
[asyncify] std::__2::basic_istream<wchar_t\2c\20std::__2::char_traits<wchar_t>>::operator>>\28long\20double&\29 can change the state due to std::__2::basic_istream<wchar_t\2c\20std::__2::char_traits<wchar_t>>&\20std::__2::__input_arithmetic\5babi:v15006\5d<long\20double\2c\20wchar_t\2c\20std::__2::char_traits<wchar_t>>\28std::__2::basic_istream<wchar_t\2c\20std::__2::char_traits<wchar_t>>&\2c\20long\20double&\29
[asyncify] std::__2::basic_istream<wchar_t\2c\20std::__2::char_traits<wchar_t>>::operator>>\28void*&\29 can change the state due to std::__2::basic_istream<wchar_t\2c\20std::__2::char_traits<wchar_t>>&\20std::__2::__input_arithmetic\5babi:v15006\5d<void*\2c\20wchar_t\2c\20std::__2::char_traits<wchar_t>>\28std::__2::basic_istream<wchar_t\2c\20std::__2::char_traits<wchar_t>>&\2c\20void*&\29
[asyncify] legalstub$std::__2::basic_istream<wchar_t\2c\20std::__2::char_traits<wchar_t>>::seekg\28long\20long\2c\20std::__2::ios_base::seekdir\29 can change the state due to std::__2::basic_istream<wchar_t\2c\20std::__2::char_traits<wchar_t>>::seekg\28long\20long\2c\20std::__2::ios_base::seekdir\29
[asyncify] legalstub$std::__2::basic_ostream<wchar_t\2c\20std::__2::char_traits<wchar_t>>::operator<<\28long\20long\29 can change the state due to std::__2::basic_ostream<wchar_t\2c\20std::__2::char_traits<wchar_t>>::operator<<\28long\20long\29
[asyncify] legalstub$std::__2::basic_ostream<wchar_t\2c\20std::__2::char_traits<wchar_t>>::operator<<\28unsigned\20long\20long\29 can change the state due to std::__2::basic_ostream<wchar_t\2c\20std::__2::char_traits<wchar_t>>::operator<<\28unsigned\20long\20long\29
[asyncify] legalstub$std::__2::basic_ostream<wchar_t\2c\20std::__2::char_traits<wchar_t>>::operator<<\28long\20double\29 can change the state due to std::__2::basic_ostream<wchar_t\2c\20std::__2::char_traits<wchar_t>>::operator<<\28long\20double\29
[asyncify] std::__2::basic_stringstream<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::operator=\28std::__2::basic_stringstream<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>&&\29 can change the state due to std::__2::basic_stringbuf<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::operator=\28std::__2::basic_stringbuf<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>&&\29
[asyncify] std::__2::basic_ostringstream<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::operator=\28std::__2::basic_ostringstream<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>&&\29 can change the state due to std::__2::basic_stringbuf<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::operator=\28std::__2::basic_stringbuf<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>&&\29
[asyncify] std::__2::basic_istringstream<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::operator=\28std::__2::basic_istringstream<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>&&\29 can change the state due to std::__2::basic_stringbuf<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::operator=\28std::__2::basic_stringbuf<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>&&\29
[asyncify] std::__2::__fs::filesystem::detail::\28anonymous\20namespace\29::copy_file_impl\28std::__2::__fs::filesystem::detail::\28anonymous\20namespace\29::FileDescriptor&\2c\20std::__2::__fs::filesystem::detail::\28anonymous\20namespace\29::FileDescriptor&\2c\20std::__2::error_code&\29 can change the state due to std::__2::basic_ifstream<char\2c\20std::__2::char_traits<char>>::basic_ifstream\28\29
[asyncify] std::__2::basic_filebuf<char\2c\20std::__2::char_traits<char>>::~basic_filebuf\28\29.1 can change the state due to std::__2::basic_filebuf<char\2c\20std::__2::char_traits<char>>::~basic_filebuf\28\29
[asyncify] std::__2::basic_ifstream<char\2c\20std::__2::char_traits<char>>::~basic_ifstream\28\29.1 can change the state due to std::__2::basic_filebuf<char\2c\20std::__2::char_traits<char>>::~basic_filebuf\28\29
[asyncify] std::__2::basic_ofstream<char\2c\20std::__2::char_traits<char>>::~basic_ofstream\28\29.1 can change the state due to std::__2::basic_filebuf<char\2c\20std::__2::char_traits<char>>::~basic_filebuf\28\29
[asyncify] std::__2::__stdinbuf<char>::underflow\28\29 can change the state due to std::__2::__stdinbuf<char>::__getchar\28bool\29
[asyncify] std::__2::__stdinbuf<char>::uflow\28\29 can change the state due to std::__2::__stdinbuf<char>::__getchar\28bool\29
[asyncify] std::__2::basic_ios<char\2c\20std::__2::char_traits<char>>::fill\5babi:v15006\5d\28\29\20const can change the state due to std::__2::basic_ios<char\2c\20std::__2::char_traits<char>>::widen\5babi:v15006\5d\28char\29\20const
[asyncify] std::__2::basic_ios<wchar_t\2c\20std::__2::char_traits<wchar_t>>::fill\5babi:v15006\5d\28\29\20const can change the state due to std::__2::basic_ios<wchar_t\2c\20std::__2::char_traits<wchar_t>>::widen\5babi:v15006\5d\28char\29\20const
[asyncify] std::__2::basic_ios<char\2c\20std::__2::char_traits<char>>::~basic_ios\28\29 can change the state due to std::__2::ios_base::~ios_base\28\29
[asyncify] std::__2::basic_ios<wchar_t\2c\20std::__2::char_traits<wchar_t>>::~basic_ios\28\29 can change the state due to std::__2::ios_base::~ios_base\28\29
[asyncify] std::__2::ios_base::~ios_base\28\29.1 can change the state due to std::__2::ios_base::~ios_base\28\29
[asyncify] std::__2::ios_base::Init::Init\28\29 can change the state due to std::__2::DoIOSInit::DoIOSInit\28\29
[asyncify] std::__2::__stdinbuf<wchar_t>::underflow\28\29 can change the state due to std::__2::__stdinbuf<wchar_t>::__getchar\28bool\29
[asyncify] std::__2::__stdinbuf<wchar_t>::uflow\28\29 can change the state due to std::__2::__stdinbuf<wchar_t>::__getchar\28bool\29
[asyncify] std::__2::__time_get_storage<char>::__analyze\28char\2c\20std::__2::ctype<char>\20const&\29 can change the state due to std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>*\20std::__2::__scan_keyword<char*\2c\20std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>*\2c\20std::__2::ctype<char>>\28char*&\2c\20char*\2c\20std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>*\2c\20std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>*\2c\20std::__2::ctype<char>\20const&\2c\20unsigned\20int&\2c\20bool\29
[asyncify] legalstub$std::__2::money_put<char\2c\20std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>>::do_put\28std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20bool\2c\20std::__2::ios_base&\2c\20char\2c\20long\20double\29\20const can change the state due to std::__2::money_put<char\2c\20std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>>::do_put\28std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20bool\2c\20std::__2::ios_base&\2c\20char\2c\20long\20double\29\20const
[asyncify] std::__2::__num_get<wchar_t>::__do_widen\28std::__2::ios_base&\2c\20wchar_t*\29\20const can change the state due to wchar_t\20const*\20std::__2::__num_get<wchar_t>::__do_widen_p<wchar_t>\28std::__2::ios_base&\2c\20wchar_t*\29\20const
[asyncify] legalstub$std::__2::money_put<wchar_t\2c\20std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>::do_put\28std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20bool\2c\20std::__2::ios_base&\2c\20wchar_t\2c\20long\20double\29\20const can change the state due to std::__2::money_put<wchar_t\2c\20std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>::do_put\28std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20bool\2c\20std::__2::ios_base&\2c\20wchar_t\2c\20long\20double\29\20const
[asyncify] std::__2::num_put<char\2c\20std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>>::do_put\28std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::ios_base&\2c\20char\2c\20double\29\20const can change the state due to std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>\20std::__2::num_put<char\2c\20std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>>::__do_put_floating_point\5babi:v15006\5d<double>\28std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::ios_base&\2c\20char\2c\20double\2c\20char\20const*\29\20const
[asyncify] void\20std::__2::__double_or_nothing<char>\28std::__2::unique_ptr<char\2c\20void\20\28*\29\28void*\29>&\2c\20char*&\2c\20char*&\29 can change the state due to std::__2::unique_ptr<char\2c\20void\20\28*\29\28void*\29>::~unique_ptr\5babi:v15006\5d\28\29
[asyncify] std::__2::__fs::filesystem::__canonical\28std::__2::__fs::filesystem::path\20const&\2c\20std::__2::error_code*\29 can change the state due to std::__2::unique_ptr<char\2c\20void\20\28*\29\28void*\29>::~unique_ptr\5babi:v15006\5d\28\29
[asyncify] std::__2::num_put<char\2c\20std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>>::do_put\28std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::ios_base&\2c\20char\2c\20long\20double\29\20const can change the state due to std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>\20std::__2::num_put<char\2c\20std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>>::__do_put_floating_point\5babi:v15006\5d<long\20double>\28std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::ios_base&\2c\20char\2c\20long\20double\2c\20char\20const*\29\20const
[asyncify] legalstub$std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>\20std::__2::num_put<char\2c\20std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>>::__do_put_floating_point\5babi:v15006\5d<long\20double>\28std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::ios_base&\2c\20char\2c\20long\20double\2c\20char\20const*\29\20const can change the state due to std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>\20std::__2::num_put<char\2c\20std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>>::__do_put_floating_point\5babi:v15006\5d<long\20double>\28std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::ios_base&\2c\20char\2c\20long\20double\2c\20char\20const*\29\20const
[asyncify] std::__2::num_put<wchar_t\2c\20std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>::do_put\28std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::ios_base&\2c\20wchar_t\2c\20double\29\20const can change the state due to std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\20std::__2::num_put<wchar_t\2c\20std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>::__do_put_floating_point\5babi:v15006\5d<double>\28std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::ios_base&\2c\20wchar_t\2c\20double\2c\20char\20const*\29\20const
[asyncify] std::__2::num_put<wchar_t\2c\20std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>::do_put\28std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::ios_base&\2c\20wchar_t\2c\20long\20double\29\20const can change the state due to std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\20std::__2::num_put<wchar_t\2c\20std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>::__do_put_floating_point\5babi:v15006\5d<long\20double>\28std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::ios_base&\2c\20wchar_t\2c\20long\20double\2c\20char\20const*\29\20const
[asyncify] legalstub$std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\20std::__2::num_put<wchar_t\2c\20std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>::__do_put_floating_point\5babi:v15006\5d<long\20double>\28std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::ios_base&\2c\20wchar_t\2c\20long\20double\2c\20char\20const*\29\20const can change the state due to std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\20std::__2::num_put<wchar_t\2c\20std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>::__do_put_floating_point\5babi:v15006\5d<long\20double>\28std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::ios_base&\2c\20wchar_t\2c\20long\20double\2c\20char\20const*\29\20const
[asyncify] void\20std::__2::__double_or_nothing<wchar_t>\28std::__2::unique_ptr<wchar_t\2c\20void\20\28*\29\28void*\29>&\2c\20wchar_t*&\2c\20wchar_t*&\29 can change the state due to std::__2::unique_ptr<wchar_t\2c\20void\20\28*\29\28void*\29>::~unique_ptr\5babi:v15006\5d\28\29
[asyncify] std::__2::time_get<char\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>>::__get_year\28int&\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>&\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20unsigned\20int&\2c\20std::__2::ctype<char>\20const&\29\20const can change the state due to int\20std::__2::__get_up_to_n_digits<char\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>>\28std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>&\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20unsigned\20int&\2c\20std::__2::ctype<char>\20const&\2c\20int\29
[asyncify] std::__2::time_get<char\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>>::__get_day\28int&\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>&\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20unsigned\20int&\2c\20std::__2::ctype<char>\20const&\29\20const can change the state due to int\20std::__2::__get_up_to_n_digits<char\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>>\28std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>&\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20unsigned\20int&\2c\20std::__2::ctype<char>\20const&\2c\20int\29
[asyncify] std::__2::time_get<char\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>>::__get_hour\28int&\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>&\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20unsigned\20int&\2c\20std::__2::ctype<char>\20const&\29\20const can change the state due to int\20std::__2::__get_up_to_n_digits<char\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>>\28std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>&\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20unsigned\20int&\2c\20std::__2::ctype<char>\20const&\2c\20int\29
[asyncify] std::__2::time_get<char\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>>::__get_12_hour\28int&\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>&\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20unsigned\20int&\2c\20std::__2::ctype<char>\20const&\29\20const can change the state due to int\20std::__2::__get_up_to_n_digits<char\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>>\28std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>&\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20unsigned\20int&\2c\20std::__2::ctype<char>\20const&\2c\20int\29
[asyncify] std::__2::time_get<char\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>>::__get_day_year_num\28int&\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>&\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20unsigned\20int&\2c\20std::__2::ctype<char>\20const&\29\20const can change the state due to int\20std::__2::__get_up_to_n_digits<char\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>>\28std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>&\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20unsigned\20int&\2c\20std::__2::ctype<char>\20const&\2c\20int\29
[asyncify] std::__2::time_get<char\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>>::__get_month\28int&\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>&\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20unsigned\20int&\2c\20std::__2::ctype<char>\20const&\29\20const can change the state due to int\20std::__2::__get_up_to_n_digits<char\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>>\28std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>&\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20unsigned\20int&\2c\20std::__2::ctype<char>\20const&\2c\20int\29
[asyncify] std::__2::time_get<char\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>>::__get_minute\28int&\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>&\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20unsigned\20int&\2c\20std::__2::ctype<char>\20const&\29\20const can change the state due to int\20std::__2::__get_up_to_n_digits<char\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>>\28std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>&\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20unsigned\20int&\2c\20std::__2::ctype<char>\20const&\2c\20int\29
[asyncify] std::__2::time_get<char\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>>::__get_second\28int&\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>&\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20unsigned\20int&\2c\20std::__2::ctype<char>\20const&\29\20const can change the state due to int\20std::__2::__get_up_to_n_digits<char\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>>\28std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>&\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20unsigned\20int&\2c\20std::__2::ctype<char>\20const&\2c\20int\29
[asyncify] std::__2::time_get<char\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>>::__get_weekday\28int&\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>&\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20unsigned\20int&\2c\20std::__2::ctype<char>\20const&\29\20const can change the state due to int\20std::__2::__get_up_to_n_digits<char\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>>\28std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>&\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20unsigned\20int&\2c\20std::__2::ctype<char>\20const&\2c\20int\29
[asyncify] std::__2::time_get<char\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>>::__get_year4\28int&\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>&\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20unsigned\20int&\2c\20std::__2::ctype<char>\20const&\29\20const can change the state due to int\20std::__2::__get_up_to_n_digits<char\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>>\28std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>&\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20unsigned\20int&\2c\20std::__2::ctype<char>\20const&\2c\20int\29
[asyncify] void\20std::__2::__double_or_nothing<unsigned\20int>\28std::__2::unique_ptr<unsigned\20int\2c\20void\20\28*\29\28void*\29>&\2c\20unsigned\20int*&\2c\20unsigned\20int*&\29 can change the state due to std::__2::unique_ptr<unsigned\20int\2c\20void\20\28*\29\28void*\29>::~unique_ptr\5babi:v15006\5d\28\29
[asyncify] void\20std::__2::__call_once_param<std::__2::tuple<std::__2::\28anonymous\20namespace\29::__fake_bind&&>>::__execute\5babi:v15006\5d<>\28std::__2::__tuple_indices<>\29 can change the state due to decltype\28std::declval<std::__2::\28anonymous\20namespace\29::__fake_bind>\28\29\28\29\29\20std::__2::__invoke\5babi:v15006\5d<std::__2::\28anonymous\20namespace\29::__fake_bind>\28std::__2::\28anonymous\20namespace\29::__fake_bind&&\29
[asyncify] std::__2::locale::id::__get\28\29 can change the state due to void\20std::__2::call_once\5babi:v15006\5d<std::__2::\28anonymous\20namespace\29::__fake_bind>\28std::__2::once_flag&\2c\20std::__2::\28anonymous\20namespace\29::__fake_bind&&\29
[asyncify] Common::OSDMessageQueue::registerEventSource\28\29 can change the state due to Common::EventDispatcher::registerSource\28Common::EventSource*\2c\20bool\29
[asyncify] Common::InputWatcher::startWatching\28\29 can change the state due to Common::EventDispatcher::registerObserver\28Common::EventObserver*\2c\20unsigned\20int\2c\20bool\2c\20bool\29
[asyncify] SdlGraphicsManager::activateManager\28\29 can change the state due to Common::EventDispatcher::registerObserver\28Common::EventObserver*\2c\20unsigned\20int\2c\20bool\2c\20bool\29
[asyncify] Common::MemcachingCaseInsensitiveArchive::translatePath\28Common::Path\20const&\29\20const can change the state due to Common::normalizePath\28Common::String\20const&\2c\20char\29
[asyncify] ChRootFilesystemNode::ChRootFilesystemNode\28Common::String\20const&\2c\20POSIXFilesystemNode*\29 can change the state due to Common::normalizePath\28Common::String\20const&\2c\20char\29
[asyncify] Posix::assureDirectoryExists\28Common::String\20const&\2c\20char\20const*\29 can change the state due to Common::normalizePath\28Common::String\20const&\2c\20char\29
[asyncify] DrivePOSIXFilesystemNode::isDrive\28Common::String\20const&\29\20const can change the state due to Common::normalizePath\28Common::String\20const&\2c\20char\29
[asyncify] streamDbg\28int\29 can change the state due to Common::StreamDebug::StreamDebug\28int\29
[asyncify] Common::TextToSpeechManager::getVoice\28\29 can change the state due to Common::TTSVoice::TTSVoice\28\29
[asyncify] legalstub$Common::getHumanReadableBytes\28unsigned\20long\20long\2c\20Common::String&\29 can change the state due to Common::getHumanReadableBytes\28unsigned\20long\20long\2c\20Common::String&\29
[asyncify] Common::JSON::parse\28char\20const*\29 can change the state due to Common::JSONValue::parse\28char\20const**\29
[asyncify] MidiParser_QT::MidiParser_QT\28signed\20char\29 can change the state due to Common::QuickTimeParser::QuickTimeParser\28\29
[asyncify] Audio::QuickTimeAudioDecoder::QuickTimeAudioDecoder\28\29 can change the state due to Common::QuickTimeParser::QuickTimeParser\28\29
[asyncify] Video::HNMDecoder::HNM6VideoTrack::HNM6VideoTrack\28unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int\2c\20Graphics::PixelFormat\20const&\29 can change the state due to Image::createHNM6Decoder\28unsigned\20short\2c\20unsigned\20short\2c\20Graphics::PixelFormat\20const&\2c\20unsigned\20int\2c\20bool\29
[asyncify] Graphics::FontManager::FontManager\28\29 can change the state due to Graphics::create_g_consolefont\28\29
[asyncify] Graphics::TTFFont::~TTFFont\28\29.1 can change the state due to Graphics::TTFFont::~TTFFont\28\29
[asyncify] Graphics::MacDialog::getDialogFont\28\29 can change the state due to Graphics::MacFont::MacFont\28int\2c\20int\2c\20int\29
[asyncify] Graphics::MacFontRun::getFont\28\29 can change the state due to Graphics::MacFont::MacFont\28int\2c\20int\2c\20int\29
[asyncify] Graphics::MacText::setDefaultFormatting\28unsigned\20short\2c\20unsigned\20char\2c\20unsigned\20short\2c\20unsigned\20short\2c\20unsigned\20short\2c\20unsigned\20short\29 can change the state due to Graphics::MacFont::MacFont\28int\2c\20int\2c\20int\29
[asyncify] Graphics::MacWindow::getTitleFont\28\29 can change the state due to Graphics::MacFont::MacFont\28int\2c\20int\2c\20int\29
[asyncify] Video::HNMDecoder::APCAudioTrack::APCAudioTrack\28unsigned\20int\2c\20unsigned\20char\2c\20Audio::Mixer::SoundType\29 can change the state due to Audio::makeAPCStream\28unsigned\20int\2c\20bool\29
[asyncify] Video::PacoDecoder::PacoAudioTrack::PacoAudioTrack\28int\29 can change the state due to Audio::makePacketizedRawStream\28int\2c\20unsigned\20char\29
[asyncify] Audio::WMACodec::initCoefHuffman\28float\29 can change the state due to Audio::WMACodec::initCoefHuffman\28unsigned\20short*&\2c\20float*&\2c\20unsigned\20short*&\2c\20Audio::WMACoefHuffmanParam\20const&\29
[asyncify] io_open\28lua_State*\29 can change the state due to Lua::LuaFileProxy::create\28Common::String\20const&\2c\20Common::String\20const&\29
[asyncify] Lua::LuaFileConfig::LuaFileConfig\28Common::String\20const&\2c\20Common::String\20const&\29 can change the state due to Lua::LuaFileConfig::setupConfigFile\28\29
[asyncify] std::__2::__libcpp_allocate\5babi:v15006\5d\28unsigned\20long\2c\20unsigned\20long\29 can change the state due to void*\20std::__2::__libcpp_operator_new\5babi:v15006\5d<unsigned\20long>\28unsigned\20long\29
[asyncify] AdvancedMetaEngineDetection::fallbackDetect\28Common::HashMap<Common::String\2c\20Common::FSNode\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>\20const&\2c\20Common::FSList\20const&\2c\20ADDetectedGameExtraInfo**\29\20const can change the state due to operator\20new\5b\5d\28unsigned\20long\29
[asyncify] Graphics::scaleLine\28int\2c\20int\29 can change the state due to operator\20new\5b\5d\28unsigned\20long\29
[asyncify] SynthWave::ConvertTo16bitSigned\28\29 can change the state due to operator\20new\5b\5d\28unsigned\20long\29
[asyncify] Math::CosineTable::CosineTable\28int\29 can change the state due to operator\20new\5b\5d\28unsigned\20long\29
[asyncify] Math::SineTable::SineTable\28int\29 can change the state due to operator\20new\5b\5d\28unsigned\20long\29
[asyncify] Common::HashMap<Common::String\2c\20Common::SharedArchiveContents\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>::expandStorage\28unsigned\20int\29 can change the state due to operator\20new\5b\5d\28unsigned\20long\29
[asyncify] Common::BaseString<char>::BaseString\28char\20const*\29 can change the state due to operator\20new\5b\5d\28unsigned\20long\29
[asyncify] Common::BaseString<char>::initWithValueTypeStr\28char\20const*\2c\20unsigned\20int\29 can change the state due to operator\20new\5b\5d\28unsigned\20long\29
[asyncify] Common::BaseString<char>::BaseString\28char\20const*\2c\20unsigned\20int\29 can change the state due to operator\20new\5b\5d\28unsigned\20long\29
[asyncify] Common::BaseString<char>::BaseString\28char\20const*\2c\20char\20const*\29 can change the state due to operator\20new\5b\5d\28unsigned\20long\29
[asyncify] Common::BaseString<char32_t>::BaseString\28char32_t\20const*\29 can change the state due to operator\20new\5b\5d\28unsigned\20long\29
[asyncify] Common::BaseString<char32_t>::initWithValueTypeStr\28char32_t\20const*\2c\20unsigned\20int\29 can change the state due to operator\20new\5b\5d\28unsigned\20long\29
[asyncify] Common::BaseString<char32_t>::BaseString\28char32_t\20const*\2c\20unsigned\20int\29 can change the state due to operator\20new\5b\5d\28unsigned\20long\29
[asyncify] Common::BaseString<char32_t>::BaseString\28char32_t\20const*\2c\20char32_t\20const*\29 can change the state due to operator\20new\5b\5d\28unsigned\20long\29
[asyncify] Common::ConfigManager::Domain::Domain\28\29 can change the state due to operator\20new\5b\5d\28unsigned\20long\29
[asyncify] Common::HashMap<Common::String\2c\20Common::ConfigManager::Domain\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>::HashMap\28\29 can change the state due to operator\20new\5b\5d\28unsigned\20long\29
[asyncify] Common::HashMap<Common::String\2c\20Common::ConfigManager::Domain\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>::assign\28Common::HashMap<Common::String\2c\20Common::ConfigManager::Domain\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>\20const&\29 can change the state due to operator\20new\5b\5d\28unsigned\20long\29
[asyncify] Common::HashMap<Common::String\2c\20Common::ConfigManager::Domain\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>::expandStorage\28unsigned\20int\29 can change the state due to operator\20new\5b\5d\28unsigned\20long\29
[asyncify] Common::HashMap<Common::String\2c\20Common::DebugManager::DebugChannel\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>::HashMap\28\29 can change the state due to operator\20new\5b\5d\28unsigned\20long\29
[asyncify] Common::HashMap<Common::String\2c\20Common::DebugManager::DebugChannel\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>::expandStorage\28unsigned\20int\29 can change the state due to operator\20new\5b\5d\28unsigned\20long\29
[asyncify] Common::FSDirectory::FSDirectory\28Common::FSNode\20const&\2c\20int\2c\20bool\2c\20bool\2c\20bool\29 can change the state due to operator\20new\5b\5d\28unsigned\20long\29
[asyncify] Common::FSDirectory::FSDirectory\28Common::Path\20const&\2c\20Common::FSNode\20const&\2c\20int\2c\20bool\2c\20bool\2c\20bool\29 can change the state due to operator\20new\5b\5d\28unsigned\20long\29
[asyncify] Common::U32String::encodeUTF16BE\28unsigned\20int*\29\20const can change the state due to operator\20new\5b\5d\28unsigned\20long\29
[asyncify] Common::U32String::encodeUTF16LE\28unsigned\20int*\29\20const can change the state due to operator\20new\5b\5d\28unsigned\20long\29
[asyncify] Common::U32String::encodeUTF16Native\28unsigned\20int*\29\20const can change the state due to operator\20new\5b\5d\28unsigned\20long\29
[asyncify] Common::HashMap<Common::String\2c\20Common::ClickteamInstaller::ClickteamFileDescriptor\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>::assign\28Common::HashMap<Common::String\2c\20Common::ClickteamInstaller::ClickteamFileDescriptor\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>\20const&\29 can change the state due to operator\20new\5b\5d\28unsigned\20long\29
[asyncify] Common::HashMap<unsigned\20short\2c\20Common::SharedPtr<Common::ClickteamInstaller::ClickteamTag>\2c\20Common::Hash<unsigned\20short>\2c\20Common::EqualTo<unsigned\20short>>::expandStorage\28unsigned\20int\29 can change the state due to operator\20new\5b\5d\28unsigned\20long\29
[asyncify] Common::HashMap<Common::String\2c\20Common::ClickteamInstaller::ClickteamFileDescriptor\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>::expandStorage\28unsigned\20int\29 can change the state due to operator\20new\5b\5d\28unsigned\20long\29
[asyncify] Common::HashMap<Common::String\2c\20Common::\28anonymous\20namespace\29::InstallShieldCabinet::FileEntry\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>::operator\5b\5d\28Common::String\20const&\29 can change the state due to operator\20new\5b\5d\28unsigned\20long\29
[asyncify] Common::InstallShieldV3::InstallShieldV3\28\29 can change the state due to operator\20new\5b\5d\28unsigned\20long\29
[asyncify] Common::HashMap<Common::String\2c\20Common::InstallShieldV3::FileEntry\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>::expandStorage\28unsigned\20int\29 can change the state due to operator\20new\5b\5d\28unsigned\20long\29
[asyncify] Common::StuffItArchive::StuffItArchive\28\29 can change the state due to operator\20new\5b\5d\28unsigned\20long\29
[asyncify] Common::HashMap<Common::String\2c\20Common::MacFinderInfoData\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>::expandStorage\28unsigned\20int\29 can change the state due to operator\20new\5b\5d\28unsigned\20long\29
[asyncify] Common::HashMap<Common::String\2c\20Common::StuffItArchive::FileEntry\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>::expandStorage\28unsigned\20int\29 can change the state due to operator\20new\5b\5d\28unsigned\20long\29
[asyncify] Common::HashMap<Common::String\2c\20Common::Array<Common::ArjFileChunk>\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>::expandStorage\28unsigned\20int\29 can change the state due to operator\20new\5b\5d\28unsigned\20long\29
[asyncify] Common::ZipArchive::ZipArchive\28void*\29 can change the state due to operator\20new\5b\5d\28unsigned\20long\29
[asyncify] Common::HashMap<Common::String\2c\20cached_file_in_zip\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>::expandStorage\28unsigned\20int\29 can change the state due to operator\20new\5b\5d\28unsigned\20long\29
[asyncify] Common::HashMap<Common::String\2c\20Common::JSONValue*\2c\20Common::Hash<Common::String>\2c\20Common::EqualTo<Common::String>>::assign\28Common::HashMap<Common::String\2c\20Common::JSONValue*\2c\20Common::Hash<Common::String>\2c\20Common::EqualTo<Common::String>>\20const&\29 can change the state due to operator\20new\5b\5d\28unsigned\20long\29
[asyncify] Common::HashMap<Common::String\2c\20Common::JSONValue*\2c\20Common::Hash<Common::String>\2c\20Common::EqualTo<Common::String>>::expandStorage\28unsigned\20int\29 can change the state due to operator\20new\5b\5d\28unsigned\20long\29
[asyncify] Common::WinResources::VersionInfo::VersionInfo\28\29 can change the state due to operator\20new\5b\5d\28unsigned\20long\29
[asyncify] Common::HashMap<Common::String\2c\20Common::U32String\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>::expandStorage\28unsigned\20int\29 can change the state due to operator\20new\5b\5d\28unsigned\20long\29
[asyncify] Common::HashMap<Common::WinResourceID\2c\20Common::HashMap<Common::WinResourceID\2c\20Common::String\2c\20Common::WinResourceID_Hash\2c\20Common::WinResourceID_EqualTo>\2c\20Common::WinResourceID_Hash\2c\20Common::WinResourceID_EqualTo>::HashMap\28\29 can change the state due to operator\20new\5b\5d\28unsigned\20long\29
[asyncify] Common::HashMap<Common::WinResourceID\2c\20Common::HashMap<Common::WinResourceID\2c\20Common::String\2c\20Common::WinResourceID_Hash\2c\20Common::WinResourceID_EqualTo>\2c\20Common::WinResourceID_Hash\2c\20Common::WinResourceID_EqualTo>::Node::Node\28Common::WinResourceID\20const&\29 can change the state due to operator\20new\5b\5d\28unsigned\20long\29
[asyncify] Common::HashMap<Common::WinResourceID\2c\20Common::HashMap<Common::WinResourceID\2c\20Common::String\2c\20Common::WinResourceID_Hash\2c\20Common::WinResourceID_EqualTo>\2c\20Common::WinResourceID_Hash\2c\20Common::WinResourceID_EqualTo>::expandStorage\28unsigned\20int\29 can change the state due to operator\20new\5b\5d\28unsigned\20long\29
[asyncify] Common::HashMap<Common::WinResourceID\2c\20Common::String\2c\20Common::WinResourceID_Hash\2c\20Common::WinResourceID_EqualTo>::expandStorage\28unsigned\20int\29 can change the state due to operator\20new\5b\5d\28unsigned\20long\29
[asyncify] Common::PEResources::PEResources\28\29 can change the state due to operator\20new\5b\5d\28unsigned\20long\29
[asyncify] Common::HashMap<Common::WinResourceID\2c\20Common::HashMap<Common::WinResourceID\2c\20Common::PEResources::Resource\2c\20Common::WinResourceID_Hash\2c\20Common::WinResourceID_EqualTo>\2c\20Common::WinResourceID_Hash\2c\20Common::WinResourceID_EqualTo>::HashMap\28\29 can change the state due to operator\20new\5b\5d\28unsigned\20long\29
[asyncify] Common::HashMap<Common::String\2c\20Common::PEResources::Section\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>::expandStorage\28unsigned\20int\29 can change the state due to operator\20new\5b\5d\28unsigned\20long\29
[asyncify] Common::HashMap<Common::WinResourceID\2c\20Common::HashMap<Common::WinResourceID\2c\20Common::HashMap<Common::WinResourceID\2c\20Common::PEResources::Resource\2c\20Common::WinResourceID_Hash\2c\20Common::WinResourceID_EqualTo>\2c\20Common::WinResourceID_Hash\2c\20Common::WinResourceID_EqualTo>\2c\20Common::WinResourceID_Hash\2c\20Common::WinResourceID_EqualTo>::expandStorage\28unsigned\20int\29 can change the state due to operator\20new\5b\5d\28unsigned\20long\29
[asyncify] Common::HashMap<Common::WinResourceID\2c\20Common::HashMap<Common::WinResourceID\2c\20Common::PEResources::Resource\2c\20Common::WinResourceID_Hash\2c\20Common::WinResourceID_EqualTo>\2c\20Common::WinResourceID_Hash\2c\20Common::WinResourceID_EqualTo>::Node::Node\28Common::WinResourceID\20const&\29 can change the state due to operator\20new\5b\5d\28unsigned\20long\29
[asyncify] Common::HashMap<Common::WinResourceID\2c\20Common::HashMap<Common::WinResourceID\2c\20Common::PEResources::Resource\2c\20Common::WinResourceID_Hash\2c\20Common::WinResourceID_EqualTo>\2c\20Common::WinResourceID_Hash\2c\20Common::WinResourceID_EqualTo>::expandStorage\28unsigned\20int\29 can change the state due to operator\20new\5b\5d\28unsigned\20long\29
[asyncify] Common::HashMap<Common::WinResourceID\2c\20Common::PEResources::Resource\2c\20Common::WinResourceID_Hash\2c\20Common::WinResourceID_EqualTo>::expandStorage\28unsigned\20int\29 can change the state due to operator\20new\5b\5d\28unsigned\20long\29
[asyncify] Common::XMLParser::allocNode\28\29 can change the state due to operator\20new\5b\5d\28unsigned\20long\29
[asyncify] Common::HashMap<int\2c\20Video::MPEGPSDecoder::MPEGStream*\2c\20Common::Hash<int>\2c\20Common::EqualTo<int>>::expandStorage\28unsigned\20int\29 can change the state due to operator\20new\5b\5d\28unsigned\20long\29
[asyncify] Video::BinkDecoder::BinkVideoTrack::initBundles\28\29 can change the state due to operator\20new\5b\5d\28unsigned\20long\29
[asyncify] Common::HashMap<unsigned\20short\2c\20Image::CDToonsBlock\2c\20Common::Hash<unsigned\20short>\2c\20Common::EqualTo<unsigned\20short>>::expandStorage\28unsigned\20int\29 can change the state due to operator\20new\5b\5d\28unsigned\20long\29
[asyncify] Image::Indeo3Decoder::buildModPred\28\29 can change the state due to operator\20new\5b\5d\28unsigned\20long\29
[asyncify] Image::Indeo3Decoder::allocFrames\28\29 can change the state due to operator\20new\5b\5d\28unsigned\20long\29
[asyncify] Graphics::scaleBlit\28unsigned\20char*\2c\20unsigned\20char\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int\2c\20Graphics::PixelFormat\20const&\29 can change the state due to operator\20new\5b\5d\28unsigned\20long\29
[asyncify] Graphics::scaleBlitBilinear\28unsigned\20char*\2c\20unsigned\20char\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int\2c\20Graphics::PixelFormat\20const&\29 can change the state due to operator\20new\5b\5d\28unsigned\20long\29
[asyncify] Graphics::CursorManager::Cursor::Cursor\28void\20const*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20int\2c\20bool\2c\20Graphics::PixelFormat\20const*\29 can change the state due to operator\20new\5b\5d\28unsigned\20long\29
[asyncify] Graphics::CursorManager::Palette::Palette\28unsigned\20char\20const*\2c\20unsigned\20int\2c\20unsigned\20int\29 can change the state due to operator\20new\5b\5d\28unsigned\20long\29
[asyncify] Common::HashMap<Common::String\2c\20Graphics::Font\20const*\2c\20Common::Hash<Common::String>\2c\20Common::EqualTo<Common::String>>::expandStorage\28unsigned\20int\29 can change the state due to operator\20new\5b\5d\28unsigned\20long\29
[asyncify] Common::HashMap<unsigned\20short\2c\20short\2c\20Common::Hash<unsigned\20short>\2c\20Common::EqualTo<unsigned\20short>>::assign\28Common::HashMap<unsigned\20short\2c\20short\2c\20Common::Hash<unsigned\20short>\2c\20Common::EqualTo<unsigned\20short>>\20const&\29 can change the state due to operator\20new\5b\5d\28unsigned\20long\29
[asyncify] Common::HashMap<unsigned\20short\2c\20short\2c\20Common::Hash<unsigned\20short>\2c\20Common::EqualTo<unsigned\20short>>::expandStorage\28unsigned\20int\29 can change the state due to operator\20new\5b\5d\28unsigned\20long\29
[asyncify] Graphics::TTFFont::TTFFont\28\29 can change the state due to operator\20new\5b\5d\28unsigned\20long\29
[asyncify] Common::HashMap<unsigned\20int\2c\20Graphics::TTFFont::Glyph\2c\20Common::Hash<unsigned\20int>\2c\20Common::EqualTo<unsigned\20int>>::expandStorage\28unsigned\20int\29 can change the state due to operator\20new\5b\5d\28unsigned\20long\29
[asyncify] HQScaler::initLUT\28Graphics::PixelFormat\29 can change the state due to operator\20new\5b\5d\28unsigned\20long\29
[asyncify] TownsAudioInterfaceInternal::intf_pcmPlayEffect\28void*&\29 can change the state due to operator\20new\5b\5d\28unsigned\20long\29
[asyncify] TownsAudio_WaveTable::readData\28unsigned\20char\20const*\29 can change the state due to operator\20new\5b\5d\28unsigned\20long\29
[asyncify] TownsAudio_PCMChannel::loadData\28unsigned\20char*\2c\20unsigned\20int\29 can change the state due to operator\20new\5b\5d\28unsigned\20long\29
[asyncify] EuphonyDriver::init\28\29 can change the state due to operator\20new\5b\5d\28unsigned\20long\29
[asyncify] TownsPC98_FmSynthSquareWaveSource::TownsPC98_FmSynthSquareWaveSource\28unsigned\20int\2c\20unsigned\20int\29 can change the state due to operator\20new\5b\5d\28unsigned\20long\29
[asyncify] TownsPC98_FmSynthSquareWaveSource::init\28int\20const*\2c\20int\20const*\29 can change the state due to operator\20new\5b\5d\28unsigned\20long\29
[asyncify] TownsPC98_FmSynthPercussionSource::TownsPC98_FmSynthPercussionSource\28unsigned\20int\2c\20unsigned\20int\29 can change the state due to operator\20new\5b\5d\28unsigned\20long\29
[asyncify] TownsPC98_FmSynth::generateTables\28\29 can change the state due to operator\20new\5b\5d\28unsigned\20long\29
[asyncify] Common::HashMap<unsigned\20int\2c\20MidiParser_QT::PartStatus\2c\20Common::Hash<unsigned\20int>\2c\20Common::EqualTo<unsigned\20int>>::expandStorage\28unsigned\20int\29 can change the state due to operator\20new\5b\5d\28unsigned\20long\29
[asyncify] Common::HashMap<unsigned\20int\2c\20unsigned\20char\2c\20Common::Hash<unsigned\20int>\2c\20Common::EqualTo<unsigned\20int>>::expandStorage\28unsigned\20int\29 can change the state due to operator\20new\5b\5d\28unsigned\20long\29
[asyncify] Modules::ModXmS3mStream::setSequencePos\28int\29 can change the state due to operator\20new\5b\5d\28unsigned\20long\29
[asyncify] Modules::ModXmS3mStream::readBuffer\28short*\2c\20int\29 can change the state due to operator\20new\5b\5d\28unsigned\20long\29
[asyncify] Modules::ModuleModXmS3m::SamplePingPong\28Modules::Sample&\29 can change the state due to operator\20new\5b\5d\28unsigned\20long\29
[asyncify] PCMDevice_Base::PCMDevice_Base\28int\2c\20int\2c\20int\29 can change the state due to operator\20new\5b\5d\28unsigned\20long\29
[asyncify] MT32Emu::DefaultMidiStreamParser::DefaultMidiStreamParser\28MT32Emu::Synth&\2c\20unsigned\20int\29 can change the state due to operator\20new\5b\5d\28unsigned\20long\29
[asyncify] MT32Emu::MidiStreamParser::MidiStreamParser\28unsigned\20int\29 can change the state due to operator\20new\5b\5d\28unsigned\20long\29
[asyncify] MT32Emu::MidiStreamParserImpl::MidiStreamParserImpl\28MT32Emu::MidiReceiver&\2c\20MT32Emu::MidiReporter&\2c\20unsigned\20int\29 can change the state due to operator\20new\5b\5d\28unsigned\20long\29
[asyncify] MT32Emu::MidiStreamParserImpl::checkStreamBufferCapacity\28bool\29 can change the state due to operator\20new\5b\5d\28unsigned\20long\29
[asyncify] MT32Emu::ROMInfo::getROMInfoList\28unsigned\20int\2c\20unsigned\20int\29 can change the state due to operator\20new\5b\5d\28unsigned\20long\29
[asyncify] MT32Emu::DynamicSysexDataStorage::allocate\28unsigned\20int\29 can change the state due to operator\20new\5b\5d\28unsigned\20long\29
[asyncify] SRCTools::FIRResampler::Constants::Constants\28unsigned\20int\2c\20double\2c\20float\20const*\2c\20unsigned\20int\29 can change the state due to operator\20new\5b\5d\28unsigned\20long\29
[asyncify] SRCTools::IIRResampler::Constants::Constants\28unsigned\20int\2c\20float\2c\20SRCTools::IIRSection\20const*\2c\20SRCTools::IIRResampler::Quality\29 can change the state due to operator\20new\5b\5d\28unsigned\20long\29
[asyncify] std::__2::basic_filebuf<char\2c\20std::__2::char_traits<char>>::setbuf\28char*\2c\20long\29 can change the state due to operator\20new\5b\5d\28unsigned\20long\29
[asyncify] operator\20new\5b\5d\28unsigned\20long\2c\20std::nothrow_t\20const&\29 can change the state due to operator\20new\5b\5d\28unsigned\20long\29
[asyncify] std::__2::__fs::filesystem::__current_path\28std::__2::error_code*\29 can change the state due to operator\20new\5b\5d\28unsigned\20long\29
[asyncify] Common::HashMap<Common::String\2c\20Graphics::ManagedSurface\20const*\2c\20Common::Hash<Common::String>\2c\20Common::EqualTo<Common::String>>::expandStorage\28unsigned\20int\29 can change the state due to operator\20new\5b\5d\28unsigned\20long\29
[asyncify] Common::HashMap<int\2c\20Graphics::ManagedSurface\20const*\2c\20Common::Hash<int>\2c\20Common::EqualTo<int>>::expandStorage\28unsigned\20int\29 can change the state due to operator\20new\5b\5d\28unsigned\20long\29
[asyncify] Common::HashMap<Common::U32String\2c\20int\2c\20Common::Hash<Common::U32String>\2c\20Common::EqualTo<Common::U32String>>::expandStorage\28unsigned\20int\29 can change the state due to operator\20new\5b\5d\28unsigned\20long\29
[asyncify] Common::HashMap<int\2c\20Common::Array<int>\2c\20Common::Hash<int>\2c\20Common::EqualTo<int>>::expandStorage\28unsigned\20int\29 can change the state due to operator\20new\5b\5d\28unsigned\20long\29
[asyncify] GUI::GroupedListWidget::GroupedListWidget\28GUI::Dialog*\2c\20Common::String\20const&\2c\20Common::U32String\20const&\2c\20unsigned\20int\29 can change the state due to operator\20new\5b\5d\28unsigned\20long\29
[asyncify] Common::Keymap::Keymap\28Common::Keymap::KeymapType\2c\20Common::String\20const&\2c\20Common::U32String\20const&\29 can change the state due to operator\20new\5b\5d\28unsigned\20long\29
[asyncify] Common::Keymap::Keymap\28Common::Keymap::KeymapType\2c\20Common::String\20const&\2c\20Common::String\20const&\29 can change the state due to operator\20new\5b\5d\28unsigned\20long\29
[asyncify] Common::HashMap<Common::HardwareInput\2c\20Common::Array<Common::Action*>\2c\20Common::HardwareInput_Hash\2c\20Common::HardwareInput_EqualTo>::expandStorage\28unsigned\20int\29 can change the state due to operator\20new\5b\5d\28unsigned\20long\29
[asyncify] Common::HashMap<Common::Keymap*\2c\20Common::RemapWidget::KeymapTitleRow\2c\20Common::Hash<Common::Keymap*>\2c\20Common::EqualTo<Common::Keymap*>>::expandStorage\28unsigned\20int\29 can change the state due to operator\20new\5b\5d\28unsigned\20long\29
[asyncify] DefaultSaveFileManager::DefaultSaveFileManager\28\29 can change the state due to operator\20new\5b\5d\28unsigned\20long\29
[asyncify] Common::HashMap<Common::String\2c\20bool\2c\20Common::Hash<Common::String>\2c\20Common::EqualTo<Common::String>>::expandStorage\28unsigned\20int\29 can change the state due to operator\20new\5b\5d\28unsigned\20long\29
[asyncify] Common::HashMap<Common::String\2c\20void\20\28*\29\28void*\29\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>::expandStorage\28unsigned\20int\29 can change the state due to operator\20new\5b\5d\28unsigned\20long\29
[asyncify] Graphics::PaletteLookup::PaletteLookup\28\29 can change the state due to operator\20new\5b\5d\28unsigned\20long\29
[asyncify] Graphics::PaletteLookup::PaletteLookup\28unsigned\20char\20const*\2c\20unsigned\20int\29 can change the state due to operator\20new\5b\5d\28unsigned\20long\29
[asyncify] Common::HashMap<int\2c\20unsigned\20char\2c\20Common::Hash<int>\2c\20Common::EqualTo<int>>::expandStorage\28unsigned\20int\29 can change the state due to operator\20new\5b\5d\28unsigned\20long\29
[asyncify] SourceScaler::setSource\28unsigned\20char\20const*\2c\20unsigned\20int\2c\20int\2c\20int\2c\20int\29 can change the state due to operator\20new\5b\5d\28unsigned\20long\29
[asyncify] Graphics::Surface::flipVertical\28Common::Rect\20const&\29 can change the state due to operator\20new\5b\5d\28unsigned\20long\29
[asyncify] Chunk::SetData\28void\20const*\2c\20unsigned\20int\29 can change the state due to operator\20new\5b\5d\28unsigned\20long\29
[asyncify] ADDetectedGame::ADDetectedGame\28\29 can change the state due to operator\20new\5b\5d\28unsigned\20long\29
[asyncify] MD5CacheManager::MD5CacheManager\28\29 can change the state due to operator\20new\5b\5d\28unsigned\20long\29
[asyncify] Common::HashMap<Common::String\2c\20Common::Array<Common::AchievementDescription>\2c\20Common::Hash<Common::String>\2c\20Common::EqualTo<Common::String>>::expandStorage\28unsigned\20int\29 can change the state due to operator\20new\5b\5d\28unsigned\20long\29
[asyncify] AdvancedMetaEngineDetection::AdvancedMetaEngineDetection\28void\20const*\2c\20unsigned\20int\2c\20PlainGameDescriptor\20const*\29 can change the state due to operator\20new\5b\5d\28unsigned\20long\29
[asyncify] AdvancedMetaEngine::fallbackDetectExtern\28unsigned\20int\2c\20Common::HashMap<Common::String\2c\20Common::FSNode\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>\20const&\2c\20Common::FSList\20const&\2c\20ADDetectedGameExtraInfo**\29\20const can change the state due to operator\20new\5b\5d\28unsigned\20long\29
[asyncify] Common::HashMap<Common::String\2c\20long\20long\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>::expandStorage\28unsigned\20int\29 can change the state due to operator\20new\5b\5d\28unsigned\20long\29
[asyncify] Common::HashMap<Common::String\2c\20int\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>::expandStorage\28unsigned\20int\29 can change the state due to operator\20new\5b\5d\28unsigned\20long\29
[asyncify] Common::HashMap<int\2c\20Graphics::FontInfo*\2c\20Common::Hash<int>\2c\20Common::EqualTo<int>>::expandStorage\28unsigned\20int\29 can change the state due to operator\20new\5b\5d\28unsigned\20long\29
[asyncify] DetectedGame::DetectedGame\28\29 can change the state due to operator\20new\5b\5d\28unsigned\20long\29
[asyncify] DetectedGame::DetectedGame\28Common::String\20const&\2c\20PlainGameDescriptor\20const&\29 can change the state due to operator\20new\5b\5d\28unsigned\20long\29
[asyncify] DetectedGame::DetectedGame\28Common::String\20const&\2c\20Common::String\20const&\2c\20Common::String\20const&\2c\20Common::Language\2c\20Common::Platform\2c\20Common::String\20const&\2c\20bool\29 can change the state due to operator\20new\5b\5d\28unsigned\20long\29
[asyncify] Common::HashMap<unsigned\20int\2c\20Graphics::BaseMacWindow*\2c\20Common::Hash<unsigned\20int>\2c\20Common::EqualTo<unsigned\20int>>::expandStorage\28unsigned\20int\29 can change the state due to operator\20new\5b\5d\28unsigned\20long\29
[asyncify] Common::HashMap<Common::String\2c\20Common::SharedPtr<Common::Functor2<int\2c\20char\20const**\2c\20bool>>\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>::expandStorage\28unsigned\20int\29 can change the state due to operator\20new\5b\5d\28unsigned\20long\29
[asyncify] Common::HashMap<Common::String\2c\20Graphics::MacFont*\2c\20Common::Hash<Common::String>\2c\20Common::EqualTo<Common::String>>::expandStorage\28unsigned\20int\29 can change the state due to operator\20new\5b\5d\28unsigned\20long\29
[asyncify] Common::HashMap<Common::String\2c\20Common::SeekableReadStream*\2c\20Common::Hash<Common::String>\2c\20Common::EqualTo<Common::String>>::expandStorage\28unsigned\20int\29 can change the state due to operator\20new\5b\5d\28unsigned\20long\29
[asyncify] Common::HashMap<Common::String\2c\20GUI::MetadataGame\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>::expandStorage\28unsigned\20int\29 can change the state due to operator\20new\5b\5d\28unsigned\20long\29
[asyncify] Common::HashMap<Common::String\2c\20Common::Array<Common::String>\2c\20Common::Hash<Common::String>\2c\20Common::EqualTo<Common::String>>::expandStorage\28unsigned\20int\29 can change the state due to operator\20new\5b\5d\28unsigned\20long\29
[asyncify] GUI::MetadataParser::MetadataParser\28\29 can change the state due to operator\20new\5b\5d\28unsigned\20long\29
[asyncify] Common::HashMap<Common::String\2c\20GUI::MetadataGame\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>::HashMap\28\29 can change the state due to operator\20new\5b\5d\28unsigned\20long\29
[asyncify] Common::HashMap<Common::String\2c\20GUI::MetadataEngine\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>::HashMap\28\29 can change the state due to operator\20new\5b\5d\28unsigned\20long\29
[asyncify] Common::HashMap<Common::String\2c\20GUI::MetadataCompany\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>::HashMap\28\29 can change the state due to operator\20new\5b\5d\28unsigned\20long\29
[asyncify] Common::HashMap<Common::String\2c\20Common::XMLParser::XMLKeyLayout*\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>::expandStorage\28unsigned\20int\29 can change the state due to operator\20new\5b\5d\28unsigned\20long\29
[asyncify] Common::HashMap<Common::String\2c\20GUI::MetadataEngine\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>::expandStorage\28unsigned\20int\29 can change the state due to operator\20new\5b\5d\28unsigned\20long\29
[asyncify] Common::HashMap<Common::String\2c\20GUI::MetadataSeries\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>::expandStorage\28unsigned\20int\29 can change the state due to operator\20new\5b\5d\28unsigned\20long\29
[asyncify] Common::HashMap<Common::String\2c\20GUI::MetadataCompany\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>::expandStorage\28unsigned\20int\29 can change the state due to operator\20new\5b\5d\28unsigned\20long\29
[asyncify] Common::HashMap<int\2c\20Graphics::Font\20const*\2c\20Common::Hash<int>\2c\20Common::EqualTo<int>>::expandStorage\28unsigned\20int\29 can change the state due to operator\20new\5b\5d\28unsigned\20long\29
[asyncify] Common::HashMap<Common::String\2c\20Graphics::Font*\2c\20Common::Hash<Common::String>\2c\20Common::EqualTo<Common::String>>::expandStorage\28unsigned\20int\29 can change the state due to operator\20new\5b\5d\28unsigned\20long\29
[asyncify] Common::HashMap<unsigned\20int\2c\20unsigned\20int\2c\20Common::Hash<unsigned\20int>\2c\20Common::EqualTo<unsigned\20int>>::expandStorage\28unsigned\20int\29 can change the state due to operator\20new\5b\5d\28unsigned\20long\29
[asyncify] Graphics::createPaletteLookup\28unsigned\20int\20const*\2c\20unsigned\20int\20const*\29 can change the state due to operator\20new\5b\5d\28unsigned\20long\29
[asyncify] Common::HashMap<unsigned\20int\2c\20int\2c\20Common::Hash<unsigned\20int>\2c\20Common::EqualTo<unsigned\20int>>::expandStorage\28unsigned\20int\29 can change the state due to operator\20new\5b\5d\28unsigned\20long\29
[asyncify] Graphics::PixelBuffer::PixelBuffer\28Graphics::PixelFormat\20const&\2c\20int\2c\20DisposeAfterUse::Flag\29 can change the state due to operator\20new\5b\5d\28unsigned\20long\29
[asyncify] Graphics::PixelBuffer::create\28Graphics::PixelFormat\20const&\2c\20int\2c\20DisposeAfterUse::Flag\29 can change the state due to operator\20new\5b\5d\28unsigned\20long\29
[asyncify] Graphics::PixelBuffer::create\28int\2c\20DisposeAfterUse::Flag\29 can change the state due to operator\20new\5b\5d\28unsigned\20long\29
[asyncify] TinyGL::FrameBuffer::FrameBuffer\28int\2c\20int\2c\20Graphics::PixelFormat\20const&\2c\20bool\29 can change the state due to operator\20new\5b\5d\28unsigned\20long\29
[asyncify] Common::HashMap<Common::String\2c\20FileProperties\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>::assign\28Common::HashMap<Common::String\2c\20FileProperties\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>\20const&\29 can change the state due to operator\20new\5b\5d\28unsigned\20long\29
[asyncify] Common::HashMap<Common::String\2c\20FileProperties\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>::expandStorage\28unsigned\20int\29 can change the state due to operator\20new\5b\5d\28unsigned\20long\29
[asyncify] Adl::Files_AppleDOS::Files_AppleDOS\28\29 can change the state due to operator\20new\5b\5d\28unsigned\20long\29
[asyncify] Common::HashMap<Common::String\2c\20Adl::Files_AppleDOS::TOCEntry\2c\20Common::Hash<Common::String>\2c\20Common::EqualTo<Common::String>>::expandStorage\28unsigned\20int\29 can change the state due to operator\20new\5b\5d\28unsigned\20long\29
[asyncify] Common::HashMap<Common::String\2c\20int\2c\20Common::Hash<Common::String>\2c\20Common::EqualTo<Common::String>>::expandStorage\28unsigned\20int\29 can change the state due to operator\20new\5b\5d\28unsigned\20long\29
[asyncify] Common::HashMap<Common::String\2c\20Common::FSNode\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>::expandStorage\28unsigned\20int\29 can change the state due to operator\20new\5b\5d\28unsigned\20long\29
[asyncify] Common::HashMap<Common::String\2c\20Common::String\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>::assign\28Common::HashMap<Common::String\2c\20Common::String\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>\20const&\29 can change the state due to operator\20new\5b\5d\28unsigned\20long\29
[asyncify] DirectorMetaEngineDetection::DirectorMetaEngineDetection\28\29 can change the state due to operator\20new\5b\5d\28unsigned\20long\29
[asyncify] Common::HashMap<Common::String\2c\20bool\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>::expandStorage\28unsigned\20int\29 can change the state due to operator\20new\5b\5d\28unsigned\20long\29
[asyncify] Common::HashMap<Common::String\2c\20Common::String\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>::expandStorage\28unsigned\20int\29 can change the state due to operator\20new\5b\5d\28unsigned\20long\29
[asyncify] Common::HashMap<Common::String\2c\20Gob::DataIO::File\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>::expandStorage\28unsigned\20int\29 can change the state due to operator\20new\5b\5d\28unsigned\20long\29
[asyncify] MadeMetaEngineDetection::fallbackDetect\28Common::HashMap<Common::String\2c\20Common::FSNode\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>\20const&\2c\20Common::FSList\20const&\2c\20ADDetectedGameExtraInfo**\29\20const can change the state due to operator\20new\5b\5d\28unsigned\20long\29
[asyncify] Common::HashMap<Common::String\2c\20Scumm::DetectorDesc\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>::HashMap\28\29 can change the state due to operator\20new\5b\5d\28unsigned\20long\29
[asyncify] Common::HashMap<Common::String\2c\20Scumm::DetectorDesc\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>::expandStorage\28unsigned\20int\29 can change the state due to operator\20new\5b\5d\28unsigned\20long\29
[asyncify] Common::HashMap<Common::String\2c\20SizeMD5\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>::expandStorage\28unsigned\20int\29 can change the state due to operator\20new\5b\5d\28unsigned\20long\29
[asyncify] GUI::ThemeEval::ThemeEval\28\29 can change the state due to operator\20new\5b\5d\28unsigned\20long\29
[asyncify] GUI::ThemeEngine::createCursor\28Common::String\20const&\2c\20int\2c\20int\29 can change the state due to operator\20new\5b\5d\28unsigned\20long\29
[asyncify] Common::HashMap<Common::String\2c\20Graphics::ManagedSurface*\2c\20Common::Hash<Common::String>\2c\20Common::EqualTo<Common::String>>::expandStorage\28unsigned\20int\29 can change the state due to operator\20new\5b\5d\28unsigned\20long\29
[asyncify] Common::HashMap<Common::String\2c\20GUI::ThemeLayout*\2c\20Common::Hash<Common::String>\2c\20Common::EqualTo<Common::String>>::expandStorage\28unsigned\20int\29 can change the state due to operator\20new\5b\5d\28unsigned\20long\29
[asyncify] Common::HashMap<Common::String\2c\20GUI::ThemeParser::PaletteColor\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>::expandStorage\28unsigned\20int\29 can change the state due to operator\20new\5b\5d\28unsigned\20long\29
[asyncify] Common::HashMap<Common::String\2c\20float\2c\20Common::CaseSensitiveString_Hash\2c\20Common::CaseSensitiveString_EqualTo>::expandStorage\28unsigned\20int\29 can change the state due to operator\20new\5b\5d\28unsigned\20long\29
[asyncify] OpenGL::LibRetro::PresetParser::PresetParser\28\29 can change the state due to operator\20new\5b\5d\28unsigned\20long\29
[asyncify] Common::HashMap<Common::String\2c\20Common::String\2c\20Common::Hash<Common::String>\2c\20Common::EqualTo<Common::String>>::expandStorage\28unsigned\20int\29 can change the state due to operator\20new\5b\5d\28unsigned\20long\29
[asyncify] std::logic_error::logic_error\28std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\29 can change the state due to std::__2::__libcpp_refstring::__libcpp_refstring\28char\20const*\29
[asyncify] std::logic_error::logic_error\28char\20const*\29 can change the state due to std::__2::__libcpp_refstring::__libcpp_refstring\28char\20const*\29
[asyncify] std::runtime_error::runtime_error\28std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\29 can change the state due to std::__2::__libcpp_refstring::__libcpp_refstring\28char\20const*\29
[asyncify] std::runtime_error::runtime_error\28char\20const*\29 can change the state due to std::__2::__libcpp_refstring::__libcpp_refstring\28char\20const*\29
[asyncify] std::__2::__allocation_result<std::__2::allocator_traits<std::__2::__hidden_allocator<std::__2::pair<std::__2::condition_variable*\2c\20std::__2::mutex*>>>::pointer>\20std::__2::__allocate_at_least\5babi:v15006\5d<std::__2::__hidden_allocator<std::__2::pair<std::__2::condition_variable*\2c\20std::__2::mutex*>>>\28std::__2::__hidden_allocator<std::__2::pair<std::__2::condition_variable*\2c\20std::__2::mutex*>>&\2c\20unsigned\20long\29 can change the state due to std::__2::__hidden_allocator<std::__2::pair<std::__2::condition_variable*\2c\20std::__2::mutex*>>::allocate\28unsigned\20long\29
[asyncify] std::__2::__allocation_result<std::__2::allocator_traits<std::__2::__hidden_allocator<std::__2::__assoc_sub_state*>>::pointer>\20std::__2::__allocate_at_least\5babi:v15006\5d<std::__2::__hidden_allocator<std::__2::__assoc_sub_state*>>\28std::__2::__hidden_allocator<std::__2::__assoc_sub_state*>&\2c\20unsigned\20long\29 can change the state due to std::__2::__hidden_allocator<std::__2::__assoc_sub_state*>::allocate\28unsigned\20long\29
[asyncify] Common::VirtualMouse::notifyEvent\28Common::Event\20const&\29 can change the state due to Common::VirtualMouse::handleAxisMotion\28short\2c\20short\29
[asyncify] OpenGL::OpenGLGraphicsManager::hasFeature\28OSystem::Feature\29\20const can change the state due to OpenGL::LibRetroPipeline::isSupportedByContext\28\29
[asyncify] virtual\20thunk\20to\20OpenGL::OpenGLGraphicsManager::hasFeature\28OSystem::Feature\29\20const can change the state due to OpenGL::LibRetroPipeline::isSupportedByContext\28\29
[asyncify] virtual\20thunk\20to\20OpenGL::OpenGLGraphicsManager::getSupportedFormats\28\29\20const can change the state due to OpenGL::OpenGLGraphicsManager::getSupportedFormats\28\29\20const
[asyncify] Common::AchievementsManager::getAchievementCount\28\29\20const can change the state due to Common::AchievementsManager::getCurrentLang\28\29\20const
[asyncify] Common::AchievementsManager::getAchievementDescription\28unsigned\20short\29\20const can change the state due to Common::AchievementsManager::getCurrentLang\28\29\20const
[asyncify] Common::INIFile::getKeys\28Common::String\20const&\29\20const can change the state due to Common::List<Common::INIFile::KeyValue>::List\28Common::List<Common::INIFile::KeyValue>\20const&\29
[asyncify] DetectionResults::generateUnknownGameReport\28bool\2c\20unsigned\20int\29\20const can change the state due to generateUnknownGameReport\28Common::Array<DetectedGame>\20const&\2c\20bool\2c\20bool\2c\20unsigned\20int\29
[asyncify] SaveStateDescriptor::isAutosave\28\29\20const can change the state due to SaveStateDescriptor::hasAutosaveName\28\29\20const
[asyncify] GUI::LauncherFilterMatcher\28void*\2c\20int\2c\20Common::U32String\20const&\2c\20Common::U32String\20const&\29 can change the state due to GUI::LauncherDialog::getGameConfig\28int\2c\20Common::String\29
[asyncify] Graphics::MacWindow::disableBorder\28\29 can change the state due to Graphics::MacWindowBorder::disableBorder\28\29
[asyncify] Graphics::MacWindow::setBorderType\28int\29 can change the state due to Graphics::MacWindowBorder::disableBorder\28\29
[asyncify] Graphics::YUVToRGBManager::convert444\28Graphics::Surface*\2c\20Graphics::YUVToRGBManager::LuminanceScale\2c\20unsigned\20char\20const*\2c\20unsigned\20char\20const*\2c\20unsigned\20char\20const*\2c\20int\2c\20int\2c\20int\2c\20int\29 can change the state due to Graphics::YUVToRGBManager::getLookup\28Graphics::PixelFormat\2c\20Graphics::YUVToRGBManager::LuminanceScale\2c\20bool\29
[asyncify] Graphics::YUVToRGBManager::convert420\28Graphics::Surface*\2c\20Graphics::YUVToRGBManager::LuminanceScale\2c\20unsigned\20char\20const*\2c\20unsigned\20char\20const*\2c\20unsigned\20char\20const*\2c\20int\2c\20int\2c\20int\2c\20int\29 can change the state due to Graphics::YUVToRGBManager::getLookup\28Graphics::PixelFormat\2c\20Graphics::YUVToRGBManager::LuminanceScale\2c\20bool\29
[asyncify] Graphics::YUVToRGBManager::convert420Alpha\28Graphics::Surface*\2c\20Graphics::YUVToRGBManager::LuminanceScale\2c\20unsigned\20char\20const*\2c\20unsigned\20char\20const*\2c\20unsigned\20char\20const*\2c\20unsigned\20char\20const*\2c\20int\2c\20int\2c\20int\2c\20int\29 can change the state due to Graphics::YUVToRGBManager::getLookup\28Graphics::PixelFormat\2c\20Graphics::YUVToRGBManager::LuminanceScale\2c\20bool\29
[asyncify] Graphics::YUVToRGBManager::convert410\28Graphics::Surface*\2c\20Graphics::YUVToRGBManager::LuminanceScale\2c\20unsigned\20char\20const*\2c\20unsigned\20char\20const*\2c\20unsigned\20char\20const*\2c\20int\2c\20int\2c\20int\2c\20int\29 can change the state due to Graphics::YUVToRGBManager::getLookup\28Graphics::PixelFormat\2c\20Graphics::YUVToRGBManager::LuminanceScale\2c\20bool\29
[asyncify] virtual\20thunk\20to\20OSystem_SDL::getHardwareInputSet\28\29 can change the state due to OSystem_SDL::getHardwareInputSet\28\29
[asyncify] OSystem_SDL::createMutex\28\29 can change the state due to createSdlMutexInternal\28\29
[asyncify] virtual\20thunk\20to\20OSystem_SDL::createMutex\28\29 can change the state due to createSdlMutexInternal\28\29
[asyncify] std::__2::__barrier_algorithm_base::__barrier_algorithm_base\28long&\29 can change the state due to operator\20new\5b\5d\28unsigned\20long\2c\20std::align_val_t\29
[asyncify] operator\20new\5b\5d\28unsigned\20long\2c\20std::align_val_t\2c\20std::nothrow_t\20const&\29 can change the state due to operator\20new\5b\5d\28unsigned\20long\2c\20std::align_val_t\29
[asyncify] std::__2::__fs::filesystem::__remove_all\28std::__2::__fs::filesystem::path\20const&\2c\20std::__2::error_code*\29 can change the state due to std::__2::__fs::filesystem::\28anonymous\20namespace\29::remove_all_impl\28int\2c\20std::__2::__fs::filesystem::path\20const&\2c\20std::__2::error_code&\29
[asyncify] std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::find_first_of\28char\20const*\2c\20unsigned\20long\2c\20unsigned\20long\29\20const can change the state due to unsigned\20long\20std::__2::__str_find_first_of\5babi:v15006\5d<char\2c\20unsigned\20long\2c\20std::__2::char_traits<char>\2c\204294967295ul>\28char\20const*\2c\20unsigned\20long\2c\20char\20const*\2c\20unsigned\20long\2c\20unsigned\20long\29
[asyncify] std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>::find_first_of\28wchar_t\20const*\2c\20unsigned\20long\2c\20unsigned\20long\29\20const can change the state due to unsigned\20long\20std::__2::__str_find_first_of\5babi:v15006\5d<wchar_t\2c\20unsigned\20long\2c\20std::__2::char_traits<wchar_t>\2c\204294967295ul>\28wchar_t\20const*\2c\20unsigned\20long\2c\20wchar_t\20const*\2c\20unsigned\20long\2c\20unsigned\20long\29
[asyncify] char\20const*\20std::__2::__find_end_classic\5babi:v15006\5d<char\20const*\2c\20char\20const*\2c\20bool\20\28char\2c\20char\29\20noexcept>\28char\20const*\2c\20char\20const*\2c\20char\20const*\2c\20char\20const*\2c\20bool\20\28&\29\28char\2c\20char\29\20noexcept\29 can change the state due to std::__2::pair<char\20const*\2c\20char\20const*>\20std::__2::__find_end_impl\5babi:v15006\5d<std::__2::_ClassicAlgPolicy\2c\20char\20const*\2c\20char\20const*\2c\20char\20const*\2c\20char\20const*\2c\20bool\20\28char\2c\20char\29\20noexcept\2c\20std::__2::__identity\2c\20std::__2::__identity>\28char\20const*\2c\20char\20const*\2c\20char\20const*\2c\20char\20const*\2c\20bool\20\28&\29\28char\2c\20char\29\20noexcept\2c\20std::__2::__identity&\2c\20std::__2::__identity&\2c\20std::__2::forward_iterator_tag\2c\20std::__2::forward_iterator_tag\29
[asyncify] wchar_t\20const*\20std::__2::__find_end_classic\5babi:v15006\5d<wchar_t\20const*\2c\20wchar_t\20const*\2c\20bool\20\28wchar_t\2c\20wchar_t\29\20noexcept>\28wchar_t\20const*\2c\20wchar_t\20const*\2c\20wchar_t\20const*\2c\20wchar_t\20const*\2c\20bool\20\28&\29\28wchar_t\2c\20wchar_t\29\20noexcept\29 can change the state due to std::__2::pair<wchar_t\20const*\2c\20wchar_t\20const*>\20std::__2::__find_end_impl\5babi:v15006\5d<std::__2::_ClassicAlgPolicy\2c\20wchar_t\20const*\2c\20wchar_t\20const*\2c\20wchar_t\20const*\2c\20wchar_t\20const*\2c\20bool\20\28wchar_t\2c\20wchar_t\29\20noexcept\2c\20std::__2::__identity\2c\20std::__2::__identity>\28wchar_t\20const*\2c\20wchar_t\20const*\2c\20wchar_t\20const*\2c\20wchar_t\20const*\2c\20bool\20\28&\29\28wchar_t\2c\20wchar_t\29\20noexcept\2c\20std::__2::__identity&\2c\20std::__2::__identity&\2c\20std::__2::forward_iterator_tag\2c\20std::__2::forward_iterator_tag\29
[asyncify] std::__2::istrstream::~istrstream\28\29.1 can change the state due to std::__2::istrstream::~istrstream\28\29
[asyncify] std::__2::ostrstream::~ostrstream\28\29.1 can change the state due to std::__2::ostrstream::~ostrstream\28\29
[asyncify] std::__2::strstream::~strstream\28\29.1 can change the state due to std::__2::strstream::~strstream\28\29
[asyncify] std::__2::system_error::system_error\28std::__2::error_code\2c\20std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\29 can change the state due to std::__2::system_error::__init\28std::__2::error_code\20const&\2c\20std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\29
[asyncify] std::__2::system_error::system_error\28std::__2::error_code\2c\20char\20const*\29 can change the state due to std::__2::system_error::__init\28std::__2::error_code\20const&\2c\20std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\29
[asyncify] std::__2::system_error::system_error\28std::__2::error_code\29 can change the state due to std::__2::system_error::__init\28std::__2::error_code\20const&\2c\20std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\29
[asyncify] std::__2::system_error::system_error\28int\2c\20std::__2::error_category\20const&\2c\20std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\29 can change the state due to std::__2::system_error::__init\28std::__2::error_code\20const&\2c\20std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\29
[asyncify] std::__2::system_error::system_error\28int\2c\20std::__2::error_category\20const&\2c\20char\20const*\29 can change the state due to std::__2::system_error::__init\28std::__2::error_code\20const&\2c\20std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\29
[asyncify] std::__2::system_error::system_error\28int\2c\20std::__2::error_category\20const&\29 can change the state due to std::__2::system_error::__init\28std::__2::error_code\20const&\2c\20std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::BinaryExpr::printLeft\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\29\20const can change the state due to \28anonymous\20namespace\29::itanium_demangle::Node::printAsOperand\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node::Prec\2c\20bool\29\20const
[asyncify] \28anonymous\20namespace\29::itanium_demangle::PrefixExpr::printLeft\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\29\20const can change the state due to \28anonymous\20namespace\29::itanium_demangle::Node::printAsOperand\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node::Prec\2c\20bool\29\20const
[asyncify] \28anonymous\20namespace\29::itanium_demangle::PostfixExpr::printLeft\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\29\20const can change the state due to \28anonymous\20namespace\29::itanium_demangle::Node::printAsOperand\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node::Prec\2c\20bool\29\20const
[asyncify] \28anonymous\20namespace\29::itanium_demangle::ArraySubscriptExpr::printLeft\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\29\20const can change the state due to \28anonymous\20namespace\29::itanium_demangle::Node::printAsOperand\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node::Prec\2c\20bool\29\20const
[asyncify] \28anonymous\20namespace\29::itanium_demangle::MemberExpr::printLeft\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\29\20const can change the state due to \28anonymous\20namespace\29::itanium_demangle::Node::printAsOperand\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node::Prec\2c\20bool\29\20const
[asyncify] \28anonymous\20namespace\29::itanium_demangle::NodeArray::printWithComma\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\29\20const can change the state due to \28anonymous\20namespace\29::itanium_demangle::Node::printAsOperand\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node::Prec\2c\20bool\29\20const
[asyncify] \28anonymous\20namespace\29::itanium_demangle::ConditionalExpr::printLeft\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\29\20const can change the state due to \28anonymous\20namespace\29::itanium_demangle::Node::printAsOperand\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node::Prec\2c\20bool\29\20const
[asyncify] \28anonymous\20namespace\29::itanium_demangle::FoldExpr::printLeft\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\29\20const can change the state due to \28anonymous\20namespace\29::itanium_demangle::Node::printAsOperand\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node::Prec\2c\20bool\29\20const
[asyncify] \28anonymous\20namespace\29::itanium_demangle::NoexceptSpec::printLeft\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\29\20const can change the state due to \28anonymous\20namespace\29::itanium_demangle::Node::printAsOperand\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node::Prec\2c\20bool\29\20const
[asyncify] \28anonymous\20namespace\29::itanium_demangle::BitIntType::printLeft\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\29\20const can change the state due to \28anonymous\20namespace\29::itanium_demangle::Node::printAsOperand\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node::Prec\2c\20bool\29\20const
[asyncify] \28anonymous\20namespace\29::itanium_demangle::SizeofParamPackExpr::printLeft\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\29\20const can change the state due to \28anonymous\20namespace\29::itanium_demangle::ParameterPackExpansion::printLeft\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\29\20const
[asyncify] \28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::parse\28\29 can change the state due to \28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::parseType\28\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::parseEncoding\28\29 can change the state due to \28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::parseType\28\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::parseSpecialName\28\29 can change the state due to \28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::parseType\28\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::parsePointerToMemberType\28\29 can change the state due to \28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::parseType\28\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::parseQualifiedType\28\29 can change the state due to \28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::parseType\28\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::parseExprPrimary\28\29 can change the state due to \28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::parseType\28\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::parseUnnamedTypeName\28\28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::NameState*\29 can change the state due to \28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::parseType\28\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::parseOperatorName\28\28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::NameState*\29 can change the state due to \28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::parseType\28\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::parseTemplateParamDecl\28\29 can change the state due to \28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::parseType\28\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::parseTemplateArgs\28bool\29 can change the state due to \28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::parseTemplateArg\28\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::parseNestedName\28\28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::NameState*\29 can change the state due to \28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::parseDecltype\28\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::parseUnresolvedType\28\29 can change the state due to \28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::parseDecltype\28\29
[asyncify] std::nested_exception::rethrow_nested\28\29\20const can change the state due to std::terminate\28\29
[asyncify] std::rethrow_exception\28std::exception_ptr\29 can change the state due to std::terminate\28\29
[asyncify] std::__2::thread::~thread\28\29 can change the state due to std::terminate\28\29
[asyncify] __cxa_bad_cast can change the state due to std::terminate\28\29
[asyncify] __cxa_bad_typeid can change the state due to std::terminate\28\29
[asyncify] __cxa_throw_bad_array_new_length can change the state due to std::terminate\28\29
[asyncify] demangling_unexpected_handler\28\29 can change the state due to std::terminate\28\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::OutputBuffer::grow\28unsigned\20long\29 can change the state due to std::terminate\28\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::PODSmallVector<\28anonymous\20namespace\29::itanium_demangle::Node*\2c\2032ul>::reserve\28unsigned\20long\29 can change the state due to std::terminate\28\29
[asyncify] \28anonymous\20namespace\29::BumpPointerAllocator::allocateMassive\28unsigned\20long\29 can change the state due to std::terminate\28\29
[asyncify] \28anonymous\20namespace\29::BumpPointerAllocator::grow\28\29 can change the state due to std::terminate\28\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::PODSmallVector<\28anonymous\20namespace\29::itanium_demangle::ForwardTemplateReference*\2c\204ul>::reserve\28unsigned\20long\29 can change the state due to std::terminate\28\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::PODSmallVector<\28anonymous\20namespace\29::itanium_demangle::PODSmallVector<\28anonymous\20namespace\29::itanium_demangle::Node*\2c\208ul>*\2c\204ul>::reserve\28unsigned\20long\29 can change the state due to std::terminate\28\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::PODSmallVector<\28anonymous\20namespace\29::itanium_demangle::Node*\2c\208ul>::reserve\28unsigned\20long\29 can change the state due to std::terminate\28\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::PODSmallVector<\28anonymous\20namespace\29::itanium_demangle::Node\20const*\2c\208ul>::reserve\28unsigned\20long\29 can change the state due to std::terminate\28\29
[asyncify] __cxa_increment_exception_refcount can change the state due to std::terminate\28\29
[asyncify] __cxa_decrement_exception_refcount can change the state due to std::terminate\28\29
[asyncify] __cxa_rethrow_primary_exception can change the state due to std::terminate\28\29
[asyncify] __cxx_global_array_dtor.4 can change the state due to __cxxabiv1::\28anonymous\20namespace\29::DtorsManager::~DtorsManager\28\29
[asyncify] auxresume\28lua_State*\2c\20lua_State*\2c\20int\29 can change the state due to lua_resume\28lua_State*\2c\20int\29
[asyncify] SDL_MemoryBarrierReleaseFunction can change the state due to SDL_AtomicLock
[asyncify] SDL_MemoryBarrierAcquireFunction can change the state due to SDL_AtomicLock
[asyncify] GUI::Debugger::cmdDebugLevel\28int\2c\20char\20const**\29 can change the state due to GUI::Debugger::debugPrintf\28char\20const*\2c\20...\29
[asyncify] GUI::Debugger::debugPrintColumns\28Common::Array<Common::String>\20const&\29 can change the state due to GUI::Debugger::debugPrintf\28char\20const*\2c\20...\29
[asyncify] GUI::GroupedListWidget::~GroupedListWidget\28\29 can change the state due to GUI::ListWidget::~ListWidget\28\29
[asyncify] GUI::ListWidget::~ListWidget\28\29.1 can change the state due to GUI::ListWidget::~ListWidget\28\29
[asyncify] non-virtual\20thunk\20to\20GUI::ListWidget::~ListWidget\28\29 can change the state due to GUI::ListWidget::~ListWidget\28\29
[asyncify] non-virtual\20thunk\20to\20GUI::ListWidget::~ListWidget\28\29.1 can change the state due to GUI::ListWidget::~ListWidget\28\29
[asyncify] OSystem_Emscripten::hasFeature\28OSystem::Feature\29 can change the state due to OSystem_POSIX::hasFeature\28OSystem::Feature\29
[asyncify] non-virtual\20thunk\20to\20OSystem_Emscripten::hasFeature\28OSystem::Feature\29 can change the state due to OSystem_POSIX::hasFeature\28OSystem::Feature\29
[asyncify] virtual\20thunk\20to\20OSystem_Emscripten::hasFeature\28OSystem::Feature\29 can change the state due to OSystem_POSIX::hasFeature\28OSystem::Feature\29
[asyncify] OpenGL::TextureRGB555::TextureRGB555\28\29 can change the state due to OpenGL::FakeTexture::FakeTexture\28unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int\2c\20Graphics::PixelFormat\20const&\2c\20Graphics::PixelFormat\20const&\29
[asyncify] OpenGL::TextureRGBA8888Swap::TextureRGBA8888Swap\28\29 can change the state due to OpenGL::FakeTexture::FakeTexture\28unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int\2c\20Graphics::PixelFormat\20const&\2c\20Graphics::PixelFormat\20const&\29
[asyncify] OpenGL::ScaledTexture::ScaledTexture\28unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int\2c\20Graphics::PixelFormat\20const&\2c\20Graphics::PixelFormat\20const&\29 can change the state due to OpenGL::FakeTexture::FakeTexture\28unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int\2c\20Graphics::PixelFormat\20const&\2c\20Graphics::PixelFormat\20const&\29
[asyncify] Graphics::MacWindow::loadBorder\28Common::SeekableReadStream&\2c\20unsigned\20int\2c\20int\2c\20int\2c\20int\2c\20int\29 can change the state due to Graphics::MacWindowBorder::loadBorder\28Common::SeekableReadStream&\2c\20unsigned\20int\2c\20int\2c\20int\2c\20int\2c\20int\29
[asyncify] Graphics::MacTextWindow::setTextWindowFont\28Graphics::MacFont\20const*\29 can change the state due to Graphics::MacFontManager::getFont\28Graphics::MacFont\29
[asyncify] Graphics::MacWindow::setBorder\28Graphics::TransparentSurface*\2c\20unsigned\20int\2c\20Graphics::BorderOffsets\29 can change the state due to Graphics::MacWindowBorder::setBorder\28Graphics::TransparentSurface*\2c\20unsigned\20int\2c\20Graphics::BorderOffsets\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29
[asyncify] TinyGL::glopDrawArrays\28TinyGL::GLContext*\2c\20TinyGL::GLParam*\29 can change the state due to TinyGL::GLContext::glopDrawArrays\28TinyGL::GLParam*\29
[asyncify] TinyGL::glopDrawElements\28TinyGL::GLContext*\2c\20TinyGL::GLParam*\29 can change the state due to TinyGL::GLContext::glopDrawElements\28TinyGL::GLParam*\29
[asyncify] MidiDriver_SEQ::MidiDriver_SEQ\28\29 can change the state due to MidiDriver_MPU401::MidiDriver_MPU401\28\29
[asyncify] MidiDriver_TIMIDITY::MidiDriver_TIMIDITY\28\29 can change the state due to MidiDriver_MPU401::MidiDriver_MPU401\28\29
[asyncify] MidiDriver_NULL::~MidiDriver_NULL\28\29 can change the state due to MidiDriver_MPU401::~MidiDriver_MPU401\28\29
[asyncify] MidiDriver_SEQ::~MidiDriver_SEQ\28\29 can change the state due to MidiDriver_MPU401::~MidiDriver_MPU401\28\29
[asyncify] MidiDriver_TIMIDITY::~MidiDriver_TIMIDITY\28\29 can change the state due to MidiDriver_MPU401::~MidiDriver_MPU401\28\29
[asyncify] EuphonyDriver::~EuphonyDriver\28\29.1 can change the state due to EuphonyDriver::~EuphonyDriver\28\29
[asyncify] Lua::LuaFileConfig::~LuaFileConfig\28\29.1 can change the state due to Lua::LuaFileConfig::~LuaFileConfig\28\29
[asyncify] Common::punycode_decodepath\28Common::Path\20const&\29 can change the state due to Common::punycode_decodefilename\28Common::String\20const&\29
[asyncify] Common::HashMap<Common::String\2c\20FileProperties\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>::lookupAndCreateIfMissing\28Common::String\20const&\29 can change the state due to Common::BaseString<char>::BaseString\28Common::BaseString<char>\20const&\29
[asyncify] SynthFile::SynthFile\28Common::String\29 can change the state due to Common::BaseString<char>::BaseString\28Common::BaseString<char>\20const&\29
[asyncify] SynthInstr::SynthInstr\28unsigned\20int\2c\20unsigned\20int\2c\20Common::String\29 can change the state due to Common::BaseString<char>::BaseString\28Common::BaseString<char>\20const&\29
[asyncify] VGMItem::VGMItem\28VGMFile*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20Common::String\29 can change the state due to Common::BaseString<char>::BaseString\28Common::BaseString<char>\20const&\29
[asyncify] VGMFile::VGMFile\28RawFile*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20Common::String\29 can change the state due to Common::BaseString<char>::BaseString\28Common::BaseString<char>\20const&\29
[asyncify] VGMHeader::VGMHeader\28VGMItem*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20Common::String\20const&\29 can change the state due to Common::BaseString<char>::BaseString\28Common::BaseString<char>\20const&\29
[asyncify] VGMRgnItem::VGMRgnItem\28VGMRgn*\2c\20VGMRgnItem::RgnItemType\2c\20unsigned\20int\2c\20unsigned\20int\2c\20Common::String\20const&\29 can change the state due to Common::BaseString<char>::BaseString\28Common::BaseString<char>\20const&\29
[asyncify] VGMSamp::VGMSamp\28VGMSampColl*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20char\2c\20unsigned\20short\2c\20unsigned\20int\2c\20Common::String\29 can change the state due to Common::BaseString<char>::BaseString\28Common::BaseString<char>\20const&\29
[asyncify] PSXSamp::PSXSamp\28VGMSampColl*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20char\2c\20unsigned\20short\2c\20unsigned\20int\2c\20Common::String\2c\20bool\29 can change the state due to Common::BaseString<char>::BaseString\28Common::BaseString<char>\20const&\29
[asyncify] Common::GenericArchiveMember::GenericArchiveMember\28Common::String\20const&\2c\20Common::Archive\20const*\29 can change the state due to Common::BaseString<char>::BaseString\28Common::BaseString<char>\20const&\29
[asyncify] Common::GenericArchiveMember::getName\28\29\20const can change the state due to Common::BaseString<char>::BaseString\28Common::BaseString<char>\20const&\29
[asyncify] Common::HashMap<Common::String\2c\20Common::SharedArchiveContents\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>::lookupAndCreateIfMissing\28Common::String\20const&\29 can change the state due to Common::BaseString<char>::BaseString\28Common::BaseString<char>\20const&\29
[asyncify] Common::BaseString<char>::assignAppend\28Common::BaseString<char>\20const&\29 can change the state due to Common::BaseString<char>::BaseString\28Common::BaseString<char>\20const&\29
[asyncify] Common::HashMap<Common::String\2c\20Common::ConfigManager::Domain\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>::lookupAndCreateIfMissing\28Common::String\20const&\29 can change the state due to Common::BaseString<char>::BaseString\28Common::BaseString<char>\20const&\29
[asyncify] Common::HashMap<Common::String\2c\20Common::DebugManager::DebugChannel\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>::lookupAndCreateIfMissing\28Common::String\20const&\29 can change the state due to Common::BaseString<char>::BaseString\28Common::BaseString<char>\20const&\29
[asyncify] void\20Common::sort<Common::ListInternal::Iterator<Common::DebugManager::DebugChannel>\2c\20Common::\28anonymous\20namespace\29::DebugLevelComperator>\28Common::ListInternal::Iterator<Common::DebugManager::DebugChannel>\2c\20Common::ListInternal::Iterator<Common::DebugManager::DebugChannel>\2c\20Common::\28anonymous\20namespace\29::DebugLevelComperator\29 can change the state due to Common::BaseString<char>::BaseString\28Common::BaseString<char>\20const&\29
[asyncify] Common::ListInternal::Iterator<Common::String>\20Common::sortPartition<Common::ListInternal::Iterator<Common::String>\2c\20Common::Less<Common::String>>\28Common::ListInternal::Iterator<Common::String>\2c\20Common::ListInternal::Iterator<Common::String>\2c\20Common::ListInternal::Iterator<Common::String>\2c\20Common::Less<Common::String>&\29 can change the state due to Common::BaseString<char>::BaseString\28Common::BaseString<char>\20const&\29
[asyncify] Common::MacResManager::constructAppleDoubleName\28Common::Path\29 can change the state due to Common::BaseString<char>::BaseString\28Common::BaseString<char>\20const&\29
[asyncify] Common::MacResManager::disassembleAppleDoubleName\28Common::Path\2c\20bool*\29 can change the state due to Common::BaseString<char>::BaseString\28Common::BaseString<char>\20const&\29
[asyncify] Common::operator+\28Common::String\20const&\2c\20Common::String\20const&\29 can change the state due to Common::BaseString<char>::BaseString\28Common::BaseString<char>\20const&\29
[asyncify] Common::operator+\28Common::String\20const&\2c\20char\20const*\29 can change the state due to Common::BaseString<char>::BaseString\28Common::BaseString<char>\20const&\29
[asyncify] Common::TTSVoice::TTSVoice\28Common::TTSVoice\20const&\29 can change the state due to Common::BaseString<char>::BaseString\28Common::BaseString<char>\20const&\29
[asyncify] Common::StringTokenizer::StringTokenizer\28Common::String\20const&\2c\20Common::String\20const&\29 can change the state due to Common::BaseString<char>::BaseString\28Common::BaseString<char>\20const&\29
[asyncify] Common::U32StringTokenizer::U32StringTokenizer\28Common::U32String\20const&\2c\20Common::String\20const&\29 can change the state due to Common::BaseString<char>::BaseString\28Common::BaseString<char>\20const&\29
[asyncify] Common::TranslationManager::findMatchingLanguage\28Common::String\20const&\29 can change the state due to Common::BaseString<char>::BaseString\28Common::BaseString<char>\20const&\29
[asyncify] Common::TranslationManager::getCurrentLanguage\28\29\20const can change the state due to Common::BaseString<char>::BaseString\28Common::BaseString<char>\20const&\29
[asyncify] Common::HashMap<Common::String\2c\20Common::ClickteamInstaller::ClickteamFileDescriptor\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>::lookupAndCreateIfMissing\28Common::String\20const&\29 can change the state due to Common::BaseString<char>::BaseString\28Common::BaseString<char>\20const&\29
[asyncify] Common::HashMap<Common::String\2c\20Common::InstallShieldV3::FileEntry\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>::lookupAndCreateIfMissing\28Common::String\20const&\29 can change the state due to Common::BaseString<char>::BaseString\28Common::BaseString<char>\20const&\29
[asyncify] Common::HashMap<Common::String\2c\20Common::MacFinderInfoData\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>::lookupAndCreateIfMissing\28Common::String\20const&\29 can change the state due to Common::BaseString<char>::BaseString\28Common::BaseString<char>\20const&\29
[asyncify] Common::HashMap<Common::String\2c\20Common::StuffItArchive::FileEntry\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>::lookupAndCreateIfMissing\28Common::String\20const&\29 can change the state due to Common::BaseString<char>::BaseString\28Common::BaseString<char>\20const&\29
[asyncify] Common::HashMap<Common::String\2c\20Common::Array<Common::ArjFileChunk>\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>::lookupAndCreateIfMissing\28Common::String\20const&\29 can change the state due to Common::BaseString<char>::BaseString\28Common::BaseString<char>\20const&\29
[asyncify] Common::HashMap<Common::String\2c\20cached_file_in_zip\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>::lookupAndCreateIfMissing\28Common::String\20const&\29 can change the state due to Common::BaseString<char>::BaseString\28Common::BaseString<char>\20const&\29
[asyncify] Common::MacVISEArchive::ArchiveMember::getName\28\29\20const can change the state due to Common::BaseString<char>::BaseString\28Common::BaseString<char>\20const&\29
[asyncify] Common::HashMap<Common::String\2c\20Common::JSONValue*\2c\20Common::Hash<Common::String>\2c\20Common::EqualTo<Common::String>>::lookupAndCreateIfMissing\28Common::String\20const&\29 can change the state due to Common::BaseString<char>::BaseString\28Common::BaseString<char>\20const&\29
[asyncify] Common::WinResourceID::getString\28\29\20const can change the state due to Common::BaseString<char>::BaseString\28Common::BaseString<char>\20const&\29
[asyncify] Common::WinResourceID::toString\28\29\20const can change the state due to Common::BaseString<char>::BaseString\28Common::BaseString<char>\20const&\29
[asyncify] Common::HashMap<Common::String\2c\20Common::U32String\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>::lookupAndCreateIfMissing\28Common::String\20const&\29 can change the state due to Common::BaseString<char>::BaseString\28Common::BaseString<char>\20const&\29
[asyncify] Common::HashMap<Common::WinResourceID\2c\20Common::String\2c\20Common::WinResourceID_Hash\2c\20Common::WinResourceID_EqualTo>::lookupAndCreateIfMissing\28Common::WinResourceID\20const&\29 can change the state due to Common::BaseString<char>::BaseString\28Common::BaseString<char>\20const&\29
[asyncify] Common::WinResourceID::WinResourceID\28Common::WinResourceID\20const&\29 can change the state due to Common::BaseString<char>::BaseString\28Common::BaseString<char>\20const&\29
[asyncify] Common::HashMap<Common::String\2c\20Common::PEResources::Section\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>::lookupAndCreateIfMissing\28Common::String\20const&\29 can change the state due to Common::BaseString<char>::BaseString\28Common::BaseString<char>\20const&\29
[asyncify] Common::HashMap<Common::WinResourceID\2c\20Common::HashMap<Common::WinResourceID\2c\20Common::HashMap<Common::WinResourceID\2c\20Common::PEResources::Resource\2c\20Common::WinResourceID_Hash\2c\20Common::WinResourceID_EqualTo>\2c\20Common::WinResourceID_Hash\2c\20Common::WinResourceID_EqualTo>\2c\20Common::WinResourceID_Hash\2c\20Common::WinResourceID_EqualTo>::lookupAndCreateIfMissing\28Common::WinResourceID\20const&\29 can change the state due to Common::BaseString<char>::BaseString\28Common::BaseString<char>\20const&\29
[asyncify] Common::HashMap<Common::WinResourceID\2c\20Common::PEResources::Resource\2c\20Common::WinResourceID_Hash\2c\20Common::WinResourceID_EqualTo>::lookupAndCreateIfMissing\28Common::WinResourceID\20const&\29 can change the state due to Common::BaseString<char>::BaseString\28Common::BaseString<char>\20const&\29
[asyncify] Video::AVIDecoder::AVIAudioTrack::AVIAudioTrack\28Video::AVIDecoder::AVIStreamHeader\20const&\2c\20Video::AVIDecoder::PCMWaveFormat\20const&\2c\20Audio::Mixer::SoundType\29 can change the state due to Common::BaseString<char>::BaseString\28Common::BaseString<char>\20const&\29
[asyncify] Graphics::FontManager::setLocalizedFont\28Common::String\20const&\29 can change the state due to Common::BaseString<char>::BaseString\28Common::BaseString<char>\20const&\29
[asyncify] Common::HashMap<Common::String\2c\20Graphics::Font\20const*\2c\20Common::Hash<Common::String>\2c\20Common::EqualTo<Common::String>>::lookupAndCreateIfMissing\28Common::String\20const&\29 can change the state due to Common::BaseString<char>::BaseString\28Common::BaseString<char>\20const&\29
[asyncify] Graphics::FontManager::getFontByName\28Common::String\20const&\29\20const can change the state due to Common::BaseString<char>::BaseString\28Common::BaseString<char>\20const&\29
[asyncify] Graphics::cleanFontName\28Common::String\29 can change the state due to Common::BaseString<char>::BaseString\28Common::BaseString<char>\20const&\29
[asyncify] Common::HashMap<Common::String\2c\20Common::SeekableReadStream*\2c\20Common::Hash<Common::String>\2c\20Common::EqualTo<Common::String>>::lookupAndCreateIfMissing\28Common::String\20const&\29 can change the state due to Common::BaseString<char>::BaseString\28Common::BaseString<char>\20const&\29
[asyncify] Common::HashMap<Common::String\2c\20Graphics::MacFont*\2c\20Common::Hash<Common::String>\2c\20Common::EqualTo<Common::String>>::lookupAndCreateIfMissing\28Common::String\20const&\29 can change the state due to Common::BaseString<char>::BaseString\28Common::BaseString<char>\20const&\29
[asyncify] Common::HashMap<Common::String\2c\20Graphics::Font*\2c\20Common::Hash<Common::String>\2c\20Common::EqualTo<Common::String>>::lookupAndCreateIfMissing\28Common::String\20const&\29 can change the state due to Common::BaseString<char>::BaseString\28Common::BaseString<char>\20const&\29
[asyncify] MusicDevice::getCompleteId\28\29 can change the state due to Common::BaseString<char>::BaseString\28Common::BaseString<char>\20const&\29
[asyncify] MusicDevice::getHandle\28\29 can change the state due to Common::BaseString<char>::BaseString\28Common::BaseString<char>\20const&\29
[asyncify] Common::Array<GUI::TabWidget::Tab>::remove_at\28unsigned\20int\29 can change the state due to Common::BaseString<char>::BaseString\28Common::BaseString<char>\20const&\29
[asyncify] Common::ArtificialEventSource::pollEvent\28Common::Event&\29 can change the state due to Common::BaseString<char>::BaseString\28Common::BaseString<char>\20const&\29
[asyncify] Common::InputWatcher::checkForCapturedInput\28\29 can change the state due to Common::BaseString<char>::BaseString\28Common::BaseString<char>\20const&\29
[asyncify] Common::HashMap<Common::HardwareInput\2c\20Common::Array<Common::Action*>\2c\20Common::HardwareInput_Hash\2c\20Common::HardwareInput_EqualTo>::lookupAndCreateIfMissing\28Common::HardwareInput\20const&\29 can change the state due to Common::BaseString<char>::BaseString\28Common::BaseString<char>\20const&\29
[asyncify] Common::HardwareInput*\20Common::sortPartition<Common::HardwareInput*\2c\20Common::HardwareInputTypeIdComparator>\28Common::HardwareInput*\2c\20Common::HardwareInput*\2c\20Common::HardwareInput*\2c\20Common::HardwareInputTypeIdComparator&\29 can change the state due to Common::BaseString<char>::BaseString\28Common::BaseString<char>\20const&\29
[asyncify] Common::SaveFileManager::getError\28\29 can change the state due to Common::BaseString<char>::BaseString\28Common::BaseString<char>\20const&\29
[asyncify] Common::SaveFileManager::getErrorDesc\28\29 can change the state due to Common::BaseString<char>::BaseString\28Common::BaseString<char>\20const&\29
[asyncify] Common::HashMap<Common::String\2c\20bool\2c\20Common::Hash<Common::String>\2c\20Common::EqualTo<Common::String>>::lookupAndCreateIfMissing\28Common::String\20const&\29 can change the state due to Common::BaseString<char>::BaseString\28Common::BaseString<char>\20const&\29
[asyncify] Common::HashMap<Common::String\2c\20void\20\28*\29\28void*\29\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>::lookupAndCreateIfMissing\28Common::String\20const&\29 can change the state due to Common::BaseString<char>::BaseString\28Common::BaseString<char>\20const&\29
[asyncify] RiffFile::RiffFile\28Common::String\20const&\2c\20Common::String\20const&\29 can change the state due to Common::BaseString<char>::BaseString\28Common::BaseString<char>\20const&\29
[asyncify] RIFFChunk::RIFFChunk\28Common::String\29 can change the state due to Common::BaseString<char>::BaseString\28Common::BaseString<char>\20const&\29
[asyncify] LISTChunk::LISTChunk\28Common::String\29 can change the state due to Common::BaseString<char>::BaseString\28Common::BaseString<char>\20const&\29
[asyncify] Common::String*\20Common::sortPartition<Common::String*\2c\20Common::Less<Common::String>>\28Common::String*\2c\20Common::String*\2c\20Common::String*\2c\20Common::Less<Common::String>&\29 can change the state due to Common::BaseString<char>::BaseString\28Common::BaseString<char>\20const&\29
[asyncify] Common::HashMap<Common::String\2c\20Common::Array<Common::AchievementDescription>\2c\20Common::Hash<Common::String>\2c\20Common::EqualTo<Common::String>>::lookupAndCreateIfMissing\28Common::String\20const&\29 can change the state due to Common::BaseString<char>::BaseString\28Common::BaseString<char>\20const&\29
[asyncify] Common::HashMap<Common::String\2c\20long\20long\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>::lookupAndCreateIfMissing\28Common::String\20const&\29 can change the state due to Common::BaseString<char>::BaseString\28Common::BaseString<char>\20const&\29
[asyncify] Common::HashMap<Common::String\2c\20int\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>::lookupAndCreateIfMissing\28Common::String\20const&\29 can change the state due to Common::BaseString<char>::BaseString\28Common::BaseString<char>\20const&\29
[asyncify] ChainedGamesManager::pop\28Common::String&\2c\20int&\29 can change the state due to Common::BaseString<char>::BaseString\28Common::BaseString<char>\20const&\29
[asyncify] Common::HashMap<Common::String\2c\20Common::SharedPtr<Common::Functor2<int\2c\20char\20const**\2c\20bool>>\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>::lookupAndCreateIfMissing\28Common::String\20const&\29 can change the state due to Common::BaseString<char>::BaseString\28Common::BaseString<char>\20const&\29
[asyncify] Common::HashMap<Common::String\2c\20GUI::MetadataGame\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>::lookupAndCreateIfMissing\28Common::String\20const&\29 can change the state due to Common::BaseString<char>::BaseString\28Common::BaseString<char>\20const&\29
[asyncify] void\20SWAP<GUI::LauncherEntry>\28GUI::LauncherEntry&\2c\20GUI::LauncherEntry&\29 can change the state due to Common::BaseString<char>::BaseString\28Common::BaseString<char>\20const&\29
[asyncify] GUI::GridItemInfo*\20Common::uninitialized_copy<GUI::GridItemInfo*\2c\20GUI::GridItemInfo>\28GUI::GridItemInfo*\2c\20GUI::GridItemInfo*\2c\20GUI::GridItemInfo*\29 can change the state due to Common::BaseString<char>::BaseString\28Common::BaseString<char>\20const&\29
[asyncify] GUI::GridItemInfo*\20Common::uninitialized_copy<GUI::GridItemInfo\20const*\2c\20GUI::GridItemInfo>\28GUI::GridItemInfo\20const*\2c\20GUI::GridItemInfo\20const*\2c\20GUI::GridItemInfo*\29 can change the state due to Common::BaseString<char>::BaseString\28Common::BaseString<char>\20const&\29
[asyncify] Common::HashMap<Common::String\2c\20Common::Array<Common::String>\2c\20Common::Hash<Common::String>\2c\20Common::EqualTo<Common::String>>::lookupAndCreateIfMissing\28Common::String\20const&\29 can change the state due to Common::BaseString<char>::BaseString\28Common::BaseString<char>\20const&\29
[asyncify] GUI::MetadataParser::closedKeyCallback\28Common::XMLParser::ParserNode*\29 can change the state due to Common::BaseString<char>::BaseString\28Common::BaseString<char>\20const&\29
[asyncify] Common::HashMap<Common::String\2c\20GUI::MetadataEngine\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>::lookupAndCreateIfMissing\28Common::String\20const&\29 can change the state due to Common::BaseString<char>::BaseString\28Common::BaseString<char>\20const&\29
[asyncify] Common::HashMap<Common::String\2c\20GUI::MetadataSeries\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>::lookupAndCreateIfMissing\28Common::String\20const&\29 can change the state due to Common::BaseString<char>::BaseString\28Common::BaseString<char>\20const&\29
[asyncify] Common::HashMap<Common::String\2c\20GUI::MetadataCompany\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>::lookupAndCreateIfMissing\28Common::String\20const&\29 can change the state due to Common::BaseString<char>::BaseString\28Common::BaseString<char>\20const&\29
[asyncify] Common::HashMap<Common::String\2c\20Common::XMLParser::XMLKeyLayout*\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>::lookupAndCreateIfMissing\28Common::String\20const&\29 can change the state due to Common::BaseString<char>::BaseString\28Common::BaseString<char>\20const&\29
[asyncify] GUI::GuiObject::GuiObject\28Common::String\20const&\29 can change the state due to Common::BaseString<char>::BaseString\28Common::BaseString<char>\20const&\29
[asyncify] Graphics::MacMenu::getName\28Graphics::MacMenuItem*\29 can change the state due to Common::BaseString<char>::BaseString\28Common::BaseString<char>\20const&\29
[asyncify] Common::String::String\28Common::String\20const&\29 can change the state due to Common::BaseString<char>::BaseString\28Common::BaseString<char>\20const&\29
[asyncify] Common::HashMap<Common::String\2c\20Common::FSNode\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>::lookupAndCreateIfMissing\28Common::String\20const&\29 can change the state due to Common::BaseString<char>::BaseString\28Common::BaseString<char>\20const&\29
[asyncify] Common::HashMap<Common::String\2c\20Adl::Files_AppleDOS::TOCEntry\2c\20Common::Hash<Common::String>\2c\20Common::EqualTo<Common::String>>::lookupAndCreateIfMissing\28Common::String\20const&\29 can change the state due to Common::BaseString<char>::BaseString\28Common::BaseString<char>\20const&\29
[asyncify] Common::HashMap<Common::String\2c\20int\2c\20Common::Hash<Common::String>\2c\20Common::EqualTo<Common::String>>::lookupAndCreateIfMissing\28Common::String\20const&\29 can change the state due to Common::BaseString<char>::BaseString\28Common::BaseString<char>\20const&\29
[asyncify] DetectedGame::DetectedGame\28DetectedGame\20const&\29 can change the state due to Common::BaseString<char>::BaseString\28Common::BaseString<char>\20const&\29
[asyncify] Common::HashMap<Common::String\2c\20bool\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>::lookupAndCreateIfMissing\28Common::String\20const&\29 can change the state due to Common::BaseString<char>::BaseString\28Common::BaseString<char>\20const&\29
[asyncify] Common::HashMap<Common::String\2c\20Common::String\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>::lookupAndCreateIfMissing\28Common::String\20const&\29 can change the state due to Common::BaseString<char>::BaseString\28Common::BaseString<char>\20const&\29
[asyncify] Gob::DataIO::File::File\28Common::String\20const&\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20char\2c\20Gob::DataIO::Archive&\29 can change the state due to Common::BaseString<char>::BaseString\28Common::BaseString<char>\20const&\29
[asyncify] Common::HashMap<Common::String\2c\20Gob::DataIO::File\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>::lookupAndCreateIfMissing\28Common::String\20const&\29 can change the state due to Common::BaseString<char>::BaseString\28Common::BaseString<char>\20const&\29
[asyncify] Common::HashMap<Common::String\2c\20Scumm::DetectorDesc\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>::lookupAndCreateIfMissing\28Common::String\20const&\29 can change the state due to Common::BaseString<char>::BaseString\28Common::BaseString<char>\20const&\29
[asyncify] Common::HashMap<Common::String\2c\20SizeMD5\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>::lookupAndCreateIfMissing\28Common::String\20const&\29 can change the state due to Common::BaseString<char>::BaseString\28Common::BaseString<char>\20const&\29
[asyncify] Common::ConfigManager::Domain::Domain\28Common::ConfigManager::Domain\20const&\29 can change the state due to Common::BaseString<char>::BaseString\28Common::BaseString<char>\20const&\29
[asyncify] GUI::ExistingSave::ExistingSave\28MetaEngine*\2c\20Common::String\20const&\2c\20SaveStateDescriptor\20const&\29 can change the state due to Common::BaseString<char>::BaseString\28Common::BaseString<char>\20const&\29
[asyncify] GUI::ExistingSave*\20Common::uninitialized_copy<GUI::ExistingSave*\2c\20GUI::ExistingSave>\28GUI::ExistingSave*\2c\20GUI::ExistingSave*\2c\20GUI::ExistingSave*\29 can change the state due to Common::BaseString<char>::BaseString\28Common::BaseString<char>\20const&\29
[asyncify] GUI::ExistingSave*\20Common::uninitialized_copy<GUI::ExistingSave\20const*\2c\20GUI::ExistingSave>\28GUI::ExistingSave\20const*\2c\20GUI::ExistingSave\20const*\2c\20GUI::ExistingSave*\29 can change the state due to Common::BaseString<char>::BaseString\28Common::BaseString<char>\20const&\29
[asyncify] Common::HashMap<Common::String\2c\20Graphics::ManagedSurface*\2c\20Common::Hash<Common::String>\2c\20Common::EqualTo<Common::String>>::lookupAndCreateIfMissing\28Common::String\20const&\29 can change the state due to Common::BaseString<char>::BaseString\28Common::BaseString<char>\20const&\29
[asyncify] GUI::ThemeEngine::genCacheFilename\28Common::String\20const&\29\20const can change the state due to Common::BaseString<char>::BaseString\28Common::BaseString<char>\20const&\29
[asyncify] Common::HashMap<Common::String\2c\20GUI::ThemeLayout*\2c\20Common::Hash<Common::String>\2c\20Common::EqualTo<Common::String>>::lookupAndCreateIfMissing\28Common::String\20const&\29 can change the state due to Common::BaseString<char>::BaseString\28Common::BaseString<char>\20const&\29
[asyncify] Common::HashMap<Common::String\2c\20GUI::ThemeParser::PaletteColor\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>::lookupAndCreateIfMissing\28Common::String\20const&\29 can change the state due to Common::BaseString<char>::BaseString\28Common::BaseString<char>\20const&\29
[asyncify] Common::HashMap<Common::String\2c\20Graphics::ManagedSurface\20const*\2c\20Common::Hash<Common::String>\2c\20Common::EqualTo<Common::String>>::lookupAndCreateIfMissing\28Common::String\20const&\29 can change the state due to Common::BaseString<char>::BaseString\28Common::BaseString<char>\20const&\29
[asyncify] Common::HashMap<Common::String\2c\20float\2c\20Common::CaseSensitiveString_Hash\2c\20Common::CaseSensitiveString_EqualTo>::lookupAndCreateIfMissing\28Common::String\20const&\29 can change the state due to Common::BaseString<char>::BaseString\28Common::BaseString<char>\20const&\29
[asyncify] Common::HashMap<Common::String\2c\20Common::String\2c\20Common::Hash<Common::String>\2c\20Common::EqualTo<Common::String>>::lookupAndCreateIfMissing\28Common::String\20const&\29 can change the state due to Common::BaseString<char>::BaseString\28Common::BaseString<char>\20const&\29
[asyncify] POSIXFilesystemNode::getName\28\29\20const can change the state due to Common::BaseString<char>::BaseString\28Common::BaseString<char>\20const&\29
[asyncify] POSIXFilesystemNode::getPath\28\29\20const can change the state due to Common::BaseString<char>::BaseString\28Common::BaseString<char>\20const&\29
[asyncify] ChRootFilesystemFactory::ChRootFilesystemFactory\28Common::String\20const&\29 can change the state due to Common::BaseString<char>::BaseString\28Common::BaseString<char>\20const&\29
[asyncify] Common::String::operator=\28Common::String\20const&\29 can change the state due to Common::BaseString<char>::assign\28Common::BaseString<char>\20const&\29
[asyncify] Common::BaseString<char>::setChar\28char\2c\20unsigned\20int\29 can change the state due to Common::BaseString<char>::ensureCapacity\28unsigned\20int\2c\20bool\29
[asyncify] Common::BaseString<char>::makeUnique\28\29 can change the state due to Common::BaseString<char>::ensureCapacity\28unsigned\20int\2c\20bool\29
[asyncify] Common::BaseString<char>::deleteChar\28unsigned\20int\29 can change the state due to Common::BaseString<char>::ensureCapacity\28unsigned\20int\2c\20bool\29
[asyncify] Common::BaseString<char>::deleteLastChar\28\29 can change the state due to Common::BaseString<char>::ensureCapacity\28unsigned\20int\2c\20bool\29
[asyncify] Common::BaseString<char>::erase\28unsigned\20int\2c\20unsigned\20int\29 can change the state due to Common::BaseString<char>::ensureCapacity\28unsigned\20int\2c\20bool\29
[asyncify] Common::BaseString<char>::erase\28char*\29 can change the state due to Common::BaseString<char>::ensureCapacity\28unsigned\20int\2c\20bool\29
[asyncify] Common::BaseString<char>::begin\28\29 can change the state due to Common::BaseString<char>::ensureCapacity\28unsigned\20int\2c\20bool\29
[asyncify] Common::BaseString<char>::end\28\29 can change the state due to Common::BaseString<char>::ensureCapacity\28unsigned\20int\2c\20bool\29
[asyncify] Common::BaseString<char>::insertChar\28char\2c\20unsigned\20int\29 can change the state due to Common::BaseString<char>::ensureCapacity\28unsigned\20int\2c\20bool\29
[asyncify] Common::BaseString<char>::insertString\28char\20const*\2c\20unsigned\20int\29 can change the state due to Common::BaseString<char>::ensureCapacity\28unsigned\20int\2c\20bool\29
[asyncify] Common::BaseString<char>::insertString\28Common::BaseString<char>\20const&\2c\20unsigned\20int\29 can change the state due to Common::BaseString<char>::ensureCapacity\28unsigned\20int\2c\20bool\29
[asyncify] Common::BaseString<char>::wordWrap\28unsigned\20int\29 can change the state due to Common::BaseString<char>::ensureCapacity\28unsigned\20int\2c\20bool\29
[asyncify] Common::BaseString<char>::toLowercase\28\29 can change the state due to Common::BaseString<char>::ensureCapacity\28unsigned\20int\2c\20bool\29
[asyncify] Common::BaseString<char>::toUppercase\28\29 can change the state due to Common::BaseString<char>::ensureCapacity\28unsigned\20int\2c\20bool\29
[asyncify] Common::BaseString<char>::trim\28\29 can change the state due to Common::BaseString<char>::ensureCapacity\28unsigned\20int\2c\20bool\29
[asyncify] Common::BaseString<char>::assignAppend\28char\20const*\29 can change the state due to Common::BaseString<char>::ensureCapacity\28unsigned\20int\2c\20bool\29
[asyncify] Common::String::replace\28unsigned\20int\2c\20unsigned\20int\2c\20char\20const*\2c\20unsigned\20int\2c\20unsigned\20int\29 can change the state due to Common::BaseString<char>::ensureCapacity\28unsigned\20int\2c\20bool\29
[asyncify] Common::String::vformat\28char\20const*\2c\20void*\29 can change the state due to Common::BaseString<char>::ensureCapacity\28unsigned\20int\2c\20bool\29
[asyncify] Common::String::encodeUTF8\28Common::U32String\20const&\2c\20char\29 can change the state due to Common::BaseString<char>::ensureCapacity\28unsigned\20int\2c\20bool\29
[asyncify] Common::ConfigManager::removeGameDomain\28Common::String\20const&\29 can change the state due to Common::BaseString<char>::clear\28\29
[asyncify] Common::Path::Path\28char\20const*\2c\20char\29 can change the state due to Common::BaseString<char>::clear\28\29
[asyncify] Common::Path::set\28char\20const*\2c\20char\29 can change the state due to Common::BaseString<char>::clear\28\29
[asyncify] Common::Path::Path\28Common::String\20const&\2c\20char\29 can change the state due to Common::BaseString<char>::clear\28\29
[asyncify] Common::Path::operator=\28char\20const*\29 can change the state due to Common::BaseString<char>::clear\28\29
[asyncify] Common::Path::operator=\28Common::String\20const&\29 can change the state due to Common::BaseString<char>::clear\28\29
[asyncify] Common::SaveFileManager::clearError\28\29 can change the state due to Common::BaseString<char>::clear\28\29
[asyncify] GUI::Debugger::tabComplete\28char\20const*\2c\20Common::String&\29\20const can change the state due to Common::BaseString<char>::clear\28\29
[asyncify] GUI::PredictiveDialog::matchWord\28\29 can change the state due to Common::BaseString<char>::clear\28\29
[asyncify] GUI::ThemeParser::closedKeyCallback\28Common::XMLParser::ParserNode*\29 can change the state due to Common::BaseString<char>::clear\28\29
[asyncify] OpenGL::LibRetro::PresetParser::parsePass\28unsigned\20int\2c\20bool\29 can change the state due to Common::BaseString<char>::clear\28\29
[asyncify] AdvancedMetaEngineDetection::~AdvancedMetaEngineDetection\28\29 can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] SF2File::~SF2File\28\29 can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] SynthFile::~SynthFile\28\29 can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] SynthInstr::~SynthInstr\28\29 can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] SynthWave::~SynthWave\28\29 can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] VGMItem::~VGMItem\28\29.1 can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] VGMRgnItem::~VGMRgnItem\28\29 can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] VGMSamp::~VGMSamp\28\29 can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] Vab::Vab\28RawFile*\2c\20unsigned\20int\29 can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] VabRgn::VabRgn\28VabInstr*\2c\20unsigned\20int\29 can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] Common::GenericArchiveMember::~GenericArchiveMember\28\29 can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] Common::GenericArchiveMember::~GenericArchiveMember\28\29.1 can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] Common::HashMap<Common::String\2c\20Common::ConfigManager::Domain\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>::erase\28Common::String\20const&\29 can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] Common::ConfigManager::registerDefault\28Common::String\20const&\2c\20char\20const*\29 can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] Common::ConfigManager::registerDefault\28Common::String\20const&\2c\20int\29 can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] Common::ConfigManager::registerDefault\28Common::String\20const&\2c\20bool\29 can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] Common::ConfigManager::~ConfigManager\28\29 can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] Common::HashMap<Common::String\2c\20Common::ConfigManager::Domain\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>::~HashMap\28\29 can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] Common::HashMap<Common::String\2c\20Common::DebugManager::DebugChannel\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>::~HashMap\28\29 can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] Common::Error::Error\28Common::ErrorCode\2c\20Common::String\20const&\29 can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] Common::parseGameGUIOptions\28Common::String\20const&\29 can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] Common::getGameGUIOptionsDescription\28Common::String\20const&\29 can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] Common::checkGameGUIOptionLanguage\28Common::Language\2c\20Common::String\20const&\29 can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] Common::getGameGUIOptionsDescriptionLanguage\28Common::Language\29 can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] Common::Path::getParent\28\29\20const can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] Common::Path::getLastComponent\28\29\20const can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] Common::punycode_encodepath\28Common::Path\20const&\29 can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] Common::String::format\28char\20const*\2c\20...\29 can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] Common::StreamDebug::space\28\29 can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] Common::StreamDebug::operator<<\28int\29 can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] Common::StreamDebug::operator<<\28unsigned\20int\29 can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] Common::StreamDebug::operator<<\28double\29 can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] Common::StreamDebug::operator<<\28float\29 can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] Common::StreamDebug::operator<<\28void*\29 can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] Common::TranslationManager::~TranslationManager\28\29 can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] Common::toPrintable\28Common::U32String\20const&\2c\20bool\29 can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] Common::ClickteamInstaller::ClickteamFileDescriptor::ClickteamFileDescriptor\28Common::ClickteamInstaller::ClickteamTag\20const&\2c\20unsigned\20int\29 can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] Common::HashMap<Common::String\2c\20Common::ClickteamInstaller::ClickteamFileDescriptor\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>::~HashMap\28\29 can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] Common::\28anonymous\20namespace\29::InstallShieldCabinet::~InstallShieldCabinet\28\29 can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] Common::\28anonymous\20namespace\29::InstallShieldCabinet::~InstallShieldCabinet\28\29.1 can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] Common::\28anonymous\20namespace\29::InstallShieldCabinet::hasFile\28Common::Path\20const&\29\20const can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] Common::InstallShieldV3::hasFile\28Common::Path\20const&\29\20const can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] Common::StuffItArchive::hasFile\28Common::Path\20const&\29\20const can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] Common::HashMap<Common::String\2c\20Common::Array<Common::ArjFileChunk>\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>::~HashMap\28\29 can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] Common::ArjArchive::hasFile\28Common::Path\20const&\29\20const can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] unzLocateFile\28void*\2c\20char\20const*\2c\20int\29 can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] Common::ZipArchive::hasFile\28Common::Path\20const&\29\20const can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] Common::MacVISEArchive::getFileDesc\28Common::Path\20const&\29\20const can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] Common::MacVISEArchive::getFileDescIndex\28Common::Path\20const&\2c\20unsigned\20int&\2c\20Common::MacVISEArchive::ArchiveMember::SubstreamType&\29\20const can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] Common::MacVISEArchive::~MacVISEArchive\28\29 can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] Common::MacVISEArchive::~MacVISEArchive\28\29.1 can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] Common::List<Common::INIFile::Section>::erase\28Common::ListInternal::NodeBase*\29 can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] Common::INIFile::Section::removeKey\28Common::String\20const&\29 can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] Common::JSONValue::~JSONValue\28\29 can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] Common::JSONValue::hasChild\28char\20const*\29\20const can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] Common::JSONValue::child\28char\20const*\29 can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] Common::HashMap<Common::WinResourceID\2c\20Common::HashMap<Common::WinResourceID\2c\20Common::String\2c\20Common::WinResourceID_Hash\2c\20Common::WinResourceID_EqualTo>\2c\20Common::WinResourceID_Hash\2c\20Common::WinResourceID_EqualTo>::~HashMap\28\29 can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] Common::HashMap<Common::WinResourceID\2c\20Common::String\2c\20Common::WinResourceID_Hash\2c\20Common::WinResourceID_EqualTo>::~HashMap\28\29 can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] Common::HashMap<Common::WinResourceID\2c\20Common::HashMap<Common::WinResourceID\2c\20Common::String\2c\20Common::WinResourceID_Hash\2c\20Common::WinResourceID_EqualTo>\2c\20Common::WinResourceID_Hash\2c\20Common::WinResourceID_EqualTo>::lookupAndCreateIfMissing\28Common::WinResourceID\20const&\29 can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] Common::NEResources::findResource\28Common::WinResourceID\20const&\2c\20Common::WinResourceID\20const&\29\20const can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] Common::HashMap<Common::WinResourceID\2c\20Common::HashMap<Common::WinResourceID\2c\20Common::String\2c\20Common::WinResourceID_Hash\2c\20Common::WinResourceID_EqualTo>\2c\20Common::WinResourceID_Hash\2c\20Common::WinResourceID_EqualTo>::contains\28Common::WinResourceID\20const&\29\20const can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] Common::HashMap<Common::WinResourceID\2c\20Common::String\2c\20Common::WinResourceID_Hash\2c\20Common::WinResourceID_EqualTo>::contains\28Common::WinResourceID\20const&\29\20const can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] Common::HashMap<Common::WinResourceID\2c\20Common::HashMap<Common::WinResourceID\2c\20Common::HashMap<Common::WinResourceID\2c\20Common::PEResources::Resource\2c\20Common::WinResourceID_Hash\2c\20Common::WinResourceID_EqualTo>\2c\20Common::WinResourceID_Hash\2c\20Common::WinResourceID_EqualTo>\2c\20Common::WinResourceID_Hash\2c\20Common::WinResourceID_EqualTo>::~HashMap\28\29 can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] Common::HashMap<Common::WinResourceID\2c\20Common::HashMap<Common::WinResourceID\2c\20Common::PEResources::Resource\2c\20Common::WinResourceID_Hash\2c\20Common::WinResourceID_EqualTo>\2c\20Common::WinResourceID_Hash\2c\20Common::WinResourceID_EqualTo>::~HashMap\28\29 can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] Common::HashMap<Common::WinResourceID\2c\20Common::HashMap<Common::WinResourceID\2c\20Common::PEResources::Resource\2c\20Common::WinResourceID_Hash\2c\20Common::WinResourceID_EqualTo>\2c\20Common::WinResourceID_Hash\2c\20Common::WinResourceID_EqualTo>::lookupAndCreateIfMissing\28Common::WinResourceID\20const&\29 can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] Common::HashMap<Common::WinResourceID\2c\20Common::HashMap<Common::WinResourceID\2c\20Common::HashMap<Common::WinResourceID\2c\20Common::PEResources::Resource\2c\20Common::WinResourceID_Hash\2c\20Common::WinResourceID_EqualTo>\2c\20Common::WinResourceID_Hash\2c\20Common::WinResourceID_EqualTo>\2c\20Common::WinResourceID_Hash\2c\20Common::WinResourceID_EqualTo>::contains\28Common::WinResourceID\20const&\29\20const can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] Common::HashMap<Common::WinResourceID\2c\20Common::HashMap<Common::WinResourceID\2c\20Common::PEResources::Resource\2c\20Common::WinResourceID_Hash\2c\20Common::WinResourceID_EqualTo>\2c\20Common::WinResourceID_Hash\2c\20Common::WinResourceID_EqualTo>::contains\28Common::WinResourceID\20const&\29\20const can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] Common::HashMap<Common::WinResourceID\2c\20Common::PEResources::Resource\2c\20Common::WinResourceID_Hash\2c\20Common::WinResourceID_EqualTo>::contains\28Common::WinResourceID\20const&\29\20const can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] Common::ObjectPool<Common::HashMap<Common::WinResourceID\2c\20Common::HashMap<Common::WinResourceID\2c\20Common::PEResources::Resource\2c\20Common::WinResourceID_Hash\2c\20Common::WinResourceID_EqualTo>\2c\20Common::WinResourceID_Hash\2c\20Common::WinResourceID_EqualTo>::Node\2c\2010ul>::deleteChunk\28Common::HashMap<Common::WinResourceID\2c\20Common::HashMap<Common::WinResourceID\2c\20Common::PEResources::Resource\2c\20Common::WinResourceID_Hash\2c\20Common::WinResourceID_EqualTo>\2c\20Common::WinResourceID_Hash\2c\20Common::WinResourceID_EqualTo>::Node*\29 can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] ChRootFilesystemFactory::~ChRootFilesystemFactory\28\29 can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] ChRootFilesystemFactory::~ChRootFilesystemFactory\28\29.1 can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] POSIXPlugin::~POSIXPlugin\28\29 can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] Video::SRTParser::~SRTParser\28\29 can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] Video::SRTParser::cleanup\28\29 can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] Video::Subtitles::~Subtitles\28\29 can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] Common::HashMap<Common::String\2c\20Graphics::Font\20const*\2c\20Common::Hash<Common::String>\2c\20Common::EqualTo<Common::String>>::erase\28Common::String\20const&\29 can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] Graphics::MacFontFamily::~MacFontFamily\28\29 can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] Graphics::WinFont::~WinFont\28\29 can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] Lua::LuaFileConfig::write\28char\20const*\2c\20unsigned\20long\29 can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] void\20Common::sort<Common::U32String*\2c\20GUI::GroupedListWidget::sortGroups\28\29::$_0>\28Common::U32String*\2c\20Common::U32String*\2c\20GUI::GroupedListWidget::sortGroups\28\29::$_0\29 can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] Common::ArtificialEventSource::~ArtificialEventSource\28\29 can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] Common::ArtificialEventSource::~ArtificialEventSource\28\29.1 can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] Common::InputWatcher::~InputWatcher\28\29 can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] Common::InputWatcher::~InputWatcher\28\29.1 can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] Common::Keymap::~Keymap\28\29 can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] Common::HashMap<Common::HardwareInput\2c\20Common::Array<Common::Action*>\2c\20Common::HardwareInput_Hash\2c\20Common::HardwareInput_EqualTo>::~HashMap\28\29 can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] Common::HashMap<Common::HardwareInput\2c\20Common::Array<Common::Action*>\2c\20Common::HardwareInput_Hash\2c\20Common::HardwareInput_EqualTo>::erase\28Common::HashMap<Common::HardwareInput\2c\20Common::Array<Common::Action*>\2c\20Common::HardwareInput_Hash\2c\20Common::HardwareInput_EqualTo>::IteratorImpl<Common::HashMap<Common::HardwareInput\2c\20Common::Array<Common::Action*>\2c\20Common::HardwareInput_Hash\2c\20Common::HardwareInput_EqualTo>::Node>\29 can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] Common::KeymapperDefaultBindings::findDefaultBinding\28Common::String\2c\20Common::String\29\20const can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] Common::HashMap<Common::String\2c\20Common::String\2c\20Common::Hash<Common::String>\2c\20Common::EqualTo<Common::String>>::~HashMap\28\29 can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] Common::DelayedEventSource::~DelayedEventSource\28\29 can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] Common::DelayedEventSource::~DelayedEventSource\28\29.1 can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] Common::SaveFileManager::~SaveFileManager\28\29 can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] Common::HashMap<Common::String\2c\20void\20\28*\29\28void*\29\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>::erase\28Common::HashMap<Common::String\2c\20void\20\28*\29\28void*\29\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>::IteratorImpl<Common::HashMap<Common::String\2c\20void\20\28*\29\28void*\29\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>::Node>\29 can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] Common::BasePtrTrackerImpl<Common::HashMap<Common::String\2c\20int\2c\20Common::Hash<Common::String>\2c\20Common::EqualTo<Common::String>>>::destructObject\28\29 can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] Graphics::PixelFormat::toString\28\29\20const can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] RiffFile::~RiffFile\28\29 can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] RiffFile::~RiffFile\28\29.1 can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] OSystem_POSIX::getDefaultConfigFileName\28\29 can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] OSystem_POSIX::getDefaultIconsPath\28\29 can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] OSystem_POSIX::getDefaultLogFileName\28\29 can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] Common::Array<GUI::LauncherEntry>::~Array\28\29 can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] Common::HashMap<Common::String\2c\20Common::String\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>::erase\28Common::String\20const&\29 can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] Graphics::MacMenuSubMenu::~MacMenuSubMenu\28\29 can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] Common::List<Common::String>::pop_front\28\29 can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] QualifiedGameDescriptor::~QualifiedGameDescriptor\28\29 can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] Common::List<Common::String>::~List\28\29 can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] MD5CacheManager::~MD5CacheManager\28\29 can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] MD5CacheManager::~MD5CacheManager\28\29.1 can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] Common::List<Common::INIFile::Section>::clear\28\29 can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] Common::ObjectPool<Common::HashMap<Common::String\2c\20Common::Array<Common::AchievementDescription>\2c\20Common::Hash<Common::String>\2c\20Common::EqualTo<Common::String>>::Node\2c\2010ul>::deleteChunk\28Common::HashMap<Common::String\2c\20Common::Array<Common::AchievementDescription>\2c\20Common::Hash<Common::String>\2c\20Common::EqualTo<Common::String>>::Node*\29 can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] Common::AchievementsManager::~AchievementsManager\28\29 can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] Common::HashMap<Common::String\2c\20Common::Array<Common::AchievementDescription>\2c\20Common::Hash<Common::String>\2c\20Common::EqualTo<Common::String>>::~HashMap\28\29 can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] AdvancedMetaEngineDetection::isEntryGrayListed\28ADGameDescription\20const*\29\20const can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] Common::Array<Common::String>::~Array\28\29 can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] FileMapArchive::hasFile\28Common::Path\20const&\29\20const can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] ChainedGamesManager::clear\28\29 can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] ChainedGamesManager::~ChainedGamesManager\28\29 can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] ChainedGamesManager::~ChainedGamesManager\28\29.1 can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] DetectedGame::setGUIOptions\28Common::String\20const&\29 can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] SaveStateDescriptor::setSaveDate\28int\2c\20int\2c\20int\29 can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] SaveStateDescriptor::setSaveTime\28int\2c\20int\29 can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] SaveStateDescriptor::setPlayTime\28int\2c\20int\29 can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] SaveStateDescriptor::setPlayTime\28unsigned\20int\29 can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] Common::HashMap<Common::String\2c\20Common::Array<Common::String>\2c\20Common::Hash<Common::String>\2c\20Common::EqualTo<Common::String>>::~HashMap\28\29 can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] Common::Array<GUI::GridItemInfo>::freeStorage\28GUI::GridItemInfo*\2c\20unsigned\20int\29 can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] void\20SWAP<DetectedGame>\28DetectedGame&\2c\20DetectedGame&\29 can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] Common::HashMap<Common::String\2c\20GUI::MetadataCompany\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>::~HashMap\28\29 can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] Common::HashMap<Common::String\2c\20GUI::MetadataSeries\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>::~HashMap\28\29 can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] Common::HashMap<Common::String\2c\20GUI::MetadataEngine\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>::~HashMap\28\29 can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] Common::HashMap<Common::String\2c\20GUI::MetadataGame\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>::~HashMap\28\29 can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] Common::HashMap<Common::String\2c\20GUI::MetadataGame\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>::freeNode\28Common::HashMap<Common::String\2c\20GUI::MetadataGame\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>::Node*\29 can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] Common::XMLParser::XMLKeyLayout::~XMLKeyLayout\28\29 can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] Graphics::MacMenu::removeMenuItem\28Graphics::MacMenuSubMenu*\2c\20unsigned\20int\29 can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] Graphics::MacMenu::clearSubMenu\28int\29 can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] Graphics::MacText::getTextChunk\28int\2c\20int\2c\20int\2c\20int\2c\20bool\2c\20bool\29 can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] Graphics::MacWindowBorder::~MacWindowBorder\28\29 can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] Common::HashMap<Common::String\2c\20FileProperties\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>::erase\28Common::String\20const&\29 can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] Common::HashMap<Common::String\2c\20FileProperties\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>::~HashMap\28\29 can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] Common::HashMap<Common::String\2c\20Adl::Files_AppleDOS::TOCEntry\2c\20Common::Hash<Common::String>\2c\20Common::EqualTo<Common::String>>::~HashMap\28\29 can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] Adl::Files::DataBlock::~DataBlock\28\29 can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] Adl::Files::DataBlock::~DataBlock\28\29.1 can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] AgiMetaEngineDetection::~AgiMetaEngineDetection\28\29 can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] AgiMetaEngineDetection::~AgiMetaEngineDetection\28\29.1 can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] Common::HashMap<Common::String\2c\20Common::String\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>::~HashMap\28\29 can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] AGSMetaEngineDetection::~AGSMetaEngineDetection\28\29 can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] AGSMetaEngineDetection::~AGSMetaEngineDetection\28\29.1 can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] Common::Array<DetectedGame>::freeStorage\28DetectedGame*\2c\20unsigned\20int\29 can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] Common::HashMap<Common::String\2c\20Common::U32String\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>::~HashMap\28\29 can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] DirectorMetaEngineDetection::~DirectorMetaEngineDetection\28\29 can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] DirectorMetaEngineDetection::~DirectorMetaEngineDetection\28\29.1 can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] Glk::GlkDetectedGame::GlkDetectedGame\28char\20const*\2c\20char\20const*\2c\20Common::String\20const&\2c\20GameSupportLevel\29 can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] Glk::GlkDetectedGame::GlkDetectedGame\28char\20const*\2c\20char\20const*\2c\20Common::String\20const&\2c\20Common::Language\2c\20Common::Platform\2c\20GameSupportLevel\29 can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] Glk::GlkDetectedGame::GlkDetectedGame\28char\20const*\2c\20char\20const*\2c\20char\20const*\2c\20Common::String\20const&\2c\20Common::Language\2c\20GameSupportLevel\29 can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] Glk::GlkDetectedGame::GlkDetectedGame\28char\20const*\2c\20char\20const*\2c\20Common::String\20const&\2c\20Common::String\20const&\2c\20unsigned\20long\2c\20GameSupportLevel\29 can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] Glk::Comprehend::ComprehendMetaEngine::findGame\28char\20const*\29 can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] Glk::Blorb::hasFile\28Common::Path\20const&\29\20const can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] Glk::AdvSys::Game::~Game\28\29 can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] Glk::AdvSys::Game::findWord\28Common::String\20const&\29\20const can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] Common::HashMap<Common::String\2c\20Gob::DataIO::File\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>::~HashMap\28\29 can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] OSystem_SDL::getSystemLanguage\28\29\20const can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] Common::HashMap<Common::String\2c\20SizeMD5\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>::~HashMap\28\29 can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] Common::HashMap<Common::String\2c\20Graphics::ManagedSurface*\2c\20Common::Hash<Common::String>\2c\20Common::EqualTo<Common::String>>::erase\28Common::String\20const&\29 can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] GUI::ThemeEval::buildBuiltinVars\28\29 can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] GUI::ThemeEval::hasDialog\28Common::String\20const&\29 can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] GUI::UnknownGameDialog::encodeUrlString\28Common::String\20const&\29 can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] GUI::UnknownGameDialog::generateBugtrackerURL\28\29 can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] GUI::StaticTextWidget::setValue\28int\29 can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] GUI::EditableWidget::caretVisualPos\28int\29 can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] GUI::EditableWidget::caretLogicalPos\28\29\20const can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] GUI::GridWidget::setAttributeValues\28Common::Array<Common::U32String>\20const&\29 can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] Common::Array<OpenGL::LibRetroPipeline::Pass>::freeStorage\28OpenGL::LibRetroPipeline::Pass*\2c\20unsigned\20int\29 can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] OpenGL::LibRetro::PresetParser::parseTextures\28\29 can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] OpenGL::LibRetro::PresetParser::parseParameters\28\29 can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] OpenGL::LibRetro::PresetParser::lookUpValue\28Common::String\20const&\2c\20Common::String*\29 can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] OpenGL::LibRetro::PresetParser::lookUpValue\28Common::String\20const&\2c\20float*\29 can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] OpenGL::LibRetro::PresetParser::lookUpValue\28Common::String\20const&\2c\20bool*\29 can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] OpenGL::LibRetro::PresetParser::lookUpValue\28Common::String\20const&\2c\20OpenGL::LibRetro::FilteringMode*\2c\20OpenGL::LibRetro::FilteringMode\29 can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] OpenGL::LibRetro::PresetParser::lookUpValue\28Common::String\20const&\2c\20OpenGL::LibRetro::ScaleType*\2c\20OpenGL::LibRetro::ScaleType\29 can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] OpenGL::LibRetro::PresetParser::lookUpValue\28Common::String\20const&\2c\20OpenGL::WrapMode*\2c\20OpenGL::WrapMode\29 can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] OpenGL::LibRetro::PresetParser::parsePassScaleType\28unsigned\20int\2c\20bool\2c\20OpenGL::LibRetro::ShaderPass*\29 can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] OpenGL::LibRetro::PresetParser::parsePassScale\28unsigned\20int\2c\20OpenGL::LibRetro::ShaderPass*\29 can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] OpenGL::LibRetro::PresetParser::computeDefaultScale\28Common::String\20const&\2c\20float*\2c\20unsigned\20int*\2c\20OpenGL::LibRetro::ScaleType\29 can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] SDLPlugin::~SDLPlugin\28\29 can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] DynamicPlugin::~DynamicPlugin\28\29 can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] POSIXFilesystemNode::~POSIXFilesystemNode\28\29 can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] POSIXFilesystemNode::~POSIXFilesystemNode\28\29.1 can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] DrivePOSIXFilesystemNode::~DrivePOSIXFilesystemNode\28\29 can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] DrivesPOSIXFilesystemFactory::~DrivesPOSIXFilesystemFactory\28\29 can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] DrivesPOSIXFilesystemFactory::~DrivesPOSIXFilesystemFactory\28\29.1 can change the state due to Common::BaseString<char>::~BaseString\28\29
[asyncify] Common::String::operator=\28Common::String&&\29 can change the state due to Common::BaseString<char>::assign\28Common::BaseString<char>&&\29
[asyncify] Common::String::operator=\28char\29 can change the state due to Common::BaseString<char>::assign\28char\29
[asyncify] Common::String::operator=\28char\20const*\29 can change the state due to Common::BaseString<char>::assign\28char\20const*\29
[asyncify] Common::BaseString<char32_t>::assignAppend\28Common::BaseString<char32_t>\20const&\29 can change the state due to Common::BaseString<char32_t>::BaseString\28Common::BaseString<char32_t>\20const&\29
[asyncify] Common::TranslationManager::getTranslation\28char\20const*\2c\20char\20const*\29\20const can change the state due to Common::BaseString<char32_t>::BaseString\28Common::BaseString<char32_t>\20const&\29
[asyncify] Common::TLanguage*\20Common::sortPartition<Common::TLanguage*\2c\20Common::Less<Common::TLanguage>>\28Common::TLanguage*\2c\20Common::TLanguage*\2c\20Common::TLanguage*\2c\20Common::Less<Common::TLanguage>&\29 can change the state due to Common::BaseString<char32_t>::BaseString\28Common::BaseString<char32_t>\20const&\29
[asyncify] Common::U32String::operator+=\28Common::U32String\20const&\29 can change the state due to Common::BaseString<char32_t>::BaseString\28Common::BaseString<char32_t>\20const&\29
[asyncify] Common::operator+\28Common::U32String\20const&\2c\20Common::U32String\20const&\29 can change the state due to Common::BaseString<char32_t>::BaseString\28Common::BaseString<char32_t>\20const&\29
[asyncify] Common::operator+\28Common::U32String\20const&\2c\20char32_t\29 can change the state due to Common::BaseString<char32_t>::BaseString\28Common::BaseString<char32_t>\20const&\29
[asyncify] Common::U32String::U32String\28Common::U32String\20const&\29 can change the state due to Common::BaseString<char32_t>::BaseString\28Common::BaseString<char32_t>\20const&\29
[asyncify] Common::U32String*\20Common::sortPartition<Common::U32String*\2c\20Common::Less<Common::U32String>>\28Common::U32String*\2c\20Common::U32String*\2c\20Common::U32String*\2c\20Common::Less<Common::U32String>&\29 can change the state due to Common::BaseString<char32_t>::BaseString\28Common::BaseString<char32_t>\20const&\29
[asyncify] Common::Action::Action\28char\20const*\2c\20Common::U32String\20const&\29 can change the state due to Common::BaseString<char32_t>::BaseString\28Common::BaseString<char32_t>\20const&\29
[asyncify] OSystem::getTextFromClipboard\28\29 can change the state due to Common::BaseString<char32_t>::BaseString\28Common::BaseString<char32_t>\20const&\29
[asyncify] Graphics::MacText::getFgColor\28\29 can change the state due to Common::BaseString<char32_t>::BaseString\28Common::BaseString<char32_t>\20const&\29
[asyncify] Graphics::MacText::getTextChunks\28int\2c\20int\29 can change the state due to Common::BaseString<char32_t>::BaseString\28Common::BaseString<char32_t>\20const&\29
[asyncify] GUI::SaveLoadChooser::SaveLoadChooser\28Common::U32String\20const&\2c\20Common::U32String\20const&\2c\20bool\29 can change the state due to Common::BaseString<char32_t>::BaseString\28Common::BaseString<char32_t>\20const&\29
[asyncify] GUI::SaveLoadChooserGrid::getResultString\28\29\20const can change the state due to Common::BaseString<char32_t>::BaseString\28Common::BaseString<char32_t>\20const&\29
[asyncify] Common::HashMap<Common::U32String\2c\20int\2c\20Common::Hash<Common::U32String>\2c\20Common::EqualTo<Common::U32String>>::lookupAndCreateIfMissing\28Common::U32String\20const&\29 can change the state due to Common::BaseString<char32_t>::BaseString\28Common::BaseString<char32_t>\20const&\29
[asyncify] Common::U32String::operator=\28Common::U32String\20const&\29 can change the state due to Common::BaseString<char32_t>::assign\28Common::BaseString<char32_t>\20const&\29
[asyncify] Common::BaseString<char32_t>::setChar\28char32_t\2c\20unsigned\20int\29 can change the state due to Common::BaseString<char32_t>::ensureCapacity\28unsigned\20int\2c\20bool\29
[asyncify] Common::BaseString<char32_t>::makeUnique\28\29 can change the state due to Common::BaseString<char32_t>::ensureCapacity\28unsigned\20int\2c\20bool\29
[asyncify] Common::BaseString<char32_t>::deleteChar\28unsigned\20int\29 can change the state due to Common::BaseString<char32_t>::ensureCapacity\28unsigned\20int\2c\20bool\29
[asyncify] Common::BaseString<char32_t>::deleteLastChar\28\29 can change the state due to Common::BaseString<char32_t>::ensureCapacity\28unsigned\20int\2c\20bool\29
[asyncify] Common::BaseString<char32_t>::erase\28unsigned\20int\2c\20unsigned\20int\29 can change the state due to Common::BaseString<char32_t>::ensureCapacity\28unsigned\20int\2c\20bool\29
[asyncify] Common::BaseString<char32_t>::erase\28char32_t*\29 can change the state due to Common::BaseString<char32_t>::ensureCapacity\28unsigned\20int\2c\20bool\29
[asyncify] Common::BaseString<char32_t>::begin\28\29 can change the state due to Common::BaseString<char32_t>::ensureCapacity\28unsigned\20int\2c\20bool\29
[asyncify] Common::BaseString<char32_t>::end\28\29 can change the state due to Common::BaseString<char32_t>::ensureCapacity\28unsigned\20int\2c\20bool\29
[asyncify] Common::BaseString<char32_t>::insertChar\28char32_t\2c\20unsigned\20int\29 can change the state due to Common::BaseString<char32_t>::ensureCapacity\28unsigned\20int\2c\20bool\29
[asyncify] Common::BaseString<char32_t>::insertString\28char32_t\20const*\2c\20unsigned\20int\29 can change the state due to Common::BaseString<char32_t>::ensureCapacity\28unsigned\20int\2c\20bool\29
[asyncify] Common::BaseString<char32_t>::insertString\28Common::BaseString<char32_t>\20const&\2c\20unsigned\20int\29 can change the state due to Common::BaseString<char32_t>::ensureCapacity\28unsigned\20int\2c\20bool\29
[asyncify] Common::BaseString<char32_t>::wordWrap\28unsigned\20int\29 can change the state due to Common::BaseString<char32_t>::ensureCapacity\28unsigned\20int\2c\20bool\29
[asyncify] Common::BaseString<char32_t>::toLowercase\28\29 can change the state due to Common::BaseString<char32_t>::ensureCapacity\28unsigned\20int\2c\20bool\29
[asyncify] Common::BaseString<char32_t>::toUppercase\28\29 can change the state due to Common::BaseString<char32_t>::ensureCapacity\28unsigned\20int\2c\20bool\29
[asyncify] Common::BaseString<char32_t>::trim\28\29 can change the state due to Common::BaseString<char32_t>::ensureCapacity\28unsigned\20int\2c\20bool\29
[asyncify] Common::BaseString<char32_t>::assignAppend\28char32_t\20const*\29 can change the state due to Common::BaseString<char32_t>::ensureCapacity\28unsigned\20int\2c\20bool\29
[asyncify] Common::U32String::decodeUTF8\28char\20const*\2c\20unsigned\20int\29 can change the state due to Common::BaseString<char32_t>::ensureCapacity\28unsigned\20int\2c\20bool\29
[asyncify] Common::U32String::decodeUTF16BE\28unsigned\20short\20const*\2c\20unsigned\20int\29 can change the state due to Common::BaseString<char32_t>::ensureCapacity\28unsigned\20int\2c\20bool\29
[asyncify] Common::U32String::decodeUTF16LE\28unsigned\20short\20const*\2c\20unsigned\20int\29 can change the state due to Common::BaseString<char32_t>::ensureCapacity\28unsigned\20int\2c\20bool\29
[asyncify] Common::U32String::decodeUTF16Native\28unsigned\20short\20const*\2c\20unsigned\20int\29 can change the state due to Common::BaseString<char32_t>::ensureCapacity\28unsigned\20int\2c\20bool\29
[asyncify] Common::U32String::decodeOneByte\28char\20const*\2c\20unsigned\20int\2c\20Common::CodePage\29 can change the state due to Common::BaseString<char32_t>::ensureCapacity\28unsigned\20int\2c\20bool\29
[asyncify] Common::U32String::operator+=\28char32_t\29 can change the state due to Common::BaseString<char32_t>::ensureCapacity\28unsigned\20int\2c\20bool\29
[asyncify] Common::U32String::operator=\28Common::String\20const&\29 can change the state due to Common::BaseString<char32_t>::clear\28\29
[asyncify] Common::U32String::operator=\28char\20const*\29 can change the state due to Common::BaseString<char32_t>::clear\28\29
[asyncify] Graphics::MacTextWindow::clearInput\28\29 can change the state due to Common::BaseString<char32_t>::clear\28\29
[asyncify] Graphics::stripFormat\28Common::U32String\20const&\29 can change the state due to Common::BaseString<char32_t>::clear\28\29
[asyncify] Common::UnicodeBiDiText::~UnicodeBiDiText\28\29 can change the state due to Common::BaseString<char32_t>::~BaseString\28\29
[asyncify] Common::U32String::operator=\28char32_t\20const*\29 can change the state due to Common::BaseString<char32_t>::~BaseString\28\29
[asyncify] Common::U32String::insertString\28char\20const*\2c\20unsigned\20int\2c\20Common::CodePage\29 can change the state due to Common::BaseString<char32_t>::~BaseString\28\29
[asyncify] Common::U32String::insertString\28Common::String\20const&\2c\20unsigned\20int\2c\20Common::CodePage\29 can change the state due to Common::BaseString<char32_t>::~BaseString\28\29
[asyncify] GUI::PopUpDialog::clearEntries\28\29 can change the state due to Common::BaseString<char32_t>::~BaseString\28\29
[asyncify] GUI::PopUpWidget::clearEntries\28\29 can change the state due to Common::BaseString<char32_t>::~BaseString\28\29
[asyncify] Graphics::MacText::getTextSize\28int\2c\20int\29 can change the state due to Common::BaseString<char32_t>::~BaseString\28\29
[asyncify] Graphics::MacText::getTextColor\28int\2c\20int\29 can change the state due to Common::BaseString<char32_t>::~BaseString\28\29
[asyncify] Graphics::MacText::getTextFont\28int\2c\20int\29 can change the state due to Common::BaseString<char32_t>::~BaseString\28\29
[asyncify] Graphics::MacText::getTextSlant\28int\2c\20int\29 can change the state due to Common::BaseString<char32_t>::~BaseString\28\29
[asyncify] GUI::ButtonWidget::setLowresLabel\28Common::U32String\20const&\29 can change the state due to Common::BaseString<char32_t>::~BaseString\28\29
[asyncify] GUI::DropdownButtonWidget::clearEntries\28\29 can change the state due to Common::BaseString<char32_t>::~BaseString\28\29
[asyncify] Common::U32String::operator=\28Common::U32String&&\29 can change the state due to Common::BaseString<char32_t>::assign\28Common::BaseString<char32_t>&&\29
[asyncify] SdlTimerManager::~SdlTimerManager\28\29.1 can change the state due to SdlTimerManager::~SdlTimerManager\28\29
[asyncify] TownsAudioInterfaceInternal::intf_fmReset\28void*&\29 can change the state due to TownsAudioInterfaceInternal::fmReset\28\29
[asyncify] TownsAudioInterfaceInternal::intf_setLevel\28void*&\29 can change the state due to TownsAudioInterfaceInternal::fmSetLevel\28int\2c\20int\29
[asyncify] TownsAudioInterfaceInternal::intf_fmSetLevel\28void*&\29 can change the state due to TownsAudioInterfaceInternal::fmSetLevel\28int\2c\20int\29
[asyncify] TownsPC98_MusicChannel::control_f0_setPatch\28unsigned\20char\29 can change the state due to PC98AudioCore::writeReg\28unsigned\20char\2c\20unsigned\20char\2c\20unsigned\20char\29
[asyncify] TownsPC98_MusicChannel::control_f1_presetOutputLevel\28unsigned\20char\29 can change the state due to PC98AudioCore::writeReg\28unsigned\20char\2c\20unsigned\20char\2c\20unsigned\20char\29
[asyncify] TownsPC98_MusicChannel::control_f4_setOutputLevel\28unsigned\20char\29 can change the state due to PC98AudioCore::writeReg\28unsigned\20char\2c\20unsigned\20char\2c\20unsigned\20char\29
[asyncify] TownsPC98_MusicChannel::control_f5_tempo\28unsigned\20char\29 can change the state due to PC98AudioCore::writeReg\28unsigned\20char\2c\20unsigned\20char\2c\20unsigned\20char\29
[asyncify] TownsPC98_MusicChannel::control_fa_writeReg\28unsigned\20char\29 can change the state due to PC98AudioCore::writeReg\28unsigned\20char\2c\20unsigned\20char\2c\20unsigned\20char\29
[asyncify] TownsPC98_MusicChannel::control_fb_incOutLevel\28unsigned\20char\29 can change the state due to PC98AudioCore::writeReg\28unsigned\20char\2c\20unsigned\20char\2c\20unsigned\20char\29
[asyncify] TownsPC98_MusicChannel::control_fc_decOutLevel\28unsigned\20char\29 can change the state due to PC98AudioCore::writeReg\28unsigned\20char\2c\20unsigned\20char\2c\20unsigned\20char\29
[asyncify] TownsPC98_MusicChannel::control_ff_endOfTrack\28unsigned\20char\29 can change the state due to PC98AudioCore::writeReg\28unsigned\20char\2c\20unsigned\20char\2c\20unsigned\20char\29
[asyncify] TownsPC98_MusicChannel::keyOff\28\29 can change the state due to PC98AudioCore::writeReg\28unsigned\20char\2c\20unsigned\20char\2c\20unsigned\20char\29
[asyncify] TownsPC98_MusicChannel::keyOn\28\29 can change the state due to PC98AudioCore::writeReg\28unsigned\20char\2c\20unsigned\20char\2c\20unsigned\20char\29
[asyncify] TownsPC98_MusicChannel::processFrequency\28\29 can change the state due to PC98AudioCore::writeReg\28unsigned\20char\2c\20unsigned\20char\2c\20unsigned\20char\29
[asyncify] TownsPC98_MusicChannel::writeReg\28unsigned\20char\2c\20unsigned\20char\2c\20unsigned\20char\29 can change the state due to PC98AudioCore::writeReg\28unsigned\20char\2c\20unsigned\20char\2c\20unsigned\20char\29
[asyncify] TownsPC98_MusicChannel::fadeStep\28\29 can change the state due to PC98AudioCore::writeReg\28unsigned\20char\2c\20unsigned\20char\2c\20unsigned\20char\29
[asyncify] TownsPC98_MusicChannel::setOutputLevel\28\29 can change the state due to PC98AudioCore::writeReg\28unsigned\20char\2c\20unsigned\20char\2c\20unsigned\20char\29
[asyncify] TownsPC98_AudioDriver::writeReg\28unsigned\20char\2c\20unsigned\20char\2c\20unsigned\20char\29 can change the state due to PC98AudioCore::writeReg\28unsigned\20char\2c\20unsigned\20char\2c\20unsigned\20char\29
[asyncify] TownsPC98_AudioDriver::setMusicTempo\28unsigned\20char\29 can change the state due to PC98AudioCore::writeReg\28unsigned\20char\2c\20unsigned\20char\2c\20unsigned\20char\29
[asyncify] TownsPC98_MusicChannelSSG::control_ff_endOfTrack\28unsigned\20char\29 can change the state due to PC98AudioCore::writeReg\28unsigned\20char\2c\20unsigned\20char\2c\20unsigned\20char\29
[asyncify] TownsPC98_MusicChannelSSG::restore\28\29 can change the state due to PC98AudioCore::writeReg\28unsigned\20char\2c\20unsigned\20char\2c\20unsigned\20char\29
[asyncify] TownsPC98_MusicChannelSSG::loadData\28unsigned\20char*\29 can change the state due to PC98AudioCore::writeReg\28unsigned\20char\2c\20unsigned\20char\2c\20unsigned\20char\29
[asyncify] TownsPC98_MusicChannelSSG::setOutputLevel\28unsigned\20char\29 can change the state due to PC98AudioCore::writeReg\28unsigned\20char\2c\20unsigned\20char\2c\20unsigned\20char\29
[asyncify] TownsPC98_MusicChannelSSG::keyOn\28\29 can change the state due to PC98AudioCore::writeReg\28unsigned\20char\2c\20unsigned\20char\2c\20unsigned\20char\29
[asyncify] TownsPC98_MusicChannelSSG::processFrequency\28\29 can change the state due to PC98AudioCore::writeReg\28unsigned\20char\2c\20unsigned\20char\2c\20unsigned\20char\29
[asyncify] TownsPC98_MusicChannelSSG::fadeStep\28\29 can change the state due to PC98AudioCore::writeReg\28unsigned\20char\2c\20unsigned\20char\2c\20unsigned\20char\29
[asyncify] TownsPC98_MusicChannelPCM::control_f1_prcStart\28unsigned\20char\29 can change the state due to PC98AudioCore::writeReg\28unsigned\20char\2c\20unsigned\20char\2c\20unsigned\20char\29
[asyncify] TownsPC98_AudioDriver::setSfxTempo\28unsigned\20short\29 can change the state due to PC98AudioCore::writeReg\28unsigned\20char\2c\20unsigned\20char\2c\20unsigned\20char\29
[asyncify] TownsAudioInterfaceInternal::intf_fmKeyOn\28void*&\29 can change the state due to TownsAudioInterfaceInternal::fmKeyOn\28int\2c\20int\2c\20int\29
[asyncify] TownsAudioInterfaceInternal::intf_keyOn\28void*&\29 can change the state due to TownsAudioInterfaceInternal::fmKeyOn\28int\2c\20int\2c\20int\29
[asyncify] TownsAudioInterfaceInternal::intf_fmSetInstrument\28void*&\29 can change the state due to TownsAudioInterfaceInternal::fmSetInstrument\28int\2c\20int\29
[asyncify] TownsAudioInterfaceInternal::intf_setInstrument\28void*&\29 can change the state due to TownsAudioInterfaceInternal::fmSetInstrument\28int\2c\20int\29
[asyncify] TownsAudioInterfaceInternal::intf_fmSetPitch\28void*&\29 can change the state due to TownsAudioInterfaceInternal::fmSetPitch\28int\2c\20int\29
[asyncify] TownsAudioInterfaceInternal::intf_setPitch\28void*&\29 can change the state due to TownsAudioInterfaceInternal::fmSetPitch\28int\2c\20int\29
[asyncify] TownsPC98_MusicChannel::readReg\28unsigned\20char\2c\20unsigned\20char\29 can change the state due to PC98AudioCore::readReg\28unsigned\20char\2c\20unsigned\20char\29
[asyncify] TownsPC98_AudioDriver::readReg\28unsigned\20char\2c\20unsigned\20char\29 can change the state due to PC98AudioCore::readReg\28unsigned\20char\2c\20unsigned\20char\29
[asyncify] Audio::MaxTrax::~MaxTrax\28\29.1 can change the state due to Audio::MaxTrax::~MaxTrax\28\29
[asyncify] Common::U32String::U32String\28char\20const*\2c\20Common::CodePage\29 can change the state due to Common::U32String::decodeInternal\28char\20const*\2c\20unsigned\20int\2c\20Common::CodePage\29
[asyncify] Common::U32String::U32String\28char\20const*\2c\20unsigned\20int\2c\20Common::CodePage\29 can change the state due to Common::U32String::decodeInternal\28char\20const*\2c\20unsigned\20int\2c\20Common::CodePage\29
[asyncify] Common::U32String::U32String\28char\20const*\2c\20char\20const*\2c\20Common::CodePage\29 can change the state due to Common::U32String::decodeInternal\28char\20const*\2c\20unsigned\20int\2c\20Common::CodePage\29
[asyncify] Common::U32String::U32String\28Common::String\20const&\2c\20Common::CodePage\29 can change the state due to Common::U32String::decodeInternal\28char\20const*\2c\20unsigned\20int\2c\20Common::CodePage\29
[asyncify] Common::FSDirectory::setPrefix\28Common::String\20const&\29 can change the state due to Common::String::operator+=\28char\29
[asyncify] Common::Path::toString\28char\29\20const can change the state due to Common::String::operator+=\28char\29
[asyncify] Common::Path::appendInPlace\28char\20const*\2c\20char\29 can change the state due to Common::String::operator+=\28char\29
[asyncify] Common::Path::appendInPlace\28Common::String\20const&\2c\20char\29 can change the state due to Common::String::operator+=\28char\29
[asyncify] Common::Path::append\28Common::String\20const&\2c\20char\29\20const can change the state due to Common::String::operator+=\28char\29
[asyncify] Common::Path::append\28char\20const*\2c\20char\29\20const can change the state due to Common::String::operator+=\28char\29
[asyncify] Common::Path::joinInPlace\28Common::Path\20const&\29 can change the state due to Common::String::operator+=\28char\29
[asyncify] Common::Path::joinInPlace\28Common::String\20const&\2c\20char\29 can change the state due to Common::String::operator+=\28char\29
[asyncify] Common::Path::joinInPlace\28char\20const*\2c\20char\29 can change the state due to Common::String::operator+=\28char\29
[asyncify] Common::Path::join\28Common::Path\20const&\29\20const can change the state due to Common::String::operator+=\28char\29
[asyncify] Common::Path::join\28Common::String\20const&\2c\20char\29\20const can change the state due to Common::String::operator+=\28char\29
[asyncify] Common::Path::join\28char\20const*\2c\20char\29\20const can change the state due to Common::String::operator+=\28char\29
[asyncify] Common::StreamDebug::operator<<\28char\29 can change the state due to Common::String::operator+=\28char\29
[asyncify] Common::String::translitChar\28char32_t\2c\20char\29 can change the state due to Common::String::operator+=\28char\29
[asyncify] Common::JSON::extractString\28char\20const**\2c\20Common::String&\29 can change the state due to Common::String::operator+=\28char\29
[asyncify] Common::JSONValue::indent\28unsigned\20long\29 can change the state due to Common::String::operator+=\28char\29
[asyncify] Common::DebugManager::DebugManager\28\29 can change the state due to Common::DebugManager::addDebugChannels\28DebugChannelDef\20const*\29
[asyncify] Common::DebugManager::addAllDebugChannels\28DebugChannelDef\20const*\29 can change the state due to Common::DebugManager::addDebugChannels\28DebugChannelDef\20const*\29
[asyncify] Common::U32String\20Common::U32String::format<int\2c\20int>\28Common::U32String\20const&\2c\20int\2c\20int\29 can change the state due to Common::U32String::formatInternal\28Common::U32String\20const*\2c\20...\29
[asyncify] GUI::ListWidget::getThemeColor\28unsigned\20char\2c\20unsigned\20char\2c\20unsigned\20char\29 can change the state due to Common::U32String::format\28char\20const*\2c\20...\29
[asyncify] Common::JSON::stringify\28Common::JSONValue\20const*\29 can change the state due to Common::JSONValue::stringifyImpl\28unsigned\20long\29\20const
[asyncify] Common::JSONValue::stringify\28bool\29\20const can change the state due to Common::JSONValue::stringifyImpl\28unsigned\20long\29\20const
[asyncify] Image::Indeo::IVIHuffDesc::createHuffFromDesc\28Image::Indeo::VLC*\2c\20bool\29\20const can change the state due to Image::Indeo::VLC::init_vlc\28int\2c\20int\2c\20void\20const*\2c\20int\2c\20int\2c\20void\20const*\2c\20int\2c\20int\2c\20int\29
[asyncify] Graphics::TTFFont::getCharWidth\28unsigned\20int\29\20const can change the state due to Graphics::TTFFont::assureCached\28unsigned\20int\29\20const
[asyncify] Graphics::TTFFont::getBoundingBox\28unsigned\20int\29\20const can change the state due to Graphics::TTFFont::assureCached\28unsigned\20int\29\20const
[asyncify] Graphics::TTFFont::drawChar\28Graphics::Surface*\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20int\2c\20unsigned\20int\20const*\29\20const can change the state due to Graphics::TTFFont::assureCached\28unsigned\20int\29\20const
[asyncify] Audio::QDM2Stream::process_synthesis_subpackets\28Audio::QDM2SubPNode*\29 can change the state due to Audio::QDM2Stream::process_subpacket_11\28Audio::QDM2SubPNode*\2c\20int\29
[asyncify] OpenGL::LibRetroPipeline::renderPassSetupCoordinates\28OpenGL::LibRetroPipeline::Pass\20const&\29 can change the state due to OpenGL::Shader::enableVertexAttribute\28char\20const*\2c\20int\2c\20unsigned\20int\2c\20unsigned\20char\2c\20int\2c\20void\20const*\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29
[asyncify] VabInstr::VabInstr\28VGMInstrSet*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int\2c\20Common::String\20const&\29 can change the state due to VGMInstr::VGMInstr\28VGMInstrSet*\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int\2c\20Common::String\20const&\29
[asyncify] Common::ConfigManager::getDomain\28Common::String\20const&\29\20const can change the state due to Common::HashMap<Common::String\2c\20Common::ConfigManager::Domain\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>::getVal\28Common::String\20const&\29\20const
[asyncify] Graphics::FontManager::getFontByUsage\28Graphics::FontManager::FontUsage\29\20const can change the state due to Common::HashMap<Common::String\2c\20Graphics::Font\20const*\2c\20Common::Hash<Common::String>\2c\20Common::EqualTo<Common::String>>::getVal\28Common::String\20const&\29\20const
[asyncify] Common::ConfigManager::Domain::getKVComment\28Common::String\20const&\29\20const can change the state due to Common::HashMap<Common::String\2c\20Common::String\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>::getVal\28Common::String\20const&\29\20const
[asyncify] Common::ConfigManager::get\28Common::String\20const&\29\20const can change the state due to Common::HashMap<Common::String\2c\20Common::String\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>::getVal\28Common::String\20const&\29\20const
[asyncify] Graphics::MacFONTFont::getKerningOffset\28unsigned\20int\2c\20unsigned\20int\29\20const can change the state due to Graphics::MacFontFamily::getKerningOffset\28unsigned\20int\2c\20int\2c\20unsigned\20int\29\20const
[asyncify] Common::MemoryPool::allocChunk\28\29 can change the state due to Common::MemoryPool::allocPage\28\29
[asyncify] Common::Array<ADDetectedGame>::remove_at\28unsigned\20int\29 can change the state due to Common::HashMap<Common::String\2c\20FileProperties\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>::operator=\28Common::HashMap<Common::String\2c\20FileProperties\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>\20const&\29
[asyncify] DetectedGame*\20Common::copy_backward<DetectedGame*\2c\20DetectedGame*>\28DetectedGame*\2c\20DetectedGame*\2c\20DetectedGame*\29 can change the state due to Common::HashMap<Common::String\2c\20FileProperties\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>::operator=\28Common::HashMap<Common::String\2c\20FileProperties\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>\20const&\29
[asyncify] DetectedGame*\20Common::copy<DetectedGame\20const*\2c\20DetectedGame*>\28DetectedGame\20const*\2c\20DetectedGame\20const*\2c\20DetectedGame*\29 can change the state due to Common::HashMap<Common::String\2c\20FileProperties\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>::operator=\28Common::HashMap<Common::String\2c\20FileProperties\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>\20const&\29
[asyncify] GUI::GroupedListWidget::setMetadataNames\28Common::HashMap<Common::String\2c\20Common::String\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>\20const&\29 can change the state due to Common::HashMap<Common::String\2c\20Common::String\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>::operator=\28Common::HashMap<Common::String\2c\20Common::String\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>\20const&\29
[asyncify] GUI::GridWidget::setMetadataNames\28Common::HashMap<Common::String\2c\20Common::String\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>\20const&\29 can change the state due to Common::HashMap<Common::String\2c\20Common::String\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>::operator=\28Common::HashMap<Common::String\2c\20Common::String\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>\20const&\29
[asyncify] Video::PSXStreamDecoder::PSXVideoTrack::decodeMacroBlock\28Common::BitStreamImpl<Common::BitStreamMemoryStream\2c\20unsigned\20long\20long\2c\2016\2c\20true\2c\20true>*\2c\20int\2c\20int\2c\20unsigned\20short\2c\20unsigned\20short\29 can change the state due to Video::PSXStreamDecoder::PSXVideoTrack::decodeBlock\28Common::BitStreamImpl<Common::BitStreamMemoryStream\2c\20unsigned\20long\20long\2c\2016\2c\20true\2c\20true>*\2c\20unsigned\20char*\2c\20int\2c\20unsigned\20short\2c\20unsigned\20short\2c\20Video::PSXStreamDecoder::PSXVideoTrack::PlaneType\29
[asyncify] void\20TinyGL::Internal::tglBlit<false\2c\20false\2c\20false>\28TinyGL::BlitImage*\2c\20TinyGL::BlitTransform\20const&\2c\20bool\29 can change the state due to void\20TinyGL::BlitImage::tglBlitGeneric<true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false>\28TinyGL::BlitTransform\20const&\29
[asyncify] TinyGL::Internal::tglBlitNoBlend\28TinyGL::BlitImage*\2c\20TinyGL::BlitTransform\20const&\29 can change the state due to void\20TinyGL::BlitImage::tglBlitGeneric<true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false>\28TinyGL::BlitTransform\20const&\29
[asyncify] void\20TinyGL::Internal::tglBlit<true\2c\20false\2c\20false>\28TinyGL::BlitImage*\2c\20TinyGL::BlitTransform\20const&\2c\20bool\29 can change the state due to void\20TinyGL::BlitImage::tglBlitGeneric<true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true>\28TinyGL::BlitTransform\20const&\29
[asyncify] TinyGL::Internal::tglBlit\28TinyGL::BlitImage*\2c\20TinyGL::BlitTransform\20const&\29 can change the state due to void\20TinyGL::Internal::tglBlit<true\2c\20true\2c\20true\2c\20true>\28TinyGL::BlitImage*\2c\20TinyGL::BlitTransform\20const&\29
[asyncify] void\20TinyGL::Internal::tglBlit<true\2c\20true\2c\20false>\28TinyGL::BlitImage*\2c\20TinyGL::BlitTransform\20const&\2c\20bool\29 can change the state due to void\20TinyGL::BlitImage::tglBlitGeneric<false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true>\28TinyGL::BlitTransform\20const&\29
[asyncify] void\20TinyGL::Internal::tglBlit<false\2c\20true\2c\20false>\28TinyGL::BlitImage*\2c\20TinyGL::BlitTransform\20const&\2c\20bool\29 can change the state due to void\20TinyGL::BlitImage::tglBlitGeneric<false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20false>\28TinyGL::BlitTransform\20const&\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29
[asyncify] Audio::QDM2Stream::process_subpacket_10\28Audio::QDM2SubPNode*\2c\20int\29 can change the state due to Audio::QDM2Stream::init_tone_level_dequantization\28Common::BitStreamImpl<Common::BitStreamMemoryStream\2c\20unsigned\20long\20long\2c\2032\2c\20true\2c\20false>*\2c\20int\29
[asyncify] Audio::QDM2Stream::qdm2_decode_fft_packets\28\29 can change the state due to Audio::QDM2Stream::qdm2_fft_decode_tones\28int\2c\20Common::BitStreamImpl<Common::BitStreamMemoryStream\2c\20unsigned\20long\20long\2c\2032\2c\20true\2c\20false>*\2c\20int\29
[asyncify] Audio::Rjp1::interrupt\28\29 can change the state due to Audio::Rjp1::playChannel\28Audio::Rjp1Channel*\29
[asyncify] OpenGLSdlGraphics3dManager::clearOverlay\28\29 can change the state due to OpenGL::TiledSurface::fill\28unsigned\20int\29
[asyncify] virtual\20thunk\20to\20OpenGLSdlGraphics3dManager::clearOverlay\28\29 can change the state due to OpenGL::TiledSurface::fill\28unsigned\20int\29
[asyncify] Graphics::VectorRendererSpec<unsigned\20short>::fillSurface\28\29 can change the state due to Graphics::VectorRendererSpec<unsigned\20short>::precalcGradient\28int\29
[asyncify] Graphics::VectorRendererSpec<unsigned\20short>::drawInteriorRoundedSquareAlg\28int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20unsigned\20short\2c\20Graphics::VectorRenderer::FillMode\29 can change the state due to Graphics::VectorRendererSpec<unsigned\20short>::precalcGradient\28int\29
[asyncify] Graphics::VectorRendererSpec<unsigned\20short>::drawInteriorRoundedSquareAlgClip\28int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20unsigned\20short\2c\20Graphics::VectorRenderer::FillMode\29 can change the state due to Graphics::VectorRendererSpec<unsigned\20short>::precalcGradient\28int\29
[asyncify] Graphics::VectorRendererSpec<unsigned\20short>::drawTabAlg\28int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20unsigned\20short\2c\20Graphics::VectorRenderer::FillMode\2c\20int\2c\20int\29 can change the state due to Graphics::VectorRendererSpec<unsigned\20short>::precalcGradient\28int\29
[asyncify] Graphics::VectorRendererSpec<unsigned\20short>::drawTabAlgClip\28int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20unsigned\20short\2c\20Graphics::VectorRenderer::FillMode\2c\20int\2c\20int\29 can change the state due to Graphics::VectorRendererSpec<unsigned\20short>::precalcGradient\28int\29
[asyncify] Graphics::VectorRendererAA<unsigned\20short>::drawTabAlg\28int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20unsigned\20short\2c\20Graphics::VectorRenderer::FillMode\2c\20int\2c\20int\29 can change the state due to Graphics::VectorRendererSpec<unsigned\20short>::precalcGradient\28int\29
[asyncify] TinyGL::Internal::tglBlitZBuffer\28TinyGL::BlitImage*\2c\20int\2c\20int\29 can change the state due to TinyGL::BlitImage::tglBlitZBuffer\28int\2c\20int\29
[asyncify] TinyGL::glopArrayElement\28TinyGL::GLContext*\2c\20TinyGL::GLParam*\29 can change the state due to TinyGL::GLContext::glopArrayElement\28TinyGL::GLParam*\29
[asyncify] TinyGL::GLContext::gl_draw_line\28TinyGL::GLVertex*\2c\20TinyGL::GLVertex*\29 can change the state due to TinyGL::FrameBuffer::fillLineZ\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29
[asyncify] TinyGL::GLContext::gl_draw_triangle_line\28TinyGL::GLContext*\2c\20TinyGL::GLVertex*\2c\20TinyGL::GLVertex*\2c\20TinyGL::GLVertex*\29 can change the state due to TinyGL::FrameBuffer::fillLineZ\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29
[asyncify] GlkMetaEngineDetection::getSupportedGames\28\29\20const can change the state due to Glk::Adrift::AdriftMetaEngine::getSupportedGames\28PlainGameList&\29
[asyncify] Graphics::VectorRendererSpec<unsigned\20int>::fillSurface\28\29 can change the state due to Graphics::VectorRendererSpec<unsigned\20int>::precalcGradient\28int\29
[asyncify] Graphics::VectorRendererSpec<unsigned\20int>::drawInteriorRoundedSquareAlg\28int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int\2c\20Graphics::VectorRenderer::FillMode\29 can change the state due to Graphics::VectorRendererSpec<unsigned\20int>::precalcGradient\28int\29
[asyncify] Graphics::VectorRendererSpec<unsigned\20int>::drawInteriorRoundedSquareAlgClip\28int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int\2c\20Graphics::VectorRenderer::FillMode\29 can change the state due to Graphics::VectorRendererSpec<unsigned\20int>::precalcGradient\28int\29
[asyncify] Graphics::VectorRendererSpec<unsigned\20int>::drawTabAlg\28int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int\2c\20Graphics::VectorRenderer::FillMode\2c\20int\2c\20int\29 can change the state due to Graphics::VectorRendererSpec<unsigned\20int>::precalcGradient\28int\29
[asyncify] Graphics::VectorRendererSpec<unsigned\20int>::drawTabAlgClip\28int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int\2c\20Graphics::VectorRenderer::FillMode\2c\20int\2c\20int\29 can change the state due to Graphics::VectorRendererSpec<unsigned\20int>::precalcGradient\28int\29
[asyncify] Graphics::VectorRendererAA<unsigned\20int>::drawTabAlg\28int\2c\20int\2c\20int\2c\20int\2c\20int\2c\20unsigned\20int\2c\20Graphics::VectorRenderer::FillMode\2c\20int\2c\20int\29 can change the state due to Graphics::VectorRendererSpec<unsigned\20int>::precalcGradient\28int\29
[asyncify] luaL_error\28lua_State*\2c\20char\20const*\2c\20...\29 can change the state due to lua_error\28lua_State*\29
[asyncify] luaB_error\28lua_State*\29 can change the state due to lua_error\28lua_State*\29
[asyncify] luaB_auxwrap\28lua_State*\29 can change the state due to lua_error\28lua_State*\29
[asyncify] lua_replace\28lua_State*\2c\20int\29 can change the state due to luaG_runerror\28lua_State*\2c\20char\20const*\2c\20...\29
[asyncify] luaH_next\28lua_State*\2c\20Table*\2c\20lua_TValue*\29 can change the state due to luaG_runerror\28lua_State*\2c\20char\20const*\2c\20...\29
[asyncify] luaH_set\28lua_State*\2c\20Table*\2c\20lua_TValue\20const*\29 can change the state due to luaG_runerror\28lua_State*\2c\20char\20const*\2c\20...\29
[asyncify] luaG_typeerror\28lua_State*\2c\20lua_TValue\20const*\2c\20char\20const*\29 can change the state due to luaG_runerror\28lua_State*\2c\20char\20const*\2c\20...\29
[asyncify] luaG_concaterror\28lua_State*\2c\20lua_TValue*\2c\20lua_TValue*\29 can change the state due to luaG_runerror\28lua_State*\2c\20char\20const*\2c\20...\29
[asyncify] luaG_aritherror\28lua_State*\2c\20lua_TValue\20const*\2c\20lua_TValue\20const*\29 can change the state due to luaG_runerror\28lua_State*\2c\20char\20const*\2c\20...\29
[asyncify] luaG_ordererror\28lua_State*\2c\20lua_TValue\20const*\2c\20lua_TValue\20const*\29 can change the state due to luaG_runerror\28lua_State*\2c\20char\20const*\2c\20...\29
[asyncify] lua_yield\28lua_State*\2c\20int\29 can change the state due to luaG_runerror\28lua_State*\2c\20char\20const*\2c\20...\29
[asyncify] luaM_toobig\28lua_State*\29 can change the state due to luaG_runerror\28lua_State*\2c\20char\20const*\2c\20...\29
[asyncify] lua_gettable\28lua_State*\2c\20int\29 can change the state due to luaV_gettable\28lua_State*\2c\20lua_TValue\20const*\2c\20lua_TValue*\2c\20lua_TValue*\29
[asyncify] lua_settable\28lua_State*\2c\20int\29 can change the state due to luaV_settable\28lua_State*\2c\20lua_TValue\20const*\2c\20lua_TValue*\2c\20lua_TValue*\29
[asyncify] luaV_lessthan\28lua_State*\2c\20lua_TValue\20const*\2c\20lua_TValue\20const*\29 can change the state due to call_orderTM\28lua_State*\2c\20lua_TValue\20const*\2c\20lua_TValue\20const*\2c\20TMS\29
[asyncify] lua_equal\28lua_State*\2c\20int\2c\20int\29 can change the state due to luaV_equalval\28lua_State*\2c\20lua_TValue\20const*\2c\20lua_TValue\20const*\29
[asyncify] Arith\28lua_State*\2c\20lua_TValue*\2c\20lua_TValue\20const*\2c\20lua_TValue\20const*\2c\20TMS\29 can change the state due to call_binTM\28lua_State*\2c\20lua_TValue\20const*\2c\20lua_TValue\20const*\2c\20lua_TValue*\2c\20TMS\29
[asyncify] str_gsub\28lua_State*\29 can change the state due to lua_call\28lua_State*\2c\20int\2c\20int\29
[asyncify] foreach\28lua_State*\29 can change the state due to lua_call\28lua_State*\2c\20int\2c\20int\29
[asyncify] foreachi\28lua_State*\29 can change the state due to lua_call\28lua_State*\2c\20int\2c\20int\29
[asyncify] sort_comp\28lua_State*\2c\20int\2c\20int\29 can change the state due to lua_call\28lua_State*\2c\20int\2c\20int\29
[asyncify] luaL_callmeta\28lua_State*\2c\20int\2c\20char\20const*\29 can change the state due to lua_call\28lua_State*\2c\20int\2c\20int\29
[asyncify] generic_reader\28lua_State*\2c\20void*\2c\20unsigned\20long*\29 can change the state due to lua_call\28lua_State*\2c\20int\2c\20int\29
[asyncify] luaB_print\28lua_State*\29 can change the state due to lua_call\28lua_State*\2c\20int\2c\20int\29
[asyncify] hookf\28lua_State*\2c\20lua_Debug*\29 can change the state due to lua_call\28lua_State*\2c\20int\2c\20int\29
[asyncify] luaL_openlibs\28lua_State*\29 can change the state due to lua_call\28lua_State*\2c\20int\2c\20int\29
[asyncify] ll_module\28lua_State*\29 can change the state due to lua_call\28lua_State*\2c\20int\2c\20int\29
[asyncify] ll_require\28lua_State*\29 can change the state due to lua_call\28lua_State*\2c\20int\2c\20int\29
[asyncify] luaC_callGCTM\28lua_State*\29 can change the state due to GCTM\28lua_State*\29
[asyncify] luaK_concat\28FuncState*\2c\20int*\2c\20int\29 can change the state due to luaX_syntaxerror\28LexState*\2c\20char\20const*\29
[asyncify] luaK_patchlist\28FuncState*\2c\20int\2c\20int\29 can change the state due to luaX_syntaxerror\28LexState*\2c\20char\20const*\29
[asyncify] patchlistaux\28FuncState*\2c\20int\2c\20int\2c\20int\2c\20int\29 can change the state due to luaX_syntaxerror\28LexState*\2c\20char\20const*\29
[asyncify] luaK_patchtohere\28FuncState*\2c\20int\29 can change the state due to luaX_syntaxerror\28LexState*\2c\20char\20const*\29
[asyncify] luaK_checkstack\28FuncState*\2c\20int\29 can change the state due to luaX_syntaxerror\28LexState*\2c\20char\20const*\29
[asyncify] luaK_reserveregs\28FuncState*\2c\20int\29 can change the state due to luaX_syntaxerror\28LexState*\2c\20char\20const*\29
[asyncify] luaK_setreturns\28FuncState*\2c\20expdesc*\2c\20int\29 can change the state due to luaX_syntaxerror\28LexState*\2c\20char\20const*\29
[asyncify] luaK_exp2nextreg\28FuncState*\2c\20expdesc*\29 can change the state due to luaX_syntaxerror\28LexState*\2c\20char\20const*\29
[asyncify] luaK_exp2anyreg\28FuncState*\2c\20expdesc*\29 can change the state due to luaX_syntaxerror\28LexState*\2c\20char\20const*\29
[asyncify] jumponcond\28FuncState*\2c\20expdesc*\2c\20int\29 can change the state due to luaX_syntaxerror\28LexState*\2c\20char\20const*\29
[asyncify] luaK_posfix\28FuncState*\2c\20BinOpr\2c\20expdesc*\2c\20expdesc*\29 can change the state due to luaX_syntaxerror\28LexState*\2c\20char\20const*\29
[asyncify] check_match\28LexState*\2c\20int\2c\20int\2c\20int\29 can change the state due to luaX_syntaxerror\28LexState*\2c\20char\20const*\29
[asyncify] forbody\28LexState*\2c\20int\2c\20int\2c\20int\2c\20int\29 can change the state due to luaX_syntaxerror\28LexState*\2c\20char\20const*\29
[asyncify] field\28LexState*\2c\20expdesc*\29 can change the state due to luaX_syntaxerror\28LexState*\2c\20char\20const*\29
[asyncify] primaryexp\28LexState*\2c\20expdesc*\29 can change the state due to luaX_syntaxerror\28LexState*\2c\20char\20const*\29
[asyncify] funcargs\28LexState*\2c\20expdesc*\29 can change the state due to luaX_syntaxerror\28LexState*\2c\20char\20const*\29
[asyncify] block\28LexState*\29 can change the state due to chunk\28LexState*\29
[asyncify] adjust_assign\28LexState*\2c\20int\2c\20int\2c\20expdesc*\29 can change the state due to luaK_nil\28FuncState*\2c\20int\2c\20int\29
[asyncify] luaK_exp2val\28FuncState*\2c\20expdesc*\29 can change the state due to luaK_dischargevars\28FuncState*\2c\20expdesc*\29
[asyncify] luaK_indexed\28FuncState*\2c\20expdesc*\2c\20expdesc*\29 can change the state due to luaK_exp2RK\28FuncState*\2c\20expdesc*\29
[asyncify] luaH_setnum\28lua_State*\2c\20Table*\2c\20int\29 can change the state due to newkey\28lua_State*\2c\20Table*\2c\20lua_TValue\20const*\29
[asyncify] luaH_setstr\28lua_State*\2c\20Table*\2c\20TString*\29 can change the state due to newkey\28lua_State*\2c\20Table*\2c\20lua_TValue\20const*\29
[asyncify] luaL_newmetatable\28lua_State*\2c\20char\20const*\29 can change the state due to lua_createtable\28lua_State*\2c\20int\2c\20int\29
[asyncify] luaL_findtable\28lua_State*\2c\20int\2c\20char\20const*\2c\20int\29 can change the state due to lua_createtable\28lua_State*\2c\20int\2c\20int\29
[asyncify] getsizes\28lua_State*\29 can change the state due to lua_createtable\28lua_State*\2c\20int\2c\20int\29
[asyncify] luaopen_base\28lua_State*\29 can change the state due to lua_createtable\28lua_State*\2c\20int\2c\20int\29
[asyncify] luaB_newproxy\28lua_State*\29 can change the state due to lua_createtable\28lua_State*\2c\20int\2c\20int\29
[asyncify] gethooktable\28lua_State*\29 can change the state due to lua_createtable\28lua_State*\2c\20int\2c\20int\29
[asyncify] db_getinfo\28lua_State*\29 can change the state due to lua_createtable\28lua_State*\2c\20int\2c\20int\29
[asyncify] luaopen_io\28lua_State*\29 can change the state due to lua_createtable\28lua_State*\2c\20int\2c\20int\29
[asyncify] luaopen_package\28lua_State*\29 can change the state due to lua_createtable\28lua_State*\2c\20int\2c\20int\29
[asyncify] ll_seeall\28lua_State*\29 can change the state due to lua_createtable\28lua_State*\2c\20int\2c\20int\29
[asyncify] os_date\28lua_State*\29 can change the state due to lua_createtable\28lua_State*\2c\20int\2c\20int\29
[asyncify] luaopen_string\28lua_State*\29 can change the state due to lua_createtable\28lua_State*\2c\20int\2c\20int\29
[asyncify] luaL_argerror\28lua_State*\2c\20int\2c\20char\20const*\29 can change the state due to lua_getinfo\28lua_State*\2c\20char\20const*\2c\20lua_Debug*\29
[asyncify] luaL_where\28lua_State*\2c\20int\29 can change the state due to lua_getinfo\28lua_State*\2c\20char\20const*\2c\20lua_Debug*\29
[asyncify] getfunc\28lua_State*\2c\20int\29 can change the state due to lua_getinfo\28lua_State*\2c\20char\20const*\2c\20lua_Debug*\29
[asyncify] db_errorfb\28lua_State*\29 can change the state due to lua_getinfo\28lua_State*\2c\20char\20const*\2c\20lua_Debug*\29
[asyncify] lua_checkstack\28lua_State*\2c\20int\29 can change the state due to luaD_growstack\28lua_State*\2c\20int\29
[asyncify] luaB_pcall\28lua_State*\29 can change the state due to lua_pcall\28lua_State*\2c\20int\2c\20int\2c\20int\29
[asyncify] luaB_xpcall\28lua_State*\29 can change the state due to lua_pcall\28lua_State*\2c\20int\2c\20int\2c\20int\29
[asyncify] luaL_loadbuffer\28lua_State*\2c\20char\20const*\2c\20unsigned\20long\2c\20char\20const*\29 can change the state due to lua_load\28lua_State*\2c\20char\20const*\20\28*\29\28lua_State*\2c\20void*\2c\20unsigned\20long*\29\2c\20void*\2c\20char\20const*\29
[asyncify] luaL_loadstring\28lua_State*\2c\20char\20const*\29 can change the state due to lua_load\28lua_State*\2c\20char\20const*\20\28*\29\28lua_State*\2c\20void*\2c\20unsigned\20long*\29\2c\20void*\2c\20char\20const*\29
[asyncify] luaB_load\28lua_State*\29 can change the state due to lua_load\28lua_State*\2c\20char\20const*\20\28*\29\28lua_State*\2c\20void*\2c\20unsigned\20long*\29\2c\20void*\2c\20char\20const*\29
[asyncify] gmatch\28lua_State*\29 can change the state due to lua_pushcclosure\28lua_State*\2c\20int\20\28*\29\28lua_State*\29\2c\20int\29
[asyncify] luaL_openlib\28lua_State*\2c\20char\20const*\2c\20luaL_Reg\20const*\2c\20int\29 can change the state due to lua_pushcclosure\28lua_State*\2c\20int\20\28*\29\28lua_State*\29\2c\20int\29
[asyncify] luaB_cowrap\28lua_State*\29 can change the state due to lua_pushcclosure\28lua_State*\2c\20int\20\28*\29\28lua_State*\29\2c\20int\29
[asyncify] f_lines\28lua_State*\29 can change the state due to lua_pushcclosure\28lua_State*\2c\20int\20\28*\29\28lua_State*\29\2c\20int\29
[asyncify] lua_tolstring\28lua_State*\2c\20int\2c\20unsigned\20long*\29 can change the state due to luaC_step\28lua_State*\29
[asyncify] lua_pushvfstring\28lua_State*\2c\20char\20const*\2c\20void*\29 can change the state due to luaC_step\28lua_State*\29
[asyncify] lua_pushfstring\28lua_State*\2c\20char\20const*\2c\20...\29 can change the state due to luaC_step\28lua_State*\29
[asyncify] lua_gc\28lua_State*\2c\20int\2c\20int\29 can change the state due to luaC_step\28lua_State*\29
[asyncify] luaB_cocreate\28lua_State*\29 can change the state due to lua_newthread\28lua_State*\29
[asyncify] ll_loadlib\28lua_State*\29 can change the state due to lua_newuserdata\28lua_State*\2c\20unsigned\20long\29
[asyncify] lua_objlen\28lua_State*\2c\20int\29 can change the state due to luaV_tostring\28lua_State*\2c\20lua_TValue*\29
[asyncify] push_onecapture\28MatchState*\2c\20int\2c\20char\20const*\2c\20char\20const*\29 can change the state due to lua_pushlstring\28lua_State*\2c\20char\20const*\2c\20unsigned\20long\29
[asyncify] str_sub\28lua_State*\29 can change the state due to lua_pushlstring\28lua_State*\2c\20char\20const*\2c\20unsigned\20long\29
[asyncify] Lua::createString\28lua_State*\2c\20char\20const*\2c\20unsigned\20long\29 can change the state due to lua_pushlstring\28lua_State*\2c\20char\20const*\2c\20unsigned\20long\29
[asyncify] Lua::lua_newlstr\28lua_State*\2c\20char\20const*\2c\20unsigned\20long\29 can change the state due to lua_pushlstring\28lua_State*\2c\20char\20const*\2c\20unsigned\20long\29
[asyncify] luaL_setn\28lua_State*\2c\20int\2c\20int\29 can change the state due to lua_pushlstring\28lua_State*\2c\20char\20const*\2c\20unsigned\20long\29
[asyncify] luaL_getn\28lua_State*\2c\20int\29 can change the state due to lua_pushlstring\28lua_State*\2c\20char\20const*\2c\20unsigned\20long\29
[asyncify] luaL_gsub\28lua_State*\2c\20char\20const*\2c\20char\20const*\2c\20char\20const*\29 can change the state due to lua_pushlstring\28lua_State*\2c\20char\20const*\2c\20unsigned\20long\29
[asyncify] luaL_prepbuffer\28luaL_Buffer*\29 can change the state due to lua_pushlstring\28lua_State*\2c\20char\20const*\2c\20unsigned\20long\29
[asyncify] luaL_pushresult\28luaL_Buffer*\29 can change the state due to lua_pushlstring\28lua_State*\2c\20char\20const*\2c\20unsigned\20long\29
[asyncify] luaL_addvalue\28luaL_Buffer*\29 can change the state due to lua_pushlstring\28lua_State*\2c\20char\20const*\2c\20unsigned\20long\29
[asyncify] luaB_tostring\28lua_State*\29 can change the state due to lua_pushlstring\28lua_State*\2c\20char\20const*\2c\20unsigned\20long\29
[asyncify] db_gethook\28lua_State*\29 can change the state due to lua_pushlstring\28lua_State*\2c\20char\20const*\2c\20unsigned\20long\29
[asyncify] io_noclose\28lua_State*\29 can change the state due to lua_pushlstring\28lua_State*\2c\20char\20const*\2c\20unsigned\20long\29
[asyncify] luaL_getmetafield\28lua_State*\2c\20int\2c\20char\20const*\29 can change the state due to lua_pushstring\28lua_State*\2c\20char\20const*\29
[asyncify] luaB_type\28lua_State*\29 can change the state due to lua_pushstring\28lua_State*\2c\20char\20const*\29
[asyncify] luaB_costatus\28lua_State*\29 can change the state due to lua_pushstring\28lua_State*\2c\20char\20const*\29
[asyncify] db_getlocal\28lua_State*\29 can change the state due to lua_pushstring\28lua_State*\2c\20char\20const*\29
[asyncify] auxupvalue\28lua_State*\2c\20int\29 can change the state due to lua_pushstring\28lua_State*\2c\20char\20const*\29
[asyncify] db_setlocal\28lua_State*\29 can change the state due to lua_pushstring\28lua_State*\2c\20char\20const*\29
[asyncify] os_getenv\28lua_State*\29 can change the state due to lua_pushstring\28lua_State*\2c\20char\20const*\29
[asyncify] luaL_checkudata\28lua_State*\2c\20int\2c\20char\20const*\29 can change the state due to lua_getfield\28lua_State*\2c\20int\2c\20char\20const*\29
[asyncify] luaopen_math\28lua_State*\29 can change the state due to lua_getfield\28lua_State*\2c\20int\2c\20char\20const*\29
[asyncify] loader_preload\28lua_State*\29 can change the state due to lua_getfield\28lua_State*\2c\20int\2c\20char\20const*\29
[asyncify] os_time\28lua_State*\29 can change the state due to lua_getfield\28lua_State*\2c\20int\2c\20char\20const*\29
[asyncify] luaO_pushfstring\28lua_State*\2c\20char\20const*\2c\20...\29 can change the state due to luaO_pushvfstring\28lua_State*\2c\20char\20const*\2c\20void*\29
[asyncify] mt32emu_set_part_volume_override can change the state due to MT32Emu::Synth::setPartVolumeOverride\28unsigned\20char\2c\20unsigned\20char\29
[asyncify] MT32Emu::Partial::getAmpValue\28\29 can change the state due to MT32Emu::TVA::handleInterrupt\28\29
[asyncify] SDL_AbortAssertion can change the state due to SDL_Quit
[asyncify] SurfaceSdlGraphicsManager::SDL_SetAlpha\28SDL_Surface*\2c\20unsigned\20int\2c\20unsigned\20char\29 can change the state due to SDL_SetSurfaceBlendMode
[asyncify] SDL_IsGameControllerNameAndGUID can change the state due to SDL_PrivateGetControllerMappingForGUID
[asyncify] SDL_AutoUpdateJoysticksChanged can change the state due to SDL_JoystickEventState
[asyncify] png_icc_check_length can change the state due to png_icc_profile_error
[asyncify] png_icc_check_header can change the state due to png_icc_profile_error
[asyncify] png_icc_check_tag_table can change the state due to png_icc_profile_error
[asyncify] png_colorspace_set_ICC can change the state due to png_icc_profile_error
[asyncify] png_get_sCAL_fixed can change the state due to png_fixed
[asyncify] gzwrite can change the state due to gz_write
[asyncify] gzfwrite can change the state due to gz_write
[asyncify] gzputc can change the state due to gz_write
[asyncify] gzputs can change the state due to gz_write
[asyncify] gzprintf can change the state due to gzvprintf
[asyncify] gz_read can change the state due to gz_fetch
[asyncify] gzungetc can change the state due to gz_fetch
[asyncify] gzgets can change the state due to gz_fetch
[asyncify] Common::uncompress\28unsigned\20char*\2c\20unsigned\20long*\2c\20unsigned\20char\20const*\2c\20unsigned\20long\29 can change the state due to uncompress
[asyncify] Graphics::FreeType::New_Face\28FT_LibraryRec_*\2c\20char\20const*\2c\20long\2c\20FT_FaceRec_**\29 can change the state due to FT_New_Face
[asyncify] Graphics::FreeType::New_Memory_Face\28FT_LibraryRec_*\2c\20unsigned\20char\20const*\2c\20long\2c\20long\2c\20FT_FaceRec_**\29 can change the state due to FT_New_Memory_Face
[asyncify] Graphics::TTFLibrary::loadFont\28unsigned\20char\20const*\2c\20int\2c\20unsigned\20int\2c\20FT_FaceRec_*&\29 can change the state due to FT_New_Memory_Face
[asyncify] Graphics::FreeType::Done_FreeType\28FT_LibraryRec_*\29 can change the state due to FT_Done_FreeType
[asyncify] Graphics::TTFLibrary::~TTFLibrary\28\29 can change the state due to FT_Done_FreeType
[asyncify] Graphics::FreeType::Init_FreeType\28FT_LibraryRec_**\29 can change the state due to FT_Init_FreeType
[asyncify] Graphics::TTFLibrary::TTFLibrary\28\29 can change the state due to FT_Init_FreeType
[asyncify] af_indic_hints_apply can change the state due to af_cjk_hints_apply
[asyncify] ft_outline_glyph_init can change the state due to FT_Outline_New
[asyncify] ft_outline_glyph_copy can change the state due to FT_Outline_New
[asyncify] getservbyname can change the state due to getservbyname_r
[asyncify] __res_send can change the state due to __res_msend
[asyncify] putwc can change the state due to fputwc
[asyncify] putwchar can change the state due to fputwc
[asyncify] wprintf_core can change the state due to fputwc
[asyncify] out.1 can change the state due to fputwc
[asyncify] MT32Emu::ReportHandler::printDebug\28char\20const*\2c\20void*\29 can change the state due to putchar
[asyncify] fwscanf can change the state due to vfwscanf
[asyncify] vswscanf can change the state due to vfwscanf
[asyncify] vwscanf can change the state due to vfwscanf
[asyncify] scanf can change the state due to vscanf
[asyncify] SDL_sscanf can change the state due to vsscanf
[asyncify] SDL_vsscanf can change the state due to vsscanf
[asyncify] sscanf can change the state due to vsscanf
[asyncify] std::__2::__libcpp_sscanf_l\28char\20const*\2c\20__locale_struct*\2c\20char\20const*\2c\20...\29 can change the state due to vsscanf
[asyncify] getmntent can change the state due to getmntent_r
[asyncify] fgetwc can change the state due to __fgetwc_unlocked
[asyncify] fgetws can change the state due to __fgetwc_unlocked
[asyncify] read_text_integer can change the state due to getc
[asyncify] read_non_rle_pixel can change the state due to getc
[asyncify] strtox can change the state due to __floatscan
[asyncify] wcstox can change the state due to __floatscan
[asyncify] wcstox.1 can change the state due to __intscan
[asyncify] legalstub$__intscan can change the state due to __intscan
[asyncify] MT32Emu::FileStream::open\28char\20const*\29 can change the state due to std::__2::basic_ifstream<char\2c\20std::__2::char_traits<char>>::open\28char\20const*\2c\20unsigned\20int\29
[asyncify] std::__2::basic_ifstream<char\2c\20std::__2::char_traits<char>>::open\28std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\2c\20unsigned\20int\29 can change the state due to std::__2::basic_filebuf<char\2c\20std::__2::char_traits<char>>::open\28std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\2c\20unsigned\20int\29
[asyncify] std::__2::basic_ofstream<char\2c\20std::__2::char_traits<char>>::open\28std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\2c\20unsigned\20int\29 can change the state due to std::__2::basic_filebuf<char\2c\20std::__2::char_traits<char>>::open\28std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\2c\20unsigned\20int\29
[asyncify] addmntent can change the state due to fseek
[asyncify] legalstub$StdioStream::size\28\29\20const can change the state due to StdioStream::size\28\29\20const
[asyncify] PosixIoStream::size\28\29\20const can change the state due to StdioStream::size\28\29\20const
[asyncify] non-virtual\20thunk\20to\20PosixIoStream::size\28\29\20const can change the state due to StdioStream::size\28\29\20const
[asyncify] legalstub$non-virtual\20thunk\20to\20StdioStream::size\28\29\20const can change the state due to non-virtual\20thunk\20to\20StdioStream::size\28\29\20const
[asyncify] legalstub$StdioStream::seek\28long\20long\2c\20int\29 can change the state due to StdioStream::seek\28long\20long\2c\20int\29
[asyncify] legalstub$non-virtual\20thunk\20to\20StdioStream::seek\28long\20long\2c\20int\29 can change the state due to non-virtual\20thunk\20to\20StdioStream::seek\28long\20long\2c\20int\29
[asyncify] legalstub$StdioStream::pos\28\29\20const can change the state due to StdioStream::pos\28\29\20const
[asyncify] legalstub$non-virtual\20thunk\20to\20StdioStream::pos\28\29\20const can change the state due to non-virtual\20thunk\20to\20StdioStream::pos\28\29\20const
[asyncify] getopt can change the state due to __getopt_msg
[asyncify] __getopt_long_core can change the state due to __getopt_msg
[asyncify] SDL_qsort can change the state due to qsort
[asyncify] parse_bracket can change the state due to qsort
[asyncify] nsvgRasterize can change the state due to qsort
[asyncify] verr can change the state due to vwarn
[asyncify] warn can change the state due to vwarn
[asyncify] verrx can change the state due to vwarnx
[asyncify] warnx can change the state due to vwarnx
[asyncify] herror can change the state due to fprintf
[asyncify] dprintf can change the state due to vdprintf
[asyncify] SDL_snprintf can change the state due to vsnprintf
[asyncify] SDL_vsnprintf can change the state due to vsnprintf
[asyncify] __dl_vseterr can change the state due to vsnprintf
[asyncify] snprintf can change the state due to vsnprintf
[asyncify] _vsyslog can change the state due to vsnprintf
[asyncify] vasprintf can change the state due to vsnprintf
[asyncify] vsprintf can change the state due to vsnprintf
[asyncify] std::__2::__fs::filesystem::detail::\28anonymous\20namespace\29::format_string_impl\28char\20const*\2c\20void*\29 can change the state due to vsnprintf
[asyncify] std::__2::__libcpp_snprintf_l\28char*\2c\20unsigned\20long\2c\20__locale_struct*\2c\20char\20const*\2c\20...\29 can change the state due to vsnprintf
[asyncify] std::__2::__fs::filesystem::detail::\28anonymous\20namespace\29::format_string_impl\28char\20const*\2c\20void*\29.1 can change the state due to vsnprintf
[asyncify] Base::usage\28char\20const*\2c\20...\29 can change the state due to vsnprintf
[asyncify] SDL_LogOutput can change the state due to fiprintf
[asyncify] set_quant_slots can change the state due to fiprintf
[asyncify] set_sample_factors can change the state due to fiprintf
[asyncify] std::__2::__libcpp_abort_debug_function\28std::__2::__libcpp_debug_info\20const&\29 can change the state due to fiprintf
[asyncify] void\20std::__2::\28anonymous\20namespace\29::throw_helper<std::out_of_range>\28std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\29 can change the state due to fiprintf
[asyncify] void\20std::__2::\28anonymous\20namespace\29::throw_helper<std::invalid_argument>\28std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\29 can change the state due to fiprintf
[asyncify] MT32Emu::ReportHandler::showLCDMessage\28char\20const*\29 can change the state due to iprintf
[asyncify] vsiprintf can change the state due to vsniprintf
[asyncify] TinyGL::GLContext::gl_print_matrix\28float\20const*\29 can change the state due to __small_fprintf
[asyncify] __small_vsprintf can change the state due to __small_vsnprintf
[asyncify] std::__2::__fs::filesystem::directory_iterator::directory_iterator\28std::__2::__fs::filesystem::path\20const&\2c\20std::__2::error_code*\2c\20std::__2::__fs::filesystem::directory_options\29 can change the state due to std::__2::shared_ptr<std::__2::__fs::filesystem::__dir_stream>::~shared_ptr\5babi:v15006\5d\28\29
[asyncify] std::__2::shared_ptr<std::__2::__fs::filesystem::__dir_stream>::operator=\5babi:v15006\5d\28std::__2::shared_ptr<std::__2::__fs::filesystem::__dir_stream>&&\29 can change the state due to std::__2::shared_ptr<std::__2::__fs::filesystem::__dir_stream>::~shared_ptr\5babi:v15006\5d\28\29
[asyncify] std::__2::shared_ptr<std::__2::__fs::filesystem::__dir_stream>::reset\5babi:v15006\5d\28\29 can change the state due to std::__2::shared_ptr<std::__2::__fs::filesystem::__dir_stream>::~shared_ptr\5babi:v15006\5d\28\29
[asyncify] std::__2::__fs::filesystem::directory_iterator::~directory_iterator\5babi:v15006\5d\28\29 can change the state due to std::__2::shared_ptr<std::__2::__fs::filesystem::__dir_stream>::~shared_ptr\5babi:v15006\5d\28\29
[asyncify] std::__2::__fs::filesystem::recursive_directory_iterator::recursive_directory_iterator\28std::__2::__fs::filesystem::path\20const&\2c\20std::__2::__fs::filesystem::directory_options\2c\20std::__2::error_code*\29 can change the state due to std::__2::shared_ptr<std::__2::__fs::filesystem::recursive_directory_iterator::__shared_imp>::~shared_ptr\5babi:v15006\5d\28\29
[asyncify] std::__2::shared_ptr<std::__2::__fs::filesystem::recursive_directory_iterator::__shared_imp>::operator=\5babi:v15006\5d\28std::__2::shared_ptr<std::__2::__fs::filesystem::recursive_directory_iterator::__shared_imp>&&\29 can change the state due to std::__2::shared_ptr<std::__2::__fs::filesystem::recursive_directory_iterator::__shared_imp>::~shared_ptr\5babi:v15006\5d\28\29
[asyncify] std::__2::shared_ptr<std::__2::__fs::filesystem::recursive_directory_iterator::__shared_imp>::reset\5babi:v15006\5d\28\29 can change the state due to std::__2::shared_ptr<std::__2::__fs::filesystem::recursive_directory_iterator::__shared_imp>::~shared_ptr\5babi:v15006\5d\28\29
[asyncify] std::__2::__fs::filesystem::filesystem_error::~filesystem_error\28\29 can change the state due to std::__2::shared_ptr<std::__2::__fs::filesystem::filesystem_error::_Storage>::~shared_ptr\5babi:v15006\5d\28\29
[asyncify] std::__2::unique_ptr<std::__2::__shared_count\2c\20std::__2::__release_shared_count>::~unique_ptr\5babi:v15006\5d\28\29 can change the state due to std::__2::unique_ptr<std::__2::__shared_count\2c\20std::__2::__release_shared_count>::reset\5babi:v15006\5d\28std::__2::__shared_count*\29
[asyncify] std::__2::locale::__imp::__imp\28unsigned\20long\29 can change the state due to void\20std::__2::locale::__imp::install<std::__2::collate<char>>\28std::__2::collate<char>*\29
[asyncify] std::__2::locale::__imp::__imp\28std::__2::locale::__imp\20const&\2c\20std::__2::locale::__imp\20const&\2c\20int\29 can change the state due to void\20std::__2::locale::__imp::install_from<std::__2::moneypunct<wchar_t\2c\20false>>\28std::__2::locale::__imp\20const&\29
[asyncify] std::__2::basic_streambuf<char\2c\20std::__2::char_traits<char>>::~basic_streambuf\28\29.1 can change the state due to std::__2::basic_streambuf<char\2c\20std::__2::char_traits<char>>::~basic_streambuf\28\29
[asyncify] std::__2::basic_stringbuf<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::~basic_stringbuf\28\29 can change the state due to std::__2::basic_streambuf<char\2c\20std::__2::char_traits<char>>::~basic_streambuf\28\29
[asyncify] std::__2::__stdinbuf<char>::~__stdinbuf\28\29 can change the state due to std::__2::basic_streambuf<char\2c\20std::__2::char_traits<char>>::~basic_streambuf\28\29
[asyncify] std::__2::__stdoutbuf<char>::~__stdoutbuf\28\29 can change the state due to std::__2::basic_streambuf<char\2c\20std::__2::char_traits<char>>::~basic_streambuf\28\29
[asyncify] std::__2::basic_streambuf<char\2c\20std::__2::char_traits<char>>::swap\28std::__2::basic_streambuf<char\2c\20std::__2::char_traits<char>>&\29 can change the state due to std::__2::enable_if<is_move_constructible<std::__2::locale>::value\20&&\20is_move_assignable<std::__2::locale>::value\2c\20void>::type\20std::__2::swap\5babi:v15006\5d<std::__2::locale>\28std::__2::locale&\2c\20std::__2::locale&\29
[asyncify] std::__2::basic_streambuf<wchar_t\2c\20std::__2::char_traits<wchar_t>>::swap\28std::__2::basic_streambuf<wchar_t\2c\20std::__2::char_traits<wchar_t>>&\29 can change the state due to std::__2::enable_if<is_move_constructible<std::__2::locale>::value\20&&\20is_move_assignable<std::__2::locale>::value\2c\20void>::type\20std::__2::swap\5babi:v15006\5d<std::__2::locale>\28std::__2::locale&\2c\20std::__2::locale&\29
[asyncify] std::__2::ios_base::swap\28std::__2::ios_base&\29 can change the state due to std::__2::enable_if<is_move_constructible<std::__2::locale>::value\20&&\20is_move_assignable<std::__2::locale>::value\2c\20void>::type\20std::__2::swap\5babi:v15006\5d<std::__2::locale>\28std::__2::locale&\2c\20std::__2::locale&\29
[asyncify] std::__2::basic_streambuf<wchar_t\2c\20std::__2::char_traits<wchar_t>>::~basic_streambuf\28\29.1 can change the state due to std::__2::basic_streambuf<wchar_t\2c\20std::__2::char_traits<wchar_t>>::~basic_streambuf\28\29
[asyncify] std::__2::__stdinbuf<wchar_t>::~__stdinbuf\28\29 can change the state due to std::__2::basic_streambuf<wchar_t\2c\20std::__2::char_traits<wchar_t>>::~basic_streambuf\28\29
[asyncify] std::__2::__stdoutbuf<wchar_t>::~__stdoutbuf\28\29 can change the state due to std::__2::basic_streambuf<wchar_t\2c\20std::__2::char_traits<wchar_t>>::~basic_streambuf\28\29
[asyncify] std::__2::num_put<char\2c\20std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>>::do_put\28std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::ios_base&\2c\20char\2c\20long\29\20const can change the state due to std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>\20std::__2::num_put<char\2c\20std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>>::__do_put_integral\5babi:v15006\5d<long>\28std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::ios_base&\2c\20char\2c\20long\2c\20char\20const*\29\20const
[asyncify] std::__2::num_put<char\2c\20std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>>::do_put\28std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::ios_base&\2c\20char\2c\20long\20long\29\20const can change the state due to std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>\20std::__2::num_put<char\2c\20std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>>::__do_put_integral\5babi:v15006\5d<long\20long>\28std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::ios_base&\2c\20char\2c\20long\20long\2c\20char\20const*\29\20const
[asyncify] legalstub$std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>\20std::__2::num_put<char\2c\20std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>>::__do_put_integral\5babi:v15006\5d<long\20long>\28std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::ios_base&\2c\20char\2c\20long\20long\2c\20char\20const*\29\20const can change the state due to std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>\20std::__2::num_put<char\2c\20std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>>::__do_put_integral\5babi:v15006\5d<long\20long>\28std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::ios_base&\2c\20char\2c\20long\20long\2c\20char\20const*\29\20const
[asyncify] std::__2::num_put<char\2c\20std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>>::do_put\28std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::ios_base&\2c\20char\2c\20unsigned\20long\29\20const can change the state due to std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>\20std::__2::num_put<char\2c\20std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>>::__do_put_integral\5babi:v15006\5d<unsigned\20long>\28std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::ios_base&\2c\20char\2c\20unsigned\20long\2c\20char\20const*\29\20const
[asyncify] std::__2::num_put<char\2c\20std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>>::do_put\28std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::ios_base&\2c\20char\2c\20unsigned\20long\20long\29\20const can change the state due to std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>\20std::__2::num_put<char\2c\20std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>>::__do_put_integral\5babi:v15006\5d<unsigned\20long\20long>\28std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::ios_base&\2c\20char\2c\20unsigned\20long\20long\2c\20char\20const*\29\20const
[asyncify] legalstub$std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>\20std::__2::num_put<char\2c\20std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>>::__do_put_integral\5babi:v15006\5d<unsigned\20long\20long>\28std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::ios_base&\2c\20char\2c\20unsigned\20long\20long\2c\20char\20const*\29\20const can change the state due to std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>\20std::__2::num_put<char\2c\20std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>>::__do_put_integral\5babi:v15006\5d<unsigned\20long\20long>\28std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::ios_base&\2c\20char\2c\20unsigned\20long\20long\2c\20char\20const*\29\20const
[asyncify] std::__2::num_put<wchar_t\2c\20std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>::do_put\28std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::ios_base&\2c\20wchar_t\2c\20long\29\20const can change the state due to std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\20std::__2::num_put<wchar_t\2c\20std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>::__do_put_integral\5babi:v15006\5d<long>\28std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::ios_base&\2c\20wchar_t\2c\20long\2c\20char\20const*\29\20const
[asyncify] std::__2::num_put<wchar_t\2c\20std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>::do_put\28std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::ios_base&\2c\20wchar_t\2c\20long\20long\29\20const can change the state due to std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\20std::__2::num_put<wchar_t\2c\20std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>::__do_put_integral\5babi:v15006\5d<long\20long>\28std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::ios_base&\2c\20wchar_t\2c\20long\20long\2c\20char\20const*\29\20const
[asyncify] legalstub$std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\20std::__2::num_put<wchar_t\2c\20std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>::__do_put_integral\5babi:v15006\5d<long\20long>\28std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::ios_base&\2c\20wchar_t\2c\20long\20long\2c\20char\20const*\29\20const can change the state due to std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\20std::__2::num_put<wchar_t\2c\20std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>::__do_put_integral\5babi:v15006\5d<long\20long>\28std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::ios_base&\2c\20wchar_t\2c\20long\20long\2c\20char\20const*\29\20const
[asyncify] std::__2::num_put<wchar_t\2c\20std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>::do_put\28std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::ios_base&\2c\20wchar_t\2c\20unsigned\20long\29\20const can change the state due to std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\20std::__2::num_put<wchar_t\2c\20std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>::__do_put_integral\5babi:v15006\5d<unsigned\20long>\28std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::ios_base&\2c\20wchar_t\2c\20unsigned\20long\2c\20char\20const*\29\20const
[asyncify] std::__2::num_put<wchar_t\2c\20std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>::do_put\28std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::ios_base&\2c\20wchar_t\2c\20unsigned\20long\20long\29\20const can change the state due to std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\20std::__2::num_put<wchar_t\2c\20std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>::__do_put_integral\5babi:v15006\5d<unsigned\20long\20long>\28std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::ios_base&\2c\20wchar_t\2c\20unsigned\20long\20long\2c\20char\20const*\29\20const
[asyncify] legalstub$std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\20std::__2::num_put<wchar_t\2c\20std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>::__do_put_integral\5babi:v15006\5d<unsigned\20long\20long>\28std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::ios_base&\2c\20wchar_t\2c\20unsigned\20long\20long\2c\20char\20const*\29\20const can change the state due to std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\20std::__2::num_put<wchar_t\2c\20std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>::__do_put_integral\5babi:v15006\5d<unsigned\20long\20long>\28std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::ios_base&\2c\20wchar_t\2c\20unsigned\20long\20long\2c\20char\20const*\29\20const
[asyncify] std::__2::unique_ptr<std::__2::locale::facet\2c\20std::__2::\28anonymous\20namespace\29::release>::~unique_ptr\5babi:v15006\5d\28\29 can change the state due to std::__2::unique_ptr<std::__2::locale::facet\2c\20std::__2::\28anonymous\20namespace\29::release>::reset\5babi:v15006\5d\28std::__2::locale::facet*\29
[asyncify] std::__2::__thread_specific_ptr<std::__2::__thread_struct>::__at_thread_exit\28void*\29 can change the state due to std::__2::__thread_struct::~__thread_struct\28\29
[asyncify] __cxx_global_array_dtor.1.1 can change the state due to std::__2::DoIOSInit::~DoIOSInit\28\29
[asyncify] std::__2::num_get<char\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>>::do_get\28std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::ios_base&\2c\20unsigned\20int&\2c\20long&\29\20const can change the state due to std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\20std::__2::num_get<char\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>>::__do_get_signed<long>\28std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::ios_base&\2c\20unsigned\20int&\2c\20long&\29\20const
[asyncify] std::__2::num_get<char\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>>::do_get\28std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::ios_base&\2c\20unsigned\20int&\2c\20long\20long&\29\20const can change the state due to std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\20std::__2::num_get<char\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>>::__do_get_signed<long\20long>\28std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::ios_base&\2c\20unsigned\20int&\2c\20long\20long&\29\20const
[asyncify] std::__2::num_get<char\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>>::do_get\28std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::ios_base&\2c\20unsigned\20int&\2c\20unsigned\20short&\29\20const can change the state due to std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\20std::__2::num_get<char\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>>::__do_get_unsigned<unsigned\20short>\28std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::ios_base&\2c\20unsigned\20int&\2c\20unsigned\20short&\29\20const
[asyncify] std::__2::num_get<char\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>>::do_get\28std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::ios_base&\2c\20unsigned\20int&\2c\20unsigned\20int&\29\20const can change the state due to std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\20std::__2::num_get<char\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>>::__do_get_unsigned<unsigned\20int>\28std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::ios_base&\2c\20unsigned\20int&\2c\20unsigned\20int&\29\20const
[asyncify] std::__2::num_get<char\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>>::do_get\28std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::ios_base&\2c\20unsigned\20int&\2c\20unsigned\20long&\29\20const can change the state due to std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\20std::__2::num_get<char\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>>::__do_get_unsigned<unsigned\20long>\28std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::ios_base&\2c\20unsigned\20int&\2c\20unsigned\20long&\29\20const
[asyncify] std::__2::num_get<char\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>>::do_get\28std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::ios_base&\2c\20unsigned\20int&\2c\20unsigned\20long\20long&\29\20const can change the state due to std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\20std::__2::num_get<char\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>>::__do_get_unsigned<unsigned\20long\20long>\28std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::ios_base&\2c\20unsigned\20int&\2c\20unsigned\20long\20long&\29\20const
[asyncify] std::__2::num_get<char\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>>::do_get\28std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::ios_base&\2c\20unsigned\20int&\2c\20float&\29\20const can change the state due to std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\20std::__2::num_get<char\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>>::__do_get_floating_point<float>\28std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::ios_base&\2c\20unsigned\20int&\2c\20float&\29\20const
[asyncify] std::__2::num_get<char\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>>::do_get\28std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::ios_base&\2c\20unsigned\20int&\2c\20double&\29\20const can change the state due to std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\20std::__2::num_get<char\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>>::__do_get_floating_point<double>\28std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::ios_base&\2c\20unsigned\20int&\2c\20double&\29\20const
[asyncify] std::__2::num_get<char\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>>::do_get\28std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::ios_base&\2c\20unsigned\20int&\2c\20long\20double&\29\20const can change the state due to std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\20std::__2::num_get<char\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>>::__do_get_floating_point<long\20double>\28std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::ios_base&\2c\20unsigned\20int&\2c\20long\20double&\29\20const
[asyncify] std::__2::pair<std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>>\20std::__2::__copy\5babi:v15006\5d<std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\200>\28std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>\29 can change the state due to std::__2::pair<std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>>\20std::__2::__copy_impl\5babi:v15006\5d<std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>>\28std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>\29
[asyncify] bool\20std::__2::operator==\5babi:v15006\5d<char\2c\20std::__2::char_traits<char>>\28std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\20const&\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\20const&\29 can change the state due to std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>::equal\5babi:v15006\5d\28std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\20const&\29\20const
[asyncify] std::__2::pair<char*\2c\20std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>>\20std::__2::__copy\5babi:v15006\5d<char*\2c\20char*\2c\20std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\200>\28char*\2c\20char*\2c\20std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>\29 can change the state due to std::__2::pair<char*\2c\20std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>>\20std::__2::__copy_impl\5babi:v15006\5d<char*\2c\20char*\2c\20std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>>\28char*\2c\20char*\2c\20std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>\29
[asyncify] std::__2::__time_get_storage<wchar_t>::__time_get_storage\28std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\29 can change the state due to std::__2::__time_get_storage<wchar_t>::init\28std::__2::ctype<wchar_t>\20const&\29
[asyncify] std::__2::__time_get_storage<wchar_t>::__time_get_storage\28char\20const*\29 can change the state due to std::__2::__time_get_storage<wchar_t>::init\28std::__2::ctype<wchar_t>\20const&\29
[asyncify] std::__2::num_get<wchar_t\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>::do_get\28std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::ios_base&\2c\20unsigned\20int&\2c\20long&\29\20const can change the state due to std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\20std::__2::num_get<wchar_t\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>::__do_get_signed<long>\28std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::ios_base&\2c\20unsigned\20int&\2c\20long&\29\20const
[asyncify] std::__2::num_get<wchar_t\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>::do_get\28std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::ios_base&\2c\20unsigned\20int&\2c\20long\20long&\29\20const can change the state due to std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\20std::__2::num_get<wchar_t\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>::__do_get_signed<long\20long>\28std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::ios_base&\2c\20unsigned\20int&\2c\20long\20long&\29\20const
[asyncify] std::__2::num_get<wchar_t\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>::do_get\28std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::ios_base&\2c\20unsigned\20int&\2c\20unsigned\20short&\29\20const can change the state due to std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\20std::__2::num_get<wchar_t\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>::__do_get_unsigned<unsigned\20short>\28std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::ios_base&\2c\20unsigned\20int&\2c\20unsigned\20short&\29\20const
[asyncify] std::__2::num_get<wchar_t\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>::do_get\28std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::ios_base&\2c\20unsigned\20int&\2c\20unsigned\20int&\29\20const can change the state due to std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\20std::__2::num_get<wchar_t\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>::__do_get_unsigned<unsigned\20int>\28std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::ios_base&\2c\20unsigned\20int&\2c\20unsigned\20int&\29\20const
[asyncify] std::__2::num_get<wchar_t\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>::do_get\28std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::ios_base&\2c\20unsigned\20int&\2c\20unsigned\20long&\29\20const can change the state due to std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\20std::__2::num_get<wchar_t\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>::__do_get_unsigned<unsigned\20long>\28std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::ios_base&\2c\20unsigned\20int&\2c\20unsigned\20long&\29\20const
[asyncify] std::__2::num_get<wchar_t\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>::do_get\28std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::ios_base&\2c\20unsigned\20int&\2c\20unsigned\20long\20long&\29\20const can change the state due to std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\20std::__2::num_get<wchar_t\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>::__do_get_unsigned<unsigned\20long\20long>\28std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::ios_base&\2c\20unsigned\20int&\2c\20unsigned\20long\20long&\29\20const
[asyncify] std::__2::num_get<wchar_t\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>::do_get\28std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::ios_base&\2c\20unsigned\20int&\2c\20float&\29\20const can change the state due to std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\20std::__2::num_get<wchar_t\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>::__do_get_floating_point<float>\28std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::ios_base&\2c\20unsigned\20int&\2c\20float&\29\20const
[asyncify] std::__2::num_get<wchar_t\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>::do_get\28std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::ios_base&\2c\20unsigned\20int&\2c\20double&\29\20const can change the state due to std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\20std::__2::num_get<wchar_t\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>::__do_get_floating_point<double>\28std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::ios_base&\2c\20unsigned\20int&\2c\20double&\29\20const
[asyncify] std::__2::num_get<wchar_t\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>::do_get\28std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::ios_base&\2c\20unsigned\20int&\2c\20long\20double&\29\20const can change the state due to std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\20std::__2::num_get<wchar_t\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>::__do_get_floating_point<long\20double>\28std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::ios_base&\2c\20unsigned\20int&\2c\20long\20double&\29\20const
[asyncify] bool\20std::__2::operator==\5babi:v15006\5d<wchar_t\2c\20std::__2::char_traits<wchar_t>>\28std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\20const&\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\20const&\29 can change the state due to std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>::equal\5babi:v15006\5d\28std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\20const&\29\20const
[asyncify] std::__2::pair<wchar_t*\2c\20std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>\20std::__2::__copy\5babi:v15006\5d<wchar_t*\2c\20wchar_t*\2c\20std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\200>\28wchar_t*\2c\20wchar_t*\2c\20std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\29 can change the state due to std::__2::pair<wchar_t*\2c\20std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>\20std::__2::__copy_impl\5babi:v15006\5d<wchar_t*\2c\20wchar_t*\2c\20std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>\28wchar_t*\2c\20wchar_t*\2c\20std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\29
[asyncify] std::__2::__fs::filesystem::__copy_file\28std::__2::__fs::filesystem::path\20const&\2c\20std::__2::__fs::filesystem::path\20const&\2c\20std::__2::__fs::filesystem::copy_options\2c\20std::__2::error_code*\29 can change the state due to std::__2::__fs::filesystem::detail::\28anonymous\20namespace\29::copy_file_impl\28std::__2::__fs::filesystem::detail::\28anonymous\20namespace\29::FileDescriptor&\2c\20std::__2::__fs::filesystem::detail::\28anonymous\20namespace\29::FileDescriptor&\2c\20std::__2::error_code&\29
[asyncify] std::__2::basic_ifstream<char\2c\20std::__2::char_traits<char>>::~basic_ifstream\28\29 can change the state due to std::__2::basic_ifstream<char\2c\20std::__2::char_traits<char>>::~basic_ifstream\28\29.1
[asyncify] std::__2::basic_ofstream<char\2c\20std::__2::char_traits<char>>::~basic_ofstream\28\29 can change the state due to std::__2::basic_ofstream<char\2c\20std::__2::char_traits<char>>::~basic_ofstream\28\29.1
[asyncify] std::__2::basic_ios<char\2c\20std::__2::char_traits<char>>::~basic_ios\28\29.1 can change the state due to std::__2::basic_ios<char\2c\20std::__2::char_traits<char>>::~basic_ios\28\29
[asyncify] std::__2::basic_istream<char\2c\20std::__2::char_traits<char>>::~basic_istream\28\29.1 can change the state due to std::__2::basic_ios<char\2c\20std::__2::char_traits<char>>::~basic_ios\28\29
[asyncify] std::__2::basic_ostream<char\2c\20std::__2::char_traits<char>>::~basic_ostream\28\29.1 can change the state due to std::__2::basic_ios<char\2c\20std::__2::char_traits<char>>::~basic_ios\28\29
[asyncify] std::__2::basic_iostream<char\2c\20std::__2::char_traits<char>>::~basic_iostream\28\29.1 can change the state due to std::__2::basic_ios<char\2c\20std::__2::char_traits<char>>::~basic_ios\28\29
[asyncify] std::__2::basic_stringstream<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::~basic_stringstream\28\29 can change the state due to std::__2::basic_ios<char\2c\20std::__2::char_traits<char>>::~basic_ios\28\29
[asyncify] std::__2::basic_ostringstream<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::~basic_ostringstream\28\29 can change the state due to std::__2::basic_ios<char\2c\20std::__2::char_traits<char>>::~basic_ios\28\29
[asyncify] std::__2::basic_istringstream<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::~basic_istringstream\28\29 can change the state due to std::__2::basic_ios<char\2c\20std::__2::char_traits<char>>::~basic_ios\28\29
[asyncify] std::__2::basic_ios<wchar_t\2c\20std::__2::char_traits<wchar_t>>::~basic_ios\28\29.1 can change the state due to std::__2::basic_ios<wchar_t\2c\20std::__2::char_traits<wchar_t>>::~basic_ios\28\29
[asyncify] std::__2::basic_istream<wchar_t\2c\20std::__2::char_traits<wchar_t>>::~basic_istream\28\29.1 can change the state due to std::__2::basic_ios<wchar_t\2c\20std::__2::char_traits<wchar_t>>::~basic_ios\28\29
[asyncify] std::__2::basic_ostream<wchar_t\2c\20std::__2::char_traits<wchar_t>>::~basic_ostream\28\29.1 can change the state due to std::__2::basic_ios<wchar_t\2c\20std::__2::char_traits<wchar_t>>::~basic_ios\28\29
[asyncify] __cxx_global_var_init can change the state due to std::__2::ios_base::Init::Init\28\29
[asyncify] std::__2::__time_get_storage<char>::init\28std::__2::ctype<char>\20const&\29 can change the state due to std::__2::__time_get_storage<char>::__analyze\28char\2c\20std::__2::ctype<char>\20const&\29
[asyncify] std::__2::__fs::filesystem::__weakly_canonical\28std::__2::__fs::filesystem::path\20const&\2c\20std::__2::error_code*\29 can change the state due to std::__2::__fs::filesystem::__canonical\28std::__2::__fs::filesystem::path\20const&\2c\20std::__2::error_code*\29
[asyncify] legalstub$std::__2::num_put<char\2c\20std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>>::do_put\28std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::ios_base&\2c\20char\2c\20long\20double\29\20const can change the state due to std::__2::num_put<char\2c\20std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>>::do_put\28std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::ios_base&\2c\20char\2c\20long\20double\29\20const
[asyncify] legalstub$std::__2::num_put<wchar_t\2c\20std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>::do_put\28std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::ios_base&\2c\20wchar_t\2c\20long\20double\29\20const can change the state due to std::__2::num_put<wchar_t\2c\20std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>::do_put\28std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::ios_base&\2c\20wchar_t\2c\20long\20double\29\20const
[asyncify] std::__2::__call_once_param<std::__2::tuple<std::__2::\28anonymous\20namespace\29::__fake_bind&&>>::operator\28\29\5babi:v15006\5d\28\29 can change the state due to void\20std::__2::__call_once_param<std::__2::tuple<std::__2::\28anonymous\20namespace\29::__fake_bind&&>>::__execute\5babi:v15006\5d<>\28std::__2::__tuple_indices<>\29
[asyncify] std::__2::locale::use_facet\28std::__2::locale::id&\29\20const can change the state due to std::__2::locale::id::__get\28\29
[asyncify] std::__2::locale::has_facet\28std::__2::locale::id&\29\20const can change the state due to std::__2::locale::id::__get\28\29
[asyncify] std::__2::allocator<char>::allocate\5babi:v15006\5d\28unsigned\20long\29 can change the state due to std::__2::__libcpp_allocate\5babi:v15006\5d\28unsigned\20long\2c\20unsigned\20long\29
[asyncify] std::__2::allocator<std::__2::__shared_ptr_emplace<std::__2::__fs::filesystem::__dir_stream\2c\20std::__2::allocator<std::__2::__fs::filesystem::__dir_stream>>>::allocate\5babi:v15006\5d\28unsigned\20long\29 can change the state due to std::__2::__libcpp_allocate\5babi:v15006\5d\28unsigned\20long\2c\20unsigned\20long\29
[asyncify] std::__2::allocator<std::__2::__shared_ptr_emplace<std::__2::__fs::filesystem::recursive_directory_iterator::__shared_imp\2c\20std::__2::allocator<std::__2::__fs::filesystem::recursive_directory_iterator::__shared_imp>>>::allocate\5babi:v15006\5d\28unsigned\20long\29 can change the state due to std::__2::__libcpp_allocate\5babi:v15006\5d\28unsigned\20long\2c\20unsigned\20long\29
[asyncify] std::__2::allocator<std::__2::__fs::filesystem::__dir_stream>::allocate\5babi:v15006\5d\28unsigned\20long\29 can change the state due to std::__2::__libcpp_allocate\5babi:v15006\5d\28unsigned\20long\2c\20unsigned\20long\29
[asyncify] std::__2::allocator<std::__2::__fs::filesystem::__dir_stream*>::allocate\5babi:v15006\5d\28unsigned\20long\29 can change the state due to std::__2::__libcpp_allocate\5babi:v15006\5d\28unsigned\20long\2c\20unsigned\20long\29
[asyncify] std::__2::allocator<wchar_t>::allocate\5babi:v15006\5d\28unsigned\20long\29 can change the state due to std::__2::__libcpp_allocate\5babi:v15006\5d\28unsigned\20long\2c\20unsigned\20long\29
[asyncify] std::__2::allocator<std::__2::locale::facet*>::allocate\5babi:v15006\5d\28unsigned\20long\29 can change the state due to std::__2::__libcpp_allocate\5babi:v15006\5d\28unsigned\20long\2c\20unsigned\20long\29
[asyncify] std::experimental::fundamentals_v1::pmr::__new_delete_memory_resource_imp::do_allocate\28unsigned\20long\2c\20unsigned\20long\29 can change the state due to std::__2::__libcpp_allocate\5babi:v15006\5d\28unsigned\20long\2c\20unsigned\20long\29
[asyncify] std::__2::allocator<std::__2::basic_string_view<char\2c\20std::__2::char_traits<char>>>::allocate\5babi:v15006\5d\28unsigned\20long\29 can change the state due to std::__2::__libcpp_allocate\5babi:v15006\5d\28unsigned\20long\2c\20unsigned\20long\29
[asyncify] std::__2::allocator<std::__2::pair<std::__2::basic_string_view<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::__fs::filesystem::PathPartKind>>::allocate\5babi:v15006\5d\28unsigned\20long\29 can change the state due to std::__2::__libcpp_allocate\5babi:v15006\5d\28unsigned\20long\2c\20unsigned\20long\29
[asyncify] std::__2::allocator<unsigned\20long>::allocate\5babi:v15006\5d\28unsigned\20long\29 can change the state due to std::__2::__libcpp_allocate\5babi:v15006\5d\28unsigned\20long\2c\20unsigned\20long\29
[asyncify] Common::errorToString\28Common::ErrorCode\29 can change the state due to Common::BaseString<char>::BaseString\28char\20const*\29
[asyncify] Common::MacResManager::getResName\28unsigned\20int\2c\20unsigned\20short\29\20const can change the state due to Common::BaseString<char>::BaseString\28char\20const*\29
[asyncify] Common::String::substr\28unsigned\20long\2c\20unsigned\20long\29\20const can change the state due to Common::BaseString<char>::BaseString\28char\20const*\29
[asyncify] Common::operator+\28char\20const*\2c\20Common::String\20const&\29 can change the state due to Common::BaseString<char>::BaseString\28char\20const*\29
[asyncify] OSystem::getDefaultConfigFileName\28\29 can change the state due to Common::BaseString<char>::BaseString\28char\20const*\29
[asyncify] OSystem::getSystemLanguage\28\29\20const can change the state due to Common::BaseString<char>::BaseString\28char\20const*\29
[asyncify] Graphics::Font::getFontName\28\29\20const can change the state due to Common::BaseString<char>::BaseString\28char\20const*\29
[asyncify] Graphics::TTFFont::getFontName\28\29\20const can change the state due to Common::BaseString<char>::BaseString\28char\20const*\29
[asyncify] Graphics::windowTypeName\28unsigned\20char\29 can change the state due to Common::BaseString<char>::BaseString\28char\20const*\29
[asyncify] Graphics::Renderer::getTypeCode\28Graphics::RendererType\29 can change the state due to Common::BaseString<char>::BaseString\28char\20const*\29
[asyncify] SdlWindow::SdlWindow\28\29 can change the state due to Common::BaseString<char>::BaseString\28char\20const*\29
[asyncify] Common::String::String\28char\20const*\29 can change the state due to Common::BaseString<char>::BaseString\28char\20const*\29
[asyncify] QualifiedGameDescriptor::QualifiedGameDescriptor\28char\20const*\2c\20PlainGameDescriptor\20const&\29 can change the state due to Common::BaseString<char>::BaseString\28char\20const*\29
[asyncify] Glk::GlkDetectedGame::getGlkGUIOptions\28\29 can change the state due to Common::BaseString<char>::BaseString\28char\20const*\29
[asyncify] Scumm::ScummDiskImage::ScummDiskImage\28char\20const*\2c\20char\20const*\2c\20Scumm::GameSettings\29 can change the state due to Common::BaseString<char>::BaseString\28char\20const*\29
[asyncify] Scumm::ScummDiskImage::ScummDiskImage\28char\20const*\2c\20char\20const*\2c\20Scumm::GameSettings\29.1 can change the state due to Common::BaseString<char>::BaseString\28char\20const*\29
[asyncify] Common::StringTokenizer::nextToken\28\29 can change the state due to Common::BaseString<char>::BaseString\28char\20const*\2c\20unsigned\20int\29
[asyncify] Common::lastPathComponent\28Common::String\20const&\2c\20char\29 can change the state due to Common::BaseString<char>::BaseString\28char\20const*\2c\20char\20const*\29
[asyncify] Common::firstPathComponents\28Common::String\20const&\2c\20char\29 can change the state due to Common::BaseString<char>::BaseString\28char\20const*\2c\20char\20const*\29
[asyncify] Common::U32String::substr\28unsigned\20long\2c\20unsigned\20long\29\20const can change the state due to Common::BaseString<char32_t>::BaseString\28char32_t\20const*\29
[asyncify] Common::U32StringTokenizer::nextToken\28\29 can change the state due to Common::BaseString<char32_t>::BaseString\28char32_t\20const*\2c\20char32_t\20const*\29
[asyncify] Common::ConfigManager::ConfigManager\28\29 can change the state due to Common::ConfigManager::Domain::Domain\28\29
[asyncify] Common::HashMap<unsigned\20short\2c\20Common::SharedPtr<Common::ClickteamInstaller::ClickteamTag>\2c\20Common::Hash<unsigned\20short>\2c\20Common::EqualTo<unsigned\20short>>::lookupAndCreateIfMissing\28unsigned\20short\20const&\29 can change the state due to Common::HashMap<unsigned\20short\2c\20Common::SharedPtr<Common::ClickteamInstaller::ClickteamTag>\2c\20Common::Hash<unsigned\20short>\2c\20Common::EqualTo<unsigned\20short>>::expandStorage\28unsigned\20int\29
[asyncify] Common::NEResources::NEResources\28\29 can change the state due to Common::HashMap<Common::WinResourceID\2c\20Common::HashMap<Common::WinResourceID\2c\20Common::String\2c\20Common::WinResourceID_Hash\2c\20Common::WinResourceID_EqualTo>\2c\20Common::WinResourceID_Hash\2c\20Common::WinResourceID_EqualTo>::HashMap\28\29
[asyncify] Common::HashMap<int\2c\20Video::MPEGPSDecoder::MPEGStream*\2c\20Common::Hash<int>\2c\20Common::EqualTo<int>>::lookupAndCreateIfMissing\28int\20const&\29 can change the state due to Common::HashMap<int\2c\20Video::MPEGPSDecoder::MPEGStream*\2c\20Common::Hash<int>\2c\20Common::EqualTo<int>>::expandStorage\28unsigned\20int\29
[asyncify] Common::HashMap<unsigned\20short\2c\20Image::CDToonsBlock\2c\20Common::Hash<unsigned\20short>\2c\20Common::EqualTo<unsigned\20short>>::lookupAndCreateIfMissing\28unsigned\20short\20const&\29 can change the state due to Common::HashMap<unsigned\20short\2c\20Image::CDToonsBlock\2c\20Common::Hash<unsigned\20short>\2c\20Common::EqualTo<unsigned\20short>>::expandStorage\28unsigned\20int\29
[asyncify] Common::HashMap<unsigned\20short\2c\20short\2c\20Common::Hash<unsigned\20short>\2c\20Common::EqualTo<unsigned\20short>>::lookupAndCreateIfMissing\28unsigned\20short\20const&\29 can change the state due to Common::HashMap<unsigned\20short\2c\20short\2c\20Common::Hash<unsigned\20short>\2c\20Common::EqualTo<unsigned\20short>>::expandStorage\28unsigned\20int\29
[asyncify] Common::HashMap<unsigned\20int\2c\20Graphics::TTFFont::Glyph\2c\20Common::Hash<unsigned\20int>\2c\20Common::EqualTo<unsigned\20int>>::lookupAndCreateIfMissing\28unsigned\20int\20const&\29 can change the state due to Common::HashMap<unsigned\20int\2c\20Graphics::TTFFont::Glyph\2c\20Common::Hash<unsigned\20int>\2c\20Common::EqualTo<unsigned\20int>>::expandStorage\28unsigned\20int\29
[asyncify] HQScaler::HQScaler\28Graphics::PixelFormat\20const&\29 can change the state due to HQScaler::initLUT\28Graphics::PixelFormat\29
[asyncify] Common::HashMap<unsigned\20int\2c\20MidiParser_QT::PartStatus\2c\20Common::Hash<unsigned\20int>\2c\20Common::EqualTo<unsigned\20int>>::lookupAndCreateIfMissing\28unsigned\20int\20const&\29 can change the state due to Common::HashMap<unsigned\20int\2c\20MidiParser_QT::PartStatus\2c\20Common::Hash<unsigned\20int>\2c\20Common::EqualTo<unsigned\20int>>::expandStorage\28unsigned\20int\29
[asyncify] Common::HashMap<unsigned\20int\2c\20unsigned\20char\2c\20Common::Hash<unsigned\20int>\2c\20Common::EqualTo<unsigned\20int>>::lookupAndCreateIfMissing\28unsigned\20int\20const&\29 can change the state due to Common::HashMap<unsigned\20int\2c\20unsigned\20char\2c\20Common::Hash<unsigned\20int>\2c\20Common::EqualTo<unsigned\20int>>::expandStorage\28unsigned\20int\29
[asyncify] Modules::ModXmS3mStream::calculateDuration\28\29 can change the state due to Modules::ModXmS3mStream::setSequencePos\28int\29
[asyncify] Modules::ModXmS3mStream::seek\28int\29 can change the state due to Modules::ModXmS3mStream::setSequencePos\28int\29
[asyncify] Modules::ModXmS3mStream::rewind\28\29 can change the state due to Modules::ModXmS3mStream::setSequencePos\28int\29
[asyncify] virtual\20thunk\20to\20Modules::ModXmS3mStream::readBuffer\28short*\2c\20int\29 can change the state due to Modules::ModXmS3mStream::readBuffer\28short*\2c\20int\29
[asyncify] SRCTools::FIRResampler::FIRResampler\28unsigned\20int\2c\20double\2c\20float\20const*\2c\20unsigned\20int\29 can change the state due to SRCTools::FIRResampler::Constants::Constants\28unsigned\20int\2c\20double\2c\20float\20const*\2c\20unsigned\20int\29
[asyncify] SRCTools::IIRResampler::IIRResampler\28SRCTools::IIRResampler::Quality\29 can change the state due to SRCTools::IIRResampler::Constants::Constants\28unsigned\20int\2c\20float\2c\20SRCTools::IIRSection\20const*\2c\20SRCTools::IIRResampler::Quality\29
[asyncify] SRCTools::IIRResampler::IIRResampler\28unsigned\20int\2c\20float\2c\20SRCTools::IIRSection\20const*\29 can change the state due to SRCTools::IIRResampler::Constants::Constants\28unsigned\20int\2c\20float\2c\20SRCTools::IIRSection\20const*\2c\20SRCTools::IIRResampler::Quality\29
[asyncify] SRCTools::IIR2xInterpolator::IIR2xInterpolator\28SRCTools::IIRResampler::Quality\29 can change the state due to SRCTools::IIRResampler::Constants::Constants\28unsigned\20int\2c\20float\2c\20SRCTools::IIRSection\20const*\2c\20SRCTools::IIRResampler::Quality\29
[asyncify] SRCTools::IIR2xInterpolator::IIR2xInterpolator\28unsigned\20int\2c\20float\2c\20SRCTools::IIRSection\20const*\29 can change the state due to SRCTools::IIRResampler::Constants::Constants\28unsigned\20int\2c\20float\2c\20SRCTools::IIRSection\20const*\2c\20SRCTools::IIRResampler::Quality\29
[asyncify] SRCTools::IIR2xDecimator::IIR2xDecimator\28SRCTools::IIRResampler::Quality\29 can change the state due to SRCTools::IIRResampler::Constants::Constants\28unsigned\20int\2c\20float\2c\20SRCTools::IIRSection\20const*\2c\20SRCTools::IIRResampler::Quality\29
[asyncify] SRCTools::IIR2xDecimator::IIR2xDecimator\28unsigned\20int\2c\20float\2c\20SRCTools::IIRSection\20const*\29 can change the state due to SRCTools::IIRResampler::Constants::Constants\28unsigned\20int\2c\20float\2c\20SRCTools::IIRSection\20const*\2c\20SRCTools::IIRResampler::Quality\29
[asyncify] std::__2::__fs::filesystem::__do_absolute\28std::__2::__fs::filesystem::path\20const&\2c\20std::__2::__fs::filesystem::path*\2c\20std::__2::error_code*\29 can change the state due to std::__2::__fs::filesystem::__current_path\28std::__2::error_code*\29
[asyncify] Common::HashMap<int\2c\20Graphics::ManagedSurface\20const*\2c\20Common::Hash<int>\2c\20Common::EqualTo<int>>::lookupAndCreateIfMissing\28int\20const&\29 can change the state due to Common::HashMap<int\2c\20Graphics::ManagedSurface\20const*\2c\20Common::Hash<int>\2c\20Common::EqualTo<int>>::expandStorage\28unsigned\20int\29
[asyncify] Common::HashMap<int\2c\20Common::Array<int>\2c\20Common::Hash<int>\2c\20Common::EqualTo<int>>::lookupAndCreateIfMissing\28int\20const&\29 can change the state due to Common::HashMap<int\2c\20Common::Array<int>\2c\20Common::Hash<int>\2c\20Common::EqualTo<int>>::expandStorage\28unsigned\20int\29
[asyncify] Common::HashMap<Common::Keymap*\2c\20Common::RemapWidget::KeymapTitleRow\2c\20Common::Hash<Common::Keymap*>\2c\20Common::EqualTo<Common::Keymap*>>::lookupAndCreateIfMissing\28Common::Keymap*\20const&\29 can change the state due to Common::HashMap<Common::Keymap*\2c\20Common::RemapWidget::KeymapTitleRow\2c\20Common::Hash<Common::Keymap*>\2c\20Common::EqualTo<Common::Keymap*>>::expandStorage\28unsigned\20int\29
[asyncify] Common::HashMap<int\2c\20unsigned\20char\2c\20Common::Hash<int>\2c\20Common::EqualTo<int>>::lookupAndCreateIfMissing\28int\20const&\29 can change the state due to Common::HashMap<int\2c\20unsigned\20char\2c\20Common::Hash<int>\2c\20Common::EqualTo<int>>::expandStorage\28unsigned\20int\29
[asyncify] AGSMetaEngineDetection::AGSMetaEngineDetection\28\29 can change the state due to AdvancedMetaEngineDetection::AdvancedMetaEngineDetection\28void\20const*\2c\20unsigned\20int\2c\20PlainGameDescriptor\20const*\29
[asyncify] BladeRunnerMetaEngineDetection::BladeRunnerMetaEngineDetection\28\29 can change the state due to AdvancedMetaEngineDetection::AdvancedMetaEngineDetection\28void\20const*\2c\20unsigned\20int\2c\20PlainGameDescriptor\20const*\29
[asyncify] GobMetaEngineDetection::GobMetaEngineDetection\28\29 can change the state due to AdvancedMetaEngineDetection::AdvancedMetaEngineDetection\28void\20const*\2c\20unsigned\20int\2c\20PlainGameDescriptor\20const*\29
[asyncify] UltimaMetaEngineDetection::UltimaMetaEngineDetection\28\29 can change the state due to AdvancedMetaEngineDetection::AdvancedMetaEngineDetection\28void\20const*\2c\20unsigned\20int\2c\20PlainGameDescriptor\20const*\29
[asyncify] Common::HashMap<int\2c\20Graphics::FontInfo*\2c\20Common::Hash<int>\2c\20Common::EqualTo<int>>::lookupAndCreateIfMissing\28int\20const&\29 can change the state due to Common::HashMap<int\2c\20Graphics::FontInfo*\2c\20Common::Hash<int>\2c\20Common::EqualTo<int>>::expandStorage\28unsigned\20int\29
[asyncify] Common::HashMap<unsigned\20int\2c\20Graphics::BaseMacWindow*\2c\20Common::Hash<unsigned\20int>\2c\20Common::EqualTo<unsigned\20int>>::lookupAndCreateIfMissing\28unsigned\20int\20const&\29 can change the state due to Common::HashMap<unsigned\20int\2c\20Graphics::BaseMacWindow*\2c\20Common::Hash<unsigned\20int>\2c\20Common::EqualTo<unsigned\20int>>::expandStorage\28unsigned\20int\29
[asyncify] Common::HashMap<int\2c\20Graphics::Font\20const*\2c\20Common::Hash<int>\2c\20Common::EqualTo<int>>::lookupAndCreateIfMissing\28int\20const&\29 can change the state due to Common::HashMap<int\2c\20Graphics::Font\20const*\2c\20Common::Hash<int>\2c\20Common::EqualTo<int>>::expandStorage\28unsigned\20int\29
[asyncify] Common::HashMap<unsigned\20int\2c\20unsigned\20int\2c\20Common::Hash<unsigned\20int>\2c\20Common::EqualTo<unsigned\20int>>::lookupAndCreateIfMissing\28unsigned\20int\20const&\29 can change the state due to Common::HashMap<unsigned\20int\2c\20unsigned\20int\2c\20Common::Hash<unsigned\20int>\2c\20Common::EqualTo<unsigned\20int>>::expandStorage\28unsigned\20int\29
[asyncify] void\20Graphics::transBlit<unsigned\20char\2c\20unsigned\20char>\28Graphics::Surface\20const&\2c\20Common::Rect\20const&\2c\20Graphics::ManagedSurface&\2c\20Common::Rect\20const&\2c\20unsigned\20char\2c\20bool\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int\20const*\2c\20unsigned\20int\20const*\2c\20Graphics::Surface\20const*\2c\20bool\29 can change the state due to Graphics::createPaletteLookup\28unsigned\20int\20const*\2c\20unsigned\20int\20const*\29
[asyncify] void\20Graphics::transBlit<unsigned\20char\2c\20unsigned\20short>\28Graphics::Surface\20const&\2c\20Common::Rect\20const&\2c\20Graphics::ManagedSurface&\2c\20Common::Rect\20const&\2c\20unsigned\20char\2c\20bool\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int\20const*\2c\20unsigned\20int\20const*\2c\20Graphics::Surface\20const*\2c\20bool\29 can change the state due to Graphics::createPaletteLookup\28unsigned\20int\20const*\2c\20unsigned\20int\20const*\29
[asyncify] void\20Graphics::transBlit<unsigned\20char\2c\20unsigned\20int>\28Graphics::Surface\20const&\2c\20Common::Rect\20const&\2c\20Graphics::ManagedSurface&\2c\20Common::Rect\20const&\2c\20unsigned\20char\2c\20bool\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int\20const*\2c\20unsigned\20int\20const*\2c\20Graphics::Surface\20const*\2c\20bool\29 can change the state due to Graphics::createPaletteLookup\28unsigned\20int\20const*\2c\20unsigned\20int\20const*\29
[asyncify] void\20Graphics::transBlit<unsigned\20short\2c\20unsigned\20short>\28Graphics::Surface\20const&\2c\20Common::Rect\20const&\2c\20Graphics::ManagedSurface&\2c\20Common::Rect\20const&\2c\20unsigned\20short\2c\20bool\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int\20const*\2c\20unsigned\20int\20const*\2c\20Graphics::Surface\20const*\2c\20bool\29 can change the state due to Graphics::createPaletteLookup\28unsigned\20int\20const*\2c\20unsigned\20int\20const*\29
[asyncify] void\20Graphics::transBlit<unsigned\20int\2c\20unsigned\20int>\28Graphics::Surface\20const&\2c\20Common::Rect\20const&\2c\20Graphics::ManagedSurface&\2c\20Common::Rect\20const&\2c\20unsigned\20int\2c\20bool\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int\20const*\2c\20unsigned\20int\20const*\2c\20Graphics::Surface\20const*\2c\20bool\29 can change the state due to Graphics::createPaletteLookup\28unsigned\20int\20const*\2c\20unsigned\20int\20const*\29
[asyncify] void\20Graphics::transBlit<unsigned\20short\2c\20unsigned\20int>\28Graphics::Surface\20const&\2c\20Common::Rect\20const&\2c\20Graphics::ManagedSurface&\2c\20Common::Rect\20const&\2c\20unsigned\20short\2c\20bool\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int\20const*\2c\20unsigned\20int\20const*\2c\20Graphics::Surface\20const*\2c\20bool\29 can change the state due to Graphics::createPaletteLookup\28unsigned\20int\20const*\2c\20unsigned\20int\20const*\29
[asyncify] void\20Graphics::transBlit<unsigned\20int\2c\20unsigned\20short>\28Graphics::Surface\20const&\2c\20Common::Rect\20const&\2c\20Graphics::ManagedSurface&\2c\20Common::Rect\20const&\2c\20unsigned\20int\2c\20bool\2c\20unsigned\20int\2c\20unsigned\20int\2c\20unsigned\20int\20const*\2c\20unsigned\20int\20const*\2c\20Graphics::Surface\20const*\2c\20bool\29 can change the state due to Graphics::createPaletteLookup\28unsigned\20int\20const*\2c\20unsigned\20int\20const*\29
[asyncify] Common::HashMap<unsigned\20int\2c\20int\2c\20Common::Hash<unsigned\20int>\2c\20Common::EqualTo<unsigned\20int>>::lookupAndCreateIfMissing\28unsigned\20int\20const&\29 can change the state due to Common::HashMap<unsigned\20int\2c\20int\2c\20Common::Hash<unsigned\20int>\2c\20Common::EqualTo<unsigned\20int>>::expandStorage\28unsigned\20int\29
[asyncify] std::__2::regex_error::regex_error\28std::__2::regex_constants::error_type\29 can change the state due to std::runtime_error::runtime_error\28char\20const*\29
[asyncify] std::__2::__split_buffer<std::__2::pair<std::__2::condition_variable*\2c\20std::__2::mutex*>\2c\20std::__2::__hidden_allocator<std::__2::pair<std::__2::condition_variable*\2c\20std::__2::mutex*>>&>::__split_buffer\28unsigned\20long\2c\20unsigned\20long\2c\20std::__2::__hidden_allocator<std::__2::pair<std::__2::condition_variable*\2c\20std::__2::mutex*>>&\29 can change the state due to std::__2::__allocation_result<std::__2::allocator_traits<std::__2::__hidden_allocator<std::__2::pair<std::__2::condition_variable*\2c\20std::__2::mutex*>>>::pointer>\20std::__2::__allocate_at_least\5babi:v15006\5d<std::__2::__hidden_allocator<std::__2::pair<std::__2::condition_variable*\2c\20std::__2::mutex*>>>\28std::__2::__hidden_allocator<std::__2::pair<std::__2::condition_variable*\2c\20std::__2::mutex*>>&\2c\20unsigned\20long\29
[asyncify] std::__2::__split_buffer<std::__2::__assoc_sub_state*\2c\20std::__2::__hidden_allocator<std::__2::__assoc_sub_state*>&>::__split_buffer\28unsigned\20long\2c\20unsigned\20long\2c\20std::__2::__hidden_allocator<std::__2::__assoc_sub_state*>&\29 can change the state due to std::__2::__allocation_result<std::__2::allocator_traits<std::__2::__hidden_allocator<std::__2::__assoc_sub_state*>>::pointer>\20std::__2::__allocate_at_least\5babi:v15006\5d<std::__2::__hidden_allocator<std::__2::__assoc_sub_state*>>\28std::__2::__hidden_allocator<std::__2::__assoc_sub_state*>&\2c\20unsigned\20long\29
[asyncify] non-virtual\20thunk\20to\20Common::VirtualMouse::notifyEvent\28Common::Event\20const&\29 can change the state due to Common::VirtualMouse::notifyEvent\28Common::Event\20const&\29
[asyncify] OpenGLSdlGraphicsManager::hasFeature\28OSystem::Feature\29\20const can change the state due to OpenGL::OpenGLGraphicsManager::hasFeature\28OSystem::Feature\29\20const
[asyncify] virtual\20thunk\20to\20OpenGLSdlGraphicsManager::hasFeature\28OSystem::Feature\29\20const can change the state due to OpenGL::OpenGLGraphicsManager::hasFeature\28OSystem::Feature\29\20const
[asyncify] legalstub$std::__2::__fs::filesystem::__remove_all\28std::__2::__fs::filesystem::path\20const&\2c\20std::__2::error_code*\29 can change the state due to std::__2::__fs::filesystem::__remove_all\28std::__2::__fs::filesystem::path\20const&\2c\20std::__2::error_code*\29
[asyncify] unsigned\20long\20std::__2::__str_rfind\5babi:v15006\5d<char\2c\20unsigned\20long\2c\20std::__2::char_traits<char>\2c\204294967295ul>\28char\20const*\2c\20unsigned\20long\2c\20char\20const*\2c\20unsigned\20long\2c\20unsigned\20long\29 can change the state due to char\20const*\20std::__2::__find_end_classic\5babi:v15006\5d<char\20const*\2c\20char\20const*\2c\20bool\20\28char\2c\20char\29\20noexcept>\28char\20const*\2c\20char\20const*\2c\20char\20const*\2c\20char\20const*\2c\20bool\20\28&\29\28char\2c\20char\29\20noexcept\29
[asyncify] unsigned\20long\20std::__2::__str_rfind\5babi:v15006\5d<wchar_t\2c\20unsigned\20long\2c\20std::__2::char_traits<wchar_t>\2c\204294967295ul>\28wchar_t\20const*\2c\20unsigned\20long\2c\20wchar_t\20const*\2c\20unsigned\20long\2c\20unsigned\20long\29 can change the state due to wchar_t\20const*\20std::__2::__find_end_classic\5babi:v15006\5d<wchar_t\20const*\2c\20wchar_t\20const*\2c\20bool\20\28wchar_t\2c\20wchar_t\29\20noexcept>\28wchar_t\20const*\2c\20wchar_t\20const*\2c\20wchar_t\20const*\2c\20wchar_t\20const*\2c\20bool\20\28&\29\28wchar_t\2c\20wchar_t\29\20noexcept\29
[asyncify] virtual\20thunk\20to\20std::__2::istrstream::~istrstream\28\29 can change the state due to std::__2::istrstream::~istrstream\28\29.1
[asyncify] std::__2::istrstream::~istrstream\28\29.2 can change the state due to std::__2::istrstream::~istrstream\28\29.1
[asyncify] virtual\20thunk\20to\20std::__2::ostrstream::~ostrstream\28\29 can change the state due to std::__2::ostrstream::~ostrstream\28\29.1
[asyncify] std::__2::ostrstream::~ostrstream\28\29.2 can change the state due to std::__2::ostrstream::~ostrstream\28\29.1
[asyncify] non-virtual\20thunk\20to\20std::__2::strstream::~strstream\28\29 can change the state due to std::__2::strstream::~strstream\28\29.1
[asyncify] virtual\20thunk\20to\20std::__2::strstream::~strstream\28\29 can change the state due to std::__2::strstream::~strstream\28\29.1
[asyncify] std::__2::strstream::~strstream\28\29.2 can change the state due to std::__2::strstream::~strstream\28\29.1
[asyncify] std::__2::ios_base::failure::failure\28std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\2c\20std::__2::error_code\20const&\29 can change the state due to std::__2::system_error::system_error\28std::__2::error_code\2c\20std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\29
[asyncify] std::__2::ios_base::failure::failure\28char\20const*\2c\20std::__2::error_code\20const&\29 can change the state due to std::__2::system_error::system_error\28std::__2::error_code\2c\20char\20const*\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::TemplateTemplateParamDecl::printLeft\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\29\20const can change the state due to \28anonymous\20namespace\29::itanium_demangle::NodeArray::printWithComma\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\29\20const
[asyncify] \28anonymous\20namespace\29::itanium_demangle::ClosureTypeName::printDeclarator\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\29\20const can change the state due to \28anonymous\20namespace\29::itanium_demangle::NodeArray::printWithComma\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\29\20const
[asyncify] \28anonymous\20namespace\29::itanium_demangle::NodeArrayNode::printLeft\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\29\20const can change the state due to \28anonymous\20namespace\29::itanium_demangle::NodeArray::printWithComma\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\29\20const
[asyncify] \28anonymous\20namespace\29::itanium_demangle::StructuredBindingName::printLeft\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\29\20const can change the state due to \28anonymous\20namespace\29::itanium_demangle::NodeArray::printWithComma\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\29\20const
[asyncify] \28anonymous\20namespace\29::itanium_demangle::TemplateArgs::printLeft\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\29\20const can change the state due to \28anonymous\20namespace\29::itanium_demangle::NodeArray::printWithComma\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\29\20const
[asyncify] \28anonymous\20namespace\29::itanium_demangle::TemplateArgumentPack::printLeft\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\29\20const can change the state due to \28anonymous\20namespace\29::itanium_demangle::NodeArray::printWithComma\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\29\20const
[asyncify] \28anonymous\20namespace\29::itanium_demangle::EnableIfAttr::printLeft\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\29\20const can change the state due to \28anonymous\20namespace\29::itanium_demangle::NodeArray::printWithComma\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\29\20const
[asyncify] \28anonymous\20namespace\29::itanium_demangle::DynamicExceptionSpec::printLeft\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\29\20const can change the state due to \28anonymous\20namespace\29::itanium_demangle::NodeArray::printWithComma\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\29\20const
[asyncify] \28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::parseLocalName\28\28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::NameState*\29 can change the state due to \28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::parseEncoding\28\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::parseUnqualifiedName\28\28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::NameState*\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*\2c\20\28anonymous\20namespace\29::itanium_demangle::ModuleName*\29 can change the state due to \28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::parseUnnamedTypeName\28\28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::NameState*\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::parseBaseUnresolvedName\28\29 can change the state due to \28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::parseOperatorName\28\28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::NameState*\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::parseName\28\28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::NameState*\29 can change the state due to \28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::parseTemplateArgs\28bool\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::parseUnresolvedName\28bool\29 can change the state due to \28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::parseTemplateArgs\28bool\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::parseSimpleId\28\29 can change the state due to \28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::parseTemplateArgs\28bool\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::parseDestructorName\28\29 can change the state due to \28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::parseUnresolvedType\28\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::OutputBuffer::operator+=\28char\29 can change the state due to \28anonymous\20namespace\29::itanium_demangle::OutputBuffer::grow\28unsigned\20long\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::OutputBuffer::operator+=\28\28anonymous\20namespace\29::itanium_demangle::StringView\29 can change the state due to \28anonymous\20namespace\29::itanium_demangle::OutputBuffer::grow\28unsigned\20long\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::PODSmallVector<\28anonymous\20namespace\29::itanium_demangle::Node*\2c\2032ul>::push_back\28\28anonymous\20namespace\29::itanium_demangle::Node*\20const&\29 can change the state due to \28anonymous\20namespace\29::itanium_demangle::PODSmallVector<\28anonymous\20namespace\29::itanium_demangle::Node*\2c\2032ul>::reserve\28unsigned\20long\29
[asyncify] \28anonymous\20namespace\29::BumpPointerAllocator::allocate\28unsigned\20long\29 can change the state due to \28anonymous\20namespace\29::BumpPointerAllocator::allocateMassive\28unsigned\20long\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::PODSmallVector<\28anonymous\20namespace\29::itanium_demangle::ForwardTemplateReference*\2c\204ul>::push_back\28\28anonymous\20namespace\29::itanium_demangle::ForwardTemplateReference*\20const&\29 can change the state due to \28anonymous\20namespace\29::itanium_demangle::PODSmallVector<\28anonymous\20namespace\29::itanium_demangle::ForwardTemplateReference*\2c\204ul>::reserve\28unsigned\20long\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::PODSmallVector<\28anonymous\20namespace\29::itanium_demangle::PODSmallVector<\28anonymous\20namespace\29::itanium_demangle::Node*\2c\208ul>*\2c\204ul>::push_back\28\28anonymous\20namespace\29::itanium_demangle::PODSmallVector<\28anonymous\20namespace\29::itanium_demangle::Node*\2c\208ul>*\20const&\29 can change the state due to \28anonymous\20namespace\29::itanium_demangle::PODSmallVector<\28anonymous\20namespace\29::itanium_demangle::PODSmallVector<\28anonymous\20namespace\29::itanium_demangle::Node*\2c\208ul>*\2c\204ul>::reserve\28unsigned\20long\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::PODSmallVector<\28anonymous\20namespace\29::itanium_demangle::Node*\2c\208ul>::push_back\28\28anonymous\20namespace\29::itanium_demangle::Node*\20const&\29 can change the state due to \28anonymous\20namespace\29::itanium_demangle::PODSmallVector<\28anonymous\20namespace\29::itanium_demangle::Node*\2c\208ul>::reserve\28unsigned\20long\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::PODSmallVector<\28anonymous\20namespace\29::itanium_demangle::Node\20const*\2c\208ul>::push_back\28\28anonymous\20namespace\29::itanium_demangle::Node\20const*\20const&\29 can change the state due to \28anonymous\20namespace\29::itanium_demangle::PODSmallVector<\28anonymous\20namespace\29::itanium_demangle::Node\20const*\2c\208ul>::reserve\28unsigned\20long\29
[asyncify] std::exception_ptr::exception_ptr\28std::exception_ptr\20const&\29 can change the state due to __cxa_increment_exception_refcount
[asyncify] std::exception_ptr::operator=\28std::exception_ptr\20const&\29 can change the state due to __cxa_increment_exception_refcount
[asyncify] std::exception_ptr::~exception_ptr\28\29 can change the state due to __cxa_decrement_exception_refcount
[asyncify] luaB_coresume\28lua_State*\29 can change the state due to auxresume\28lua_State*\2c\20lua_State*\2c\20int\29
[asyncify] GUI::GroupedListWidget::~GroupedListWidget\28\29.1 can change the state due to GUI::GroupedListWidget::~GroupedListWidget\28\29
[asyncify] non-virtual\20thunk\20to\20GUI::GroupedListWidget::~GroupedListWidget\28\29 can change the state due to GUI::GroupedListWidget::~GroupedListWidget\28\29
[asyncify] non-virtual\20thunk\20to\20GUI::GroupedListWidget::~GroupedListWidget\28\29.1 can change the state due to GUI::GroupedListWidget::~GroupedListWidget\28\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29
[asyncify] Common::String::operator+=\28Common::String\20const&\29 can change the state due to Common::BaseString<char>::assignAppend\28Common::BaseString<char>\20const&\29
[asyncify] Common::operator+\28char\2c\20Common::String\20const&\29 can change the state due to Common::BaseString<char>::assignAppend\28Common::BaseString<char>\20const&\29
[asyncify] Common::HashMap<Common::String\2c\20Common::ConfigManager::Domain\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>::operator\5b\5d\28Common::String\20const&\29 can change the state due to Common::HashMap<Common::String\2c\20Common::ConfigManager::Domain\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>::lookupAndCreateIfMissing\28Common::String\20const&\29
[asyncify] Common::ConfigManager::getDomain\28Common::String\20const&\29 can change the state due to Common::HashMap<Common::String\2c\20Common::ConfigManager::Domain\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>::lookupAndCreateIfMissing\28Common::String\20const&\29
[asyncify] Common::ConfigManager::setActiveDomain\28Common::String\20const&\29 can change the state due to Common::HashMap<Common::String\2c\20Common::ConfigManager::Domain\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>::lookupAndCreateIfMissing\28Common::String\20const&\29
[asyncify] Common::ConfigManager::addMiscDomain\28Common::String\20const&\29 can change the state due to Common::HashMap<Common::String\2c\20Common::ConfigManager::Domain\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>::lookupAndCreateIfMissing\28Common::String\20const&\29
[asyncify] Common::ConfigManager::renameGameDomain\28Common::String\20const&\2c\20Common::String\20const&\29 can change the state due to Common::HashMap<Common::String\2c\20Common::ConfigManager::Domain\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>::lookupAndCreateIfMissing\28Common::String\20const&\29
[asyncify] Common::ConfigManager::renameDomain\28Common::String\20const&\2c\20Common::String\20const&\2c\20Common::HashMap<Common::String\2c\20Common::ConfigManager::Domain\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>&\29 can change the state due to Common::HashMap<Common::String\2c\20Common::ConfigManager::Domain\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>::lookupAndCreateIfMissing\28Common::String\20const&\29
[asyncify] void\20Common::sort<Common::ListInternal::Iterator<Common::String>\2c\20Common::Less<Common::String>>\28Common::ListInternal::Iterator<Common::String>\2c\20Common::ListInternal::Iterator<Common::String>\2c\20Common::Less<Common::String>\29 can change the state due to Common::ListInternal::Iterator<Common::String>\20Common::sortPartition<Common::ListInternal::Iterator<Common::String>\2c\20Common::Less<Common::String>>\28Common::ListInternal::Iterator<Common::String>\2c\20Common::ListInternal::Iterator<Common::String>\2c\20Common::ListInternal::Iterator<Common::String>\2c\20Common::Less<Common::String>&\29
[asyncify] Common::HashMap<Common::String\2c\20Common::JSONValue*\2c\20Common::Hash<Common::String>\2c\20Common::EqualTo<Common::String>>::operator\5b\5d\28Common::String\20const&\29 can change the state due to Common::HashMap<Common::String\2c\20Common::JSONValue*\2c\20Common::Hash<Common::String>\2c\20Common::EqualTo<Common::String>>::lookupAndCreateIfMissing\28Common::String\20const&\29
[asyncify] void\20Common::sort<Common::HardwareInput*\2c\20Common::HardwareInputTypeIdComparator>\28Common::HardwareInput*\2c\20Common::HardwareInput*\2c\20Common::HardwareInputTypeIdComparator\29 can change the state due to Common::HardwareInput*\20Common::sortPartition<Common::HardwareInput*\2c\20Common::HardwareInputTypeIdComparator>\28Common::HardwareInput*\2c\20Common::HardwareInput*\2c\20Common::HardwareInput*\2c\20Common::HardwareInputTypeIdComparator&\29
[asyncify] void\20Common::sort<Common::String*\2c\20Common::Less<Common::String>>\28Common::String*\2c\20Common::String*\2c\20Common::Less<Common::String>\29 can change the state due to Common::String*\20Common::sortPartition<Common::String*\2c\20Common::Less<Common::String>>\28Common::String*\2c\20Common::String*\2c\20Common::String*\2c\20Common::Less<Common::String>&\29
[asyncify] void\20Common::sort<GUI::LauncherEntry*\2c\20GUI::LauncherEntryComparator>\28GUI::LauncherEntry*\2c\20GUI::LauncherEntry*\2c\20GUI::LauncherEntryComparator\29 can change the state due to void\20SWAP<GUI::LauncherEntry>\28GUI::LauncherEntry&\2c\20GUI::LauncherEntry&\29
[asyncify] Graphics::MacFontManager::getFontIdByName\28Common::String\29 can change the state due to Common::HashMap<Common::String\2c\20int\2c\20Common::Hash<Common::String>\2c\20Common::EqualTo<Common::String>>::lookupAndCreateIfMissing\28Common::String\20const&\29
[asyncify] GUI::ThemeEval::getVar\28Common::String\20const&\2c\20int\29 can change the state due to Common::HashMap<Common::String\2c\20int\2c\20Common::Hash<Common::String>\2c\20Common::EqualTo<Common::String>>::lookupAndCreateIfMissing\28Common::String\20const&\29
[asyncify] Common::ConfigManager::Domain::setKVComment\28Common::String\20const&\2c\20Common::String\20const&\29 can change the state due to Common::HashMap<Common::String\2c\20Common::String\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>::lookupAndCreateIfMissing\28Common::String\20const&\29
[asyncify] Common::ConfigManager::set\28Common::String\20const&\2c\20Common::String\20const&\29 can change the state due to Common::HashMap<Common::String\2c\20Common::String\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>::lookupAndCreateIfMissing\28Common::String\20const&\29
[asyncify] Common::ConfigManager::registerDefault\28Common::String\20const&\2c\20Common::String\20const&\29 can change the state due to Common::HashMap<Common::String\2c\20Common::String\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>::lookupAndCreateIfMissing\28Common::String\20const&\29
[asyncify] Common::HashMap<Common::String\2c\20Common::String\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>::operator\5b\5d\28Common::String\20const&\29 can change the state due to Common::HashMap<Common::String\2c\20Common::String\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>::lookupAndCreateIfMissing\28Common::String\20const&\29
[asyncify] Common::ConfigManager::Domain::setVal\28Common::String\20const&\2c\20Common::String\20const&\29 can change the state due to Common::HashMap<Common::String\2c\20Common::String\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>::lookupAndCreateIfMissing\28Common::String\20const&\29
[asyncify] GUI::ThemeParser::getPaletteColor\28Common::String\20const&\2c\20int&\2c\20int&\2c\20int&\29 can change the state due to Common::HashMap<Common::String\2c\20GUI::ThemeParser::PaletteColor\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>::lookupAndCreateIfMissing\28Common::String\20const&\29
[asyncify] GUI::GridWidget::filenameToSurface\28Common::String\20const&\29 can change the state due to Common::HashMap<Common::String\2c\20Graphics::ManagedSurface\20const*\2c\20Common::Hash<Common::String>\2c\20Common::EqualTo<Common::String>>::lookupAndCreateIfMissing\28Common::String\20const&\29
[asyncify] Common::ConfigManager::Domain::setDomainComment\28Common::String\20const&\29 can change the state due to Common::String::operator=\28Common::String\20const&\29
[asyncify] Common::Path::Path\28Common::Path\20const&\29 can change the state due to Common::String::operator=\28Common::String\20const&\29
[asyncify] Common::Path::operator=\28Common::Path\20const&\29 can change the state due to Common::String::operator=\28Common::String\20const&\29
[asyncify] Common::TTSVoice::operator=\28Common::TTSVoice\20const&\29 can change the state due to Common::String::operator=\28Common::String\20const&\29
[asyncify] Common::TextToSpeechManager::setLanguage\28Common::String\29 can change the state due to Common::String::operator=\28Common::String\20const&\29
[asyncify] Common::INIFile::setDefaultSectionName\28Common::String\20const&\29 can change the state due to Common::String::operator=\28Common::String\20const&\29
[asyncify] Common::WinResourceID::operator=\28Common::String\20const&\29 can change the state due to Common::String::operator=\28Common::String\20const&\29
[asyncify] Graphics::MacFontFamily::MacFontFamily\28Common::String\20const&\29 can change the state due to Common::String::operator=\28Common::String\20const&\29
[asyncify] MusicDevice::getCompleteName\28\29 can change the state due to Common::String::operator=\28Common::String\20const&\29
[asyncify] Common::HardwareInput::createKeyboard\28Common::String\20const&\2c\20Common::KeyState\2c\20Common::U32String\20const&\29 can change the state due to Common::String::operator=\28Common::String\20const&\29
[asyncify] Common::SaveFileManager::setError\28Common::Error\2c\20Common::String\20const&\29 can change the state due to Common::String::operator=\28Common::String\20const&\29
[asyncify] OpenGL::OpenGLGraphicsManager::setShader\28Common::String\20const&\29 can change the state due to Common::String::operator=\28Common::String\20const&\29
[asyncify] virtual\20thunk\20to\20OpenGL::OpenGLGraphicsManager::setShader\28Common::String\20const&\29 can change the state due to Common::String::operator=\28Common::String\20const&\29
[asyncify] OpenGL::OpenGLGraphicsManager::beginGFXTransaction\28\29 can change the state due to Common::String::operator=\28Common::String\20const&\29
[asyncify] virtual\20thunk\20to\20OpenGL::OpenGLGraphicsManager::beginGFXTransaction\28\29 can change the state due to Common::String::operator=\28Common::String\20const&\29
[asyncify] Graphics::MacFont::setFallback\28Graphics::Font\20const*\2c\20Common::String\29 can change the state due to Common::String::operator=\28Common::String\20const&\29
[asyncify] GUI::ConsoleDialog::addToHistory\28Common::String\20const&\29 can change the state due to Common::String::operator=\28Common::String\20const&\29
[asyncify] GUI::GridItemInfo*\20Common::copy_backward<GUI::GridItemInfo*\2c\20GUI::GridItemInfo*>\28GUI::GridItemInfo*\2c\20GUI::GridItemInfo*\2c\20GUI::GridItemInfo*\29 can change the state due to Common::String::operator=\28Common::String\20const&\29
[asyncify] GUI::GridItemInfo*\20Common::copy<GUI::GridItemInfo\20const*\2c\20GUI::GridItemInfo*>\28GUI::GridItemInfo\20const*\2c\20GUI::GridItemInfo\20const*\2c\20GUI::GridItemInfo*\29 can change the state due to Common::String::operator=\28Common::String\20const&\29
[asyncify] Graphics::MacMenu::setName\28Graphics::MacMenuItem*\2c\20Common::String\20const&\29 can change the state due to Common::String::operator=\28Common::String\20const&\29
[asyncify] GUI::Debugger::splitCommand\28Common::String&\2c\20int&\2c\20char\20const**\29 can change the state due to Common::BaseString<char>::makeUnique\28\29
[asyncify] GUI::ConsoleDialog::getUserInput\28\29 can change the state due to Common::BaseString<char>::insertChar\28char\2c\20unsigned\20int\29
[asyncify] Graphics::MacFontManager::parseFontSlant\28Common::String\29 can change the state due to Common::BaseString<char>::toUppercase\28\29
[asyncify] Common::String::operator+=\28char\20const*\29 can change the state due to Common::BaseString<char>::assignAppend\28char\20const*\29
[asyncify] Common::String::replace\28unsigned\20int\2c\20unsigned\20int\2c\20Common::String\20const&\29 can change the state due to Common::String::replace\28unsigned\20int\2c\20unsigned\20int\2c\20char\20const*\2c\20unsigned\20int\2c\20unsigned\20int\29
[asyncify] Common::String::replace\28unsigned\20int\2c\20unsigned\20int\2c\20Common::String\20const&\2c\20unsigned\20int\2c\20unsigned\20int\29 can change the state due to Common::String::replace\28unsigned\20int\2c\20unsigned\20int\2c\20char\20const*\2c\20unsigned\20int\2c\20unsigned\20int\29
[asyncify] Common::String::replace\28unsigned\20int\2c\20unsigned\20int\2c\20char\20const*\29 can change the state due to Common::String::replace\28unsigned\20int\2c\20unsigned\20int\2c\20char\20const*\2c\20unsigned\20int\2c\20unsigned\20int\29
[asyncify] Common::String::replace\28char*\2c\20char*\2c\20Common::String\20const&\29 can change the state due to Common::String::replace\28unsigned\20int\2c\20unsigned\20int\2c\20char\20const*\2c\20unsigned\20int\2c\20unsigned\20int\29
[asyncify] Common::String::replace\28char*\2c\20char*\2c\20char\20const*\29 can change the state due to Common::String::replace\28unsigned\20int\2c\20unsigned\20int\2c\20char\20const*\2c\20unsigned\20int\2c\20unsigned\20int\29
[asyncify] Common::replace\28Common::String&\2c\20Common::String\20const&\2c\20Common::String\20const&\29 can change the state due to Common::String::replace\28unsigned\20int\2c\20unsigned\20int\2c\20char\20const*\2c\20unsigned\20int\2c\20unsigned\20int\29
[asyncify] Common::convertUtf32ToUtf8\28Common::U32String\20const&\29 can change the state due to Common::String::encodeUTF8\28Common::U32String\20const&\2c\20char\29
[asyncify] GUI::Debugger::debuggerCompletionCallback\28GUI::ConsoleDialog*\2c\20char\20const*\2c\20Common::String&\2c\20void*\29 can change the state due to GUI::Debugger::tabComplete\28char\20const*\2c\20Common::String&\29\20const
[asyncify] AccessMetaEngineDetection::~AccessMetaEngineDetection\28\29 can change the state due to AdvancedMetaEngineDetection::~AdvancedMetaEngineDetection\28\29
[asyncify] Adl::AdlMetaEngineDetection::~AdlMetaEngineDetection\28\29 can change the state due to AdvancedMetaEngineDetection::~AdvancedMetaEngineDetection\28\29
[asyncify] AgosMetaEngineDetection::~AgosMetaEngineDetection\28\29 can change the state due to AdvancedMetaEngineDetection::~AdvancedMetaEngineDetection\28\29
[asyncify] AsylumMetaEngineDetection::~AsylumMetaEngineDetection\28\29 can change the state due to AdvancedMetaEngineDetection::~AdvancedMetaEngineDetection\28\29
[asyncify] Avalanche::AvalancheMetaEngineDetection::~AvalancheMetaEngineDetection\28\29 can change the state due to AdvancedMetaEngineDetection::~AdvancedMetaEngineDetection\28\29
[asyncify] BbvsMetaEngineDetection::~BbvsMetaEngineDetection\28\29 can change the state due to AdvancedMetaEngineDetection::~AdvancedMetaEngineDetection\28\29
[asyncify] BladeRunnerMetaEngineDetection::~BladeRunnerMetaEngineDetection\28\29 can change the state due to AdvancedMetaEngineDetection::~AdvancedMetaEngineDetection\28\29
[asyncify] BuriedMetaEngineDetection::~BuriedMetaEngineDetection\28\29 can change the state due to AdvancedMetaEngineDetection::~AdvancedMetaEngineDetection\28\29
[asyncify] CGE::CGEMetaEngineDetection::~CGEMetaEngineDetection\28\29 can change the state due to AdvancedMetaEngineDetection::~AdvancedMetaEngineDetection\28\29
[asyncify] CGE2::CGE2MetaEngineDetection::~CGE2MetaEngineDetection\28\29 can change the state due to AdvancedMetaEngineDetection::~AdvancedMetaEngineDetection\28\29
[asyncify] ChewyMetaEngineDetection::~ChewyMetaEngineDetection\28\29 can change the state due to AdvancedMetaEngineDetection::~AdvancedMetaEngineDetection\28\29
[asyncify] CineMetaEngineDetection::~CineMetaEngineDetection\28\29 can change the state due to AdvancedMetaEngineDetection::~AdvancedMetaEngineDetection\28\29
[asyncify] ComposerMetaEngineDetection::~ComposerMetaEngineDetection\28\29 can change the state due to AdvancedMetaEngineDetection::~AdvancedMetaEngineDetection\28\29
[asyncify] CruiseMetaEngineDetection::~CruiseMetaEngineDetection\28\29 can change the state due to AdvancedMetaEngineDetection::~AdvancedMetaEngineDetection\28\29
[asyncify] CryoMetaEngineDetection::~CryoMetaEngineDetection\28\29 can change the state due to AdvancedMetaEngineDetection::~AdvancedMetaEngineDetection\28\29
[asyncify] CryOmni3D::CryOmni3DMetaEngineDetection::~CryOmni3DMetaEngineDetection\28\29 can change the state due to AdvancedMetaEngineDetection::~AdvancedMetaEngineDetection\28\29
[asyncify] DM::DMMetaEngineDetection::~DMMetaEngineDetection\28\29 can change the state due to AdvancedMetaEngineDetection::~AdvancedMetaEngineDetection\28\29
[asyncify] DraciMetaEngineDetection::~DraciMetaEngineDetection\28\29 can change the state due to AdvancedMetaEngineDetection::~AdvancedMetaEngineDetection\28\29
[asyncify] DragonsMetaEngineDetection::~DragonsMetaEngineDetection\28\29 can change the state due to AdvancedMetaEngineDetection::~AdvancedMetaEngineDetection\28\29
[asyncify] Drascula::DrasculaMetaEngineDetection::~DrasculaMetaEngineDetection\28\29 can change the state due to AdvancedMetaEngineDetection::~AdvancedMetaEngineDetection\28\29
[asyncify] DreamWebMetaEngineDetection::~DreamWebMetaEngineDetection\28\29 can change the state due to AdvancedMetaEngineDetection::~AdvancedMetaEngineDetection\28\29
[asyncify] FreescapeMetaEngineDetection::~FreescapeMetaEngineDetection\28\29 can change the state due to AdvancedMetaEngineDetection::~AdvancedMetaEngineDetection\28\29
[asyncify] TrecisionMetaEngineDetection::~TrecisionMetaEngineDetection\28\29 can change the state due to AdvancedMetaEngineDetection::~AdvancedMetaEngineDetection\28\29
[asyncify] GnapMetaEngineDetection::~GnapMetaEngineDetection\28\29 can change the state due to AdvancedMetaEngineDetection::~AdvancedMetaEngineDetection\28\29
[asyncify] GobMetaEngineDetection::~GobMetaEngineDetection\28\29 can change the state due to AdvancedMetaEngineDetection::~AdvancedMetaEngineDetection\28\29
[asyncify] GriffonMetaEngineDetection::~GriffonMetaEngineDetection\28\29 can change the state due to AdvancedMetaEngineDetection::~AdvancedMetaEngineDetection\28\29
[asyncify] Grim::GrimMetaEngineDetection::~GrimMetaEngineDetection\28\29 can change the state due to AdvancedMetaEngineDetection::~AdvancedMetaEngineDetection\28\29
[asyncify] Groovie::GroovieMetaEngineDetection::~GroovieMetaEngineDetection\28\29 can change the state due to AdvancedMetaEngineDetection::~AdvancedMetaEngineDetection\28\29
[asyncify] HadeschMetaEngineDetection::~HadeschMetaEngineDetection\28\29 can change the state due to AdvancedMetaEngineDetection::~AdvancedMetaEngineDetection\28\29
[asyncify] HDBMetaEngineDetection::~HDBMetaEngineDetection\28\29 can change the state due to AdvancedMetaEngineDetection::~AdvancedMetaEngineDetection\28\29
[asyncify] Saga2MetaEngineDetection::~Saga2MetaEngineDetection\28\29 can change the state due to AdvancedMetaEngineDetection::~AdvancedMetaEngineDetection\28\29
[asyncify] HopkinsMetaEngineDetection::~HopkinsMetaEngineDetection\28\29 can change the state due to AdvancedMetaEngineDetection::~AdvancedMetaEngineDetection\28\29
[asyncify] Hugo::HugoMetaEngineDetection::~HugoMetaEngineDetection\28\29 can change the state due to AdvancedMetaEngineDetection::~AdvancedMetaEngineDetection\28\29
[asyncify] HypnoMetaEngineDetection::~HypnoMetaEngineDetection\28\29 can change the state due to AdvancedMetaEngineDetection::~AdvancedMetaEngineDetection\28\29
[asyncify] ICB::IcbMetaEngineDetection::~IcbMetaEngineDetection\28\29 can change the state due to AdvancedMetaEngineDetection::~AdvancedMetaEngineDetection\28\29
[asyncify] IllusionsMetaEngineDetection::~IllusionsMetaEngineDetection\28\29 can change the state due to AdvancedMetaEngineDetection::~AdvancedMetaEngineDetection\28\29
[asyncify] KingdomMetaEngineDetection::~KingdomMetaEngineDetection\28\29 can change the state due to AdvancedMetaEngineDetection::~AdvancedMetaEngineDetection\28\29
[asyncify] KyraMetaEngineDetection::~KyraMetaEngineDetection\28\29 can change the state due to AdvancedMetaEngineDetection::~AdvancedMetaEngineDetection\28\29
[asyncify] LabMetaEngineDetection::~LabMetaEngineDetection\28\29 can change the state due to AdvancedMetaEngineDetection::~AdvancedMetaEngineDetection\28\29
[asyncify] LastExpress::LastExpressMetaEngineDetection::~LastExpressMetaEngineDetection\28\29 can change the state due to AdvancedMetaEngineDetection::~AdvancedMetaEngineDetection\28\29
[asyncify] Lilliput::LilliputMetaEngineDetection::~LilliputMetaEngineDetection\28\29 can change the state due to AdvancedMetaEngineDetection::~AdvancedMetaEngineDetection\28\29
[asyncify] LureMetaEngineDetection::~LureMetaEngineDetection\28\29 can change the state due to AdvancedMetaEngineDetection::~AdvancedMetaEngineDetection\28\29
[asyncify] MacVenture::MacVentureMetaEngineDetection::~MacVentureMetaEngineDetection\28\29 can change the state due to AdvancedMetaEngineDetection::~AdvancedMetaEngineDetection\28\29
[asyncify] MadeMetaEngineDetection::~MadeMetaEngineDetection\28\29 can change the state due to AdvancedMetaEngineDetection::~AdvancedMetaEngineDetection\28\29
[asyncify] MADSMetaEngineDetection::~MADSMetaEngineDetection\28\29 can change the state due to AdvancedMetaEngineDetection::~AdvancedMetaEngineDetection\28\29
[asyncify] MohawkMetaEngineDetection::~MohawkMetaEngineDetection\28\29 can change the state due to AdvancedMetaEngineDetection::~AdvancedMetaEngineDetection\28\29
[asyncify] MortevielleMetaEngineDetection::~MortevielleMetaEngineDetection\28\29 can change the state due to AdvancedMetaEngineDetection::~AdvancedMetaEngineDetection\28\29
[asyncify] MTropolisMetaEngineDetection::~MTropolisMetaEngineDetection\28\29 can change the state due to AdvancedMetaEngineDetection::~AdvancedMetaEngineDetection\28\29
[asyncify] MutationOfJBMetaEngineDetection::~MutationOfJBMetaEngineDetection\28\29 can change the state due to AdvancedMetaEngineDetection::~AdvancedMetaEngineDetection\28\29
[asyncify] Myst3::Myst3MetaEngineDetection::~Myst3MetaEngineDetection\28\29 can change the state due to AdvancedMetaEngineDetection::~AdvancedMetaEngineDetection\28\29
[asyncify] NancyMetaEngineDetection::~NancyMetaEngineDetection\28\29 can change the state due to AdvancedMetaEngineDetection::~AdvancedMetaEngineDetection\28\29
[asyncify] NeverhoodMetaEngineDetection::~NeverhoodMetaEngineDetection\28\29 can change the state due to AdvancedMetaEngineDetection::~AdvancedMetaEngineDetection\28\29
[asyncify] NGIMetaEngineDetection::~NGIMetaEngineDetection\28\29 can change the state due to AdvancedMetaEngineDetection::~AdvancedMetaEngineDetection\28\29
[asyncify] ParallactionMetaEngineDetection::~ParallactionMetaEngineDetection\28\29 can change the state due to AdvancedMetaEngineDetection::~AdvancedMetaEngineDetection\28\29
[asyncify] PegasusMetaEngineDetection::~PegasusMetaEngineDetection\28\29 can change the state due to AdvancedMetaEngineDetection::~AdvancedMetaEngineDetection\28\29
[asyncify] PetkaMetaEngineDetection::~PetkaMetaEngineDetection\28\29 can change the state due to AdvancedMetaEngineDetection::~AdvancedMetaEngineDetection\28\29
[asyncify] PinkMetaEngineDetection::~PinkMetaEngineDetection\28\29 can change the state due to AdvancedMetaEngineDetection::~AdvancedMetaEngineDetection\28\29
[asyncify] Playground3dMetaEngineDetection::~Playground3dMetaEngineDetection\28\29 can change the state due to AdvancedMetaEngineDetection::~AdvancedMetaEngineDetection\28\29
[asyncify] PlumbersMetaEngineDetection::~PlumbersMetaEngineDetection\28\29 can change the state due to AdvancedMetaEngineDetection::~AdvancedMetaEngineDetection\28\29
[asyncify] PrinceMetaEngineDetection::~PrinceMetaEngineDetection\28\29 can change the state due to AdvancedMetaEngineDetection::~AdvancedMetaEngineDetection\28\29
[asyncify] PrivateMetaEngineDetection::~PrivateMetaEngineDetection\28\29 can change the state due to AdvancedMetaEngineDetection::~AdvancedMetaEngineDetection\28\29
[asyncify] QueenMetaEngineDetection::~QueenMetaEngineDetection\28\29 can change the state due to AdvancedMetaEngineDetection::~AdvancedMetaEngineDetection\28\29
[asyncify] SagaMetaEngineDetection::~SagaMetaEngineDetection\28\29 can change the state due to AdvancedMetaEngineDetection::~AdvancedMetaEngineDetection\28\29
[asyncify] Sci::SciMetaEngineDetection::~SciMetaEngineDetection\28\29 can change the state due to AdvancedMetaEngineDetection::~AdvancedMetaEngineDetection\28\29
[asyncify] SherlockMetaEngineDetection::~SherlockMetaEngineDetection\28\29 can change the state due to AdvancedMetaEngineDetection::~AdvancedMetaEngineDetection\28\29
[asyncify] SludgeMetaEngineDetection::~SludgeMetaEngineDetection\28\29 can change the state due to AdvancedMetaEngineDetection::~AdvancedMetaEngineDetection\28\29
[asyncify] Stark::StarkMetaEngineDetection::~StarkMetaEngineDetection\28\29 can change the state due to AdvancedMetaEngineDetection::~AdvancedMetaEngineDetection\28\29
[asyncify] StarTrekMetaEngineDetection::~StarTrekMetaEngineDetection\28\29 can change the state due to AdvancedMetaEngineDetection::~AdvancedMetaEngineDetection\28\29
[asyncify] SupernovaMetaEngineDetection::~SupernovaMetaEngineDetection\28\29 can change the state due to AdvancedMetaEngineDetection::~AdvancedMetaEngineDetection\28\29
[asyncify] SwordMetaEngineDetection::~SwordMetaEngineDetection\28\29 can change the state due to AdvancedMetaEngineDetection::~AdvancedMetaEngineDetection\28\29
[asyncify] Sword2MetaEngineDetection::~Sword2MetaEngineDetection\28\29 can change the state due to AdvancedMetaEngineDetection::~AdvancedMetaEngineDetection\28\29
[asyncify] Sword25MetaEngineDetection::~Sword25MetaEngineDetection\28\29 can change the state due to AdvancedMetaEngineDetection::~AdvancedMetaEngineDetection\28\29
[asyncify] TeenAgentMetaEngineDetection::~TeenAgentMetaEngineDetection\28\29 can change the state due to AdvancedMetaEngineDetection::~AdvancedMetaEngineDetection\28\29
[asyncify] TestbedMetaEngineDetection::~TestbedMetaEngineDetection\28\29 can change the state due to AdvancedMetaEngineDetection::~AdvancedMetaEngineDetection\28\29
[asyncify] TinselMetaEngineDetection::~TinselMetaEngineDetection\28\29 can change the state due to AdvancedMetaEngineDetection::~AdvancedMetaEngineDetection\28\29
[asyncify] TitanicMetaEngineDetection::~TitanicMetaEngineDetection\28\29 can change the state due to AdvancedMetaEngineDetection::~AdvancedMetaEngineDetection\28\29
[asyncify] ToltecsMetaEngineDetection::~ToltecsMetaEngineDetection\28\29 can change the state due to AdvancedMetaEngineDetection::~AdvancedMetaEngineDetection\28\29
[asyncify] TonyMetaEngineDetection::~TonyMetaEngineDetection\28\29 can change the state due to AdvancedMetaEngineDetection::~AdvancedMetaEngineDetection\28\29
[asyncify] ToonMetaEngineDetection::~ToonMetaEngineDetection\28\29 can change the state due to AdvancedMetaEngineDetection::~AdvancedMetaEngineDetection\28\29
[asyncify] ToucheMetaEngineDetection::~ToucheMetaEngineDetection\28\29 can change the state due to AdvancedMetaEngineDetection::~AdvancedMetaEngineDetection\28\29
[asyncify] TSageMetaEngineDetection::~TSageMetaEngineDetection\28\29 can change the state due to AdvancedMetaEngineDetection::~AdvancedMetaEngineDetection\28\29
[asyncify] TuckerMetaEngineDetection::~TuckerMetaEngineDetection\28\29 can change the state due to AdvancedMetaEngineDetection::~AdvancedMetaEngineDetection\28\29
[asyncify] TwinEMetaEngineDetection::~TwinEMetaEngineDetection\28\29 can change the state due to AdvancedMetaEngineDetection::~AdvancedMetaEngineDetection\28\29
[asyncify] UltimaMetaEngineDetection::~UltimaMetaEngineDetection\28\29 can change the state due to AdvancedMetaEngineDetection::~AdvancedMetaEngineDetection\28\29
[asyncify] VoyeurMetaEngineDetection::~VoyeurMetaEngineDetection\28\29 can change the state due to AdvancedMetaEngineDetection::~AdvancedMetaEngineDetection\28\29
[asyncify] WageMetaEngineDetection::~WageMetaEngineDetection\28\29 can change the state due to AdvancedMetaEngineDetection::~AdvancedMetaEngineDetection\28\29
[asyncify] Wintermute::WintermuteMetaEngineDetection::~WintermuteMetaEngineDetection\28\29 can change the state due to AdvancedMetaEngineDetection::~AdvancedMetaEngineDetection\28\29
[asyncify] XeenMetaEngineDetection::~XeenMetaEngineDetection\28\29 can change the state due to AdvancedMetaEngineDetection::~AdvancedMetaEngineDetection\28\29
[asyncify] ZVisionMetaEngineDetection::~ZVisionMetaEngineDetection\28\29 can change the state due to AdvancedMetaEngineDetection::~AdvancedMetaEngineDetection\28\29
[asyncify] SF2File::~SF2File\28\29.1 can change the state due to SF2File::~SF2File\28\29
[asyncify] VGMItem::~VGMItem\28\29 can change the state due to VGMItem::~VGMItem\28\29.1
[asyncify] VGMSamp::~VGMSamp\28\29.1 can change the state due to VGMSamp::~VGMSamp\28\29
[asyncify] PSXSamp::~PSXSamp\28\29 can change the state due to VGMSamp::~VGMSamp\28\29
[asyncify] Common::ConfigManager::removeMiscDomain\28Common::String\20const&\29 can change the state due to Common::HashMap<Common::String\2c\20Common::ConfigManager::Domain\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>::erase\28Common::String\20const&\29
[asyncify] Common::ConfigManager::~ConfigManager\28\29.1 can change the state due to Common::ConfigManager::~ConfigManager\28\29
[asyncify] Common::DebugManager::~DebugManager\28\29 can change the state due to Common::HashMap<Common::String\2c\20Common::DebugManager::DebugChannel\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>::~HashMap\28\29
[asyncify] Common::DebugManager::~DebugManager\28\29.1 can change the state due to Common::HashMap<Common::String\2c\20Common::DebugManager::DebugChannel\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>::~HashMap\28\29
[asyncify] MetaEngineDetection::parseAndCustomizeGuiOptions\28Common::String\20const&\2c\20Common::String\20const&\29\20const can change the state due to Common::parseGameGUIOptions\28Common::String\20const&\29
[asyncify] ChRootFilesystemNode::addPathComponent\28Common::String\20const&\2c\20Common::String\20const&\29 can change the state due to Common::String::format\28char\20const*\2c\20...\29
[asyncify] Lua::LuaFileConfig::formatDouble\28double\29 can change the state due to Common::String::format\28char\20const*\2c\20...\29
[asyncify] Engine::getSaveStateName\28int\29\20const can change the state due to Common::String::format\28char\20const*\2c\20...\29
[asyncify] Graphics::MacMenu::getAcceleratorString\28Graphics::MacMenuItem*\2c\20char\20const*\29 can change the state due to Common::String::format\28char\20const*\2c\20...\29
[asyncify] Graphics::MacFontRun::toString\28\29 can change the state due to Common::String::format\28char\20const*\2c\20...\29
[asyncify] Math::operator<<\28Common::StreamDebug&\2c\20Math::Angle\20const&\29 can change the state due to Common::StreamDebug::space\28\29
[asyncify] Math::operator<<\28Common::StreamDebug&\2c\20Math::Line2d\20const&\29 can change the state due to Common::StreamDebug::space\28\29
[asyncify] Common::MainTranslationManager::~MainTranslationManager\28\29 can change the state due to Common::TranslationManager::~TranslationManager\28\29
[asyncify] Common::MainTranslationManager::~MainTranslationManager\28\29.1 can change the state due to Common::TranslationManager::~TranslationManager\28\29
[asyncify] Common::MacVISEArchive::hasFile\28Common::Path\20const&\29\20const can change the state due to Common::MacVISEArchive::getFileDescIndex\28Common::Path\20const&\2c\20unsigned\20int&\2c\20Common::MacVISEArchive::ArchiveMember::SubstreamType&\29\20const
[asyncify] Graphics::WinFont::~WinFont\28\29.1 can change the state due to Graphics::WinFont::~WinFont\28\29
[asyncify] Common::Keymapper::cleanupGameKeymaps\28\29 can change the state due to Common::Keymap::~Keymap\28\29
[asyncify] Common::Keymap::unregisterMapping\28Common::Action*\29 can change the state due to Common::HashMap<Common::HardwareInput\2c\20Common::Array<Common::Action*>\2c\20Common::HardwareInput_Hash\2c\20Common::HardwareInput_EqualTo>::erase\28Common::HashMap<Common::HardwareInput\2c\20Common::Array<Common::Action*>\2c\20Common::HardwareInput_Hash\2c\20Common::HardwareInput_EqualTo>::IteratorImpl<Common::HashMap<Common::HardwareInput\2c\20Common::Array<Common::Action*>\2c\20Common::HardwareInput_Hash\2c\20Common::HardwareInput_EqualTo>::Node>\29
[asyncify] virtual\20thunk\20to\20OSystem_POSIX::getDefaultConfigFileName\28\29 can change the state due to OSystem_POSIX::getDefaultConfigFileName\28\29
[asyncify] Common::INIFile::clear\28\29 can change the state due to Common::List<Common::INIFile::Section>::clear\28\29
[asyncify] Common::AchievementsManager::~AchievementsManager\28\29.1 can change the state due to Common::AchievementsManager::~AchievementsManager\28\29
[asyncify] void\20Common::sort<DetectedGame*\2c\20GUI::GameTargetLess>\28DetectedGame*\2c\20DetectedGame*\2c\20GUI::GameTargetLess\29 can change the state due to void\20SWAP<DetectedGame>\28DetectedGame&\2c\20DetectedGame&\29
[asyncify] void\20Common::sort<DetectedGame*\2c\20GUI::GameDescLess>\28DetectedGame*\2c\20DetectedGame*\2c\20GUI::GameDescLess\29 can change the state due to void\20SWAP<DetectedGame>\28DetectedGame&\2c\20DetectedGame&\29
[asyncify] GUI::MetadataParser::CustomXMLKeyLayout::~CustomXMLKeyLayout\28\29 can change the state due to Common::XMLParser::XMLKeyLayout::~XMLKeyLayout\28\29
[asyncify] GUI::ThemeParser::CustomXMLKeyLayout::~CustomXMLKeyLayout\28\29 can change the state due to Common::XMLParser::XMLKeyLayout::~XMLKeyLayout\28\29
[asyncify] Graphics::MacText::getSelection\28bool\2c\20bool\29 can change the state due to Graphics::MacText::getTextChunk\28int\2c\20int\2c\20int\2c\20int\2c\20bool\2c\20bool\29
[asyncify] Graphics::MacText::getEditedString\28\29 can change the state due to Graphics::MacText::getTextChunk\28int\2c\20int\2c\20int\2c\20int\2c\20bool\2c\20bool\29
[asyncify] Graphics::MacTextWindow::getSelection\28bool\2c\20bool\29 can change the state due to Graphics::MacText::getTextChunk\28int\2c\20int\2c\20int\2c\20int\2c\20bool\2c\20bool\29
[asyncify] GlkMetaEngineDetection::findGame\28char\20const*\29\20const can change the state due to Glk::Comprehend::ComprehendMetaEngine::findGame\28char\20const*\29
[asyncify] virtual\20thunk\20to\20OSystem_SDL::getSystemLanguage\28\29\20const can change the state due to OSystem_SDL::getSystemLanguage\28\29\20const
[asyncify] Common::HardwareInput::operator=\28Common::HardwareInput&&\29 can change the state due to Common::String::operator=\28Common::String&&\29
[asyncify] QualifiedGameDescriptor::operator=\28QualifiedGameDescriptor&&\29 can change the state due to Common::String::operator=\28Common::String&&\29
[asyncify] Common::XMLParser::loadStream\28Common::SeekableReadStream*\29 can change the state due to Common::String::operator=\28char\20const*\29
[asyncify] Graphics::MacFont::setName\28char\20const*\29 can change the state due to Common::String::operator=\28char\20const*\29
[asyncify] Common::TranslationManager::getTranslation\28char\20const*\29\20const can change the state due to Common::TranslationManager::getTranslation\28char\20const*\2c\20char\20const*\29\20const
[asyncify] Common::TranslationManager::getTranslation\28Common::String\20const&\29\20const can change the state due to Common::TranslationManager::getTranslation\28char\20const*\2c\20char\20const*\29\20const
[asyncify] Common::TranslationManager::getTranslation\28Common::String\20const&\2c\20Common::String\20const&\29\20const can change the state due to Common::TranslationManager::getTranslation\28char\20const*\2c\20char\20const*\29\20const
[asyncify] void\20Common::sort<Common::TLanguage*\2c\20Common::Less<Common::TLanguage>>\28Common::TLanguage*\2c\20Common::TLanguage*\2c\20Common::Less<Common::TLanguage>\29 can change the state due to Common::TLanguage*\20Common::sortPartition<Common::TLanguage*\2c\20Common::Less<Common::TLanguage>>\28Common::TLanguage*\2c\20Common::TLanguage*\2c\20Common::TLanguage*\2c\20Common::Less<Common::TLanguage>&\29
[asyncify] Graphics::MacText::getPlainText\28\29 can change the state due to Common::U32String::operator+=\28Common::U32String\20const&\29
[asyncify] void\20Common::sort<Common::U32String*\2c\20Common::Less<Common::U32String>>\28Common::U32String*\2c\20Common::U32String*\2c\20Common::Less<Common::U32String>\29 can change the state due to Common::U32String*\20Common::sortPartition<Common::U32String*\2c\20Common::Less<Common::U32String>>\28Common::U32String*\2c\20Common::U32String*\2c\20Common::U32String*\2c\20Common::Less<Common::U32String>&\29
[asyncify] GUI::GridWidget::setGroupHeaderFormat\28Common::U32String\20const&\2c\20Common::U32String\20const&\29 can change the state due to Common::U32String::operator=\28Common::U32String\20const&\29
[asyncify] GUI::GroupedListWidget::setGroupHeaderFormat\28Common::U32String\20const&\2c\20Common::U32String\20const&\29 can change the state due to Common::U32String::operator=\28Common::U32String\20const&\29
[asyncify] OpenGL::OpenGLGraphicsManager::displayMessageOnOSD\28Common::U32String\20const&\29 can change the state due to Common::U32String::operator=\28Common::U32String\20const&\29
[asyncify] virtual\20thunk\20to\20OpenGL::OpenGLGraphicsManager::displayMessageOnOSD\28Common::U32String\20const&\29 can change the state due to Common::U32String::operator=\28Common::U32String\20const&\29
[asyncify] OSystem::setTextInClipboard\28Common::U32String\20const&\29 can change the state due to Common::U32String::operator=\28Common::U32String\20const&\29
[asyncify] Common::convertUtf8ToUtf32\28Common::String\20const&\29 can change the state due to Common::U32String::decodeUTF8\28char\20const*\2c\20unsigned\20int\29
[asyncify] GUI::ListWidget::escapeString\28Common::U32String\20const&\29 can change the state due to Common::U32String::operator+=\28char32_t\29
[asyncify] GUI::Widget::cleanupHotkey\28Common::U32String\20const&\29 can change the state due to Common::U32String::operator+=\28char32_t\29
[asyncify] GUI::ListWidget::getThemeColor\28GUI::ThemeEngine::FontColor\29 can change the state due to Common::U32String::U32String\28char\20const*\2c\20Common::CodePage\29
[asyncify] POSIXFilesystemNode::getDisplayName\28\29\20const can change the state due to Common::U32String::U32String\28Common::String\20const&\2c\20Common::CodePage\29
[asyncify] Common::StuffItArchive::translatePath\28Common::Path\20const&\29\20const can change the state due to Common::Path::toString\28char\29\20const
[asyncify] Common::ArjArchive::translatePath\28Common::Path\20const&\29\20const can change the state due to Common::Path::toString\28char\29\20const
[asyncify] Common::ZipArchive::translatePath\28Common::Path\20const&\29\20const can change the state due to Common::Path::toString\28char\29\20const
[asyncify] Image::Indeo::IVI45DecContext::IVI45DecContext\28\29 can change the state due to Image::Indeo::IVIHuffDesc::createHuffFromDesc\28Image::Indeo::VLC*\2c\20bool\29\20const
[asyncify] Graphics::TTFFont::drawChar\28Graphics::Surface*\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20int\29\20const can change the state due to Graphics::TTFFont::drawChar\28Graphics::Surface*\2c\20unsigned\20int\2c\20int\2c\20int\2c\20unsigned\20int\2c\20unsigned\20int\20const*\29\20const
[asyncify] void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29
[asyncify] TinyGL::FrameBuffer::fillTriangleSmooth\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20true\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29
[asyncify] Common::ConfigManager::hasKey\28Common::String\20const&\2c\20Common::String\20const&\29\20const can change the state due to Common::ConfigManager::getDomain\28Common::String\20const&\29\20const
[asyncify] TinyGL::BlittingDrawCall::execute\28bool\29\20const can change the state due to TinyGL::Internal::tglBlitNoBlend\28TinyGL::BlitImage*\2c\20TinyGL::BlitTransform\20const&\29
[asyncify] TinyGL::FrameBuffer::fillTriangleFlat\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20false\2c\20false\2c\20false>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29
[asyncify] str_byte\28lua_State*\29 can change the state due to luaL_error\28lua_State*\2c\20char\20const*\2c\20...\29
[asyncify] str_format\28lua_State*\29 can change the state due to luaL_error\28lua_State*\2c\20char\20const*\2c\20...\29
[asyncify] gfind_nodef\28lua_State*\29 can change the state due to luaL_error\28lua_State*\2c\20char\20const*\2c\20...\29
[asyncify] match\28MatchState*\2c\20char\20const*\2c\20char\20const*\29 can change the state due to luaL_error\28lua_State*\2c\20char\20const*\2c\20...\29
[asyncify] tinsert\28lua_State*\29 can change the state due to luaL_error\28lua_State*\2c\20char\20const*\2c\20...\29
[asyncify] auxsort\28lua_State*\2c\20int\2c\20int\29 can change the state due to luaL_error\28lua_State*\2c\20char\20const*\2c\20...\29
[asyncify] luaL_checkstack\28lua_State*\2c\20int\2c\20char\20const*\29 can change the state due to luaL_error\28lua_State*\2c\20char\20const*\2c\20...\29
[asyncify] luaB_assert\28lua_State*\29 can change the state due to luaL_error\28lua_State*\2c\20char\20const*\2c\20...\29
[asyncify] luaB_setfenv\28lua_State*\29 can change the state due to luaL_error\28lua_State*\2c\20char\20const*\2c\20...\29
[asyncify] luaB_setmetatable\28lua_State*\29 can change the state due to luaL_error\28lua_State*\2c\20char\20const*\2c\20...\29
[asyncify] db_setfenv\28lua_State*\29 can change the state due to luaL_error\28lua_State*\2c\20char\20const*\2c\20...\29
[asyncify] io_tmpfile\28lua_State*\29 can change the state due to luaL_error\28lua_State*\2c\20char\20const*\2c\20...\29
[asyncify] io_type\28lua_State*\29 can change the state due to luaL_error\28lua_State*\2c\20char\20const*\2c\20...\29
[asyncify] math_random\28lua_State*\29 can change the state due to luaL_error\28lua_State*\2c\20char\20const*\2c\20...\29
[asyncify] os_tmpname\28lua_State*\29 can change the state due to luaL_error\28lua_State*\2c\20char\20const*\2c\20...\29
[asyncify] gmatch_aux\28lua_State*\29 can change the state due to lua_replace\28lua_State*\2c\20int\29
[asyncify] lua_next\28lua_State*\2c\20int\29 can change the state due to luaH_next\28lua_State*\2c\20Table*\2c\20lua_TValue*\29
[asyncify] lua_rawset\28lua_State*\2c\20int\29 can change the state due to luaH_set\28lua_State*\2c\20Table*\2c\20lua_TValue\20const*\29
[asyncify] luaB_yield\28lua_State*\29 can change the state due to lua_yield\28lua_State*\2c\20int\29
[asyncify] lua_lessthan\28lua_State*\2c\20int\2c\20int\29 can change the state due to luaV_lessthan\28lua_State*\2c\20lua_TValue\20const*\2c\20lua_TValue\20const*\29
[asyncify] callallgcTM\28lua_State*\2c\20void*\29 can change the state due to luaC_callGCTM\28lua_State*\29
[asyncify] lua_rawseti\28lua_State*\2c\20int\2c\20int\29 can change the state due to luaH_setnum\28lua_State*\2c\20Table*\2c\20int\29
[asyncify] db_sethook\28lua_State*\29 can change the state due to gethooktable\28lua_State*\29
[asyncify] str_char\28lua_State*\29 can change the state due to luaL_argerror\28lua_State*\2c\20int\2c\20char\20const*\29
[asyncify] tconcat\28lua_State*\29 can change the state due to luaL_argerror\28lua_State*\2c\20int\2c\20char\20const*\29
[asyncify] luaL_typerror\28lua_State*\2c\20int\2c\20char\20const*\29 can change the state due to luaL_argerror\28lua_State*\2c\20int\2c\20char\20const*\29
[asyncify] luaL_checkoption\28lua_State*\2c\20int\2c\20char\20const*\2c\20char\20const*\20const*\29 can change the state due to luaL_argerror\28lua_State*\2c\20int\2c\20char\20const*\29
[asyncify] luaL_checklstring\28lua_State*\2c\20int\2c\20unsigned\20long*\29 can change the state due to luaL_argerror\28lua_State*\2c\20int\2c\20char\20const*\29
[asyncify] luaL_checktype\28lua_State*\2c\20int\2c\20int\29 can change the state due to luaL_argerror\28lua_State*\2c\20int\2c\20char\20const*\29
[asyncify] luaL_checkany\28lua_State*\2c\20int\29 can change the state due to luaL_argerror\28lua_State*\2c\20int\2c\20char\20const*\29
[asyncify] luaL_checknumber\28lua_State*\2c\20int\29 can change the state due to luaL_argerror\28lua_State*\2c\20int\2c\20char\20const*\29
[asyncify] luaL_checkinteger\28lua_State*\2c\20int\29 can change the state due to luaL_argerror\28lua_State*\2c\20int\2c\20char\20const*\29
[asyncify] luaB_select\28lua_State*\29 can change the state due to luaL_argerror\28lua_State*\2c\20int\2c\20char\20const*\29
[asyncify] luaB_tonumber\28lua_State*\29 can change the state due to luaL_argerror\28lua_State*\2c\20int\2c\20char\20const*\29
[asyncify] db_setmetatable\28lua_State*\29 can change the state due to luaL_argerror\28lua_State*\2c\20int\2c\20char\20const*\29
[asyncify] luaB_getfenv\28lua_State*\29 can change the state due to getfunc\28lua_State*\2c\20int\29
[asyncify] luaB_loadstring\28lua_State*\29 can change the state due to luaL_loadbuffer\28lua_State*\2c\20char\20const*\2c\20unsigned\20long\2c\20char\20const*\29
[asyncify] luaL_register\28lua_State*\2c\20char\20const*\2c\20luaL_Reg\20const*\29 can change the state due to luaL_openlib\28lua_State*\2c\20char\20const*\2c\20luaL_Reg\20const*\2c\20int\29
[asyncify] luaB_collectgarbage\28lua_State*\29 can change the state due to lua_gc\28lua_State*\2c\20int\2c\20int\29
[asyncify] luaB_gcinfo\28lua_State*\29 can change the state due to lua_gc\28lua_State*\2c\20int\2c\20int\29
[asyncify] luaL_ref\28lua_State*\2c\20int\29 can change the state due to lua_objlen\28lua_State*\2c\20int\29
[asyncify] str_find_aux\28lua_State*\2c\20int\29 can change the state due to push_onecapture\28MatchState*\2c\20int\2c\20char\20const*\2c\20char\20const*\29
[asyncify] tremove\28lua_State*\29 can change the state due to luaL_setn\28lua_State*\2c\20int\2c\20int\29
[asyncify] setn\28lua_State*\29 can change the state due to luaL_setn\28lua_State*\2c\20int\2c\20int\29
[asyncify] getn\28lua_State*\29 can change the state due to luaL_getn\28lua_State*\2c\20int\29
[asyncify] sort\28lua_State*\29 can change the state due to luaL_getn\28lua_State*\2c\20int\29
[asyncify] luaB_unpack\28lua_State*\29 can change the state due to luaL_getn\28lua_State*\2c\20int\29
[asyncify] str_lower\28lua_State*\29 can change the state due to luaL_prepbuffer\28luaL_Buffer*\29
[asyncify] str_reverse\28lua_State*\29 can change the state due to luaL_prepbuffer\28luaL_Buffer*\29
[asyncify] str_upper\28lua_State*\29 can change the state due to luaL_prepbuffer\28luaL_Buffer*\29
[asyncify] luaL_addlstring\28luaL_Buffer*\2c\20char\20const*\2c\20unsigned\20long\29 can change the state due to luaL_prepbuffer\28luaL_Buffer*\29
[asyncify] luaL_addstring\28luaL_Buffer*\2c\20char\20const*\29 can change the state due to luaL_prepbuffer\28luaL_Buffer*\29
[asyncify] str_rep\28lua_State*\29 can change the state due to luaL_pushresult\28luaL_Buffer*\29
[asyncify] luaB_getmetatable\28lua_State*\29 can change the state due to luaL_getmetafield\28lua_State*\2c\20int\2c\20char\20const*\29
[asyncify] db_getupvalue\28lua_State*\29 can change the state due to auxupvalue\28lua_State*\2c\20int\29
[asyncify] db_setupvalue\28lua_State*\29 can change the state due to auxupvalue\28lua_State*\2c\20int\29
[asyncify] gctm\28lua_State*\29 can change the state due to luaL_checkudata\28lua_State*\2c\20int\2c\20char\20const*\29
[asyncify] luaX_token2str\28LexState*\2c\20int\29 can change the state due to luaO_pushfstring\28lua_State*\2c\20char\20const*\2c\20...\29
[asyncify] gzread can change the state due to gz_read
[asyncify] gzfread can change the state due to gz_read
[asyncify] gzgetc can change the state due to gz_read
[asyncify] gzgetc_ can change the state due to gz_read
[asyncify] Graphics::TTFLibrary::~TTFLibrary\28\29.1 can change the state due to Graphics::TTFLibrary::~TTFLibrary\28\29
[asyncify] vfwprintf can change the state due to wprintf_core
[asyncify] swscanf can change the state due to vswscanf
[asyncify] wscanf can change the state due to vwscanf
[asyncify] nsvg__parseColorRGB\28char\20const*\29 can change the state due to sscanf
[asyncify] nsvg__parseColor\28char\20const*\29 can change the state due to sscanf
[asyncify] getwc can change the state due to fgetwc
[asyncify] getwchar can change the state due to fgetwc
[asyncify] strtof can change the state due to strtox
[asyncify] strtod can change the state due to strtox
[asyncify] strtold can change the state due to strtox
[asyncify] wcstof can change the state due to wcstox
[asyncify] wcstod can change the state due to wcstox
[asyncify] wcstold can change the state due to wcstox
[asyncify] wcstoull can change the state due to wcstox.1
[asyncify] wcstoll can change the state due to wcstox.1
[asyncify] wcstoul can change the state due to wcstox.1
[asyncify] wcstol can change the state due to wcstox.1
[asyncify] legalstub$PosixIoStream::size\28\29\20const can change the state due to PosixIoStream::size\28\29\20const
[asyncify] legalstub$non-virtual\20thunk\20to\20PosixIoStream::size\28\29\20const can change the state due to non-virtual\20thunk\20to\20PosixIoStream::size\28\29\20const
[asyncify] __getopt_long can change the state due to __getopt_long_core
[asyncify] parse_atom can change the state due to parse_bracket
[asyncify] err can change the state due to verr
[asyncify] errx can change the state due to verrx
[asyncify] fmtmsg can change the state due to dprintf
[asyncify] SDL_PrivateAppendToMappingString can change the state due to SDL_snprintf
[asyncify] GuessControllerType can change the state due to SDL_snprintf
[asyncify] __dl_seterr can change the state due to __dl_vseterr
[asyncify] error can change the state due to __dl_vseterr
[asyncify] gz_open can change the state due to snprintf
[asyncify] gzdopen can change the state due to snprintf
[asyncify] gz_error can change the state due to snprintf
[asyncify] __asctime_r can change the state due to snprintf
[asyncify] confstr can change the state due to snprintf
[asyncify] dcngettext can change the state due to snprintf
[asyncify] inet_ntoa can change the state due to snprintf
[asyncify] inet_ntop can change the state due to snprintf
[asyncify] openpty can change the state due to snprintf
[asyncify] __ptsname_r can change the state due to snprintf
[asyncify] regerror can change the state due to snprintf
[asyncify] vstrfmon_l can change the state due to snprintf
[asyncify] std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20std::__2::\28anonymous\20namespace\29::as_string<std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\2c\20int\20\28*\29\28char*\2c\20unsigned\20long\2c\20char\20const*\2c\20...\29\2c\20float>\28int\20\28*\29\28char*\2c\20unsigned\20long\2c\20char\20const*\2c\20...\29\2c\20std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\2c\20std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::value_type\20const*\2c\20float\29 can change the state due to snprintf
[asyncify] std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20std::__2::\28anonymous\20namespace\29::as_string<std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\2c\20int\20\28*\29\28char*\2c\20unsigned\20long\2c\20char\20const*\2c\20...\29\2c\20double>\28int\20\28*\29\28char*\2c\20unsigned\20long\2c\20char\20const*\2c\20...\29\2c\20std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\2c\20std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::value_type\20const*\2c\20double\29 can change the state due to snprintf
[asyncify] std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20std::__2::\28anonymous\20namespace\29::as_string<std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\2c\20int\20\28*\29\28char*\2c\20unsigned\20long\2c\20char\20const*\2c\20...\29\2c\20long\20double>\28int\20\28*\29\28char*\2c\20unsigned\20long\2c\20char\20const*\2c\20...\29\2c\20std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\2c\20std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::value_type\20const*\2c\20long\20double\29 can change the state due to snprintf
[asyncify] std::__2::\28anonymous\20namespace\29::do_strerror_r\28int\29 can change the state due to snprintf
[asyncify] \28anonymous\20namespace\29::itanium_demangle::FloatLiteralImpl<float>::printLeft\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\29\20const can change the state due to snprintf
[asyncify] \28anonymous\20namespace\29::itanium_demangle::FloatLiteralImpl<double>::printLeft\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\29\20const can change the state due to snprintf
[asyncify] \28anonymous\20namespace\29::itanium_demangle::FloatLiteralImpl<long\20double>::printLeft\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\29\20const can change the state due to snprintf
[asyncify] __vsyslog can change the state due to _vsyslog
[asyncify] asprintf can change the state due to vasprintf
[asyncify] std::__2::__libcpp_asprintf_l\28char**\2c\20__locale_struct*\2c\20char\20const*\2c\20...\29 can change the state due to vasprintf
[asyncify] sprintf can change the state due to vsprintf
[asyncify] std::__2::__fs::filesystem::detail::\28anonymous\20namespace\29::ErrorHandler<void>::report_impl\28std::__2::error_code\20const&\2c\20char\20const*\2c\20void*\29\20const can change the state due to std::__2::__fs::filesystem::detail::\28anonymous\20namespace\29::format_string_impl\28char\20const*\2c\20void*\29
[asyncify] std::__2::__fs::filesystem::detail::\28anonymous\20namespace\29::format_string\28char\20const*\2c\20...\29 can change the state due to std::__2::__fs::filesystem::detail::\28anonymous\20namespace\29::format_string_impl\28char\20const*\2c\20void*\29.1
[asyncify] std::__2::__fs::filesystem::detail::\28anonymous\20namespace\29::ErrorHandler<bool>::report_impl\28std::__2::error_code\20const&\2c\20char\20const*\2c\20void*\29\20const can change the state due to std::__2::__fs::filesystem::detail::\28anonymous\20namespace\29::format_string_impl\28char\20const*\2c\20void*\29.1
[asyncify] std::__2::__fs::filesystem::detail::\28anonymous\20namespace\29::ErrorHandler<std::__2::__fs::filesystem::path>::report_impl\28std::__2::error_code\20const&\2c\20char\20const*\2c\20void*\29\20const can change the state due to std::__2::__fs::filesystem::detail::\28anonymous\20namespace\29::format_string_impl\28char\20const*\2c\20void*\29.1
[asyncify] std::__2::__fs::filesystem::detail::\28anonymous\20namespace\29::ErrorHandler<void>::report_impl\28std::__2::error_code\20const&\2c\20char\20const*\2c\20void*\29\20const.1 can change the state due to std::__2::__fs::filesystem::detail::\28anonymous\20namespace\29::format_string_impl\28char\20const*\2c\20void*\29.1
[asyncify] std::__2::\28anonymous\20namespace\29::throw_from_string_out_of_range\28std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\29 can change the state due to void\20std::__2::\28anonymous\20namespace\29::throw_helper<std::out_of_range>\28std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\29
[asyncify] std::__2::\28anonymous\20namespace\29::throw_from_string_invalid_arg\28std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\29 can change the state due to void\20std::__2::\28anonymous\20namespace\29::throw_helper<std::invalid_argument>\28std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\29
[asyncify] siprintf can change the state due to vsiprintf
[asyncify] __small_sprintf can change the state due to __small_vsprintf
[asyncify] std::__2::__fs::filesystem::directory_iterator::directory_iterator\5babi:v15006\5d\28std::__2::__fs::filesystem::path\20const&\2c\20std::__2::error_code&\29 can change the state due to std::__2::__fs::filesystem::directory_iterator::directory_iterator\28std::__2::__fs::filesystem::path\20const&\2c\20std::__2::error_code*\2c\20std::__2::__fs::filesystem::directory_options\29
[asyncify] std::__2::__fs::filesystem::directory_iterator::directory_iterator\5babi:v15006\5d\28std::__2::__fs::filesystem::path\20const&\29 can change the state due to std::__2::__fs::filesystem::directory_iterator::directory_iterator\28std::__2::__fs::filesystem::path\20const&\2c\20std::__2::error_code*\2c\20std::__2::__fs::filesystem::directory_options\29
[asyncify] std::__2::__fs::filesystem::directory_iterator::__increment\28std::__2::error_code*\29 can change the state due to std::__2::shared_ptr<std::__2::__fs::filesystem::__dir_stream>::reset\5babi:v15006\5d\28\29
[asyncify] std::__2::__fs::filesystem::recursive_directory_iterator::__advance\28std::__2::error_code*\29 can change the state due to std::__2::__fs::filesystem::directory_iterator::~directory_iterator\5babi:v15006\5d\28\29
[asyncify] std::__2::__fs::filesystem::__copy\28std::__2::__fs::filesystem::path\20const&\2c\20std::__2::__fs::filesystem::path\20const&\2c\20std::__2::__fs::filesystem::copy_options\2c\20std::__2::error_code*\29 can change the state due to std::__2::__fs::filesystem::directory_iterator::~directory_iterator\5babi:v15006\5d\28\29
[asyncify] std::__2::__fs::filesystem::__fs_is_empty\28std::__2::__fs::filesystem::path\20const&\2c\20std::__2::error_code*\29 can change the state due to std::__2::__fs::filesystem::directory_iterator::~directory_iterator\5babi:v15006\5d\28\29
[asyncify] std::__2::__fs::filesystem::recursive_directory_iterator::__pop\28std::__2::error_code*\29 can change the state due to std::__2::shared_ptr<std::__2::__fs::filesystem::recursive_directory_iterator::__shared_imp>::reset\5babi:v15006\5d\28\29
[asyncify] std::__2::__fs::filesystem::recursive_directory_iterator::__try_recursion\28std::__2::error_code*\29 can change the state due to std::__2::shared_ptr<std::__2::__fs::filesystem::recursive_directory_iterator::__shared_imp>::reset\5babi:v15006\5d\28\29
[asyncify] std::__2::__fs::filesystem::filesystem_error::~filesystem_error\28\29.1 can change the state due to std::__2::__fs::filesystem::filesystem_error::~filesystem_error\28\29
[asyncify] std::__2::locale::__imp&\20std::__2::\28anonymous\20namespace\29::make<std::__2::locale::__imp\2c\20unsigned\20int>\28unsigned\20int\29 can change the state due to std::__2::locale::__imp::__imp\28unsigned\20long\29
[asyncify] std::__2::basic_stringbuf<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::~basic_stringbuf\28\29.1 can change the state due to std::__2::basic_stringbuf<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::~basic_stringbuf\28\29
[asyncify] std::__2::basic_stringstream<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::~basic_stringstream\28\29.1 can change the state due to std::__2::basic_stringbuf<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::~basic_stringbuf\28\29
[asyncify] std::__2::basic_ostringstream<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::~basic_ostringstream\28\29.1 can change the state due to std::__2::basic_stringbuf<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::~basic_stringbuf\28\29
[asyncify] std::__2::basic_istringstream<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::~basic_istringstream\28\29.1 can change the state due to std::__2::basic_stringbuf<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::~basic_stringbuf\28\29
[asyncify] std::__2::basic_filebuf<char\2c\20std::__2::char_traits<char>>::swap\28std::__2::basic_filebuf<char\2c\20std::__2::char_traits<char>>&\29 can change the state due to std::__2::basic_streambuf<char\2c\20std::__2::char_traits<char>>::swap\28std::__2::basic_streambuf<char\2c\20std::__2::char_traits<char>>&\29
[asyncify] std::__2::strstreambuf::swap\28std::__2::strstreambuf&\29 can change the state due to std::__2::basic_streambuf<char\2c\20std::__2::char_traits<char>>::swap\28std::__2::basic_streambuf<char\2c\20std::__2::char_traits<char>>&\29
[asyncify] std::__2::basic_ios<char\2c\20std::__2::char_traits<char>>::swap\5babi:v15006\5d\28std::__2::basic_ios<char\2c\20std::__2::char_traits<char>>&\29 can change the state due to std::__2::ios_base::swap\28std::__2::ios_base&\29
[asyncify] legalstub$std::__2::num_put<char\2c\20std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>>::do_put\28std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::ios_base&\2c\20char\2c\20long\20long\29\20const can change the state due to std::__2::num_put<char\2c\20std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>>::do_put\28std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::ios_base&\2c\20char\2c\20long\20long\29\20const
[asyncify] legalstub$std::__2::num_put<char\2c\20std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>>::do_put\28std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::ios_base&\2c\20char\2c\20unsigned\20long\20long\29\20const can change the state due to std::__2::num_put<char\2c\20std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>>::do_put\28std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::ios_base&\2c\20char\2c\20unsigned\20long\20long\29\20const
[asyncify] legalstub$std::__2::num_put<wchar_t\2c\20std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>::do_put\28std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::ios_base&\2c\20wchar_t\2c\20long\20long\29\20const can change the state due to std::__2::num_put<wchar_t\2c\20std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>::do_put\28std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::ios_base&\2c\20wchar_t\2c\20long\20long\29\20const
[asyncify] legalstub$std::__2::num_put<wchar_t\2c\20std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>::do_put\28std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::ios_base&\2c\20wchar_t\2c\20unsigned\20long\20long\29\20const can change the state due to std::__2::num_put<wchar_t\2c\20std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>::do_put\28std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::ios_base&\2c\20wchar_t\2c\20unsigned\20long\20long\29\20const
[asyncify] std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>\20std::__2::copy\5babi:v15006\5d<std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>>\28std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>\29 can change the state due to std::__2::pair<std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>>\20std::__2::__copy\5babi:v15006\5d<std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\200>\28std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>\29
[asyncify] std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>\20std::__2::copy\5babi:v15006\5d<char*\2c\20std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>>\28char*\2c\20char*\2c\20std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>\29 can change the state due to std::__2::pair<char*\2c\20std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>>\20std::__2::__copy\5babi:v15006\5d<char*\2c\20char*\2c\20std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\200>\28char*\2c\20char*\2c\20std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>\29
[asyncify] std::__2::time_get_byname<wchar_t\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>::time_get_byname\5babi:v15006\5d\28std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\2c\20unsigned\20long\29 can change the state due to std::__2::__time_get_storage<wchar_t>::__time_get_storage\28std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\29
[asyncify] std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\20std::__2::copy\5babi:v15006\5d<wchar_t*\2c\20std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>\28wchar_t*\2c\20wchar_t*\2c\20std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\29 can change the state due to std::__2::pair<wchar_t*\2c\20std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>\20std::__2::__copy\5babi:v15006\5d<wchar_t*\2c\20wchar_t*\2c\20std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\200>\28wchar_t*\2c\20wchar_t*\2c\20std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\29
[asyncify] std::__2::basic_ifstream<char\2c\20std::__2::char_traits<char>>::~basic_ifstream\28\29.2 can change the state due to std::__2::basic_ifstream<char\2c\20std::__2::char_traits<char>>::~basic_ifstream\28\29
[asyncify] virtual\20thunk\20to\20std::__2::basic_ifstream<char\2c\20std::__2::char_traits<char>>::~basic_ifstream\28\29 can change the state due to std::__2::basic_ifstream<char\2c\20std::__2::char_traits<char>>::~basic_ifstream\28\29
[asyncify] std::__2::basic_ofstream<char\2c\20std::__2::char_traits<char>>::~basic_ofstream\28\29.2 can change the state due to std::__2::basic_ofstream<char\2c\20std::__2::char_traits<char>>::~basic_ofstream\28\29
[asyncify] virtual\20thunk\20to\20std::__2::basic_ofstream<char\2c\20std::__2::char_traits<char>>::~basic_ofstream\28\29 can change the state due to std::__2::basic_ofstream<char\2c\20std::__2::char_traits<char>>::~basic_ofstream\28\29
[asyncify] virtual\20thunk\20to\20std::__2::basic_istream<char\2c\20std::__2::char_traits<char>>::~basic_istream\28\29 can change the state due to std::__2::basic_istream<char\2c\20std::__2::char_traits<char>>::~basic_istream\28\29.1
[asyncify] std::__2::basic_istream<char\2c\20std::__2::char_traits<char>>::~basic_istream\28\29.2 can change the state due to std::__2::basic_istream<char\2c\20std::__2::char_traits<char>>::~basic_istream\28\29.1
[asyncify] virtual\20thunk\20to\20std::__2::basic_ostream<char\2c\20std::__2::char_traits<char>>::~basic_ostream\28\29 can change the state due to std::__2::basic_ostream<char\2c\20std::__2::char_traits<char>>::~basic_ostream\28\29.1
[asyncify] std::__2::basic_ostream<char\2c\20std::__2::char_traits<char>>::~basic_ostream\28\29.2 can change the state due to std::__2::basic_ostream<char\2c\20std::__2::char_traits<char>>::~basic_ostream\28\29.1
[asyncify] non-virtual\20thunk\20to\20std::__2::basic_iostream<char\2c\20std::__2::char_traits<char>>::~basic_iostream\28\29 can change the state due to std::__2::basic_iostream<char\2c\20std::__2::char_traits<char>>::~basic_iostream\28\29.1
[asyncify] virtual\20thunk\20to\20std::__2::basic_iostream<char\2c\20std::__2::char_traits<char>>::~basic_iostream\28\29 can change the state due to std::__2::basic_iostream<char\2c\20std::__2::char_traits<char>>::~basic_iostream\28\29.1
[asyncify] std::__2::basic_iostream<char\2c\20std::__2::char_traits<char>>::~basic_iostream\28\29.2 can change the state due to std::__2::basic_iostream<char\2c\20std::__2::char_traits<char>>::~basic_iostream\28\29.1
[asyncify] std::__2::basic_stringstream<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::~basic_stringstream\28\29.2 can change the state due to std::__2::basic_stringstream<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::~basic_stringstream\28\29
[asyncify] non-virtual\20thunk\20to\20std::__2::basic_stringstream<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::~basic_stringstream\28\29 can change the state due to std::__2::basic_stringstream<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::~basic_stringstream\28\29
[asyncify] virtual\20thunk\20to\20std::__2::basic_stringstream<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::~basic_stringstream\28\29 can change the state due to std::__2::basic_stringstream<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::~basic_stringstream\28\29
[asyncify] std::__2::basic_ostringstream<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::~basic_ostringstream\28\29.2 can change the state due to std::__2::basic_ostringstream<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::~basic_ostringstream\28\29
[asyncify] virtual\20thunk\20to\20std::__2::basic_ostringstream<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::~basic_ostringstream\28\29 can change the state due to std::__2::basic_ostringstream<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::~basic_ostringstream\28\29
[asyncify] std::__2::basic_istringstream<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::~basic_istringstream\28\29.2 can change the state due to std::__2::basic_istringstream<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::~basic_istringstream\28\29
[asyncify] virtual\20thunk\20to\20std::__2::basic_istringstream<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::~basic_istringstream\28\29 can change the state due to std::__2::basic_istringstream<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::~basic_istringstream\28\29
[asyncify] virtual\20thunk\20to\20std::__2::basic_istream<wchar_t\2c\20std::__2::char_traits<wchar_t>>::~basic_istream\28\29 can change the state due to std::__2::basic_istream<wchar_t\2c\20std::__2::char_traits<wchar_t>>::~basic_istream\28\29.1
[asyncify] std::__2::basic_istream<wchar_t\2c\20std::__2::char_traits<wchar_t>>::~basic_istream\28\29.2 can change the state due to std::__2::basic_istream<wchar_t\2c\20std::__2::char_traits<wchar_t>>::~basic_istream\28\29.1
[asyncify] virtual\20thunk\20to\20std::__2::basic_ostream<wchar_t\2c\20std::__2::char_traits<wchar_t>>::~basic_ostream\28\29 can change the state due to std::__2::basic_ostream<wchar_t\2c\20std::__2::char_traits<wchar_t>>::~basic_ostream\28\29.1
[asyncify] std::__2::basic_ostream<wchar_t\2c\20std::__2::char_traits<wchar_t>>::~basic_ostream\28\29.2 can change the state due to std::__2::basic_ostream<wchar_t\2c\20std::__2::char_traits<wchar_t>>::~basic_ostream\28\29.1
[asyncify] _GLOBAL__I_000100 can change the state due to __cxx_global_var_init
[asyncify] std::__2::__time_get_storage<char>::__time_get_storage\28std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\29 can change the state due to std::__2::__time_get_storage<char>::init\28std::__2::ctype<char>\20const&\29
[asyncify] std::__2::__time_get_storage<char>::__time_get_storage\28char\20const*\29 can change the state due to std::__2::__time_get_storage<char>::init\28std::__2::ctype<char>\20const&\29
[asyncify] void\20std::__2::__call_once_proxy\5babi:v15006\5d<std::__2::tuple<std::__2::\28anonymous\20namespace\29::__fake_bind&&>>\28void*\29 can change the state due to std::__2::__call_once_param<std::__2::tuple<std::__2::\28anonymous\20namespace\29::__fake_bind&&>>::operator\28\29\5babi:v15006\5d\28\29
[asyncify] std::__2::ctype<char>\20const&\20std::__2::use_facet\5babi:v15006\5d<std::__2::ctype<char>>\28std::__2::locale\20const&\29 can change the state due to std::__2::locale::use_facet\28std::__2::locale::id&\29\20const
[asyncify] std::__2::num_get<char\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>>\20const&\20std::__2::use_facet\5babi:v15006\5d<std::__2::num_get<char\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>>>\28std::__2::locale\20const&\29 can change the state due to std::__2::locale::use_facet\28std::__2::locale::id&\29\20const
[asyncify] std::__2::num_put<char\2c\20std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>>\20const&\20std::__2::use_facet\5babi:v15006\5d<std::__2::num_put<char\2c\20std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>>>\28std::__2::locale\20const&\29 can change the state due to std::__2::locale::use_facet\28std::__2::locale::id&\29\20const
[asyncify] std::__2::ctype<wchar_t>\20const&\20std::__2::use_facet\5babi:v15006\5d<std::__2::ctype<wchar_t>>\28std::__2::locale\20const&\29 can change the state due to std::__2::locale::use_facet\28std::__2::locale::id&\29\20const
[asyncify] std::__2::num_get<wchar_t\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>\20const&\20std::__2::use_facet\5babi:v15006\5d<std::__2::num_get<wchar_t\2c\20std::__2::istreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>>\28std::__2::locale\20const&\29 can change the state due to std::__2::locale::use_facet\28std::__2::locale::id&\29\20const
[asyncify] std::__2::num_put<wchar_t\2c\20std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>\20const&\20std::__2::use_facet\5babi:v15006\5d<std::__2::num_put<wchar_t\2c\20std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>>\28std::__2::locale\20const&\29 can change the state due to std::__2::locale::use_facet\28std::__2::locale::id&\29\20const
[asyncify] std::__2::codecvt<char\2c\20char\2c\20__mbstate_t>\20const&\20std::__2::use_facet\5babi:v15006\5d<std::__2::codecvt<char\2c\20char\2c\20__mbstate_t>>\28std::__2::locale\20const&\29 can change the state due to std::__2::locale::use_facet\28std::__2::locale::id&\29\20const
[asyncify] std::__2::codecvt<wchar_t\2c\20char\2c\20__mbstate_t>\20const&\20std::__2::use_facet\5babi:v15006\5d<std::__2::codecvt<wchar_t\2c\20char\2c\20__mbstate_t>>\28std::__2::locale\20const&\29 can change the state due to std::__2::locale::use_facet\28std::__2::locale::id&\29\20const
[asyncify] std::__2::numpunct<char>\20const&\20std::__2::use_facet\5babi:v15006\5d<std::__2::numpunct<char>>\28std::__2::locale\20const&\29 can change the state due to std::__2::locale::use_facet\28std::__2::locale::id&\29\20const
[asyncify] std::__2::numpunct<wchar_t>\20const&\20std::__2::use_facet\5babi:v15006\5d<std::__2::numpunct<wchar_t>>\28std::__2::locale\20const&\29 can change the state due to std::__2::locale::use_facet\28std::__2::locale::id&\29\20const
[asyncify] std::__2::moneypunct<char\2c\20true>\20const&\20std::__2::use_facet\5babi:v15006\5d<std::__2::moneypunct<char\2c\20true>>\28std::__2::locale\20const&\29 can change the state due to std::__2::locale::use_facet\28std::__2::locale::id&\29\20const
[asyncify] std::__2::moneypunct<char\2c\20false>\20const&\20std::__2::use_facet\5babi:v15006\5d<std::__2::moneypunct<char\2c\20false>>\28std::__2::locale\20const&\29 can change the state due to std::__2::locale::use_facet\28std::__2::locale::id&\29\20const
[asyncify] std::__2::moneypunct<wchar_t\2c\20true>\20const&\20std::__2::use_facet\5babi:v15006\5d<std::__2::moneypunct<wchar_t\2c\20true>>\28std::__2::locale\20const&\29 can change the state due to std::__2::locale::use_facet\28std::__2::locale::id&\29\20const
[asyncify] std::__2::moneypunct<wchar_t\2c\20false>\20const&\20std::__2::use_facet\5babi:v15006\5d<std::__2::moneypunct<wchar_t\2c\20false>>\28std::__2::locale\20const&\29 can change the state due to std::__2::locale::use_facet\28std::__2::locale::id&\29\20const
[asyncify] bool\20std::__2::has_facet\5babi:v15006\5d<std::__2::codecvt<char\2c\20char\2c\20__mbstate_t>>\28std::__2::locale\20const&\29 can change the state due to std::__2::locale::has_facet\28std::__2::locale::id&\29\20const
[asyncify] std::__2::__allocation_result<std::__2::allocator_traits<std::__2::allocator<char>>::pointer>\20std::__2::__allocate_at_least\5babi:v15006\5d<std::__2::allocator<char>>\28std::__2::allocator<char>&\2c\20unsigned\20long\29 can change the state due to std::__2::allocator<char>::allocate\5babi:v15006\5d\28unsigned\20long\29
[asyncify] std::__2::allocator_traits<std::__2::allocator<char>>::allocate\5babi:v15006\5d\28std::__2::allocator<char>&\2c\20unsigned\20long\29 can change the state due to std::__2::allocator<char>::allocate\5babi:v15006\5d\28unsigned\20long\29
[asyncify] std::__2::allocator_traits<std::__2::allocator<std::__2::__shared_ptr_emplace<std::__2::__fs::filesystem::__dir_stream\2c\20std::__2::allocator<std::__2::__fs::filesystem::__dir_stream>>>>::allocate\5babi:v15006\5d\28std::__2::allocator<std::__2::__shared_ptr_emplace<std::__2::__fs::filesystem::__dir_stream\2c\20std::__2::allocator<std::__2::__fs::filesystem::__dir_stream>>>&\2c\20unsigned\20long\29 can change the state due to std::__2::allocator<std::__2::__shared_ptr_emplace<std::__2::__fs::filesystem::__dir_stream\2c\20std::__2::allocator<std::__2::__fs::filesystem::__dir_stream>>>::allocate\5babi:v15006\5d\28unsigned\20long\29
[asyncify] std::__2::allocator_traits<std::__2::allocator<std::__2::__shared_ptr_emplace<std::__2::__fs::filesystem::recursive_directory_iterator::__shared_imp\2c\20std::__2::allocator<std::__2::__fs::filesystem::recursive_directory_iterator::__shared_imp>>>>::allocate\5babi:v15006\5d\28std::__2::allocator<std::__2::__shared_ptr_emplace<std::__2::__fs::filesystem::recursive_directory_iterator::__shared_imp\2c\20std::__2::allocator<std::__2::__fs::filesystem::recursive_directory_iterator::__shared_imp>>>&\2c\20unsigned\20long\29 can change the state due to std::__2::allocator<std::__2::__shared_ptr_emplace<std::__2::__fs::filesystem::recursive_directory_iterator::__shared_imp\2c\20std::__2::allocator<std::__2::__fs::filesystem::recursive_directory_iterator::__shared_imp>>>::allocate\5babi:v15006\5d\28unsigned\20long\29
[asyncify] std::__2::allocator_traits<std::__2::allocator<std::__2::__fs::filesystem::__dir_stream>>::allocate\5babi:v15006\5d\28std::__2::allocator<std::__2::__fs::filesystem::__dir_stream>&\2c\20unsigned\20long\29 can change the state due to std::__2::allocator<std::__2::__fs::filesystem::__dir_stream>::allocate\5babi:v15006\5d\28unsigned\20long\29
[asyncify] std::__2::__allocation_result<std::__2::allocator_traits<std::__2::allocator<std::__2::__fs::filesystem::__dir_stream*>>::pointer>\20std::__2::__allocate_at_least\5babi:v15006\5d<std::__2::allocator<std::__2::__fs::filesystem::__dir_stream*>>\28std::__2::allocator<std::__2::__fs::filesystem::__dir_stream*>&\2c\20unsigned\20long\29 can change the state due to std::__2::allocator<std::__2::__fs::filesystem::__dir_stream*>::allocate\5babi:v15006\5d\28unsigned\20long\29
[asyncify] std::__2::__allocation_result<std::__2::allocator_traits<std::__2::allocator<wchar_t>>::pointer>\20std::__2::__allocate_at_least\5babi:v15006\5d<std::__2::allocator<wchar_t>>\28std::__2::allocator<wchar_t>&\2c\20unsigned\20long\29 can change the state due to std::__2::allocator<wchar_t>::allocate\5babi:v15006\5d\28unsigned\20long\29
[asyncify] std::__2::__sso_allocator<std::__2::locale::facet*\2c\2030ul>::allocate\5babi:v15006\5d\28unsigned\20long\2c\20void\20const*\29 can change the state due to std::__2::allocator<std::__2::locale::facet*>::allocate\5babi:v15006\5d\28unsigned\20long\29
[asyncify] std::__2::__allocation_result<std::__2::allocator_traits<std::__2::allocator<std::__2::basic_string_view<char\2c\20std::__2::char_traits<char>>>>::pointer>\20std::__2::__allocate_at_least\5babi:v15006\5d<std::__2::allocator<std::__2::basic_string_view<char\2c\20std::__2::char_traits<char>>>>\28std::__2::allocator<std::__2::basic_string_view<char\2c\20std::__2::char_traits<char>>>&\2c\20unsigned\20long\29 can change the state due to std::__2::allocator<std::__2::basic_string_view<char\2c\20std::__2::char_traits<char>>>::allocate\5babi:v15006\5d\28unsigned\20long\29
[asyncify] std::__2::__allocation_result<std::__2::allocator_traits<std::__2::allocator<std::__2::pair<std::__2::basic_string_view<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::__fs::filesystem::PathPartKind>>>::pointer>\20std::__2::__allocate_at_least\5babi:v15006\5d<std::__2::allocator<std::__2::pair<std::__2::basic_string_view<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::__fs::filesystem::PathPartKind>>>\28std::__2::allocator<std::__2::pair<std::__2::basic_string_view<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::__fs::filesystem::PathPartKind>>&\2c\20unsigned\20long\29 can change the state due to std::__2::allocator<std::__2::pair<std::__2::basic_string_view<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::__fs::filesystem::PathPartKind>>::allocate\5babi:v15006\5d\28unsigned\20long\29
[asyncify] std::__2::valarray<unsigned\20long>::resize\28unsigned\20long\2c\20unsigned\20long\29 can change the state due to std::__2::allocator<unsigned\20long>::allocate\5babi:v15006\5d\28unsigned\20long\29
[asyncify] std::__2::valarray<unsigned\20long>::valarray\5babi:v15006\5d\28unsigned\20long\29 can change the state due to std::__2::allocator<unsigned\20long>::allocate\5babi:v15006\5d\28unsigned\20long\29
[asyncify] Common::Error::Error\28Common::ErrorCode\29 can change the state due to Common::errorToString\28Common::ErrorCode\29
[asyncify] Common::HashMap<unsigned\20short\2c\20Image::CDToonsBlock\2c\20Common::Hash<unsigned\20short>\2c\20Common::EqualTo<unsigned\20short>>::operator\5b\5d\28unsigned\20short\20const&\29 can change the state due to Common::HashMap<unsigned\20short\2c\20Image::CDToonsBlock\2c\20Common::Hash<unsigned\20short>\2c\20Common::EqualTo<unsigned\20short>>::lookupAndCreateIfMissing\28unsigned\20short\20const&\29
[asyncify] std::__2::__fs::filesystem::__absolute\28std::__2::__fs::filesystem::path\20const&\2c\20std::__2::error_code*\29 can change the state due to std::__2::__fs::filesystem::__do_absolute\28std::__2::__fs::filesystem::path\20const&\2c\20std::__2::__fs::filesystem::path*\2c\20std::__2::error_code*\29
[asyncify] GUI::GridWidget::platformToSurface\28Common::Platform\29 can change the state due to Common::HashMap<int\2c\20Graphics::ManagedSurface\20const*\2c\20Common::Hash<int>\2c\20Common::EqualTo<int>>::lookupAndCreateIfMissing\28int\20const&\29
[asyncify] GUI::GridWidget::languageToSurface\28Common::Language\29 can change the state due to Common::HashMap<int\2c\20Graphics::ManagedSurface\20const*\2c\20Common::Hash<int>\2c\20Common::EqualTo<int>>::lookupAndCreateIfMissing\28int\20const&\29
[asyncify] GUI::GridWidget::demoToSurface\28Common::String\29 can change the state due to Common::HashMap<int\2c\20Graphics::ManagedSurface\20const*\2c\20Common::Hash<int>\2c\20Common::EqualTo<int>>::lookupAndCreateIfMissing\28int\20const&\29
[asyncify] Graphics::NinePatchBitmap::closestGrayscale\28unsigned\20int\2c\20unsigned\20char*\2c\20int\29 can change the state due to Common::HashMap<unsigned\20int\2c\20int\2c\20Common::Hash<unsigned\20int>\2c\20Common::EqualTo<unsigned\20int>>::lookupAndCreateIfMissing\28unsigned\20int\20const&\29
[asyncify] void\20std::__2::vector<std::__2::pair<std::__2::condition_variable*\2c\20std::__2::mutex*>\2c\20std::__2::__hidden_allocator<std::__2::pair<std::__2::condition_variable*\2c\20std::__2::mutex*>>>::__push_back_slow_path<std::__2::pair<std::__2::condition_variable*\2c\20std::__2::mutex*>>\28std::__2::pair<std::__2::condition_variable*\2c\20std::__2::mutex*>&&\29 can change the state due to std::__2::__split_buffer<std::__2::pair<std::__2::condition_variable*\2c\20std::__2::mutex*>\2c\20std::__2::__hidden_allocator<std::__2::pair<std::__2::condition_variable*\2c\20std::__2::mutex*>>&>::__split_buffer\28unsigned\20long\2c\20unsigned\20long\2c\20std::__2::__hidden_allocator<std::__2::pair<std::__2::condition_variable*\2c\20std::__2::mutex*>>&\29
[asyncify] void\20std::__2::vector<std::__2::__assoc_sub_state*\2c\20std::__2::__hidden_allocator<std::__2::__assoc_sub_state*>>::__push_back_slow_path<std::__2::__assoc_sub_state*\20const&>\28std::__2::__assoc_sub_state*\20const&\29 can change the state due to std::__2::__split_buffer<std::__2::__assoc_sub_state*\2c\20std::__2::__hidden_allocator<std::__2::__assoc_sub_state*>&>::__split_buffer\28unsigned\20long\2c\20unsigned\20long\2c\20std::__2::__hidden_allocator<std::__2::__assoc_sub_state*>&\29
[asyncify] std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::rfind\28char\20const*\2c\20unsigned\20long\2c\20unsigned\20long\29\20const can change the state due to unsigned\20long\20std::__2::__str_rfind\5babi:v15006\5d<char\2c\20unsigned\20long\2c\20std::__2::char_traits<char>\2c\204294967295ul>\28char\20const*\2c\20unsigned\20long\2c\20char\20const*\2c\20unsigned\20long\2c\20unsigned\20long\29
[asyncify] std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>::rfind\28wchar_t\20const*\2c\20unsigned\20long\2c\20unsigned\20long\29\20const can change the state due to unsigned\20long\20std::__2::__str_rfind\5babi:v15006\5d<wchar_t\2c\20unsigned\20long\2c\20std::__2::char_traits<wchar_t>\2c\204294967295ul>\28wchar_t\20const*\2c\20unsigned\20long\2c\20wchar_t\20const*\2c\20unsigned\20long\2c\20unsigned\20long\29
[asyncify] virtual\20thunk\20to\20std::__2::istrstream::~istrstream\28\29.1 can change the state due to std::__2::istrstream::~istrstream\28\29.2
[asyncify] virtual\20thunk\20to\20std::__2::ostrstream::~ostrstream\28\29.1 can change the state due to std::__2::ostrstream::~ostrstream\28\29.2
[asyncify] non-virtual\20thunk\20to\20std::__2::strstream::~strstream\28\29.1 can change the state due to std::__2::strstream::~strstream\28\29.2
[asyncify] virtual\20thunk\20to\20std::__2::strstream::~strstream\28\29.1 can change the state due to std::__2::strstream::~strstream\28\29.2
[asyncify] \28anonymous\20namespace\29::itanium_demangle::ClosureTypeName::printLeft\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\29\20const can change the state due to \28anonymous\20namespace\29::itanium_demangle::ClosureTypeName::printDeclarator\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\29\20const
[asyncify] \28anonymous\20namespace\29::itanium_demangle::LambdaExpr::printLeft\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\29\20const can change the state due to \28anonymous\20namespace\29::itanium_demangle::ClosureTypeName::printDeclarator\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\29\20const
[asyncify] \28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::parseUnscopedName\28\28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::NameState*\2c\20bool*\29 can change the state due to \28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::parseUnqualifiedName\28\28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::NameState*\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*\2c\20\28anonymous\20namespace\29::itanium_demangle::ModuleName*\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::parseClassEnumType\28\29 can change the state due to \28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::parseName\28\28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::NameState*\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::parseCtorDtorName\28\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::NameState*\29 can change the state due to \28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::parseName\28\28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::NameState*\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::OutputBuffer::printOpen\28char\29 can change the state due to \28anonymous\20namespace\29::itanium_demangle::OutputBuffer::operator+=\28char\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::OutputBuffer::printClose\28char\29 can change the state due to \28anonymous\20namespace\29::itanium_demangle::OutputBuffer::operator+=\28char\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::IntegerLiteral::printLeft\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\29\20const can change the state due to \28anonymous\20namespace\29::itanium_demangle::OutputBuffer::operator+=\28char\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::NameType::printLeft\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\29\20const can change the state due to \28anonymous\20namespace\29::itanium_demangle::OutputBuffer::operator+=\28\28anonymous\20namespace\29::itanium_demangle::StringView\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::BoolExpr::printLeft\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\29\20const can change the state due to \28anonymous\20namespace\29::itanium_demangle::OutputBuffer::operator+=\28\28anonymous\20namespace\29::itanium_demangle::StringView\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::UnnamedTypeName::printLeft\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\29\20const can change the state due to \28anonymous\20namespace\29::itanium_demangle::OutputBuffer::operator+=\28\28anonymous\20namespace\29::itanium_demangle::StringView\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::SyntheticTemplateParamName::printLeft\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\29\20const can change the state due to \28anonymous\20namespace\29::itanium_demangle::OutputBuffer::operator+=\28\28anonymous\20namespace\29::itanium_demangle::StringView\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::OutputBuffer::writeUnsigned\28unsigned\20long\20long\2c\20bool\29 can change the state due to \28anonymous\20namespace\29::itanium_demangle::OutputBuffer::operator+=\28\28anonymous\20namespace\29::itanium_demangle::StringView\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::TypeTemplateParamDecl::printLeft\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\29\20const can change the state due to \28anonymous\20namespace\29::itanium_demangle::OutputBuffer::operator+=\28\28anonymous\20namespace\29::itanium_demangle::StringView\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::OutputBuffer::operator<<\28\28anonymous\20namespace\29::itanium_demangle::StringView\29 can change the state due to \28anonymous\20namespace\29::itanium_demangle::OutputBuffer::operator+=\28\28anonymous\20namespace\29::itanium_demangle::StringView\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::FunctionParam::printLeft\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\29\20const can change the state due to \28anonymous\20namespace\29::itanium_demangle::OutputBuffer::operator+=\28\28anonymous\20namespace\29::itanium_demangle::StringView\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::QualType::printQuals\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\29\20const can change the state due to \28anonymous\20namespace\29::itanium_demangle::OutputBuffer::operator+=\28\28anonymous\20namespace\29::itanium_demangle::StringView\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::parseModuleNameOpt\28\28anonymous\20namespace\29::itanium_demangle::ModuleName*&\29 can change the state due to \28anonymous\20namespace\29::itanium_demangle::PODSmallVector<\28anonymous\20namespace\29::itanium_demangle::Node*\2c\2032ul>::push_back\28\28anonymous\20namespace\29::itanium_demangle::Node*\20const&\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::parseSubstitution\28\29 can change the state due to \28anonymous\20namespace\29::itanium_demangle::PODSmallVector<\28anonymous\20namespace\29::itanium_demangle::Node*\2c\2032ul>::push_back\28\28anonymous\20namespace\29::itanium_demangle::Node*\20const&\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::DotSuffix*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::DotSuffix\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::StringView>\28\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::StringView&&\29 can change the state due to \28anonymous\20namespace\29::BumpPointerAllocator::allocate\28unsigned\20long\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::SpecialName*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::SpecialName\2c\20char\20const\20\28&\29\20\5b34\5d\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&>\28char\20const\20\28&\29\20\5b34\5d\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\29 can change the state due to \28anonymous\20namespace\29::BumpPointerAllocator::allocate\28unsigned\20long\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::EnableIfAttr*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::EnableIfAttr\2c\20\28anonymous\20namespace\29::itanium_demangle::NodeArray>\28\28anonymous\20namespace\29::itanium_demangle::NodeArray&&\29 can change the state due to \28anonymous\20namespace\29::BumpPointerAllocator::allocate\28unsigned\20long\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::FunctionEncoding*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::FunctionEncoding\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::NodeArray\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Qualifiers&\2c\20\28anonymous\20namespace\29::itanium_demangle::FunctionRefQual&>\28\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::NodeArray&&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Qualifiers&\2c\20\28anonymous\20namespace\29::itanium_demangle::FunctionRefQual&\29 can change the state due to \28anonymous\20namespace\29::BumpPointerAllocator::allocate\28unsigned\20long\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::SpecialName*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::SpecialName\2c\20char\20const\20\28&\29\20\5b31\5d\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&>\28char\20const\20\28&\29\20\5b31\5d\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\29 can change the state due to \28anonymous\20namespace\29::BumpPointerAllocator::allocate\28unsigned\20long\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::SpecialName*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::SpecialName\2c\20char\20const\20\28&\29\20\5b12\5d\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&>\28char\20const\20\28&\29\20\5b12\5d\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\29 can change the state due to \28anonymous\20namespace\29::BumpPointerAllocator::allocate\28unsigned\20long\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::SpecialName*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::SpecialName\2c\20char\20const\20\28&\29\20\5b9\5d\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&>\28char\20const\20\28&\29\20\5b9\5d\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\29 can change the state due to \28anonymous\20namespace\29::BumpPointerAllocator::allocate\28unsigned\20long\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::SpecialName*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::SpecialName\2c\20char\20const\20\28&\29\20\5b14\5d\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&>\28char\20const\20\28&\29\20\5b14\5d\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\29 can change the state due to \28anonymous\20namespace\29::BumpPointerAllocator::allocate\28unsigned\20long\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::SpecialName*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::SpecialName\2c\20char\20const\20\28&\29\20\5b19\5d\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&>\28char\20const\20\28&\29\20\5b19\5d\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\29 can change the state due to \28anonymous\20namespace\29::BumpPointerAllocator::allocate\28unsigned\20long\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::SpecialName*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::SpecialName\2c\20char\20const\20\28&\29\20\5b27\5d\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&>\28char\20const\20\28&\29\20\5b27\5d\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\29 can change the state due to \28anonymous\20namespace\29::BumpPointerAllocator::allocate\28unsigned\20long\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::CtorVtableSpecialName*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::CtorVtableSpecialName\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&>\28\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\29 can change the state due to \28anonymous\20namespace\29::BumpPointerAllocator::allocate\28unsigned\20long\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::SpecialName*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::SpecialName\2c\20char\20const\20\28&\29\20\5b41\5d\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&>\28char\20const\20\28&\29\20\5b41\5d\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\29 can change the state due to \28anonymous\20namespace\29::BumpPointerAllocator::allocate\28unsigned\20long\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::SpecialName*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::SpecialName\2c\20char\20const\20\28&\29\20\5b18\5d\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&>\28char\20const\20\28&\29\20\5b18\5d\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\29 can change the state due to \28anonymous\20namespace\29::BumpPointerAllocator::allocate\28unsigned\20long\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::SpecialName*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::SpecialName\2c\20char\20const\20\28&\29\20\5b22\5d\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&>\28char\20const\20\28&\29\20\5b22\5d\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\29 can change the state due to \28anonymous\20namespace\29::BumpPointerAllocator::allocate\28unsigned\20long\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::SpecialName*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::SpecialName\2c\20char\20const\20\28&\29\20\5b20\5d\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&>\28char\20const\20\28&\29\20\5b20\5d\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\29 can change the state due to \28anonymous\20namespace\29::BumpPointerAllocator::allocate\28unsigned\20long\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::SpecialName*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::SpecialName\2c\20char\20const\20\28&\29\20\5b25\5d\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&>\28char\20const\20\28&\29\20\5b25\5d\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\29 can change the state due to \28anonymous\20namespace\29::BumpPointerAllocator::allocate\28unsigned\20long\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::SpecialName*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::SpecialName\2c\20char\20const\20\28&\29\20\5b24\5d\2c\20\28anonymous\20namespace\29::itanium_demangle::ModuleName*&>\28char\20const\20\28&\29\20\5b24\5d\2c\20\28anonymous\20namespace\29::itanium_demangle::ModuleName*&\29 can change the state due to \28anonymous\20namespace\29::BumpPointerAllocator::allocate\28unsigned\20long\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::ModuleName*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::ModuleName\2c\20\28anonymous\20namespace\29::itanium_demangle::ModuleName*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20bool&>\28\28anonymous\20namespace\29::itanium_demangle::ModuleName*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20bool&\29 can change the state due to \28anonymous\20namespace\29::BumpPointerAllocator::allocate\28unsigned\20long\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::NameType*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::NameType\2c\20char\20const\20\28&\29\20\5b22\5d>\28char\20const\20\28&\29\20\5b22\5d\29 can change the state due to \28anonymous\20namespace\29::BumpPointerAllocator::allocate\28unsigned\20long\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::NameType*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::NameType\2c\20\28anonymous\20namespace\29::itanium_demangle::StringView&>\28\28anonymous\20namespace\29::itanium_demangle::StringView&\29 can change the state due to \28anonymous\20namespace\29::BumpPointerAllocator::allocate\28unsigned\20long\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::NameWithTemplateArgs*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::NameWithTemplateArgs\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&>\28\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\29 can change the state due to \28anonymous\20namespace\29::BumpPointerAllocator::allocate\28unsigned\20long\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::NameType*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::NameType\2c\20char\20const\20\28&\29\20\5b4\5d>\28char\20const\20\28&\29\20\5b4\5d\29 can change the state due to \28anonymous\20namespace\29::BumpPointerAllocator::allocate\28unsigned\20long\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::ForwardTemplateReference*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::ForwardTemplateReference\2c\20unsigned\20long&>\28unsigned\20long&\29 can change the state due to \28anonymous\20namespace\29::BumpPointerAllocator::allocate\28unsigned\20long\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::NameType*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::NameType\2c\20char\20const\20\28&\29\20\5b5\5d>\28char\20const\20\28&\29\20\5b5\5d\29 can change the state due to \28anonymous\20namespace\29::BumpPointerAllocator::allocate\28unsigned\20long\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::EnclosingExpr*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::EnclosingExpr\2c\20char\20const\20\28&\29\20\5b9\5d\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&>\28char\20const\20\28&\29\20\5b9\5d\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\29 can change the state due to \28anonymous\20namespace\29::BumpPointerAllocator::allocate\28unsigned\20long\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::PostfixExpr*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::PostfixExpr\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::StringView&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node::Prec>\28\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::StringView&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node::Prec&&\29 can change the state due to \28anonymous\20namespace\29::BumpPointerAllocator::allocate\28unsigned\20long\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::ArraySubscriptExpr*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::ArraySubscriptExpr\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node::Prec>\28\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node::Prec&&\29 can change the state due to \28anonymous\20namespace\29::BumpPointerAllocator::allocate\28unsigned\20long\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::MemberExpr*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::MemberExpr\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::StringView&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node::Prec>\28\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::StringView&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node::Prec&&\29 can change the state due to \28anonymous\20namespace\29::BumpPointerAllocator::allocate\28unsigned\20long\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::NewExpr*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::NewExpr\2c\20\28anonymous\20namespace\29::itanium_demangle::NodeArray&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::NodeArray&\2c\20bool&\2c\20bool\2c\20\28anonymous\20namespace\29::itanium_demangle::Node::Prec>\28\28anonymous\20namespace\29::itanium_demangle::NodeArray&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::NodeArray&\2c\20bool&\2c\20bool&&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node::Prec&&\29 can change the state due to \28anonymous\20namespace\29::BumpPointerAllocator::allocate\28unsigned\20long\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::DeleteExpr*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::DeleteExpr\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20bool&\2c\20bool\2c\20\28anonymous\20namespace\29::itanium_demangle::Node::Prec>\28\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20bool&\2c\20bool&&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node::Prec&&\29 can change the state due to \28anonymous\20namespace\29::BumpPointerAllocator::allocate\28unsigned\20long\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::CallExpr*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::CallExpr\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::NodeArray\2c\20\28anonymous\20namespace\29::itanium_demangle::Node::Prec>\28\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::NodeArray&&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node::Prec&&\29 can change the state due to \28anonymous\20namespace\29::BumpPointerAllocator::allocate\28unsigned\20long\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::ConversionExpr*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::ConversionExpr\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::NodeArray&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node::Prec>\28\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::NodeArray&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node::Prec&&\29 can change the state due to \28anonymous\20namespace\29::BumpPointerAllocator::allocate\28unsigned\20long\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::ConditionalExpr*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::ConditionalExpr\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node::Prec>\28\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node::Prec&&\29 can change the state due to \28anonymous\20namespace\29::BumpPointerAllocator::allocate\28unsigned\20long\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::CastExpr*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::CastExpr\2c\20\28anonymous\20namespace\29::itanium_demangle::StringView&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node::Prec>\28\28anonymous\20namespace\29::itanium_demangle::StringView&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node::Prec&&\29 can change the state due to \28anonymous\20namespace\29::BumpPointerAllocator::allocate\28unsigned\20long\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::EnclosingExpr*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::EnclosingExpr\2c\20\28anonymous\20namespace\29::itanium_demangle::StringView&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node::Prec>\28\28anonymous\20namespace\29::itanium_demangle::StringView&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node::Prec&&\29 can change the state due to \28anonymous\20namespace\29::BumpPointerAllocator::allocate\28unsigned\20long\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::InitListExpr*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::InitListExpr\2c\20std::nullptr_t\2c\20\28anonymous\20namespace\29::itanium_demangle::NodeArray>\28std::nullptr_t&&\2c\20\28anonymous\20namespace\29::itanium_demangle::NodeArray&&\29 can change the state due to \28anonymous\20namespace\29::BumpPointerAllocator::allocate\28unsigned\20long\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::EnclosingExpr*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::EnclosingExpr\2c\20char\20const\20\28&\29\20\5b10\5d\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node::Prec>\28char\20const\20\28&\29\20\5b10\5d\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node::Prec&&\29 can change the state due to \28anonymous\20namespace\29::BumpPointerAllocator::allocate\28unsigned\20long\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::ParameterPackExpansion*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::ParameterPackExpansion\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&>\28\28anonymous\20namespace\29::itanium_demangle::Node*&\29 can change the state due to \28anonymous\20namespace\29::BumpPointerAllocator::allocate\28unsigned\20long\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::SizeofParamPackExpr*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::SizeofParamPackExpr\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&>\28\28anonymous\20namespace\29::itanium_demangle::Node*&\29 can change the state due to \28anonymous\20namespace\29::BumpPointerAllocator::allocate\28unsigned\20long\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::EnclosingExpr*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::EnclosingExpr\2c\20char\20const\20\28&\29\20\5b11\5d\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&>\28char\20const\20\28&\29\20\5b11\5d\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\29 can change the state due to \28anonymous\20namespace\29::BumpPointerAllocator::allocate\28unsigned\20long\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::NodeArrayNode*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::NodeArrayNode\2c\20\28anonymous\20namespace\29::itanium_demangle::NodeArray>\28\28anonymous\20namespace\29::itanium_demangle::NodeArray&&\29 can change the state due to \28anonymous\20namespace\29::BumpPointerAllocator::allocate\28unsigned\20long\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::InitListExpr*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::InitListExpr\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::NodeArray>\28\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::NodeArray&&\29 can change the state due to \28anonymous\20namespace\29::BumpPointerAllocator::allocate\28unsigned\20long\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::NameType*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::NameType\2c\20char\20const\20\28&\29\20\5b6\5d>\28char\20const\20\28&\29\20\5b6\5d\29 can change the state due to \28anonymous\20namespace\29::BumpPointerAllocator::allocate\28unsigned\20long\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::ThrowExpr*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::ThrowExpr\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&>\28\28anonymous\20namespace\29::itanium_demangle::Node*&\29 can change the state due to \28anonymous\20namespace\29::BumpPointerAllocator::allocate\28unsigned\20long\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::BinaryExpr*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::BinaryExpr\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::StringView&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node::Prec&>\28\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::StringView&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node::Prec&\29 can change the state due to \28anonymous\20namespace\29::BumpPointerAllocator::allocate\28unsigned\20long\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::PrefixExpr*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::PrefixExpr\2c\20\28anonymous\20namespace\29::itanium_demangle::StringView&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node::Prec&>\28\28anonymous\20namespace\29::itanium_demangle::StringView&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node::Prec&\29 can change the state due to \28anonymous\20namespace\29::BumpPointerAllocator::allocate\28unsigned\20long\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::BoolExpr*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::BoolExpr\2c\20int>\28int&&\29 can change the state due to \28anonymous\20namespace\29::BumpPointerAllocator::allocate\28unsigned\20long\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::StringLiteral*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::StringLiteral\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&>\28\28anonymous\20namespace\29::itanium_demangle::Node*&\29 can change the state due to \28anonymous\20namespace\29::BumpPointerAllocator::allocate\28unsigned\20long\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::NameType*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::NameType\2c\20char\20const\20\28&\29\20\5b8\5d>\28char\20const\20\28&\29\20\5b8\5d\29 can change the state due to \28anonymous\20namespace\29::BumpPointerAllocator::allocate\28unsigned\20long\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::LambdaExpr*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::LambdaExpr\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&>\28\28anonymous\20namespace\29::itanium_demangle::Node*&\29 can change the state due to \28anonymous\20namespace\29::BumpPointerAllocator::allocate\28unsigned\20long\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::EnumLiteral*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::EnumLiteral\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::StringView&>\28\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::StringView&\29 can change the state due to \28anonymous\20namespace\29::BumpPointerAllocator::allocate\28unsigned\20long\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::IntegerLiteral*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::IntegerLiteral\2c\20\28anonymous\20namespace\29::itanium_demangle::StringView&\2c\20\28anonymous\20namespace\29::itanium_demangle::StringView&>\28\28anonymous\20namespace\29::itanium_demangle::StringView&\2c\20\28anonymous\20namespace\29::itanium_demangle::StringView&\29 can change the state due to \28anonymous\20namespace\29::BumpPointerAllocator::allocate\28unsigned\20long\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::FloatLiteralImpl<float>*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::FloatLiteralImpl<float>\2c\20\28anonymous\20namespace\29::itanium_demangle::StringView&>\28\28anonymous\20namespace\29::itanium_demangle::StringView&\29 can change the state due to \28anonymous\20namespace\29::BumpPointerAllocator::allocate\28unsigned\20long\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::FloatLiteralImpl<double>*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::FloatLiteralImpl<double>\2c\20\28anonymous\20namespace\29::itanium_demangle::StringView&>\28\28anonymous\20namespace\29::itanium_demangle::StringView&\29 can change the state due to \28anonymous\20namespace\29::BumpPointerAllocator::allocate\28unsigned\20long\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::FloatLiteralImpl<long\20double>*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::FloatLiteralImpl<long\20double>\2c\20\28anonymous\20namespace\29::itanium_demangle::StringView&>\28\28anonymous\20namespace\29::itanium_demangle::StringView&\29 can change the state due to \28anonymous\20namespace\29::BumpPointerAllocator::allocate\28unsigned\20long\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::UnnamedTypeName*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::UnnamedTypeName\2c\20\28anonymous\20namespace\29::itanium_demangle::StringView&>\28\28anonymous\20namespace\29::itanium_demangle::StringView&\29 can change the state due to \28anonymous\20namespace\29::BumpPointerAllocator::allocate\28unsigned\20long\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::ClosureTypeName*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::ClosureTypeName\2c\20\28anonymous\20namespace\29::itanium_demangle::NodeArray&\2c\20\28anonymous\20namespace\29::itanium_demangle::NodeArray&\2c\20\28anonymous\20namespace\29::itanium_demangle::StringView&>\28\28anonymous\20namespace\29::itanium_demangle::NodeArray&\2c\20\28anonymous\20namespace\29::itanium_demangle::NodeArray&\2c\20\28anonymous\20namespace\29::itanium_demangle::StringView&\29 can change the state due to \28anonymous\20namespace\29::BumpPointerAllocator::allocate\28unsigned\20long\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::NameType*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::NameType\2c\20char\20const\20\28&\29\20\5b16\5d>\28char\20const\20\28&\29\20\5b16\5d\29 can change the state due to \28anonymous\20namespace\29::BumpPointerAllocator::allocate\28unsigned\20long\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::TypeTemplateParamDecl*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::TypeTemplateParamDecl\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&>\28\28anonymous\20namespace\29::itanium_demangle::Node*&\29 can change the state due to \28anonymous\20namespace\29::BumpPointerAllocator::allocate\28unsigned\20long\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::NonTypeTemplateParamDecl*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::NonTypeTemplateParamDecl\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&>\28\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\29 can change the state due to \28anonymous\20namespace\29::BumpPointerAllocator::allocate\28unsigned\20long\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::TemplateTemplateParamDecl*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::TemplateTemplateParamDecl\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::NodeArray&>\28\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::NodeArray&\29 can change the state due to \28anonymous\20namespace\29::BumpPointerAllocator::allocate\28unsigned\20long\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::TemplateParamPackDecl*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::TemplateParamPackDecl\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&>\28\28anonymous\20namespace\29::itanium_demangle::Node*&\29 can change the state due to \28anonymous\20namespace\29::BumpPointerAllocator::allocate\28unsigned\20long\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::SyntheticTemplateParamName*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::SyntheticTemplateParamName\2c\20\28anonymous\20namespace\29::itanium_demangle::TemplateParamKind&\2c\20unsigned\20int&>\28\28anonymous\20namespace\29::itanium_demangle::TemplateParamKind&\2c\20unsigned\20int&\29 can change the state due to \28anonymous\20namespace\29::BumpPointerAllocator::allocate\28unsigned\20long\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::FunctionParam*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::FunctionParam\2c\20\28anonymous\20namespace\29::itanium_demangle::StringView&>\28\28anonymous\20namespace\29::itanium_demangle::StringView&\29 can change the state due to \28anonymous\20namespace\29::BumpPointerAllocator::allocate\28unsigned\20long\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::FoldExpr*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::FoldExpr\2c\20bool&\2c\20\28anonymous\20namespace\29::itanium_demangle::StringView\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&>\28bool&\2c\20\28anonymous\20namespace\29::itanium_demangle::StringView&&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\29 can change the state due to \28anonymous\20namespace\29::BumpPointerAllocator::allocate\28unsigned\20long\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::BracedExpr*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::BracedExpr\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20bool>\28\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20bool&&\29 can change the state due to \28anonymous\20namespace\29::BumpPointerAllocator::allocate\28unsigned\20long\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::BracedRangeExpr*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::BracedRangeExpr\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&>\28\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\29 can change the state due to \28anonymous\20namespace\29::BumpPointerAllocator::allocate\28unsigned\20long\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::PointerToMemberConversionExpr*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::PointerToMemberConversionExpr\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::StringView&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node::Prec&>\28\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::StringView&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node::Prec&\29 can change the state due to \28anonymous\20namespace\29::BumpPointerAllocator::allocate\28unsigned\20long\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::NameType*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::NameType\2c\20\28anonymous\20namespace\29::itanium_demangle::StringView>\28\28anonymous\20namespace\29::itanium_demangle::StringView&&\29 can change the state due to \28anonymous\20namespace\29::BumpPointerAllocator::allocate\28unsigned\20long\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::SubobjectExpr*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::SubobjectExpr\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::StringView&\2c\20\28anonymous\20namespace\29::itanium_demangle::NodeArray\2c\20bool&>\28\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::StringView&\2c\20\28anonymous\20namespace\29::itanium_demangle::NodeArray&&\2c\20bool&\29 can change the state due to \28anonymous\20namespace\29::BumpPointerAllocator::allocate\28unsigned\20long\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::QualifiedName*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::QualifiedName\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&>\28\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\29 can change the state due to \28anonymous\20namespace\29::BumpPointerAllocator::allocate\28unsigned\20long\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::GlobalQualifiedName*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::GlobalQualifiedName\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&>\28\28anonymous\20namespace\29::itanium_demangle::Node*&\29 can change the state due to \28anonymous\20namespace\29::BumpPointerAllocator::allocate\28unsigned\20long\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::DtorName*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::DtorName\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&>\28\28anonymous\20namespace\29::itanium_demangle::Node*&\29 can change the state due to \28anonymous\20namespace\29::BumpPointerAllocator::allocate\28unsigned\20long\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::ConversionOperatorType*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::ConversionOperatorType\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&>\28\28anonymous\20namespace\29::itanium_demangle::Node*&\29 can change the state due to \28anonymous\20namespace\29::BumpPointerAllocator::allocate\28unsigned\20long\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::LiteralOperator*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::LiteralOperator\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&>\28\28anonymous\20namespace\29::itanium_demangle::Node*&\29 can change the state due to \28anonymous\20namespace\29::BumpPointerAllocator::allocate\28unsigned\20long\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::SpecialSubstitution*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::SpecialSubstitution\2c\20\28anonymous\20namespace\29::itanium_demangle::SpecialSubKind&>\28\28anonymous\20namespace\29::itanium_demangle::SpecialSubKind&\29 can change the state due to \28anonymous\20namespace\29::BumpPointerAllocator::allocate\28unsigned\20long\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::AbiTagAttr*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::AbiTagAttr\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::StringView&>\28\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::StringView&\29 can change the state due to \28anonymous\20namespace\29::BumpPointerAllocator::allocate\28unsigned\20long\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::StructuredBindingName*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::StructuredBindingName\2c\20\28anonymous\20namespace\29::itanium_demangle::NodeArray>\28\28anonymous\20namespace\29::itanium_demangle::NodeArray&&\29 can change the state due to \28anonymous\20namespace\29::BumpPointerAllocator::allocate\28unsigned\20long\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::ModuleEntity*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::ModuleEntity\2c\20\28anonymous\20namespace\29::itanium_demangle::ModuleName*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&>\28\28anonymous\20namespace\29::itanium_demangle::ModuleName*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\29 can change the state due to \28anonymous\20namespace\29::BumpPointerAllocator::allocate\28unsigned\20long\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::NestedName*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::NestedName\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&>\28\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\29 can change the state due to \28anonymous\20namespace\29::BumpPointerAllocator::allocate\28unsigned\20long\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::ExpandedSpecialSubstitution*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::ExpandedSpecialSubstitution\2c\20\28anonymous\20namespace\29::itanium_demangle::SpecialSubstitution*>\28\28anonymous\20namespace\29::itanium_demangle::SpecialSubstitution*&&\29 can change the state due to \28anonymous\20namespace\29::BumpPointerAllocator::allocate\28unsigned\20long\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::CtorDtorName*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::CtorDtorName\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20bool\2c\20int&>\28\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20bool&&\2c\20int&\29 can change the state due to \28anonymous\20namespace\29::BumpPointerAllocator::allocate\28unsigned\20long\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::NameType*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::NameType\2c\20char\20const\20\28&\29\20\5b15\5d>\28char\20const\20\28&\29\20\5b15\5d\29 can change the state due to \28anonymous\20namespace\29::BumpPointerAllocator::allocate\28unsigned\20long\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::LocalName*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::LocalName\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&>\28\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\29 can change the state due to \28anonymous\20namespace\29::BumpPointerAllocator::allocate\28unsigned\20long\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::ParameterPack*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::ParameterPack\2c\20\28anonymous\20namespace\29::itanium_demangle::NodeArray>\28\28anonymous\20namespace\29::itanium_demangle::NodeArray&&\29 can change the state due to \28anonymous\20namespace\29::BumpPointerAllocator::allocate\28unsigned\20long\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::TemplateArgs*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::TemplateArgs\2c\20\28anonymous\20namespace\29::itanium_demangle::NodeArray>\28\28anonymous\20namespace\29::itanium_demangle::NodeArray&&\29 can change the state due to \28anonymous\20namespace\29::BumpPointerAllocator::allocate\28unsigned\20long\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::TemplateArgumentPack*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::TemplateArgumentPack\2c\20\28anonymous\20namespace\29::itanium_demangle::NodeArray&>\28\28anonymous\20namespace\29::itanium_demangle::NodeArray&\29 can change the state due to \28anonymous\20namespace\29::BumpPointerAllocator::allocate\28unsigned\20long\29
[asyncify] \28anonymous\20namespace\29::DefaultAllocator::allocateNodeArray\28unsigned\20long\29 can change the state due to \28anonymous\20namespace\29::BumpPointerAllocator::allocate\28unsigned\20long\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::NameType*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::NameType\2c\20char\20const\20\28&\29\20\5b12\5d>\28char\20const\20\28&\29\20\5b12\5d\29 can change the state due to \28anonymous\20namespace\29::BumpPointerAllocator::allocate\28unsigned\20long\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::NameType*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::NameType\2c\20char\20const\20\28&\29\20\5b14\5d>\28char\20const\20\28&\29\20\5b14\5d\29 can change the state due to \28anonymous\20namespace\29::BumpPointerAllocator::allocate\28unsigned\20long\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::NameType*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::NameType\2c\20char\20const\20\28&\29\20\5b13\5d>\28char\20const\20\28&\29\20\5b13\5d\29 can change the state due to \28anonymous\20namespace\29::BumpPointerAllocator::allocate\28unsigned\20long\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::NameType*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::NameType\2c\20char\20const\20\28&\29\20\5b10\5d>\28char\20const\20\28&\29\20\5b10\5d\29 can change the state due to \28anonymous\20namespace\29::BumpPointerAllocator::allocate\28unsigned\20long\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::NameType*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::NameType\2c\20char\20const\20\28&\29\20\5b19\5d>\28char\20const\20\28&\29\20\5b19\5d\29 can change the state due to \28anonymous\20namespace\29::BumpPointerAllocator::allocate\28unsigned\20long\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::NameType*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::NameType\2c\20char\20const\20\28&\29\20\5b9\5d>\28char\20const\20\28&\29\20\5b9\5d\29 can change the state due to \28anonymous\20namespace\29::BumpPointerAllocator::allocate\28unsigned\20long\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::NameType*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::NameType\2c\20char\20const\20\28&\29\20\5b18\5d>\28char\20const\20\28&\29\20\5b18\5d\29 can change the state due to \28anonymous\20namespace\29::BumpPointerAllocator::allocate\28unsigned\20long\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::NameType*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::NameType\2c\20char\20const\20\28&\29\20\5b7\5d>\28char\20const\20\28&\29\20\5b7\5d\29 can change the state due to \28anonymous\20namespace\29::BumpPointerAllocator::allocate\28unsigned\20long\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::NameType*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::NameType\2c\20char\20const\20\28&\29\20\5b11\5d>\28char\20const\20\28&\29\20\5b11\5d\29 can change the state due to \28anonymous\20namespace\29::BumpPointerAllocator::allocate\28unsigned\20long\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::BinaryFPType*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::BinaryFPType\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&>\28\28anonymous\20namespace\29::itanium_demangle::Node*&\29 can change the state due to \28anonymous\20namespace\29::BumpPointerAllocator::allocate\28unsigned\20long\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::BitIntType*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::BitIntType\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20bool&>\28\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20bool&\29 can change the state due to \28anonymous\20namespace\29::BumpPointerAllocator::allocate\28unsigned\20long\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::PointerType*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::PointerType\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&>\28\28anonymous\20namespace\29::itanium_demangle::Node*&\29 can change the state due to \28anonymous\20namespace\29::BumpPointerAllocator::allocate\28unsigned\20long\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::ReferenceType*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::ReferenceType\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::ReferenceKind>\28\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::ReferenceKind&&\29 can change the state due to \28anonymous\20namespace\29::BumpPointerAllocator::allocate\28unsigned\20long\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::PostfixQualifiedType*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::PostfixQualifiedType\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20char\20const\20\28&\29\20\5b9\5d>\28\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20char\20const\20\28&\29\20\5b9\5d\29 can change the state due to \28anonymous\20namespace\29::BumpPointerAllocator::allocate\28unsigned\20long\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::PostfixQualifiedType*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::PostfixQualifiedType\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20char\20const\20\28&\29\20\5b11\5d>\28\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20char\20const\20\28&\29\20\5b11\5d\29 can change the state due to \28anonymous\20namespace\29::BumpPointerAllocator::allocate\28unsigned\20long\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::NoexceptSpec*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::NoexceptSpec\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&>\28\28anonymous\20namespace\29::itanium_demangle::Node*&\29 can change the state due to \28anonymous\20namespace\29::BumpPointerAllocator::allocate\28unsigned\20long\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::DynamicExceptionSpec*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::DynamicExceptionSpec\2c\20\28anonymous\20namespace\29::itanium_demangle::NodeArray>\28\28anonymous\20namespace\29::itanium_demangle::NodeArray&&\29 can change the state due to \28anonymous\20namespace\29::BumpPointerAllocator::allocate\28unsigned\20long\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::FunctionType*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::FunctionType\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::NodeArray&\2c\20\28anonymous\20namespace\29::itanium_demangle::Qualifiers&\2c\20\28anonymous\20namespace\29::itanium_demangle::FunctionRefQual&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&>\28\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::NodeArray&\2c\20\28anonymous\20namespace\29::itanium_demangle::Qualifiers&\2c\20\28anonymous\20namespace\29::itanium_demangle::FunctionRefQual&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\29 can change the state due to \28anonymous\20namespace\29::BumpPointerAllocator::allocate\28unsigned\20long\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::ObjCProtoName*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::ObjCProtoName\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::StringView&>\28\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::StringView&\29 can change the state due to \28anonymous\20namespace\29::BumpPointerAllocator::allocate\28unsigned\20long\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::VendorExtQualType*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::VendorExtQualType\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::StringView&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&>\28\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::StringView&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\29 can change the state due to \28anonymous\20namespace\29::BumpPointerAllocator::allocate\28unsigned\20long\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::QualType*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::QualType\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Qualifiers&>\28\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Qualifiers&\29 can change the state due to \28anonymous\20namespace\29::BumpPointerAllocator::allocate\28unsigned\20long\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::PixelVectorType*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::PixelVectorType\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&>\28\28anonymous\20namespace\29::itanium_demangle::Node*&\29 can change the state due to \28anonymous\20namespace\29::BumpPointerAllocator::allocate\28unsigned\20long\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::VectorType*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::VectorType\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&>\28\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\29 can change the state due to \28anonymous\20namespace\29::BumpPointerAllocator::allocate\28unsigned\20long\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::VectorType*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::VectorType\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20std::nullptr_t>\28\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20std::nullptr_t&&\29 can change the state due to \28anonymous\20namespace\29::BumpPointerAllocator::allocate\28unsigned\20long\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::ArrayType*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::ArrayType\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&>\28\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\29 can change the state due to \28anonymous\20namespace\29::BumpPointerAllocator::allocate\28unsigned\20long\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::PointerToMemberType*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::PointerToMemberType\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&>\28\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\29 can change the state due to \28anonymous\20namespace\29::BumpPointerAllocator::allocate\28unsigned\20long\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::ElaboratedTypeSpefType*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::ElaboratedTypeSpefType\2c\20\28anonymous\20namespace\29::itanium_demangle::StringView&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&>\28\28anonymous\20namespace\29::itanium_demangle::StringView&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\29 can change the state due to \28anonymous\20namespace\29::BumpPointerAllocator::allocate\28unsigned\20long\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::parseTemplateParam\28\29 can change the state due to \28anonymous\20namespace\29::itanium_demangle::PODSmallVector<\28anonymous\20namespace\29::itanium_demangle::ForwardTemplateReference*\2c\204ul>::push_back\28\28anonymous\20namespace\29::itanium_demangle::ForwardTemplateReference*\20const&\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::ScopedTemplateParamList::ScopedTemplateParamList\28\28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>*\29 can change the state due to \28anonymous\20namespace\29::itanium_demangle::PODSmallVector<\28anonymous\20namespace\29::itanium_demangle::PODSmallVector<\28anonymous\20namespace\29::itanium_demangle::Node*\2c\208ul>*\2c\204ul>::push_back\28\28anonymous\20namespace\29::itanium_demangle::PODSmallVector<\28anonymous\20namespace\29::itanium_demangle::Node*\2c\208ul>*\20const&\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::parseTemplateParamDecl\28\29::'lambda'\28\28anonymous\20namespace\29::itanium_demangle::TemplateParamKind\29::operator\28\29\28\28anonymous\20namespace\29::itanium_demangle::TemplateParamKind\29\20const can change the state due to \28anonymous\20namespace\29::itanium_demangle::PODSmallVector<\28anonymous\20namespace\29::itanium_demangle::Node*\2c\208ul>::push_back\28\28anonymous\20namespace\29::itanium_demangle::Node*\20const&\29
[asyncify] std::__2::promise<void>::set_exception\28std::exception_ptr\29 can change the state due to std::exception_ptr::exception_ptr\28std::exception_ptr\20const&\29
[asyncify] std::__2::promise<void>::set_exception_at_thread_exit\28std::exception_ptr\29 can change the state due to std::exception_ptr::exception_ptr\28std::exception_ptr\20const&\29
[asyncify] std::__2::__assoc_sub_state::set_exception\28std::exception_ptr\29 can change the state due to std::exception_ptr::operator=\28std::exception_ptr\20const&\29
[asyncify] std::__2::__assoc_sub_state::set_exception_at_thread_exit\28std::exception_ptr\29 can change the state due to std::exception_ptr::operator=\28std::exception_ptr\20const&\29
[asyncify] std::nested_exception::~nested_exception\28\29 can change the state due to std::exception_ptr::~exception_ptr\28\29
[asyncify] std::__2::__assoc_sub_state::__has_value\5babi:v15006\5d\28\29\20const can change the state due to std::exception_ptr::~exception_ptr\28\29
[asyncify] std::__2::__assoc_sub_state::~__assoc_sub_state\28\29 can change the state due to std::exception_ptr::~exception_ptr\28\29
[asyncify] TinyGL::FrameBuffer::fillTriangleTextureMappingPerspectiveSmooth\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20true\2c\20true\2c\20true\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29
[asyncify] TinyGL::FrameBuffer::fillTriangleTextureMappingPerspectiveFlat\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29 can change the state due to void\20TinyGL::FrameBuffer::fillTriangle<true\2c\20true\2c\20false\2c\20true\2c\20false\2c\20true>\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29
[asyncify] Common::Path::appendInPlace\28Common::Path\20const&\29 can change the state due to Common::String::operator+=\28Common::String\20const&\29
[asyncify] Common::Path::append\28Common::Path\20const&\29\20const can change the state due to Common::String::operator+=\28Common::String\20const&\29
[asyncify] Common::StreamDebug::operator<<\28Common::String\20const&\29 can change the state due to Common::String::operator+=\28Common::String\20const&\29
[asyncify] DetectedGame::updateDesc\28bool\29\20const can change the state due to Common::String::operator+=\28Common::String\20const&\29
[asyncify] DetectedGame::appendGUIOptions\28Common::String\20const&\29 can change the state due to Common::String::operator+=\28Common::String\20const&\29
[asyncify] Common::ConfigManager::renameMiscDomain\28Common::String\20const&\2c\20Common::String\20const&\29 can change the state due to Common::ConfigManager::renameDomain\28Common::String\20const&\2c\20Common::String\20const&\2c\20Common::HashMap<Common::String\2c\20Common::ConfigManager::Domain\2c\20Common::IgnoreCase_Hash\2c\20Common::IgnoreCase_EqualTo>&\29
[asyncify] Common::renderMode2GUIO\28Common::RenderMode\29 can change the state due to Common::String::operator+=\28char\20const*\29
[asyncify] Common::allRenderModesGUIOs\28\29 can change the state due to Common::String::operator+=\28char\20const*\29
[asyncify] Common::StreamDebug::maybeSpace\28\29 can change the state due to Common::String::operator+=\28char\20const*\29
[asyncify] Common::StreamDebug::operator<<\28char\20const*\29 can change the state due to Common::String::operator+=\28char\20const*\29
[asyncify] Common::StreamDebug::operator<<\28bool\29 can change the state due to Common::String::operator+=\28char\20const*\29
[asyncify] MidiDriver::musicType2GUIO\28unsigned\20int\29 can change the state due to Common::String::operator+=\28char\20const*\29
[asyncify] TinyGL::GLContext::gl_draw_triangle_fill\28TinyGL::GLContext*\2c\20TinyGL::GLVertex*\2c\20TinyGL::GLVertex*\2c\20TinyGL::GLVertex*\29 can change the state due to TinyGL::FrameBuffer::fillTriangleSmooth\28TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\2c\20TinyGL::ZBufferPoint*\29
[asyncify] maxn\28lua_State*\29 can change the state due to lua_next\28lua_State*\2c\20int\29
[asyncify] luaB_next\28lua_State*\29 can change the state due to lua_next\28lua_State*\2c\20int\29
[asyncify] luaB_rawset\28lua_State*\29 can change the state due to lua_rawset\28lua_State*\2c\20int\29
[asyncify] luaL_unref\28lua_State*\2c\20int\2c\20int\29 can change the state due to lua_rawseti\28lua_State*\2c\20int\2c\20int\29
[asyncify] str_len\28lua_State*\29 can change the state due to luaL_checklstring\28lua_State*\2c\20int\2c\20unsigned\20long*\29
[asyncify] luaL_optlstring\28lua_State*\2c\20int\2c\20char\20const*\2c\20unsigned\20long*\29 can change the state due to luaL_checklstring\28lua_State*\2c\20int\2c\20unsigned\20long*\29
[asyncify] ipairsaux\28lua_State*\29 can change the state due to luaL_checktype\28lua_State*\2c\20int\2c\20int\29
[asyncify] luaB_ipairs\28lua_State*\29 can change the state due to luaL_checktype\28lua_State*\2c\20int\2c\20int\29
[asyncify] luaB_pairs\28lua_State*\29 can change the state due to luaL_checktype\28lua_State*\2c\20int\2c\20int\29
[asyncify] luaB_rawget\28lua_State*\29 can change the state due to luaL_checktype\28lua_State*\2c\20int\2c\20int\29
[asyncify] luaB_rawequal\28lua_State*\29 can change the state due to luaL_checkany\28lua_State*\2c\20int\29
[asyncify] db_getmetatable\28lua_State*\29 can change the state due to luaL_checkany\28lua_State*\2c\20int\29
[asyncify] luaL_optnumber\28lua_State*\2c\20int\2c\20double\29 can change the state due to luaL_checknumber\28lua_State*\2c\20int\29
[asyncify] math_abs\28lua_State*\29 can change the state due to luaL_checknumber\28lua_State*\2c\20int\29
[asyncify] math_acos\28lua_State*\29 can change the state due to luaL_checknumber\28lua_State*\2c\20int\29
[asyncify] math_asin\28lua_State*\29 can change the state due to luaL_checknumber\28lua_State*\2c\20int\29
[asyncify] math_atan2\28lua_State*\29 can change the state due to luaL_checknumber\28lua_State*\2c\20int\29
[asyncify] math_atan\28lua_State*\29 can change the state due to luaL_checknumber\28lua_State*\2c\20int\29
[asyncify] math_ceil\28lua_State*\29 can change the state due to luaL_checknumber\28lua_State*\2c\20int\29
[asyncify] math_cosh\28lua_State*\29 can change the state due to luaL_checknumber\28lua_State*\2c\20int\29
[asyncify] math_cos\28lua_State*\29 can change the state due to luaL_checknumber\28lua_State*\2c\20int\29
[asyncify] math_deg\28lua_State*\29 can change the state due to luaL_checknumber\28lua_State*\2c\20int\29
[asyncify] math_exp\28lua_State*\29 can change the state due to luaL_checknumber\28lua_State*\2c\20int\29
[asyncify] math_floor\28lua_State*\29 can change the state due to luaL_checknumber\28lua_State*\2c\20int\29
[asyncify] math_fmod\28lua_State*\29 can change the state due to luaL_checknumber\28lua_State*\2c\20int\29
[asyncify] math_frexp\28lua_State*\29 can change the state due to luaL_checknumber\28lua_State*\2c\20int\29
[asyncify] math_ldexp\28lua_State*\29 can change the state due to luaL_checknumber\28lua_State*\2c\20int\29
[asyncify] math_log10\28lua_State*\29 can change the state due to luaL_checknumber\28lua_State*\2c\20int\29
[asyncify] math_log\28lua_State*\29 can change the state due to luaL_checknumber\28lua_State*\2c\20int\29
[asyncify] math_max\28lua_State*\29 can change the state due to luaL_checknumber\28lua_State*\2c\20int\29
[asyncify] math_min\28lua_State*\29 can change the state due to luaL_checknumber\28lua_State*\2c\20int\29
[asyncify] math_modf\28lua_State*\29 can change the state due to luaL_checknumber\28lua_State*\2c\20int\29
[asyncify] math_pow\28lua_State*\29 can change the state due to luaL_checknumber\28lua_State*\2c\20int\29
[asyncify] math_rad\28lua_State*\29 can change the state due to luaL_checknumber\28lua_State*\2c\20int\29
[asyncify] math_sinh\28lua_State*\29 can change the state due to luaL_checknumber\28lua_State*\2c\20int\29
[asyncify] math_sin\28lua_State*\29 can change the state due to luaL_checknumber\28lua_State*\2c\20int\29
[asyncify] math_sqrt\28lua_State*\29 can change the state due to luaL_checknumber\28lua_State*\2c\20int\29
[asyncify] math_tanh\28lua_State*\29 can change the state due to luaL_checknumber\28lua_State*\2c\20int\29
[asyncify] math_tan\28lua_State*\29 can change the state due to luaL_checknumber\28lua_State*\2c\20int\29
[asyncify] os_difftime\28lua_State*\29 can change the state due to luaL_checknumber\28lua_State*\2c\20int\29
[asyncify] luaL_optinteger\28lua_State*\2c\20int\2c\20long\29 can change the state due to luaL_checkinteger\28lua_State*\2c\20int\29
[asyncify] math_randomseed\28lua_State*\29 can change the state due to luaL_checkinteger\28lua_State*\2c\20int\29
[asyncify] luaopen_table\28lua_State*\29 can change the state due to luaL_register\28lua_State*\2c\20char\20const*\2c\20luaL_Reg\20const*\29
[asyncify] luaopen_debug\28lua_State*\29 can change the state due to luaL_register\28lua_State*\2c\20char\20const*\2c\20luaL_Reg\20const*\29
[asyncify] luaopen_os\28lua_State*\29 can change the state due to luaL_register\28lua_State*\2c\20char\20const*\2c\20luaL_Reg\20const*\29
[asyncify] str_find\28lua_State*\29 can change the state due to str_find_aux\28lua_State*\2c\20int\29
[asyncify] str_match\28lua_State*\29 can change the state due to str_find_aux\28lua_State*\2c\20int\29
[asyncify] writer\28lua_State*\2c\20void\20const*\2c\20unsigned\20long\2c\20void*\29 can change the state due to luaL_addlstring\28luaL_Buffer*\2c\20char\20const*\2c\20unsigned\20long\29
[asyncify] fwprintf can change the state due to vfwprintf
[asyncify] vswprintf can change the state due to vfwprintf
[asyncify] vwprintf can change the state due to vfwprintf
[asyncify] nsvg__parseAttr\28NSVGparser*\2c\20char\20const*\2c\20char\20const*\29 can change the state due to nsvg__parseColor\28char\20const*\29
[asyncify] strtof_l can change the state due to strtof
[asyncify] float\20std::__2::\28anonymous\20namespace\29::as_float_helper<float\2c\20std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\2c\20float\20\28*\29\28char\20const*\2c\20char**\29>\28std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\2c\20std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\2c\20unsigned\20long*\2c\20float\20\28*\29\28char\20const*\2c\20char**\29\29 can change the state due to strtof
[asyncify] luaO_str2d\28char\20const*\2c\20double*\29 can change the state due to strtod
[asyncify] SDL_strtod can change the state due to strtod
[asyncify] atof can change the state due to strtod
[asyncify] strtod_l can change the state due to strtod
[asyncify] double\20std::__2::\28anonymous\20namespace\29::as_float_helper<double\2c\20std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\2c\20double\20\28*\29\28char\20const*\2c\20char**\29>\28std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\2c\20std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\2c\20unsigned\20long*\2c\20double\20\28*\29\28char\20const*\2c\20char**\29\29 can change the state due to strtod
[asyncify] strtold_l can change the state due to strtold
[asyncify] long\20double\20std::__2::\28anonymous\20namespace\29::as_float_helper<long\20double\2c\20std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\2c\20long\20double\20\28*\29\28char\20const*\2c\20char**\29>\28std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\2c\20std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\2c\20unsigned\20long*\2c\20long\20double\20\28*\29\28char\20const*\2c\20char**\29\29 can change the state due to strtold
[asyncify] float\20std::__2::\28anonymous\20namespace\29::as_float_helper<float\2c\20std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>\2c\20float\20\28*\29\28wchar_t\20const*\2c\20wchar_t**\29>\28std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\2c\20std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>\20const&\2c\20unsigned\20long*\2c\20float\20\28*\29\28wchar_t\20const*\2c\20wchar_t**\29\29 can change the state due to wcstof
[asyncify] double\20std::__2::\28anonymous\20namespace\29::as_float_helper<double\2c\20std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>\2c\20double\20\28*\29\28wchar_t\20const*\2c\20wchar_t**\29>\28std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\2c\20std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>\20const&\2c\20unsigned\20long*\2c\20double\20\28*\29\28wchar_t\20const*\2c\20wchar_t**\29\29 can change the state due to wcstod
[asyncify] long\20double\20std::__2::\28anonymous\20namespace\29::as_float_helper<long\20double\2c\20std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>\2c\20long\20double\20\28*\29\28wchar_t\20const*\2c\20wchar_t**\29>\28std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\2c\20std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>\20const&\2c\20unsigned\20long*\2c\20long\20double\20\28*\29\28wchar_t\20const*\2c\20wchar_t**\29\29 can change the state due to wcstold
[asyncify] wcstoumax can change the state due to wcstoull
[asyncify] unsigned\20long\20long\20std::__2::\28anonymous\20namespace\29::as_integer_helper<unsigned\20long\20long\2c\20std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>\2c\20unsigned\20long\20long\20\28*\29\28wchar_t\20const*\2c\20wchar_t**\2c\20int\29>\28std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\2c\20std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>\20const&\2c\20unsigned\20long*\2c\20int\2c\20unsigned\20long\20long\20\28*\29\28wchar_t\20const*\2c\20wchar_t**\2c\20int\29\29 can change the state due to wcstoull
[asyncify] legalstub$wcstoull can change the state due to wcstoull
[asyncify] wcstoimax can change the state due to wcstoll
[asyncify] long\20long\20std::__2::\28anonymous\20namespace\29::as_integer_helper<long\20long\2c\20std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>\2c\20long\20long\20\28*\29\28wchar_t\20const*\2c\20wchar_t**\2c\20int\29>\28std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\2c\20std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>\20const&\2c\20unsigned\20long*\2c\20int\2c\20long\20long\20\28*\29\28wchar_t\20const*\2c\20wchar_t**\2c\20int\29\29 can change the state due to wcstoll
[asyncify] legalstub$wcstoll can change the state due to wcstoll
[asyncify] unsigned\20long\20std::__2::\28anonymous\20namespace\29::as_integer_helper<unsigned\20long\2c\20std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>\2c\20unsigned\20long\20\28*\29\28wchar_t\20const*\2c\20wchar_t**\2c\20int\29>\28std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\2c\20std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>\20const&\2c\20unsigned\20long*\2c\20int\2c\20unsigned\20long\20\28*\29\28wchar_t\20const*\2c\20wchar_t**\2c\20int\29\29 can change the state due to wcstoul
[asyncify] long\20std::__2::\28anonymous\20namespace\29::as_integer_helper<long\2c\20std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>\2c\20long\20\28*\29\28wchar_t\20const*\2c\20wchar_t**\2c\20int\29>\28std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\2c\20std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>\20const&\2c\20unsigned\20long*\2c\20int\2c\20long\20\28*\29\28wchar_t\20const*\2c\20wchar_t**\2c\20int\29\29 can change the state due to wcstol
[asyncify] getopt_long can change the state due to __getopt_long
[asyncify] getopt_long_only can change the state due to __getopt_long
[asyncify] tre_parse can change the state due to parse_atom
[asyncify] SDL_GetJoystickGameControllerTypeFromVIDPID can change the state due to GuessControllerType
[asyncify] SDL_IsJoystickXboxOne can change the state due to GuessControllerType
[asyncify] SDL_IsJoystickPS4 can change the state due to GuessControllerType
[asyncify] SDL_IsJoystickPS5 can change the state due to GuessControllerType
[asyncify] SDL_IsJoystickNintendoSwitchPro can change the state due to GuessControllerType
[asyncify] SDL_IsJoystickNintendoSwitchProInputOnly can change the state due to GuessControllerType
[asyncify] SDL_IsJoystickNintendoSwitchJoyCon can change the state due to GuessControllerType
[asyncify] SDL_IsJoystickNintendoSwitchJoyConLeft can change the state due to GuessControllerType
[asyncify] SDL_IsJoystickNintendoSwitchJoyConRight can change the state due to GuessControllerType
[asyncify] SDL_IsJoystickSteamController can change the state due to GuessControllerType
[asyncify] SDL_GetJoystickGUIDType can change the state due to GuessControllerType
[asyncify] __dl_invalid_handle can change the state due to error
[asyncify] load_library_start can change the state due to error
[asyncify] gzopen can change the state due to gz_open
[asyncify] gzopen64 can change the state due to gz_open
[asyncify] gz_avail can change the state due to gz_error
[asyncify] asctime can change the state due to __asctime_r
[asyncify] ctime_r can change the state due to __asctime_r
[asyncify] dcgettext can change the state due to dcngettext
[asyncify] dngettext can change the state due to dcngettext
[asyncify] dgettext can change the state due to dcngettext
[asyncify] ptsname can change the state due to __ptsname_r
[asyncify] strfmon_l can change the state due to vstrfmon_l
[asyncify] strfmon can change the state due to vstrfmon_l
[asyncify] std::__2::to_string\28float\29 can change the state due to std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20std::__2::\28anonymous\20namespace\29::as_string<std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\2c\20int\20\28*\29\28char*\2c\20unsigned\20long\2c\20char\20const*\2c\20...\29\2c\20float>\28int\20\28*\29\28char*\2c\20unsigned\20long\2c\20char\20const*\2c\20...\29\2c\20std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\2c\20std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::value_type\20const*\2c\20float\29
[asyncify] std::__2::to_string\28double\29 can change the state due to std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20std::__2::\28anonymous\20namespace\29::as_string<std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\2c\20int\20\28*\29\28char*\2c\20unsigned\20long\2c\20char\20const*\2c\20...\29\2c\20double>\28int\20\28*\29\28char*\2c\20unsigned\20long\2c\20char\20const*\2c\20...\29\2c\20std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\2c\20std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::value_type\20const*\2c\20double\29
[asyncify] std::__2::to_string\28long\20double\29 can change the state due to std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20std::__2::\28anonymous\20namespace\29::as_string<std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\2c\20int\20\28*\29\28char*\2c\20unsigned\20long\2c\20char\20const*\2c\20...\29\2c\20long\20double>\28int\20\28*\29\28char*\2c\20unsigned\20long\2c\20char\20const*\2c\20...\29\2c\20std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\2c\20std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::value_type\20const*\2c\20long\20double\29
[asyncify] std::__2::__do_message::message\28int\29\20const can change the state due to std::__2::\28anonymous\20namespace\29::do_strerror_r\28int\29
[asyncify] syslog can change the state due to __vsyslog
[asyncify] sha256crypt can change the state due to sprintf
[asyncify] sha512crypt can change the state due to sprintf
[asyncify] ecvt can change the state due to sprintf
[asyncify] ether_ntoa_r can change the state due to sprintf
[asyncify] fcvt can change the state due to sprintf
[asyncify] gcvt can change the state due to sprintf
[asyncify] std::__2::__fs::filesystem::detail::\28anonymous\20namespace\29::ErrorHandler<void>::report\28std::__2::error_code\20const&\2c\20char\20const*\2c\20...\29\20const can change the state due to std::__2::__fs::filesystem::detail::\28anonymous\20namespace\29::ErrorHandler<void>::report_impl\28std::__2::error_code\20const&\2c\20char\20const*\2c\20void*\29\20const
[asyncify] std::__2::__fs::filesystem::filesystem_error::__create_what\28int\29::$_0::operator\28\29\28\29\20const can change the state due to std::__2::__fs::filesystem::detail::\28anonymous\20namespace\29::format_string\28char\20const*\2c\20...\29
[asyncify] std::__2::__fs::filesystem::detail::\28anonymous\20namespace\29::ErrorHandler<bool>::report\28std::__2::errc\20const&\2c\20char\20const*\2c\20...\29\20const can change the state due to std::__2::__fs::filesystem::detail::\28anonymous\20namespace\29::ErrorHandler<bool>::report_impl\28std::__2::error_code\20const&\2c\20char\20const*\2c\20void*\29\20const
[asyncify] std::__2::__fs::filesystem::detail::\28anonymous\20namespace\29::ErrorHandler<std::__2::__fs::filesystem::path>::report\28std::__2::error_code\20const&\2c\20char\20const*\2c\20...\29\20const can change the state due to std::__2::__fs::filesystem::detail::\28anonymous\20namespace\29::ErrorHandler<std::__2::__fs::filesystem::path>::report_impl\28std::__2::error_code\20const&\2c\20char\20const*\2c\20void*\29\20const
[asyncify] std::__2::__fs::filesystem::detail::\28anonymous\20namespace\29::ErrorHandler<std::__2::__fs::filesystem::path>::report\28std::__2::errc\20const&\2c\20char\20const*\2c\20...\29\20const can change the state due to std::__2::__fs::filesystem::detail::\28anonymous\20namespace\29::ErrorHandler<std::__2::__fs::filesystem::path>::report_impl\28std::__2::error_code\20const&\2c\20char\20const*\2c\20void*\29\20const
[asyncify] std::__2::__fs::filesystem::detail::\28anonymous\20namespace\29::ErrorHandler<void>::report\28std::__2::error_code\20const&\2c\20char\20const*\2c\20...\29\20const.1 can change the state due to std::__2::__fs::filesystem::detail::\28anonymous\20namespace\29::ErrorHandler<void>::report_impl\28std::__2::error_code\20const&\2c\20char\20const*\2c\20void*\29\20const.1
[asyncify] int\20std::__2::\28anonymous\20namespace\29::as_integer<int\2c\20std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>>\28std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\2c\20std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\2c\20unsigned\20long*\2c\20int\29 can change the state due to std::__2::\28anonymous\20namespace\29::throw_from_string_out_of_range\28std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\29
[asyncify] long\20std::__2::\28anonymous\20namespace\29::as_integer_helper<long\2c\20std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\2c\20long\20\28*\29\28char\20const*\2c\20char**\2c\20int\29>\28std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\2c\20std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\2c\20unsigned\20long*\2c\20int\2c\20long\20\28*\29\28char\20const*\2c\20char**\2c\20int\29\29 can change the state due to std::__2::\28anonymous\20namespace\29::throw_from_string_out_of_range\28std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\29
[asyncify] unsigned\20long\20std::__2::\28anonymous\20namespace\29::as_integer_helper<unsigned\20long\2c\20std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\2c\20unsigned\20long\20\28*\29\28char\20const*\2c\20char**\2c\20int\29>\28std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\2c\20std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\2c\20unsigned\20long*\2c\20int\2c\20unsigned\20long\20\28*\29\28char\20const*\2c\20char**\2c\20int\29\29 can change the state due to std::__2::\28anonymous\20namespace\29::throw_from_string_out_of_range\28std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\29
[asyncify] long\20long\20std::__2::\28anonymous\20namespace\29::as_integer_helper<long\20long\2c\20std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\2c\20long\20long\20\28*\29\28char\20const*\2c\20char**\2c\20int\29>\28std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\2c\20std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\2c\20unsigned\20long*\2c\20int\2c\20long\20long\20\28*\29\28char\20const*\2c\20char**\2c\20int\29\29 can change the state due to std::__2::\28anonymous\20namespace\29::throw_from_string_out_of_range\28std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\29
[asyncify] unsigned\20long\20long\20std::__2::\28anonymous\20namespace\29::as_integer_helper<unsigned\20long\20long\2c\20std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\2c\20unsigned\20long\20long\20\28*\29\28char\20const*\2c\20char**\2c\20int\29>\28std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\2c\20std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\2c\20unsigned\20long*\2c\20int\2c\20unsigned\20long\20long\20\28*\29\28char\20const*\2c\20char**\2c\20int\29\29 can change the state due to std::__2::\28anonymous\20namespace\29::throw_from_string_out_of_range\28std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\29
[asyncify] int\20std::__2::\28anonymous\20namespace\29::as_integer<int\2c\20std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>>\28std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\2c\20std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>\20const&\2c\20unsigned\20long*\2c\20int\29 can change the state due to std::__2::\28anonymous\20namespace\29::throw_from_string_out_of_range\28std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\29
[asyncify] MT32Emu::RhythmPart::RhythmPart\28MT32Emu::Synth*\2c\20unsigned\20int\29 can change the state due to siprintf
[asyncify] MT32Emu::Part::Part\28MT32Emu::Synth*\2c\20unsigned\20int\29 can change the state due to siprintf
[asyncify] format_message can change the state due to siprintf
[asyncify] std::__2::__fs::filesystem::directory_iterator::increment\5babi:v15006\5d\28std::__2::error_code&\29 can change the state due to std::__2::__fs::filesystem::directory_iterator::__increment\28std::__2::error_code*\29
[asyncify] std::__2::__fs::filesystem::recursive_directory_iterator::__increment\28std::__2::error_code*\29 can change the state due to std::__2::__fs::filesystem::recursive_directory_iterator::__advance\28std::__2::error_code*\29
[asyncify] std::__2::locale::__imp::make_classic\28\29 can change the state due to std::__2::locale::__imp&\20std::__2::\28anonymous\20namespace\29::make<std::__2::locale::__imp\2c\20unsigned\20int>\28unsigned\20int\29
[asyncify] std::__2::basic_ostream<char\2c\20std::__2::char_traits<char>>::swap\5babi:v15006\5d\28std::__2::basic_ostream<char\2c\20std::__2::char_traits<char>>&\29 can change the state due to std::__2::basic_ios<char\2c\20std::__2::char_traits<char>>::swap\5babi:v15006\5d\28std::__2::basic_ios<char\2c\20std::__2::char_traits<char>>&\29
[asyncify] std::__2::basic_istream<char\2c\20std::__2::char_traits<char>>::swap\5babi:v15006\5d\28std::__2::basic_istream<char\2c\20std::__2::char_traits<char>>&\29 can change the state due to std::__2::basic_ios<char\2c\20std::__2::char_traits<char>>::swap\5babi:v15006\5d\28std::__2::basic_ios<char\2c\20std::__2::char_traits<char>>&\29
[asyncify] std::__2::time_put<char\2c\20std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>>::do_put\28std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::ios_base&\2c\20char\2c\20tm\20const*\2c\20char\2c\20char\29\20const can change the state due to std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>\20std::__2::copy\5babi:v15006\5d<char*\2c\20std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>>\28char*\2c\20char*\2c\20std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>\29
[asyncify] std::__2::time_put<wchar_t\2c\20std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>::do_put\28std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\2c\20std::__2::ios_base&\2c\20wchar_t\2c\20tm\20const*\2c\20char\2c\20char\29\20const can change the state due to std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\20std::__2::copy\5babi:v15006\5d<wchar_t*\2c\20std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>\28wchar_t*\2c\20wchar_t*\2c\20std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>\29
[asyncify] virtual\20thunk\20to\20std::__2::basic_ifstream<char\2c\20std::__2::char_traits<char>>::~basic_ifstream\28\29.1 can change the state due to std::__2::basic_ifstream<char\2c\20std::__2::char_traits<char>>::~basic_ifstream\28\29.2
[asyncify] virtual\20thunk\20to\20std::__2::basic_ofstream<char\2c\20std::__2::char_traits<char>>::~basic_ofstream\28\29.1 can change the state due to std::__2::basic_ofstream<char\2c\20std::__2::char_traits<char>>::~basic_ofstream\28\29.2
[asyncify] virtual\20thunk\20to\20std::__2::basic_istream<char\2c\20std::__2::char_traits<char>>::~basic_istream\28\29.1 can change the state due to std::__2::basic_istream<char\2c\20std::__2::char_traits<char>>::~basic_istream\28\29.2
[asyncify] virtual\20thunk\20to\20std::__2::basic_ostream<char\2c\20std::__2::char_traits<char>>::~basic_ostream\28\29.1 can change the state due to std::__2::basic_ostream<char\2c\20std::__2::char_traits<char>>::~basic_ostream\28\29.2
[asyncify] non-virtual\20thunk\20to\20std::__2::basic_iostream<char\2c\20std::__2::char_traits<char>>::~basic_iostream\28\29.1 can change the state due to std::__2::basic_iostream<char\2c\20std::__2::char_traits<char>>::~basic_iostream\28\29.2
[asyncify] virtual\20thunk\20to\20std::__2::basic_iostream<char\2c\20std::__2::char_traits<char>>::~basic_iostream\28\29.1 can change the state due to std::__2::basic_iostream<char\2c\20std::__2::char_traits<char>>::~basic_iostream\28\29.2
[asyncify] non-virtual\20thunk\20to\20std::__2::basic_stringstream<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::~basic_stringstream\28\29.1 can change the state due to std::__2::basic_stringstream<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::~basic_stringstream\28\29.2
[asyncify] virtual\20thunk\20to\20std::__2::basic_stringstream<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::~basic_stringstream\28\29.1 can change the state due to std::__2::basic_stringstream<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::~basic_stringstream\28\29.2
[asyncify] virtual\20thunk\20to\20std::__2::basic_ostringstream<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::~basic_ostringstream\28\29.1 can change the state due to std::__2::basic_ostringstream<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::~basic_ostringstream\28\29.2
[asyncify] virtual\20thunk\20to\20std::__2::basic_istringstream<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::~basic_istringstream\28\29.1 can change the state due to std::__2::basic_istringstream<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::~basic_istringstream\28\29.2
[asyncify] virtual\20thunk\20to\20std::__2::basic_istream<wchar_t\2c\20std::__2::char_traits<wchar_t>>::~basic_istream\28\29.1 can change the state due to std::__2::basic_istream<wchar_t\2c\20std::__2::char_traits<wchar_t>>::~basic_istream\28\29.2
[asyncify] virtual\20thunk\20to\20std::__2::basic_ostream<wchar_t\2c\20std::__2::char_traits<wchar_t>>::~basic_ostream\28\29.1 can change the state due to std::__2::basic_ostream<wchar_t\2c\20std::__2::char_traits<wchar_t>>::~basic_ostream\28\29.2
[asyncify] __wasm_call_ctors can change the state due to _GLOBAL__I_000100
[asyncify] std::__2::time_get_byname<char\2c\20std::__2::istreambuf_iterator<char\2c\20std::__2::char_traits<char>>>::time_get_byname\5babi:v15006\5d\28std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\2c\20unsigned\20long\29 can change the state due to std::__2::__time_get_storage<char>::__time_get_storage\28std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\29
[asyncify] std::__2::enable_if<__is_cpp17_forward_iterator<char\20const*>::value\2c\20void>::type\20std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::__init<char\20const*>\28char\20const*\2c\20char\20const*\29 can change the state due to std::__2::__allocation_result<std::__2::allocator_traits<std::__2::allocator<char>>::pointer>\20std::__2::__allocate_at_least\5babi:v15006\5d<std::__2::allocator<char>>\28std::__2::allocator<char>&\2c\20unsigned\20long\29
[asyncify] std::__2::enable_if<__is_cpp17_forward_iterator<char*>::value\2c\20void>::type\20std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::__init<char*>\28char*\2c\20char*\29 can change the state due to std::__2::__allocation_result<std::__2::allocator_traits<std::__2::allocator<char>>::pointer>\20std::__2::__allocate_at_least\5babi:v15006\5d<std::__2::allocator<char>>\28std::__2::allocator<char>&\2c\20unsigned\20long\29
[asyncify] std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::__grow_by_and_replace\28unsigned\20long\2c\20unsigned\20long\2c\20unsigned\20long\2c\20unsigned\20long\2c\20unsigned\20long\2c\20unsigned\20long\2c\20char\20const*\29 can change the state due to std::__2::__allocation_result<std::__2::allocator_traits<std::__2::allocator<char>>::pointer>\20std::__2::__allocate_at_least\5babi:v15006\5d<std::__2::allocator<char>>\28std::__2::allocator<char>&\2c\20unsigned\20long\29
[asyncify] std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::__init\28char\20const*\2c\20unsigned\20long\2c\20unsigned\20long\29 can change the state due to std::__2::__allocation_result<std::__2::allocator_traits<std::__2::allocator<char>>::pointer>\20std::__2::__allocate_at_least\5babi:v15006\5d<std::__2::allocator<char>>\28std::__2::allocator<char>&\2c\20unsigned\20long\29
[asyncify] std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::__grow_by\28unsigned\20long\2c\20unsigned\20long\2c\20unsigned\20long\2c\20unsigned\20long\2c\20unsigned\20long\2c\20unsigned\20long\29 can change the state due to std::__2::__allocation_result<std::__2::allocator_traits<std::__2::allocator<char>>::pointer>\20std::__2::__allocate_at_least\5babi:v15006\5d<std::__2::allocator<char>>\28std::__2::allocator<char>&\2c\20unsigned\20long\29
[asyncify] std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::__init\28char\20const*\2c\20unsigned\20long\29 can change the state due to std::__2::__allocation_result<std::__2::allocator_traits<std::__2::allocator<char>>::pointer>\20std::__2::__allocate_at_least\5babi:v15006\5d<std::__2::allocator<char>>\28std::__2::allocator<char>&\2c\20unsigned\20long\29
[asyncify] std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::__init_copy_ctor_external\28char\20const*\2c\20unsigned\20long\29 can change the state due to std::__2::__allocation_result<std::__2::allocator_traits<std::__2::allocator<char>>::pointer>\20std::__2::__allocate_at_least\5babi:v15006\5d<std::__2::allocator<char>>\28std::__2::allocator<char>&\2c\20unsigned\20long\29
[asyncify] std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::__shrink_or_extend\5babi:v15006\5d\28unsigned\20long\29 can change the state due to std::__2::__allocation_result<std::__2::allocator_traits<std::__2::allocator<char>>::pointer>\20std::__2::__allocate_at_least\5babi:v15006\5d<std::__2::allocator<char>>\28std::__2::allocator<char>&\2c\20unsigned\20long\29
[asyncify] std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::__init\28unsigned\20long\2c\20char\29 can change the state due to std::__2::__allocation_result<std::__2::allocator_traits<std::__2::allocator<char>>::pointer>\20std::__2::__allocate_at_least\5babi:v15006\5d<std::__2::allocator<char>>\28std::__2::allocator<char>&\2c\20unsigned\20long\29
[asyncify] std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::basic_string\5babi:v15006\5d\28std::__2::__uninitialized_size_tag\2c\20unsigned\20long\2c\20std::__2::allocator<char>\20const&\29 can change the state due to std::__2::allocator_traits<std::__2::allocator<char>>::allocate\5babi:v15006\5d\28std::__2::allocator<char>&\2c\20unsigned\20long\29
[asyncify] std::__2::__allocation_guard<std::__2::allocator<std::__2::__shared_ptr_emplace<std::__2::__fs::filesystem::__dir_stream\2c\20std::__2::allocator<std::__2::__fs::filesystem::__dir_stream>>>>::__allocation_guard\5babi:v15006\5d<std::__2::allocator<std::__2::__fs::filesystem::__dir_stream>>\28std::__2::allocator<std::__2::__fs::filesystem::__dir_stream>\2c\20unsigned\20long\29 can change the state due to std::__2::allocator_traits<std::__2::allocator<std::__2::__shared_ptr_emplace<std::__2::__fs::filesystem::__dir_stream\2c\20std::__2::allocator<std::__2::__fs::filesystem::__dir_stream>>>>::allocate\5babi:v15006\5d\28std::__2::allocator<std::__2::__shared_ptr_emplace<std::__2::__fs::filesystem::__dir_stream\2c\20std::__2::allocator<std::__2::__fs::filesystem::__dir_stream>>>&\2c\20unsigned\20long\29
[asyncify] std::__2::__allocation_guard<std::__2::allocator<std::__2::__shared_ptr_emplace<std::__2::__fs::filesystem::recursive_directory_iterator::__shared_imp\2c\20std::__2::allocator<std::__2::__fs::filesystem::recursive_directory_iterator::__shared_imp>>>>::__allocation_guard\5babi:v15006\5d<std::__2::allocator<std::__2::__fs::filesystem::recursive_directory_iterator::__shared_imp>>\28std::__2::allocator<std::__2::__fs::filesystem::recursive_directory_iterator::__shared_imp>\2c\20unsigned\20long\29 can change the state due to std::__2::allocator_traits<std::__2::allocator<std::__2::__shared_ptr_emplace<std::__2::__fs::filesystem::recursive_directory_iterator::__shared_imp\2c\20std::__2::allocator<std::__2::__fs::filesystem::recursive_directory_iterator::__shared_imp>>>>::allocate\5babi:v15006\5d\28std::__2::allocator<std::__2::__shared_ptr_emplace<std::__2::__fs::filesystem::recursive_directory_iterator::__shared_imp\2c\20std::__2::allocator<std::__2::__fs::filesystem::recursive_directory_iterator::__shared_imp>>>&\2c\20unsigned\20long\29
[asyncify] std::__2::deque<std::__2::__fs::filesystem::__dir_stream\2c\20std::__2::allocator<std::__2::__fs::filesystem::__dir_stream>>::__add_back_capacity\28\29 can change the state due to std::__2::allocator_traits<std::__2::allocator<std::__2::__fs::filesystem::__dir_stream>>::allocate\5babi:v15006\5d\28std::__2::allocator<std::__2::__fs::filesystem::__dir_stream>&\2c\20unsigned\20long\29
[asyncify] std::__2::__split_buffer<std::__2::__fs::filesystem::__dir_stream*\2c\20std::__2::allocator<std::__2::__fs::filesystem::__dir_stream*>&>::__split_buffer\28unsigned\20long\2c\20unsigned\20long\2c\20std::__2::allocator<std::__2::__fs::filesystem::__dir_stream*>&\29 can change the state due to std::__2::__allocation_result<std::__2::allocator_traits<std::__2::allocator<std::__2::__fs::filesystem::__dir_stream*>>::pointer>\20std::__2::__allocate_at_least\5babi:v15006\5d<std::__2::allocator<std::__2::__fs::filesystem::__dir_stream*>>\28std::__2::allocator<std::__2::__fs::filesystem::__dir_stream*>&\2c\20unsigned\20long\29
[asyncify] std::__2::enable_if<__is_cpp17_forward_iterator<wchar_t\20const*>::value\2c\20void>::type\20std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>::__init<wchar_t\20const*>\28wchar_t\20const*\2c\20wchar_t\20const*\29 can change the state due to std::__2::__allocation_result<std::__2::allocator_traits<std::__2::allocator<wchar_t>>::pointer>\20std::__2::__allocate_at_least\5babi:v15006\5d<std::__2::allocator<wchar_t>>\28std::__2::allocator<wchar_t>&\2c\20unsigned\20long\29
[asyncify] std::__2::enable_if<__is_cpp17_forward_iterator<wchar_t*>::value\2c\20void>::type\20std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>::__init<wchar_t*>\28wchar_t*\2c\20wchar_t*\29 can change the state due to std::__2::__allocation_result<std::__2::allocator_traits<std::__2::allocator<wchar_t>>::pointer>\20std::__2::__allocate_at_least\5babi:v15006\5d<std::__2::allocator<wchar_t>>\28std::__2::allocator<wchar_t>&\2c\20unsigned\20long\29
[asyncify] std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>::__grow_by_and_replace\28unsigned\20long\2c\20unsigned\20long\2c\20unsigned\20long\2c\20unsigned\20long\2c\20unsigned\20long\2c\20unsigned\20long\2c\20wchar_t\20const*\29 can change the state due to std::__2::__allocation_result<std::__2::allocator_traits<std::__2::allocator<wchar_t>>::pointer>\20std::__2::__allocate_at_least\5babi:v15006\5d<std::__2::allocator<wchar_t>>\28std::__2::allocator<wchar_t>&\2c\20unsigned\20long\29
[asyncify] std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>::__init\28wchar_t\20const*\2c\20unsigned\20long\2c\20unsigned\20long\29 can change the state due to std::__2::__allocation_result<std::__2::allocator_traits<std::__2::allocator<wchar_t>>::pointer>\20std::__2::__allocate_at_least\5babi:v15006\5d<std::__2::allocator<wchar_t>>\28std::__2::allocator<wchar_t>&\2c\20unsigned\20long\29
[asyncify] std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>::__grow_by\28unsigned\20long\2c\20unsigned\20long\2c\20unsigned\20long\2c\20unsigned\20long\2c\20unsigned\20long\2c\20unsigned\20long\29 can change the state due to std::__2::__allocation_result<std::__2::allocator_traits<std::__2::allocator<wchar_t>>::pointer>\20std::__2::__allocate_at_least\5babi:v15006\5d<std::__2::allocator<wchar_t>>\28std::__2::allocator<wchar_t>&\2c\20unsigned\20long\29
[asyncify] std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>::__init\28wchar_t\20const*\2c\20unsigned\20long\29 can change the state due to std::__2::__allocation_result<std::__2::allocator_traits<std::__2::allocator<wchar_t>>::pointer>\20std::__2::__allocate_at_least\5babi:v15006\5d<std::__2::allocator<wchar_t>>\28std::__2::allocator<wchar_t>&\2c\20unsigned\20long\29
[asyncify] std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>::__init_copy_ctor_external\28wchar_t\20const*\2c\20unsigned\20long\29 can change the state due to std::__2::__allocation_result<std::__2::allocator_traits<std::__2::allocator<wchar_t>>::pointer>\20std::__2::__allocate_at_least\5babi:v15006\5d<std::__2::allocator<wchar_t>>\28std::__2::allocator<wchar_t>&\2c\20unsigned\20long\29
[asyncify] std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>::__shrink_or_extend\5babi:v15006\5d\28unsigned\20long\29 can change the state due to std::__2::__allocation_result<std::__2::allocator_traits<std::__2::allocator<wchar_t>>::pointer>\20std::__2::__allocate_at_least\5babi:v15006\5d<std::__2::allocator<wchar_t>>\28std::__2::allocator<wchar_t>&\2c\20unsigned\20long\29
[asyncify] std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>::__init\28unsigned\20long\2c\20wchar_t\29 can change the state due to std::__2::__allocation_result<std::__2::allocator_traits<std::__2::allocator<wchar_t>>::pointer>\20std::__2::__allocate_at_least\5babi:v15006\5d<std::__2::allocator<wchar_t>>\28std::__2::allocator<wchar_t>&\2c\20unsigned\20long\29
[asyncify] std::__2::enable_if<__is_cpp17_forward_iterator<char*>::value\2c\20void>::type\20std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>::__init<char*>\28char*\2c\20char*\29 can change the state due to std::__2::__allocation_result<std::__2::allocator_traits<std::__2::allocator<wchar_t>>::pointer>\20std::__2::__allocate_at_least\5babi:v15006\5d<std::__2::allocator<wchar_t>>\28std::__2::allocator<wchar_t>&\2c\20unsigned\20long\29
[asyncify] std::__2::__allocation_result<std::__2::allocator_traits<std::__2::__sso_allocator<std::__2::locale::facet*\2c\2030ul>>::pointer>\20std::__2::__allocate_at_least\5babi:v15006\5d<std::__2::__sso_allocator<std::__2::locale::facet*\2c\2030ul>>\28std::__2::__sso_allocator<std::__2::locale::facet*\2c\2030ul>&\2c\20unsigned\20long\29 can change the state due to std::__2::__sso_allocator<std::__2::locale::facet*\2c\2030ul>::allocate\5babi:v15006\5d\28unsigned\20long\2c\20void\20const*\29
[asyncify] std::__2::__split_buffer<std::__2::basic_string_view<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::allocator<std::__2::basic_string_view<char\2c\20std::__2::char_traits<char>>>&>::__split_buffer\28unsigned\20long\2c\20unsigned\20long\2c\20std::__2::allocator<std::__2::basic_string_view<char\2c\20std::__2::char_traits<char>>>&\29 can change the state due to std::__2::__allocation_result<std::__2::allocator_traits<std::__2::allocator<std::__2::basic_string_view<char\2c\20std::__2::char_traits<char>>>>::pointer>\20std::__2::__allocate_at_least\5babi:v15006\5d<std::__2::allocator<std::__2::basic_string_view<char\2c\20std::__2::char_traits<char>>>>\28std::__2::allocator<std::__2::basic_string_view<char\2c\20std::__2::char_traits<char>>>&\2c\20unsigned\20long\29
[asyncify] std::__2::__split_buffer<std::__2::pair<std::__2::basic_string_view<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::__fs::filesystem::PathPartKind>\2c\20std::__2::allocator<std::__2::pair<std::__2::basic_string_view<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::__fs::filesystem::PathPartKind>>&>::__split_buffer\28unsigned\20long\2c\20unsigned\20long\2c\20std::__2::allocator<std::__2::pair<std::__2::basic_string_view<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::__fs::filesystem::PathPartKind>>&\29 can change the state due to std::__2::__allocation_result<std::__2::allocator_traits<std::__2::allocator<std::__2::pair<std::__2::basic_string_view<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::__fs::filesystem::PathPartKind>>>::pointer>\20std::__2::__allocate_at_least\5babi:v15006\5d<std::__2::allocator<std::__2::pair<std::__2::basic_string_view<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::__fs::filesystem::PathPartKind>>>\28std::__2::allocator<std::__2::pair<std::__2::basic_string_view<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::__fs::filesystem::PathPartKind>>&\2c\20unsigned\20long\29
[asyncify] std::__2::gslice::__init\28unsigned\20long\29 can change the state due to std::__2::valarray<unsigned\20long>::resize\28unsigned\20long\2c\20unsigned\20long\29
[asyncify] SegaCDSoundPlugin::createInstance\28MidiDriver**\2c\20unsigned\20int\29\20const can change the state due to Common::Error::Error\28Common::ErrorCode\29
[asyncify] TownsEmuMusicPlugin::createInstance\28MidiDriver**\2c\20unsigned\20int\29\20const can change the state due to Common::Error::Error\28Common::ErrorCode\29
[asyncify] PC98EmuMusicPlugin::createInstance\28MidiDriver**\2c\20unsigned\20int\29\20const can change the state due to Common::Error::Error\28Common::ErrorCode\29
[asyncify] Engine::loadGameStream\28Common::SeekableReadStream*\29 can change the state due to Common::Error::Error\28Common::ErrorCode\29
[asyncify] Engine::saveGameStream\28Common::WriteStream*\2c\20bool\29 can change the state due to Common::Error::Error\28Common::ErrorCode\29
[asyncify] std::__2::vector<std::__2::pair<std::__2::condition_variable*\2c\20std::__2::mutex*>\2c\20std::__2::__hidden_allocator<std::__2::pair<std::__2::condition_variable*\2c\20std::__2::mutex*>>>::push_back\5babi:v15006\5d\28std::__2::pair<std::__2::condition_variable*\2c\20std::__2::mutex*>&&\29 can change the state due to void\20std::__2::vector<std::__2::pair<std::__2::condition_variable*\2c\20std::__2::mutex*>\2c\20std::__2::__hidden_allocator<std::__2::pair<std::__2::condition_variable*\2c\20std::__2::mutex*>>>::__push_back_slow_path<std::__2::pair<std::__2::condition_variable*\2c\20std::__2::mutex*>>\28std::__2::pair<std::__2::condition_variable*\2c\20std::__2::mutex*>&&\29
[asyncify] std::__2::vector<std::__2::__assoc_sub_state*\2c\20std::__2::__hidden_allocator<std::__2::__assoc_sub_state*>>::push_back\5babi:v15006\5d\28std::__2::__assoc_sub_state*\20const&\29 can change the state due to void\20std::__2::vector<std::__2::__assoc_sub_state*\2c\20std::__2::__hidden_allocator<std::__2::__assoc_sub_state*>>::__push_back_slow_path<std::__2::__assoc_sub_state*\20const&>\28std::__2::__assoc_sub_state*\20const&\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::OutputBuffer::operator<<\28unsigned\20long\20long\29 can change the state due to \28anonymous\20namespace\29::itanium_demangle::OutputBuffer::writeUnsigned\28unsigned\20long\20long\2c\20bool\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::SpecialSubstitution::printLeft\28\28anonymous\20namespace\29::itanium_demangle::OutputBuffer&\29\20const can change the state due to \28anonymous\20namespace\29::itanium_demangle::OutputBuffer::operator<<\28\28anonymous\20namespace\29::itanium_demangle::StringView\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::Node*\20\28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::make<\28anonymous\20namespace\29::itanium_demangle::DotSuffix\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::StringView>\28\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::StringView&&\29 can change the state due to \28anonymous\20namespace\29::itanium_demangle::DotSuffix*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::DotSuffix\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::StringView>\28\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::StringView&&\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::Node*\20\28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::make<\28anonymous\20namespace\29::itanium_demangle::SpecialName\2c\20char\20const\20\28&\29\20\5b34\5d\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&>\28char\20const\20\28&\29\20\5b34\5d\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\29 can change the state due to \28anonymous\20namespace\29::itanium_demangle::SpecialName*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::SpecialName\2c\20char\20const\20\28&\29\20\5b34\5d\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&>\28char\20const\20\28&\29\20\5b34\5d\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::Node*\20\28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::make<\28anonymous\20namespace\29::itanium_demangle::EnableIfAttr\2c\20\28anonymous\20namespace\29::itanium_demangle::NodeArray>\28\28anonymous\20namespace\29::itanium_demangle::NodeArray&&\29 can change the state due to \28anonymous\20namespace\29::itanium_demangle::EnableIfAttr*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::EnableIfAttr\2c\20\28anonymous\20namespace\29::itanium_demangle::NodeArray>\28\28anonymous\20namespace\29::itanium_demangle::NodeArray&&\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::Node*\20\28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::make<\28anonymous\20namespace\29::itanium_demangle::FunctionEncoding\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::NodeArray\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Qualifiers&\2c\20\28anonymous\20namespace\29::itanium_demangle::FunctionRefQual&>\28\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::NodeArray&&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Qualifiers&\2c\20\28anonymous\20namespace\29::itanium_demangle::FunctionRefQual&\29 can change the state due to \28anonymous\20namespace\29::itanium_demangle::FunctionEncoding*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::FunctionEncoding\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::NodeArray\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Qualifiers&\2c\20\28anonymous\20namespace\29::itanium_demangle::FunctionRefQual&>\28\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::NodeArray&&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Qualifiers&\2c\20\28anonymous\20namespace\29::itanium_demangle::FunctionRefQual&\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::Node*\20\28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::make<\28anonymous\20namespace\29::itanium_demangle::SpecialName\2c\20char\20const\20\28&\29\20\5b31\5d\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&>\28char\20const\20\28&\29\20\5b31\5d\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\29 can change the state due to \28anonymous\20namespace\29::itanium_demangle::SpecialName*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::SpecialName\2c\20char\20const\20\28&\29\20\5b31\5d\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&>\28char\20const\20\28&\29\20\5b31\5d\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::Node*\20\28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::make<\28anonymous\20namespace\29::itanium_demangle::SpecialName\2c\20char\20const\20\28&\29\20\5b12\5d\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&>\28char\20const\20\28&\29\20\5b12\5d\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\29 can change the state due to \28anonymous\20namespace\29::itanium_demangle::SpecialName*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::SpecialName\2c\20char\20const\20\28&\29\20\5b12\5d\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&>\28char\20const\20\28&\29\20\5b12\5d\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::Node*\20\28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::make<\28anonymous\20namespace\29::itanium_demangle::SpecialName\2c\20char\20const\20\28&\29\20\5b9\5d\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&>\28char\20const\20\28&\29\20\5b9\5d\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\29 can change the state due to \28anonymous\20namespace\29::itanium_demangle::SpecialName*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::SpecialName\2c\20char\20const\20\28&\29\20\5b9\5d\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&>\28char\20const\20\28&\29\20\5b9\5d\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::Node*\20\28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::make<\28anonymous\20namespace\29::itanium_demangle::SpecialName\2c\20char\20const\20\28&\29\20\5b14\5d\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&>\28char\20const\20\28&\29\20\5b14\5d\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\29 can change the state due to \28anonymous\20namespace\29::itanium_demangle::SpecialName*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::SpecialName\2c\20char\20const\20\28&\29\20\5b14\5d\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&>\28char\20const\20\28&\29\20\5b14\5d\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::Node*\20\28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::make<\28anonymous\20namespace\29::itanium_demangle::SpecialName\2c\20char\20const\20\28&\29\20\5b19\5d\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&>\28char\20const\20\28&\29\20\5b19\5d\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\29 can change the state due to \28anonymous\20namespace\29::itanium_demangle::SpecialName*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::SpecialName\2c\20char\20const\20\28&\29\20\5b19\5d\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&>\28char\20const\20\28&\29\20\5b19\5d\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::Node*\20\28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::make<\28anonymous\20namespace\29::itanium_demangle::SpecialName\2c\20char\20const\20\28&\29\20\5b27\5d\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&>\28char\20const\20\28&\29\20\5b27\5d\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\29 can change the state due to \28anonymous\20namespace\29::itanium_demangle::SpecialName*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::SpecialName\2c\20char\20const\20\28&\29\20\5b27\5d\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&>\28char\20const\20\28&\29\20\5b27\5d\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::Node*\20\28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::make<\28anonymous\20namespace\29::itanium_demangle::CtorVtableSpecialName\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&>\28\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\29 can change the state due to \28anonymous\20namespace\29::itanium_demangle::CtorVtableSpecialName*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::CtorVtableSpecialName\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&>\28\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::Node*\20\28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::make<\28anonymous\20namespace\29::itanium_demangle::SpecialName\2c\20char\20const\20\28&\29\20\5b41\5d\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&>\28char\20const\20\28&\29\20\5b41\5d\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\29 can change the state due to \28anonymous\20namespace\29::itanium_demangle::SpecialName*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::SpecialName\2c\20char\20const\20\28&\29\20\5b41\5d\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&>\28char\20const\20\28&\29\20\5b41\5d\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::Node*\20\28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::make<\28anonymous\20namespace\29::itanium_demangle::SpecialName\2c\20char\20const\20\28&\29\20\5b18\5d\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&>\28char\20const\20\28&\29\20\5b18\5d\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\29 can change the state due to \28anonymous\20namespace\29::itanium_demangle::SpecialName*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::SpecialName\2c\20char\20const\20\28&\29\20\5b18\5d\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&>\28char\20const\20\28&\29\20\5b18\5d\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::Node*\20\28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::make<\28anonymous\20namespace\29::itanium_demangle::SpecialName\2c\20char\20const\20\28&\29\20\5b22\5d\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&>\28char\20const\20\28&\29\20\5b22\5d\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\29 can change the state due to \28anonymous\20namespace\29::itanium_demangle::SpecialName*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::SpecialName\2c\20char\20const\20\28&\29\20\5b22\5d\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&>\28char\20const\20\28&\29\20\5b22\5d\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::Node*\20\28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::make<\28anonymous\20namespace\29::itanium_demangle::SpecialName\2c\20char\20const\20\28&\29\20\5b20\5d\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&>\28char\20const\20\28&\29\20\5b20\5d\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\29 can change the state due to \28anonymous\20namespace\29::itanium_demangle::SpecialName*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::SpecialName\2c\20char\20const\20\28&\29\20\5b20\5d\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&>\28char\20const\20\28&\29\20\5b20\5d\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::Node*\20\28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::make<\28anonymous\20namespace\29::itanium_demangle::SpecialName\2c\20char\20const\20\28&\29\20\5b25\5d\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&>\28char\20const\20\28&\29\20\5b25\5d\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\29 can change the state due to \28anonymous\20namespace\29::itanium_demangle::SpecialName*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::SpecialName\2c\20char\20const\20\28&\29\20\5b25\5d\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&>\28char\20const\20\28&\29\20\5b25\5d\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::Node*\20\28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::make<\28anonymous\20namespace\29::itanium_demangle::SpecialName\2c\20char\20const\20\28&\29\20\5b24\5d\2c\20\28anonymous\20namespace\29::itanium_demangle::ModuleName*&>\28char\20const\20\28&\29\20\5b24\5d\2c\20\28anonymous\20namespace\29::itanium_demangle::ModuleName*&\29 can change the state due to \28anonymous\20namespace\29::itanium_demangle::SpecialName*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::SpecialName\2c\20char\20const\20\28&\29\20\5b24\5d\2c\20\28anonymous\20namespace\29::itanium_demangle::ModuleName*&>\28char\20const\20\28&\29\20\5b24\5d\2c\20\28anonymous\20namespace\29::itanium_demangle::ModuleName*&\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::Node*\20\28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::make<\28anonymous\20namespace\29::itanium_demangle::ModuleName\2c\20\28anonymous\20namespace\29::itanium_demangle::ModuleName*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20bool&>\28\28anonymous\20namespace\29::itanium_demangle::ModuleName*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20bool&\29 can change the state due to \28anonymous\20namespace\29::itanium_demangle::ModuleName*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::ModuleName\2c\20\28anonymous\20namespace\29::itanium_demangle::ModuleName*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20bool&>\28\28anonymous\20namespace\29::itanium_demangle::ModuleName*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20bool&\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::Node*\20\28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::make<\28anonymous\20namespace\29::itanium_demangle::NameType\2c\20char\20const\20\28&\29\20\5b22\5d>\28char\20const\20\28&\29\20\5b22\5d\29 can change the state due to \28anonymous\20namespace\29::itanium_demangle::NameType*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::NameType\2c\20char\20const\20\28&\29\20\5b22\5d>\28char\20const\20\28&\29\20\5b22\5d\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::Node*\20\28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::make<\28anonymous\20namespace\29::itanium_demangle::NameType\2c\20\28anonymous\20namespace\29::itanium_demangle::StringView&>\28\28anonymous\20namespace\29::itanium_demangle::StringView&\29 can change the state due to \28anonymous\20namespace\29::itanium_demangle::NameType*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::NameType\2c\20\28anonymous\20namespace\29::itanium_demangle::StringView&>\28\28anonymous\20namespace\29::itanium_demangle::StringView&\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::Node*\20\28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::make<\28anonymous\20namespace\29::itanium_demangle::NameWithTemplateArgs\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&>\28\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\29 can change the state due to \28anonymous\20namespace\29::itanium_demangle::NameWithTemplateArgs*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::NameWithTemplateArgs\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&>\28\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::Node*\20\28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::make<\28anonymous\20namespace\29::itanium_demangle::NameType\2c\20char\20const\20\28&\29\20\5b4\5d>\28char\20const\20\28&\29\20\5b4\5d\29 can change the state due to \28anonymous\20namespace\29::itanium_demangle::NameType*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::NameType\2c\20char\20const\20\28&\29\20\5b4\5d>\28char\20const\20\28&\29\20\5b4\5d\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::Node*\20\28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::make<\28anonymous\20namespace\29::itanium_demangle::ForwardTemplateReference\2c\20unsigned\20long&>\28unsigned\20long&\29 can change the state due to \28anonymous\20namespace\29::itanium_demangle::ForwardTemplateReference*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::ForwardTemplateReference\2c\20unsigned\20long&>\28unsigned\20long&\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::Node*\20\28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::make<\28anonymous\20namespace\29::itanium_demangle::NameType\2c\20char\20const\20\28&\29\20\5b5\5d>\28char\20const\20\28&\29\20\5b5\5d\29 can change the state due to \28anonymous\20namespace\29::itanium_demangle::NameType*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::NameType\2c\20char\20const\20\28&\29\20\5b5\5d>\28char\20const\20\28&\29\20\5b5\5d\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::Node*\20\28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::make<\28anonymous\20namespace\29::itanium_demangle::EnclosingExpr\2c\20char\20const\20\28&\29\20\5b9\5d\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&>\28char\20const\20\28&\29\20\5b9\5d\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\29 can change the state due to \28anonymous\20namespace\29::itanium_demangle::EnclosingExpr*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::EnclosingExpr\2c\20char\20const\20\28&\29\20\5b9\5d\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&>\28char\20const\20\28&\29\20\5b9\5d\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::Node*\20\28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::make<\28anonymous\20namespace\29::itanium_demangle::PostfixExpr\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::StringView&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node::Prec>\28\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::StringView&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node::Prec&&\29 can change the state due to \28anonymous\20namespace\29::itanium_demangle::PostfixExpr*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::PostfixExpr\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::StringView&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node::Prec>\28\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::StringView&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node::Prec&&\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::Node*\20\28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::make<\28anonymous\20namespace\29::itanium_demangle::ArraySubscriptExpr\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node::Prec>\28\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node::Prec&&\29 can change the state due to \28anonymous\20namespace\29::itanium_demangle::ArraySubscriptExpr*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::ArraySubscriptExpr\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node::Prec>\28\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node::Prec&&\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::Node*\20\28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::make<\28anonymous\20namespace\29::itanium_demangle::MemberExpr\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::StringView&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node::Prec>\28\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::StringView&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node::Prec&&\29 can change the state due to \28anonymous\20namespace\29::itanium_demangle::MemberExpr*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::MemberExpr\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::StringView&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node::Prec>\28\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::StringView&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node::Prec&&\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::Node*\20\28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::make<\28anonymous\20namespace\29::itanium_demangle::NewExpr\2c\20\28anonymous\20namespace\29::itanium_demangle::NodeArray&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::NodeArray&\2c\20bool&\2c\20bool\2c\20\28anonymous\20namespace\29::itanium_demangle::Node::Prec>\28\28anonymous\20namespace\29::itanium_demangle::NodeArray&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::NodeArray&\2c\20bool&\2c\20bool&&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node::Prec&&\29 can change the state due to \28anonymous\20namespace\29::itanium_demangle::NewExpr*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::NewExpr\2c\20\28anonymous\20namespace\29::itanium_demangle::NodeArray&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::NodeArray&\2c\20bool&\2c\20bool\2c\20\28anonymous\20namespace\29::itanium_demangle::Node::Prec>\28\28anonymous\20namespace\29::itanium_demangle::NodeArray&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::NodeArray&\2c\20bool&\2c\20bool&&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node::Prec&&\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::Node*\20\28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::make<\28anonymous\20namespace\29::itanium_demangle::DeleteExpr\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20bool&\2c\20bool\2c\20\28anonymous\20namespace\29::itanium_demangle::Node::Prec>\28\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20bool&\2c\20bool&&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node::Prec&&\29 can change the state due to \28anonymous\20namespace\29::itanium_demangle::DeleteExpr*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::DeleteExpr\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20bool&\2c\20bool\2c\20\28anonymous\20namespace\29::itanium_demangle::Node::Prec>\28\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20bool&\2c\20bool&&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node::Prec&&\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::Node*\20\28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::make<\28anonymous\20namespace\29::itanium_demangle::CallExpr\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::NodeArray\2c\20\28anonymous\20namespace\29::itanium_demangle::Node::Prec>\28\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::NodeArray&&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node::Prec&&\29 can change the state due to \28anonymous\20namespace\29::itanium_demangle::CallExpr*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::CallExpr\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::NodeArray\2c\20\28anonymous\20namespace\29::itanium_demangle::Node::Prec>\28\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::NodeArray&&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node::Prec&&\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::Node*\20\28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::make<\28anonymous\20namespace\29::itanium_demangle::ConversionExpr\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::NodeArray&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node::Prec>\28\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::NodeArray&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node::Prec&&\29 can change the state due to \28anonymous\20namespace\29::itanium_demangle::ConversionExpr*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::ConversionExpr\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::NodeArray&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node::Prec>\28\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::NodeArray&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node::Prec&&\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::Node*\20\28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::make<\28anonymous\20namespace\29::itanium_demangle::ConditionalExpr\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node::Prec>\28\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node::Prec&&\29 can change the state due to \28anonymous\20namespace\29::itanium_demangle::ConditionalExpr*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::ConditionalExpr\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node::Prec>\28\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node::Prec&&\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::Node*\20\28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::make<\28anonymous\20namespace\29::itanium_demangle::CastExpr\2c\20\28anonymous\20namespace\29::itanium_demangle::StringView&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node::Prec>\28\28anonymous\20namespace\29::itanium_demangle::StringView&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node::Prec&&\29 can change the state due to \28anonymous\20namespace\29::itanium_demangle::CastExpr*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::CastExpr\2c\20\28anonymous\20namespace\29::itanium_demangle::StringView&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node::Prec>\28\28anonymous\20namespace\29::itanium_demangle::StringView&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node::Prec&&\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::Node*\20\28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::make<\28anonymous\20namespace\29::itanium_demangle::EnclosingExpr\2c\20\28anonymous\20namespace\29::itanium_demangle::StringView&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node::Prec>\28\28anonymous\20namespace\29::itanium_demangle::StringView&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node::Prec&&\29 can change the state due to \28anonymous\20namespace\29::itanium_demangle::EnclosingExpr*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::EnclosingExpr\2c\20\28anonymous\20namespace\29::itanium_demangle::StringView&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node::Prec>\28\28anonymous\20namespace\29::itanium_demangle::StringView&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node::Prec&&\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::Node*\20\28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::make<\28anonymous\20namespace\29::itanium_demangle::InitListExpr\2c\20std::nullptr_t\2c\20\28anonymous\20namespace\29::itanium_demangle::NodeArray>\28std::nullptr_t&&\2c\20\28anonymous\20namespace\29::itanium_demangle::NodeArray&&\29 can change the state due to \28anonymous\20namespace\29::itanium_demangle::InitListExpr*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::InitListExpr\2c\20std::nullptr_t\2c\20\28anonymous\20namespace\29::itanium_demangle::NodeArray>\28std::nullptr_t&&\2c\20\28anonymous\20namespace\29::itanium_demangle::NodeArray&&\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::Node*\20\28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::make<\28anonymous\20namespace\29::itanium_demangle::EnclosingExpr\2c\20char\20const\20\28&\29\20\5b10\5d\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node::Prec>\28char\20const\20\28&\29\20\5b10\5d\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node::Prec&&\29 can change the state due to \28anonymous\20namespace\29::itanium_demangle::EnclosingExpr*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::EnclosingExpr\2c\20char\20const\20\28&\29\20\5b10\5d\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node::Prec>\28char\20const\20\28&\29\20\5b10\5d\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node::Prec&&\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::Node*\20\28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::make<\28anonymous\20namespace\29::itanium_demangle::ParameterPackExpansion\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&>\28\28anonymous\20namespace\29::itanium_demangle::Node*&\29 can change the state due to \28anonymous\20namespace\29::itanium_demangle::ParameterPackExpansion*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::ParameterPackExpansion\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&>\28\28anonymous\20namespace\29::itanium_demangle::Node*&\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::Node*\20\28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::make<\28anonymous\20namespace\29::itanium_demangle::SizeofParamPackExpr\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&>\28\28anonymous\20namespace\29::itanium_demangle::Node*&\29 can change the state due to \28anonymous\20namespace\29::itanium_demangle::SizeofParamPackExpr*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::SizeofParamPackExpr\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&>\28\28anonymous\20namespace\29::itanium_demangle::Node*&\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::Node*\20\28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::make<\28anonymous\20namespace\29::itanium_demangle::EnclosingExpr\2c\20char\20const\20\28&\29\20\5b11\5d\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&>\28char\20const\20\28&\29\20\5b11\5d\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\29 can change the state due to \28anonymous\20namespace\29::itanium_demangle::EnclosingExpr*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::EnclosingExpr\2c\20char\20const\20\28&\29\20\5b11\5d\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&>\28char\20const\20\28&\29\20\5b11\5d\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::Node*\20\28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::make<\28anonymous\20namespace\29::itanium_demangle::NodeArrayNode\2c\20\28anonymous\20namespace\29::itanium_demangle::NodeArray>\28\28anonymous\20namespace\29::itanium_demangle::NodeArray&&\29 can change the state due to \28anonymous\20namespace\29::itanium_demangle::NodeArrayNode*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::NodeArrayNode\2c\20\28anonymous\20namespace\29::itanium_demangle::NodeArray>\28\28anonymous\20namespace\29::itanium_demangle::NodeArray&&\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::Node*\20\28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::make<\28anonymous\20namespace\29::itanium_demangle::InitListExpr\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::NodeArray>\28\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::NodeArray&&\29 can change the state due to \28anonymous\20namespace\29::itanium_demangle::InitListExpr*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::InitListExpr\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::NodeArray>\28\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::NodeArray&&\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::Node*\20\28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::make<\28anonymous\20namespace\29::itanium_demangle::NameType\2c\20char\20const\20\28&\29\20\5b6\5d>\28char\20const\20\28&\29\20\5b6\5d\29 can change the state due to \28anonymous\20namespace\29::itanium_demangle::NameType*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::NameType\2c\20char\20const\20\28&\29\20\5b6\5d>\28char\20const\20\28&\29\20\5b6\5d\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::Node*\20\28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::make<\28anonymous\20namespace\29::itanium_demangle::ThrowExpr\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&>\28\28anonymous\20namespace\29::itanium_demangle::Node*&\29 can change the state due to \28anonymous\20namespace\29::itanium_demangle::ThrowExpr*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::ThrowExpr\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&>\28\28anonymous\20namespace\29::itanium_demangle::Node*&\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::Node*\20\28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::make<\28anonymous\20namespace\29::itanium_demangle::BinaryExpr\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::StringView&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node::Prec&>\28\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::StringView&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node::Prec&\29 can change the state due to \28anonymous\20namespace\29::itanium_demangle::BinaryExpr*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::BinaryExpr\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::StringView&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node::Prec&>\28\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::StringView&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node::Prec&\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::Node*\20\28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::make<\28anonymous\20namespace\29::itanium_demangle::PrefixExpr\2c\20\28anonymous\20namespace\29::itanium_demangle::StringView&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node::Prec&>\28\28anonymous\20namespace\29::itanium_demangle::StringView&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node::Prec&\29 can change the state due to \28anonymous\20namespace\29::itanium_demangle::PrefixExpr*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::PrefixExpr\2c\20\28anonymous\20namespace\29::itanium_demangle::StringView&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node::Prec&>\28\28anonymous\20namespace\29::itanium_demangle::StringView&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node::Prec&\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::Node*\20\28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::make<\28anonymous\20namespace\29::itanium_demangle::BoolExpr\2c\20int>\28int&&\29 can change the state due to \28anonymous\20namespace\29::itanium_demangle::BoolExpr*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::BoolExpr\2c\20int>\28int&&\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::Node*\20\28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::make<\28anonymous\20namespace\29::itanium_demangle::StringLiteral\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&>\28\28anonymous\20namespace\29::itanium_demangle::Node*&\29 can change the state due to \28anonymous\20namespace\29::itanium_demangle::StringLiteral*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::StringLiteral\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&>\28\28anonymous\20namespace\29::itanium_demangle::Node*&\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::Node*\20\28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::make<\28anonymous\20namespace\29::itanium_demangle::NameType\2c\20char\20const\20\28&\29\20\5b8\5d>\28char\20const\20\28&\29\20\5b8\5d\29 can change the state due to \28anonymous\20namespace\29::itanium_demangle::NameType*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::NameType\2c\20char\20const\20\28&\29\20\5b8\5d>\28char\20const\20\28&\29\20\5b8\5d\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::Node*\20\28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::make<\28anonymous\20namespace\29::itanium_demangle::LambdaExpr\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&>\28\28anonymous\20namespace\29::itanium_demangle::Node*&\29 can change the state due to \28anonymous\20namespace\29::itanium_demangle::LambdaExpr*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::LambdaExpr\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&>\28\28anonymous\20namespace\29::itanium_demangle::Node*&\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::Node*\20\28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::make<\28anonymous\20namespace\29::itanium_demangle::EnumLiteral\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::StringView&>\28\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::StringView&\29 can change the state due to \28anonymous\20namespace\29::itanium_demangle::EnumLiteral*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::EnumLiteral\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::StringView&>\28\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::StringView&\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::Node*\20\28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::make<\28anonymous\20namespace\29::itanium_demangle::IntegerLiteral\2c\20\28anonymous\20namespace\29::itanium_demangle::StringView&\2c\20\28anonymous\20namespace\29::itanium_demangle::StringView&>\28\28anonymous\20namespace\29::itanium_demangle::StringView&\2c\20\28anonymous\20namespace\29::itanium_demangle::StringView&\29 can change the state due to \28anonymous\20namespace\29::itanium_demangle::IntegerLiteral*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::IntegerLiteral\2c\20\28anonymous\20namespace\29::itanium_demangle::StringView&\2c\20\28anonymous\20namespace\29::itanium_demangle::StringView&>\28\28anonymous\20namespace\29::itanium_demangle::StringView&\2c\20\28anonymous\20namespace\29::itanium_demangle::StringView&\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::Node*\20\28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::make<\28anonymous\20namespace\29::itanium_demangle::FloatLiteralImpl<float>\2c\20\28anonymous\20namespace\29::itanium_demangle::StringView&>\28\28anonymous\20namespace\29::itanium_demangle::StringView&\29 can change the state due to \28anonymous\20namespace\29::itanium_demangle::FloatLiteralImpl<float>*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::FloatLiteralImpl<float>\2c\20\28anonymous\20namespace\29::itanium_demangle::StringView&>\28\28anonymous\20namespace\29::itanium_demangle::StringView&\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::Node*\20\28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::make<\28anonymous\20namespace\29::itanium_demangle::FloatLiteralImpl<double>\2c\20\28anonymous\20namespace\29::itanium_demangle::StringView&>\28\28anonymous\20namespace\29::itanium_demangle::StringView&\29 can change the state due to \28anonymous\20namespace\29::itanium_demangle::FloatLiteralImpl<double>*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::FloatLiteralImpl<double>\2c\20\28anonymous\20namespace\29::itanium_demangle::StringView&>\28\28anonymous\20namespace\29::itanium_demangle::StringView&\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::Node*\20\28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::make<\28anonymous\20namespace\29::itanium_demangle::FloatLiteralImpl<long\20double>\2c\20\28anonymous\20namespace\29::itanium_demangle::StringView&>\28\28anonymous\20namespace\29::itanium_demangle::StringView&\29 can change the state due to \28anonymous\20namespace\29::itanium_demangle::FloatLiteralImpl<long\20double>*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::FloatLiteralImpl<long\20double>\2c\20\28anonymous\20namespace\29::itanium_demangle::StringView&>\28\28anonymous\20namespace\29::itanium_demangle::StringView&\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::Node*\20\28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::make<\28anonymous\20namespace\29::itanium_demangle::UnnamedTypeName\2c\20\28anonymous\20namespace\29::itanium_demangle::StringView&>\28\28anonymous\20namespace\29::itanium_demangle::StringView&\29 can change the state due to \28anonymous\20namespace\29::itanium_demangle::UnnamedTypeName*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::UnnamedTypeName\2c\20\28anonymous\20namespace\29::itanium_demangle::StringView&>\28\28anonymous\20namespace\29::itanium_demangle::StringView&\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::Node*\20\28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::make<\28anonymous\20namespace\29::itanium_demangle::ClosureTypeName\2c\20\28anonymous\20namespace\29::itanium_demangle::NodeArray&\2c\20\28anonymous\20namespace\29::itanium_demangle::NodeArray&\2c\20\28anonymous\20namespace\29::itanium_demangle::StringView&>\28\28anonymous\20namespace\29::itanium_demangle::NodeArray&\2c\20\28anonymous\20namespace\29::itanium_demangle::NodeArray&\2c\20\28anonymous\20namespace\29::itanium_demangle::StringView&\29 can change the state due to \28anonymous\20namespace\29::itanium_demangle::ClosureTypeName*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::ClosureTypeName\2c\20\28anonymous\20namespace\29::itanium_demangle::NodeArray&\2c\20\28anonymous\20namespace\29::itanium_demangle::NodeArray&\2c\20\28anonymous\20namespace\29::itanium_demangle::StringView&>\28\28anonymous\20namespace\29::itanium_demangle::NodeArray&\2c\20\28anonymous\20namespace\29::itanium_demangle::NodeArray&\2c\20\28anonymous\20namespace\29::itanium_demangle::StringView&\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::Node*\20\28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::make<\28anonymous\20namespace\29::itanium_demangle::NameType\2c\20char\20const\20\28&\29\20\5b16\5d>\28char\20const\20\28&\29\20\5b16\5d\29 can change the state due to \28anonymous\20namespace\29::itanium_demangle::NameType*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::NameType\2c\20char\20const\20\28&\29\20\5b16\5d>\28char\20const\20\28&\29\20\5b16\5d\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::Node*\20\28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::make<\28anonymous\20namespace\29::itanium_demangle::TypeTemplateParamDecl\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&>\28\28anonymous\20namespace\29::itanium_demangle::Node*&\29 can change the state due to \28anonymous\20namespace\29::itanium_demangle::TypeTemplateParamDecl*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::TypeTemplateParamDecl\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&>\28\28anonymous\20namespace\29::itanium_demangle::Node*&\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::Node*\20\28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::make<\28anonymous\20namespace\29::itanium_demangle::NonTypeTemplateParamDecl\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&>\28\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\29 can change the state due to \28anonymous\20namespace\29::itanium_demangle::NonTypeTemplateParamDecl*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::NonTypeTemplateParamDecl\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&>\28\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::Node*\20\28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::make<\28anonymous\20namespace\29::itanium_demangle::TemplateTemplateParamDecl\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::NodeArray&>\28\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::NodeArray&\29 can change the state due to \28anonymous\20namespace\29::itanium_demangle::TemplateTemplateParamDecl*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::TemplateTemplateParamDecl\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::NodeArray&>\28\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::NodeArray&\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::Node*\20\28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::make<\28anonymous\20namespace\29::itanium_demangle::TemplateParamPackDecl\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&>\28\28anonymous\20namespace\29::itanium_demangle::Node*&\29 can change the state due to \28anonymous\20namespace\29::itanium_demangle::TemplateParamPackDecl*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::TemplateParamPackDecl\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&>\28\28anonymous\20namespace\29::itanium_demangle::Node*&\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::Node*\20\28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::make<\28anonymous\20namespace\29::itanium_demangle::SyntheticTemplateParamName\2c\20\28anonymous\20namespace\29::itanium_demangle::TemplateParamKind&\2c\20unsigned\20int&>\28\28anonymous\20namespace\29::itanium_demangle::TemplateParamKind&\2c\20unsigned\20int&\29 can change the state due to \28anonymous\20namespace\29::itanium_demangle::SyntheticTemplateParamName*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::SyntheticTemplateParamName\2c\20\28anonymous\20namespace\29::itanium_demangle::TemplateParamKind&\2c\20unsigned\20int&>\28\28anonymous\20namespace\29::itanium_demangle::TemplateParamKind&\2c\20unsigned\20int&\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::Node*\20\28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::make<\28anonymous\20namespace\29::itanium_demangle::FunctionParam\2c\20\28anonymous\20namespace\29::itanium_demangle::StringView&>\28\28anonymous\20namespace\29::itanium_demangle::StringView&\29 can change the state due to \28anonymous\20namespace\29::itanium_demangle::FunctionParam*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::FunctionParam\2c\20\28anonymous\20namespace\29::itanium_demangle::StringView&>\28\28anonymous\20namespace\29::itanium_demangle::StringView&\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::Node*\20\28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::make<\28anonymous\20namespace\29::itanium_demangle::FoldExpr\2c\20bool&\2c\20\28anonymous\20namespace\29::itanium_demangle::StringView\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&>\28bool&\2c\20\28anonymous\20namespace\29::itanium_demangle::StringView&&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\29 can change the state due to \28anonymous\20namespace\29::itanium_demangle::FoldExpr*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::FoldExpr\2c\20bool&\2c\20\28anonymous\20namespace\29::itanium_demangle::StringView\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&>\28bool&\2c\20\28anonymous\20namespace\29::itanium_demangle::StringView&&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::Node*\20\28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::make<\28anonymous\20namespace\29::itanium_demangle::BracedExpr\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20bool>\28\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20bool&&\29 can change the state due to \28anonymous\20namespace\29::itanium_demangle::BracedExpr*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::BracedExpr\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20bool>\28\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20bool&&\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::Node*\20\28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::make<\28anonymous\20namespace\29::itanium_demangle::BracedRangeExpr\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&>\28\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\29 can change the state due to \28anonymous\20namespace\29::itanium_demangle::BracedRangeExpr*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::BracedRangeExpr\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&>\28\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::Node*\20\28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::make<\28anonymous\20namespace\29::itanium_demangle::PointerToMemberConversionExpr\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::StringView&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node::Prec&>\28\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::StringView&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node::Prec&\29 can change the state due to \28anonymous\20namespace\29::itanium_demangle::PointerToMemberConversionExpr*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::PointerToMemberConversionExpr\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::StringView&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node::Prec&>\28\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::StringView&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node::Prec&\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::Node*\20\28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::make<\28anonymous\20namespace\29::itanium_demangle::NameType\2c\20\28anonymous\20namespace\29::itanium_demangle::StringView>\28\28anonymous\20namespace\29::itanium_demangle::StringView&&\29 can change the state due to \28anonymous\20namespace\29::itanium_demangle::NameType*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::NameType\2c\20\28anonymous\20namespace\29::itanium_demangle::StringView>\28\28anonymous\20namespace\29::itanium_demangle::StringView&&\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::Node*\20\28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::make<\28anonymous\20namespace\29::itanium_demangle::SubobjectExpr\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::StringView&\2c\20\28anonymous\20namespace\29::itanium_demangle::NodeArray\2c\20bool&>\28\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::StringView&\2c\20\28anonymous\20namespace\29::itanium_demangle::NodeArray&&\2c\20bool&\29 can change the state due to \28anonymous\20namespace\29::itanium_demangle::SubobjectExpr*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::SubobjectExpr\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::StringView&\2c\20\28anonymous\20namespace\29::itanium_demangle::NodeArray\2c\20bool&>\28\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::StringView&\2c\20\28anonymous\20namespace\29::itanium_demangle::NodeArray&&\2c\20bool&\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::Node*\20\28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::make<\28anonymous\20namespace\29::itanium_demangle::QualifiedName\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&>\28\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\29 can change the state due to \28anonymous\20namespace\29::itanium_demangle::QualifiedName*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::QualifiedName\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&>\28\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::Node*\20\28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::make<\28anonymous\20namespace\29::itanium_demangle::GlobalQualifiedName\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&>\28\28anonymous\20namespace\29::itanium_demangle::Node*&\29 can change the state due to \28anonymous\20namespace\29::itanium_demangle::GlobalQualifiedName*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::GlobalQualifiedName\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&>\28\28anonymous\20namespace\29::itanium_demangle::Node*&\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::Node*\20\28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::make<\28anonymous\20namespace\29::itanium_demangle::DtorName\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&>\28\28anonymous\20namespace\29::itanium_demangle::Node*&\29 can change the state due to \28anonymous\20namespace\29::itanium_demangle::DtorName*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::DtorName\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&>\28\28anonymous\20namespace\29::itanium_demangle::Node*&\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::Node*\20\28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::make<\28anonymous\20namespace\29::itanium_demangle::ConversionOperatorType\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&>\28\28anonymous\20namespace\29::itanium_demangle::Node*&\29 can change the state due to \28anonymous\20namespace\29::itanium_demangle::ConversionOperatorType*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::ConversionOperatorType\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&>\28\28anonymous\20namespace\29::itanium_demangle::Node*&\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::Node*\20\28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::make<\28anonymous\20namespace\29::itanium_demangle::LiteralOperator\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&>\28\28anonymous\20namespace\29::itanium_demangle::Node*&\29 can change the state due to \28anonymous\20namespace\29::itanium_demangle::LiteralOperator*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::LiteralOperator\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&>\28\28anonymous\20namespace\29::itanium_demangle::Node*&\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::Node*\20\28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::make<\28anonymous\20namespace\29::itanium_demangle::SpecialSubstitution\2c\20\28anonymous\20namespace\29::itanium_demangle::SpecialSubKind&>\28\28anonymous\20namespace\29::itanium_demangle::SpecialSubKind&\29 can change the state due to \28anonymous\20namespace\29::itanium_demangle::SpecialSubstitution*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::SpecialSubstitution\2c\20\28anonymous\20namespace\29::itanium_demangle::SpecialSubKind&>\28\28anonymous\20namespace\29::itanium_demangle::SpecialSubKind&\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::Node*\20\28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::make<\28anonymous\20namespace\29::itanium_demangle::AbiTagAttr\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::StringView&>\28\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::StringView&\29 can change the state due to \28anonymous\20namespace\29::itanium_demangle::AbiTagAttr*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::AbiTagAttr\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::StringView&>\28\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::StringView&\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::Node*\20\28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::make<\28anonymous\20namespace\29::itanium_demangle::StructuredBindingName\2c\20\28anonymous\20namespace\29::itanium_demangle::NodeArray>\28\28anonymous\20namespace\29::itanium_demangle::NodeArray&&\29 can change the state due to \28anonymous\20namespace\29::itanium_demangle::StructuredBindingName*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::StructuredBindingName\2c\20\28anonymous\20namespace\29::itanium_demangle::NodeArray>\28\28anonymous\20namespace\29::itanium_demangle::NodeArray&&\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::Node*\20\28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::make<\28anonymous\20namespace\29::itanium_demangle::ModuleEntity\2c\20\28anonymous\20namespace\29::itanium_demangle::ModuleName*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&>\28\28anonymous\20namespace\29::itanium_demangle::ModuleName*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\29 can change the state due to \28anonymous\20namespace\29::itanium_demangle::ModuleEntity*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::ModuleEntity\2c\20\28anonymous\20namespace\29::itanium_demangle::ModuleName*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&>\28\28anonymous\20namespace\29::itanium_demangle::ModuleName*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::Node*\20\28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::make<\28anonymous\20namespace\29::itanium_demangle::NestedName\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&>\28\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\29 can change the state due to \28anonymous\20namespace\29::itanium_demangle::NestedName*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::NestedName\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&>\28\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::Node*\20\28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::make<\28anonymous\20namespace\29::itanium_demangle::ExpandedSpecialSubstitution\2c\20\28anonymous\20namespace\29::itanium_demangle::SpecialSubstitution*>\28\28anonymous\20namespace\29::itanium_demangle::SpecialSubstitution*&&\29 can change the state due to \28anonymous\20namespace\29::itanium_demangle::ExpandedSpecialSubstitution*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::ExpandedSpecialSubstitution\2c\20\28anonymous\20namespace\29::itanium_demangle::SpecialSubstitution*>\28\28anonymous\20namespace\29::itanium_demangle::SpecialSubstitution*&&\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::Node*\20\28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::make<\28anonymous\20namespace\29::itanium_demangle::CtorDtorName\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20bool\2c\20int&>\28\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20bool&&\2c\20int&\29 can change the state due to \28anonymous\20namespace\29::itanium_demangle::CtorDtorName*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::CtorDtorName\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20bool\2c\20int&>\28\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20bool&&\2c\20int&\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::Node*\20\28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::make<\28anonymous\20namespace\29::itanium_demangle::NameType\2c\20char\20const\20\28&\29\20\5b15\5d>\28char\20const\20\28&\29\20\5b15\5d\29 can change the state due to \28anonymous\20namespace\29::itanium_demangle::NameType*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::NameType\2c\20char\20const\20\28&\29\20\5b15\5d>\28char\20const\20\28&\29\20\5b15\5d\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::Node*\20\28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::make<\28anonymous\20namespace\29::itanium_demangle::LocalName\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&>\28\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\29 can change the state due to \28anonymous\20namespace\29::itanium_demangle::LocalName*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::LocalName\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&>\28\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::Node*\20\28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::make<\28anonymous\20namespace\29::itanium_demangle::ParameterPack\2c\20\28anonymous\20namespace\29::itanium_demangle::NodeArray>\28\28anonymous\20namespace\29::itanium_demangle::NodeArray&&\29 can change the state due to \28anonymous\20namespace\29::itanium_demangle::ParameterPack*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::ParameterPack\2c\20\28anonymous\20namespace\29::itanium_demangle::NodeArray>\28\28anonymous\20namespace\29::itanium_demangle::NodeArray&&\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::Node*\20\28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::make<\28anonymous\20namespace\29::itanium_demangle::TemplateArgs\2c\20\28anonymous\20namespace\29::itanium_demangle::NodeArray>\28\28anonymous\20namespace\29::itanium_demangle::NodeArray&&\29 can change the state due to \28anonymous\20namespace\29::itanium_demangle::TemplateArgs*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::TemplateArgs\2c\20\28anonymous\20namespace\29::itanium_demangle::NodeArray>\28\28anonymous\20namespace\29::itanium_demangle::NodeArray&&\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::Node*\20\28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::make<\28anonymous\20namespace\29::itanium_demangle::TemplateArgumentPack\2c\20\28anonymous\20namespace\29::itanium_demangle::NodeArray&>\28\28anonymous\20namespace\29::itanium_demangle::NodeArray&\29 can change the state due to \28anonymous\20namespace\29::itanium_demangle::TemplateArgumentPack*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::TemplateArgumentPack\2c\20\28anonymous\20namespace\29::itanium_demangle::NodeArray&>\28\28anonymous\20namespace\29::itanium_demangle::NodeArray&\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::NodeArray\20\28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::makeNodeArray<\28anonymous\20namespace\29::itanium_demangle::Node**>\28\28anonymous\20namespace\29::itanium_demangle::Node**\2c\20\28anonymous\20namespace\29::itanium_demangle::Node**\29 can change the state due to \28anonymous\20namespace\29::DefaultAllocator::allocateNodeArray\28unsigned\20long\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::Node*\20\28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::make<\28anonymous\20namespace\29::itanium_demangle::NameType\2c\20char\20const\20\28&\29\20\5b12\5d>\28char\20const\20\28&\29\20\5b12\5d\29 can change the state due to \28anonymous\20namespace\29::itanium_demangle::NameType*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::NameType\2c\20char\20const\20\28&\29\20\5b12\5d>\28char\20const\20\28&\29\20\5b12\5d\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::Node*\20\28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::make<\28anonymous\20namespace\29::itanium_demangle::NameType\2c\20char\20const\20\28&\29\20\5b14\5d>\28char\20const\20\28&\29\20\5b14\5d\29 can change the state due to \28anonymous\20namespace\29::itanium_demangle::NameType*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::NameType\2c\20char\20const\20\28&\29\20\5b14\5d>\28char\20const\20\28&\29\20\5b14\5d\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::Node*\20\28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::make<\28anonymous\20namespace\29::itanium_demangle::NameType\2c\20char\20const\20\28&\29\20\5b13\5d>\28char\20const\20\28&\29\20\5b13\5d\29 can change the state due to \28anonymous\20namespace\29::itanium_demangle::NameType*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::NameType\2c\20char\20const\20\28&\29\20\5b13\5d>\28char\20const\20\28&\29\20\5b13\5d\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::Node*\20\28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::make<\28anonymous\20namespace\29::itanium_demangle::NameType\2c\20char\20const\20\28&\29\20\5b10\5d>\28char\20const\20\28&\29\20\5b10\5d\29 can change the state due to \28anonymous\20namespace\29::itanium_demangle::NameType*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::NameType\2c\20char\20const\20\28&\29\20\5b10\5d>\28char\20const\20\28&\29\20\5b10\5d\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::Node*\20\28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::make<\28anonymous\20namespace\29::itanium_demangle::NameType\2c\20char\20const\20\28&\29\20\5b19\5d>\28char\20const\20\28&\29\20\5b19\5d\29 can change the state due to \28anonymous\20namespace\29::itanium_demangle::NameType*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::NameType\2c\20char\20const\20\28&\29\20\5b19\5d>\28char\20const\20\28&\29\20\5b19\5d\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::Node*\20\28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::make<\28anonymous\20namespace\29::itanium_demangle::NameType\2c\20char\20const\20\28&\29\20\5b9\5d>\28char\20const\20\28&\29\20\5b9\5d\29 can change the state due to \28anonymous\20namespace\29::itanium_demangle::NameType*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::NameType\2c\20char\20const\20\28&\29\20\5b9\5d>\28char\20const\20\28&\29\20\5b9\5d\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::Node*\20\28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::make<\28anonymous\20namespace\29::itanium_demangle::NameType\2c\20char\20const\20\28&\29\20\5b18\5d>\28char\20const\20\28&\29\20\5b18\5d\29 can change the state due to \28anonymous\20namespace\29::itanium_demangle::NameType*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::NameType\2c\20char\20const\20\28&\29\20\5b18\5d>\28char\20const\20\28&\29\20\5b18\5d\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::Node*\20\28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::make<\28anonymous\20namespace\29::itanium_demangle::NameType\2c\20char\20const\20\28&\29\20\5b7\5d>\28char\20const\20\28&\29\20\5b7\5d\29 can change the state due to \28anonymous\20namespace\29::itanium_demangle::NameType*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::NameType\2c\20char\20const\20\28&\29\20\5b7\5d>\28char\20const\20\28&\29\20\5b7\5d\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::Node*\20\28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::make<\28anonymous\20namespace\29::itanium_demangle::NameType\2c\20char\20const\20\28&\29\20\5b11\5d>\28char\20const\20\28&\29\20\5b11\5d\29 can change the state due to \28anonymous\20namespace\29::itanium_demangle::NameType*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::NameType\2c\20char\20const\20\28&\29\20\5b11\5d>\28char\20const\20\28&\29\20\5b11\5d\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::Node*\20\28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::make<\28anonymous\20namespace\29::itanium_demangle::BinaryFPType\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&>\28\28anonymous\20namespace\29::itanium_demangle::Node*&\29 can change the state due to \28anonymous\20namespace\29::itanium_demangle::BinaryFPType*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::BinaryFPType\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&>\28\28anonymous\20namespace\29::itanium_demangle::Node*&\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::Node*\20\28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::make<\28anonymous\20namespace\29::itanium_demangle::BitIntType\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20bool&>\28\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20bool&\29 can change the state due to \28anonymous\20namespace\29::itanium_demangle::BitIntType*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::BitIntType\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20bool&>\28\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20bool&\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::Node*\20\28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::make<\28anonymous\20namespace\29::itanium_demangle::PointerType\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&>\28\28anonymous\20namespace\29::itanium_demangle::Node*&\29 can change the state due to \28anonymous\20namespace\29::itanium_demangle::PointerType*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::PointerType\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&>\28\28anonymous\20namespace\29::itanium_demangle::Node*&\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::Node*\20\28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::make<\28anonymous\20namespace\29::itanium_demangle::ReferenceType\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::ReferenceKind>\28\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::ReferenceKind&&\29 can change the state due to \28anonymous\20namespace\29::itanium_demangle::ReferenceType*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::ReferenceType\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::ReferenceKind>\28\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::ReferenceKind&&\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::Node*\20\28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::make<\28anonymous\20namespace\29::itanium_demangle::PostfixQualifiedType\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20char\20const\20\28&\29\20\5b9\5d>\28\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20char\20const\20\28&\29\20\5b9\5d\29 can change the state due to \28anonymous\20namespace\29::itanium_demangle::PostfixQualifiedType*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::PostfixQualifiedType\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20char\20const\20\28&\29\20\5b9\5d>\28\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20char\20const\20\28&\29\20\5b9\5d\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::Node*\20\28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::make<\28anonymous\20namespace\29::itanium_demangle::PostfixQualifiedType\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20char\20const\20\28&\29\20\5b11\5d>\28\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20char\20const\20\28&\29\20\5b11\5d\29 can change the state due to \28anonymous\20namespace\29::itanium_demangle::PostfixQualifiedType*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::PostfixQualifiedType\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20char\20const\20\28&\29\20\5b11\5d>\28\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20char\20const\20\28&\29\20\5b11\5d\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::Node*\20\28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::make<\28anonymous\20namespace\29::itanium_demangle::NoexceptSpec\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&>\28\28anonymous\20namespace\29::itanium_demangle::Node*&\29 can change the state due to \28anonymous\20namespace\29::itanium_demangle::NoexceptSpec*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::NoexceptSpec\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&>\28\28anonymous\20namespace\29::itanium_demangle::Node*&\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::Node*\20\28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::make<\28anonymous\20namespace\29::itanium_demangle::DynamicExceptionSpec\2c\20\28anonymous\20namespace\29::itanium_demangle::NodeArray>\28\28anonymous\20namespace\29::itanium_demangle::NodeArray&&\29 can change the state due to \28anonymous\20namespace\29::itanium_demangle::DynamicExceptionSpec*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::DynamicExceptionSpec\2c\20\28anonymous\20namespace\29::itanium_demangle::NodeArray>\28\28anonymous\20namespace\29::itanium_demangle::NodeArray&&\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::Node*\20\28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::make<\28anonymous\20namespace\29::itanium_demangle::FunctionType\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::NodeArray&\2c\20\28anonymous\20namespace\29::itanium_demangle::Qualifiers&\2c\20\28anonymous\20namespace\29::itanium_demangle::FunctionRefQual&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&>\28\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::NodeArray&\2c\20\28anonymous\20namespace\29::itanium_demangle::Qualifiers&\2c\20\28anonymous\20namespace\29::itanium_demangle::FunctionRefQual&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\29 can change the state due to \28anonymous\20namespace\29::itanium_demangle::FunctionType*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::FunctionType\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::NodeArray&\2c\20\28anonymous\20namespace\29::itanium_demangle::Qualifiers&\2c\20\28anonymous\20namespace\29::itanium_demangle::FunctionRefQual&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&>\28\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::NodeArray&\2c\20\28anonymous\20namespace\29::itanium_demangle::Qualifiers&\2c\20\28anonymous\20namespace\29::itanium_demangle::FunctionRefQual&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::Node*\20\28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::make<\28anonymous\20namespace\29::itanium_demangle::ObjCProtoName\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::StringView&>\28\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::StringView&\29 can change the state due to \28anonymous\20namespace\29::itanium_demangle::ObjCProtoName*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::ObjCProtoName\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::StringView&>\28\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::StringView&\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::Node*\20\28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::make<\28anonymous\20namespace\29::itanium_demangle::VendorExtQualType\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::StringView&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&>\28\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::StringView&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\29 can change the state due to \28anonymous\20namespace\29::itanium_demangle::VendorExtQualType*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::VendorExtQualType\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::StringView&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&>\28\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::StringView&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::Node*\20\28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::make<\28anonymous\20namespace\29::itanium_demangle::QualType\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Qualifiers&>\28\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Qualifiers&\29 can change the state due to \28anonymous\20namespace\29::itanium_demangle::QualType*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::QualType\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Qualifiers&>\28\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Qualifiers&\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::Node*\20\28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::make<\28anonymous\20namespace\29::itanium_demangle::PixelVectorType\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&>\28\28anonymous\20namespace\29::itanium_demangle::Node*&\29 can change the state due to \28anonymous\20namespace\29::itanium_demangle::PixelVectorType*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::PixelVectorType\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&>\28\28anonymous\20namespace\29::itanium_demangle::Node*&\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::Node*\20\28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::make<\28anonymous\20namespace\29::itanium_demangle::VectorType\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&>\28\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\29 can change the state due to \28anonymous\20namespace\29::itanium_demangle::VectorType*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::VectorType\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&>\28\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::Node*\20\28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::make<\28anonymous\20namespace\29::itanium_demangle::VectorType\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20std::nullptr_t>\28\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20std::nullptr_t&&\29 can change the state due to \28anonymous\20namespace\29::itanium_demangle::VectorType*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::VectorType\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20std::nullptr_t>\28\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20std::nullptr_t&&\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::Node*\20\28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::make<\28anonymous\20namespace\29::itanium_demangle::ArrayType\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&>\28\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\29 can change the state due to \28anonymous\20namespace\29::itanium_demangle::ArrayType*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::ArrayType\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&>\28\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::Node*\20\28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::make<\28anonymous\20namespace\29::itanium_demangle::PointerToMemberType\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&>\28\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\29 can change the state due to \28anonymous\20namespace\29::itanium_demangle::PointerToMemberType*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::PointerToMemberType\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&>\28\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::Node*\20\28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::make<\28anonymous\20namespace\29::itanium_demangle::ElaboratedTypeSpefType\2c\20\28anonymous\20namespace\29::itanium_demangle::StringView&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&>\28\28anonymous\20namespace\29::itanium_demangle::StringView&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\29 can change the state due to \28anonymous\20namespace\29::itanium_demangle::ElaboratedTypeSpefType*\20\28anonymous\20namespace\29::DefaultAllocator::makeNode<\28anonymous\20namespace\29::itanium_demangle::ElaboratedTypeSpefType\2c\20\28anonymous\20namespace\29::itanium_demangle::StringView&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&>\28\28anonymous\20namespace\29::itanium_demangle::StringView&\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\29
[asyncify] std::nested_exception::~nested_exception\28\29.1 can change the state due to std::nested_exception::~nested_exception\28\29
[asyncify] std::__2::__assoc_sub_state::set_value\28\29 can change the state due to std::__2::__assoc_sub_state::__has_value\5babi:v15006\5d\28\29\20const
[asyncify] std::__2::__assoc_sub_state::set_value_at_thread_exit\28\29 can change the state due to std::__2::__assoc_sub_state::__has_value\5babi:v15006\5d\28\29\20const
[asyncify] std::__2::__assoc_sub_state::~__assoc_sub_state\28\29.1 can change the state due to std::__2::__assoc_sub_state::~__assoc_sub_state\28\29
[asyncify] swprintf can change the state due to vswprintf
[asyncify] wprintf can change the state due to vwprintf
[asyncify] nsvg__startElement\28void*\2c\20char\20const*\2c\20char\20const**\29 can change the state due to nsvg__parseAttr\28NSVGparser*\2c\20char\20const*\2c\20char\20const*\29
[asyncify] nsvg__parseGradient\28NSVGparser*\2c\20char\20const**\2c\20char\29 can change the state due to nsvg__parseAttr\28NSVGparser*\2c\20char\20const*\2c\20char\20const*\29
[asyncify] nsvg__parseGradientStop\28NSVGparser*\2c\20char\20const**\29 can change the state due to nsvg__parseAttr\28NSVGparser*\2c\20char\20const*\2c\20char\20const*\29
[asyncify] nsvg__parseAttribs\28NSVGparser*\2c\20char\20const**\29 can change the state due to nsvg__parseAttr\28NSVGparser*\2c\20char\20const*\2c\20char\20const*\29
[asyncify] nsvg__parseLine\28NSVGparser*\2c\20char\20const**\29 can change the state due to nsvg__parseAttr\28NSVGparser*\2c\20char\20const*\2c\20char\20const*\29
[asyncify] nsvg__parsePoly\28NSVGparser*\2c\20char\20const**\2c\20int\29 can change the state due to nsvg__parseAttr\28NSVGparser*\2c\20char\20const*\2c\20char\20const*\29
[asyncify] nsvg__parseSVG\28NSVGparser*\2c\20char\20const**\29 can change the state due to nsvg__parseAttr\28NSVGparser*\2c\20char\20const*\2c\20char\20const*\29
[asyncify] nsvg__parseNameValue\28NSVGparser*\2c\20char\20const*\2c\20char\20const*\29 can change the state due to nsvg__parseAttr\28NSVGparser*\2c\20char\20const*\2c\20char\20const*\29
[asyncify] float\20std::__2::__do_strtod\5babi:v15006\5d<float>\28char\20const*\2c\20char**\29 can change the state due to strtof_l
[asyncify] float\20std::__2::\28anonymous\20namespace\29::as_float<float\2c\20std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>>\28std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\2c\20std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\2c\20unsigned\20long*\29 can change the state due to float\20std::__2::\28anonymous\20namespace\29::as_float_helper<float\2c\20std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\2c\20float\20\28*\29\28char\20const*\2c\20char**\29>\28std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\2c\20std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\2c\20unsigned\20long*\2c\20float\20\28*\29\28char\20const*\2c\20char**\29\29
[asyncify] luaV_tonumber\28lua_TValue\20const*\2c\20lua_TValue*\29 can change the state due to luaO_str2d\28char\20const*\2c\20double*\29
[asyncify] SDL_atof can change the state due to atof
[asyncify] png_get_sCAL can change the state due to atof
[asyncify] double\20std::__2::__do_strtod\5babi:v15006\5d<double>\28char\20const*\2c\20char**\29 can change the state due to strtod_l
[asyncify] double\20std::__2::\28anonymous\20namespace\29::as_float<double\2c\20std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>>\28std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\2c\20std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\2c\20unsigned\20long*\29 can change the state due to double\20std::__2::\28anonymous\20namespace\29::as_float_helper<double\2c\20std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\2c\20double\20\28*\29\28char\20const*\2c\20char**\29>\28std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\2c\20std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\2c\20unsigned\20long*\2c\20double\20\28*\29\28char\20const*\2c\20char**\29\29
[asyncify] long\20double\20std::__2::__do_strtod\5babi:v15006\5d<long\20double>\28char\20const*\2c\20char**\29 can change the state due to strtold_l
[asyncify] long\20double\20std::__2::\28anonymous\20namespace\29::as_float<long\20double\2c\20std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>>\28std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\2c\20std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\2c\20unsigned\20long*\29 can change the state due to long\20double\20std::__2::\28anonymous\20namespace\29::as_float_helper<long\20double\2c\20std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\2c\20long\20double\20\28*\29\28char\20const*\2c\20char**\29>\28std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\2c\20std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\2c\20unsigned\20long*\2c\20long\20double\20\28*\29\28char\20const*\2c\20char**\29\29
[asyncify] float\20std::__2::\28anonymous\20namespace\29::as_float<float\2c\20std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>>\28std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\2c\20std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>\20const&\2c\20unsigned\20long*\29 can change the state due to float\20std::__2::\28anonymous\20namespace\29::as_float_helper<float\2c\20std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>\2c\20float\20\28*\29\28wchar_t\20const*\2c\20wchar_t**\29>\28std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\2c\20std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>\20const&\2c\20unsigned\20long*\2c\20float\20\28*\29\28wchar_t\20const*\2c\20wchar_t**\29\29
[asyncify] double\20std::__2::\28anonymous\20namespace\29::as_float<double\2c\20std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>>\28std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\2c\20std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>\20const&\2c\20unsigned\20long*\29 can change the state due to double\20std::__2::\28anonymous\20namespace\29::as_float_helper<double\2c\20std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>\2c\20double\20\28*\29\28wchar_t\20const*\2c\20wchar_t**\29>\28std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\2c\20std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>\20const&\2c\20unsigned\20long*\2c\20double\20\28*\29\28wchar_t\20const*\2c\20wchar_t**\29\29
[asyncify] long\20double\20std::__2::\28anonymous\20namespace\29::as_float<long\20double\2c\20std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>>\28std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\2c\20std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>\20const&\2c\20unsigned\20long*\29 can change the state due to long\20double\20std::__2::\28anonymous\20namespace\29::as_float_helper<long\20double\2c\20std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>\2c\20long\20double\20\28*\29\28wchar_t\20const*\2c\20wchar_t**\29>\28std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\2c\20std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>\20const&\2c\20unsigned\20long*\2c\20long\20double\20\28*\29\28wchar_t\20const*\2c\20wchar_t**\29\29
[asyncify] legalstub$wcstoumax can change the state due to wcstoumax
[asyncify] unsigned\20long\20long\20std::__2::\28anonymous\20namespace\29::as_integer<unsigned\20long\20long\2c\20std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>>\28std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\2c\20std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>\20const&\2c\20unsigned\20long*\2c\20int\29 can change the state due to unsigned\20long\20long\20std::__2::\28anonymous\20namespace\29::as_integer_helper<unsigned\20long\20long\2c\20std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>\2c\20unsigned\20long\20long\20\28*\29\28wchar_t\20const*\2c\20wchar_t**\2c\20int\29>\28std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\2c\20std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>\20const&\2c\20unsigned\20long*\2c\20int\2c\20unsigned\20long\20long\20\28*\29\28wchar_t\20const*\2c\20wchar_t**\2c\20int\29\29
[asyncify] legalstub$wcstoimax can change the state due to wcstoimax
[asyncify] long\20long\20std::__2::\28anonymous\20namespace\29::as_integer<long\20long\2c\20std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>>\28std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\2c\20std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>\20const&\2c\20unsigned\20long*\2c\20int\29 can change the state due to long\20long\20std::__2::\28anonymous\20namespace\29::as_integer_helper<long\20long\2c\20std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>\2c\20long\20long\20\28*\29\28wchar_t\20const*\2c\20wchar_t**\2c\20int\29>\28std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\2c\20std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>\20const&\2c\20unsigned\20long*\2c\20int\2c\20long\20long\20\28*\29\28wchar_t\20const*\2c\20wchar_t**\2c\20int\29\29
[asyncify] unsigned\20long\20std::__2::\28anonymous\20namespace\29::as_integer<unsigned\20long\2c\20std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>>\28std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\2c\20std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>\20const&\2c\20unsigned\20long*\2c\20int\29 can change the state due to unsigned\20long\20std::__2::\28anonymous\20namespace\29::as_integer_helper<unsigned\20long\2c\20std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>\2c\20unsigned\20long\20\28*\29\28wchar_t\20const*\2c\20wchar_t**\2c\20int\29>\28std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\2c\20std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>\20const&\2c\20unsigned\20long*\2c\20int\2c\20unsigned\20long\20\28*\29\28wchar_t\20const*\2c\20wchar_t**\2c\20int\29\29
[asyncify] long\20std::__2::\28anonymous\20namespace\29::as_integer<long\2c\20std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>>\28std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\2c\20std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>\20const&\2c\20unsigned\20long*\2c\20int\29 can change the state due to long\20std::__2::\28anonymous\20namespace\29::as_integer_helper<long\2c\20std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>\2c\20long\20\28*\29\28wchar_t\20const*\2c\20wchar_t**\2c\20int\29>\28std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\2c\20std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>\20const&\2c\20unsigned\20long*\2c\20int\2c\20long\20\28*\29\28wchar_t\20const*\2c\20wchar_t**\2c\20int\29\29
[asyncify] regcomp can change the state due to tre_parse
[asyncify] SDL_GetJoystickGameControllerTypeFromGUID can change the state due to SDL_GetJoystickGameControllerTypeFromVIDPID
[asyncify] SDL_ShouldIgnoreJoystick can change the state due to SDL_GetJoystickGameControllerTypeFromVIDPID
[asyncify] dlclose can change the state due to __dl_invalid_handle
[asyncify] __dlsym can change the state due to __dl_invalid_handle
[asyncify] ensure_init can change the state due to load_library_start
[asyncify] ctime can change the state due to asctime
[asyncify] ngettext can change the state due to dngettext
[asyncify] gettext can change the state due to dgettext
[asyncify] legalstub$std::__2::to_string\28long\20double\29 can change the state due to std::__2::to_string\28long\20double\29
[asyncify] std::__2::__iostream_category::message\28int\29\20const can change the state due to std::__2::__do_message::message\28int\29\20const
[asyncify] std::__2::__generic_error_category::message\28int\29\20const can change the state due to std::__2::__do_message::message\28int\29\20const
[asyncify] std::__2::__system_error_category::message\28int\29\20const can change the state due to std::__2::__do_message::message\28int\29\20const
[asyncify] __crypt_sha256 can change the state due to sha256crypt
[asyncify] __crypt_sha512 can change the state due to sha512crypt
[asyncify] ether_ntoa can change the state due to ether_ntoa_r
[asyncify] std::__2::__fs::filesystem::filesystem_error::__create_what\28int\29 can change the state due to std::__2::__fs::filesystem::filesystem_error::__create_what\28int\29::$_0::operator\28\29\28\29\20const
[asyncify] std::__2::__fs::filesystem::__create_directory\28std::__2::__fs::filesystem::path\20const&\2c\20std::__2::__fs::filesystem::path\20const&\2c\20std::__2::error_code*\29 can change the state due to std::__2::__fs::filesystem::detail::\28anonymous\20namespace\29::ErrorHandler<bool>::report\28std::__2::errc\20const&\2c\20char\20const*\2c\20...\29\20const
[asyncify] std::__2::__fs::filesystem::__temp_directory_path\28std::__2::error_code*\29 can change the state due to std::__2::__fs::filesystem::detail::\28anonymous\20namespace\29::ErrorHandler<std::__2::__fs::filesystem::path>::report\28std::__2::error_code\20const&\2c\20char\20const*\2c\20...\29\20const
[asyncify] std::__2::__fs::filesystem::detail::\28anonymous\20namespace\29::create_file_status\28std::__2::error_code&\2c\20std::__2::__fs::filesystem::path\20const&\2c\20stat\20const&\2c\20std::__2::error_code*\29 can change the state due to std::__2::__fs::filesystem::detail::\28anonymous\20namespace\29::ErrorHandler<void>::report\28std::__2::error_code\20const&\2c\20char\20const*\2c\20...\29\20const.1
[asyncify] std::__2::stoi\28std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\2c\20unsigned\20long*\2c\20int\29 can change the state due to int\20std::__2::\28anonymous\20namespace\29::as_integer<int\2c\20std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>>\28std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\2c\20std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\2c\20unsigned\20long*\2c\20int\29
[asyncify] long\20std::__2::\28anonymous\20namespace\29::as_integer<long\2c\20std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>>\28std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\2c\20std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\2c\20unsigned\20long*\2c\20int\29 can change the state due to long\20std::__2::\28anonymous\20namespace\29::as_integer_helper<long\2c\20std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\2c\20long\20\28*\29\28char\20const*\2c\20char**\2c\20int\29>\28std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\2c\20std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\2c\20unsigned\20long*\2c\20int\2c\20long\20\28*\29\28char\20const*\2c\20char**\2c\20int\29\29
[asyncify] unsigned\20long\20std::__2::\28anonymous\20namespace\29::as_integer<unsigned\20long\2c\20std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>>\28std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\2c\20std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\2c\20unsigned\20long*\2c\20int\29 can change the state due to unsigned\20long\20std::__2::\28anonymous\20namespace\29::as_integer_helper<unsigned\20long\2c\20std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\2c\20unsigned\20long\20\28*\29\28char\20const*\2c\20char**\2c\20int\29>\28std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\2c\20std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\2c\20unsigned\20long*\2c\20int\2c\20unsigned\20long\20\28*\29\28char\20const*\2c\20char**\2c\20int\29\29
[asyncify] long\20long\20std::__2::\28anonymous\20namespace\29::as_integer<long\20long\2c\20std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>>\28std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\2c\20std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\2c\20unsigned\20long*\2c\20int\29 can change the state due to long\20long\20std::__2::\28anonymous\20namespace\29::as_integer_helper<long\20long\2c\20std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\2c\20long\20long\20\28*\29\28char\20const*\2c\20char**\2c\20int\29>\28std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\2c\20std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\2c\20unsigned\20long*\2c\20int\2c\20long\20long\20\28*\29\28char\20const*\2c\20char**\2c\20int\29\29
[asyncify] unsigned\20long\20long\20std::__2::\28anonymous\20namespace\29::as_integer<unsigned\20long\20long\2c\20std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>>\28std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\2c\20std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\2c\20unsigned\20long*\2c\20int\29 can change the state due to unsigned\20long\20long\20std::__2::\28anonymous\20namespace\29::as_integer_helper<unsigned\20long\20long\2c\20std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\2c\20unsigned\20long\20long\20\28*\29\28char\20const*\2c\20char**\2c\20int\29>\28std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\2c\20std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\2c\20unsigned\20long*\2c\20int\2c\20unsigned\20long\20long\20\28*\29\28char\20const*\2c\20char**\2c\20int\29\29
[asyncify] std::__2::stoi\28std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>\20const&\2c\20unsigned\20long*\2c\20int\29 can change the state due to int\20std::__2::\28anonymous\20namespace\29::as_integer<int\2c\20std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>>\28std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\2c\20std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>\20const&\2c\20unsigned\20long*\2c\20int\29
[asyncify] std::__2::locale::classic\28\29 can change the state due to std::__2::locale::__imp::make_classic\28\29
[asyncify] std::__2::basic_ostream<char\2c\20std::__2::char_traits<char>>::operator=\28std::__2::basic_ostream<char\2c\20std::__2::char_traits<char>>&&\29 can change the state due to std::__2::basic_ostream<char\2c\20std::__2::char_traits<char>>::swap\5babi:v15006\5d\28std::__2::basic_ostream<char\2c\20std::__2::char_traits<char>>&\29
[asyncify] std::__2::basic_iostream<char\2c\20std::__2::char_traits<char>>::swap\5babi:v15006\5d\28std::__2::basic_iostream<char\2c\20std::__2::char_traits<char>>&\29 can change the state due to std::__2::basic_istream<char\2c\20std::__2::char_traits<char>>::swap\5babi:v15006\5d\28std::__2::basic_istream<char\2c\20std::__2::char_traits<char>>&\29
[asyncify] std::__2::basic_istream<char\2c\20std::__2::char_traits<char>>::operator=\28std::__2::basic_istream<char\2c\20std::__2::char_traits<char>>&&\29 can change the state due to std::__2::basic_istream<char\2c\20std::__2::char_traits<char>>::swap\5babi:v15006\5d\28std::__2::basic_istream<char\2c\20std::__2::char_traits<char>>&\29
[asyncify] std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::basic_string\5babi:v15006\5d<char\20const*\2c\20void>\28char\20const*\2c\20char\20const*\2c\20std::__2::allocator<char>\20const&\29 can change the state due to std::__2::enable_if<__is_cpp17_forward_iterator<char\20const*>::value\2c\20void>::type\20std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::__init<char\20const*>\28char\20const*\2c\20char\20const*\29
[asyncify] std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::basic_string\5babi:v15006\5d<char\20const*\2c\20void>\28char\20const*\2c\20char\20const*\29 can change the state due to std::__2::enable_if<__is_cpp17_forward_iterator<char\20const*>::value\2c\20void>::type\20std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::__init<char\20const*>\28char\20const*\2c\20char\20const*\29
[asyncify] std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::basic_string\5babi:v15006\5d<char*\2c\20void>\28char*\2c\20char*\2c\20std::__2::allocator<char>\20const&\29 can change the state due to std::__2::enable_if<__is_cpp17_forward_iterator<char*>::value\2c\20void>::type\20std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::__init<char*>\28char*\2c\20char*\29
[asyncify] std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::basic_string\5babi:v15006\5d<char*\2c\20void>\28char*\2c\20char*\29 can change the state due to std::__2::enable_if<__is_cpp17_forward_iterator<char*>::value\2c\20void>::type\20std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::__init<char*>\28char*\2c\20char*\29
[asyncify] std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::replace\28unsigned\20long\2c\20unsigned\20long\2c\20char\20const*\2c\20unsigned\20long\29 can change the state due to std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::__grow_by_and_replace\28unsigned\20long\2c\20unsigned\20long\2c\20unsigned\20long\2c\20unsigned\20long\2c\20unsigned\20long\2c\20unsigned\20long\2c\20char\20const*\29
[asyncify] std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::insert\28unsigned\20long\2c\20char\20const*\2c\20unsigned\20long\29 can change the state due to std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::__grow_by_and_replace\28unsigned\20long\2c\20unsigned\20long\2c\20unsigned\20long\2c\20unsigned\20long\2c\20unsigned\20long\2c\20unsigned\20long\2c\20char\20const*\29
[asyncify] std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::__assign_external\28char\20const*\2c\20unsigned\20long\29 can change the state due to std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::__grow_by_and_replace\28unsigned\20long\2c\20unsigned\20long\2c\20unsigned\20long\2c\20unsigned\20long\2c\20unsigned\20long\2c\20unsigned\20long\2c\20char\20const*\29
[asyncify] std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::append\28char\20const*\2c\20unsigned\20long\29 can change the state due to std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::__grow_by_and_replace\28unsigned\20long\2c\20unsigned\20long\2c\20unsigned\20long\2c\20unsigned\20long\2c\20unsigned\20long\2c\20unsigned\20long\2c\20char\20const*\29
[asyncify] std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>&\20std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::__assign_no_alias<false>\28char\20const*\2c\20unsigned\20long\29 can change the state due to std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::__grow_by_and_replace\28unsigned\20long\2c\20unsigned\20long\2c\20unsigned\20long\2c\20unsigned\20long\2c\20unsigned\20long\2c\20unsigned\20long\2c\20char\20const*\29
[asyncify] std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>&\20std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::__assign_no_alias<true>\28char\20const*\2c\20unsigned\20long\29 can change the state due to std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::__grow_by_and_replace\28unsigned\20long\2c\20unsigned\20long\2c\20unsigned\20long\2c\20unsigned\20long\2c\20unsigned\20long\2c\20unsigned\20long\2c\20char\20const*\29
[asyncify] std::__2::enable_if<__is_cpp17_forward_iterator<char\20const*>::value\2c\20std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>&>::type\20std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::append\5babi:v15006\5d<char\20const*>\28char\20const*\2c\20char\20const*\29 can change the state due to std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::__grow_by\28unsigned\20long\2c\20unsigned\20long\2c\20unsigned\20long\2c\20unsigned\20long\2c\20unsigned\20long\2c\20unsigned\20long\29
[asyncify] std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::__append_default_init\5babi:v15006\5d\28unsigned\20long\29 can change the state due to std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::__grow_by\28unsigned\20long\2c\20unsigned\20long\2c\20unsigned\20long\2c\20unsigned\20long\2c\20unsigned\20long\2c\20unsigned\20long\29
[asyncify] std::__2::enable_if<__is_cpp17_forward_iterator<char*>::value\2c\20std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>&>::type\20std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::append\5babi:v15006\5d<char*>\28char*\2c\20char*\29 can change the state due to std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::__grow_by\28unsigned\20long\2c\20unsigned\20long\2c\20unsigned\20long\2c\20unsigned\20long\2c\20unsigned\20long\2c\20unsigned\20long\29
[asyncify] std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::insert\28unsigned\20long\2c\20unsigned\20long\2c\20char\29 can change the state due to std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::__grow_by\28unsigned\20long\2c\20unsigned\20long\2c\20unsigned\20long\2c\20unsigned\20long\2c\20unsigned\20long\2c\20unsigned\20long\29
[asyncify] std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::replace\28unsigned\20long\2c\20unsigned\20long\2c\20unsigned\20long\2c\20char\29 can change the state due to std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::__grow_by\28unsigned\20long\2c\20unsigned\20long\2c\20unsigned\20long\2c\20unsigned\20long\2c\20unsigned\20long\2c\20unsigned\20long\29
[asyncify] std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::push_back\28char\29 can change the state due to std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::__grow_by\28unsigned\20long\2c\20unsigned\20long\2c\20unsigned\20long\2c\20unsigned\20long\2c\20unsigned\20long\2c\20unsigned\20long\29
[asyncify] std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::append\28unsigned\20long\2c\20char\29 can change the state due to std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::__grow_by\28unsigned\20long\2c\20unsigned\20long\2c\20unsigned\20long\2c\20unsigned\20long\2c\20unsigned\20long\2c\20unsigned\20long\29
[asyncify] std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::assign\28unsigned\20long\2c\20char\29 can change the state due to std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::__grow_by\28unsigned\20long\2c\20unsigned\20long\2c\20unsigned\20long\2c\20unsigned\20long\2c\20unsigned\20long\2c\20unsigned\20long\29
[asyncify] std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::insert\28std::__2::__wrap_iter<char\20const*>\2c\20char\29 can change the state due to std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::__grow_by\28unsigned\20long\2c\20unsigned\20long\2c\20unsigned\20long\2c\20unsigned\20long\2c\20unsigned\20long\2c\20unsigned\20long\29
[asyncify] std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::basic_string\5babi:v15006\5d<std::nullptr_t>\28char\20const*\29 can change the state due to std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::__init\28char\20const*\2c\20unsigned\20long\29
[asyncify] std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::basic_string<std::__2::basic_string_view<char\2c\20std::__2::char_traits<char>>\2c\20void>\28std::__2::basic_string_view<char\2c\20std::__2::char_traits<char>>\20const&\29 can change the state due to std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::__init\28char\20const*\2c\20unsigned\20long\29
[asyncify] std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::basic_string\28std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\2c\20unsigned\20long\2c\20unsigned\20long\2c\20std::__2::allocator<char>\20const&\29 can change the state due to std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::__init\28char\20const*\2c\20unsigned\20long\29
[asyncify] std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::basic_string\28std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\29 can change the state due to std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::__init_copy_ctor_external\28char\20const*\2c\20unsigned\20long\29
[asyncify] std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::reserve\28unsigned\20long\29 can change the state due to std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::__shrink_or_extend\5babi:v15006\5d\28unsigned\20long\29
[asyncify] std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::basic_string\5babi:v15006\5d\28unsigned\20long\2c\20char\29 can change the state due to std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::__init\28unsigned\20long\2c\20char\29
[asyncify] std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20std::__2::operator+<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\28char\20const*\2c\20std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\29 can change the state due to std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::basic_string\5babi:v15006\5d\28std::__2::__uninitialized_size_tag\2c\20unsigned\20long\2c\20std::__2::allocator<char>\20const&\29
[asyncify] std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20std::__2::operator+\5babi:v15006\5d<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\28std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\2c\20char\20const*\29 can change the state due to std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::basic_string\5babi:v15006\5d\28std::__2::__uninitialized_size_tag\2c\20unsigned\20long\2c\20std::__2::allocator<char>\20const&\29
[asyncify] std::__2::shared_ptr<std::__2::__fs::filesystem::__dir_stream>\20std::__2::allocate_shared\5babi:v15006\5d<std::__2::__fs::filesystem::__dir_stream\2c\20std::__2::allocator<std::__2::__fs::filesystem::__dir_stream>\2c\20std::__2::__fs::filesystem::path\20const&\2c\20std::__2::__fs::filesystem::directory_options&\2c\20std::__2::error_code&\2c\20void>\28std::__2::allocator<std::__2::__fs::filesystem::__dir_stream>\20const&\2c\20std::__2::__fs::filesystem::path\20const&\2c\20std::__2::__fs::filesystem::directory_options&\2c\20std::__2::error_code&\29 can change the state due to std::__2::__allocation_guard<std::__2::allocator<std::__2::__shared_ptr_emplace<std::__2::__fs::filesystem::__dir_stream\2c\20std::__2::allocator<std::__2::__fs::filesystem::__dir_stream>>>>::__allocation_guard\5babi:v15006\5d<std::__2::allocator<std::__2::__fs::filesystem::__dir_stream>>\28std::__2::allocator<std::__2::__fs::filesystem::__dir_stream>\2c\20unsigned\20long\29
[asyncify] std::__2::shared_ptr<std::__2::__fs::filesystem::recursive_directory_iterator::__shared_imp>\20std::__2::allocate_shared\5babi:v15006\5d<std::__2::__fs::filesystem::recursive_directory_iterator::__shared_imp\2c\20std::__2::allocator<std::__2::__fs::filesystem::recursive_directory_iterator::__shared_imp>\2c\20void>\28std::__2::allocator<std::__2::__fs::filesystem::recursive_directory_iterator::__shared_imp>\20const&\29 can change the state due to std::__2::__allocation_guard<std::__2::allocator<std::__2::__shared_ptr_emplace<std::__2::__fs::filesystem::recursive_directory_iterator::__shared_imp\2c\20std::__2::allocator<std::__2::__fs::filesystem::recursive_directory_iterator::__shared_imp>>>>::__allocation_guard\5babi:v15006\5d<std::__2::allocator<std::__2::__fs::filesystem::recursive_directory_iterator::__shared_imp>>\28std::__2::allocator<std::__2::__fs::filesystem::recursive_directory_iterator::__shared_imp>\2c\20unsigned\20long\29
[asyncify] std::__2::deque<std::__2::__fs::filesystem::__dir_stream\2c\20std::__2::allocator<std::__2::__fs::filesystem::__dir_stream>>::push_back\28std::__2::__fs::filesystem::__dir_stream&&\29 can change the state due to std::__2::deque<std::__2::__fs::filesystem::__dir_stream\2c\20std::__2::allocator<std::__2::__fs::filesystem::__dir_stream>>::__add_back_capacity\28\29
[asyncify] std::__2::__split_buffer<std::__2::__fs::filesystem::__dir_stream*\2c\20std::__2::allocator<std::__2::__fs::filesystem::__dir_stream*>>::push_back\5babi:v15006\5d\28std::__2::__fs::filesystem::__dir_stream*\20const&\29 can change the state due to std::__2::__split_buffer<std::__2::__fs::filesystem::__dir_stream*\2c\20std::__2::allocator<std::__2::__fs::filesystem::__dir_stream*>&>::__split_buffer\28unsigned\20long\2c\20unsigned\20long\2c\20std::__2::allocator<std::__2::__fs::filesystem::__dir_stream*>&\29
[asyncify] std::__2::__split_buffer<std::__2::__fs::filesystem::__dir_stream*\2c\20std::__2::allocator<std::__2::__fs::filesystem::__dir_stream*>>::push_back\28std::__2::__fs::filesystem::__dir_stream*&&\29 can change the state due to std::__2::__split_buffer<std::__2::__fs::filesystem::__dir_stream*\2c\20std::__2::allocator<std::__2::__fs::filesystem::__dir_stream*>&>::__split_buffer\28unsigned\20long\2c\20unsigned\20long\2c\20std::__2::allocator<std::__2::__fs::filesystem::__dir_stream*>&\29
[asyncify] std::__2::__split_buffer<std::__2::__fs::filesystem::__dir_stream*\2c\20std::__2::allocator<std::__2::__fs::filesystem::__dir_stream*>&>::push_back\28std::__2::__fs::filesystem::__dir_stream*&&\29 can change the state due to std::__2::__split_buffer<std::__2::__fs::filesystem::__dir_stream*\2c\20std::__2::allocator<std::__2::__fs::filesystem::__dir_stream*>&>::__split_buffer\28unsigned\20long\2c\20unsigned\20long\2c\20std::__2::allocator<std::__2::__fs::filesystem::__dir_stream*>&\29
[asyncify] std::__2::__split_buffer<std::__2::__fs::filesystem::__dir_stream*\2c\20std::__2::allocator<std::__2::__fs::filesystem::__dir_stream*>&>::push_front\28std::__2::__fs::filesystem::__dir_stream*\20const&\29 can change the state due to std::__2::__split_buffer<std::__2::__fs::filesystem::__dir_stream*\2c\20std::__2::allocator<std::__2::__fs::filesystem::__dir_stream*>&>::__split_buffer\28unsigned\20long\2c\20unsigned\20long\2c\20std::__2::allocator<std::__2::__fs::filesystem::__dir_stream*>&\29
[asyncify] std::__2::__split_buffer<std::__2::__fs::filesystem::__dir_stream*\2c\20std::__2::allocator<std::__2::__fs::filesystem::__dir_stream*>>::push_front\28std::__2::__fs::filesystem::__dir_stream*&&\29 can change the state due to std::__2::__split_buffer<std::__2::__fs::filesystem::__dir_stream*\2c\20std::__2::allocator<std::__2::__fs::filesystem::__dir_stream*>&>::__split_buffer\28unsigned\20long\2c\20unsigned\20long\2c\20std::__2::allocator<std::__2::__fs::filesystem::__dir_stream*>&\29
[asyncify] std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>::basic_string\5babi:v15006\5d<wchar_t\20const*\2c\20void>\28wchar_t\20const*\2c\20wchar_t\20const*\29 can change the state due to std::__2::enable_if<__is_cpp17_forward_iterator<wchar_t\20const*>::value\2c\20void>::type\20std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>::__init<wchar_t\20const*>\28wchar_t\20const*\2c\20wchar_t\20const*\29
[asyncify] std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>::basic_string\5babi:v15006\5d<wchar_t*\2c\20void>\28wchar_t*\2c\20wchar_t*\2c\20std::__2::allocator<wchar_t>\20const&\29 can change the state due to std::__2::enable_if<__is_cpp17_forward_iterator<wchar_t*>::value\2c\20void>::type\20std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>::__init<wchar_t*>\28wchar_t*\2c\20wchar_t*\29
[asyncify] std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>::replace\28unsigned\20long\2c\20unsigned\20long\2c\20wchar_t\20const*\2c\20unsigned\20long\29 can change the state due to std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>::__grow_by_and_replace\28unsigned\20long\2c\20unsigned\20long\2c\20unsigned\20long\2c\20unsigned\20long\2c\20unsigned\20long\2c\20unsigned\20long\2c\20wchar_t\20const*\29
[asyncify] std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>::insert\28unsigned\20long\2c\20wchar_t\20const*\2c\20unsigned\20long\29 can change the state due to std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>::__grow_by_and_replace\28unsigned\20long\2c\20unsigned\20long\2c\20unsigned\20long\2c\20unsigned\20long\2c\20unsigned\20long\2c\20unsigned\20long\2c\20wchar_t\20const*\29
[asyncify] std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>::__assign_external\28wchar_t\20const*\2c\20unsigned\20long\29 can change the state due to std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>::__grow_by_and_replace\28unsigned\20long\2c\20unsigned\20long\2c\20unsigned\20long\2c\20unsigned\20long\2c\20unsigned\20long\2c\20unsigned\20long\2c\20wchar_t\20const*\29
[asyncify] std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>::append\28wchar_t\20const*\2c\20unsigned\20long\29 can change the state due to std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>::__grow_by_and_replace\28unsigned\20long\2c\20unsigned\20long\2c\20unsigned\20long\2c\20unsigned\20long\2c\20unsigned\20long\2c\20unsigned\20long\2c\20wchar_t\20const*\29
[asyncify] std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>&\20std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>::__assign_no_alias<false>\28wchar_t\20const*\2c\20unsigned\20long\29 can change the state due to std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>::__grow_by_and_replace\28unsigned\20long\2c\20unsigned\20long\2c\20unsigned\20long\2c\20unsigned\20long\2c\20unsigned\20long\2c\20unsigned\20long\2c\20wchar_t\20const*\29
[asyncify] std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>&\20std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>::__assign_no_alias<true>\28wchar_t\20const*\2c\20unsigned\20long\29 can change the state due to std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>::__grow_by_and_replace\28unsigned\20long\2c\20unsigned\20long\2c\20unsigned\20long\2c\20unsigned\20long\2c\20unsigned\20long\2c\20unsigned\20long\2c\20wchar_t\20const*\29
[asyncify] std::__2::enable_if<__is_cpp17_forward_iterator<wchar_t*>::value\2c\20std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>&>::type\20std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>::append\5babi:v15006\5d<wchar_t*>\28wchar_t*\2c\20wchar_t*\29 can change the state due to std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>::__grow_by\28unsigned\20long\2c\20unsigned\20long\2c\20unsigned\20long\2c\20unsigned\20long\2c\20unsigned\20long\2c\20unsigned\20long\29
[asyncify] std::__2::enable_if<__is_cpp17_forward_iterator<wchar_t*>::value\2c\20std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>&>::type\20std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>::assign<wchar_t*>\28wchar_t*\2c\20wchar_t*\29 can change the state due to std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>::__grow_by\28unsigned\20long\2c\20unsigned\20long\2c\20unsigned\20long\2c\20unsigned\20long\2c\20unsigned\20long\2c\20unsigned\20long\29
[asyncify] std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>::insert\28unsigned\20long\2c\20unsigned\20long\2c\20wchar_t\29 can change the state due to std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>::__grow_by\28unsigned\20long\2c\20unsigned\20long\2c\20unsigned\20long\2c\20unsigned\20long\2c\20unsigned\20long\2c\20unsigned\20long\29
[asyncify] std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>::replace\28unsigned\20long\2c\20unsigned\20long\2c\20unsigned\20long\2c\20wchar_t\29 can change the state due to std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>::__grow_by\28unsigned\20long\2c\20unsigned\20long\2c\20unsigned\20long\2c\20unsigned\20long\2c\20unsigned\20long\2c\20unsigned\20long\29
[asyncify] std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>::push_back\28wchar_t\29 can change the state due to std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>::__grow_by\28unsigned\20long\2c\20unsigned\20long\2c\20unsigned\20long\2c\20unsigned\20long\2c\20unsigned\20long\2c\20unsigned\20long\29
[asyncify] std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>::append\28unsigned\20long\2c\20wchar_t\29 can change the state due to std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>::__grow_by\28unsigned\20long\2c\20unsigned\20long\2c\20unsigned\20long\2c\20unsigned\20long\2c\20unsigned\20long\2c\20unsigned\20long\29
[asyncify] std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>::assign\28unsigned\20long\2c\20wchar_t\29 can change the state due to std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>::__grow_by\28unsigned\20long\2c\20unsigned\20long\2c\20unsigned\20long\2c\20unsigned\20long\2c\20unsigned\20long\2c\20unsigned\20long\29
[asyncify] std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>::insert\28std::__2::__wrap_iter<wchar_t\20const*>\2c\20wchar_t\29 can change the state due to std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>::__grow_by\28unsigned\20long\2c\20unsigned\20long\2c\20unsigned\20long\2c\20unsigned\20long\2c\20unsigned\20long\2c\20unsigned\20long\29
[asyncify] std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>::basic_string\5babi:v15006\5d<std::nullptr_t>\28wchar_t\20const*\29 can change the state due to std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>::__init\28wchar_t\20const*\2c\20unsigned\20long\29
[asyncify] std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>::basic_string\28std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>\20const&\2c\20unsigned\20long\2c\20unsigned\20long\2c\20std::__2::allocator<wchar_t>\20const&\29 can change the state due to std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>::__init\28wchar_t\20const*\2c\20unsigned\20long\29
[asyncify] std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>::basic_string\28std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>\20const&\29 can change the state due to std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>::__init_copy_ctor_external\28wchar_t\20const*\2c\20unsigned\20long\29
[asyncify] std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>::reserve\28unsigned\20long\29 can change the state due to std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>::__shrink_or_extend\5babi:v15006\5d\28unsigned\20long\29
[asyncify] std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>::basic_string\5babi:v15006\5d\28unsigned\20long\2c\20wchar_t\29 can change the state due to std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>::__init\28unsigned\20long\2c\20wchar_t\29
[asyncify] std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>::basic_string\5babi:v15006\5d<char*\2c\20void>\28char*\2c\20char*\29 can change the state due to std::__2::enable_if<__is_cpp17_forward_iterator<char*>::value\2c\20void>::type\20std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>::__init<char*>\28char*\2c\20char*\29
[asyncify] std::__2::vector<std::__2::locale::facet*\2c\20std::__2::__sso_allocator<std::__2::locale::facet*\2c\2030ul>>::__vallocate\5babi:v15006\5d\28unsigned\20long\29 can change the state due to std::__2::__allocation_result<std::__2::allocator_traits<std::__2::__sso_allocator<std::__2::locale::facet*\2c\2030ul>>::pointer>\20std::__2::__allocate_at_least\5babi:v15006\5d<std::__2::__sso_allocator<std::__2::locale::facet*\2c\2030ul>>\28std::__2::__sso_allocator<std::__2::locale::facet*\2c\2030ul>&\2c\20unsigned\20long\29
[asyncify] std::__2::__split_buffer<std::__2::locale::facet*\2c\20std::__2::__sso_allocator<std::__2::locale::facet*\2c\2030ul>&>::__split_buffer\28unsigned\20long\2c\20unsigned\20long\2c\20std::__2::__sso_allocator<std::__2::locale::facet*\2c\2030ul>&\29 can change the state due to std::__2::__allocation_result<std::__2::allocator_traits<std::__2::__sso_allocator<std::__2::locale::facet*\2c\2030ul>>::pointer>\20std::__2::__allocate_at_least\5babi:v15006\5d<std::__2::__sso_allocator<std::__2::locale::facet*\2c\2030ul>>\28std::__2::__sso_allocator<std::__2::locale::facet*\2c\2030ul>&\2c\20unsigned\20long\29
[asyncify] void\20std::__2::vector<std::__2::basic_string_view<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::allocator<std::__2::basic_string_view<char\2c\20std::__2::char_traits<char>>>>::__push_back_slow_path<std::__2::basic_string_view<char\2c\20std::__2::char_traits<char>>>\28std::__2::basic_string_view<char\2c\20std::__2::char_traits<char>>&&\29 can change the state due to std::__2::__split_buffer<std::__2::basic_string_view<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::allocator<std::__2::basic_string_view<char\2c\20std::__2::char_traits<char>>>&>::__split_buffer\28unsigned\20long\2c\20unsigned\20long\2c\20std::__2::allocator<std::__2::basic_string_view<char\2c\20std::__2::char_traits<char>>>&\29
[asyncify] std::__2::vector<std::__2::pair<std::__2::basic_string_view<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::__fs::filesystem::PathPartKind>\2c\20std::__2::allocator<std::__2::pair<std::__2::basic_string_view<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::__fs::filesystem::PathPartKind>>>::reserve\28unsigned\20long\29 can change the state due to std::__2::__split_buffer<std::__2::pair<std::__2::basic_string_view<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::__fs::filesystem::PathPartKind>\2c\20std::__2::allocator<std::__2::pair<std::__2::basic_string_view<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::__fs::filesystem::PathPartKind>>&>::__split_buffer\28unsigned\20long\2c\20unsigned\20long\2c\20std::__2::allocator<std::__2::pair<std::__2::basic_string_view<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::__fs::filesystem::PathPartKind>>&\29
[asyncify] void\20std::__2::vector<std::__2::pair<std::__2::basic_string_view<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::__fs::filesystem::PathPartKind>\2c\20std::__2::allocator<std::__2::pair<std::__2::basic_string_view<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::__fs::filesystem::PathPartKind>>>::__emplace_back_slow_path<std::__2::basic_string_view<char\2c\20std::__2::char_traits<char>>&\2c\20std::__2::__fs::filesystem::PathPartKind&>\28std::__2::basic_string_view<char\2c\20std::__2::char_traits<char>>&\2c\20std::__2::__fs::filesystem::PathPartKind&\29 can change the state due to std::__2::__split_buffer<std::__2::pair<std::__2::basic_string_view<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::__fs::filesystem::PathPartKind>\2c\20std::__2::allocator<std::__2::pair<std::__2::basic_string_view<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::__fs::filesystem::PathPartKind>>&>::__split_buffer\28unsigned\20long\2c\20unsigned\20long\2c\20std::__2::allocator<std::__2::pair<std::__2::basic_string_view<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::__fs::filesystem::PathPartKind>>&\29
[asyncify] std::__2::__thread_struct_imp::notify_all_at_thread_exit\28std::__2::condition_variable*\2c\20std::__2::mutex*\29 can change the state due to std::__2::vector<std::__2::pair<std::__2::condition_variable*\2c\20std::__2::mutex*>\2c\20std::__2::__hidden_allocator<std::__2::pair<std::__2::condition_variable*\2c\20std::__2::mutex*>>>::push_back\5babi:v15006\5d\28std::__2::pair<std::__2::condition_variable*\2c\20std::__2::mutex*>&&\29
[asyncify] std::__2::__thread_struct_imp::__make_ready_at_thread_exit\28std::__2::__assoc_sub_state*\29 can change the state due to std::__2::vector<std::__2::__assoc_sub_state*\2c\20std::__2::__hidden_allocator<std::__2::__assoc_sub_state*>>::push_back\5babi:v15006\5d\28std::__2::__assoc_sub_state*\20const&\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::OutputBuffer::operator<<\28unsigned\20int\29 can change the state due to \28anonymous\20namespace\29::itanium_demangle::OutputBuffer::operator<<\28unsigned\20long\20long\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::parseSourceName\28\28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::NameState*\29 can change the state due to \28anonymous\20namespace\29::itanium_demangle::Node*\20\28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::make<\28anonymous\20namespace\29::itanium_demangle::NameType\2c\20char\20const\20\28&\29\20\5b22\5d>\28char\20const\20\28&\29\20\5b22\5d\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::parseFunctionParam\28\29 can change the state due to \28anonymous\20namespace\29::itanium_demangle::Node*\20\28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::make<\28anonymous\20namespace\29::itanium_demangle::NameType\2c\20char\20const\20\28&\29\20\5b5\5d>\28char\20const\20\28&\29\20\5b5\5d\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::parseIntegerLiteral\28\28anonymous\20namespace\29::itanium_demangle::StringView\29 can change the state due to \28anonymous\20namespace\29::itanium_demangle::Node*\20\28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::make<\28anonymous\20namespace\29::itanium_demangle::IntegerLiteral\2c\20\28anonymous\20namespace\29::itanium_demangle::StringView&\2c\20\28anonymous\20namespace\29::itanium_demangle::StringView&>\28\28anonymous\20namespace\29::itanium_demangle::StringView&\2c\20\28anonymous\20namespace\29::itanium_demangle::StringView&\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::Node*\20\28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::parseFloatingLiteral<float>\28\29 can change the state due to \28anonymous\20namespace\29::itanium_demangle::Node*\20\28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::make<\28anonymous\20namespace\29::itanium_demangle::FloatLiteralImpl<float>\2c\20\28anonymous\20namespace\29::itanium_demangle::StringView&>\28\28anonymous\20namespace\29::itanium_demangle::StringView&\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::Node*\20\28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::parseFloatingLiteral<double>\28\29 can change the state due to \28anonymous\20namespace\29::itanium_demangle::Node*\20\28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::make<\28anonymous\20namespace\29::itanium_demangle::FloatLiteralImpl<double>\2c\20\28anonymous\20namespace\29::itanium_demangle::StringView&>\28\28anonymous\20namespace\29::itanium_demangle::StringView&\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::Node*\20\28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::parseFloatingLiteral<long\20double>\28\29 can change the state due to \28anonymous\20namespace\29::itanium_demangle::Node*\20\28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::make<\28anonymous\20namespace\29::itanium_demangle::FloatLiteralImpl<long\20double>\2c\20\28anonymous\20namespace\29::itanium_demangle::StringView&>\28\28anonymous\20namespace\29::itanium_demangle::StringView&\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::parseAbiTags\28\28anonymous\20namespace\29::itanium_demangle::Node*\29 can change the state due to \28anonymous\20namespace\29::itanium_demangle::Node*\20\28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::make<\28anonymous\20namespace\29::itanium_demangle::AbiTagAttr\2c\20\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::StringView&>\28\28anonymous\20namespace\29::itanium_demangle::Node*&\2c\20\28anonymous\20namespace\29::itanium_demangle::StringView&\29
[asyncify] \28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::popTrailingNodeArray\28unsigned\20long\29 can change the state due to \28anonymous\20namespace\29::itanium_demangle::NodeArray\20\28anonymous\20namespace\29::itanium_demangle::AbstractManglingParser<\28anonymous\20namespace\29::itanium_demangle::ManglingParser<\28anonymous\20namespace\29::DefaultAllocator>\2c\20\28anonymous\20namespace\29::DefaultAllocator>::makeNodeArray<\28anonymous\20namespace\29::itanium_demangle::Node**>\28\28anonymous\20namespace\29::itanium_demangle::Node**\2c\20\28anonymous\20namespace\29::itanium_demangle::Node**\29
[asyncify] std::__2::promise<void>::set_value\28\29 can change the state due to std::__2::__assoc_sub_state::set_value\28\29
[asyncify] std::__2::promise<void>::set_value_at_thread_exit\28\29 can change the state due to std::__2::__assoc_sub_state::set_value_at_thread_exit\28\29
[asyncify] std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>\20std::__2::\28anonymous\20namespace\29::as_string<std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>\2c\20int\20\28*\29\28wchar_t*\2c\20unsigned\20long\2c\20wchar_t\20const*\2c\20...\29\2c\20float>\28int\20\28*\29\28wchar_t*\2c\20unsigned\20long\2c\20wchar_t\20const*\2c\20...\29\2c\20std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>\2c\20std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>::value_type\20const*\2c\20float\29 can change the state due to swprintf
[asyncify] std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>\20std::__2::\28anonymous\20namespace\29::as_string<std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>\2c\20int\20\28*\29\28wchar_t*\2c\20unsigned\20long\2c\20wchar_t\20const*\2c\20...\29\2c\20double>\28int\20\28*\29\28wchar_t*\2c\20unsigned\20long\2c\20wchar_t\20const*\2c\20...\29\2c\20std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>\2c\20std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>::value_type\20const*\2c\20double\29 can change the state due to swprintf
[asyncify] std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>\20std::__2::\28anonymous\20namespace\29::as_string<std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>\2c\20int\20\28*\29\28wchar_t*\2c\20unsigned\20long\2c\20wchar_t\20const*\2c\20...\29\2c\20long\20double>\28int\20\28*\29\28wchar_t*\2c\20unsigned\20long\2c\20wchar_t\20const*\2c\20...\29\2c\20std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>\2c\20std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>::value_type\20const*\2c\20long\20double\29 can change the state due to swprintf
[asyncify] float\20std::__2::__num_get_float<float>\28char\20const*\2c\20char\20const*\2c\20unsigned\20int&\29 can change the state due to float\20std::__2::__do_strtod\5babi:v15006\5d<float>\28char\20const*\2c\20char**\29
[asyncify] std::__2::stof\28std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\2c\20unsigned\20long*\29 can change the state due to float\20std::__2::\28anonymous\20namespace\29::as_float<float\2c\20std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>>\28std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\2c\20std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\2c\20unsigned\20long*\29
[asyncify] lua_isnumber\28lua_State*\2c\20int\29 can change the state due to luaV_tonumber\28lua_TValue\20const*\2c\20lua_TValue*\29
[asyncify] lua_tonumber\28lua_State*\2c\20int\29 can change the state due to luaV_tonumber\28lua_TValue\20const*\2c\20lua_TValue*\29
[asyncify] lua_tointeger\28lua_State*\2c\20int\29 can change the state due to luaV_tonumber\28lua_TValue\20const*\2c\20lua_TValue*\29
[asyncify] SDL_MouseNormalSpeedScaleChanged can change the state due to SDL_atof
[asyncify] SDL_MouseRelativeSpeedScaleChanged can change the state due to SDL_atof
[asyncify] double\20std::__2::__num_get_float<double>\28char\20const*\2c\20char\20const*\2c\20unsigned\20int&\29 can change the state due to double\20std::__2::__do_strtod\5babi:v15006\5d<double>\28char\20const*\2c\20char**\29
[asyncify] std::__2::stod\28std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\2c\20unsigned\20long*\29 can change the state due to double\20std::__2::\28anonymous\20namespace\29::as_float<double\2c\20std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>>\28std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\2c\20std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\2c\20unsigned\20long*\29
[asyncify] long\20double\20std::__2::__num_get_float<long\20double>\28char\20const*\2c\20char\20const*\2c\20unsigned\20int&\29 can change the state due to long\20double\20std::__2::__do_strtod\5babi:v15006\5d<long\20double>\28char\20const*\2c\20char**\29
[asyncify] std::__2::stold\28std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\2c\20unsigned\20long*\29 can change the state due to long\20double\20std::__2::\28anonymous\20namespace\29::as_float<long\20double\2c\20std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>>\28std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\2c\20std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\2c\20unsigned\20long*\29
[asyncify] std::__2::stof\28std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>\20const&\2c\20unsigned\20long*\29 can change the state due to float\20std::__2::\28anonymous\20namespace\29::as_float<float\2c\20std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>>\28std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\2c\20std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>\20const&\2c\20unsigned\20long*\29
[asyncify] std::__2::stod\28std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>\20const&\2c\20unsigned\20long*\29 can change the state due to double\20std::__2::\28anonymous\20namespace\29::as_float<double\2c\20std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>>\28std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\2c\20std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>\20const&\2c\20unsigned\20long*\29
[asyncify] std::__2::stold\28std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>\20const&\2c\20unsigned\20long*\29 can change the state due to long\20double\20std::__2::\28anonymous\20namespace\29::as_float<long\20double\2c\20std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>>\28std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\2c\20std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>\20const&\2c\20unsigned\20long*\29
[asyncify] std::__2::stoull\28std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>\20const&\2c\20unsigned\20long*\2c\20int\29 can change the state due to unsigned\20long\20long\20std::__2::\28anonymous\20namespace\29::as_integer<unsigned\20long\20long\2c\20std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>>\28std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\2c\20std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>\20const&\2c\20unsigned\20long*\2c\20int\29
[asyncify] std::__2::stoll\28std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>\20const&\2c\20unsigned\20long*\2c\20int\29 can change the state due to long\20long\20std::__2::\28anonymous\20namespace\29::as_integer<long\20long\2c\20std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>>\28std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\2c\20std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>\20const&\2c\20unsigned\20long*\2c\20int\29
[asyncify] std::__2::stoul\28std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>\20const&\2c\20unsigned\20long*\2c\20int\29 can change the state due to unsigned\20long\20std::__2::\28anonymous\20namespace\29::as_integer<unsigned\20long\2c\20std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>>\28std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\2c\20std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>\20const&\2c\20unsigned\20long*\2c\20int\29
[asyncify] std::__2::stol\28std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>\20const&\2c\20unsigned\20long*\2c\20int\29 can change the state due to long\20std::__2::\28anonymous\20namespace\29::as_integer<long\2c\20std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>>\28std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\2c\20std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>\20const&\2c\20unsigned\20long*\2c\20int\29
[asyncify] SDL_UnloadObject can change the state due to dlclose
[asyncify] dlsym can change the state due to __dlsym
[asyncify] __crypt_r can change the state due to __crypt_sha256
[asyncify] std::__2::__fs::filesystem::detail::\28anonymous\20namespace\29::posix_lstat\28std::__2::__fs::filesystem::path\20const&\2c\20stat&\2c\20std::__2::error_code*\29 can change the state due to std::__2::__fs::filesystem::detail::\28anonymous\20namespace\29::create_file_status\28std::__2::error_code&\2c\20std::__2::__fs::filesystem::path\20const&\2c\20stat\20const&\2c\20std::__2::error_code*\29
[asyncify] std::__2::__fs::filesystem::detail::\28anonymous\20namespace\29::posix_stat\28std::__2::__fs::filesystem::path\20const&\2c\20stat&\2c\20std::__2::error_code*\29 can change the state due to std::__2::__fs::filesystem::detail::\28anonymous\20namespace\29::create_file_status\28std::__2::error_code&\2c\20std::__2::__fs::filesystem::path\20const&\2c\20stat\20const&\2c\20std::__2::error_code*\29
[asyncify] std::__2::__fs::filesystem::detail::\28anonymous\20namespace\29::FileDescriptor::refresh_status\28std::__2::error_code&\29 can change the state due to std::__2::__fs::filesystem::detail::\28anonymous\20namespace\29::create_file_status\28std::__2::error_code&\2c\20std::__2::__fs::filesystem::path\20const&\2c\20stat\20const&\2c\20std::__2::error_code*\29
[asyncify] std::__2::stol\28std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\2c\20unsigned\20long*\2c\20int\29 can change the state due to long\20std::__2::\28anonymous\20namespace\29::as_integer<long\2c\20std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>>\28std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\2c\20std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\2c\20unsigned\20long*\2c\20int\29
[asyncify] std::__2::stoul\28std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\2c\20unsigned\20long*\2c\20int\29 can change the state due to unsigned\20long\20std::__2::\28anonymous\20namespace\29::as_integer<unsigned\20long\2c\20std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>>\28std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\2c\20std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\2c\20unsigned\20long*\2c\20int\29
[asyncify] std::__2::stoll\28std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\2c\20unsigned\20long*\2c\20int\29 can change the state due to long\20long\20std::__2::\28anonymous\20namespace\29::as_integer<long\20long\2c\20std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>>\28std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\2c\20std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\2c\20unsigned\20long*\2c\20int\29
[asyncify] std::__2::stoull\28std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\2c\20unsigned\20long*\2c\20int\29 can change the state due to unsigned\20long\20long\20std::__2::\28anonymous\20namespace\29::as_integer<unsigned\20long\20long\2c\20std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>>\28std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\2c\20std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\2c\20unsigned\20long*\2c\20int\29
[asyncify] std::__2::locale::__imp::make_global\28\29 can change the state due to std::__2::locale::classic\28\29
[asyncify] std::__2::basic_iostream<char\2c\20std::__2::char_traits<char>>::operator=\28std::__2::basic_iostream<char\2c\20std::__2::char_traits<char>>&&\29 can change the state due to std::__2::basic_iostream<char\2c\20std::__2::char_traits<char>>::swap\5babi:v15006\5d\28std::__2::basic_iostream<char\2c\20std::__2::char_traits<char>>&\29
[asyncify] std::__2::collate<char>::do_transform\28char\20const*\2c\20char\20const*\29\20const can change the state due to std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::basic_string\5babi:v15006\5d<char\20const*\2c\20void>\28char\20const*\2c\20char\20const*\29
[asyncify] std::__2::collate_byname<char>::do_compare\28char\20const*\2c\20char\20const*\2c\20char\20const*\2c\20char\20const*\29\20const can change the state due to std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::basic_string\5babi:v15006\5d<char\20const*\2c\20void>\28char\20const*\2c\20char\20const*\29
[asyncify] std::__2::collate_byname<char>::do_transform\28char\20const*\2c\20char\20const*\29\20const can change the state due to std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::basic_string\5babi:v15006\5d<char\20const*\2c\20void>\28char\20const*\2c\20char\20const*\29
[asyncify] std::__2::basic_stringbuf<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::str\28\29\20const can change the state due to std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::basic_string\5babi:v15006\5d<char*\2c\20void>\28char*\2c\20char*\2c\20std::__2::allocator<char>\20const&\29
[asyncify] std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20std::__2::\28anonymous\20namespace\29::i_to_string<std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\2c\20int>\28int\29 can change the state due to std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::basic_string\5babi:v15006\5d<char*\2c\20void>\28char*\2c\20char*\29
[asyncify] std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20std::__2::\28anonymous\20namespace\29::i_to_string<std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\2c\20long>\28long\29 can change the state due to std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::basic_string\5babi:v15006\5d<char*\2c\20void>\28char*\2c\20char*\29
[asyncify] std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20std::__2::\28anonymous\20namespace\29::i_to_string<std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\2c\20long\20long>\28long\20long\29 can change the state due to std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::basic_string\5babi:v15006\5d<char*\2c\20void>\28char*\2c\20char*\29
[asyncify] std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20std::__2::\28anonymous\20namespace\29::i_to_string<std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\2c\20unsigned\20int>\28unsigned\20int\29 can change the state due to std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::basic_string\5babi:v15006\5d<char*\2c\20void>\28char*\2c\20char*\29
[asyncify] std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20std::__2::\28anonymous\20namespace\29::i_to_string<std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\2c\20unsigned\20long>\28unsigned\20long\29 can change the state due to std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::basic_string\5babi:v15006\5d<char*\2c\20void>\28char*\2c\20char*\29
[asyncify] std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20std::__2::\28anonymous\20namespace\29::i_to_string<std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\2c\20unsigned\20long\20long>\28unsigned\20long\20long\29 can change the state due to std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::basic_string\5babi:v15006\5d<char*\2c\20void>\28char*\2c\20char*\29
[asyncify] std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::replace\28unsigned\20long\2c\20unsigned\20long\2c\20char\20const*\29 can change the state due to std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::replace\28unsigned\20long\2c\20unsigned\20long\2c\20char\20const*\2c\20unsigned\20long\29
[asyncify] std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::replace\28unsigned\20long\2c\20unsigned\20long\2c\20std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\2c\20unsigned\20long\2c\20unsigned\20long\29 can change the state due to std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::replace\28unsigned\20long\2c\20unsigned\20long\2c\20char\20const*\2c\20unsigned\20long\29
[asyncify] std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::insert\28unsigned\20long\2c\20char\20const*\29 can change the state due to std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::insert\28unsigned\20long\2c\20char\20const*\2c\20unsigned\20long\29
[asyncify] std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::insert\28unsigned\20long\2c\20std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\2c\20unsigned\20long\2c\20unsigned\20long\29 can change the state due to std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::insert\28unsigned\20long\2c\20char\20const*\2c\20unsigned\20long\29
[asyncify] std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::assign\28char\20const*\2c\20unsigned\20long\29 can change the state due to std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::__assign_external\28char\20const*\2c\20unsigned\20long\29
[asyncify] std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::__assign_external\28char\20const*\29 can change the state due to std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::__assign_external\28char\20const*\2c\20unsigned\20long\29
[asyncify] std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::append\5babi:v15006\5d\28std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\29 can change the state due to std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::append\28char\20const*\2c\20unsigned\20long\29
[asyncify] std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::append\28std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\2c\20unsigned\20long\2c\20unsigned\20long\29 can change the state due to std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::append\28char\20const*\2c\20unsigned\20long\29
[asyncify] std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::append\28char\20const*\29 can change the state due to std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::append\28char\20const*\2c\20unsigned\20long\29
[asyncify] std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::operator=\28std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\29 can change the state due to std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>&\20std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::__assign_no_alias<false>\28char\20const*\2c\20unsigned\20long\29
[asyncify] std::__2::enable_if<__is_cpp17_forward_iterator<char\20const*>::value\2c\20void>::type\20std::__2::__fs::filesystem::_PathCVT<char>::__append_range\5babi:v15006\5d<char\20const*>\28std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>&\2c\20char\20const*\2c\20char\20const*\29 can change the state due to std::__2::enable_if<__is_cpp17_forward_iterator<char\20const*>::value\2c\20std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>&>::type\20std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::append\5babi:v15006\5d<char\20const*>\28char\20const*\2c\20char\20const*\29
[asyncify] std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::__resize_default_init\5babi:v15006\5d\28unsigned\20long\29 can change the state due to std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::__append_default_init\5babi:v15006\5d\28unsigned\20long\29
[asyncify] void\20std::__2::__init_pat<char>\28std::__2::money_base::pattern&\2c\20std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>&\2c\20bool\2c\20char\2c\20char\2c\20char\2c\20char\29 can change the state due to std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::insert\28unsigned\20long\2c\20unsigned\20long\2c\20char\29
[asyncify] std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::operator+=\5babi:v15006\5d\28char\29 can change the state due to std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::push_back\28char\29
[asyncify] std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::resize\28unsigned\20long\2c\20char\29 can change the state due to std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::append\28unsigned\20long\2c\20char\29
[asyncify] std::__2::__fs::filesystem::detail::\28anonymous\20namespace\29::ErrorHandler<void>::report\28std::__2::error_code\20const&\29\20const can change the state due to std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::basic_string\5babi:v15006\5d<std::nullptr_t>\28char\20const*\29
[asyncify] std::__2::__future_error_category::message\28int\29\20const can change the state due to std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::basic_string\5babi:v15006\5d<std::nullptr_t>\28char\20const*\29
[asyncify] std::__2::__libcpp_debug_info::what\28\29\20const can change the state due to std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::basic_string\5babi:v15006\5d<std::nullptr_t>\28char\20const*\29
[asyncify] std::__2::codecvt<wchar_t\2c\20char\2c\20__mbstate_t>::codecvt\28char\20const*\2c\20unsigned\20long\29 can change the state due to std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::basic_string\5babi:v15006\5d<std::nullptr_t>\28char\20const*\29
[asyncify] std::__2::moneypunct_byname<char\2c\20false>::init\28char\20const*\29 can change the state due to std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::basic_string\5babi:v15006\5d<std::nullptr_t>\28char\20const*\29
[asyncify] std::__2::moneypunct_byname<char\2c\20true>::init\28char\20const*\29 can change the state due to std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::basic_string\5babi:v15006\5d<std::nullptr_t>\28char\20const*\29
[asyncify] std::__2::moneypunct_byname<wchar_t\2c\20false>::init\28char\20const*\29 can change the state due to std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::basic_string\5babi:v15006\5d<std::nullptr_t>\28char\20const*\29
[asyncify] std::__2::moneypunct_byname<wchar_t\2c\20true>::init\28char\20const*\29 can change the state due to std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::basic_string\5babi:v15006\5d<std::nullptr_t>\28char\20const*\29
[asyncify] std::__2::collate_byname<char>::collate_byname\28char\20const*\2c\20unsigned\20long\29 can change the state due to std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::basic_string\5babi:v15006\5d<std::nullptr_t>\28char\20const*\29
[asyncify] std::__2::collate_byname<wchar_t>::collate_byname\28char\20const*\2c\20unsigned\20long\29 can change the state due to std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::basic_string\5babi:v15006\5d<std::nullptr_t>\28char\20const*\29
[asyncify] std::__2::ctype_byname<char>::ctype_byname\28char\20const*\2c\20unsigned\20long\29 can change the state due to std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::basic_string\5babi:v15006\5d<std::nullptr_t>\28char\20const*\29
[asyncify] std::__2::ctype_byname<wchar_t>::ctype_byname\28char\20const*\2c\20unsigned\20long\29 can change the state due to std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::basic_string\5babi:v15006\5d<std::nullptr_t>\28char\20const*\29
[asyncify] std::__2::numpunct<char>::do_truename\28\29\20const can change the state due to std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::basic_string\5babi:v15006\5d<std::nullptr_t>\28char\20const*\29
[asyncify] std::__2::numpunct<char>::do_falsename\28\29\20const can change the state due to std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::basic_string\5babi:v15006\5d<std::nullptr_t>\28char\20const*\29
[asyncify] std::__2::numpunct_byname<char>::__init\28char\20const*\29 can change the state due to std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::basic_string\5babi:v15006\5d<std::nullptr_t>\28char\20const*\29
[asyncify] std::__2::numpunct_byname<wchar_t>::__init\28char\20const*\29 can change the state due to std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::basic_string\5babi:v15006\5d<std::nullptr_t>\28char\20const*\29
[asyncify] std::__2::__time_get_c_storage<char>::__x\28\29\20const can change the state due to std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::basic_string\5babi:v15006\5d<std::nullptr_t>\28char\20const*\29
[asyncify] std::__2::__time_get_c_storage<char>::__X\28\29\20const can change the state due to std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::basic_string\5babi:v15006\5d<std::nullptr_t>\28char\20const*\29
[asyncify] std::__2::__time_get_c_storage<char>::__c\28\29\20const can change the state due to std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::basic_string\5babi:v15006\5d<std::nullptr_t>\28char\20const*\29
[asyncify] std::__2::__time_get_c_storage<char>::__r\28\29\20const can change the state due to std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::basic_string\5babi:v15006\5d<std::nullptr_t>\28char\20const*\29
[asyncify] std::__2::__time_get::__time_get\28char\20const*\29 can change the state due to std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::basic_string\5babi:v15006\5d<std::nullptr_t>\28char\20const*\29
[asyncify] std::__2::__time_put::__time_put\28char\20const*\29 can change the state due to std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::basic_string\5babi:v15006\5d<std::nullptr_t>\28char\20const*\29
[asyncify] std::__2::__fs::filesystem::detail::\28anonymous\20namespace\29::ErrorHandler<std::__2::__fs::filesystem::path>::report\28std::__2::error_code\20const&\29\20const can change the state due to std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::basic_string\5babi:v15006\5d<std::nullptr_t>\28char\20const*\29
[asyncify] std::__2::__fs::filesystem::detail::\28anonymous\20namespace\29::ErrorHandler<void>::report\28std::__2::error_code\20const&\29\20const.1 can change the state due to std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::basic_string\5babi:v15006\5d<std::nullptr_t>\28char\20const*\29
[asyncify] std::__2::__fs::filesystem::detail::\28anonymous\20namespace\29::ErrorHandler<bool>::report\28std::__2::error_code\20const&\29\20const can change the state due to std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::basic_string\5babi:v15006\5d<std::nullptr_t>\28char\20const*\29
[asyncify] std::__2::__fs::filesystem::detail::\28anonymous\20namespace\29::ErrorHandler<unsigned\20long\20long>::report\28std::__2::error_code\20const&\29\20const can change the state due to std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::basic_string\5babi:v15006\5d<std::nullptr_t>\28char\20const*\29
[asyncify] std::__2::__fs::filesystem::detail::\28anonymous\20namespace\29::ErrorHandler<std::__2::chrono::time_point<std::__2::__fs::filesystem::_FilesystemClock\2c\20std::__2::chrono::duration<__int128\2c\20std::__2::ratio<1ll\2c\201000000000ll>>>>::report\28std::__2::error_code\20const&\29\20const can change the state due to std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::basic_string\5babi:v15006\5d<std::nullptr_t>\28char\20const*\29
[asyncify] std::__2::__fs::filesystem::path::filename\5babi:v15006\5d\28\29\20const can change the state due to std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::basic_string<std::__2::basic_string_view<char\2c\20std::__2::char_traits<char>>\2c\20void>\28std::__2::basic_string_view<char\2c\20std::__2::char_traits<char>>\20const&\29
[asyncify] std::__2::__fs::filesystem::path::parent_path\5babi:v15006\5d\28\29\20const can change the state due to std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::basic_string<std::__2::basic_string_view<char\2c\20std::__2::char_traits<char>>\2c\20void>\28std::__2::basic_string_view<char\2c\20std::__2::char_traits<char>>\20const&\29
[asyncify] std::__2::__fs::filesystem::path::extension\5babi:v15006\5d\28\29\20const can change the state due to std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::basic_string<std::__2::basic_string_view<char\2c\20std::__2::char_traits<char>>\2c\20void>\28std::__2::basic_string_view<char\2c\20std::__2::char_traits<char>>\20const&\29
[asyncify] std::__2::__fs::filesystem::path::__assign_view\5babi:v15006\5d\28std::__2::basic_string_view<char\2c\20std::__2::char_traits<char>>\20const&\29 can change the state due to std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::basic_string<std::__2::basic_string_view<char\2c\20std::__2::char_traits<char>>\2c\20void>\28std::__2::basic_string_view<char\2c\20std::__2::char_traits<char>>\20const&\29
[asyncify] std::__2::__fs::filesystem::path::path\5babi:v15006\5d\28std::__2::__fs::filesystem::path\20const&\29 can change the state due to std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::basic_string\28std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\29
[asyncify] std::__2::moneypunct_byname<char\2c\20false>::do_grouping\28\29\20const can change the state due to std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::basic_string\28std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\29
[asyncify] std::__2::moneypunct_byname<char\2c\20false>::do_curr_symbol\28\29\20const can change the state due to std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::basic_string\28std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\29
[asyncify] std::__2::moneypunct_byname<char\2c\20false>::do_positive_sign\28\29\20const can change the state due to std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::basic_string\28std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\29
[asyncify] std::__2::moneypunct_byname<char\2c\20false>::do_negative_sign\28\29\20const can change the state due to std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::basic_string\28std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\29
[asyncify] std::__2::moneypunct_byname<char\2c\20true>::do_grouping\28\29\20const can change the state due to std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::basic_string\28std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\29
[asyncify] std::__2::moneypunct_byname<char\2c\20true>::do_curr_symbol\28\29\20const can change the state due to std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::basic_string\28std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\29
[asyncify] std::__2::moneypunct_byname<char\2c\20true>::do_positive_sign\28\29\20const can change the state due to std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::basic_string\28std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\29
[asyncify] std::__2::moneypunct_byname<char\2c\20true>::do_negative_sign\28\29\20const can change the state due to std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::basic_string\28std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\29
[asyncify] std::__2::moneypunct_byname<wchar_t\2c\20false>::do_grouping\28\29\20const can change the state due to std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::basic_string\28std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\29
[asyncify] std::__2::moneypunct_byname<wchar_t\2c\20true>::do_grouping\28\29\20const can change the state due to std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::basic_string\28std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\29
[asyncify] std::__2::messages<char>::do_get\28long\2c\20int\2c\20int\2c\20std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\29\20const can change the state due to std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::basic_string\28std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\29
[asyncify] std::__2::locale::__imp::__imp\28std::__2::locale::__imp\20const&\29 can change the state due to std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::basic_string\28std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\29
[asyncify] std::__2::locale::name\28\29\20const can change the state due to std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::basic_string\28std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\29
[asyncify] std::__2::numpunct<char>::do_grouping\28\29\20const can change the state due to std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::basic_string\28std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\29
[asyncify] std::__2::numpunct<wchar_t>::do_grouping\28\29\20const can change the state due to std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::basic_string\28std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\29
[asyncify] std::__2::__fs::filesystem::path::__reserve\5babi:v15006\5d\28unsigned\20long\29 can change the state due to std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::reserve\28unsigned\20long\29
[asyncify] std::__2::__fs::filesystem::path::lexically_normal\28\29\20const can change the state due to std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::reserve\28unsigned\20long\29
[asyncify] std::__2::moneypunct<char\2c\20false>::do_negative_sign\28\29\20const can change the state due to std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::basic_string\5babi:v15006\5d\28unsigned\20long\2c\20char\29
[asyncify] std::__2::moneypunct<char\2c\20true>::do_negative_sign\28\29\20const can change the state due to std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::basic_string\5babi:v15006\5d\28unsigned\20long\2c\20char\29
[asyncify] std::__2::collate_byname<char>::collate_byname\28std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\2c\20unsigned\20long\29 can change the state due to std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20std::__2::operator+<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\28char\20const*\2c\20std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\29
[asyncify] std::__2::collate_byname<wchar_t>::collate_byname\28std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\2c\20unsigned\20long\29 can change the state due to std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20std::__2::operator+<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\28char\20const*\2c\20std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\29
[asyncify] std::__2::ctype_byname<char>::ctype_byname\28std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\2c\20unsigned\20long\29 can change the state due to std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20std::__2::operator+<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\28char\20const*\2c\20std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\29
[asyncify] std::__2::ctype_byname<wchar_t>::ctype_byname\28std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\2c\20unsigned\20long\29 can change the state due to std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20std::__2::operator+<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\28char\20const*\2c\20std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\29
[asyncify] std::__2::__time_get::__time_get\28std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\29 can change the state due to std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20std::__2::operator+<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\28char\20const*\2c\20std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\29
[asyncify] std::__2::__time_put::__time_put\28std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\29 can change the state due to std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20std::__2::operator+<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\28char\20const*\2c\20std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\29
[asyncify] std::__2::random_device::random_device\28std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\29 can change the state due to std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20std::__2::operator+<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\28char\20const*\2c\20std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\29
[asyncify] std::__2::shared_ptr<std::__2::__fs::filesystem::__dir_stream>\20std::__2::make_shared\5babi:v15006\5d<std::__2::__fs::filesystem::__dir_stream\2c\20std::__2::__fs::filesystem::path\20const&\2c\20std::__2::__fs::filesystem::directory_options&\2c\20std::__2::error_code&\2c\20void>\28std::__2::__fs::filesystem::path\20const&\2c\20std::__2::__fs::filesystem::directory_options&\2c\20std::__2::error_code&\29 can change the state due to std::__2::shared_ptr<std::__2::__fs::filesystem::__dir_stream>\20std::__2::allocate_shared\5babi:v15006\5d<std::__2::__fs::filesystem::__dir_stream\2c\20std::__2::allocator<std::__2::__fs::filesystem::__dir_stream>\2c\20std::__2::__fs::filesystem::path\20const&\2c\20std::__2::__fs::filesystem::directory_options&\2c\20std::__2::error_code&\2c\20void>\28std::__2::allocator<std::__2::__fs::filesystem::__dir_stream>\20const&\2c\20std::__2::__fs::filesystem::path\20const&\2c\20std::__2::__fs::filesystem::directory_options&\2c\20std::__2::error_code&\29
[asyncify] std::__2::shared_ptr<std::__2::__fs::filesystem::recursive_directory_iterator::__shared_imp>\20std::__2::make_shared\5babi:v15006\5d<std::__2::__fs::filesystem::recursive_directory_iterator::__shared_imp\2c\20void>\28\29 can change the state due to std::__2::shared_ptr<std::__2::__fs::filesystem::recursive_directory_iterator::__shared_imp>\20std::__2::allocate_shared\5babi:v15006\5d<std::__2::__fs::filesystem::recursive_directory_iterator::__shared_imp\2c\20std::__2::allocator<std::__2::__fs::filesystem::recursive_directory_iterator::__shared_imp>\2c\20void>\28std::__2::allocator<std::__2::__fs::filesystem::recursive_directory_iterator::__shared_imp>\20const&\29
[asyncify] std::__2::stack<std::__2::__fs::filesystem::__dir_stream\2c\20std::__2::deque<std::__2::__fs::filesystem::__dir_stream\2c\20std::__2::allocator<std::__2::__fs::filesystem::__dir_stream>>>::push\5babi:v15006\5d\28std::__2::__fs::filesystem::__dir_stream&&\29 can change the state due to std::__2::deque<std::__2::__fs::filesystem::__dir_stream\2c\20std::__2::allocator<std::__2::__fs::filesystem::__dir_stream>>::push_back\28std::__2::__fs::filesystem::__dir_stream&&\29
[asyncify] std::__2::collate<wchar_t>::do_transform\28wchar_t\20const*\2c\20wchar_t\20const*\29\20const can change the state due to std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>::basic_string\5babi:v15006\5d<wchar_t\20const*\2c\20void>\28wchar_t\20const*\2c\20wchar_t\20const*\29
[asyncify] std::__2::collate_byname<wchar_t>::do_compare\28wchar_t\20const*\2c\20wchar_t\20const*\2c\20wchar_t\20const*\2c\20wchar_t\20const*\29\20const can change the state due to std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>::basic_string\5babi:v15006\5d<wchar_t\20const*\2c\20void>\28wchar_t\20const*\2c\20wchar_t\20const*\29
[asyncify] std::__2::collate_byname<wchar_t>::do_transform\28wchar_t\20const*\2c\20wchar_t\20const*\29\20const can change the state due to std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>::basic_string\5babi:v15006\5d<wchar_t\20const*\2c\20void>\28wchar_t\20const*\2c\20wchar_t\20const*\29
[asyncify] std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>::replace\28unsigned\20long\2c\20unsigned\20long\2c\20wchar_t\20const*\29 can change the state due to std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>::replace\28unsigned\20long\2c\20unsigned\20long\2c\20wchar_t\20const*\2c\20unsigned\20long\29
[asyncify] std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>::replace\28unsigned\20long\2c\20unsigned\20long\2c\20std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>\20const&\2c\20unsigned\20long\2c\20unsigned\20long\29 can change the state due to std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>::replace\28unsigned\20long\2c\20unsigned\20long\2c\20wchar_t\20const*\2c\20unsigned\20long\29
[asyncify] std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>::insert\28unsigned\20long\2c\20wchar_t\20const*\29 can change the state due to std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>::insert\28unsigned\20long\2c\20wchar_t\20const*\2c\20unsigned\20long\29
[asyncify] std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>::insert\28unsigned\20long\2c\20std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>\20const&\2c\20unsigned\20long\2c\20unsigned\20long\29 can change the state due to std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>::insert\28unsigned\20long\2c\20wchar_t\20const*\2c\20unsigned\20long\29
[asyncify] std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>::assign\28wchar_t\20const*\2c\20unsigned\20long\29 can change the state due to std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>::__assign_external\28wchar_t\20const*\2c\20unsigned\20long\29
[asyncify] std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>::__assign_external\28wchar_t\20const*\29 can change the state due to std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>::__assign_external\28wchar_t\20const*\2c\20unsigned\20long\29
[asyncify] std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>::append\28std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>\20const&\2c\20unsigned\20long\2c\20unsigned\20long\29 can change the state due to std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>::append\28wchar_t\20const*\2c\20unsigned\20long\29
[asyncify] std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>::append\28wchar_t\20const*\29 can change the state due to std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>::append\28wchar_t\20const*\2c\20unsigned\20long\29
[asyncify] void\20std::__2::__init_pat<wchar_t>\28std::__2::money_base::pattern&\2c\20std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>&\2c\20bool\2c\20char\2c\20char\2c\20char\2c\20wchar_t\29 can change the state due to std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>::insert\28unsigned\20long\2c\20unsigned\20long\2c\20wchar_t\29
[asyncify] std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>::resize\28unsigned\20long\2c\20wchar_t\29 can change the state due to std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>::append\28unsigned\20long\2c\20wchar_t\29
[asyncify] std::__2::numpunct<wchar_t>::do_truename\28\29\20const can change the state due to std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>::basic_string\5babi:v15006\5d<std::nullptr_t>\28wchar_t\20const*\29
[asyncify] std::__2::numpunct<wchar_t>::do_falsename\28\29\20const can change the state due to std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>::basic_string\5babi:v15006\5d<std::nullptr_t>\28wchar_t\20const*\29
[asyncify] std::__2::__time_get_c_storage<wchar_t>::__x\28\29\20const can change the state due to std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>::basic_string\5babi:v15006\5d<std::nullptr_t>\28wchar_t\20const*\29
[asyncify] std::__2::__time_get_c_storage<wchar_t>::__X\28\29\20const can change the state due to std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>::basic_string\5babi:v15006\5d<std::nullptr_t>\28wchar_t\20const*\29
[asyncify] std::__2::__time_get_c_storage<wchar_t>::__c\28\29\20const can change the state due to std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>::basic_string\5babi:v15006\5d<std::nullptr_t>\28wchar_t\20const*\29
[asyncify] std::__2::__time_get_c_storage<wchar_t>::__r\28\29\20const can change the state due to std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>::basic_string\5babi:v15006\5d<std::nullptr_t>\28wchar_t\20const*\29
[asyncify] std::__2::moneypunct_byname<wchar_t\2c\20false>::do_curr_symbol\28\29\20const can change the state due to std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>::basic_string\28std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>\20const&\29
[asyncify] std::__2::moneypunct_byname<wchar_t\2c\20false>::do_positive_sign\28\29\20const can change the state due to std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>::basic_string\28std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>\20const&\29
[asyncify] std::__2::moneypunct_byname<wchar_t\2c\20false>::do_negative_sign\28\29\20const can change the state due to std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>::basic_string\28std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>\20const&\29
[asyncify] std::__2::moneypunct_byname<wchar_t\2c\20true>::do_curr_symbol\28\29\20const can change the state due to std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>::basic_string\28std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>\20const&\29
[asyncify] std::__2::moneypunct_byname<wchar_t\2c\20true>::do_positive_sign\28\29\20const can change the state due to std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>::basic_string\28std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>\20const&\29
[asyncify] std::__2::moneypunct_byname<wchar_t\2c\20true>::do_negative_sign\28\29\20const can change the state due to std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>::basic_string\28std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>\20const&\29
[asyncify] std::__2::messages<wchar_t>::do_get\28long\2c\20int\2c\20int\2c\20std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>\20const&\29\20const can change the state due to std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>::basic_string\28std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>\20const&\29
[asyncify] std::__2::moneypunct<wchar_t\2c\20false>::do_negative_sign\28\29\20const can change the state due to std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>::basic_string\5babi:v15006\5d\28unsigned\20long\2c\20wchar_t\29
[asyncify] std::__2::moneypunct<wchar_t\2c\20true>::do_negative_sign\28\29\20const can change the state due to std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>::basic_string\5babi:v15006\5d\28unsigned\20long\2c\20wchar_t\29
[asyncify] std::__2::\28anonymous\20namespace\29::initial_string<std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>>::operator\28\29\28\29\20const can change the state due to std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>::basic_string\5babi:v15006\5d\28unsigned\20long\2c\20wchar_t\29
[asyncify] std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>\20std::__2::\28anonymous\20namespace\29::i_to_string<std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>\2c\20int>\28int\29 can change the state due to std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>::basic_string\5babi:v15006\5d<char*\2c\20void>\28char*\2c\20char*\29
[asyncify] std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>\20std::__2::\28anonymous\20namespace\29::i_to_string<std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>\2c\20long>\28long\29 can change the state due to std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>::basic_string\5babi:v15006\5d<char*\2c\20void>\28char*\2c\20char*\29
[asyncify] std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>\20std::__2::\28anonymous\20namespace\29::i_to_string<std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>\2c\20long\20long>\28long\20long\29 can change the state due to std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>::basic_string\5babi:v15006\5d<char*\2c\20void>\28char*\2c\20char*\29
[asyncify] std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>\20std::__2::\28anonymous\20namespace\29::i_to_string<std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>\2c\20unsigned\20int>\28unsigned\20int\29 can change the state due to std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>::basic_string\5babi:v15006\5d<char*\2c\20void>\28char*\2c\20char*\29
[asyncify] std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>\20std::__2::\28anonymous\20namespace\29::i_to_string<std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>\2c\20unsigned\20long>\28unsigned\20long\29 can change the state due to std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>::basic_string\5babi:v15006\5d<char*\2c\20void>\28char*\2c\20char*\29
[asyncify] std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>\20std::__2::\28anonymous\20namespace\29::i_to_string<std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>\2c\20unsigned\20long\20long>\28unsigned\20long\20long\29 can change the state due to std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>::basic_string\5babi:v15006\5d<char*\2c\20void>\28char*\2c\20char*\29
[asyncify] std::__2::vector<std::__2::locale::facet*\2c\20std::__2::__sso_allocator<std::__2::locale::facet*\2c\2030ul>>::vector\28unsigned\20long\29 can change the state due to std::__2::vector<std::__2::locale::facet*\2c\20std::__2::__sso_allocator<std::__2::locale::facet*\2c\2030ul>>::__vallocate\5babi:v15006\5d\28unsigned\20long\29
[asyncify] std::__2::enable_if<__is_cpp17_forward_iterator<std::__2::locale::facet**>::value\20&&\20is_constructible<std::__2::locale::facet*\2c\20std::__2::iterator_traits<std::__2::locale::facet**>::reference>::value\2c\20void>::type\20std::__2::vector<std::__2::locale::facet*\2c\20std::__2::__sso_allocator<std::__2::locale::facet*\2c\2030ul>>::assign<std::__2::locale::facet**>\28std::__2::locale::facet**\2c\20std::__2::locale::facet**\29 can change the state due to std::__2::vector<std::__2::locale::facet*\2c\20std::__2::__sso_allocator<std::__2::locale::facet*\2c\2030ul>>::__vallocate\5babi:v15006\5d\28unsigned\20long\29
[asyncify] std::__2::vector<std::__2::locale::facet*\2c\20std::__2::__sso_allocator<std::__2::locale::facet*\2c\2030ul>>::__append\28unsigned\20long\29 can change the state due to std::__2::__split_buffer<std::__2::locale::facet*\2c\20std::__2::__sso_allocator<std::__2::locale::facet*\2c\2030ul>&>::__split_buffer\28unsigned\20long\2c\20unsigned\20long\2c\20std::__2::__sso_allocator<std::__2::locale::facet*\2c\2030ul>&\29
[asyncify] std::__2::vector<std::__2::basic_string_view<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::allocator<std::__2::basic_string_view<char\2c\20std::__2::char_traits<char>>>>::push_back\5babi:v15006\5d\28std::__2::basic_string_view<char\2c\20std::__2::char_traits<char>>&&\29 can change the state due to void\20std::__2::vector<std::__2::basic_string_view<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::allocator<std::__2::basic_string_view<char\2c\20std::__2::char_traits<char>>>>::__push_back_slow_path<std::__2::basic_string_view<char\2c\20std::__2::char_traits<char>>>\28std::__2::basic_string_view<char\2c\20std::__2::char_traits<char>>&&\29
[asyncify] std::__2::pair<std::__2::basic_string_view<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::__fs::filesystem::PathPartKind>&\20std::__2::vector<std::__2::pair<std::__2::basic_string_view<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::__fs::filesystem::PathPartKind>\2c\20std::__2::allocator<std::__2::pair<std::__2::basic_string_view<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::__fs::filesystem::PathPartKind>>>::emplace_back<std::__2::basic_string_view<char\2c\20std::__2::char_traits<char>>&\2c\20std::__2::__fs::filesystem::PathPartKind&>\28std::__2::basic_string_view<char\2c\20std::__2::char_traits<char>>&\2c\20std::__2::__fs::filesystem::PathPartKind&\29 can change the state due to void\20std::__2::vector<std::__2::pair<std::__2::basic_string_view<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::__fs::filesystem::PathPartKind>\2c\20std::__2::allocator<std::__2::pair<std::__2::basic_string_view<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::__fs::filesystem::PathPartKind>>>::__emplace_back_slow_path<std::__2::basic_string_view<char\2c\20std::__2::char_traits<char>>&\2c\20std::__2::__fs::filesystem::PathPartKind&>\28std::__2::basic_string_view<char\2c\20std::__2::char_traits<char>>&\2c\20std::__2::__fs::filesystem::PathPartKind&\29
[asyncify] std::__2::__thread_struct::notify_all_at_thread_exit\28std::__2::condition_variable*\2c\20std::__2::mutex*\29 can change the state due to std::__2::__thread_struct_imp::notify_all_at_thread_exit\28std::__2::condition_variable*\2c\20std::__2::mutex*\29
[asyncify] std::__2::__thread_struct::__make_ready_at_thread_exit\28std::__2::__assoc_sub_state*\29 can change the state due to std::__2::__thread_struct_imp::__make_ready_at_thread_exit\28std::__2::__assoc_sub_state*\29
[asyncify] std::__2::to_wstring\28float\29 can change the state due to std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>\20std::__2::\28anonymous\20namespace\29::as_string<std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>\2c\20int\20\28*\29\28wchar_t*\2c\20unsigned\20long\2c\20wchar_t\20const*\2c\20...\29\2c\20float>\28int\20\28*\29\28wchar_t*\2c\20unsigned\20long\2c\20wchar_t\20const*\2c\20...\29\2c\20std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>\2c\20std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>::value_type\20const*\2c\20float\29
[asyncify] std::__2::to_wstring\28double\29 can change the state due to std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>\20std::__2::\28anonymous\20namespace\29::as_string<std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>\2c\20int\20\28*\29\28wchar_t*\2c\20unsigned\20long\2c\20wchar_t\20const*\2c\20...\29\2c\20double>\28int\20\28*\29\28wchar_t*\2c\20unsigned\20long\2c\20wchar_t\20const*\2c\20...\29\2c\20std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>\2c\20std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>::value_type\20const*\2c\20double\29
[asyncify] std::__2::to_wstring\28long\20double\29 can change the state due to std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>\20std::__2::\28anonymous\20namespace\29::as_string<std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>\2c\20int\20\28*\29\28wchar_t*\2c\20unsigned\20long\2c\20wchar_t\20const*\2c\20...\29\2c\20long\20double>\28int\20\28*\29\28wchar_t*\2c\20unsigned\20long\2c\20wchar_t\20const*\2c\20...\29\2c\20std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>\2c\20std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>::value_type\20const*\2c\20long\20double\29
[asyncify] legalstub$std::__2::stoull\28std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>\20const&\2c\20unsigned\20long*\2c\20int\29 can change the state due to std::__2::stoull\28std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>\20const&\2c\20unsigned\20long*\2c\20int\29
[asyncify] legalstub$std::__2::stoll\28std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>\20const&\2c\20unsigned\20long*\2c\20int\29 can change the state due to std::__2::stoll\28std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>\20const&\2c\20unsigned\20long*\2c\20int\29
[asyncify] crypt can change the state due to __crypt_r
[asyncify] std::__2::__fs::filesystem::detail::\28anonymous\20namespace\29::posix_lstat\28std::__2::__fs::filesystem::path\20const&\2c\20std::__2::error_code*\29 can change the state due to std::__2::__fs::filesystem::detail::\28anonymous\20namespace\29::posix_lstat\28std::__2::__fs::filesystem::path\20const&\2c\20stat&\2c\20std::__2::error_code*\29
[asyncify] std::__2::__fs::filesystem::directory_entry::__do_refresh\28\29 can change the state due to std::__2::__fs::filesystem::detail::\28anonymous\20namespace\29::posix_lstat\28std::__2::__fs::filesystem::path\20const&\2c\20stat&\2c\20std::__2::error_code*\29
[asyncify] std::__2::__fs::filesystem::detail::\28anonymous\20namespace\29::posix_stat\28std::__2::__fs::filesystem::path\20const&\2c\20std::__2::error_code*\29 can change the state due to std::__2::__fs::filesystem::detail::\28anonymous\20namespace\29::posix_stat\28std::__2::__fs::filesystem::path\20const&\2c\20stat&\2c\20std::__2::error_code*\29
[asyncify] std::__2::__fs::filesystem::__equivalent\28std::__2::__fs::filesystem::path\20const&\2c\20std::__2::__fs::filesystem::path\20const&\2c\20std::__2::error_code*\29 can change the state due to std::__2::__fs::filesystem::detail::\28anonymous\20namespace\29::posix_stat\28std::__2::__fs::filesystem::path\20const&\2c\20stat&\2c\20std::__2::error_code*\29
[asyncify] std::__2::__fs::filesystem::__file_size\28std::__2::__fs::filesystem::path\20const&\2c\20std::__2::error_code*\29 can change the state due to std::__2::__fs::filesystem::detail::\28anonymous\20namespace\29::posix_stat\28std::__2::__fs::filesystem::path\20const&\2c\20stat&\2c\20std::__2::error_code*\29
[asyncify] std::__2::__fs::filesystem::__hard_link_count\28std::__2::__fs::filesystem::path\20const&\2c\20std::__2::error_code*\29 can change the state due to std::__2::__fs::filesystem::detail::\28anonymous\20namespace\29::posix_stat\28std::__2::__fs::filesystem::path\20const&\2c\20stat&\2c\20std::__2::error_code*\29
[asyncify] std::__2::__fs::filesystem::__last_write_time\28std::__2::__fs::filesystem::path\20const&\2c\20std::__2::error_code*\29 can change the state due to std::__2::__fs::filesystem::detail::\28anonymous\20namespace\29::posix_stat\28std::__2::__fs::filesystem::path\20const&\2c\20stat&\2c\20std::__2::error_code*\29
[asyncify] std::__2::__fs::filesystem::detail::\28anonymous\20namespace\29::FileDescriptor\20std::__2::__fs::filesystem::detail::\28anonymous\20namespace\29::FileDescriptor::create_with_status<int>\28std::__2::__fs::filesystem::path\20const*\2c\20std::__2::error_code&\2c\20int\29 can change the state due to std::__2::__fs::filesystem::detail::\28anonymous\20namespace\29::FileDescriptor::refresh_status\28std::__2::error_code&\29
[asyncify] std::__2::__fs::filesystem::detail::\28anonymous\20namespace\29::FileDescriptor\20std::__2::__fs::filesystem::detail::\28anonymous\20namespace\29::FileDescriptor::create_with_status<int\2c\20unsigned\20int>\28std::__2::__fs::filesystem::path\20const*\2c\20std::__2::error_code&\2c\20int\2c\20unsigned\20int\29 can change the state due to std::__2::__fs::filesystem::detail::\28anonymous\20namespace\29::FileDescriptor::refresh_status\28std::__2::error_code&\29
[asyncify] legalstub$std::__2::stoll\28std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\2c\20unsigned\20long*\2c\20int\29 can change the state due to std::__2::stoll\28std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\2c\20unsigned\20long*\2c\20int\29
[asyncify] legalstub$std::__2::stoull\28std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\2c\20unsigned\20long*\2c\20int\29 can change the state due to std::__2::stoull\28std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\2c\20unsigned\20long*\2c\20int\29
[asyncify] std::__2::locale::__global\28\29 can change the state due to std::__2::locale::__imp::make_global\28\29
[asyncify] std::__2::to_string\28int\29 can change the state due to std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20std::__2::\28anonymous\20namespace\29::i_to_string<std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\2c\20int>\28int\29
[asyncify] std::__2::to_string\28long\29 can change the state due to std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20std::__2::\28anonymous\20namespace\29::i_to_string<std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\2c\20long>\28long\29
[asyncify] std::__2::to_string\28long\20long\29 can change the state due to std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20std::__2::\28anonymous\20namespace\29::i_to_string<std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\2c\20long\20long>\28long\20long\29
[asyncify] std::__2::to_string\28unsigned\20int\29 can change the state due to std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20std::__2::\28anonymous\20namespace\29::i_to_string<std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\2c\20unsigned\20int>\28unsigned\20int\29
[asyncify] std::__2::to_string\28unsigned\20long\29 can change the state due to std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20std::__2::\28anonymous\20namespace\29::i_to_string<std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\2c\20unsigned\20long>\28unsigned\20long\29
[asyncify] std::__2::to_string\28unsigned\20long\20long\29 can change the state due to std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20std::__2::\28anonymous\20namespace\29::i_to_string<std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\2c\20unsigned\20long\20long>\28unsigned\20long\20long\29
[asyncify] std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20std::__2::operator+\5babi:v15006\5d<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\28char\20const*\2c\20std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>&&\29 can change the state due to std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::insert\28unsigned\20long\2c\20char\20const*\29
[asyncify] std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::assign\28std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\2c\20unsigned\20long\2c\20unsigned\20long\29 can change the state due to std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::assign\28char\20const*\2c\20unsigned\20long\29
[asyncify] std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::assign\28char\20const*\29 can change the state due to std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::__assign_external\28char\20const*\29
[asyncify] std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::operator+=\5babi:v15006\5d\28std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\29 can change the state due to std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::append\5babi:v15006\5d\28std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\29
[asyncify] std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20std::__2::operator+\5babi:v15006\5d<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\28std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>&&\2c\20std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>&&\29 can change the state due to std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::append\5babi:v15006\5d\28std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\29
[asyncify] std::__2::__fs::filesystem::path::replace_extension\28std::__2::__fs::filesystem::path\20const&\29 can change the state due to std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::append\5babi:v15006\5d\28std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\29
[asyncify] std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20std::__2::operator+\5babi:v15006\5d<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\28std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>&&\2c\20char\20const*\29 can change the state due to std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::append\28char\20const*\29
[asyncify] std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::operator+=\5babi:v15006\5d\28char\20const*\29 can change the state due to std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::append\28char\20const*\29
[asyncify] std::__2::__fs::filesystem::path::operator/=\5babi:v15006\5d\28std::__2::__fs::filesystem::path\20const&\29 can change the state due to std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::operator=\28std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\29
[asyncify] std::__2::basic_stringbuf<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::str\28std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\29 can change the state due to std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::operator=\28std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\29
[asyncify] void\20std::__2::__fs::filesystem::_PathCVT<char>::__append_source\5babi:v15006\5d<std::__2::basic_string_view<char\2c\20std::__2::char_traits<char>>>\28std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>&\2c\20std::__2::basic_string_view<char\2c\20std::__2::char_traits<char>>\20const&\29 can change the state due to std::__2::enable_if<__is_cpp17_forward_iterator<char\20const*>::value\2c\20void>::type\20std::__2::__fs::filesystem::_PathCVT<char>::__append_range\5babi:v15006\5d<char\20const*>\28std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>&\2c\20char\20const*\2c\20char\20const*\29
[asyncify] void\20std::__2::__fs::filesystem::_PathCVT<char>::__append_source\5babi:v15006\5d<char*>\28std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>&\2c\20char*\20const&\29 can change the state due to std::__2::enable_if<__is_cpp17_forward_iterator<char\20const*>::value\2c\20void>::type\20std::__2::__fs::filesystem::_PathCVT<char>::__append_range\5babi:v15006\5d<char\20const*>\28std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>&\2c\20char\20const*\2c\20char\20const*\29
[asyncify] void\20std::__2::__fs::filesystem::_PathCVT<char>::__append_source\5babi:v15006\5d<std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>>\28std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>&\2c\20std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\29 can change the state due to std::__2::enable_if<__is_cpp17_forward_iterator<char\20const*>::value\2c\20void>::type\20std::__2::__fs::filesystem::_PathCVT<char>::__append_range\5babi:v15006\5d<char\20const*>\28std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>&\2c\20char\20const*\2c\20char\20const*\29
[asyncify] void\20std::__2::__fs::filesystem::_PathCVT<char>::__append_source\5babi:v15006\5d<char\20const*>\28std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>&\2c\20char\20const*\20const&\29 can change the state due to std::__2::enable_if<__is_cpp17_forward_iterator<char\20const*>::value\2c\20void>::type\20std::__2::__fs::filesystem::_PathCVT<char>::__append_range\5babi:v15006\5d<char\20const*>\28std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>&\2c\20char\20const*\2c\20char\20const*\29
[asyncify] void\20std::__2::__fs::filesystem::_PathCVT<char>::__append_source\5babi:v15006\5d<char\20\5b1\5d>\28std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>&\2c\20char\20const\20\28&\29\20\5b1\5d\29 can change the state due to std::__2::enable_if<__is_cpp17_forward_iterator<char\20const*>::value\2c\20void>::type\20std::__2::__fs::filesystem::_PathCVT<char>::__append_range\5babi:v15006\5d<char\20const*>\28std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>&\2c\20char\20const*\2c\20char\20const*\29
[asyncify] void\20std::__2::__fs::filesystem::_PathCVT<char>::__append_source\5babi:v15006\5d<char\20\5b2\5d>\28std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>&\2c\20char\20const\20\28&\29\20\5b2\5d\29 can change the state due to std::__2::enable_if<__is_cpp17_forward_iterator<char\20const*>::value\2c\20void>::type\20std::__2::__fs::filesystem::_PathCVT<char>::__append_range\5babi:v15006\5d<char\20const*>\28std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>&\2c\20char\20const*\2c\20char\20const*\29
[asyncify] void\20std::__2::__fs::filesystem::_PathCVT<char>::__append_source\5babi:v15006\5d<char\20\5b3\5d>\28std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>&\2c\20char\20const\20\28&\29\20\5b3\5d\29 can change the state due to std::__2::enable_if<__is_cpp17_forward_iterator<char\20const*>::value\2c\20void>::type\20std::__2::__fs::filesystem::_PathCVT<char>::__append_range\5babi:v15006\5d<char\20const*>\28std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>&\2c\20char\20const*\2c\20char\20const*\29
[asyncify] std::__2::enable_if<__is_pathable<std::__2::basic_string_view<char\2c\20std::__2::char_traits<char>>>::value\2c\20std::__2::__fs::filesystem::path&>::type\20std::__2::__fs::filesystem::path::append\5babi:v15006\5d<std::__2::basic_string_view<char\2c\20std::__2::char_traits<char>>>\28std::__2::basic_string_view<char\2c\20std::__2::char_traits<char>>\20const&\29 can change the state due to std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::operator+=\5babi:v15006\5d\28char\29
[asyncify] std::__2::enable_if<__is_pathable<char\20\5b1\5d>::value\2c\20std::__2::__fs::filesystem::path&>::type\20std::__2::__fs::filesystem::path::append\5babi:v15006\5d<char\20\5b1\5d>\28char\20const\20\28&\29\20\5b1\5d\29 can change the state due to std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::operator+=\5babi:v15006\5d\28char\29
[asyncify] std::__2::enable_if<__is_pathable<char\20\5b3\5d>::value\2c\20std::__2::__fs::filesystem::path&>::type\20std::__2::__fs::filesystem::path::append\5babi:v15006\5d<char\20\5b3\5d>\28char\20const\20\28&\29\20\5b3\5d\29 can change the state due to std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::operator+=\5babi:v15006\5d\28char\29
[asyncify] std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::resize\5babi:v15006\5d\28unsigned\20long\29 can change the state due to std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::resize\28unsigned\20long\2c\20char\29
[asyncify] std::__2::codecvt_byname<wchar_t\2c\20char\2c\20__mbstate_t>::codecvt_byname\5babi:v15006\5d\28std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\2c\20unsigned\20long\29 can change the state due to std::__2::codecvt<wchar_t\2c\20char\2c\20__mbstate_t>::codecvt\28char\20const*\2c\20unsigned\20long\29
[asyncify] std::__2::moneypunct_byname<char\2c\20false>::moneypunct_byname\5babi:v15006\5d\28std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\2c\20unsigned\20long\29 can change the state due to std::__2::moneypunct_byname<char\2c\20false>::init\28char\20const*\29
[asyncify] std::__2::moneypunct_byname<char\2c\20true>::moneypunct_byname\5babi:v15006\5d\28std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\2c\20unsigned\20long\29 can change the state due to std::__2::moneypunct_byname<char\2c\20true>::init\28char\20const*\29
[asyncify] std::__2::moneypunct_byname<wchar_t\2c\20false>::moneypunct_byname\5babi:v15006\5d\28std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\2c\20unsigned\20long\29 can change the state due to std::__2::moneypunct_byname<wchar_t\2c\20false>::init\28char\20const*\29
[asyncify] std::__2::moneypunct_byname<wchar_t\2c\20true>::moneypunct_byname\5babi:v15006\5d\28std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\2c\20unsigned\20long\29 can change the state due to std::__2::moneypunct_byname<wchar_t\2c\20true>::init\28char\20const*\29
[asyncify] std::__2::__time_get_temp<char>::__time_get_temp\28char\20const*\29 can change the state due to std::__2::ctype_byname<char>::ctype_byname\28char\20const*\2c\20unsigned\20long\29
[asyncify] std::__2::__time_get_temp<wchar_t>::__time_get_temp\28char\20const*\29 can change the state due to std::__2::ctype_byname<wchar_t>::ctype_byname\28char\20const*\2c\20unsigned\20long\29
[asyncify] std::__2::numpunct_byname<char>::numpunct_byname\28char\20const*\2c\20unsigned\20long\29 can change the state due to std::__2::numpunct_byname<char>::__init\28char\20const*\29
[asyncify] std::__2::numpunct_byname<char>::numpunct_byname\28std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\2c\20unsigned\20long\29 can change the state due to std::__2::numpunct_byname<char>::__init\28char\20const*\29
[asyncify] std::__2::numpunct_byname<wchar_t>::numpunct_byname\28char\20const*\2c\20unsigned\20long\29 can change the state due to std::__2::numpunct_byname<wchar_t>::__init\28char\20const*\29
[asyncify] std::__2::numpunct_byname<wchar_t>::numpunct_byname\28std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\2c\20unsigned\20long\29 can change the state due to std::__2::numpunct_byname<wchar_t>::__init\28char\20const*\29
[asyncify] std::__2::__fs::filesystem::__read_symlink\28std::__2::__fs::filesystem::path\20const&\2c\20std::__2::error_code*\29 can change the state due to std::__2::__fs::filesystem::detail::\28anonymous\20namespace\29::ErrorHandler<std::__2::__fs::filesystem::path>::report\28std::__2::error_code\20const&\29\20const
[asyncify] std::__2::__fs::filesystem::detail::\28anonymous\20namespace\29::ErrorHandler<std::__2::__fs::filesystem::path>::report\28std::__2::errc\20const&\29\20const can change the state due to std::__2::__fs::filesystem::detail::\28anonymous\20namespace\29::ErrorHandler<std::__2::__fs::filesystem::path>::report\28std::__2::error_code\20const&\29\20const
[asyncify] std::__2::__fs::filesystem::detail::\28anonymous\20namespace\29::ErrorHandler<void>::report\28std::__2::errc\20const&\29\20const can change the state due to std::__2::__fs::filesystem::detail::\28anonymous\20namespace\29::ErrorHandler<void>::report\28std::__2::error_code\20const&\29\20const.1
[asyncify] std::__2::__fs::filesystem::__create_symlink\28std::__2::__fs::filesystem::path\20const&\2c\20std::__2::__fs::filesystem::path\20const&\2c\20std::__2::error_code*\29 can change the state due to std::__2::__fs::filesystem::detail::\28anonymous\20namespace\29::ErrorHandler<void>::report\28std::__2::error_code\20const&\29\20const.1
[asyncify] std::__2::__fs::filesystem::__create_hard_link\28std::__2::__fs::filesystem::path\20const&\2c\20std::__2::__fs::filesystem::path\20const&\2c\20std::__2::error_code*\29 can change the state due to std::__2::__fs::filesystem::detail::\28anonymous\20namespace\29::ErrorHandler<void>::report\28std::__2::error_code\20const&\29\20const.1
[asyncify] std::__2::__fs::filesystem::__create_directory_symlink\28std::__2::__fs::filesystem::path\20const&\2c\20std::__2::__fs::filesystem::path\20const&\2c\20std::__2::error_code*\29 can change the state due to std::__2::__fs::filesystem::detail::\28anonymous\20namespace\29::ErrorHandler<void>::report\28std::__2::error_code\20const&\29\20const.1
[asyncify] std::__2::__fs::filesystem::__current_path\28std::__2::__fs::filesystem::path\20const&\2c\20std::__2::error_code*\29 can change the state due to std::__2::__fs::filesystem::detail::\28anonymous\20namespace\29::ErrorHandler<void>::report\28std::__2::error_code\20const&\29\20const.1
[asyncify] std::__2::__fs::filesystem::__last_write_time\28std::__2::__fs::filesystem::path\20const&\2c\20std::__2::chrono::time_point<std::__2::__fs::filesystem::_FilesystemClock\2c\20std::__2::chrono::duration<__int128\2c\20std::__2::ratio<1ll\2c\201000000000ll>>>\2c\20std::__2::error_code*\29 can change the state due to std::__2::__fs::filesystem::detail::\28anonymous\20namespace\29::ErrorHandler<void>::report\28std::__2::error_code\20const&\29\20const.1
[asyncify] std::__2::__fs::filesystem::__permissions\28std::__2::__fs::filesystem::path\20const&\2c\20std::__2::__fs::filesystem::perms\2c\20std::__2::__fs::filesystem::perm_options\2c\20std::__2::error_code*\29 can change the state due to std::__2::__fs::filesystem::detail::\28anonymous\20namespace\29::ErrorHandler<void>::report\28std::__2::error_code\20const&\29\20const.1
[asyncify] std::__2::__fs::filesystem::__rename\28std::__2::__fs::filesystem::path\20const&\2c\20std::__2::__fs::filesystem::path\20const&\2c\20std::__2::error_code*\29 can change the state due to std::__2::__fs::filesystem::detail::\28anonymous\20namespace\29::ErrorHandler<void>::report\28std::__2::error_code\20const&\29\20const.1
[asyncify] std::__2::__fs::filesystem::__resize_file\28std::__2::__fs::filesystem::path\20const&\2c\20unsigned\20long\20long\2c\20std::__2::error_code*\29 can change the state due to std::__2::__fs::filesystem::detail::\28anonymous\20namespace\29::ErrorHandler<void>::report\28std::__2::error_code\20const&\29\20const.1
[asyncify] std::__2::__fs::filesystem::__space\28std::__2::__fs::filesystem::path\20const&\2c\20std::__2::error_code*\29 can change the state due to std::__2::__fs::filesystem::detail::\28anonymous\20namespace\29::ErrorHandler<void>::report\28std::__2::error_code\20const&\29\20const.1
[asyncify] std::__2::__fs::filesystem::detail::\28anonymous\20namespace\29::ErrorHandler<bool>::report\28std::__2::errc\20const&\29\20const can change the state due to std::__2::__fs::filesystem::detail::\28anonymous\20namespace\29::ErrorHandler<bool>::report\28std::__2::error_code\20const&\29\20const
[asyncify] std::__2::__fs::filesystem::__create_directories\28std::__2::__fs::filesystem::path\20const&\2c\20std::__2::error_code*\29 can change the state due to std::__2::__fs::filesystem::detail::\28anonymous\20namespace\29::ErrorHandler<bool>::report\28std::__2::error_code\20const&\29\20const
[asyncify] std::__2::__fs::filesystem::__create_directory\28std::__2::__fs::filesystem::path\20const&\2c\20std::__2::error_code*\29 can change the state due to std::__2::__fs::filesystem::detail::\28anonymous\20namespace\29::ErrorHandler<bool>::report\28std::__2::error_code\20const&\29\20const
[asyncify] std::__2::__fs::filesystem::__remove\28std::__2::__fs::filesystem::path\20const&\2c\20std::__2::error_code*\29 can change the state due to std::__2::__fs::filesystem::detail::\28anonymous\20namespace\29::ErrorHandler<bool>::report\28std::__2::error_code\20const&\29\20const
[asyncify] std::__2::__fs::filesystem::path::begin\28\29\20const can change the state due to std::__2::__fs::filesystem::path::__assign_view\5babi:v15006\5d\28std::__2::basic_string_view<char\2c\20std::__2::char_traits<char>>\20const&\29
[asyncify] std::__2::__fs::filesystem::path::iterator::__increment\28\29 can change the state due to std::__2::__fs::filesystem::path::__assign_view\5babi:v15006\5d\28std::__2::basic_string_view<char\2c\20std::__2::char_traits<char>>\20const&\29
[asyncify] std::__2::__fs::filesystem::path::iterator::__decrement\28\29 can change the state due to std::__2::__fs::filesystem::path::__assign_view\5babi:v15006\5d\28std::__2::basic_string_view<char\2c\20std::__2::char_traits<char>>\20const&\29
[asyncify] std::__2::__fs::filesystem::operator/\5babi:v15006\5d\28std::__2::__fs::filesystem::path\20const&\2c\20std::__2::__fs::filesystem::path\20const&\29 can change the state due to std::__2::__fs::filesystem::path::path\5babi:v15006\5d\28std::__2::__fs::filesystem::path\20const&\29
[asyncify] std::__2::__fs::filesystem::__dir_stream::__dir_stream\28std::__2::__fs::filesystem::path\20const&\2c\20std::__2::__fs::filesystem::directory_options\2c\20std::__2::error_code&\29 can change the state due to std::__2::__fs::filesystem::path::path\5babi:v15006\5d\28std::__2::__fs::filesystem::path\20const&\29
[asyncify] std::__2::__time_get_temp<char>::__time_get_temp\28std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\29 can change the state due to std::__2::ctype_byname<char>::ctype_byname\28std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\2c\20unsigned\20long\29
[asyncify] std::__2::__time_get_temp<wchar_t>::__time_get_temp\28std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\29 can change the state due to std::__2::ctype_byname<wchar_t>::ctype_byname\28std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\2c\20unsigned\20long\29
[asyncify] std::__2::time_put<char\2c\20std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>>::time_put\5babi:v15006\5d\28std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\2c\20unsigned\20long\29 can change the state due to std::__2::__time_put::__time_put\28std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\29
[asyncify] std::__2::time_put<wchar_t\2c\20std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>::time_put\5babi:v15006\5d\28std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\2c\20unsigned\20long\29 can change the state due to std::__2::__time_put::__time_put\28std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\29
[asyncify] std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>::assign\28std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>\20const&\2c\20unsigned\20long\2c\20unsigned\20long\29 can change the state due to std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>::assign\28wchar_t\20const*\2c\20unsigned\20long\29
[asyncify] std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>::assign\28wchar_t\20const*\29 can change the state due to std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>::__assign_external\28wchar_t\20const*\29
[asyncify] std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>::resize\5babi:v15006\5d\28unsigned\20long\29 can change the state due to std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>::resize\28unsigned\20long\2c\20wchar_t\29
[asyncify] std::__2::to_wstring\28int\29 can change the state due to std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>\20std::__2::\28anonymous\20namespace\29::i_to_string<std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>\2c\20int>\28int\29
[asyncify] std::__2::to_wstring\28long\29 can change the state due to std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>\20std::__2::\28anonymous\20namespace\29::i_to_string<std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>\2c\20long>\28long\29
[asyncify] std::__2::to_wstring\28long\20long\29 can change the state due to std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>\20std::__2::\28anonymous\20namespace\29::i_to_string<std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>\2c\20long\20long>\28long\20long\29
[asyncify] std::__2::to_wstring\28unsigned\20int\29 can change the state due to std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>\20std::__2::\28anonymous\20namespace\29::i_to_string<std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>\2c\20unsigned\20int>\28unsigned\20int\29
[asyncify] std::__2::to_wstring\28unsigned\20long\29 can change the state due to std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>\20std::__2::\28anonymous\20namespace\29::i_to_string<std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>\2c\20unsigned\20long>\28unsigned\20long\29
[asyncify] std::__2::to_wstring\28unsigned\20long\20long\29 can change the state due to std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>\20std::__2::\28anonymous\20namespace\29::i_to_string<std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>\2c\20unsigned\20long\20long>\28unsigned\20long\20long\29
[asyncify] std::__2::vector<std::__2::locale::facet*\2c\20std::__2::__sso_allocator<std::__2::locale::facet*\2c\2030ul>>::operator=\5babi:v15006\5d\28std::__2::vector<std::__2::locale::facet*\2c\20std::__2::__sso_allocator<std::__2::locale::facet*\2c\2030ul>>\20const&\29 can change the state due to std::__2::enable_if<__is_cpp17_forward_iterator<std::__2::locale::facet**>::value\20&&\20is_constructible<std::__2::locale::facet*\2c\20std::__2::iterator_traits<std::__2::locale::facet**>::reference>::value\2c\20void>::type\20std::__2::vector<std::__2::locale::facet*\2c\20std::__2::__sso_allocator<std::__2::locale::facet*\2c\2030ul>>::assign<std::__2::locale::facet**>\28std::__2::locale::facet**\2c\20std::__2::locale::facet**\29
[asyncify] std::__2::vector<std::__2::locale::facet*\2c\20std::__2::__sso_allocator<std::__2::locale::facet*\2c\2030ul>>::resize\28unsigned\20long\29 can change the state due to std::__2::vector<std::__2::locale::facet*\2c\20std::__2::__sso_allocator<std::__2::locale::facet*\2c\2030ul>>::__append\28unsigned\20long\29
[asyncify] std::__2::__fs::filesystem::path::lexically_normal\28\29\20const::$_0::operator\28\29\28std::__2::__fs::filesystem::PathPartKind\2c\20std::__2::basic_string_view<char\2c\20std::__2::char_traits<char>>\29\20const can change the state due to std::__2::pair<std::__2::basic_string_view<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::__fs::filesystem::PathPartKind>&\20std::__2::vector<std::__2::pair<std::__2::basic_string_view<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::__fs::filesystem::PathPartKind>\2c\20std::__2::allocator<std::__2::pair<std::__2::basic_string_view<char\2c\20std::__2::char_traits<char>>\2c\20std::__2::__fs::filesystem::PathPartKind>>>::emplace_back<std::__2::basic_string_view<char\2c\20std::__2::char_traits<char>>&\2c\20std::__2::__fs::filesystem::PathPartKind&>\28std::__2::basic_string_view<char\2c\20std::__2::char_traits<char>>&\2c\20std::__2::__fs::filesystem::PathPartKind&\29
[asyncify] legalstub$std::__2::to_wstring\28long\20double\29 can change the state due to std::__2::to_wstring\28long\20double\29
[asyncify] std::__2::__fs::filesystem::__symlink_status\28std::__2::__fs::filesystem::path\20const&\2c\20std::__2::error_code*\29 can change the state due to std::__2::__fs::filesystem::detail::\28anonymous\20namespace\29::posix_lstat\28std::__2::__fs::filesystem::path\20const&\2c\20std::__2::error_code*\29
[asyncify] std::__2::__fs::filesystem::__status\28std::__2::__fs::filesystem::path\20const&\2c\20std::__2::error_code*\29 can change the state due to std::__2::__fs::filesystem::detail::\28anonymous\20namespace\29::posix_stat\28std::__2::__fs::filesystem::path\20const&\2c\20std::__2::error_code*\29
[asyncify] legalstub$std::__2::__fs::filesystem::__file_size\28std::__2::__fs::filesystem::path\20const&\2c\20std::__2::error_code*\29 can change the state due to std::__2::__fs::filesystem::__file_size\28std::__2::__fs::filesystem::path\20const&\2c\20std::__2::error_code*\29
[asyncify] legalstub$std::__2::__fs::filesystem::__hard_link_count\28std::__2::__fs::filesystem::path\20const&\2c\20std::__2::error_code*\29 can change the state due to std::__2::__fs::filesystem::__hard_link_count\28std::__2::__fs::filesystem::path\20const&\2c\20std::__2::error_code*\29
[asyncify] std::__2::locale::locale\28\29 can change the state due to std::__2::locale::__global\28\29
[asyncify] legalstub$std::__2::to_string\28long\20long\29 can change the state due to std::__2::to_string\28long\20long\29
[asyncify] legalstub$std::__2::to_string\28unsigned\20long\20long\29 can change the state due to std::__2::to_string\28unsigned\20long\20long\29
[asyncify] std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::operator=\5babi:v15006\5d\28char\20const*\29 can change the state due to std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::assign\28char\20const*\29
[asyncify] std::__2::__fs::filesystem::path::path\5babi:v15006\5d<std::__2::basic_string_view<char\2c\20std::__2::char_traits<char>>\2c\20void>\28std::__2::basic_string_view<char\2c\20std::__2::char_traits<char>>\20const&\2c\20std::__2::__fs::filesystem::path::format\29 can change the state due to void\20std::__2::__fs::filesystem::_PathCVT<char>::__append_source\5babi:v15006\5d<std::__2::basic_string_view<char\2c\20std::__2::char_traits<char>>>\28std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>&\2c\20std::__2::basic_string_view<char\2c\20std::__2::char_traits<char>>\20const&\29
[asyncify] std::__2::enable_if<__is_pathable<std::__2::basic_string_view<char\2c\20std::__2::char_traits<char>>>::value\2c\20std::__2::__fs::filesystem::path&>::type\20std::__2::__fs::filesystem::path::assign\5babi:v15006\5d<std::__2::basic_string_view<char\2c\20std::__2::char_traits<char>>>\28std::__2::basic_string_view<char\2c\20std::__2::char_traits<char>>\20const&\29 can change the state due to void\20std::__2::__fs::filesystem::_PathCVT<char>::__append_source\5babi:v15006\5d<std::__2::basic_string_view<char\2c\20std::__2::char_traits<char>>>\28std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>&\2c\20std::__2::basic_string_view<char\2c\20std::__2::char_traits<char>>\20const&\29
[asyncify] std::__2::__fs::filesystem::path::path\5babi:v15006\5d<char*\2c\20void>\28char*\20const&\2c\20std::__2::__fs::filesystem::path::format\29 can change the state due to void\20std::__2::__fs::filesystem::_PathCVT<char>::__append_source\5babi:v15006\5d<char*>\28std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>&\2c\20char*\20const&\29
[asyncify] std::__2::__fs::filesystem::path::path\5babi:v15006\5d<std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\2c\20void>\28std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\2c\20std::__2::__fs::filesystem::path::format\29 can change the state due to void\20std::__2::__fs::filesystem::_PathCVT<char>::__append_source\5babi:v15006\5d<std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>>\28std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>&\2c\20std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\29
[asyncify] std::__2::__fs::filesystem::path::path\5babi:v15006\5d<char\20const*\2c\20void>\28char\20const*\20const&\2c\20std::__2::__fs::filesystem::path::format\29 can change the state due to void\20std::__2::__fs::filesystem::_PathCVT<char>::__append_source\5babi:v15006\5d<char\20const*>\28std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>&\2c\20char\20const*\20const&\29
[asyncify] std::__2::__fs::filesystem::path::path\5babi:v15006\5d<char\20\5b1\5d\2c\20void>\28char\20const\20\28&\29\20\5b1\5d\2c\20std::__2::__fs::filesystem::path::format\29 can change the state due to void\20std::__2::__fs::filesystem::_PathCVT<char>::__append_source\5babi:v15006\5d<char\20\5b1\5d>\28std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>&\2c\20char\20const\20\28&\29\20\5b1\5d\29
[asyncify] std::__2::__fs::filesystem::path::path\5babi:v15006\5d<char\20\5b2\5d\2c\20void>\28char\20const\20\28&\29\20\5b2\5d\2c\20std::__2::__fs::filesystem::path::format\29 can change the state due to void\20std::__2::__fs::filesystem::_PathCVT<char>::__append_source\5babi:v15006\5d<char\20\5b2\5d>\28std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>&\2c\20char\20const\20\28&\29\20\5b2\5d\29
[asyncify] std::__2::enable_if<__is_pathable<std::__2::basic_string_view<char\2c\20std::__2::char_traits<char>>>::value\2c\20std::__2::__fs::filesystem::path&>::type\20std::__2::__fs::filesystem::path::operator/=\5babi:v15006\5d<std::__2::basic_string_view<char\2c\20std::__2::char_traits<char>>>\28std::__2::basic_string_view<char\2c\20std::__2::char_traits<char>>\20const&\29 can change the state due to std::__2::enable_if<__is_pathable<std::__2::basic_string_view<char\2c\20std::__2::char_traits<char>>>::value\2c\20std::__2::__fs::filesystem::path&>::type\20std::__2::__fs::filesystem::path::append\5babi:v15006\5d<std::__2::basic_string_view<char\2c\20std::__2::char_traits<char>>>\28std::__2::basic_string_view<char\2c\20std::__2::char_traits<char>>\20const&\29
[asyncify] std::__2::enable_if<__is_pathable<char\20\5b1\5d>::value\2c\20std::__2::__fs::filesystem::path&>::type\20std::__2::__fs::filesystem::path::operator/=\5babi:v15006\5d<char\20\5b1\5d>\28char\20const\20\28&\29\20\5b1\5d\29 can change the state due to std::__2::enable_if<__is_pathable<char\20\5b1\5d>::value\2c\20std::__2::__fs::filesystem::path&>::type\20std::__2::__fs::filesystem::path::append\5babi:v15006\5d<char\20\5b1\5d>\28char\20const\20\28&\29\20\5b1\5d\29
[asyncify] std::__2::enable_if<__is_pathable<char\20\5b3\5d>::value\2c\20std::__2::__fs::filesystem::path&>::type\20std::__2::__fs::filesystem::path::operator/=\5babi:v15006\5d<char\20\5b3\5d>\28char\20const\20\28&\29\20\5b3\5d\29 can change the state due to std::__2::enable_if<__is_pathable<char\20\5b3\5d>::value\2c\20std::__2::__fs::filesystem::path&>::type\20std::__2::__fs::filesystem::path::append\5babi:v15006\5d<char\20\5b3\5d>\28char\20const\20\28&\29\20\5b3\5d\29
[asyncify] std::__2::\28anonymous\20namespace\29::initial_string<std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>>::operator\28\29\28\29\20const can change the state due to std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::resize\5babi:v15006\5d\28unsigned\20long\29
[asyncify] std::__2::__fs::filesystem::__copy_symlink\28std::__2::__fs::filesystem::path\20const&\2c\20std::__2::__fs::filesystem::path\20const&\2c\20std::__2::error_code*\29 can change the state due to std::__2::__fs::filesystem::__read_symlink\28std::__2::__fs::filesystem::path\20const&\2c\20std::__2::error_code*\29
[asyncify] legalstub$std::__2::__fs::filesystem::__last_write_time\28std::__2::__fs::filesystem::path\20const&\2c\20std::__2::chrono::time_point<std::__2::__fs::filesystem::_FilesystemClock\2c\20std::__2::chrono::duration<__int128\2c\20std::__2::ratio<1ll\2c\201000000000ll>>>\2c\20std::__2::error_code*\29 can change the state due to std::__2::__fs::filesystem::__last_write_time\28std::__2::__fs::filesystem::path\20const&\2c\20std::__2::chrono::time_point<std::__2::__fs::filesystem::_FilesystemClock\2c\20std::__2::chrono::duration<__int128\2c\20std::__2::ratio<1ll\2c\201000000000ll>>>\2c\20std::__2::error_code*\29
[asyncify] legalstub$std::__2::__fs::filesystem::__resize_file\28std::__2::__fs::filesystem::path\20const&\2c\20unsigned\20long\20long\2c\20std::__2::error_code*\29 can change the state due to std::__2::__fs::filesystem::__resize_file\28std::__2::__fs::filesystem::path\20const&\2c\20unsigned\20long\20long\2c\20std::__2::error_code*\29
[asyncify] std::__2::__fs::filesystem::__copy_file\28std::__2::__fs::filesystem::path\20const&\2c\20std::__2::__fs::filesystem::path\20const&\2c\20std::__2::__fs::filesystem::copy_options\2c\20std::__2::error_code*\29::$_0::operator\28\29\28\29\20const can change the state due to std::__2::__fs::filesystem::detail::\28anonymous\20namespace\29::ErrorHandler<bool>::report\28std::__2::errc\20const&\29\20const
[asyncify] std::__2::__fs::filesystem::__dir_stream::advance\28std::__2::error_code&\29 can change the state due to std::__2::__fs::filesystem::operator/\5babi:v15006\5d\28std::__2::__fs::filesystem::path\20const&\2c\20std::__2::__fs::filesystem::path\20const&\29
[asyncify] std::__2::__fs::filesystem::__dir_stream*\20std::__2::construct_at\5babi:v15006\5d<std::__2::__fs::filesystem::__dir_stream\2c\20std::__2::__fs::filesystem::path\20const&\2c\20std::__2::__fs::filesystem::directory_options&\2c\20std::__2::error_code&\2c\20std::__2::__fs::filesystem::__dir_stream*>\28std::__2::__fs::filesystem::__dir_stream*\2c\20std::__2::__fs::filesystem::path\20const&\2c\20std::__2::__fs::filesystem::directory_options&\2c\20std::__2::error_code&\29 can change the state due to std::__2::__fs::filesystem::__dir_stream::__dir_stream\28std::__2::__fs::filesystem::path\20const&\2c\20std::__2::__fs::filesystem::directory_options\2c\20std::__2::error_code&\29
[asyncify] std::__2::time_put_byname<char\2c\20std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>>::time_put_byname\5babi:v15006\5d\28std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\2c\20unsigned\20long\29 can change the state due to std::__2::time_put<char\2c\20std::__2::ostreambuf_iterator<char\2c\20std::__2::char_traits<char>>>::time_put\5babi:v15006\5d\28std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\2c\20unsigned\20long\29
[asyncify] std::__2::time_put_byname<wchar_t\2c\20std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>::time_put_byname\5babi:v15006\5d\28std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\2c\20unsigned\20long\29 can change the state due to std::__2::time_put<wchar_t\2c\20std::__2::ostreambuf_iterator<wchar_t\2c\20std::__2::char_traits<wchar_t>>>::time_put\5babi:v15006\5d\28std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>\20const&\2c\20unsigned\20long\29
[asyncify] std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>::operator=\5babi:v15006\5d\28wchar_t\20const*\29 can change the state due to std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>::assign\28wchar_t\20const*\29
[asyncify] legalstub$std::__2::to_wstring\28long\20long\29 can change the state due to std::__2::to_wstring\28long\20long\29
[asyncify] legalstub$std::__2::to_wstring\28unsigned\20long\20long\29 can change the state due to std::__2::to_wstring\28unsigned\20long\20long\29
[asyncify] std::__2::__fs::filesystem::directory_entry::__get_sym_ft\5babi:v15006\5d\28std::__2::error_code*\29\20const can change the state due to std::__2::__fs::filesystem::__symlink_status\28std::__2::__fs::filesystem::path\20const&\2c\20std::__2::error_code*\29
[asyncify] std::__2::__fs::filesystem::directory_entry::__get_ft\5babi:v15006\5d\28std::__2::error_code*\29\20const can change the state due to std::__2::__fs::filesystem::__status\28std::__2::__fs::filesystem::path\20const&\2c\20std::__2::error_code*\29
[asyncify] std::__2::__fs::filesystem::status\5babi:v15006\5d\28std::__2::__fs::filesystem::path\20const&\2c\20std::__2::error_code&\29 can change the state due to std::__2::__fs::filesystem::__status\28std::__2::__fs::filesystem::path\20const&\2c\20std::__2::error_code*\29
[asyncify] std::__2::basic_streambuf<char\2c\20std::__2::char_traits<char>>::basic_streambuf\28\29 can change the state due to std::__2::locale::locale\28\29
[asyncify] std::__2::basic_streambuf<wchar_t\2c\20std::__2::char_traits<wchar_t>>::basic_streambuf\28\29 can change the state due to std::__2::locale::locale\28\29
[asyncify] std::__2::ios_base::init\28void*\29 can change the state due to std::__2::locale::locale\28\29
[asyncify] std::__2::init_weeks\28\29 can change the state due to std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::operator=\5babi:v15006\5d\28char\20const*\29
[asyncify] std::__2::init_months\28\29 can change the state due to std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::operator=\5babi:v15006\5d\28char\20const*\29
[asyncify] std::__2::init_am_pm\28\29 can change the state due to std::__2::basic_string<char\2c\20std::__2::char_traits<char>\2c\20std::__2::allocator<char>>::operator=\5babi:v15006\5d\28char\20const*\29
[asyncify] std::__2::__fs::filesystem::path::lexically_relative\28std::__2::__fs::filesystem::path\20const&\29\20const can change the state due to std::__2::__fs::filesystem::path::path\5babi:v15006\5d<char\20\5b2\5d\2c\20void>\28char\20const\20\28&\29\20\5b2\5d\2c\20std::__2::__fs::filesystem::path::format\29
[asyncify] void\20std::__2::allocator_traits<std::__2::allocator<std::__2::__fs::filesystem::__dir_stream>>::construct\5babi:v15006\5d<std::__2::__fs::filesystem::__dir_stream\2c\20std::__2::__fs::filesystem::path\20const&\2c\20std::__2::__fs::filesystem::directory_options&\2c\20std::__2::error_code&\2c\20void\2c\20void>\28std::__2::allocator<std::__2::__fs::filesystem::__dir_stream>&\2c\20std::__2::__fs::filesystem::__dir_stream*\2c\20std::__2::__fs::filesystem::path\20const&\2c\20std::__2::__fs::filesystem::directory_options&\2c\20std::__2::error_code&\29 can change the state due to std::__2::__fs::filesystem::__dir_stream*\20std::__2::construct_at\5babi:v15006\5d<std::__2::__fs::filesystem::__dir_stream\2c\20std::__2::__fs::filesystem::path\20const&\2c\20std::__2::__fs::filesystem::directory_options&\2c\20std::__2::error_code&\2c\20std::__2::__fs::filesystem::__dir_stream*>\28std::__2::__fs::filesystem::__dir_stream*\2c\20std::__2::__fs::filesystem::path\20const&\2c\20std::__2::__fs::filesystem::directory_options&\2c\20std::__2::error_code&\29
[asyncify] std::__2::init_wweeks\28\29 can change the state due to std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>::operator=\5babi:v15006\5d\28wchar_t\20const*\29
[asyncify] std::__2::init_wmonths\28\29 can change the state due to std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>::operator=\5babi:v15006\5d\28wchar_t\20const*\29
[asyncify] std::__2::init_wam_pm\28\29 can change the state due to std::__2::basic_string<wchar_t\2c\20std::__2::char_traits<wchar_t>\2c\20std::__2::allocator<wchar_t>>::operator=\5babi:v15006\5d\28wchar_t\20const*\29
[asyncify] std::__2::strstreambuf::strstreambuf\28long\29 can change the state due to std::__2::basic_streambuf<char\2c\20std::__2::char_traits<char>>::basic_streambuf\28\29
[asyncify] std::__2::strstreambuf::strstreambuf\28void*\20\28*\29\28unsigned\20long\29\2c\20void\20\28*\29\28void*\29\29 can change the state due to std::__2::basic_streambuf<char\2c\20std::__2::char_traits<char>>::basic_streambuf\28\29
[asyncify] std::__2::strstreambuf::strstreambuf\28char*\2c\20long\2c\20char*\29 can change the state due to std::__2::basic_streambuf<char\2c\20std::__2::char_traits<char>>::basic_streambuf\28\29
[asyncify] std::__2::strstreambuf::strstreambuf\28char\20const*\2c\20long\29 can change the state due to std::__2::basic_streambuf<char\2c\20std::__2::char_traits<char>>::basic_streambuf\28\29
[asyncify] std::__2::strstreambuf::strstreambuf\28signed\20char*\2c\20long\2c\20signed\20char*\29 can change the state due to std::__2::basic_streambuf<char\2c\20std::__2::char_traits<char>>::basic_streambuf\28\29
[asyncify] std::__2::strstreambuf::strstreambuf\28signed\20char\20const*\2c\20long\29 can change the state due to std::__2::basic_streambuf<char\2c\20std::__2::char_traits<char>>::basic_streambuf\28\29
[asyncify] std::__2::strstreambuf::strstreambuf\28unsigned\20char*\2c\20long\2c\20unsigned\20char*\29 can change the state due to std::__2::basic_streambuf<char\2c\20std::__2::char_traits<char>>::basic_streambuf\28\29
[asyncify] std::__2::strstreambuf::strstreambuf\28unsigned\20char\20const*\2c\20long\29 can change the state due to std::__2::basic_streambuf<char\2c\20std::__2::char_traits<char>>::basic_streambuf\28\29
[asyncify] std::__2::basic_ios<char\2c\20std::__2::char_traits<char>>::init\5babi:v15006\5d\28std::__2::basic_streambuf<char\2c\20std::__2::char_traits<char>>*\29 can change the state due to std::__2::ios_base::init\28void*\29
[asyncify] std::__2::basic_ios<wchar_t\2c\20std::__2::char_traits<wchar_t>>::init\5babi:v15006\5d\28std::__2::basic_streambuf<wchar_t\2c\20std::__2::char_traits<wchar_t>>*\29 can change the state due to std::__2::ios_base::init\28void*\29
[asyncify] std::__2::__time_get_c_storage<char>::__weeks\28\29\20const can change the state due to std::__2::init_weeks\28\29
[asyncify] std::__2::__time_get_c_storage<char>::__months\28\29\20const can change the state due to std::__2::init_months\28\29
[asyncify] std::__2::__time_get_c_storage<char>::__am_pm\28\29\20const can change the state due to std::__2::init_am_pm\28\29
[asyncify] std::__2::__shared_ptr_emplace<std::__2::__fs::filesystem::__dir_stream\2c\20std::__2::allocator<std::__2::__fs::filesystem::__dir_stream>>::__shared_ptr_emplace\5babi:v15006\5d<std::__2::__fs::filesystem::path\20const&\2c\20std::__2::__fs::filesystem::directory_options&\2c\20std::__2::error_code&>\28std::__2::allocator<std::__2::__fs::filesystem::__dir_stream>\2c\20std::__2::__fs::filesystem::path\20const&\2c\20std::__2::__fs::filesystem::directory_options&\2c\20std::__2::error_code&\29 can change the state due to void\20std::__2::allocator_traits<std::__2::allocator<std::__2::__fs::filesystem::__dir_stream>>::construct\5babi:v15006\5d<std::__2::__fs::filesystem::__dir_stream\2c\20std::__2::__fs::filesystem::path\20const&\2c\20std::__2::__fs::filesystem::directory_options&\2c\20std::__2::error_code&\2c\20void\2c\20void>\28std::__2::allocator<std::__2::__fs::filesystem::__dir_stream>&\2c\20std::__2::__fs::filesystem::__dir_stream*\2c\20std::__2::__fs::filesystem::path\20const&\2c\20std::__2::__fs::filesystem::directory_options&\2c\20std::__2::error_code&\29
[asyncify] std::__2::__time_get_c_storage<wchar_t>::__weeks\28\29\20const can change the state due to std::__2::init_wweeks\28\29
[asyncify] std::__2::__time_get_c_storage<wchar_t>::__months\28\29\20const can change the state due to std::__2::init_wmonths\28\29
[asyncify] std::__2::__time_get_c_storage<wchar_t>::__am_pm\28\29\20const can change the state due to std::__2::init_wam_pm\28\29
[asyncify] std::__2::basic_istream<char\2c\20std::__2::char_traits<char>>::basic_istream\5babi:v15006\5d\28std::__2::basic_streambuf<char\2c\20std::__2::char_traits<char>>*\29 can change the state due to std::__2::basic_ios<char\2c\20std::__2::char_traits<char>>::init\5babi:v15006\5d\28std::__2::basic_streambuf<char\2c\20std::__2::char_traits<char>>*\29
[asyncify] std::__2::basic_ostream<char\2c\20std::__2::char_traits<char>>::basic_ostream\5babi:v15006\5d\28std::__2::basic_streambuf<char\2c\20std::__2::char_traits<char>>*\29 can change the state due to std::__2::basic_ios<char\2c\20std::__2::char_traits<char>>::init\5babi:v15006\5d\28std::__2::basic_streambuf<char\2c\20std::__2::char_traits<char>>*\29
[asyncify] std::__2::basic_istream<char\2c\20std::__2::char_traits<char>>::basic_istream\5babi:v15006\5d\28std::__2::basic_streambuf<char\2c\20std::__2::char_traits<char>>*\29.1 can change the state due to std::__2::basic_ios<char\2c\20std::__2::char_traits<char>>::init\5babi:v15006\5d\28std::__2::basic_streambuf<char\2c\20std::__2::char_traits<char>>*\29
[asyncify] std::__2::basic_ostream<char\2c\20std::__2::char_traits<char>>::basic_ostream\5babi:v15006\5d\28std::__2::basic_streambuf<char\2c\20std::__2::char_traits<char>>*\29.1 can change the state due to std::__2::basic_ios<char\2c\20std::__2::char_traits<char>>::init\5babi:v15006\5d\28std::__2::basic_streambuf<char\2c\20std::__2::char_traits<char>>*\29
[asyncify] std::__2::basic_istream<wchar_t\2c\20std::__2::char_traits<wchar_t>>::basic_istream\5babi:v15006\5d\28std::__2::basic_streambuf<wchar_t\2c\20std::__2::char_traits<wchar_t>>*\29 can change the state due to std::__2::basic_ios<wchar_t\2c\20std::__2::char_traits<wchar_t>>::init\5babi:v15006\5d\28std::__2::basic_streambuf<wchar_t\2c\20std::__2::char_traits<wchar_t>>*\29
[asyncify] std::__2::basic_ostream<wchar_t\2c\20std::__2::char_traits<wchar_t>>::basic_ostream\5babi:v15006\5d\28std::__2::basic_streambuf<wchar_t\2c\20std::__2::char_traits<wchar_t>>*\29 can change the state due to std::__2::basic_ios<wchar_t\2c\20std::__2::char_traits<wchar_t>>::init\5babi:v15006\5d\28std::__2::basic_streambuf<wchar_t\2c\20std::__2::char_traits<wchar_t>>*\29
