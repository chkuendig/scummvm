[
  "(anonymous namespace)::BumpPointerAllocator::allocate(unsigned long)",
  "(anonymous namespace)::BumpPointerAllocator::allocateMassive(unsigned long)",
  "(anonymous namespace)::BumpPointerAllocator::grow()",
  "(anonymous namespace)::DefaultAllocator::allocateNodeArray(unsigned long)",
  "(anonymous namespace)::itanium_demangle::AbiTagAttr* (anonymous namespace)::DefaultAllocator::makeNode<(anonymous namespace)::itanium_demangle::AbiTagAttr, (anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::StringView&>((anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::StringView&)",
  "(anonymous namespace)::itanium_demangle::AbiTagAttr::printLeft((anonymous namespace)::itanium_demangle::OutputBuffer&) const",
  "(anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::ScopedTemplateParamList::ScopedTemplateParamList((anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>*)",
  "(anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::parse()",
  "(anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::parseAbiTags((anonymous namespace)::itanium_demangle::Node*)",
  "(anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::parseArrayType()",
  "(anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::parseBaseUnresolvedName()",
  "(anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::parseBinaryExpr((anonymous namespace)::itanium_demangle::StringView, (anonymous namespace)::itanium_demangle::Node::Prec)",
  "(anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::parseBracedExpr()",
  "(anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::parseClassEnumType()",
  "(anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::parseCtorDtorName((anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::NameState*)",
  "(anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::parseDecltype()",
  "(anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::parseDestructorName()",
  "(anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::parseEncoding()",
  "(anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::parseExpr()",
  "(anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::parseExprPrimary()",
  "(anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::parseFoldExpr()",
  "(anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::parseFunctionParam()",
  "(anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::parseFunctionType()",
  "(anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::parseIntegerLiteral((anonymous namespace)::itanium_demangle::StringView)",
  "(anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::parseLocalName((anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::NameState*)",
  "(anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::parseModuleNameOpt((anonymous namespace)::itanium_demangle::ModuleName*&)",
  "(anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::parseName((anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::NameState*)",
  "(anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::parseNestedName((anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::NameState*)",
  "(anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::parseOperatorName((anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::NameState*)",
  "(anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::parsePointerToMemberConversionExpr((anonymous namespace)::itanium_demangle::Node::Prec)",
  "(anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::parsePointerToMemberType()",
  "(anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::parsePrefixExpr((anonymous namespace)::itanium_demangle::StringView, (anonymous namespace)::itanium_demangle::Node::Prec)",
  "(anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::parseQualifiedType()",
  "(anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::parseSimpleId()",
  "(anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::parseSourceName((anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::NameState*)",
  "(anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::parseSpecialName()",
  "(anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::parseSubobjectExpr()",
  "(anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::parseSubstitution()",
  "(anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::parseTemplateArg()",
  "(anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::parseTemplateArgs(bool)",
  "(anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::parseTemplateParam()",
  "(anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::parseTemplateParamDecl()",
  "(anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::parseTemplateParamDecl()::'lambda'((anonymous namespace)::itanium_demangle::TemplateParamKind)::operator()((anonymous namespace)::itanium_demangle::TemplateParamKind) const",
  "(anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::parseType()",
  "(anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::parseUnnamedTypeName((anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::NameState*)",
  "(anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::parseUnqualifiedName((anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::NameState*, (anonymous namespace)::itanium_demangle::Node*, (anonymous namespace)::itanium_demangle::ModuleName*)",
  "(anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::parseUnresolvedName(bool)",
  "(anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::parseUnresolvedType()",
  "(anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::parseUnscopedName((anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::NameState*, bool*)",
  "(anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::parseVectorType()",
  "(anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::popTrailingNodeArray(unsigned long)",
  "(anonymous namespace)::itanium_demangle::ArraySubscriptExpr* (anonymous namespace)::DefaultAllocator::makeNode<(anonymous namespace)::itanium_demangle::ArraySubscriptExpr, (anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::Node::Prec>((anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::Node::Prec&&)",
  "(anonymous namespace)::itanium_demangle::ArraySubscriptExpr::printLeft((anonymous namespace)::itanium_demangle::OutputBuffer&) const",
  "(anonymous namespace)::itanium_demangle::ArrayType* (anonymous namespace)::DefaultAllocator::makeNode<(anonymous namespace)::itanium_demangle::ArrayType, (anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::Node*&>((anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::Node*&)",
  "(anonymous namespace)::itanium_demangle::ArrayType::printLeft((anonymous namespace)::itanium_demangle::OutputBuffer&) const",
  "(anonymous namespace)::itanium_demangle::ArrayType::printRight((anonymous namespace)::itanium_demangle::OutputBuffer&) const",
  "(anonymous namespace)::itanium_demangle::BinaryExpr* (anonymous namespace)::DefaultAllocator::makeNode<(anonymous namespace)::itanium_demangle::BinaryExpr, (anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::StringView&, (anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::Node::Prec&>((anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::StringView&, (anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::Node::Prec&)",
  "(anonymous namespace)::itanium_demangle::BinaryExpr::printLeft((anonymous namespace)::itanium_demangle::OutputBuffer&) const",
  "(anonymous namespace)::itanium_demangle::BinaryFPType* (anonymous namespace)::DefaultAllocator::makeNode<(anonymous namespace)::itanium_demangle::BinaryFPType, (anonymous namespace)::itanium_demangle::Node*&>((anonymous namespace)::itanium_demangle::Node*&)",
  "(anonymous namespace)::itanium_demangle::BinaryFPType::printLeft((anonymous namespace)::itanium_demangle::OutputBuffer&) const",
  "(anonymous namespace)::itanium_demangle::BitIntType* (anonymous namespace)::DefaultAllocator::makeNode<(anonymous namespace)::itanium_demangle::BitIntType, (anonymous namespace)::itanium_demangle::Node*&, bool&>((anonymous namespace)::itanium_demangle::Node*&, bool&)",
  "(anonymous namespace)::itanium_demangle::BitIntType::printLeft((anonymous namespace)::itanium_demangle::OutputBuffer&) const",
  "(anonymous namespace)::itanium_demangle::BoolExpr* (anonymous namespace)::DefaultAllocator::makeNode<(anonymous namespace)::itanium_demangle::BoolExpr, int>(int&&)",
  "(anonymous namespace)::itanium_demangle::BoolExpr::printLeft((anonymous namespace)::itanium_demangle::OutputBuffer&) const",
  "(anonymous namespace)::itanium_demangle::BracedExpr* (anonymous namespace)::DefaultAllocator::makeNode<(anonymous namespace)::itanium_demangle::BracedExpr, (anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::Node*&, bool>((anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::Node*&, bool&&)",
  "(anonymous namespace)::itanium_demangle::BracedExpr::printLeft((anonymous namespace)::itanium_demangle::OutputBuffer&) const",
  "(anonymous namespace)::itanium_demangle::BracedRangeExpr* (anonymous namespace)::DefaultAllocator::makeNode<(anonymous namespace)::itanium_demangle::BracedRangeExpr, (anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::Node*&>((anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::Node*&)",
  "(anonymous namespace)::itanium_demangle::BracedRangeExpr::printLeft((anonymous namespace)::itanium_demangle::OutputBuffer&) const",
  "(anonymous namespace)::itanium_demangle::CallExpr* (anonymous namespace)::DefaultAllocator::makeNode<(anonymous namespace)::itanium_demangle::CallExpr, (anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::NodeArray, (anonymous namespace)::itanium_demangle::Node::Prec>((anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::NodeArray&&, (anonymous namespace)::itanium_demangle::Node::Prec&&)",
  "(anonymous namespace)::itanium_demangle::CallExpr::printLeft((anonymous namespace)::itanium_demangle::OutputBuffer&) const",
  "(anonymous namespace)::itanium_demangle::CastExpr* (anonymous namespace)::DefaultAllocator::makeNode<(anonymous namespace)::itanium_demangle::CastExpr, (anonymous namespace)::itanium_demangle::StringView&, (anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::Node::Prec>((anonymous namespace)::itanium_demangle::StringView&, (anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::Node::Prec&&)",
  "(anonymous namespace)::itanium_demangle::CastExpr::printLeft((anonymous namespace)::itanium_demangle::OutputBuffer&) const",
  "(anonymous namespace)::itanium_demangle::ClosureTypeName* (anonymous namespace)::DefaultAllocator::makeNode<(anonymous namespace)::itanium_demangle::ClosureTypeName, (anonymous namespace)::itanium_demangle::NodeArray&, (anonymous namespace)::itanium_demangle::NodeArray&, (anonymous namespace)::itanium_demangle::StringView&>((anonymous namespace)::itanium_demangle::NodeArray&, (anonymous namespace)::itanium_demangle::NodeArray&, (anonymous namespace)::itanium_demangle::StringView&)",
  "(anonymous namespace)::itanium_demangle::ClosureTypeName::printDeclarator((anonymous namespace)::itanium_demangle::OutputBuffer&) const",
  "(anonymous namespace)::itanium_demangle::ClosureTypeName::printLeft((anonymous namespace)::itanium_demangle::OutputBuffer&) const",
  "(anonymous namespace)::itanium_demangle::ConditionalExpr* (anonymous namespace)::DefaultAllocator::makeNode<(anonymous namespace)::itanium_demangle::ConditionalExpr, (anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::Node::Prec>((anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::Node::Prec&&)",
  "(anonymous namespace)::itanium_demangle::ConditionalExpr::printLeft((anonymous namespace)::itanium_demangle::OutputBuffer&) const",
  "(anonymous namespace)::itanium_demangle::ConversionExpr* (anonymous namespace)::DefaultAllocator::makeNode<(anonymous namespace)::itanium_demangle::ConversionExpr, (anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::NodeArray&, (anonymous namespace)::itanium_demangle::Node::Prec>((anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::NodeArray&, (anonymous namespace)::itanium_demangle::Node::Prec&&)",
  "(anonymous namespace)::itanium_demangle::ConversionExpr::printLeft((anonymous namespace)::itanium_demangle::OutputBuffer&) const",
  "(anonymous namespace)::itanium_demangle::ConversionOperatorType* (anonymous namespace)::DefaultAllocator::makeNode<(anonymous namespace)::itanium_demangle::ConversionOperatorType, (anonymous namespace)::itanium_demangle::Node*&>((anonymous namespace)::itanium_demangle::Node*&)",
  "(anonymous namespace)::itanium_demangle::ConversionOperatorType::printLeft((anonymous namespace)::itanium_demangle::OutputBuffer&) const",
  "(anonymous namespace)::itanium_demangle::CtorDtorName* (anonymous namespace)::DefaultAllocator::makeNode<(anonymous namespace)::itanium_demangle::CtorDtorName, (anonymous namespace)::itanium_demangle::Node*&, bool, int&>((anonymous namespace)::itanium_demangle::Node*&, bool&&, int&)",
  "(anonymous namespace)::itanium_demangle::CtorDtorName::printLeft((anonymous namespace)::itanium_demangle::OutputBuffer&) const",
  "(anonymous namespace)::itanium_demangle::CtorVtableSpecialName* (anonymous namespace)::DefaultAllocator::makeNode<(anonymous namespace)::itanium_demangle::CtorVtableSpecialName, (anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::Node*&>((anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::Node*&)",
  "(anonymous namespace)::itanium_demangle::CtorVtableSpecialName::printLeft((anonymous namespace)::itanium_demangle::OutputBuffer&) const",
  "(anonymous namespace)::itanium_demangle::DeleteExpr* (anonymous namespace)::DefaultAllocator::makeNode<(anonymous namespace)::itanium_demangle::DeleteExpr, (anonymous namespace)::itanium_demangle::Node*&, bool&, bool, (anonymous namespace)::itanium_demangle::Node::Prec>((anonymous namespace)::itanium_demangle::Node*&, bool&, bool&&, (anonymous namespace)::itanium_demangle::Node::Prec&&)",
  "(anonymous namespace)::itanium_demangle::DeleteExpr::printLeft((anonymous namespace)::itanium_demangle::OutputBuffer&) const",
  "(anonymous namespace)::itanium_demangle::DotSuffix* (anonymous namespace)::DefaultAllocator::makeNode<(anonymous namespace)::itanium_demangle::DotSuffix, (anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::StringView>((anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::StringView&&)",
  "(anonymous namespace)::itanium_demangle::DotSuffix::printLeft((anonymous namespace)::itanium_demangle::OutputBuffer&) const",
  "(anonymous namespace)::itanium_demangle::DtorName* (anonymous namespace)::DefaultAllocator::makeNode<(anonymous namespace)::itanium_demangle::DtorName, (anonymous namespace)::itanium_demangle::Node*&>((anonymous namespace)::itanium_demangle::Node*&)",
  "(anonymous namespace)::itanium_demangle::DtorName::printLeft((anonymous namespace)::itanium_demangle::OutputBuffer&) const",
  "(anonymous namespace)::itanium_demangle::DynamicExceptionSpec* (anonymous namespace)::DefaultAllocator::makeNode<(anonymous namespace)::itanium_demangle::DynamicExceptionSpec, (anonymous namespace)::itanium_demangle::NodeArray>((anonymous namespace)::itanium_demangle::NodeArray&&)",
  "(anonymous namespace)::itanium_demangle::DynamicExceptionSpec::printLeft((anonymous namespace)::itanium_demangle::OutputBuffer&) const",
  "(anonymous namespace)::itanium_demangle::ElaboratedTypeSpefType* (anonymous namespace)::DefaultAllocator::makeNode<(anonymous namespace)::itanium_demangle::ElaboratedTypeSpefType, (anonymous namespace)::itanium_demangle::StringView&, (anonymous namespace)::itanium_demangle::Node*&>((anonymous namespace)::itanium_demangle::StringView&, (anonymous namespace)::itanium_demangle::Node*&)",
  "(anonymous namespace)::itanium_demangle::ElaboratedTypeSpefType::printLeft((anonymous namespace)::itanium_demangle::OutputBuffer&) const",
  "(anonymous namespace)::itanium_demangle::EnableIfAttr* (anonymous namespace)::DefaultAllocator::makeNode<(anonymous namespace)::itanium_demangle::EnableIfAttr, (anonymous namespace)::itanium_demangle::NodeArray>((anonymous namespace)::itanium_demangle::NodeArray&&)",
  "(anonymous namespace)::itanium_demangle::EnableIfAttr::printLeft((anonymous namespace)::itanium_demangle::OutputBuffer&) const",
  "(anonymous namespace)::itanium_demangle::EnclosingExpr* (anonymous namespace)::DefaultAllocator::makeNode<(anonymous namespace)::itanium_demangle::EnclosingExpr, (anonymous namespace)::itanium_demangle::StringView&, (anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::Node::Prec>((anonymous namespace)::itanium_demangle::StringView&, (anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::Node::Prec&&)",
  "(anonymous namespace)::itanium_demangle::EnclosingExpr* (anonymous namespace)::DefaultAllocator::makeNode<(anonymous namespace)::itanium_demangle::EnclosingExpr, char const (&) [10], (anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::Node::Prec>(char const (&) [10], (anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::Node::Prec&&)",
  "(anonymous namespace)::itanium_demangle::EnclosingExpr* (anonymous namespace)::DefaultAllocator::makeNode<(anonymous namespace)::itanium_demangle::EnclosingExpr, char const (&) [11], (anonymous namespace)::itanium_demangle::Node*&>(char const (&) [11], (anonymous namespace)::itanium_demangle::Node*&)",
  "(anonymous namespace)::itanium_demangle::EnclosingExpr* (anonymous namespace)::DefaultAllocator::makeNode<(anonymous namespace)::itanium_demangle::EnclosingExpr, char const (&) [9], (anonymous namespace)::itanium_demangle::Node*&>(char const (&) [9], (anonymous namespace)::itanium_demangle::Node*&)",
  "(anonymous namespace)::itanium_demangle::EnclosingExpr::printLeft((anonymous namespace)::itanium_demangle::OutputBuffer&) const",
  "(anonymous namespace)::itanium_demangle::EnumLiteral* (anonymous namespace)::DefaultAllocator::makeNode<(anonymous namespace)::itanium_demangle::EnumLiteral, (anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::StringView&>((anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::StringView&)",
  "(anonymous namespace)::itanium_demangle::EnumLiteral::printLeft((anonymous namespace)::itanium_demangle::OutputBuffer&) const",
  "(anonymous namespace)::itanium_demangle::ExpandedSpecialSubstitution* (anonymous namespace)::DefaultAllocator::makeNode<(anonymous namespace)::itanium_demangle::ExpandedSpecialSubstitution, (anonymous namespace)::itanium_demangle::SpecialSubstitution*>((anonymous namespace)::itanium_demangle::SpecialSubstitution*&&)",
  "(anonymous namespace)::itanium_demangle::ExpandedSpecialSubstitution::printLeft((anonymous namespace)::itanium_demangle::OutputBuffer&) const",
  "(anonymous namespace)::itanium_demangle::FloatLiteralImpl<double>* (anonymous namespace)::DefaultAllocator::makeNode<(anonymous namespace)::itanium_demangle::FloatLiteralImpl<double>, (anonymous namespace)::itanium_demangle::StringView&>((anonymous namespace)::itanium_demangle::StringView&)",
  "(anonymous namespace)::itanium_demangle::FloatLiteralImpl<double>::printLeft((anonymous namespace)::itanium_demangle::OutputBuffer&) const",
  "(anonymous namespace)::itanium_demangle::FloatLiteralImpl<float>* (anonymous namespace)::DefaultAllocator::makeNode<(anonymous namespace)::itanium_demangle::FloatLiteralImpl<float>, (anonymous namespace)::itanium_demangle::StringView&>((anonymous namespace)::itanium_demangle::StringView&)",
  "(anonymous namespace)::itanium_demangle::FloatLiteralImpl<float>::printLeft((anonymous namespace)::itanium_demangle::OutputBuffer&) const",
  "(anonymous namespace)::itanium_demangle::FloatLiteralImpl<long double>* (anonymous namespace)::DefaultAllocator::makeNode<(anonymous namespace)::itanium_demangle::FloatLiteralImpl<long double>, (anonymous namespace)::itanium_demangle::StringView&>((anonymous namespace)::itanium_demangle::StringView&)",
  "(anonymous namespace)::itanium_demangle::FloatLiteralImpl<long double>::printLeft((anonymous namespace)::itanium_demangle::OutputBuffer&) const",
  "(anonymous namespace)::itanium_demangle::FoldExpr* (anonymous namespace)::DefaultAllocator::makeNode<(anonymous namespace)::itanium_demangle::FoldExpr, bool&, (anonymous namespace)::itanium_demangle::StringView, (anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::Node*&>(bool&, (anonymous namespace)::itanium_demangle::StringView&&, (anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::Node*&)",
  "(anonymous namespace)::itanium_demangle::FoldExpr::printLeft((anonymous namespace)::itanium_demangle::OutputBuffer&) const",
  "(anonymous namespace)::itanium_demangle::FoldExpr::printLeft((anonymous namespace)::itanium_demangle::OutputBuffer&) const::'lambda'()::operator()() const",
  "(anonymous namespace)::itanium_demangle::ForwardTemplateReference* (anonymous namespace)::DefaultAllocator::makeNode<(anonymous namespace)::itanium_demangle::ForwardTemplateReference, unsigned long&>(unsigned long&)",
  "(anonymous namespace)::itanium_demangle::ForwardTemplateReference::getSyntaxNode((anonymous namespace)::itanium_demangle::OutputBuffer&) const",
  "(anonymous namespace)::itanium_demangle::ForwardTemplateReference::hasArraySlow((anonymous namespace)::itanium_demangle::OutputBuffer&) const",
  "(anonymous namespace)::itanium_demangle::ForwardTemplateReference::hasFunctionSlow((anonymous namespace)::itanium_demangle::OutputBuffer&) const",
  "(anonymous namespace)::itanium_demangle::ForwardTemplateReference::hasRHSComponentSlow((anonymous namespace)::itanium_demangle::OutputBuffer&) const",
  "(anonymous namespace)::itanium_demangle::ForwardTemplateReference::printLeft((anonymous namespace)::itanium_demangle::OutputBuffer&) const",
  "(anonymous namespace)::itanium_demangle::FunctionEncoding* (anonymous namespace)::DefaultAllocator::makeNode<(anonymous namespace)::itanium_demangle::FunctionEncoding, (anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::NodeArray, (anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::Qualifiers&, (anonymous namespace)::itanium_demangle::FunctionRefQual&>((anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::NodeArray&&, (anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::Qualifiers&, (anonymous namespace)::itanium_demangle::FunctionRefQual&)",
  "(anonymous namespace)::itanium_demangle::FunctionEncoding::printLeft((anonymous namespace)::itanium_demangle::OutputBuffer&) const",
  "(anonymous namespace)::itanium_demangle::FunctionEncoding::printRight((anonymous namespace)::itanium_demangle::OutputBuffer&) const",
  "(anonymous namespace)::itanium_demangle::FunctionParam* (anonymous namespace)::DefaultAllocator::makeNode<(anonymous namespace)::itanium_demangle::FunctionParam, (anonymous namespace)::itanium_demangle::StringView&>((anonymous namespace)::itanium_demangle::StringView&)",
  "(anonymous namespace)::itanium_demangle::FunctionParam::printLeft((anonymous namespace)::itanium_demangle::OutputBuffer&) const",
  "(anonymous namespace)::itanium_demangle::FunctionType* (anonymous namespace)::DefaultAllocator::makeNode<(anonymous namespace)::itanium_demangle::FunctionType, (anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::NodeArray&, (anonymous namespace)::itanium_demangle::Qualifiers&, (anonymous namespace)::itanium_demangle::FunctionRefQual&, (anonymous namespace)::itanium_demangle::Node*&>((anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::NodeArray&, (anonymous namespace)::itanium_demangle::Qualifiers&, (anonymous namespace)::itanium_demangle::FunctionRefQual&, (anonymous namespace)::itanium_demangle::Node*&)",
  "(anonymous namespace)::itanium_demangle::FunctionType::printLeft((anonymous namespace)::itanium_demangle::OutputBuffer&) const",
  "(anonymous namespace)::itanium_demangle::FunctionType::printRight((anonymous namespace)::itanium_demangle::OutputBuffer&) const",
  "(anonymous namespace)::itanium_demangle::GlobalQualifiedName* (anonymous namespace)::DefaultAllocator::makeNode<(anonymous namespace)::itanium_demangle::GlobalQualifiedName, (anonymous namespace)::itanium_demangle::Node*&>((anonymous namespace)::itanium_demangle::Node*&)",
  "(anonymous namespace)::itanium_demangle::GlobalQualifiedName::getBaseName() const",
  "(anonymous namespace)::itanium_demangle::GlobalQualifiedName::printLeft((anonymous namespace)::itanium_demangle::OutputBuffer&) const",
  "(anonymous namespace)::itanium_demangle::InitListExpr* (anonymous namespace)::DefaultAllocator::makeNode<(anonymous namespace)::itanium_demangle::InitListExpr, (anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::NodeArray>((anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::NodeArray&&)",
  "(anonymous namespace)::itanium_demangle::InitListExpr* (anonymous namespace)::DefaultAllocator::makeNode<(anonymous namespace)::itanium_demangle::InitListExpr, std::nullptr_t, (anonymous namespace)::itanium_demangle::NodeArray>(std::nullptr_t&&, (anonymous namespace)::itanium_demangle::NodeArray&&)",
  "(anonymous namespace)::itanium_demangle::InitListExpr::printLeft((anonymous namespace)::itanium_demangle::OutputBuffer&) const",
  "(anonymous namespace)::itanium_demangle::IntegerLiteral* (anonymous namespace)::DefaultAllocator::makeNode<(anonymous namespace)::itanium_demangle::IntegerLiteral, (anonymous namespace)::itanium_demangle::StringView&, (anonymous namespace)::itanium_demangle::StringView&>((anonymous namespace)::itanium_demangle::StringView&, (anonymous namespace)::itanium_demangle::StringView&)",
  "(anonymous namespace)::itanium_demangle::IntegerLiteral::printLeft((anonymous namespace)::itanium_demangle::OutputBuffer&) const",
  "(anonymous namespace)::itanium_demangle::LambdaExpr* (anonymous namespace)::DefaultAllocator::makeNode<(anonymous namespace)::itanium_demangle::LambdaExpr, (anonymous namespace)::itanium_demangle::Node*&>((anonymous namespace)::itanium_demangle::Node*&)",
  "(anonymous namespace)::itanium_demangle::LambdaExpr::printLeft((anonymous namespace)::itanium_demangle::OutputBuffer&) const",
  "(anonymous namespace)::itanium_demangle::LiteralOperator* (anonymous namespace)::DefaultAllocator::makeNode<(anonymous namespace)::itanium_demangle::LiteralOperator, (anonymous namespace)::itanium_demangle::Node*&>((anonymous namespace)::itanium_demangle::Node*&)",
  "(anonymous namespace)::itanium_demangle::LiteralOperator::printLeft((anonymous namespace)::itanium_demangle::OutputBuffer&) const",
  "(anonymous namespace)::itanium_demangle::LocalName* (anonymous namespace)::DefaultAllocator::makeNode<(anonymous namespace)::itanium_demangle::LocalName, (anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::Node*&>((anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::Node*&)",
  "(anonymous namespace)::itanium_demangle::LocalName::printLeft((anonymous namespace)::itanium_demangle::OutputBuffer&) const",
  "(anonymous namespace)::itanium_demangle::MemberExpr* (anonymous namespace)::DefaultAllocator::makeNode<(anonymous namespace)::itanium_demangle::MemberExpr, (anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::StringView&, (anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::Node::Prec>((anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::StringView&, (anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::Node::Prec&&)",
  "(anonymous namespace)::itanium_demangle::MemberExpr::printLeft((anonymous namespace)::itanium_demangle::OutputBuffer&) const",
  "(anonymous namespace)::itanium_demangle::ModuleEntity* (anonymous namespace)::DefaultAllocator::makeNode<(anonymous namespace)::itanium_demangle::ModuleEntity, (anonymous namespace)::itanium_demangle::ModuleName*&, (anonymous namespace)::itanium_demangle::Node*&>((anonymous namespace)::itanium_demangle::ModuleName*&, (anonymous namespace)::itanium_demangle::Node*&)",
  "(anonymous namespace)::itanium_demangle::ModuleEntity::getBaseName() const",
  "(anonymous namespace)::itanium_demangle::ModuleEntity::printLeft((anonymous namespace)::itanium_demangle::OutputBuffer&) const",
  "(anonymous namespace)::itanium_demangle::ModuleName* (anonymous namespace)::DefaultAllocator::makeNode<(anonymous namespace)::itanium_demangle::ModuleName, (anonymous namespace)::itanium_demangle::ModuleName*&, (anonymous namespace)::itanium_demangle::Node*&, bool&>((anonymous namespace)::itanium_demangle::ModuleName*&, (anonymous namespace)::itanium_demangle::Node*&, bool&)",
  "(anonymous namespace)::itanium_demangle::ModuleName::printLeft((anonymous namespace)::itanium_demangle::OutputBuffer&) const",
  "(anonymous namespace)::itanium_demangle::NameType* (anonymous namespace)::DefaultAllocator::makeNode<(anonymous namespace)::itanium_demangle::NameType, (anonymous namespace)::itanium_demangle::StringView&>((anonymous namespace)::itanium_demangle::StringView&)",
  "(anonymous namespace)::itanium_demangle::NameType* (anonymous namespace)::DefaultAllocator::makeNode<(anonymous namespace)::itanium_demangle::NameType, (anonymous namespace)::itanium_demangle::StringView>((anonymous namespace)::itanium_demangle::StringView&&)",
  "(anonymous namespace)::itanium_demangle::NameType* (anonymous namespace)::DefaultAllocator::makeNode<(anonymous namespace)::itanium_demangle::NameType, char const (&) [10]>(char const (&) [10])",
  "(anonymous namespace)::itanium_demangle::NameType* (anonymous namespace)::DefaultAllocator::makeNode<(anonymous namespace)::itanium_demangle::NameType, char const (&) [11]>(char const (&) [11])",
  "(anonymous namespace)::itanium_demangle::NameType* (anonymous namespace)::DefaultAllocator::makeNode<(anonymous namespace)::itanium_demangle::NameType, char const (&) [12]>(char const (&) [12])",
  "(anonymous namespace)::itanium_demangle::NameType* (anonymous namespace)::DefaultAllocator::makeNode<(anonymous namespace)::itanium_demangle::NameType, char const (&) [13]>(char const (&) [13])",
  "(anonymous namespace)::itanium_demangle::NameType* (anonymous namespace)::DefaultAllocator::makeNode<(anonymous namespace)::itanium_demangle::NameType, char const (&) [14]>(char const (&) [14])",
  "(anonymous namespace)::itanium_demangle::NameType* (anonymous namespace)::DefaultAllocator::makeNode<(anonymous namespace)::itanium_demangle::NameType, char const (&) [15]>(char const (&) [15])",
  "(anonymous namespace)::itanium_demangle::NameType* (anonymous namespace)::DefaultAllocator::makeNode<(anonymous namespace)::itanium_demangle::NameType, char const (&) [16]>(char const (&) [16])",
  "(anonymous namespace)::itanium_demangle::NameType* (anonymous namespace)::DefaultAllocator::makeNode<(anonymous namespace)::itanium_demangle::NameType, char const (&) [18]>(char const (&) [18])",
  "(anonymous namespace)::itanium_demangle::NameType* (anonymous namespace)::DefaultAllocator::makeNode<(anonymous namespace)::itanium_demangle::NameType, char const (&) [19]>(char const (&) [19])",
  "(anonymous namespace)::itanium_demangle::NameType* (anonymous namespace)::DefaultAllocator::makeNode<(anonymous namespace)::itanium_demangle::NameType, char const (&) [22]>(char const (&) [22])",
  "(anonymous namespace)::itanium_demangle::NameType* (anonymous namespace)::DefaultAllocator::makeNode<(anonymous namespace)::itanium_demangle::NameType, char const (&) [4]>(char const (&) [4])",
  "(anonymous namespace)::itanium_demangle::NameType* (anonymous namespace)::DefaultAllocator::makeNode<(anonymous namespace)::itanium_demangle::NameType, char const (&) [5]>(char const (&) [5])",
  "(anonymous namespace)::itanium_demangle::NameType* (anonymous namespace)::DefaultAllocator::makeNode<(anonymous namespace)::itanium_demangle::NameType, char const (&) [6]>(char const (&) [6])",
  "(anonymous namespace)::itanium_demangle::NameType* (anonymous namespace)::DefaultAllocator::makeNode<(anonymous namespace)::itanium_demangle::NameType, char const (&) [7]>(char const (&) [7])",
  "(anonymous namespace)::itanium_demangle::NameType* (anonymous namespace)::DefaultAllocator::makeNode<(anonymous namespace)::itanium_demangle::NameType, char const (&) [8]>(char const (&) [8])",
  "(anonymous namespace)::itanium_demangle::NameType* (anonymous namespace)::DefaultAllocator::makeNode<(anonymous namespace)::itanium_demangle::NameType, char const (&) [9]>(char const (&) [9])",
  "(anonymous namespace)::itanium_demangle::NameType::printLeft((anonymous namespace)::itanium_demangle::OutputBuffer&) const",
  "(anonymous namespace)::itanium_demangle::NameWithTemplateArgs* (anonymous namespace)::DefaultAllocator::makeNode<(anonymous namespace)::itanium_demangle::NameWithTemplateArgs, (anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::Node*&>((anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::Node*&)",
  "(anonymous namespace)::itanium_demangle::NameWithTemplateArgs::getBaseName() const",
  "(anonymous namespace)::itanium_demangle::NameWithTemplateArgs::printLeft((anonymous namespace)::itanium_demangle::OutputBuffer&) const",
  "(anonymous namespace)::itanium_demangle::NestedName* (anonymous namespace)::DefaultAllocator::makeNode<(anonymous namespace)::itanium_demangle::NestedName, (anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::Node*&>((anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::Node*&)",
  "(anonymous namespace)::itanium_demangle::NestedName::getBaseName() const",
  "(anonymous namespace)::itanium_demangle::NestedName::printLeft((anonymous namespace)::itanium_demangle::OutputBuffer&) const",
  "(anonymous namespace)::itanium_demangle::NewExpr* (anonymous namespace)::DefaultAllocator::makeNode<(anonymous namespace)::itanium_demangle::NewExpr, (anonymous namespace)::itanium_demangle::NodeArray&, (anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::NodeArray&, bool&, bool, (anonymous namespace)::itanium_demangle::Node::Prec>((anonymous namespace)::itanium_demangle::NodeArray&, (anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::NodeArray&, bool&, bool&&, (anonymous namespace)::itanium_demangle::Node::Prec&&)",
  "(anonymous namespace)::itanium_demangle::NewExpr::printLeft((anonymous namespace)::itanium_demangle::OutputBuffer&) const",
  "(anonymous namespace)::itanium_demangle::Node* (anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::make<(anonymous namespace)::itanium_demangle::AbiTagAttr, (anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::StringView&>((anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::StringView&)",
  "(anonymous namespace)::itanium_demangle::Node* (anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::make<(anonymous namespace)::itanium_demangle::ArraySubscriptExpr, (anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::Node::Prec>((anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::Node::Prec&&)",
  "(anonymous namespace)::itanium_demangle::Node* (anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::make<(anonymous namespace)::itanium_demangle::ArrayType, (anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::Node*&>((anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::Node*&)",
  "(anonymous namespace)::itanium_demangle::Node* (anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::make<(anonymous namespace)::itanium_demangle::BinaryExpr, (anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::StringView&, (anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::Node::Prec&>((anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::StringView&, (anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::Node::Prec&)",
  "(anonymous namespace)::itanium_demangle::Node* (anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::make<(anonymous namespace)::itanium_demangle::BinaryFPType, (anonymous namespace)::itanium_demangle::Node*&>((anonymous namespace)::itanium_demangle::Node*&)",
  "(anonymous namespace)::itanium_demangle::Node* (anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::make<(anonymous namespace)::itanium_demangle::BitIntType, (anonymous namespace)::itanium_demangle::Node*&, bool&>((anonymous namespace)::itanium_demangle::Node*&, bool&)",
  "(anonymous namespace)::itanium_demangle::Node* (anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::make<(anonymous namespace)::itanium_demangle::BoolExpr, int>(int&&)",
  "(anonymous namespace)::itanium_demangle::Node* (anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::make<(anonymous namespace)::itanium_demangle::BracedExpr, (anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::Node*&, bool>((anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::Node*&, bool&&)",
  "(anonymous namespace)::itanium_demangle::Node* (anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::make<(anonymous namespace)::itanium_demangle::BracedRangeExpr, (anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::Node*&>((anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::Node*&)",
  "(anonymous namespace)::itanium_demangle::Node* (anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::make<(anonymous namespace)::itanium_demangle::CallExpr, (anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::NodeArray, (anonymous namespace)::itanium_demangle::Node::Prec>((anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::NodeArray&&, (anonymous namespace)::itanium_demangle::Node::Prec&&)",
  "(anonymous namespace)::itanium_demangle::Node* (anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::make<(anonymous namespace)::itanium_demangle::CastExpr, (anonymous namespace)::itanium_demangle::StringView&, (anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::Node::Prec>((anonymous namespace)::itanium_demangle::StringView&, (anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::Node::Prec&&)",
  "(anonymous namespace)::itanium_demangle::Node* (anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::make<(anonymous namespace)::itanium_demangle::ClosureTypeName, (anonymous namespace)::itanium_demangle::NodeArray&, (anonymous namespace)::itanium_demangle::NodeArray&, (anonymous namespace)::itanium_demangle::StringView&>((anonymous namespace)::itanium_demangle::NodeArray&, (anonymous namespace)::itanium_demangle::NodeArray&, (anonymous namespace)::itanium_demangle::StringView&)",
  "(anonymous namespace)::itanium_demangle::Node* (anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::make<(anonymous namespace)::itanium_demangle::ConditionalExpr, (anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::Node::Prec>((anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::Node::Prec&&)",
  "(anonymous namespace)::itanium_demangle::Node* (anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::make<(anonymous namespace)::itanium_demangle::ConversionExpr, (anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::NodeArray&, (anonymous namespace)::itanium_demangle::Node::Prec>((anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::NodeArray&, (anonymous namespace)::itanium_demangle::Node::Prec&&)",
  "(anonymous namespace)::itanium_demangle::Node* (anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::make<(anonymous namespace)::itanium_demangle::ConversionOperatorType, (anonymous namespace)::itanium_demangle::Node*&>((anonymous namespace)::itanium_demangle::Node*&)",
  "(anonymous namespace)::itanium_demangle::Node* (anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::make<(anonymous namespace)::itanium_demangle::CtorDtorName, (anonymous namespace)::itanium_demangle::Node*&, bool, int&>((anonymous namespace)::itanium_demangle::Node*&, bool&&, int&)",
  "(anonymous namespace)::itanium_demangle::Node* (anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::make<(anonymous namespace)::itanium_demangle::CtorVtableSpecialName, (anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::Node*&>((anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::Node*&)",
  "(anonymous namespace)::itanium_demangle::Node* (anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::make<(anonymous namespace)::itanium_demangle::DeleteExpr, (anonymous namespace)::itanium_demangle::Node*&, bool&, bool, (anonymous namespace)::itanium_demangle::Node::Prec>((anonymous namespace)::itanium_demangle::Node*&, bool&, bool&&, (anonymous namespace)::itanium_demangle::Node::Prec&&)",
  "(anonymous namespace)::itanium_demangle::Node* (anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::make<(anonymous namespace)::itanium_demangle::DotSuffix, (anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::StringView>((anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::StringView&&)",
  "(anonymous namespace)::itanium_demangle::Node* (anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::make<(anonymous namespace)::itanium_demangle::DtorName, (anonymous namespace)::itanium_demangle::Node*&>((anonymous namespace)::itanium_demangle::Node*&)",
  "(anonymous namespace)::itanium_demangle::Node* (anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::make<(anonymous namespace)::itanium_demangle::DynamicExceptionSpec, (anonymous namespace)::itanium_demangle::NodeArray>((anonymous namespace)::itanium_demangle::NodeArray&&)",
  "(anonymous namespace)::itanium_demangle::Node* (anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::make<(anonymous namespace)::itanium_demangle::ElaboratedTypeSpefType, (anonymous namespace)::itanium_demangle::StringView&, (anonymous namespace)::itanium_demangle::Node*&>((anonymous namespace)::itanium_demangle::StringView&, (anonymous namespace)::itanium_demangle::Node*&)",
  "(anonymous namespace)::itanium_demangle::Node* (anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::make<(anonymous namespace)::itanium_demangle::EnableIfAttr, (anonymous namespace)::itanium_demangle::NodeArray>((anonymous namespace)::itanium_demangle::NodeArray&&)",
  "(anonymous namespace)::itanium_demangle::Node* (anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::make<(anonymous namespace)::itanium_demangle::EnclosingExpr, (anonymous namespace)::itanium_demangle::StringView&, (anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::Node::Prec>((anonymous namespace)::itanium_demangle::StringView&, (anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::Node::Prec&&)",
  "(anonymous namespace)::itanium_demangle::Node* (anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::make<(anonymous namespace)::itanium_demangle::EnclosingExpr, char const (&) [10], (anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::Node::Prec>(char const (&) [10], (anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::Node::Prec&&)",
  "(anonymous namespace)::itanium_demangle::Node* (anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::make<(anonymous namespace)::itanium_demangle::EnclosingExpr, char const (&) [11], (anonymous namespace)::itanium_demangle::Node*&>(char const (&) [11], (anonymous namespace)::itanium_demangle::Node*&)",
  "(anonymous namespace)::itanium_demangle::Node* (anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::make<(anonymous namespace)::itanium_demangle::EnclosingExpr, char const (&) [9], (anonymous namespace)::itanium_demangle::Node*&>(char const (&) [9], (anonymous namespace)::itanium_demangle::Node*&)",
  "(anonymous namespace)::itanium_demangle::Node* (anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::make<(anonymous namespace)::itanium_demangle::EnumLiteral, (anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::StringView&>((anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::StringView&)",
  "(anonymous namespace)::itanium_demangle::Node* (anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::make<(anonymous namespace)::itanium_demangle::ExpandedSpecialSubstitution, (anonymous namespace)::itanium_demangle::SpecialSubstitution*>((anonymous namespace)::itanium_demangle::SpecialSubstitution*&&)",
  "(anonymous namespace)::itanium_demangle::Node* (anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::make<(anonymous namespace)::itanium_demangle::FloatLiteralImpl<double>, (anonymous namespace)::itanium_demangle::StringView&>((anonymous namespace)::itanium_demangle::StringView&)",
  "(anonymous namespace)::itanium_demangle::Node* (anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::make<(anonymous namespace)::itanium_demangle::FloatLiteralImpl<float>, (anonymous namespace)::itanium_demangle::StringView&>((anonymous namespace)::itanium_demangle::StringView&)",
  "(anonymous namespace)::itanium_demangle::Node* (anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::make<(anonymous namespace)::itanium_demangle::FloatLiteralImpl<long double>, (anonymous namespace)::itanium_demangle::StringView&>((anonymous namespace)::itanium_demangle::StringView&)",
  "(anonymous namespace)::itanium_demangle::Node* (anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::make<(anonymous namespace)::itanium_demangle::FoldExpr, bool&, (anonymous namespace)::itanium_demangle::StringView, (anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::Node*&>(bool&, (anonymous namespace)::itanium_demangle::StringView&&, (anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::Node*&)",
  "(anonymous namespace)::itanium_demangle::Node* (anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::make<(anonymous namespace)::itanium_demangle::ForwardTemplateReference, unsigned long&>(unsigned long&)",
  "(anonymous namespace)::itanium_demangle::Node* (anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::make<(anonymous namespace)::itanium_demangle::FunctionEncoding, (anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::NodeArray, (anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::Qualifiers&, (anonymous namespace)::itanium_demangle::FunctionRefQual&>((anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::NodeArray&&, (anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::Qualifiers&, (anonymous namespace)::itanium_demangle::FunctionRefQual&)",
  "(anonymous namespace)::itanium_demangle::Node* (anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::make<(anonymous namespace)::itanium_demangle::FunctionParam, (anonymous namespace)::itanium_demangle::StringView&>((anonymous namespace)::itanium_demangle::StringView&)",
  "(anonymous namespace)::itanium_demangle::Node* (anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::make<(anonymous namespace)::itanium_demangle::FunctionType, (anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::NodeArray&, (anonymous namespace)::itanium_demangle::Qualifiers&, (anonymous namespace)::itanium_demangle::FunctionRefQual&, (anonymous namespace)::itanium_demangle::Node*&>((anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::NodeArray&, (anonymous namespace)::itanium_demangle::Qualifiers&, (anonymous namespace)::itanium_demangle::FunctionRefQual&, (anonymous namespace)::itanium_demangle::Node*&)",
  "(anonymous namespace)::itanium_demangle::Node* (anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::make<(anonymous namespace)::itanium_demangle::GlobalQualifiedName, (anonymous namespace)::itanium_demangle::Node*&>((anonymous namespace)::itanium_demangle::Node*&)",
  "(anonymous namespace)::itanium_demangle::Node* (anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::make<(anonymous namespace)::itanium_demangle::InitListExpr, (anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::NodeArray>((anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::NodeArray&&)",
  "(anonymous namespace)::itanium_demangle::Node* (anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::make<(anonymous namespace)::itanium_demangle::InitListExpr, std::nullptr_t, (anonymous namespace)::itanium_demangle::NodeArray>(std::nullptr_t&&, (anonymous namespace)::itanium_demangle::NodeArray&&)",
  "(anonymous namespace)::itanium_demangle::Node* (anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::make<(anonymous namespace)::itanium_demangle::IntegerLiteral, (anonymous namespace)::itanium_demangle::StringView&, (anonymous namespace)::itanium_demangle::StringView&>((anonymous namespace)::itanium_demangle::StringView&, (anonymous namespace)::itanium_demangle::StringView&)",
  "(anonymous namespace)::itanium_demangle::Node* (anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::make<(anonymous namespace)::itanium_demangle::LambdaExpr, (anonymous namespace)::itanium_demangle::Node*&>((anonymous namespace)::itanium_demangle::Node*&)",
  "(anonymous namespace)::itanium_demangle::Node* (anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::make<(anonymous namespace)::itanium_demangle::LiteralOperator, (anonymous namespace)::itanium_demangle::Node*&>((anonymous namespace)::itanium_demangle::Node*&)",
  "(anonymous namespace)::itanium_demangle::Node* (anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::make<(anonymous namespace)::itanium_demangle::LocalName, (anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::Node*&>((anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::Node*&)",
  "(anonymous namespace)::itanium_demangle::Node* (anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::make<(anonymous namespace)::itanium_demangle::MemberExpr, (anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::StringView&, (anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::Node::Prec>((anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::StringView&, (anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::Node::Prec&&)",
  "(anonymous namespace)::itanium_demangle::Node* (anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::make<(anonymous namespace)::itanium_demangle::ModuleEntity, (anonymous namespace)::itanium_demangle::ModuleName*&, (anonymous namespace)::itanium_demangle::Node*&>((anonymous namespace)::itanium_demangle::ModuleName*&, (anonymous namespace)::itanium_demangle::Node*&)",
  "(anonymous namespace)::itanium_demangle::Node* (anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::make<(anonymous namespace)::itanium_demangle::ModuleName, (anonymous namespace)::itanium_demangle::ModuleName*&, (anonymous namespace)::itanium_demangle::Node*&, bool&>((anonymous namespace)::itanium_demangle::ModuleName*&, (anonymous namespace)::itanium_demangle::Node*&, bool&)",
  "(anonymous namespace)::itanium_demangle::Node* (anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::make<(anonymous namespace)::itanium_demangle::NameType, (anonymous namespace)::itanium_demangle::StringView&>((anonymous namespace)::itanium_demangle::StringView&)",
  "(anonymous namespace)::itanium_demangle::Node* (anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::make<(anonymous namespace)::itanium_demangle::NameType, (anonymous namespace)::itanium_demangle::StringView>((anonymous namespace)::itanium_demangle::StringView&&)",
  "(anonymous namespace)::itanium_demangle::Node* (anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::make<(anonymous namespace)::itanium_demangle::NameType, char const (&) [10]>(char const (&) [10])",
  "(anonymous namespace)::itanium_demangle::Node* (anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::make<(anonymous namespace)::itanium_demangle::NameType, char const (&) [11]>(char const (&) [11])",
  "(anonymous namespace)::itanium_demangle::Node* (anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::make<(anonymous namespace)::itanium_demangle::NameType, char const (&) [12]>(char const (&) [12])",
  "(anonymous namespace)::itanium_demangle::Node* (anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::make<(anonymous namespace)::itanium_demangle::NameType, char const (&) [13]>(char const (&) [13])",
  "(anonymous namespace)::itanium_demangle::Node* (anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::make<(anonymous namespace)::itanium_demangle::NameType, char const (&) [14]>(char const (&) [14])",
  "(anonymous namespace)::itanium_demangle::Node* (anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::make<(anonymous namespace)::itanium_demangle::NameType, char const (&) [15]>(char const (&) [15])",
  "(anonymous namespace)::itanium_demangle::Node* (anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::make<(anonymous namespace)::itanium_demangle::NameType, char const (&) [16]>(char const (&) [16])",
  "(anonymous namespace)::itanium_demangle::Node* (anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::make<(anonymous namespace)::itanium_demangle::NameType, char const (&) [18]>(char const (&) [18])",
  "(anonymous namespace)::itanium_demangle::Node* (anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::make<(anonymous namespace)::itanium_demangle::NameType, char const (&) [19]>(char const (&) [19])",
  "(anonymous namespace)::itanium_demangle::Node* (anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::make<(anonymous namespace)::itanium_demangle::NameType, char const (&) [22]>(char const (&) [22])",
  "(anonymous namespace)::itanium_demangle::Node* (anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::make<(anonymous namespace)::itanium_demangle::NameType, char const (&) [4]>(char const (&) [4])",
  "(anonymous namespace)::itanium_demangle::Node* (anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::make<(anonymous namespace)::itanium_demangle::NameType, char const (&) [5]>(char const (&) [5])",
  "(anonymous namespace)::itanium_demangle::Node* (anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::make<(anonymous namespace)::itanium_demangle::NameType, char const (&) [6]>(char const (&) [6])",
  "(anonymous namespace)::itanium_demangle::Node* (anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::make<(anonymous namespace)::itanium_demangle::NameType, char const (&) [7]>(char const (&) [7])",
  "(anonymous namespace)::itanium_demangle::Node* (anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::make<(anonymous namespace)::itanium_demangle::NameType, char const (&) [8]>(char const (&) [8])",
  "(anonymous namespace)::itanium_demangle::Node* (anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::make<(anonymous namespace)::itanium_demangle::NameType, char const (&) [9]>(char const (&) [9])",
  "(anonymous namespace)::itanium_demangle::Node* (anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::make<(anonymous namespace)::itanium_demangle::NameWithTemplateArgs, (anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::Node*&>((anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::Node*&)",
  "(anonymous namespace)::itanium_demangle::Node* (anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::make<(anonymous namespace)::itanium_demangle::NestedName, (anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::Node*&>((anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::Node*&)",
  "(anonymous namespace)::itanium_demangle::Node* (anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::make<(anonymous namespace)::itanium_demangle::NewExpr, (anonymous namespace)::itanium_demangle::NodeArray&, (anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::NodeArray&, bool&, bool, (anonymous namespace)::itanium_demangle::Node::Prec>((anonymous namespace)::itanium_demangle::NodeArray&, (anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::NodeArray&, bool&, bool&&, (anonymous namespace)::itanium_demangle::Node::Prec&&)",
  "(anonymous namespace)::itanium_demangle::Node* (anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::make<(anonymous namespace)::itanium_demangle::NodeArrayNode, (anonymous namespace)::itanium_demangle::NodeArray>((anonymous namespace)::itanium_demangle::NodeArray&&)",
  "(anonymous namespace)::itanium_demangle::Node* (anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::make<(anonymous namespace)::itanium_demangle::NoexceptSpec, (anonymous namespace)::itanium_demangle::Node*&>((anonymous namespace)::itanium_demangle::Node*&)",
  "(anonymous namespace)::itanium_demangle::Node* (anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::make<(anonymous namespace)::itanium_demangle::NonTypeTemplateParamDecl, (anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::Node*&>((anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::Node*&)",
  "(anonymous namespace)::itanium_demangle::Node* (anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::make<(anonymous namespace)::itanium_demangle::ObjCProtoName, (anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::StringView&>((anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::StringView&)",
  "(anonymous namespace)::itanium_demangle::Node* (anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::make<(anonymous namespace)::itanium_demangle::ParameterPack, (anonymous namespace)::itanium_demangle::NodeArray>((anonymous namespace)::itanium_demangle::NodeArray&&)",
  "(anonymous namespace)::itanium_demangle::Node* (anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::make<(anonymous namespace)::itanium_demangle::ParameterPackExpansion, (anonymous namespace)::itanium_demangle::Node*&>((anonymous namespace)::itanium_demangle::Node*&)",
  "(anonymous namespace)::itanium_demangle::Node* (anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::make<(anonymous namespace)::itanium_demangle::PixelVectorType, (anonymous namespace)::itanium_demangle::Node*&>((anonymous namespace)::itanium_demangle::Node*&)",
  "(anonymous namespace)::itanium_demangle::Node* (anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::make<(anonymous namespace)::itanium_demangle::PointerToMemberConversionExpr, (anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::StringView&, (anonymous namespace)::itanium_demangle::Node::Prec&>((anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::StringView&, (anonymous namespace)::itanium_demangle::Node::Prec&)",
  "(anonymous namespace)::itanium_demangle::Node* (anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::make<(anonymous namespace)::itanium_demangle::PointerToMemberType, (anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::Node*&>((anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::Node*&)",
  "(anonymous namespace)::itanium_demangle::Node* (anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::make<(anonymous namespace)::itanium_demangle::PointerType, (anonymous namespace)::itanium_demangle::Node*&>((anonymous namespace)::itanium_demangle::Node*&)",
  "(anonymous namespace)::itanium_demangle::Node* (anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::make<(anonymous namespace)::itanium_demangle::PostfixExpr, (anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::StringView&, (anonymous namespace)::itanium_demangle::Node::Prec>((anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::StringView&, (anonymous namespace)::itanium_demangle::Node::Prec&&)",
  "(anonymous namespace)::itanium_demangle::Node* (anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::make<(anonymous namespace)::itanium_demangle::PostfixQualifiedType, (anonymous namespace)::itanium_demangle::Node*&, char const (&) [11]>((anonymous namespace)::itanium_demangle::Node*&, char const (&) [11])",
  "(anonymous namespace)::itanium_demangle::Node* (anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::make<(anonymous namespace)::itanium_demangle::PostfixQualifiedType, (anonymous namespace)::itanium_demangle::Node*&, char const (&) [9]>((anonymous namespace)::itanium_demangle::Node*&, char const (&) [9])",
  "(anonymous namespace)::itanium_demangle::Node* (anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::make<(anonymous namespace)::itanium_demangle::PrefixExpr, (anonymous namespace)::itanium_demangle::StringView&, (anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::Node::Prec&>((anonymous namespace)::itanium_demangle::StringView&, (anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::Node::Prec&)",
  "(anonymous namespace)::itanium_demangle::Node* (anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::make<(anonymous namespace)::itanium_demangle::QualType, (anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::Qualifiers&>((anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::Qualifiers&)",
  "(anonymous namespace)::itanium_demangle::Node* (anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::make<(anonymous namespace)::itanium_demangle::QualifiedName, (anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::Node*&>((anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::Node*&)",
  "(anonymous namespace)::itanium_demangle::Node* (anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::make<(anonymous namespace)::itanium_demangle::ReferenceType, (anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::ReferenceKind>((anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::ReferenceKind&&)",
  "(anonymous namespace)::itanium_demangle::Node* (anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::make<(anonymous namespace)::itanium_demangle::SizeofParamPackExpr, (anonymous namespace)::itanium_demangle::Node*&>((anonymous namespace)::itanium_demangle::Node*&)",
  "(anonymous namespace)::itanium_demangle::Node* (anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::make<(anonymous namespace)::itanium_demangle::SpecialName, char const (&) [12], (anonymous namespace)::itanium_demangle::Node*&>(char const (&) [12], (anonymous namespace)::itanium_demangle::Node*&)",
  "(anonymous namespace)::itanium_demangle::Node* (anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::make<(anonymous namespace)::itanium_demangle::SpecialName, char const (&) [14], (anonymous namespace)::itanium_demangle::Node*&>(char const (&) [14], (anonymous namespace)::itanium_demangle::Node*&)",
  "(anonymous namespace)::itanium_demangle::Node* (anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::make<(anonymous namespace)::itanium_demangle::SpecialName, char const (&) [18], (anonymous namespace)::itanium_demangle::Node*&>(char const (&) [18], (anonymous namespace)::itanium_demangle::Node*&)",
  "(anonymous namespace)::itanium_demangle::Node* (anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::make<(anonymous namespace)::itanium_demangle::SpecialName, char const (&) [19], (anonymous namespace)::itanium_demangle::Node*&>(char const (&) [19], (anonymous namespace)::itanium_demangle::Node*&)",
  "(anonymous namespace)::itanium_demangle::Node* (anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::make<(anonymous namespace)::itanium_demangle::SpecialName, char const (&) [20], (anonymous namespace)::itanium_demangle::Node*&>(char const (&) [20], (anonymous namespace)::itanium_demangle::Node*&)",
  "(anonymous namespace)::itanium_demangle::Node* (anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::make<(anonymous namespace)::itanium_demangle::SpecialName, char const (&) [22], (anonymous namespace)::itanium_demangle::Node*&>(char const (&) [22], (anonymous namespace)::itanium_demangle::Node*&)",
  "(anonymous namespace)::itanium_demangle::Node* (anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::make<(anonymous namespace)::itanium_demangle::SpecialName, char const (&) [24], (anonymous namespace)::itanium_demangle::ModuleName*&>(char const (&) [24], (anonymous namespace)::itanium_demangle::ModuleName*&)",
  "(anonymous namespace)::itanium_demangle::Node* (anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::make<(anonymous namespace)::itanium_demangle::SpecialName, char const (&) [25], (anonymous namespace)::itanium_demangle::Node*&>(char const (&) [25], (anonymous namespace)::itanium_demangle::Node*&)",
  "(anonymous namespace)::itanium_demangle::Node* (anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::make<(anonymous namespace)::itanium_demangle::SpecialName, char const (&) [27], (anonymous namespace)::itanium_demangle::Node*&>(char const (&) [27], (anonymous namespace)::itanium_demangle::Node*&)",
  "(anonymous namespace)::itanium_demangle::Node* (anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::make<(anonymous namespace)::itanium_demangle::SpecialName, char const (&) [31], (anonymous namespace)::itanium_demangle::Node*&>(char const (&) [31], (anonymous namespace)::itanium_demangle::Node*&)",
  "(anonymous namespace)::itanium_demangle::Node* (anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::make<(anonymous namespace)::itanium_demangle::SpecialName, char const (&) [34], (anonymous namespace)::itanium_demangle::Node*&>(char const (&) [34], (anonymous namespace)::itanium_demangle::Node*&)",
  "(anonymous namespace)::itanium_demangle::Node* (anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::make<(anonymous namespace)::itanium_demangle::SpecialName, char const (&) [41], (anonymous namespace)::itanium_demangle::Node*&>(char const (&) [41], (anonymous namespace)::itanium_demangle::Node*&)",
  "(anonymous namespace)::itanium_demangle::Node* (anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::make<(anonymous namespace)::itanium_demangle::SpecialName, char const (&) [9], (anonymous namespace)::itanium_demangle::Node*&>(char const (&) [9], (anonymous namespace)::itanium_demangle::Node*&)",
  "(anonymous namespace)::itanium_demangle::Node* (anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::make<(anonymous namespace)::itanium_demangle::SpecialSubstitution, (anonymous namespace)::itanium_demangle::SpecialSubKind&>((anonymous namespace)::itanium_demangle::SpecialSubKind&)",
  "(anonymous namespace)::itanium_demangle::Node* (anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::make<(anonymous namespace)::itanium_demangle::StringLiteral, (anonymous namespace)::itanium_demangle::Node*&>((anonymous namespace)::itanium_demangle::Node*&)",
  "(anonymous namespace)::itanium_demangle::Node* (anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::make<(anonymous namespace)::itanium_demangle::StructuredBindingName, (anonymous namespace)::itanium_demangle::NodeArray>((anonymous namespace)::itanium_demangle::NodeArray&&)",
  "(anonymous namespace)::itanium_demangle::Node* (anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::make<(anonymous namespace)::itanium_demangle::SubobjectExpr, (anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::StringView&, (anonymous namespace)::itanium_demangle::NodeArray, bool&>((anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::StringView&, (anonymous namespace)::itanium_demangle::NodeArray&&, bool&)",
  "(anonymous namespace)::itanium_demangle::Node* (anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::make<(anonymous namespace)::itanium_demangle::SyntheticTemplateParamName, (anonymous namespace)::itanium_demangle::TemplateParamKind&, unsigned int&>((anonymous namespace)::itanium_demangle::TemplateParamKind&, unsigned int&)",
  "(anonymous namespace)::itanium_demangle::Node* (anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::make<(anonymous namespace)::itanium_demangle::TemplateArgs, (anonymous namespace)::itanium_demangle::NodeArray>((anonymous namespace)::itanium_demangle::NodeArray&&)",
  "(anonymous namespace)::itanium_demangle::Node* (anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::make<(anonymous namespace)::itanium_demangle::TemplateArgumentPack, (anonymous namespace)::itanium_demangle::NodeArray&>((anonymous namespace)::itanium_demangle::NodeArray&)",
  "(anonymous namespace)::itanium_demangle::Node* (anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::make<(anonymous namespace)::itanium_demangle::TemplateParamPackDecl, (anonymous namespace)::itanium_demangle::Node*&>((anonymous namespace)::itanium_demangle::Node*&)",
  "(anonymous namespace)::itanium_demangle::Node* (anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::make<(anonymous namespace)::itanium_demangle::TemplateTemplateParamDecl, (anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::NodeArray&>((anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::NodeArray&)",
  "(anonymous namespace)::itanium_demangle::Node* (anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::make<(anonymous namespace)::itanium_demangle::ThrowExpr, (anonymous namespace)::itanium_demangle::Node*&>((anonymous namespace)::itanium_demangle::Node*&)",
  "(anonymous namespace)::itanium_demangle::Node* (anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::make<(anonymous namespace)::itanium_demangle::TypeTemplateParamDecl, (anonymous namespace)::itanium_demangle::Node*&>((anonymous namespace)::itanium_demangle::Node*&)",
  "(anonymous namespace)::itanium_demangle::Node* (anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::make<(anonymous namespace)::itanium_demangle::UnnamedTypeName, (anonymous namespace)::itanium_demangle::StringView&>((anonymous namespace)::itanium_demangle::StringView&)",
  "(anonymous namespace)::itanium_demangle::Node* (anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::make<(anonymous namespace)::itanium_demangle::VectorType, (anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::Node*&>((anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::Node*&)",
  "(anonymous namespace)::itanium_demangle::Node* (anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::make<(anonymous namespace)::itanium_demangle::VectorType, (anonymous namespace)::itanium_demangle::Node*&, std::nullptr_t>((anonymous namespace)::itanium_demangle::Node*&, std::nullptr_t&&)",
  "(anonymous namespace)::itanium_demangle::Node* (anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::make<(anonymous namespace)::itanium_demangle::VendorExtQualType, (anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::StringView&, (anonymous namespace)::itanium_demangle::Node*&>((anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::StringView&, (anonymous namespace)::itanium_demangle::Node*&)",
  "(anonymous namespace)::itanium_demangle::Node* (anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::parseFloatingLiteral<double>()",
  "(anonymous namespace)::itanium_demangle::Node* (anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::parseFloatingLiteral<float>()",
  "(anonymous namespace)::itanium_demangle::Node* (anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::parseFloatingLiteral<long double>()",
  "(anonymous namespace)::itanium_demangle::Node::hasArray((anonymous namespace)::itanium_demangle::OutputBuffer&) const",
  "(anonymous namespace)::itanium_demangle::Node::hasFunction((anonymous namespace)::itanium_demangle::OutputBuffer&) const",
  "(anonymous namespace)::itanium_demangle::Node::hasRHSComponent((anonymous namespace)::itanium_demangle::OutputBuffer&) const",
  "(anonymous namespace)::itanium_demangle::Node::print((anonymous namespace)::itanium_demangle::OutputBuffer&) const",
  "(anonymous namespace)::itanium_demangle::Node::printAsOperand((anonymous namespace)::itanium_demangle::OutputBuffer&, (anonymous namespace)::itanium_demangle::Node::Prec, bool) const",
  "(anonymous namespace)::itanium_demangle::NodeArray (anonymous namespace)::itanium_demangle::AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator>::makeNodeArray<(anonymous namespace)::itanium_demangle::Node**>((anonymous namespace)::itanium_demangle::Node**, (anonymous namespace)::itanium_demangle::Node**)",
  "(anonymous namespace)::itanium_demangle::NodeArray::printWithComma((anonymous namespace)::itanium_demangle::OutputBuffer&) const",
  "(anonymous namespace)::itanium_demangle::NodeArrayNode* (anonymous namespace)::DefaultAllocator::makeNode<(anonymous namespace)::itanium_demangle::NodeArrayNode, (anonymous namespace)::itanium_demangle::NodeArray>((anonymous namespace)::itanium_demangle::NodeArray&&)",
  "(anonymous namespace)::itanium_demangle::NodeArrayNode::printLeft((anonymous namespace)::itanium_demangle::OutputBuffer&) const",
  "(anonymous namespace)::itanium_demangle::NoexceptSpec* (anonymous namespace)::DefaultAllocator::makeNode<(anonymous namespace)::itanium_demangle::NoexceptSpec, (anonymous namespace)::itanium_demangle::Node*&>((anonymous namespace)::itanium_demangle::Node*&)",
  "(anonymous namespace)::itanium_demangle::NoexceptSpec::printLeft((anonymous namespace)::itanium_demangle::OutputBuffer&) const",
  "(anonymous namespace)::itanium_demangle::NonTypeTemplateParamDecl* (anonymous namespace)::DefaultAllocator::makeNode<(anonymous namespace)::itanium_demangle::NonTypeTemplateParamDecl, (anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::Node*&>((anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::Node*&)",
  "(anonymous namespace)::itanium_demangle::NonTypeTemplateParamDecl::printLeft((anonymous namespace)::itanium_demangle::OutputBuffer&) const",
  "(anonymous namespace)::itanium_demangle::NonTypeTemplateParamDecl::printRight((anonymous namespace)::itanium_demangle::OutputBuffer&) const",
  "(anonymous namespace)::itanium_demangle::ObjCProtoName* (anonymous namespace)::DefaultAllocator::makeNode<(anonymous namespace)::itanium_demangle::ObjCProtoName, (anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::StringView&>((anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::StringView&)",
  "(anonymous namespace)::itanium_demangle::ObjCProtoName::printLeft((anonymous namespace)::itanium_demangle::OutputBuffer&) const",
  "(anonymous namespace)::itanium_demangle::OutputBuffer::grow(unsigned long)",
  "(anonymous namespace)::itanium_demangle::OutputBuffer::operator+=((anonymous namespace)::itanium_demangle::StringView)",
  "(anonymous namespace)::itanium_demangle::OutputBuffer::operator+=(char)",
  "(anonymous namespace)::itanium_demangle::OutputBuffer::operator<<((anonymous namespace)::itanium_demangle::StringView)",
  "(anonymous namespace)::itanium_demangle::OutputBuffer::operator<<(unsigned int)",
  "(anonymous namespace)::itanium_demangle::OutputBuffer::operator<<(unsigned long long)",
  "(anonymous namespace)::itanium_demangle::OutputBuffer::printClose(char)",
  "(anonymous namespace)::itanium_demangle::OutputBuffer::printOpen(char)",
  "(anonymous namespace)::itanium_demangle::OutputBuffer::writeUnsigned(unsigned long long, bool)",
  "(anonymous namespace)::itanium_demangle::PODSmallVector<(anonymous namespace)::itanium_demangle::ForwardTemplateReference*, 4ul>::push_back((anonymous namespace)::itanium_demangle::ForwardTemplateReference* const&)",
  "(anonymous namespace)::itanium_demangle::PODSmallVector<(anonymous namespace)::itanium_demangle::ForwardTemplateReference*, 4ul>::reserve(unsigned long)",
  "(anonymous namespace)::itanium_demangle::PODSmallVector<(anonymous namespace)::itanium_demangle::Node const*, 8ul>::push_back((anonymous namespace)::itanium_demangle::Node const* const&)",
  "(anonymous namespace)::itanium_demangle::PODSmallVector<(anonymous namespace)::itanium_demangle::Node const*, 8ul>::reserve(unsigned long)",
  "(anonymous namespace)::itanium_demangle::PODSmallVector<(anonymous namespace)::itanium_demangle::Node*, 32ul>::push_back((anonymous namespace)::itanium_demangle::Node* const&)",
  "(anonymous namespace)::itanium_demangle::PODSmallVector<(anonymous namespace)::itanium_demangle::Node*, 32ul>::reserve(unsigned long)",
  "(anonymous namespace)::itanium_demangle::PODSmallVector<(anonymous namespace)::itanium_demangle::Node*, 8ul>::push_back((anonymous namespace)::itanium_demangle::Node* const&)",
  "(anonymous namespace)::itanium_demangle::PODSmallVector<(anonymous namespace)::itanium_demangle::Node*, 8ul>::reserve(unsigned long)",
  "(anonymous namespace)::itanium_demangle::PODSmallVector<(anonymous namespace)::itanium_demangle::PODSmallVector<(anonymous namespace)::itanium_demangle::Node*, 8ul>*, 4ul>::push_back((anonymous namespace)::itanium_demangle::PODSmallVector<(anonymous namespace)::itanium_demangle::Node*, 8ul>* const&)",
  "(anonymous namespace)::itanium_demangle::PODSmallVector<(anonymous namespace)::itanium_demangle::PODSmallVector<(anonymous namespace)::itanium_demangle::Node*, 8ul>*, 4ul>::reserve(unsigned long)",
  "(anonymous namespace)::itanium_demangle::ParameterPack* (anonymous namespace)::DefaultAllocator::makeNode<(anonymous namespace)::itanium_demangle::ParameterPack, (anonymous namespace)::itanium_demangle::NodeArray>((anonymous namespace)::itanium_demangle::NodeArray&&)",
  "(anonymous namespace)::itanium_demangle::ParameterPack::getSyntaxNode((anonymous namespace)::itanium_demangle::OutputBuffer&) const",
  "(anonymous namespace)::itanium_demangle::ParameterPack::hasArraySlow((anonymous namespace)::itanium_demangle::OutputBuffer&) const",
  "(anonymous namespace)::itanium_demangle::ParameterPack::hasFunctionSlow((anonymous namespace)::itanium_demangle::OutputBuffer&) const",
  "(anonymous namespace)::itanium_demangle::ParameterPack::hasRHSComponentSlow((anonymous namespace)::itanium_demangle::OutputBuffer&) const",
  "(anonymous namespace)::itanium_demangle::ParameterPack::printLeft((anonymous namespace)::itanium_demangle::OutputBuffer&) const",
  "(anonymous namespace)::itanium_demangle::ParameterPack::printRight((anonymous namespace)::itanium_demangle::OutputBuffer&) const",
  "(anonymous namespace)::itanium_demangle::ParameterPackExpansion* (anonymous namespace)::DefaultAllocator::makeNode<(anonymous namespace)::itanium_demangle::ParameterPackExpansion, (anonymous namespace)::itanium_demangle::Node*&>((anonymous namespace)::itanium_demangle::Node*&)",
  "(anonymous namespace)::itanium_demangle::ParameterPackExpansion::printLeft((anonymous namespace)::itanium_demangle::OutputBuffer&) const",
  "(anonymous namespace)::itanium_demangle::PixelVectorType* (anonymous namespace)::DefaultAllocator::makeNode<(anonymous namespace)::itanium_demangle::PixelVectorType, (anonymous namespace)::itanium_demangle::Node*&>((anonymous namespace)::itanium_demangle::Node*&)",
  "(anonymous namespace)::itanium_demangle::PixelVectorType::printLeft((anonymous namespace)::itanium_demangle::OutputBuffer&) const",
  "(anonymous namespace)::itanium_demangle::PointerToMemberConversionExpr* (anonymous namespace)::DefaultAllocator::makeNode<(anonymous namespace)::itanium_demangle::PointerToMemberConversionExpr, (anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::StringView&, (anonymous namespace)::itanium_demangle::Node::Prec&>((anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::StringView&, (anonymous namespace)::itanium_demangle::Node::Prec&)",
  "(anonymous namespace)::itanium_demangle::PointerToMemberConversionExpr::printLeft((anonymous namespace)::itanium_demangle::OutputBuffer&) const",
  "(anonymous namespace)::itanium_demangle::PointerToMemberType* (anonymous namespace)::DefaultAllocator::makeNode<(anonymous namespace)::itanium_demangle::PointerToMemberType, (anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::Node*&>((anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::Node*&)",
  "(anonymous namespace)::itanium_demangle::PointerToMemberType::hasRHSComponentSlow((anonymous namespace)::itanium_demangle::OutputBuffer&) const",
  "(anonymous namespace)::itanium_demangle::PointerToMemberType::printLeft((anonymous namespace)::itanium_demangle::OutputBuffer&) const",
  "(anonymous namespace)::itanium_demangle::PointerToMemberType::printRight((anonymous namespace)::itanium_demangle::OutputBuffer&) const",
  "(anonymous namespace)::itanium_demangle::PointerType* (anonymous namespace)::DefaultAllocator::makeNode<(anonymous namespace)::itanium_demangle::PointerType, (anonymous namespace)::itanium_demangle::Node*&>((anonymous namespace)::itanium_demangle::Node*&)",
  "(anonymous namespace)::itanium_demangle::PointerType::hasRHSComponentSlow((anonymous namespace)::itanium_demangle::OutputBuffer&) const",
  "(anonymous namespace)::itanium_demangle::PointerType::printLeft((anonymous namespace)::itanium_demangle::OutputBuffer&) const",
  "(anonymous namespace)::itanium_demangle::PointerType::printRight((anonymous namespace)::itanium_demangle::OutputBuffer&) const",
  "(anonymous namespace)::itanium_demangle::PostfixExpr* (anonymous namespace)::DefaultAllocator::makeNode<(anonymous namespace)::itanium_demangle::PostfixExpr, (anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::StringView&, (anonymous namespace)::itanium_demangle::Node::Prec>((anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::StringView&, (anonymous namespace)::itanium_demangle::Node::Prec&&)",
  "(anonymous namespace)::itanium_demangle::PostfixExpr::printLeft((anonymous namespace)::itanium_demangle::OutputBuffer&) const",
  "(anonymous namespace)::itanium_demangle::PostfixQualifiedType* (anonymous namespace)::DefaultAllocator::makeNode<(anonymous namespace)::itanium_demangle::PostfixQualifiedType, (anonymous namespace)::itanium_demangle::Node*&, char const (&) [11]>((anonymous namespace)::itanium_demangle::Node*&, char const (&) [11])",
  "(anonymous namespace)::itanium_demangle::PostfixQualifiedType* (anonymous namespace)::DefaultAllocator::makeNode<(anonymous namespace)::itanium_demangle::PostfixQualifiedType, (anonymous namespace)::itanium_demangle::Node*&, char const (&) [9]>((anonymous namespace)::itanium_demangle::Node*&, char const (&) [9])",
  "(anonymous namespace)::itanium_demangle::PostfixQualifiedType::printLeft((anonymous namespace)::itanium_demangle::OutputBuffer&) const",
  "(anonymous namespace)::itanium_demangle::PrefixExpr* (anonymous namespace)::DefaultAllocator::makeNode<(anonymous namespace)::itanium_demangle::PrefixExpr, (anonymous namespace)::itanium_demangle::StringView&, (anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::Node::Prec&>((anonymous namespace)::itanium_demangle::StringView&, (anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::Node::Prec&)",
  "(anonymous namespace)::itanium_demangle::PrefixExpr::printLeft((anonymous namespace)::itanium_demangle::OutputBuffer&) const",
  "(anonymous namespace)::itanium_demangle::QualType* (anonymous namespace)::DefaultAllocator::makeNode<(anonymous namespace)::itanium_demangle::QualType, (anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::Qualifiers&>((anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::Qualifiers&)",
  "(anonymous namespace)::itanium_demangle::QualType::hasArraySlow((anonymous namespace)::itanium_demangle::OutputBuffer&) const",
  "(anonymous namespace)::itanium_demangle::QualType::hasFunctionSlow((anonymous namespace)::itanium_demangle::OutputBuffer&) const",
  "(anonymous namespace)::itanium_demangle::QualType::hasRHSComponentSlow((anonymous namespace)::itanium_demangle::OutputBuffer&) const",
  "(anonymous namespace)::itanium_demangle::QualType::printLeft((anonymous namespace)::itanium_demangle::OutputBuffer&) const",
  "(anonymous namespace)::itanium_demangle::QualType::printQuals((anonymous namespace)::itanium_demangle::OutputBuffer&) const",
  "(anonymous namespace)::itanium_demangle::QualType::printRight((anonymous namespace)::itanium_demangle::OutputBuffer&) const",
  "(anonymous namespace)::itanium_demangle::QualifiedName* (anonymous namespace)::DefaultAllocator::makeNode<(anonymous namespace)::itanium_demangle::QualifiedName, (anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::Node*&>((anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::Node*&)",
  "(anonymous namespace)::itanium_demangle::QualifiedName::getBaseName() const",
  "(anonymous namespace)::itanium_demangle::QualifiedName::printLeft((anonymous namespace)::itanium_demangle::OutputBuffer&) const",
  "(anonymous namespace)::itanium_demangle::ReferenceType* (anonymous namespace)::DefaultAllocator::makeNode<(anonymous namespace)::itanium_demangle::ReferenceType, (anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::ReferenceKind>((anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::ReferenceKind&&)",
  "(anonymous namespace)::itanium_demangle::ReferenceType::collapse((anonymous namespace)::itanium_demangle::OutputBuffer&) const",
  "(anonymous namespace)::itanium_demangle::ReferenceType::hasRHSComponentSlow((anonymous namespace)::itanium_demangle::OutputBuffer&) const",
  "(anonymous namespace)::itanium_demangle::ReferenceType::printLeft((anonymous namespace)::itanium_demangle::OutputBuffer&) const",
  "(anonymous namespace)::itanium_demangle::ReferenceType::printRight((anonymous namespace)::itanium_demangle::OutputBuffer&) const",
  "(anonymous namespace)::itanium_demangle::SizeofParamPackExpr* (anonymous namespace)::DefaultAllocator::makeNode<(anonymous namespace)::itanium_demangle::SizeofParamPackExpr, (anonymous namespace)::itanium_demangle::Node*&>((anonymous namespace)::itanium_demangle::Node*&)",
  "(anonymous namespace)::itanium_demangle::SizeofParamPackExpr::printLeft((anonymous namespace)::itanium_demangle::OutputBuffer&) const",
  "(anonymous namespace)::itanium_demangle::SpecialName* (anonymous namespace)::DefaultAllocator::makeNode<(anonymous namespace)::itanium_demangle::SpecialName, char const (&) [12], (anonymous namespace)::itanium_demangle::Node*&>(char const (&) [12], (anonymous namespace)::itanium_demangle::Node*&)",
  "(anonymous namespace)::itanium_demangle::SpecialName* (anonymous namespace)::DefaultAllocator::makeNode<(anonymous namespace)::itanium_demangle::SpecialName, char const (&) [14], (anonymous namespace)::itanium_demangle::Node*&>(char const (&) [14], (anonymous namespace)::itanium_demangle::Node*&)",
  "(anonymous namespace)::itanium_demangle::SpecialName* (anonymous namespace)::DefaultAllocator::makeNode<(anonymous namespace)::itanium_demangle::SpecialName, char const (&) [18], (anonymous namespace)::itanium_demangle::Node*&>(char const (&) [18], (anonymous namespace)::itanium_demangle::Node*&)",
  "(anonymous namespace)::itanium_demangle::SpecialName* (anonymous namespace)::DefaultAllocator::makeNode<(anonymous namespace)::itanium_demangle::SpecialName, char const (&) [19], (anonymous namespace)::itanium_demangle::Node*&>(char const (&) [19], (anonymous namespace)::itanium_demangle::Node*&)",
  "(anonymous namespace)::itanium_demangle::SpecialName* (anonymous namespace)::DefaultAllocator::makeNode<(anonymous namespace)::itanium_demangle::SpecialName, char const (&) [20], (anonymous namespace)::itanium_demangle::Node*&>(char const (&) [20], (anonymous namespace)::itanium_demangle::Node*&)",
  "(anonymous namespace)::itanium_demangle::SpecialName* (anonymous namespace)::DefaultAllocator::makeNode<(anonymous namespace)::itanium_demangle::SpecialName, char const (&) [22], (anonymous namespace)::itanium_demangle::Node*&>(char const (&) [22], (anonymous namespace)::itanium_demangle::Node*&)",
  "(anonymous namespace)::itanium_demangle::SpecialName* (anonymous namespace)::DefaultAllocator::makeNode<(anonymous namespace)::itanium_demangle::SpecialName, char const (&) [24], (anonymous namespace)::itanium_demangle::ModuleName*&>(char const (&) [24], (anonymous namespace)::itanium_demangle::ModuleName*&)",
  "(anonymous namespace)::itanium_demangle::SpecialName* (anonymous namespace)::DefaultAllocator::makeNode<(anonymous namespace)::itanium_demangle::SpecialName, char const (&) [25], (anonymous namespace)::itanium_demangle::Node*&>(char const (&) [25], (anonymous namespace)::itanium_demangle::Node*&)",
  "(anonymous namespace)::itanium_demangle::SpecialName* (anonymous namespace)::DefaultAllocator::makeNode<(anonymous namespace)::itanium_demangle::SpecialName, char const (&) [27], (anonymous namespace)::itanium_demangle::Node*&>(char const (&) [27], (anonymous namespace)::itanium_demangle::Node*&)",
  "(anonymous namespace)::itanium_demangle::SpecialName* (anonymous namespace)::DefaultAllocator::makeNode<(anonymous namespace)::itanium_demangle::SpecialName, char const (&) [31], (anonymous namespace)::itanium_demangle::Node*&>(char const (&) [31], (anonymous namespace)::itanium_demangle::Node*&)",
  "(anonymous namespace)::itanium_demangle::SpecialName* (anonymous namespace)::DefaultAllocator::makeNode<(anonymous namespace)::itanium_demangle::SpecialName, char const (&) [34], (anonymous namespace)::itanium_demangle::Node*&>(char const (&) [34], (anonymous namespace)::itanium_demangle::Node*&)",
  "(anonymous namespace)::itanium_demangle::SpecialName* (anonymous namespace)::DefaultAllocator::makeNode<(anonymous namespace)::itanium_demangle::SpecialName, char const (&) [41], (anonymous namespace)::itanium_demangle::Node*&>(char const (&) [41], (anonymous namespace)::itanium_demangle::Node*&)",
  "(anonymous namespace)::itanium_demangle::SpecialName* (anonymous namespace)::DefaultAllocator::makeNode<(anonymous namespace)::itanium_demangle::SpecialName, char const (&) [9], (anonymous namespace)::itanium_demangle::Node*&>(char const (&) [9], (anonymous namespace)::itanium_demangle::Node*&)",
  "(anonymous namespace)::itanium_demangle::SpecialName::printLeft((anonymous namespace)::itanium_demangle::OutputBuffer&) const",
  "(anonymous namespace)::itanium_demangle::SpecialSubstitution* (anonymous namespace)::DefaultAllocator::makeNode<(anonymous namespace)::itanium_demangle::SpecialSubstitution, (anonymous namespace)::itanium_demangle::SpecialSubKind&>((anonymous namespace)::itanium_demangle::SpecialSubKind&)",
  "(anonymous namespace)::itanium_demangle::SpecialSubstitution::printLeft((anonymous namespace)::itanium_demangle::OutputBuffer&) const",
  "(anonymous namespace)::itanium_demangle::StringLiteral* (anonymous namespace)::DefaultAllocator::makeNode<(anonymous namespace)::itanium_demangle::StringLiteral, (anonymous namespace)::itanium_demangle::Node*&>((anonymous namespace)::itanium_demangle::Node*&)",
  "(anonymous namespace)::itanium_demangle::StringLiteral::printLeft((anonymous namespace)::itanium_demangle::OutputBuffer&) const",
  "(anonymous namespace)::itanium_demangle::StructuredBindingName* (anonymous namespace)::DefaultAllocator::makeNode<(anonymous namespace)::itanium_demangle::StructuredBindingName, (anonymous namespace)::itanium_demangle::NodeArray>((anonymous namespace)::itanium_demangle::NodeArray&&)",
  "(anonymous namespace)::itanium_demangle::StructuredBindingName::printLeft((anonymous namespace)::itanium_demangle::OutputBuffer&) const",
  "(anonymous namespace)::itanium_demangle::SubobjectExpr* (anonymous namespace)::DefaultAllocator::makeNode<(anonymous namespace)::itanium_demangle::SubobjectExpr, (anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::StringView&, (anonymous namespace)::itanium_demangle::NodeArray, bool&>((anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::StringView&, (anonymous namespace)::itanium_demangle::NodeArray&&, bool&)",
  "(anonymous namespace)::itanium_demangle::SubobjectExpr::printLeft((anonymous namespace)::itanium_demangle::OutputBuffer&) const",
  "(anonymous namespace)::itanium_demangle::SyntheticTemplateParamName* (anonymous namespace)::DefaultAllocator::makeNode<(anonymous namespace)::itanium_demangle::SyntheticTemplateParamName, (anonymous namespace)::itanium_demangle::TemplateParamKind&, unsigned int&>((anonymous namespace)::itanium_demangle::TemplateParamKind&, unsigned int&)",
  "(anonymous namespace)::itanium_demangle::SyntheticTemplateParamName::printLeft((anonymous namespace)::itanium_demangle::OutputBuffer&) const",
  "(anonymous namespace)::itanium_demangle::TemplateArgs* (anonymous namespace)::DefaultAllocator::makeNode<(anonymous namespace)::itanium_demangle::TemplateArgs, (anonymous namespace)::itanium_demangle::NodeArray>((anonymous namespace)::itanium_demangle::NodeArray&&)",
  "(anonymous namespace)::itanium_demangle::TemplateArgs::printLeft((anonymous namespace)::itanium_demangle::OutputBuffer&) const",
  "(anonymous namespace)::itanium_demangle::TemplateArgumentPack* (anonymous namespace)::DefaultAllocator::makeNode<(anonymous namespace)::itanium_demangle::TemplateArgumentPack, (anonymous namespace)::itanium_demangle::NodeArray&>((anonymous namespace)::itanium_demangle::NodeArray&)",
  "(anonymous namespace)::itanium_demangle::TemplateArgumentPack::printLeft((anonymous namespace)::itanium_demangle::OutputBuffer&) const",
  "(anonymous namespace)::itanium_demangle::TemplateParamPackDecl* (anonymous namespace)::DefaultAllocator::makeNode<(anonymous namespace)::itanium_demangle::TemplateParamPackDecl, (anonymous namespace)::itanium_demangle::Node*&>((anonymous namespace)::itanium_demangle::Node*&)",
  "(anonymous namespace)::itanium_demangle::TemplateParamPackDecl::printLeft((anonymous namespace)::itanium_demangle::OutputBuffer&) const",
  "(anonymous namespace)::itanium_demangle::TemplateParamPackDecl::printRight((anonymous namespace)::itanium_demangle::OutputBuffer&) const",
  "(anonymous namespace)::itanium_demangle::TemplateTemplateParamDecl* (anonymous namespace)::DefaultAllocator::makeNode<(anonymous namespace)::itanium_demangle::TemplateTemplateParamDecl, (anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::NodeArray&>((anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::NodeArray&)",
  "(anonymous namespace)::itanium_demangle::TemplateTemplateParamDecl::printLeft((anonymous namespace)::itanium_demangle::OutputBuffer&) const",
  "(anonymous namespace)::itanium_demangle::TemplateTemplateParamDecl::printRight((anonymous namespace)::itanium_demangle::OutputBuffer&) const",
  "(anonymous namespace)::itanium_demangle::ThrowExpr* (anonymous namespace)::DefaultAllocator::makeNode<(anonymous namespace)::itanium_demangle::ThrowExpr, (anonymous namespace)::itanium_demangle::Node*&>((anonymous namespace)::itanium_demangle::Node*&)",
  "(anonymous namespace)::itanium_demangle::ThrowExpr::printLeft((anonymous namespace)::itanium_demangle::OutputBuffer&) const",
  "(anonymous namespace)::itanium_demangle::TypeTemplateParamDecl* (anonymous namespace)::DefaultAllocator::makeNode<(anonymous namespace)::itanium_demangle::TypeTemplateParamDecl, (anonymous namespace)::itanium_demangle::Node*&>((anonymous namespace)::itanium_demangle::Node*&)",
  "(anonymous namespace)::itanium_demangle::TypeTemplateParamDecl::printLeft((anonymous namespace)::itanium_demangle::OutputBuffer&) const",
  "(anonymous namespace)::itanium_demangle::TypeTemplateParamDecl::printRight((anonymous namespace)::itanium_demangle::OutputBuffer&) const",
  "(anonymous namespace)::itanium_demangle::UnnamedTypeName* (anonymous namespace)::DefaultAllocator::makeNode<(anonymous namespace)::itanium_demangle::UnnamedTypeName, (anonymous namespace)::itanium_demangle::StringView&>((anonymous namespace)::itanium_demangle::StringView&)",
  "(anonymous namespace)::itanium_demangle::UnnamedTypeName::printLeft((anonymous namespace)::itanium_demangle::OutputBuffer&) const",
  "(anonymous namespace)::itanium_demangle::VectorType* (anonymous namespace)::DefaultAllocator::makeNode<(anonymous namespace)::itanium_demangle::VectorType, (anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::Node*&>((anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::Node*&)",
  "(anonymous namespace)::itanium_demangle::VectorType* (anonymous namespace)::DefaultAllocator::makeNode<(anonymous namespace)::itanium_demangle::VectorType, (anonymous namespace)::itanium_demangle::Node*&, std::nullptr_t>((anonymous namespace)::itanium_demangle::Node*&, std::nullptr_t&&)",
  "(anonymous namespace)::itanium_demangle::VectorType::printLeft((anonymous namespace)::itanium_demangle::OutputBuffer&) const",
  "(anonymous namespace)::itanium_demangle::VendorExtQualType* (anonymous namespace)::DefaultAllocator::makeNode<(anonymous namespace)::itanium_demangle::VendorExtQualType, (anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::StringView&, (anonymous namespace)::itanium_demangle::Node*&>((anonymous namespace)::itanium_demangle::Node*&, (anonymous namespace)::itanium_demangle::StringView&, (anonymous namespace)::itanium_demangle::Node*&)",
  "(anonymous namespace)::itanium_demangle::VendorExtQualType::printLeft((anonymous namespace)::itanium_demangle::OutputBuffer&) const",
  "ADDetectedGame::ADDetectedGame()",
  "AGSMetaEngineDetection::AGSMetaEngineDetection()",
  "AGSMetaEngineDetection::detectGames(Common::FSList const&, unsigned int, bool)",
  "AGSMetaEngineDetection::fallbackDetect(Common::HashMap<Common::String, Common::FSNode, Common::IgnoreCase_Hash, Common::IgnoreCase_EqualTo> const&, Common::FSList const&, ADDetectedGameExtraInfo**) const",
  "AGSMetaEngineDetection::~AGSMetaEngineDetection()",
  "AccessMetaEngineDetection::~AccessMetaEngineDetection()",
  "AdLibEmuMusicPlugin::createInstance(MidiDriver**, unsigned int) const",
  "AdLibEmuMusicPlugin::getDevices() const",
  "AdLibPart::allNotesOff()",
  "AdLibPart::controlChange(unsigned char, unsigned char)",
  "AdLibPart::detune(unsigned char)",
  "AdLibPart::init(MidiDriver_ADLIB*, unsigned char)",
  "AdLibPart::noteOff(unsigned char)",
  "AdLibPart::noteOn(unsigned char, unsigned char)",
  "AdLibPart::pitchBend(short)",
  "AdLibPart::pitchBendFactor(unsigned char)",
  "AdLibPart::send(unsigned int)",
  "AdLibPart::sustain(bool)",
  "AdLibPart::sysEx_customInstrument(unsigned int, unsigned char const*, unsigned int)",
  "AdLibPart::transpose(signed char)",
  "AdLibPart::volume(unsigned char)",
  "AdLibPercussionChannel::init(MidiDriver_ADLIB*, unsigned char)",
  "AdLibPercussionChannel::noteOff(unsigned char)",
  "AdLibPercussionChannel::noteOn(unsigned char, unsigned char)",
  "AdLibPercussionChannel::sysEx_customInstrument(unsigned int, unsigned char const*, unsigned int)",
  "Adl::AdlMetaEngineDetection::addFileProps(Common::HashMap<Common::String, Common::FSNode, Common::IgnoreCase_Hash, Common::IgnoreCase_EqualTo> const&, Common::String, Common::HashMap<Common::String, FileProperties, Common::IgnoreCase_Hash, Common::IgnoreCase_EqualTo>&) const",
  "Adl::AdlMetaEngineDetection::detectGame(Common::FSNode const&, Common::HashMap<Common::String, Common::FSNode, Common::IgnoreCase_Hash, Common::IgnoreCase_EqualTo> const&, Common::Language, Common::Platform, Common::String const&, unsigned int, bool)",
  "Adl::AdlMetaEngineDetection::~AdlMetaEngineDetection()",
  "Adl::DataBlock_PC::createReadStream() const",
  "Adl::DataBlock_PC::read(Common::SeekableReadStream&, unsigned char*, unsigned int) const",
  "Adl::DiskImage::DataBlock::createReadStream() const",
  "Adl::DiskImage::createReadStream(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int) const",
  "Adl::DiskImage::getDataBlock(unsigned int, unsigned int, unsigned int, unsigned int) const",
  "Adl::DiskImage::open(Common::String const&)",
  "Adl::Files::DataBlock::createReadStream() const",
  "Adl::Files::DataBlock::~DataBlock()",
  "Adl::Files_AppleDOS::Files_AppleDOS()",
  "Adl::Files_AppleDOS::createReadStream(Common::String const&, unsigned int) const",
  "Adl::Files_AppleDOS::createReadStreamBinary(Adl::Files_AppleDOS::TOCEntry const&) const",
  "Adl::Files_AppleDOS::createReadStreamText(Adl::Files_AppleDOS::TOCEntry const&) const",
  "Adl::Files_AppleDOS::getDataBlock(Common::String const&, unsigned int) const",
  "Adl::Files_AppleDOS::open(Common::String const&)",
  "Adl::Files_AppleDOS::readSectorList(Adl::Files_AppleDOS::TrackSector, Common::Array<Adl::Files_AppleDOS::TrackSector>&)",
  "Adl::Files_AppleDOS::readVTOC()",
  "Adl::Files_AppleDOS::~Files_AppleDOS()",
  "Adl::Files_Plain::createReadStream(Common::String const&, unsigned int) const",
  "Adl::Files_Plain::exists(Common::String const&) const",
  "Adl::Files_Plain::getDataBlock(Common::String const&, unsigned int) const",
  "Adl::computeMD5(Common::FSNode const&, Common::String&, unsigned int)",
  "Adl::decodeTrack(Common::SeekableReadStream&, unsigned int, bool, unsigned char*, unsigned int, Common::Array<bool>&)",
  "Adl::detectDOS33(Common::SeekableReadStream&, unsigned int)",
  "Adl::getVersion_WOZ(Common::File&)",
  "Adl::readImage_NIB(Common::File&, bool, unsigned int)",
  "Adl::readImage_WOZ(Common::File&, bool, unsigned int)",
  "Adl::readSector_NIB(unsigned char*, unsigned int, unsigned char const*, unsigned int, unsigned int&, unsigned char, unsigned char const*, unsigned int, unsigned int)",
  "Adl::readTrack_WOZ(Common::File&, unsigned int, bool)",
  "AdvMamePlugin::AdvMamePlugin()",
  "AdvMamePlugin::createInstance(Graphics::PixelFormat const&) const",
  "AdvMameScaler::decreaseFactor()",
  "AdvMameScaler::increaseFactor()",
  "AdvancedMetaEngine& Plugin::get<AdvancedMetaEngine>() const",
  "AdvancedMetaEngine::createInstance(OSystem*, Engine**)",
  "AdvancedMetaEngine::fallbackDetectExtern(unsigned int, Common::HashMap<Common::String, Common::FSNode, Common::IgnoreCase_Hash, Common::IgnoreCase_EqualTo> const&, Common::FSList const&, ADDetectedGameExtraInfo**) const",
  "AdvancedMetaEngine::getExtraGuiOptions(Common::String const&) const",
  "AdvancedMetaEngine::getFilePropertiesExtern(unsigned int, Common::HashMap<Common::String, Common::FSNode, Common::IgnoreCase_Hash, Common::IgnoreCase_EqualTo> const&, ADGameDescription const&, Common::String const&, FileProperties&) const",
  "AdvancedMetaEngineDetection::AdvancedMetaEngineDetection(void const*, unsigned int, PlainGameDescriptor const*)",
  "AdvancedMetaEngineDetection::cleanupPirated(Common::Array<ADDetectedGame>&) const",
  "AdvancedMetaEngineDetection::composeFileHashMap(Common::HashMap<Common::String, Common::FSNode, Common::IgnoreCase_Hash, Common::IgnoreCase_EqualTo>&, Common::FSList const&, int, Common::String const&) const",
  "AdvancedMetaEngineDetection::createInstance(OSystem*, Engine**)",
  "AdvancedMetaEngineDetection::detectClashes() const",
  "AdvancedMetaEngineDetection::detectGame(Common::FSNode const&, Common::HashMap<Common::String, Common::FSNode, Common::IgnoreCase_Hash, Common::IgnoreCase_EqualTo> const&, Common::Language, Common::Platform, Common::String const&, unsigned int, bool)",
  "AdvancedMetaEngineDetection::detectGameFilebased(Common::HashMap<Common::String, Common::FSNode, Common::IgnoreCase_Hash, Common::IgnoreCase_EqualTo> const&, ADFileBasedFallback const*) const",
  "AdvancedMetaEngineDetection::detectGames(Common::FSList const&, unsigned int, bool)",
  "AdvancedMetaEngineDetection::fallbackDetect(Common::HashMap<Common::String, Common::FSNode, Common::IgnoreCase_Hash, Common::IgnoreCase_EqualTo> const&, Common::FSList const&, ADDetectedGameExtraInfo**) const",
  "AdvancedMetaEngineDetection::getFileProperties(Common::HashMap<Common::String, Common::FSNode, Common::IgnoreCase_Hash, Common::IgnoreCase_EqualTo> const&, ADGameDescription const&, Common::String const&, FileProperties&) const",
  "AdvancedMetaEngineDetection::getPathsFromEntry(ADGameDescription const*)",
  "AdvancedMetaEngineDetection::getSupportedGames() const",
  "AdvancedMetaEngineDetection::isEntryGrayListed(ADGameDescription const*) const",
  "AdvancedMetaEngineDetection::preprocessDescriptions()",
  "AdvancedMetaEngineDetection::toDetectedGame(ADDetectedGame const&, ADDetectedGameExtraInfo*) const",
  "AdvancedMetaEngineDetection::~AdvancedMetaEngineDetection()",
  "Agi::WagFileParser::addPropFromIni(Common::INIFile*, Common::String, Common::String, Agi::WagProperty::WagPropertyCode)",
  "Agi::WagFileParser::checkWagVersion(Common::SeekableReadStream&)",
  "Agi::WagFileParser::convertToAgiVersionNumber(Agi::WagProperty const&)",
  "Agi::WagFileParser::endOfProperties(Common::SeekableReadStream const&) const",
  "Agi::WagFileParser::parse(Common::FSNode const&)",
  "Agi::WagProperty::read(Common::SeekableReadStream&)",
  "Agi::WagProperty::setPropDataSize(Common::String)",
  "AgiMetaEngineDetection::fallbackDetect(Common::HashMap<Common::String, Common::FSNode, Common::IgnoreCase_Hash, Common::IgnoreCase_EqualTo> const&, Common::FSList const&, ADDetectedGameExtraInfo**) const",
  "AgiMetaEngineDetection::parseAndCustomizeGuiOptions(Common::String const&, Common::String const&) const",
  "AgiMetaEngineDetection::~AgiMetaEngineDetection()",
  "AgosMetaEngineDetection::~AgosMetaEngineDetection()",
  "AmigaMusicPlugin::getDevices() const",
  "AppleIIGSMusicPlugin::getDevices() const",
  "Arith(lua_State*, lua_TValue*, lua_TValue const*, lua_TValue const*, TMS)",
  "AsylumMetaEngineDetection::fallbackDetect(Common::HashMap<Common::String, Common::FSNode, Common::IgnoreCase_Hash, Common::IgnoreCase_EqualTo> const&, Common::FSList const&, ADDetectedGameExtraInfo**) const",
  "AsylumMetaEngineDetection::~AsylumMetaEngineDetection()",
  "Audio::A8SVXLoader::callback(Common::IFFChunk&)",
  "Audio::ADPCMStream::endOfData() const",
  "Audio::ADPCMStream::rewind()",
  "Audio::AIFFHeader::makeAIFFStream(Common::SeekableReadStream*, DisposeAfterUse::Flag)",
  "Audio::AIFFHeader::readAIFFHeader(Common::SeekableReadStream*, DisposeAfterUse::Flag)",
  "Audio::APCStreamImpl::APCStreamImpl(unsigned int, unsigned char)",
  "Audio::APCStreamImpl::endOfData() const",
  "Audio::APCStreamImpl::endOfStream() const",
  "Audio::APCStreamImpl::finish()",
  "Audio::APCStreamImpl::getRate() const",
  "Audio::APCStreamImpl::isStereo() const",
  "Audio::APCStreamImpl::readBuffer(short*, int)",
  "Audio::APCStreamImpl::~APCStreamImpl()",
  "Audio::ASFStream::ASFStream(Common::SeekableReadStream*, DisposeAfterUse::Flag)",
  "Audio::ASFStream::Packet::~Packet()",
  "Audio::ASFStream::createAudioStream()",
  "Audio::ASFStream::createCodec()",
  "Audio::ASFStream::parseFileHeader()",
  "Audio::ASFStream::parseStreamHeader()",
  "Audio::ASFStream::readBuffer(short*, int)",
  "Audio::ASFStream::readPacket()",
  "Audio::ASFStream::rewind()",
  "Audio::ASFStream::~ASFStream()",
  "Audio::ASFStream::~ASFStream().2",
  "Audio::Apple_ADPCMStream::readBuffer(short*, int)",
  "Audio::Apple_ADPCMStream::~Apple_ADPCMStream()",
  "Audio::Audio3DO_ADP4_Stream::Audio3DO_ADP4_Stream(Common::SeekableReadStream*, unsigned short, bool, DisposeAfterUse::Flag, Audio::audio_3DO_ADP4_PersistentSpace*)",
  "Audio::Audio3DO_ADP4_Stream::endOfData() const",
  "Audio::Audio3DO_ADP4_Stream::readBuffer(short*, int)",
  "Audio::Audio3DO_ADP4_Stream::reset()",
  "Audio::Audio3DO_ADP4_Stream::rewind()",
  "Audio::Audio3DO_ADP4_Stream::~Audio3DO_ADP4_Stream()",
  "Audio::Audio3DO_SDX2_Stream::Audio3DO_SDX2_Stream(Common::SeekableReadStream*, unsigned short, bool, DisposeAfterUse::Flag, Audio::audio_3DO_SDX2_PersistentSpace*)",
  "Audio::Audio3DO_SDX2_Stream::endOfData() const",
  "Audio::Audio3DO_SDX2_Stream::readBuffer(short*, int)",
  "Audio::Audio3DO_SDX2_Stream::reset()",
  "Audio::Audio3DO_SDX2_Stream::rewind()",
  "Audio::Audio3DO_SDX2_Stream::~Audio3DO_SDX2_Stream()",
  "Audio::AudioStream::endOfStream() const",
  "Audio::Channel::Channel(Audio::Mixer*, Audio::Mixer::SoundType, Audio::AudioStream*, DisposeAfterUse::Flag, bool, int, bool)",
  "Audio::Channel::getElapsedTime()",
  "Audio::Channel::loop()",
  "Audio::Channel::pause(bool)",
  "Audio::Channel::setBalance(signed char)",
  "Audio::Channel::setVolume(unsigned char)",
  "Audio::Channel::updateChannelVolumes()",
  "Audio::Channel::~Channel()",
  "Audio::CopyRateConverter<false, false, false>::flow(Audio::AudioStream&, short*, unsigned int, unsigned short, unsigned short)",
  "Audio::CopyRateConverter<false, true, false>::flow(Audio::AudioStream&, short*, unsigned int, unsigned short, unsigned short)",
  "Audio::CopyRateConverter<true, false, false>::flow(Audio::AudioStream&, short*, unsigned int, unsigned short, unsigned short)",
  "Audio::CopyRateConverter<true, true, false>::flow(Audio::AudioStream&, short*, unsigned int, unsigned short, unsigned short)",
  "Audio::CopyRateConverter<true, true, true>::flow(Audio::AudioStream&, short*, unsigned int, unsigned short, unsigned short)",
  "Audio::DK3_ADPCMStream::readBuffer(short*, int)",
  "Audio::DK3_ADPCMStream::~DK3_ADPCMStream()",
  "Audio::DVI_ADPCMStream::readBuffer(short*, int)",
  "Audio::DVI_ADPCMStream::~DVI_ADPCMStream()",
  "Audio::ForcedMonoAudioStream::getRate() const",
  "Audio::ForcedMonoAudioStream::~ForcedMonoAudioStream()",
  "Audio::G711ALawStream::~G711ALawStream()",
  "Audio::G711AudioStream::endOfData() const",
  "Audio::G711AudioStream::getLength() const",
  "Audio::G711AudioStream::readBuffer(short*, int)",
  "Audio::G711AudioStream::seek(Audio::Timestamp const&)",
  "Audio::G711MuLawStream::~G711MuLawStream()",
  "Audio::Infogrames::Infogrames(Audio::Infogrames::Instruments&, bool, int, int)",
  "Audio::Infogrames::Instruments::load(Common::SeekableReadStream&)",
  "Audio::Infogrames::Instruments::load(char const*)",
  "Audio::Infogrames::getNextSample(Audio::Infogrames::Channel&)",
  "Audio::Infogrames::interrupt()",
  "Audio::Infogrames::load(Common::SeekableReadStream&)",
  "Audio::Infogrames::load(char const*)",
  "Audio::LimitingAudioStream::endOfData() const",
  "Audio::LimitingAudioStream::endOfStream() const",
  "Audio::LimitingAudioStream::getRate() const",
  "Audio::LimitingAudioStream::isStereo() const",
  "Audio::LimitingAudioStream::readBuffer(short*, int)",
  "Audio::LimitingAudioStream::~LimitingAudioStream()",
  "Audio::LinearRateConverter<false, false, false>::flow(Audio::AudioStream&, short*, unsigned int, unsigned short, unsigned short)",
  "Audio::LinearRateConverter<false, true, false>::flow(Audio::AudioStream&, short*, unsigned int, unsigned short, unsigned short)",
  "Audio::LinearRateConverter<true, false, false>::flow(Audio::AudioStream&, short*, unsigned int, unsigned short, unsigned short)",
  "Audio::LinearRateConverter<true, true, false>::flow(Audio::AudioStream&, short*, unsigned int, unsigned short, unsigned short)",
  "Audio::LinearRateConverter<true, true, true>::flow(Audio::AudioStream&, short*, unsigned int, unsigned short, unsigned short)",
  "Audio::LoopingAudioStream::LoopingAudioStream(Audio::RewindableAudioStream*, unsigned int, DisposeAfterUse::Flag, bool)",
  "Audio::LoopingAudioStream::LoopingAudioStream(Common::DisposablePtr<Audio::RewindableAudioStream, Common::DefaultDeleter<Audio::RewindableAudioStream>>&&, unsigned int, bool)",
  "Audio::LoopingAudioStream::endOfData() const",
  "Audio::LoopingAudioStream::getRate() const",
  "Audio::LoopingAudioStream::isStereo() const",
  "Audio::LoopingAudioStream::readBuffer(short*, int)",
  "Audio::LoopingAudioStream::~LoopingAudioStream()",
  "Audio::MSIma_ADPCMStream::readBuffer(short*, int)",
  "Audio::MSIma_ADPCMStream::~MSIma_ADPCMStream()",
  "Audio::MSIma_ADPCMStream::~MSIma_ADPCMStream().1Audio::MS_ADPCMStream::endOfData() const",
  "Audio::MS_ADPCMStream::readBuffer(short*, int)",
  "Audio::MS_ADPCMStream::~MS_ADPCMStream()",
  "Audio::MaxTrax::MaxTrax(int, bool, unsigned short, unsigned short)",
  "Audio::MaxTrax::advanceSong(int)",
  "Audio::MaxTrax::interrupt()",
  "Audio::MaxTrax::load(Common::SeekableReadStream&, bool, bool)",
  "Audio::MaxTrax::noteOn(Audio::MaxTrax::ChannelContext&, unsigned char, unsigned short, unsigned short)",
  "Audio::MaxTrax::pickvoice(unsigned int, short)",
  "Audio::MaxTrax::playNote(unsigned char, unsigned char, unsigned short, unsigned short, bool)",
  "Audio::MaxTrax::playSong(int, bool)",
  "Audio::MaxTrax::setSignalCallback(void (*)(int))",
  "Audio::MaxTrax::setTempo(unsigned short)",
  "Audio::MaxTrax::stopMusic()",
  "Audio::MaxTrax::~MaxTrax()",
  "Audio::MidiDriver_Miles_AdLib::MidiDriver_Miles_AdLib(Audio::InstrumentEntry*, unsigned short)",
  "Audio::MidiDriver_Miles_AdLib::applySourceVolume(unsigned char)",
  "Audio::MidiDriver_Miles_AdLib::close()",
  "Audio::MidiDriver_Miles_AdLib::controlChange(unsigned char, unsigned char, unsigned char)",
  "Audio::MidiDriver_Miles_AdLib::deinitSource(unsigned char)",
  "Audio::MidiDriver_Miles_AdLib::metaEvent(signed char, unsigned char, unsigned char*, unsigned short)",
  "Audio::MidiDriver_Miles_AdLib::noteOff(unsigned char, unsigned char)",
  "Audio::MidiDriver_Miles_AdLib::noteOn(unsigned char, unsigned char, unsigned char)",
  "Audio::MidiDriver_Miles_AdLib::open()",
  "Audio::MidiDriver_Miles_AdLib::pitchBendChange(unsigned char, unsigned char, unsigned char)",
  "Audio::MidiDriver_Miles_AdLib::prioritySort()",
  "Audio::MidiDriver_Miles_AdLib::programChange(unsigned char, unsigned char)",
  "Audio::MidiDriver_Miles_AdLib::releaseFmVoice(unsigned char)",
  "Audio::MidiDriver_Miles_AdLib::releaseSustain(unsigned char)",
  "Audio::MidiDriver_Miles_AdLib::resetAdLib()",
  "Audio::MidiDriver_Miles_AdLib::resetAdLibFMVoiceChannelRegisters(unsigned char, unsigned char)",
  "Audio::MidiDriver_Miles_AdLib::resetAdLibOperatorRegisters(unsigned char, unsigned char)",
  "Audio::MidiDriver_Miles_AdLib::send(signed char, unsigned int)",
  "Audio::MidiDriver_Miles_AdLib::send(unsigned int)",
  "Audio::MidiDriver_Miles_AdLib::setRegister(int, int)",
  "Audio::MidiDriver_Miles_AdLib::setRegisterStereo(unsigned char, unsigned char, unsigned char)",
  "Audio::MidiDriver_Miles_AdLib::stopAllNotes(unsigned char, unsigned char)",
  "Audio::MidiDriver_Miles_AdLib::updatePhysicalFmVoice(unsigned char, bool, unsigned short)",
  "Audio::MidiDriver_Miles_AdLib::~MidiDriver_Miles_AdLib()",
  "Audio::MidiDriver_Miles_AdLib_create(Common::String const&, Common::String const&, Common::SeekableReadStream*, Common::SeekableReadStream*)",
  "Audio::MidiDriver_Miles_MIDI_create(MusicType, Common::String const&)",
  "Audio::MidiDriver_Miles_MT32_create(Common::String const&)",
  "Audio::MidiDriver_Miles_Midi::MidiDriver_Miles_Midi(MusicType, Audio::MilesMT32InstrumentEntry*, unsigned short)",
  "Audio::MidiDriver_Miles_Midi::addActiveNote(unsigned char, unsigned char, signed char)",
  "Audio::MidiDriver_Miles_Midi::applySourceVolume(unsigned char)",
  "Audio::MidiDriver_Miles_Midi::deinitSource(unsigned char)",
  "Audio::MidiDriver_Miles_Midi::initControlData()",
  "Audio::MidiDriver_Miles_Midi::initMidiDevice()",
  "Audio::MidiDriver_Miles_Midi::installCustomTimbre(unsigned char, unsigned char)",
  "Audio::MidiDriver_Miles_Midi::lockChannel(unsigned char, unsigned char)",
  "Audio::MidiDriver_Miles_Midi::processXMIDITimbreChunk(unsigned char const*, unsigned int)",
  "Audio::MidiDriver_Miles_Midi::programChange(unsigned char, unsigned char, signed char, MidiDriver_MT32GM::MidiChannelControlData&, bool)",
  "Audio::MidiDriver_Miles_Midi::removeActiveNote(unsigned char, unsigned char, signed char)",
  "Audio::MidiDriver_Miles_Midi::removeActiveNotes(unsigned char, bool)",
  "Audio::MidiDriver_Miles_Midi::send(signed char, unsigned int)",
  "Audio::MidiDriver_Miles_Midi::setupPatch(unsigned char, unsigned char, bool)",
  "Audio::MidiDriver_Miles_Midi::stopAllNotes(bool)",
  "Audio::MidiDriver_Miles_Midi::stopNotesOnChannel(unsigned char)",
  "Audio::MidiDriver_Miles_Midi::unlockChannel(unsigned char)",
  "Audio::MidiDriver_Miles_Midi::writePatchByte(unsigned char, unsigned char, unsigned char)",
  "Audio::MidiDriver_Miles_Midi::writePatchTimbre(unsigned char, unsigned char, unsigned char, bool)",
  "Audio::MidiDriver_Miles_Midi::writeRhythmSetup(unsigned char, unsigned char)",
  "Audio::MidiDriver_Miles_Midi::writeToSystemArea(unsigned char, unsigned char)",
  "Audio::MidiDriver_Miles_Midi::~MidiDriver_Miles_Midi()",
  "Audio::MidiPlayer::MidiPlayer()",
  "Audio::MidiPlayer::createDriver(int)",
  "Audio::MidiPlayer::endOfTrack()",
  "Audio::MidiPlayer::metaEvent(unsigned char, unsigned char*, unsigned short)",
  "Audio::MidiPlayer::onTimer()",
  "Audio::MidiPlayer::resume()",
  "Audio::MidiPlayer::send(unsigned int)",
  "Audio::MidiPlayer::sendToChannel(unsigned char, unsigned int)",
  "Audio::MidiPlayer::setVolume(int)",
  "Audio::MidiPlayer::stop()",
  "Audio::MidiPlayer::syncVolume()",
  "Audio::MidiPlayer::timerCallback(void*)",
  "Audio::MidiPlayer::~MidiPlayer()",
  "Audio::MixerImpl::MixerImpl(unsigned int, bool, unsigned int)",
  "Audio::MixerImpl::getElapsedTime(Audio::SoundHandle)",
  "Audio::MixerImpl::getSoundElapsedTime(Audio::SoundHandle)",
  "Audio::MixerImpl::getSoundID(Audio::SoundHandle)",
  "Audio::MixerImpl::hasActiveChannelOfType(Audio::Mixer::SoundType)",
  "Audio::MixerImpl::insertChannel(Audio::SoundHandle*, Audio::Channel*)",
  "Audio::MixerImpl::isReady() const",
  "Audio::MixerImpl::isSoundHandleActive(Audio::SoundHandle)",
  "Audio::MixerImpl::isSoundIDActive(int)",
  "Audio::MixerImpl::loopChannel(Audio::SoundHandle)",
  "Audio::MixerImpl::mixCallback(unsigned char*, unsigned int)",
  "Audio::MixerImpl::muteSoundType(Audio::Mixer::SoundType, bool)",
  "Audio::MixerImpl::pauseHandle(Audio::SoundHandle, bool)",
  "Audio::MixerImpl::pauseID(int, bool)",
  "Audio::MixerImpl::playStream(Audio::Mixer::SoundType, Audio::SoundHandle*, Audio::AudioStream*, int, unsigned char, signed char, DisposeAfterUse::Flag, bool, bool)",
  "Audio::MixerImpl::setChannelBalance(Audio::SoundHandle, signed char)",
  "Audio::MixerImpl::setChannelVolume(Audio::SoundHandle, unsigned char)",
  "Audio::MixerImpl::setReady(bool)",
  "Audio::MixerImpl::setVolumeForSoundType(Audio::Mixer::SoundType, int)",
  "Audio::MixerImpl::stopAll()",
  "Audio::MixerImpl::stopHandle(Audio::SoundHandle)",
  "Audio::MixerImpl::stopID(int)",
  "Audio::MixerImpl::~MixerImpl()",
  "Audio::NullAudioStream::getRate() const",
  "Audio::Oki_ADPCMStream::endOfData() const",
  "Audio::Oki_ADPCMStream::readBuffer(short*, int)",
  "Audio::Oki_ADPCMStream::~Oki_ADPCMStream()",
  "Audio::PCSpeaker::PCSpeaker(int)",
  "Audio::PCSpeaker::isPlaying() const",
  "Audio::PCSpeaker::play(Audio::PCSpeaker::WaveForm, int, int)",
  "Audio::PCSpeaker::playQueue(Audio::PCSpeaker::WaveForm, float, unsigned int)",
  "Audio::PCSpeaker::readBuffer(short*, int)",
  "Audio::PCSpeaker::stop(int)",
  "Audio::PCSpeaker::~PCSpeaker()",
  "Audio::PacketizedADPCMStream::makeStream(Common::SeekableReadStream*)",
  "Audio::PacketizedADPCMStream::~PacketizedADPCMStream()",
  "Audio::PacketizedRawStream::makeStream(Common::SeekableReadStream*)",
  "Audio::PacketizedRawStream::~PacketizedRawStream()",
  "Audio::Paula::Paula(bool, int, unsigned int, Audio::Paula::FilterMode, int)",
  "Audio::Paula::readBuffer(short*, int)",
  "Audio::QDM2Stream::QDM2Stream(Common::SeekableReadStream*, DisposeAfterUse::Flag)",
  "Audio::QDM2Stream::decodeFrame(Common::SeekableReadStream&)",
  "Audio::QDM2Stream::fill_coding_method_array(signed char (*) [30][64], signed char (*) [30][64], signed char (*) [30][64], int, int, int, int)",
  "Audio::QDM2Stream::fix_coding_method_array(int, int, signed char (*) [30][64])",
  "Audio::QDM2Stream::initVlc()",
  "Audio::QDM2Stream::init_quantized_coeffs_elem0(signed char*, Common::BitStreamImpl<Common::BitStreamMemoryStream, unsigned long long, 32, true, false>*, int)",
  "Audio::QDM2Stream::init_tone_level_dequantization(Common::BitStreamImpl<Common::BitStreamMemoryStream, unsigned long long, 32, true, false>*, int)",
  "Audio::QDM2Stream::process_subpacket_10(Audio::QDM2SubPNode*, int)",
  "Audio::QDM2Stream::process_subpacket_11(Audio::QDM2SubPNode*, int)",
  "Audio::QDM2Stream::process_subpacket_12(Audio::QDM2SubPNode*, int)",
  "Audio::QDM2Stream::process_subpacket_9(Audio::QDM2SubPNode*)",
  "Audio::QDM2Stream::process_synthesis_subpackets(Audio::QDM2SubPNode*)",
  "Audio::QDM2Stream::qdm2_decodeFrame(Common::SeekableReadStream&, Audio::QueuingAudioStream*)",
  "Audio::QDM2Stream::qdm2_decode_fft_packets()",
  "Audio::QDM2Stream::qdm2_decode_super_block()",
  "Audio::QDM2Stream::qdm2_fft_decode_tones(int, Common::BitStreamImpl<Common::BitStreamMemoryStream, unsigned long long, 32, true, false>*, int)",
  "Audio::QDM2Stream::synthfilt_build_sb_samples(Common::BitStreamImpl<Common::BitStreamMemoryStream, unsigned long long, 32, true, false>*, int, int, int)",
  "Audio::QueuingAudioStream::queueBuffer(unsigned char*, unsigned int, DisposeAfterUse::Flag, unsigned char)",
  "Audio::QueuingAudioStreamImpl::endOfData() const",
  "Audio::QueuingAudioStreamImpl::endOfStream() const",
  "Audio::QueuingAudioStreamImpl::finish()",
  "Audio::QueuingAudioStreamImpl::numQueuedStreams() const",
  "Audio::QueuingAudioStreamImpl::queueAudioStream(Audio::AudioStream*, DisposeAfterUse::Flag)",
  "Audio::QueuingAudioStreamImpl::readBuffer(short*, int)",
  "Audio::QueuingAudioStreamImpl::~QueuingAudioStreamImpl()",
  "Audio::QuickTimeAudioDecoder::AudioSampleDesc::createAudioStream(Common::SeekableReadStream*) const",
  "Audio::QuickTimeAudioDecoder::AudioSampleDesc::initCodec()",
  "Audio::QuickTimeAudioDecoder::AudioSampleDesc::isAudioCodecSupported() const",
  "Audio::QuickTimeAudioDecoder::AudioSampleDesc::~AudioSampleDesc()",
  "Audio::QuickTimeAudioDecoder::QuickTimeAudioDecoder()",
  "Audio::QuickTimeAudioDecoder::QuickTimeAudioTrack::QuickTimeAudioTrack(Audio::QuickTimeAudioDecoder*, Common::QuickTimeParser::Track*)",
  "Audio::QuickTimeAudioDecoder::QuickTimeAudioTrack::createStream() const",
  "Audio::QuickTimeAudioDecoder::QuickTimeAudioTrack::endOfData() const",
  "Audio::QuickTimeAudioDecoder::QuickTimeAudioTrack::enterNewEdit(Audio::Timestamp const&)",
  "Audio::QuickTimeAudioDecoder::QuickTimeAudioTrack::enterNewEdit(Audio::Timestamp const&)virtual thunk to Audio::QuickTimeAudioDecoder::QuickTimeAudioTrack::~QuickTimeAudioTrack()",
  "Audio::QuickTimeAudioDecoder::QuickTimeAudioTrack::findEdit(Audio::Timestamp const&)",
  "Audio::QuickTimeAudioDecoder::QuickTimeAudioTrack::getChunkLength(unsigned int, bool) const",
  "Audio::QuickTimeAudioDecoder::QuickTimeAudioTrack::getCurrentTrackTime() const",
  "Audio::QuickTimeAudioDecoder::QuickTimeAudioTrack::getRate() const",
  "Audio::QuickTimeAudioDecoder::QuickTimeAudioTrack::isStereo() const",
  "Audio::QuickTimeAudioDecoder::QuickTimeAudioTrack::queueAudio(Audio::Timestamp const&)",
  "Audio::QuickTimeAudioDecoder::QuickTimeAudioTrack::queueRemainingAudio()",
  "Audio::QuickTimeAudioDecoder::QuickTimeAudioTrack::queueStream(Audio::AudioStream*, Audio::Timestamp const&)",
  "Audio::QuickTimeAudioDecoder::QuickTimeAudioTrack::readBuffer(short*, int)Audio::QuickTimeAudioDecoder::QuickTimeAudioTrack::readAudioChunk(unsigned int)",
  "Audio::QuickTimeAudioDecoder::QuickTimeAudioTrack::seek(Audio::Timestamp const&)",
  "Audio::QuickTimeAudioDecoder::QuickTimeAudioTrack::skipSamples(Audio::Timestamp const&, Audio::AudioStream*)",
  "Audio::QuickTimeAudioDecoder::QuickTimeAudioTrack::~QuickTimeAudioTrack()",
  "Audio::QuickTimeAudioDecoder::QuickTimeAudioTrack::~QuickTimeAudioTrack().2",
  "Audio::QuickTimeAudioDecoder::init()",
  "Audio::QuickTimeAudioDecoder::loadAudioFile(Common::String const&)",
  "Audio::QuickTimeAudioDecoder::loadAudioStream(Common::SeekableReadStream*, DisposeAfterUse::Flag)",
  "Audio::QuickTimeAudioDecoder::readSampleDesc(Common::QuickTimeParser::Track*, unsigned int, unsigned int)",
  "Audio::QuickTimeAudioDecoder::~QuickTimeAudioDecoder()",
  "Audio::QuickTimeAudioStream::endOfData() const",
  "Audio::QuickTimeAudioStream::getRate() const",
  "Audio::QuickTimeAudioStream::isStereo() const",
  "Audio::QuickTimeAudioStream::~QuickTimeAudioStream()",
  "Audio::RateConverter* Audio::makeRateConverter<false, false, false>(unsigned int, unsigned int)",
  "Audio::RateConverter* Audio::makeRateConverter<false, true, false>(unsigned int, unsigned int)",
  "Audio::RateConverter* Audio::makeRateConverter<true, false, false>(unsigned int, unsigned int)",
  "Audio::RateConverter* Audio::makeRateConverter<true, true, false>(unsigned int, unsigned int)",
  "Audio::RateConverter* Audio::makeRateConverter<true, true, true>(unsigned int, unsigned int)",
  "Audio::RawStream<1, false, false>::fillBuffer(int)",
  "Audio::RawStream<1, false, false>::readBuffer(short*, int)",
  "Audio::RawStream<1, false, false>::seek(Audio::Timestamp const&)",
  "Audio::RawStream<1, false, false>::~RawStream()",
  "Audio::RawStream<1, true, false>::fillBuffer(int)",
  "Audio::RawStream<1, true, false>::readBuffer(short*, int)",
  "Audio::RawStream<1, true, false>::seek(Audio::Timestamp const&)",
  "Audio::RawStream<1, true, false>::~RawStream()",
  "Audio::RawStream<2, false, false>::fillBuffer(int)",
  "Audio::RawStream<2, false, false>::readBuffer(short*, int)",
  "Audio::RawStream<2, false, false>::seek(Audio::Timestamp const&)",
  "Audio::RawStream<2, false, false>::~RawStream()",
  "Audio::RawStream<2, false, true>::fillBuffer(int)",
  "Audio::RawStream<2, false, true>::readBuffer(short*, int)",
  "Audio::RawStream<2, false, true>::seek(Audio::Timestamp const&)",
  "Audio::RawStream<2, true, false>::fillBuffer(int)",
  "Audio::RawStream<2, true, false>::readBuffer(short*, int)",
  "Audio::RawStream<2, true, false>::seek(Audio::Timestamp const&)",
  "Audio::RawStream<2, true, false>::~RawStream()",
  "Audio::RawStream<2, true, true>::fillBuffer(int)",
  "Audio::RawStream<2, true, true>::readBuffer(short*, int)",
  "Audio::RawStream<2, true, true>::seek(Audio::Timestamp const&)",
  "Audio::RawStream<2, true, true>::~RawStream()",
  "Audio::RawStream<3, false, false>::fillBuffer(int)",
  "Audio::RawStream<3, false, false>::readBuffer(short*, int)",
  "Audio::RawStream<3, false, false>::seek(Audio::Timestamp const&)",
  "Audio::RawStream<3, false, false>::~RawStream()",
  "Audio::RawStream<3, false, false>::~RawStream()Audio::RawStream<2, false, true>::~RawStream()",
  "Audio::RawStream<3, false, true>::fillBuffer(int)",
  "Audio::RawStream<3, false, true>::readBuffer(short*, int)",
  "Audio::RawStream<3, false, true>::seek(Audio::Timestamp const&)",
  "Audio::RawStream<3, false, true>::~RawStream()",
  "Audio::RawStream<3, true, false>::fillBuffer(int)",
  "Audio::RawStream<3, true, false>::readBuffer(short*, int)",
  "Audio::RawStream<3, true, false>::seek(Audio::Timestamp const&)",
  "Audio::RawStream<3, true, false>::~RawStream()",
  "Audio::RawStream<3, true, true>::fillBuffer(int)",
  "Audio::RawStream<3, true, true>::readBuffer(short*, int)",
  "Audio::RawStream<3, true, true>::seek(Audio::Timestamp const&)",
  "Audio::RawStream<3, true, true>::~RawStream()",
  "Audio::Rjp1::Rjp1(int, bool)",
  "Audio::Rjp1::interrupt()",
  "Audio::Rjp1::load(Common::SeekableReadStream*, Common::SeekableReadStream*)",
  "Audio::Rjp1::modulateVolume(Audio::Rjp1Channel*)",
  "Audio::Rjp1::modulateVolumeEnvelope(Audio::Rjp1Channel*)",
  "Audio::Rjp1::playChannel(Audio::Rjp1Channel*)",
  "Audio::Rjp1::startSong(int)",
  "Audio::SeekableAudioStream::openStreamFile(Common::String const&)",
  "Audio::SimpleRateConverter<false, false, false>::flow(Audio::AudioStream&, short*, unsigned int, unsigned short, unsigned short)",
  "Audio::SimpleRateConverter<false, true, false>::flow(Audio::AudioStream&, short*, unsigned int, unsigned short, unsigned short)",
  "Audio::SimpleRateConverter<true, false, false>::flow(Audio::AudioStream&, short*, unsigned int, unsigned short, unsigned short)",
  "Audio::SimpleRateConverter<true, true, false>::flow(Audio::AudioStream&, short*, unsigned int, unsigned short, unsigned short)",
  "Audio::SimpleRateConverter<true, true, true>::flow(Audio::AudioStream&, short*, unsigned int, unsigned short, unsigned short)",
  "Audio::SoundFx::SoundFx(int, bool, bool, int)",
  "Audio::SoundFx::handleTick()",
  "Audio::SoundFx::interrupt()",
  "Audio::SoundFx::load(Common::SeekableReadStream*, unsigned char* (*)(char const*, unsigned int*))",
  "Audio::SoundFx::play()",
  "Audio::SoundFx::updateEffects(int)",
  "Audio::StatelessPacketizedAudioStream::endOfData() const",
  "Audio::StatelessPacketizedAudioStream::endOfStream() const",
  "Audio::StatelessPacketizedAudioStream::finish()",
  "Audio::StatelessPacketizedAudioStream::queuePacket(Common::SeekableReadStream*)",
  "Audio::StatelessPacketizedAudioStream::readBuffer(short*, int)",
  "Audio::SubLoopingAudioStream::SubLoopingAudioStream(Audio::SeekableAudioStream*, unsigned int, Audio::Timestamp, Audio::Timestamp, DisposeAfterUse::Flag)",
  "Audio::SubLoopingAudioStream::endOfData() const",
  "Audio::SubLoopingAudioStream::getRate() const",
  "Audio::SubLoopingAudioStream::isStereo() const",
  "Audio::SubLoopingAudioStream::readBuffer(short*, int)",
  "Audio::SubLoopingAudioStream::~SubLoopingAudioStream()",
  "Audio::SubSeekableAudioStream::SubSeekableAudioStream(Audio::SeekableAudioStream*, Audio::Timestamp, Audio::Timestamp, DisposeAfterUse::Flag)",
  "Audio::SubSeekableAudioStream::endOfData() const",
  "Audio::SubSeekableAudioStream::endOfStream() const",
  "Audio::SubSeekableAudioStream::getRate() const",
  "Audio::SubSeekableAudioStream::isStereo() const",
  "Audio::SubSeekableAudioStream::readBuffer(short*, int)",
  "Audio::SubSeekableAudioStream::seek(Audio::Timestamp const&)",
  "Audio::SubSeekableAudioStream::~SubSeekableAudioStream()",
  "Audio::Tfmx::Tfmx(int, bool)",
  "Audio::Tfmx::advancePatterns()",
  "Audio::Tfmx::doMacro(int, int, int, int, int)",
  "Audio::Tfmx::doSfx(unsigned short, bool)",
  "Audio::Tfmx::doSong(int, bool)",
  "Audio::Tfmx::interrupt()",
  "Audio::Tfmx::load(Common::SeekableReadStream&, Common::SeekableReadStream&, bool)",
  "Audio::Tfmx::loadMdatFile(Common::SeekableReadStream&)",
  "Audio::Tfmx::loadSampleFile(unsigned int&, Common::SeekableReadStream&)",
  "Audio::Tfmx::macroRun(Audio::Tfmx::ChannelContext&)",
  "Audio::Tfmx::patternRun(Audio::Tfmx::PatternContext&)",
  "Audio::Tfmx::setModuleData(Audio::Tfmx&)",
  "Audio::Tfmx::setModuleData(Audio::Tfmx::MdatResource const*, signed char const*, unsigned int, bool)",
  "Audio::Tfmx::stopMacroEffect(int)",
  "Audio::Tfmx::trackRun(bool)",
  "Audio::VocStream::VocStream(Common::SeekableReadStream*, bool, DisposeAfterUse::Flag)",
  "Audio::VocStream::fillBuffer(int)",
  "Audio::VocStream::preProcess()",
  "Audio::VocStream::readBuffer(short*, int)",
  "Audio::VocStream::seek(Audio::Timestamp const&)",
  "Audio::VocStream::updateBlockIfNeeded()",
  "Audio::VocStream::~VocStream()",
  "Audio::VocStream::~VocStream().2",
  "Audio::Voice8Header::load(Common::ReadStream&)",
  "Audio::WMACodec::WMACodec(int, unsigned int, unsigned char, unsigned int, unsigned int, Common::SeekableReadStream*)",
  "Audio::WMACodec::decodeBlock(Common::BitStreamImpl<Common::SeekableReadStream, unsigned long long, 8, false, true>&)",
  "Audio::WMACodec::decodeChannels(Common::BitStreamImpl<Common::SeekableReadStream, unsigned long long, 8, false, true>&, int, bool, bool*)",
  "Audio::WMACodec::decodeExpHuffman(Common::BitStreamImpl<Common::SeekableReadStream, unsigned long long, 8, false, true>&, int)",
  "Audio::WMACodec::decodeExpLSP(Common::BitStreamImpl<Common::SeekableReadStream, unsigned long long, 8, false, true>&, int)",
  "Audio::WMACodec::decodeExponents(Common::BitStreamImpl<Common::SeekableReadStream, unsigned long long, 8, false, true>&, int, bool*)",
  "Audio::WMACodec::decodeFrame(Common::BitStreamImpl<Common::SeekableReadStream, unsigned long long, 8, false, true>&, short*)",
  "Audio::WMACodec::decodeFrame(Common::SeekableReadStream&)",
  "Audio::WMACodec::decodeNoise(Common::BitStreamImpl<Common::SeekableReadStream, unsigned long long, 8, false, true>&, int, bool*, int*)",
  "Audio::WMACodec::decodeRunLevel(Common::BitStreamImpl<Common::SeekableReadStream, unsigned long long, 8, false, true>&, Common::Huffman<Common::BitStreamImpl<Common::SeekableReadStream, unsigned long long, 8, false, true>> const&, float const*, unsigned short const*, int, float*, int, int, int, int, int)",
  "Audio::WMACodec::decodeSpectralCoef(Common::BitStreamImpl<Common::SeekableReadStream, unsigned long long, 8, false, true>&, bool, bool*, int*, int)",
  "Audio::WMACodec::decodeSuperFrame(Common::SeekableReadStream&)",
  "Audio::WMACodec::evalBlockLength(Common::BitStreamImpl<Common::SeekableReadStream, unsigned long long, 8, false, true>&)",
  "Audio::WMACodec::evalFlags(unsigned short, Common::SeekableReadStream*)",
  "Audio::WMACodec::getFlags(Common::SeekableReadStream*)",
  "Audio::WMACodec::getLargeVal(Common::BitStreamImpl<Common::SeekableReadStream, unsigned long long, 8, false, true>&)",
  "Audio::WMACodec::init(Common::SeekableReadStream*)",
  "Audio::WMACodec::initCoefHuffman(float)",
  "Audio::WMACodec::initCoefHuffman(unsigned short*&, float*&, unsigned short*&, Audio::WMACoefHuffmanParam const&)",
  "Audio::WMACodec::initExponents()",
  "Audio::WMACodec::initMDCT()",
  "Audio::WMACodec::initNoise()",
  "Audio::WMACodec::readTotalGain(Common::BitStreamImpl<Common::SeekableReadStream, unsigned long long, 8, false, true>&)",
  "Audio::XAStream::readBuffer(short*, int)",
  "Audio::XAStream::rewind()",
  "Audio::XAStream::seekToPos(unsigned int)",
  "Audio::XAStream::~XAStream()",
  "Audio::XA_ADPCMStream::endOfData() const",
  "Audio::XA_ADPCMStream::readBuffer(short*, int)",
  "Audio::XA_ADPCMStream::~XA_ADPCMStream()",
  "Audio::XanDPCMStream::XanDPCMStream(int, int)",
  "Audio::XanDPCMStream::makeStream(Common::SeekableReadStream*)",
  "Audio::XanDPCMStream::~XanDPCMStream()",
  "Audio::Xan_DPCMStream::endOfData() const",
  "Audio::Xan_DPCMStream::readBuffer(short*, int)",
  "Audio::build_table(Audio::VLC*, int, int, void const*, int, int, void const*, int, int, void const*, int, int, int, int, int)",
  "Audio::initVlcSparse(Audio::VLC*, int, int, void const*, int, int, void const*, int, int, void const*, int, int)",
  "Audio::loadWAVFromStream(Common::SeekableReadStream&, int&, int&, unsigned char&, unsigned short*, int*, int*)",
  "Audio::make3DO_ADP4AudioStream(Common::SeekableReadStream*, unsigned short, bool, unsigned int*, DisposeAfterUse::Flag, Audio::audio_3DO_ADP4_PersistentSpace*)",
  "Audio::make8SVXStream(Common::ReadStream&, bool)",
  "Audio::makeADPCMStream(Common::SeekableReadStream*, DisposeAfterUse::Flag, unsigned int, Audio::ADPCMType, int, int, unsigned int)",
  "Audio::makeAIFFStream(Common::SeekableReadStream*, DisposeAfterUse::Flag)",
  "Audio::makeALawStream(Common::SeekableReadStream*, DisposeAfterUse::Flag, int, int)",
  "Audio::makeAPCStream(Common::SeekableReadStream&)",
  "Audio::makeAPCStream(unsigned int, bool)",
  "Audio::makeASFStream(Common::SeekableReadStream*, DisposeAfterUse::Flag)",
  "Audio::makeLimitingAudioStream(Audio::AudioStream*, Audio::Timestamp const&, DisposeAfterUse::Flag)",
  "Audio::makeLoopingAudioStream(Audio::RewindableAudioStream*, unsigned int)",
  "Audio::makeLoopingAudioStream(Audio::SeekableAudioStream*, Audio::Timestamp, Audio::Timestamp, unsigned int)",
  "Audio::makeMacSndStream(Common::SeekableReadStream*, DisposeAfterUse::Flag)",
  "Audio::makeModXmS3mStream(Common::SeekableReadStream*, DisposeAfterUse::Flag, int, int, int)",
  "Audio::makeMuLawStream(Common::SeekableReadStream*, DisposeAfterUse::Flag, int, int)",
  "Audio::makeNullAudioStream()",
  "Audio::makePacketizedADPCMStream(Audio::ADPCMType, int, int, unsigned int)",
  "Audio::makePacketizedRawStream(int, unsigned char)",
  "Audio::makeProtrackerStream(Common::SeekableReadStream*, int, int, bool, Modules::Module**)",
  "Audio::makeQDM2Decoder(Common::SeekableReadStream*, DisposeAfterUse::Flag)",
  "Audio::makeQueuingAudioStream(int, bool)",
  "Audio::makeQuickTimeStream(Common::SeekableReadStream*, DisposeAfterUse::Flag)",
  "Audio::makeQuickTimeStream(Common::String const&)",
  "Audio::makeRateConverter(unsigned int, unsigned int, bool, bool, bool)",
  "Audio::makeRawStream(Common::SeekableReadStream*, int, unsigned char, DisposeAfterUse::Flag)",
  "Audio::makeRawStream(unsigned char const*, unsigned int, int, unsigned char, DisposeAfterUse::Flag)",
  "Audio::makeRjp1Stream(Common::SeekableReadStream*, Common::SeekableReadStream*, int, int, bool)",
  "Audio::makeSilentAudioStream(int, bool)",
  "Audio::makeSoundFxStream(Common::SeekableReadStream*, unsigned char* (*)(char const*, unsigned int*), int, bool, bool, int)",
  "Audio::makeVOCStream(Common::SeekableReadStream*, unsigned char, DisposeAfterUse::Flag)",
  "Audio::makeWAVStream(Common::SeekableReadStream*, DisposeAfterUse::Flag)",
  "Audio::makeXAStream(Common::SeekableReadStream*, int, DisposeAfterUse::Flag)",
  "Audio::qdm2_get_vlc(Common::BitStreamImpl<Common::BitStreamMemoryStream, unsigned long long, 32, true, false>*, Audio::VLC*, int, int)",
  "Audio::readExtended(Common::SeekableReadStream&)",
  "AudioCDStream::AudioCDStream()",
  "AudioCDStream::forceStop()",
  "AudioCDStream::getLength() const",
  "AudioCDStream::onTimer()",
  "AudioCDStream::readBuffer(short*, int)",
  "AudioCDStream::readNextFrame()",
  "AudioCDStream::seek(Audio::Timestamp const&)",
  "AudioCDStream::shouldForceStop() const",
  "AudioCDStream::stopTimer()",
  "AudioCDStream::timerProc(void*)",
  "AudioCDStream::~AudioCDStream()",
  "AutoMusicPlugin::getDevices() const",
  "Avalanche::AvalancheMetaEngineDetection::~AvalancheMetaEngineDetection()",
  "BDF_Face_Done",
  "BDF_Glyph_Load",
  "Backends::Log::Log::close()",
  "Backends::Log::Log::open(Common::WriteStream*)",
  "Backends::Log::Log::print(char const*, bool)",
  "Backends::Log::Log::printTimeStamp()",
  "Base::addGames(Common::String const&, Common::String const&, Common::String const&, bool)",
  "Base::calcMD5(Common::FSNode&, int)",
  "Base::calcMD5Mac(Common::Path&, int)",
  "Base::createTemporaryTarget(Common::String const&, Common::String const&)",
  "Base::detectGames(Common::String const&, Common::String const&, Common::String const&, bool)",
  "Base::findGameMatchingName(Common::String const&)",
  "Base::getGameList(Common::FSNode const&)",
  "Base::listAllEngines()",
  "Base::listAudioDevices()",
  "Base::listEngines()",
  "Base::listThemes()",
  "Base::parseCommandLine(Common::HashMap<Common::String, Common::String, Common::IgnoreCase_Hash, Common::IgnoreCase_EqualTo>&, int, char const* const*)",
  "Base::processSettings(Common::String&, Common::HashMap<Common::String, Common::String, Common::IgnoreCase_Hash, Common::IgnoreCase_EqualTo>&, Common::Error&)",
  "Base::recAddGames(Common::FSNode const&, Common::String const&, Common::String const&, bool)",
  "Base::recListGames(Common::FSNode const&, Common::String const&, Common::String const&, bool)",
  "Base::registerDefaults()",
  "Base::runDetectorTest()",
  "Base::upgradeTargets()",
  "Base::usage(char const*, ...)",
  "BaseBackend::displayMessageOnOSD(Common::U32String const&)",
  "BaseBackend::fillScreen(unsigned int)",
  "BaseBackend::initBackend()",
  "BaseBackend::setScaler(char const*, int)",
  "BbvsMetaEngineDetection::~BbvsMetaEngineDetection()",
  "Bezier_Up",
  "BladeRunnerMetaEngineDetection::BladeRunnerMetaEngineDetection()",
  "BladeRunnerMetaEngineDetection::~BladeRunnerMetaEngineDetection()",
  "BuriedMetaEngineDetection::~BuriedMetaEngineDetection()",
  "C64MusicPlugin::getDevices() const",
  "CFF_Load_FD_Select",
  "CGE2::CGE2MetaEngineDetection::fallbackDetect(Common::HashMap<Common::String, Common::FSNode, Common::IgnoreCase_Hash, Common::IgnoreCase_EqualTo> const&, Common::FSList const&, ADDetectedGameExtraInfo**) const",
  "CGE2::CGE2MetaEngineDetection::~CGE2MetaEngineDetection()",
  "CGE2::EncryptedStream::EncryptedStream(CGE2::ResourceManager*, char const*)",
  "CGE2::EncryptedStream::eos()",
  "CGE2::EncryptedStream::err()",
  "CGE2::EncryptedStream::pos()",
  "CGE2::EncryptedStream::read(unsigned char*, unsigned int)",
  "CGE2::EncryptedStream::readLine()",
  "CGE2::EncryptedStream::readSint16LE()",
  "CGE2::EncryptedStream::seek(int)",
  "CGE2::EncryptedStream::size()",
  "CGE2::EncryptedStream::~EncryptedStream()",
  "CGE2::ResourceManager::ResourceManager()",
  "CGE2::ResourceManager::catRead(unsigned char*, unsigned short)",
  "CGE2::ResourceManager::exist(char const*)",
  "CGE2::ResourceManager::find(char const*)",
  "CGE2::ResourceManager::getPage(int, unsigned short)",
  "CGE2::ResourceManager::read(unsigned char*, unsigned short)",
  "CGE2::ResourceManager::seek(int, int)",
  "CGE2::ResourceManager::~ResourceManager()",
  "CGE::BtPage::readBTree(Common::ReadStream&)",
  "CGE::CGEMetaEngineDetection::fallbackDetect(Common::HashMap<Common::String, Common::FSNode, Common::IgnoreCase_Hash, Common::IgnoreCase_EqualTo> const&, Common::FSList const&, ADDetectedGameExtraInfo**) const",
  "CGE::CGEMetaEngineDetection::~CGEMetaEngineDetection()",
  "CGE::EncryptedStream::EncryptedStream(CGE::ResourceManager*, char const*)",
  "CGE::EncryptedStream::eos()",
  "CGE::EncryptedStream::pos()",
  "CGE::EncryptedStream::read(unsigned char*, unsigned int)",
  "CGE::EncryptedStream::readLine()",
  "CGE::EncryptedStream::seek(int)",
  "CGE::EncryptedStream::size()",
  "CGE::EncryptedStream::~EncryptedStream()",
  "CGE::ResourceManager::ResourceManager()",
  "CGE::ResourceManager::catRead(unsigned char*, unsigned short)",
  "CGE::ResourceManager::exist(char const*)",
  "CGE::ResourceManager::find(char const*)",
  "CGE::ResourceManager::getPage(int, unsigned short)",
  "CGE::ResourceManager::read(unsigned char*, unsigned short)",
  "CGE::ResourceManager::seek(int, int)",
  "CGE::ResourceManager::~ResourceManager()",
  "CMS::CMS::CMS()",
  "CMS::CMS::start(Common::Functor0<void>*, int)",
  "CMS::CMS::stop()",
  "CMS::CMS::~CMS()",
  "CMS::Config::create()",
  "CMS::EmulatedCMS::EmulatedCMS()",
  "CMS::EmulatedCMS::getRate() const",
  "CMS::EmulatedCMS::readBuffer(short*, int)",
  "CMS::EmulatedCMS::setCallbackFrequency(int)",
  "CMS::EmulatedCMS::startCallbacks(int)",
  "CMS::EmulatedCMS::stopCallbacks()",
  "CMS::EmulatedCMS::~EmulatedCMS()",
  "CMSMusicPlugin::getDevices() const",
  "ChRootFilesystemFactory::ChRootFilesystemFactory(Common::String const&)",
  "ChRootFilesystemFactory::makeCurrentDirectoryFileNode() const",
  "ChRootFilesystemFactory::makeFileNodePath(Common::String const&) const",
  "ChRootFilesystemFactory::makeRootFileNode() const",
  "ChRootFilesystemFactory::~ChRootFilesystemFactory()",
  "ChRootFilesystemNode::ChRootFilesystemNode(Common::String const&, Common::String const&)",
  "ChRootFilesystemNode::ChRootFilesystemNode(Common::String const&, POSIXFilesystemNode*)",
  "ChRootFilesystemNode::addPathComponent(Common::String const&, Common::String const&)",
  "ChRootFilesystemNode::createDirectory()",
  "ChRootFilesystemNode::createReadStream()",
  "ChRootFilesystemNode::createWriteStream()",
  "ChRootFilesystemNode::exists() const",
  "ChRootFilesystemNode::getChild(Common::String const&) constChRootFilesystemNode::getPath() const",
  "ChRootFilesystemNode::getChildren(Common::Array<AbstractFSNode*>&, Common::FSNode::ListMode, bool) const",
  "ChRootFilesystemNode::getName() const",
  "ChRootFilesystemNode::isDirectory() const",
  "ChRootFilesystemNode::isReadable() const",
  "ChRootFilesystemNode::isWritable() const",
  "ChRootFilesystemNode::~ChRootFilesystemNode()",
  "ChainedGamesManager::clear()",
  "ChainedGamesManager::pop(Common::String&, int&)",
  "ChainedGamesManager::push(Common::String, int)",
  "ChainedGamesManager::~ChainedGamesManager()",
  "ChewyMetaEngineDetection::~ChewyMetaEngineDetection()",
  "Chunk::SetData(void const*, unsigned int)",
  "CineMetaEngineDetection::~CineMetaEngineDetection()",
  "Common::(anonymous namespace)::BufferedReadStream::clearErr()",
  "Common::(anonymous namespace)::BufferedReadStream::err() const",
  "Common::(anonymous namespace)::BufferedReadStream::read(void*, unsigned int)",
  "Common::(anonymous namespace)::BufferedReadStream::~BufferedReadStream()",
  "Common::(anonymous namespace)::BufferedSeekableReadStream::~BufferedSeekableReadStream()",
  "Common::(anonymous namespace)::BufferedWriteStream::flush()",
  "Common::(anonymous namespace)::BufferedWriteStream::pos() const",
  "Common::(anonymous namespace)::BufferedWriteStream::seek(long long, int)",
  "Common::(anonymous namespace)::BufferedWriteStream::size() const",
  "Common::(anonymous namespace)::BufferedWriteStream::~BufferedWriteStream()",
  "Common::(anonymous namespace)::InstallShieldCabinet::createReadStreamForMember(Common::Path const&) const",
  "Common::(anonymous namespace)::InstallShieldCabinet::getMember(Common::Path const&) const",
  "Common::(anonymous namespace)::InstallShieldCabinet::hasFile(Common::Path const&) const",
  "Common::(anonymous namespace)::InstallShieldCabinet::listMembers(Common::List<Common::SharedPtr<Common::ArchiveMember>>&) const",
  "Common::(anonymous namespace)::InstallShieldCabinet::~InstallShieldCabinet()",
  "Common::AchievementsManager::AchievementsManager()",
  "Common::AchievementsManager::clearAchievement(Common::String const&)",
  "Common::AchievementsManager::getAchievementCount() const",
  "Common::AchievementsManager::getAchievementDescription(unsigned short) const",
  "Common::AchievementsManager::getAverageRateStatFloat(Common::String const&) const",
  "Common::AchievementsManager::getCurrentLang() const",
  "Common::AchievementsManager::getStatFloat(Common::String const&) const",
  "Common::AchievementsManager::getStatFloatEx(Common::String const&, Common::String const&) const",
  "Common::AchievementsManager::getStatInt(Common::String const&) const",
  "Common::AchievementsManager::getStatRaw(Common::String const&) const",
  "Common::AchievementsManager::isAchieved(Common::String const&) const",
  "Common::AchievementsManager::loadAchievementsData(char const*, char const*)",
  "Common::AchievementsManager::resetAllAchievements()",
  "Common::AchievementsManager::resetAllStats()",
  "Common::AchievementsManager::setAchievement(Common::String const&)",
  "Common::AchievementsManager::setActiveDomain(Common::AchievementsInfo const&)",
  "Common::AchievementsManager::setSpecialString(Common::String const&, Common::String const&)",
  "Common::AchievementsManager::setStatFloat(Common::String const&, float)",
  "Common::AchievementsManager::setStatFloatEx(Common::String const&, float, Common::String const&) const",
  "Common::AchievementsManager::setStatInt(Common::String const&, int)",
  "Common::AchievementsManager::unsetActiveDomain()",
  "Common::AchievementsManager::updateAverageRateStatFloat(Common::String const&, float, float)",
  "Common::AchievementsManager::~AchievementsManager()",
  "Common::Action::Action(char const*, Common::U32String const&)",
  "Common::Action::addDefaultInputMapping(Common::String const&)",
  "Common::Archive::listMatchingMembers(Common::List<Common::SharedPtr<Common::ArchiveMember>>&, Common::Path const&) const",
  "Common::ArchiveMember::getDisplayName() const",
  "Common::ArjArchive::ArjArchive(Common::Array<Common::String> const&)",
  "Common::ArjArchive::ArjArchive(Common::Array<Common::String> const&)Common::decompressDCL(Common::ReadStream*, unsigned char*, unsigned int, unsigned int)",
  "Common::ArjArchive::hasFile(Common::Path const&) const",
  "Common::ArjArchive::listMembers(Common::List<Common::SharedPtr<Common::ArchiveMember>>&) const",
  "Common::ArjArchive::readContentsForPath(Common::String const&) const",
  "Common::ArjArchive::translatePath(Common::Path const&) const",
  "Common::ArjArchive::~ArjArchive()",
  "Common::ArjDecoder::decode(int)",
  "Common::ArjDecoder::decode_c()",
  "Common::ArjDecoder::decode_f(int)",
  "Common::ArjDecoder::decode_len()",
  "Common::ArjDecoder::decode_p()",
  "Common::ArjDecoder::decode_ptr()",
  "Common::ArjDecoder::decode_start()",
  "Common::ArjDecoder::fillbuf(int)",
  "Common::ArjDecoder::getbits(int)",
  "Common::ArjDecoder::init_getbits()",
  "Common::ArjDecoder::make_table(int, unsigned char*, int, unsigned short*, int)",
  "Common::ArjDecoder::read_c_len()",
  "Common::ArjDecoder::read_pt_len(int, int, int)",
  "Common::Array<ADDetectedGame>::insert_aux(ADDetectedGame*, ADDetectedGame const*, ADDetectedGame const*)",
  "Common::Array<ADDetectedGame>::push_back(ADDetectedGame const&)",
  "Common::Array<ADDetectedGame>::remove_at(unsigned int)",
  "Common::Array<AbstractFSNode*>::insert_aux(AbstractFSNode**, AbstractFSNode* const*, AbstractFSNode* const*)",
  "Common::Array<Adl::Files_AppleDOS::TrackSector>::insert_aux(Adl::Files_AppleDOS::TrackSector*, Adl::Files_AppleDOS::TrackSector const*, Adl::Files_AppleDOS::TrackSector const*)",
  "Common::Array<Agi::WagProperty>::insert_aux(Agi::WagProperty*, Agi::WagProperty const*, Agi::WagProperty const*)",
  "Common::Array<Audio::ASFStream::Packet::Segment>::reserve(unsigned int)",
  "Common::Array<Audio::QuickTimeAudioDecoder::QuickTimeAudioTrack*>::insert_aux(Audio::QuickTimeAudioDecoder::QuickTimeAudioTrack**, Audio::QuickTimeAudioDecoder::QuickTimeAudioTrack* const*, Audio::QuickTimeAudioDecoder::QuickTimeAudioTrack* const*)",
  "Common::Array<Common::AchievementDescription>::insert_aux(Common::AchievementDescription*, Common::AchievementDescription const*, Common::AchievementDescription const*)",
  "Common::Array<Common::Action*>::insert_aux(Common::Action**, Common::Action* const*, Common::Action* const*)",
  "Common::Array<Common::Action*>::push_back(Common::Array<Common::Action*> const&)",
  "Common::Array<Common::ArjFileChunk>::insert_aux(Common::ArjFileChunk*, Common::ArjFileChunk const*, Common::ArjFileChunk const*)",
  "Common::Array<Common::Array<VGMItem*>*>::insert_aux(Common::Array<VGMItem*>**, Common::Array<VGMItem*>* const*, Common::Array<VGMItem*>* const*)",
  "Common::Array<Common::FSNode>::insert_aux(Common::FSNode*, Common::FSNode const*, Common::FSNode const*)",
  "Common::Array<Common::Functor0Mem<bool, EuphonyPlayer> const*>::insert_aux(Common::Functor0Mem<bool, EuphonyPlayer> const**, Common::Functor0Mem<bool, EuphonyPlayer> const* const*, Common::Functor0Mem<bool, EuphonyPlayer> const* const*)",
  "Common::Array<Common::Functor1Mem<unsigned char, bool, TownsPC98_MusicChannel> const*>::insert_aux(Common::Functor1Mem<unsigned char, bool, TownsPC98_MusicChannel> const**, Common::Functor1Mem<unsigned char, bool, TownsPC98_MusicChannel> const* const*, Common::Functor1Mem<unsigned char, bool, TownsPC98_MusicChannel> const* const*)",
  "Common::Array<Common::Functor1Mem<unsigned char, bool, TownsPC98_MusicChannelPCM> const*>::insert_aux(Common::Functor1Mem<unsigned char, bool, TownsPC98_MusicChannelPCM> const**, Common::Functor1Mem<unsigned char, bool, TownsPC98_MusicChannelPCM> const* const*, Common::Functor1Mem<unsigned char, bool, TownsPC98_MusicChannelPCM> const* const*)",
  "Common::Array<Common::Functor1Mem<unsigned char, bool, TownsPC98_MusicChannelSSG> const*>::insert_aux(Common::Functor1Mem<unsigned char, bool, TownsPC98_MusicChannelSSG> const**, Common::Functor1Mem<unsigned char, bool, TownsPC98_MusicChannelSSG> const* const*, Common::Functor1Mem<unsigned char, bool, TownsPC98_MusicChannelSSG> const* const*)",
  "Common::Array<Common::HardwareInput>::insert_aux(Common::HardwareInput*, Common::HardwareInput const*, Common::HardwareInput const*)",
  "Common::Array<Common::HardwareInputSet*>::insert_aux(Common::HardwareInputSet**, Common::HardwareInputSet* const*, Common::HardwareInputSet* const*)",
  "Common::Array<Common::JSONValue*>::insert_aux(Common::JSONValue**, Common::JSONValue* const*, Common::JSONValue* const*)",
  "Common::Array<Common::Keymap*>::insert_aux(Common::Keymap**, Common::Keymap* const*, Common::Keymap* const*)",
  "Common::Array<Common::Language>::insert_aux(Common::Language*, Common::Language const*, Common::Language const*)",
  "Common::Array<Common::List<Common::Huffman<Common::BitStreamImpl<Common::BitStreamMemoryStream, unsigned long long, 16, true, true>>::Symbol>>::reserve(unsigned int)",
  "Common::Array<Common::List<Common::Huffman<Common::BitStreamImpl<Common::SeekableReadStream, unsigned long long, 32, false, true>>::Symbol>>::reserve(unsigned int)",
  "Common::Array<Common::List<Common::Huffman<Common::BitStreamImpl<Common::SeekableReadStream, unsigned long long, 32, true, false>>::Symbol>>::reserve(unsigned int)",
  "Common::Array<Common::List<Common::Huffman<Common::BitStreamImpl<Common::SeekableReadStream, unsigned long long, 8, false, true>>::Symbol>>::reserve(unsigned int)",
  "Common::Array<Common::MacVISEArchive::DirectoryDesc>::insert_aux(Common::MacVISEArchive::DirectoryDesc*, Common::MacVISEArchive::DirectoryDesc const*, Common::MacVISEArchive::DirectoryDesc const*)",
  "Common::Array<Common::MacVISEArchive::FileDesc>::insert_aux(Common::MacVISEArchive::FileDesc*, Common::MacVISEArchive::FileDesc const*, Common::MacVISEArchive::FileDesc const*)",
  "Common::Array<Common::MemoryPool::Page>::insert_aux(Common::MemoryPool::Page*, Common::MemoryPool::Page const*, Common::MemoryPool::Page const*)",
  "Common::Array<Common::PoMessageEntry>::reserve(unsigned int)",
  "Common::Array<Common::QuickTimeParser::EditListEntry>::resize(unsigned int)",
  "Common::Array<Common::QuickTimeParser::SampleDesc*>::insert_aux(Common::QuickTimeParser::SampleDesc**, Common::QuickTimeParser::SampleDesc* const*, Common::QuickTimeParser::SampleDesc* const*)",
  "Common::Array<Common::QuickTimeParser::Track*>::insert_aux(Common::QuickTimeParser::Track**, Common::QuickTimeParser::Track* const*, Common::QuickTimeParser::Track* const*)",
  "Common::Array<Common::Rect>::insert_aux(Common::Rect*, Common::Rect const*, Common::Rect const*)",
  "Common::Array<Common::RemapWidget::ActionRow>::insert_aux(Common::RemapWidget::ActionRow*, Common::RemapWidget::ActionRow const*, Common::RemapWidget::ActionRow const*)",
  "Common::Array<Common::SeekableReadStream*>::insert_aux(Common::SeekableReadStream**, Common::SeekableReadStream* const*, Common::SeekableReadStream* const*)",
  "Common::Array<Common::SharedPtr<GUI::Animation>>::insert_aux(Common::SharedPtr<GUI::Animation>*, Common::SharedPtr<GUI::Animation> const*, Common::SharedPtr<GUI::Animation> const*)",
  "Common::Array<Common::StatDescription>::insert_aux(Common::StatDescription*, Common::StatDescription const*, Common::StatDescription const*)",
  "Common::Array<Common::String>::insert_aux(Common::String*, Common::String const*, Common::String const*)",
  "Common::Array<Common::String>::operator=(Common::Array<Common::String> const&)",
  "Common::Array<Common::String>::push_back(Common::String const&)",
  "Common::Array<Common::String>::reserve(unsigned int)",
  "Common::Array<Common::String>::~Array()",
  "Common::Array<Common::TLanguage>::insert_aux(Common::TLanguage*, Common::TLanguage const*, Common::TLanguage const*)",
  "Common::Array<Common::U32String>::insert_aux(Common::U32String*, Common::U32String const*, Common::U32String const*)",
  "Common::Array<Common::U32String>::operator=(Common::Array<Common::U32String> const&)",
  "Common::Array<Common::U32String>::reserve(unsigned int)",
  "Common::Array<Common::WinResourceID>::insert_aux(Common::WinResourceID*, Common::WinResourceID const*, Common::WinResourceID const*)",
  "Common::Array<Common::XMLParser::ParserNode*>::insert_aux(Common::XMLParser::ParserNode**, Common::XMLParser::ParserNode* const*, Common::XMLParser::ParserNode* const*)",
  "Common::Array<Common::XMLParser::XMLKeyLayout*>::insert_aux(Common::XMLParser::XMLKeyLayout**, Common::XMLParser::XMLKeyLayout* const*, Common::XMLParser::XMLKeyLayout* const*)",
  "Common::Array<DetectedGame>::freeStorage(DetectedGame*, unsigned int)",
  "Common::Array<DetectedGame>::insert_aux(DetectedGame*, DetectedGame const*, DetectedGame const*)",
  "Common::Array<ExtraGuiOption>::insert_aux(ExtraGuiOption*, ExtraGuiOption const*, ExtraGuiOption const*)",
  "Common::Array<GUI::CheckboxWidget*>::insert_aux(GUI::CheckboxWidget**, GUI::CheckboxWidget* const*, GUI::CheckboxWidget* const*)",
  "Common::Array<GUI::Debugger::Var>::insert_aux(GUI::Debugger::Var*, GUI::Debugger::Var const*, GUI::Debugger::Var const*)",
  "Common::Array<GUI::Debugger::Var>::reserve(unsigned int)",
  "Common::Array<GUI::DropdownButtonWidget::Entry>::insert_aux(GUI::DropdownButtonWidget::Entry*, GUI::DropdownButtonWidget::Entry const*, GUI::DropdownButtonWidget::Entry const*)",
  "Common::Array<GUI::ExistingSave>::freeStorage(GUI::ExistingSave*, unsigned int)",
  "Common::Array<GUI::ExistingSave>::insert_aux(GUI::ExistingSave*, GUI::ExistingSave const*, GUI::ExistingSave const*)",
  "Common::Array<GUI::ExistingSave>::push_back(GUI::ExistingSave const&)",
  "Common::Array<GUI::GridItemInfo*>::insert_aux(GUI::GridItemInfo**, GUI::GridItemInfo* const*, GUI::GridItemInfo* const*)",
  "Common::Array<GUI::GridItemInfo>::freeStorage(GUI::GridItemInfo*, unsigned int)",
  "Common::Array<GUI::GridItemInfo>::insert_aux(GUI::GridItemInfo*, GUI::GridItemInfo const*, GUI::GridItemInfo const*)",
  "Common::Array<GUI::GridItemInfo>::push_back(GUI::GridItemInfo const&)",
  "Common::Array<GUI::GridItemWidget*>::insert_aux(GUI::GridItemWidget**, GUI::GridItemWidget* const*, GUI::GridItemWidget* const*)",
  "Common::Array<GUI::LangExtraFont>::insert_aux(GUI::LangExtraFont*, GUI::LangExtraFont const*, GUI::LangExtraFont const*)",
  "Common::Array<GUI::LangExtraFont>::push_back(GUI::LangExtraFont const&)",
  "Common::Array<GUI::LauncherEntry>::insert_aux(GUI::LauncherEntry*, GUI::LauncherEntry const*, GUI::LauncherEntry const*)",
  "Common::Array<GUI::LauncherEntry>::push_back(GUI::LauncherEntry const&)",
  "Common::Array<GUI::LauncherEntry>::~Array()",
  "Common::Array<GUI::ListWidget::ListData>::insert_aux(GUI::ListWidget::ListData*, GUI::ListWidget::ListData const*, GUI::ListWidget::ListData const*)",
  "Common::Array<GUI::PopUpWidget::Entry>::insert_aux(GUI::PopUpWidget::Entry*, GUI::PopUpWidget::Entry const*, GUI::PopUpWidget::Entry const*)",
  "Common::Array<GUI::RadiobuttonWidget*>::insert_aux(GUI::RadiobuttonWidget**, GUI::RadiobuttonWidget* const*, GUI::RadiobuttonWidget* const*)",
  "Common::Array<GUI::SaveLoadChooserGrid::SlotButton>::insert_aux(GUI::SaveLoadChooserGrid::SlotButton*, GUI::SaveLoadChooserGrid::SlotButton const*, GUI::SaveLoadChooserGrid::SlotButton const*)",
  "Common::Array<GUI::StaticTextWidget*>::insert_aux(GUI::StaticTextWidget**, GUI::StaticTextWidget* const*, GUI::StaticTextWidget* const*)",
  "Common::Array<GUI::TabWidget::Tab>::insert_aux(GUI::TabWidget::Tab*, GUI::TabWidget::Tab const*, GUI::TabWidget::Tab const*)",
  "Common::Array<GUI::TabWidget::Tab>::remove_at(unsigned int)",
  "Common::Array<GUI::ThemeLayout*>::insert_aux(GUI::ThemeLayout**, GUI::ThemeLayout* const*, GUI::ThemeLayout* const*)",
  "Common::Array<Glk::AdvSys::Game::CacheEntry*>::insert_aux(Glk::AdvSys::Game::CacheEntry**, Glk::AdvSys::Game::CacheEntry* const*, Glk::AdvSys::Game::CacheEntry* const*)",
  "Common::Array<Glk::ChunkEntry>::insert_aux(Glk::ChunkEntry*, Glk::ChunkEntry const*, Glk::ChunkEntry const*)",
  "Common::Array<Gob::ArchiveInfo>::reserve(unsigned int)",
  "Common::Array<Gob::DataIO::Archive*>::insert_aux(Gob::DataIO::Archive**, Gob::DataIO::Archive* const*, Gob::DataIO::Archive* const*)",
  "Common::Array<Graphics::CursorManager::Cursor*>::insert_aux(Graphics::CursorManager::Cursor**, Graphics::CursorManager::Cursor* const*, Graphics::CursorManager::Cursor* const*)",
  "Common::Array<Graphics::CursorManager::Palette*>::insert_aux(Graphics::CursorManager::Palette**, Graphics::CursorManager::Palette* const*, Graphics::CursorManager::Palette* const*)",
  "Common::Array<Graphics::Font const*>::insert_aux(Graphics::Font const**, Graphics::Font const* const*, Graphics::Font const* const*)",
  "Common::Array<Graphics::MacFont*>::insert_aux(Graphics::MacFont**, Graphics::MacFont* const*, Graphics::MacFont* const*)",
  "Common::Array<Graphics::MacFontFamily*>::insert_aux(Graphics::MacFontFamily**, Graphics::MacFontFamily* const*, Graphics::MacFontFamily* const*)",
  "Common::Array<Graphics::MacFontFamily::KernEntry>::resize(unsigned int)",
  "Common::Array<Graphics::MacFontFamily::StyleWidthEntry>::reserve(unsigned int)",
  "Common::Array<Graphics::MacFontRun>::insert_aux(Graphics::MacFontRun*, Graphics::MacFontRun const*, Graphics::MacFontRun const*)",
  "Common::Array<Graphics::MacFontRun>::operator=(Common::Array<Graphics::MacFontRun> const&)",
  "Common::Array<Graphics::MacGUIConstants::MacCursorType>::insert_aux(Graphics::MacGUIConstants::MacCursorType*, Graphics::MacGUIConstants::MacCursorType const*, Graphics::MacGUIConstants::MacCursorType const*)",
  "Common::Array<Graphics::MacMenuItem*>::insert_aux(Graphics::MacMenuItem**, Graphics::MacMenuItem* const*, Graphics::MacMenuItem* const*)",
  "Common::Array<Graphics::MacMenuSubMenu*>::insert_aux(Graphics::MacMenuSubMenu**, Graphics::MacMenuSubMenu* const*, Graphics::MacMenuSubMenu* const*)",
  "Common::Array<Graphics::MacTextLine>::insert_aux(Graphics::MacTextLine*, Graphics::MacTextLine const*, Graphics::MacTextLine const*)",
  "Common::Array<Graphics::MacTextLine>::remove_at(unsigned int)",
  "Common::Array<Graphics::MacTextLine>::reserve(unsigned int)",
  "Common::Array<Graphics::MacTextLine>::resize(unsigned int)",
  "Common::Array<Graphics::MacWidget*>::insert_aux(Graphics::MacWidget**, Graphics::MacWidget* const*, Graphics::MacWidget* const*)",
  "Common::Array<Graphics::NinePatchMark*>::insert_aux(Graphics::NinePatchMark**, Graphics::NinePatchMark* const*, Graphics::NinePatchMark* const*)",
  "Common::Array<Graphics::RendererTypeDescription>::insert_aux(Graphics::RendererTypeDescription*, Graphics::RendererTypeDescription const*, Graphics::RendererTypeDescription const*)",
  "Common::Array<Graphics::WinCursorGroup::CursorItem>::insert_aux(Graphics::WinCursorGroup::CursorItem*, Graphics::WinCursorGroup::CursorItem const*, Graphics::WinCursorGroup::CursorItem const*)",
  "Common::Array<Graphics::WinCursorGroup::CursorItem>::reserve(unsigned int)",
  "Common::Array<Graphics::ZoomBox*>::insert_aux(Graphics::ZoomBox**, Graphics::ZoomBox* const*, Graphics::ZoomBox* const*)",
  "Common::Array<Image::CDToonsAction>::insert_aux(Image::CDToonsAction*, Image::CDToonsAction const*, Image::CDToonsAction const*)",
  "Common::Array<Image::CDToonsDiff>::insert_aux(Image::CDToonsDiff*, Image::CDToonsDiff const*, Image::CDToonsDiff const*)",
  "Common::Array<Image::IFFDecoder::PaletteRange>::insert_aux(Image::IFFDecoder::PaletteRange*, Image::IFFDecoder::PaletteRange const*, Image::IFFDecoder::PaletteRange const*)",
  "Common::Array<Image::PICTDecoder::PICTOpcode>::insert_aux(Image::PICTDecoder::PICTOpcode*, Image::PICTDecoder::PICTOpcode const*, Image::PICTDecoder::PICTOpcode const*)",
  "Common::Array<Math::MDCT*>::insert_aux(Math::MDCT**, Math::MDCT* const*, Math::MDCT* const*)",
  "Common::Array<MidiParser_QT::MIDITrackInfo>::insert_aux(MidiParser_QT::MIDITrackInfo*, MidiParser_QT::MIDITrackInfo const*, MidiParser_QT::MIDITrackInfo const*)",
  "Common::Array<OSystem::GraphicsMode>::insert_aux(OSystem::GraphicsMode*, OSystem::GraphicsMode const*, OSystem::GraphicsMode const*)",
  "Common::Array<OpenGL::LibRetro::ShaderPass>::insert_aux(OpenGL::LibRetro::ShaderPass*, OpenGL::LibRetro::ShaderPass const*, OpenGL::LibRetro::ShaderPass const*)",
  "Common::Array<OpenGL::LibRetro::ShaderPass>::push_back(OpenGL::LibRetro::ShaderPass const&)",
  "Common::Array<OpenGL::LibRetro::ShaderTexture>::insert_aux(OpenGL::LibRetro::ShaderTexture*, OpenGL::LibRetro::ShaderTexture const*, OpenGL::LibRetro::ShaderTexture const*)",
  "Common::Array<OpenGL::LibRetroPipeline::Pass::TexCoordAttribute>::insert_aux(OpenGL::LibRetroPipeline::Pass::TexCoordAttribute*, OpenGL::LibRetroPipeline::Pass::TexCoordAttribute const*, OpenGL::LibRetroPipeline::Pass::TexCoordAttribute const*)",
  "Common::Array<OpenGL::LibRetroPipeline::Pass::TexCoordAttribute>::operator=(Common::Array<OpenGL::LibRetroPipeline::Pass::TexCoordAttribute> const&)",
  "Common::Array<OpenGL::LibRetroPipeline::Pass::TextureSampler>::insert_aux(OpenGL::LibRetroPipeline::Pass::TextureSampler*, OpenGL::LibRetroPipeline::Pass::TextureSampler const*, OpenGL::LibRetroPipeline::Pass::TextureSampler const*)",
  "Common::Array<OpenGL::LibRetroPipeline::Pass>::freeStorage(OpenGL::LibRetroPipeline::Pass*, unsigned int)",
  "Common::Array<OpenGL::LibRetroPipeline::Pass>::insert_aux(OpenGL::LibRetroPipeline::Pass*, OpenGL::LibRetroPipeline::Pass const*, OpenGL::LibRetroPipeline::Pass const*)",
  "Common::Array<OpenGL::LibRetroPipeline::Texture>::insert_aux(OpenGL::LibRetroPipeline::Texture*, OpenGL::LibRetroPipeline::Texture const*, OpenGL::LibRetroPipeline::Texture const*)",
  "Common::Array<OpenGL::LibRetroTextureTarget>::reserve(unsigned int)",
  "Common::Array<OpenGL::TiledSurface::Tile>::insert_aux(OpenGL::TiledSurface::Tile*, OpenGL::TiledSurface::Tile const*, OpenGL::TiledSurface::Tile const*)",
  "Common::Array<OpenGL::VertexAttrib>::insert_aux(OpenGL::VertexAttrib*, OpenGL::VertexAttrib const*, OpenGL::VertexAttrib const*)",
  "Common::Array<OpenGLSdlGraphics3dManager::OpenGLPixelFormat>::insert_aux(OpenGLSdlGraphics3dManager::OpenGLPixelFormat*, OpenGLSdlGraphics3dManager::OpenGLPixelFormat const*, OpenGLSdlGraphics3dManager::OpenGLPixelFormat const*)",
  "Common::Array<OpenGLSdlGraphicsManager::VideoMode>::insert_aux(OpenGLSdlGraphicsManager::VideoMode*, OpenGLSdlGraphicsManager::VideoMode const*, OpenGLSdlGraphicsManager::VideoMode const*)",
  "Common::Array<PlainGameDescriptor>::insert_aux(PlainGameDescriptor*, PlainGameDescriptor const*, PlainGameDescriptor const*)",
  "Common::Array<Plugin*>::Array(Common::Array<Plugin*> const&)",
  "Common::Array<Plugin*>::insert_aux(Plugin**, Plugin* const*, Plugin* const*)",
  "Common::Array<PluginProvider*>::insert_aux(PluginProvider**, PluginProvider* const*, PluginProvider* const*)",
  "Common::Array<QualifiedGameDescriptor>::insert_aux(QualifiedGameDescriptor*, QualifiedGameDescriptor const*, QualifiedGameDescriptor const*)",
  "Common::Array<SaveStateDescriptor>::freeStorage(SaveStateDescriptor*, unsigned int)",
  "Common::Array<SaveStateDescriptor>::insert_aux(SaveStateDescriptor*, SaveStateDescriptor const*, SaveStateDescriptor const*)",
  "Common::Array<SaveStateDescriptor>::push_back(SaveStateDescriptor const&)",
  "Common::Array<SizeOffsetPair>::insert_aux(SizeOffsetPair*, SizeOffsetPair const*, SizeOffsetPair const*)",
  "Common::Array<SynthInstr*>::insert_aux(SynthInstr**, SynthInstr* const*, SynthInstr* const*)",
  "Common::Array<SynthRgn*>::insert_aux(SynthRgn**, SynthRgn* const*, SynthRgn* const*)",
  "Common::Array<SynthWave*>::insert_aux(SynthWave**, SynthWave* const*, SynthWave* const*)",
  "Common::Array<TinyGL::BlitImage::Line>::insert_aux(TinyGL::BlitImage::Line*, TinyGL::BlitImage::Line const*, TinyGL::BlitImage::Line const*)",
  "Common::Array<TinyGL::BlitImage::Line>::push_back(TinyGL::BlitImage::Line const&)",
  "Common::Array<TinyGL::tglColorAssociation>::insert_aux(TinyGL::tglColorAssociation*, TinyGL::tglColorAssociation const*, TinyGL::tglColorAssociation const*)",
  "Common::Array<VGMHeader*>::insert_aux(VGMHeader**, VGMHeader* const*, VGMHeader* const*)",
  "Common::Array<VGMInstr*>::insert_aux(VGMInstr**, VGMInstr* const*, VGMInstr* const*)",
  "Common::Array<VGMInstrSet*>::insert_aux(VGMInstrSet**, VGMInstrSet* const*, VGMInstrSet* const*)",
  "Common::Array<VGMItem*>::insert_aux(VGMItem**, VGMItem* const*, VGMItem* const*)",
  "Common::Array<VGMRgn*>::insert_aux(VGMRgn**, VGMRgn* const*, VGMRgn* const*)",
  "Common::Array<VGMRgnItem*>::insert_aux(VGMRgnItem**, VGMRgnItem* const*, VGMRgnItem* const*)",
  "Common::Array<VGMSamp*>::insert_aux(VGMSamp**, VGMSamp* const*, VGMSamp* const*)",
  "Common::Array<VGMSampColl*>::insert_aux(VGMSampColl**, VGMSampColl* const*, VGMSampColl* const*)",
  "Common::Array<Video::AVIDecoder::OldIndex>::insert_aux(Video::AVIDecoder::OldIndex*, Video::AVIDecoder::OldIndex const*, Video::AVIDecoder::OldIndex const*)",
  "Common::Array<Video::AVIDecoder::TrackStatus>::insert_aux(Video::AVIDecoder::TrackStatus*, Video::AVIDecoder::TrackStatus const*, Video::AVIDecoder::TrackStatus const*)",
  "Common::Array<Video::BinkDecoder::AudioInfo>::resize(unsigned int)",
  "Common::Array<Video::BinkDecoder::VideoFrame>::resize(unsigned int)",
  "Common::Array<Video::SRTEntry*>::insert_aux(Video::SRTEntry**, Video::SRTEntry* const*, Video::SRTEntry* const*)",
  "Common::Array<Video::ThreeDOMovieDecoder::StreamAudioTrack*>::insert_aux(Video::ThreeDOMovieDecoder::StreamAudioTrack**, Video::ThreeDOMovieDecoder::StreamAudioTrack* const*, Video::ThreeDOMovieDecoder::StreamAudioTrack* const*)",
  "Common::Array<Video::VMDDecoder::File>::insert_aux(Video::VMDDecoder::File*, Video::VMDDecoder::File const*, Video::VMDDecoder::File const*)",
  "Common::Array<Video::VMDDecoder::File>::reserve(unsigned int)",
  "Common::Array<Video::VideoDecoder::Track*>::insert_aux(Video::VideoDecoder::Track**, Video::VideoDecoder::Track* const*, Video::VideoDecoder::Track* const*)",
  "Common::Array<bool>::insert_aux(bool*, bool const*, bool const*)",
  "Common::Array<float const*>::insert_aux(float const**, float const* const*, float const* const*)",
  "Common::Array<int>::insert_aux(int*, int const*, int const*)",
  "Common::Array<unsigned char const*>::insert_aux(unsigned char const**, unsigned char const* const*, unsigned char const* const*)",
  "Common::Array<unsigned char*>::insert_aux(unsigned char**, unsigned char* const*, unsigned char* const*)",
  "Common::Array<unsigned char>::insert_aux(unsigned char*, unsigned char const*, unsigned char const*)",
  "Common::Array<unsigned int>::insert_aux(unsigned int*, unsigned int const*, unsigned int const*)",
  "Common::Array<unsigned short>::insert_aux(unsigned short*, unsigned short const*, unsigned short const*)",
  "Common::ArtificialEventSource::pollEvent(Common::Event&)",
  "Common::ArtificialEventSource::~ArtificialEventSource()",
  "Common::BasePtrTrackerDeletionImpl<unsigned int, OpenGL::SharedPtrProgramDeleter>::destructObject()",
  "Common::BasePtrTrackerImpl<AbstractFSNode>::destructObject()",
  "Common::BasePtrTrackerImpl<Adl::DiskImage::DataBlock>::destructObject()",
  "Common::BasePtrTrackerImpl<Adl::Files::DataBlock>::destructObject()",
  "Common::BasePtrTrackerImpl<Common::FSNode>::destructObject()",
  "Common::BasePtrTrackerImpl<Common::Functor2<int, char const**, bool>>::destructObject()",
  "Common::BasePtrTrackerImpl<Common::GenericArchiveMember>::destructObject()",
  "Common::BasePtrTrackerImpl<Common::HashMap<Common::String, int, Common::Hash<Common::String>, Common::EqualTo<Common::String>>>::destructObject()",
  "Common::BasePtrTrackerImpl<Common::MacVISEArchive::ArchiveMember>::destructObject()",
  "Common::BaseString<char32_t>::BaseString(Common::BaseString<char32_t> const&)",
  "Common::BaseString<char32_t>::BaseString(char32_t const*)",
  "Common::BaseString<char32_t>::BaseString(char32_t const*, char32_t const*)",
  "Common::BaseString<char32_t>::BaseString(char32_t const*, unsigned int)",
  "Common::BaseString<char32_t>::assign(Common::BaseString<char32_t> const&)",
  "Common::BaseString<char32_t>::assign(Common::BaseString<char32_t>&&)",
  "Common::BaseString<char32_t>::assign(char32_t const*)",
  "Common::BaseString<char32_t>::assign(char32_t)",
  "Common::BaseString<char32_t>::assignAppend(Common::BaseString<char32_t> const&)",
  "Common::BaseString<char32_t>::assignAppend(char32_t const*)",
  "Common::BaseString<char32_t>::assignAppend(char32_t)",
  "Common::BaseString<char32_t>::begin()",
  "Common::BaseString<char32_t>::clear()",
  "Common::BaseString<char32_t>::decRefCount(int*)",
  "Common::BaseString<char32_t>::deleteChar(unsigned int)",
  "Common::BaseString<char32_t>::deleteLastChar()",
  "Common::BaseString<char32_t>::end()",
  "Common::BaseString<char32_t>::ensureCapacity(unsigned int, bool)",
  "Common::BaseString<char32_t>::erase(char32_t*)",
  "Common::BaseString<char32_t>::erase(unsigned int, unsigned int)",
  "Common::BaseString<char32_t>::incRefCount() const",
  "Common::BaseString<char32_t>::initWithValueTypeStr(char32_t const*, unsigned int)",
  "Common::BaseString<char32_t>::insertChar(char32_t, unsigned int)",
  "Common::BaseString<char32_t>::insertString(Common::BaseString<char32_t> const&, unsigned int)",
  "Common::BaseString<char32_t>::insertString(char32_t const*, unsigned int)",
  "Common::BaseString<char32_t>::makeUnique()",
  "Common::BaseString<char32_t>::releaseMemoryPoolMutex()",
  "Common::BaseString<char32_t>::setChar(char32_t, unsigned int)",
  "Common::BaseString<char32_t>::toLowercase()",
  "Common::BaseString<char32_t>::toUppercase()",
  "Common::BaseString<char32_t>::trim()",
  "Common::BaseString<char32_t>::wordWrap(unsigned int)",
  "Common::BaseString<char32_t>::~BaseString()",
  "Common::BaseString<char>::BaseString(Common::BaseString<char> const&)",
  "Common::BaseString<char>::BaseString(char const*)",
  "Common::BaseString<char>::BaseString(char const*, char const*)",
  "Common::BaseString<char>::BaseString(char const*, unsigned int)",
  "Common::BaseString<char>::assign(Common::BaseString<char> const&)",
  "Common::BaseString<char>::assign(Common::BaseString<char>&&)",
  "Common::BaseString<char>::assign(char const*)",
  "Common::BaseString<char>::assign(char)",
  "Common::BaseString<char>::assignAppend(Common::BaseString<char> const&)",
  "Common::BaseString<char>::assignAppend(char const*)",
  "Common::BaseString<char>::assignAppend(char)",
  "Common::BaseString<char>::begin()",
  "Common::BaseString<char>::clear()",
  "Common::BaseString<char>::decRefCount(int*)",
  "Common::BaseString<char>::deleteChar(unsigned int)",
  "Common::BaseString<char>::deleteLastChar()",
  "Common::BaseString<char>::end()",
  "Common::BaseString<char>::ensureCapacity(unsigned int, bool)",
  "Common::BaseString<char>::erase(char*)",
  "Common::BaseString<char>::erase(unsigned int, unsigned int)",
  "Common::BaseString<char>::incRefCount() const",
  "Common::BaseString<char>::initWithValueTypeStr(char const*, unsigned int)",
  "Common::BaseString<char>::insertChar(char, unsigned int)",
  "Common::BaseString<char>::insertString(Common::BaseString<char> const&, unsigned int)",
  "Common::BaseString<char>::insertString(char const*, unsigned int)",
  "Common::BaseString<char>::makeUnique()",
  "Common::BaseString<char>::releaseMemoryPoolMutex()",
  "Common::BaseString<char>::setChar(char, unsigned int)",
  "Common::BaseString<char>::toLowercase()",
  "Common::BaseString<char>::toUppercase()",
  "Common::BaseString<char>::trim()",
  "Common::BaseString<char>::wordWrap(unsigned int)",
  "Common::BaseString<char>::~BaseString()",
  "Common::BitStreamImpl<Common::BitStreamMemoryStream, unsigned long long, 16, true, true>::peekBits(unsigned long)",
  "Common::BitStreamImpl<Common::BitStreamMemoryStream, unsigned long long, 32, true, false>::peekBits(unsigned long)",
  "Common::BitStreamImpl<Common::BitStreamMemoryStream, unsigned long long, 8, false, true>::getBits(unsigned long)",
  "Common::BitStreamImpl<Common::SeekableReadStream, unsigned long long, 32, false, true>::getBit()",
  "Common::BitStreamImpl<Common::SeekableReadStream, unsigned long long, 32, false, true>::getBits(unsigned long)",
  "Common::BitStreamImpl<Common::SeekableReadStream, unsigned long long, 32, false, true>::skip(unsigned int)",
  "Common::BitStreamImpl<Common::SeekableReadStream, unsigned long long, 32, true, false>::getBit()",
  "Common::BitStreamImpl<Common::SeekableReadStream, unsigned long long, 32, true, false>::getBits(unsigned long)",
  "Common::BitStreamImpl<Common::SeekableReadStream, unsigned long long, 32, true, false>::skip(unsigned int)",
  "Common::BitStreamImpl<Common::SeekableReadStream, unsigned long long, 8, false, false>::getBit()",
  "Common::BitStreamImpl<Common::SeekableReadStream, unsigned long long, 8, false, false>::getBits(unsigned long)",
  "Common::BitStreamImpl<Common::SeekableReadStream, unsigned long long, 8, false, false>::skip(unsigned int)",
  "Common::BitStreamImpl<Common::SeekableReadStream, unsigned long long, 8, false, true>::getBit()",
  "Common::BitStreamImpl<Common::SeekableReadStream, unsigned long long, 8, false, true>::getBits(unsigned long)",
  "Common::BitStreamImpl<Common::SeekableReadStream, unsigned long long, 8, false, true>::skip(unsigned int)",
  "Common::ClickteamInstaller::ClickteamFileDescriptor::ClickteamFileDescriptor(Common::ClickteamInstaller::ClickteamTag const&, unsigned int)",
  "Common::ClickteamInstaller::ClickteamInstaller(Common::HashMap<Common::String, Common::ClickteamInstaller::ClickteamFileDescriptor, Common::IgnoreCase_Hash, Common::IgnoreCase_EqualTo>, Common::HashMap<unsigned short, Common::SharedPtr<Common::ClickteamInstaller::ClickteamTag>, Common::Hash<unsigned short>, Common::EqualTo<unsigned short>>, unsigned int, unsigned int, unsigned int, Common::SeekableReadStream*, DisposeAfterUse::Flag)",
  "Common::ClickteamInstaller::listMembers(Common::List<Common::SharedPtr<Common::ArchiveMember>>&) const",
  "Common::ClickteamInstaller::open(Common::SeekableReadStream*, DisposeAfterUse::Flag)",
  "Common::ClickteamInstaller::readContentsForPath(Common::String const&) const",
  "Common::ClickteamInstaller::~ClickteamInstaller()",
  "Common::CompositeHardwareInputSet::addHardwareInputSet(Common::HardwareInputSet*)",
  "Common::CompositeHardwareInputSet::findHardwareInput(Common::Event const&) const",
  "Common::CompositeHardwareInputSet::findHardwareInput(Common::String const&) const",
  "Common::CompositeHardwareInputSet::~CompositeHardwareInputSet()",
  "Common::ConcatReadStream::ConcatReadStream(Common::Array<Common::SharedPtr<Common::SeekableReadStream>>)",
  "Common::ConcatReadStream::read(void*, unsigned int)",
  "Common::ConcatReadStream::~ConcatReadStream()",
  "Common::ConfigManager::ConfigManager()",
  "Common::ConfigManager::Domain::Domain()",
  "Common::ConfigManager::Domain::Domain(Common::ConfigManager::Domain const&)",
  "Common::ConfigManager::Domain::getKVComment(Common::String const&) const",
  "Common::ConfigManager::Domain::setDomainComment(Common::String const&)",
  "Common::ConfigManager::Domain::setKVComment(Common::String const&, Common::String const&)",
  "Common::ConfigManager::Domain::setVal(Common::String const&, Common::String const&)",
  "Common::ConfigManager::addDomain(Common::String const&, Common::ConfigManager::Domain const&)",
  "Common::ConfigManager::addGameDomain(Common::String const&)",
  "Common::ConfigManager::addMiscDomain(Common::String const&)",
  "Common::ConfigManager::copyFrom(Common::ConfigManager&)",
  "Common::ConfigManager::defragment()",
  "Common::ConfigManager::flushToDisk()",
  "Common::ConfigManager::get(Common::String const&) const",
  "Common::ConfigManager::get(Common::String const&, Common::String const&) const",
  "Common::ConfigManager::getBool(Common::String const&, Common::String const&) const",
  "Common::ConfigManager::getDomain(Common::String const&)",
  "Common::ConfigManager::getDomain(Common::String const&) const",
  "Common::ConfigManager::getInt(Common::String const&, Common::String const&) const",
  "Common::ConfigManager::hasKey(Common::String const&, Common::String const&) const",
  "Common::ConfigManager::loadConfigFile(Common::String const&)",
  "Common::ConfigManager::loadDefaultConfigFile()",
  "Common::ConfigManager::loadFromStream(Common::SeekableReadStream&)",
  "Common::ConfigManager::registerDefault(Common::String const&, Common::String const&)",
  "Common::ConfigManager::registerDefault(Common::String const&, bool)",
  "Common::ConfigManager::registerDefault(Common::String const&, char const*)",
  "Common::ConfigManager::registerDefault(Common::String const&, int)",
  "Common::ConfigManager::removeGameDomain(Common::String const&)",
  "Common::ConfigManager::removeKey(Common::String const&, Common::String const&)",
  "Common::ConfigManager::removeMiscDomain(Common::String const&)",
  "Common::ConfigManager::renameDomain(Common::String const&, Common::String const&, Common::HashMap<Common::String, Common::ConfigManager::Domain, Common::IgnoreCase_Hash, Common::IgnoreCase_EqualTo>&)",
  "Common::ConfigManager::renameGameDomain(Common::String const&, Common::String const&)",
  "Common::ConfigManager::renameMiscDomain(Common::String const&, Common::String const&)",
  "Common::ConfigManager::set(Common::String const&, Common::String const&)",
  "Common::ConfigManager::set(Common::String const&, Common::String const&, Common::String const&)",
  "Common::ConfigManager::setActiveDomain(Common::String const&)",
  "Common::ConfigManager::setAndFlush(Common::String const&, Common::String const&)",
  "Common::ConfigManager::setBool(Common::String const&, bool, Common::String const&)",
  "Common::ConfigManager::setInt(Common::String const&, int, Common::String const&)",
  "Common::ConfigManager::writeDomain(Common::WriteStream&, Common::String const&, Common::ConfigManager::Domain const&)",
  "Common::ConfigManager::~ConfigManager()",
  "Common::CoroBaseContext::~CoroBaseContext()",
  "Common::CoroutineScheduler::CoroutineScheduler()",
  "Common::CoroutineScheduler::createEvent(bool, bool)",
  "Common::CoroutineScheduler::killMatchingProcess(unsigned int, int)",
  "Common::CoroutineScheduler::killProcess(Common::PROCESS*)",
  "Common::CoroutineScheduler::reset()",
  "Common::CoroutineScheduler::schedule()",
  "Common::CoroutineScheduler::sleep(Common::CoroBaseContext*&, unsigned int)",
  "Common::CoroutineScheduler::sleep(Common::CoroBaseContext*&, unsigned int)::CoroContextTag::~CoroContextTag()",
  "Common::CoroutineScheduler::waitForMultipleObjects(Common::CoroBaseContext*&, int, unsigned int*, bool, unsigned int, bool*)",
  "Common::CoroutineScheduler::waitForMultipleObjects(Common::CoroBaseContext*&, int, unsigned int*, bool, unsigned int, bool*)::CoroContextTag::~CoroContextTag()",
  "Common::CoroutineScheduler::~CoroutineScheduler()",
  "Common::CustomHardwareInputSet::findHardwareInput(Common::Event const&) const",
  "Common::CustomHardwareInputSet::findHardwareInput(Common::String const&) const",
  "Common::DebugManager::DebugManager()",
  "Common::DebugManager::addAllDebugChannels(DebugChannelDef const*)",
  "Common::DebugManager::addDebugChannel(unsigned int, Common::String const&, Common::String const&)",
  "Common::DebugManager::addDebugChannels(DebugChannelDef const*)",
  "Common::DebugManager::getDebugChannels()",
  "Common::DebugManager::removeAllDebugChannels()",
  "Common::DebugManager::~DebugManager()",
  "Common::DecompressorDCL::fetchBitsLSB()",
  "Common::DecompressorDCL::getBitsLSB(int)",
  "Common::DecompressorDCL::getByteLSB()",
  "Common::DecompressorDCL::huffman_lookup(int const*)",
  "Common::DecompressorDCL::init(Common::SeekableReadStream*, Common::WriteStream*, unsigned int, bool)",
  "Common::DecompressorDCL::putByte(unsigned char)",
  "Common::DecompressorDCL::unpack(Common::SeekableReadStream*, Common::WriteStream*, unsigned int, bool)",
  "Common::DelayedEventSource::pollEvent(Common::Event&)",
  "Common::DelayedEventSource::scheduleEvent(Common::Event const&, unsigned int)",
  "Common::DelayedEventSource::~DelayedEventSource()",
  "Common::DisposablePtr<Audio::RewindableAudioStream, Common::DefaultDeleter<Audio::RewindableAudioStream>> Common::DisposablePtr<Audio::AudioStream, Common::DefaultDeleter<Audio::AudioStream>>::moveAndDynamicCast<Audio::RewindableAudioStream, Common::DefaultDeleter<Audio::RewindableAudioStream>>()",
  "Common::DumpFile::clearErr()",
  "Common::DumpFile::close()",
  "Common::DumpFile::err() const",
  "Common::DumpFile::flush()",
  "Common::DumpFile::open(Common::FSNode const&)",
  "Common::DumpFile::open(Common::String const&, bool)",
  "Common::DumpFile::pos() const",
  "Common::DumpFile::seek(long long, int)",
  "Common::DumpFile::size() const",
  "Common::DumpFile::~DumpFile()",
  "Common::DumpFile::~DumpFile().2",
  "Common::Error::Error(Common::ErrorCode)",
  "Common::Error::Error(Common::ErrorCode, Common::String const&)",
  "Common::EventDispatcher::dispatch()",
  "Common::EventDispatcher::dispatchEvent(Common::Event const&)",
  "Common::EventDispatcher::dispatchPoll()",
  "Common::EventDispatcher::registerMapper(Common::EventMapper*, bool)",
  "Common::EventDispatcher::registerObserver(Common::EventObserver*, unsigned int, bool, bool)",
  "Common::EventDispatcher::registerSource(Common::EventSource*, bool)",
  "Common::EventDispatcher::unregisterMapper(Common::EventMapper*)",
  "Common::EventDispatcher::unregisterObserver(Common::EventObserver*)",
  "Common::EventDispatcher::unregisterObserver(Common::EventObserver*)Common::DumpFile::write(void const*, unsigned int)",
  "Common::EventDispatcher::unregisterSource(Common::EventSource*)",
  "Common::EventDispatcher::~EventDispatcher()",
  "Common::EventManager::~EventManager()",
  "Common::FSDirectory::FSDirectory(Common::FSNode const&, int, bool, bool, bool)",
  "Common::FSDirectory::FSDirectory(Common::Path const&, Common::FSNode const&, int, bool, bool, bool)",
  "Common::FSDirectory::FSDirectory(Common::Path const&, Common::Path const&, int, bool, bool, bool)",
  "Common::FSDirectory::FSDirectory(Common::Path const&, int, bool, bool, bool)",
  "Common::FSDirectory::cacheDirectoryRecursive(Common::FSNode, int, Common::Path const&) const",
  "Common::FSDirectory::createReadStreamForMember(Common::Path const&) const",
  "Common::FSDirectory::ensureCached() const",
  "Common::FSDirectory::getMember(Common::Path const&) const",
  "Common::FSDirectory::getSubDirectory(Common::Path const&, Common::Path const&, int, bool, bool)",
  "Common::FSDirectory::getSubDirectory(Common::Path const&, int, bool, bool)",
  "Common::FSDirectory::hasFile(Common::Path const&) const",
  "Common::FSDirectory::listMatchingMembers(Common::List<Common::SharedPtr<Common::ArchiveMember>>&, Common::Path const&) const",
  "Common::FSDirectory::listMembers(Common::List<Common::SharedPtr<Common::ArchiveMember>>&) const",
  "Common::FSDirectory::lookupCache(Common::HashMap<Common::String, Common::FSNode, Common::IgnoreCase_Hash, Common::IgnoreCase_EqualTo>&, Common::String const&) const",
  "Common::FSDirectory::setPrefix(Common::String const&)",
  "Common::FSDirectory::~FSDirectory()",
  "Common::FSNode::FSNode(AbstractFSNode*)",
  "Common::FSNode::FSNode(Common::Path const&)",
  "Common::FSNode::createDirectory() const",
  "Common::FSNode::createReadStream() const",
  "Common::FSNode::createWriteStream() const",
  "Common::FSNode::exists() const",
  "Common::FSNode::getChild(Common::String const&) const",
  "Common::FSNode::getChildren(Common::FSList&, Common::FSNode::ListMode, bool) const",
  "Common::FSNode::getDisplayName() const",
  "Common::FSNode::getName() const",
  "Common::FSNode::getParent() const",
  "Common::FSNode::getPath() const",
  "Common::FSNode::isDirectory() const",
  "Common::FSNode::isReadable() const",
  "Common::FSNode::isWritable() const",
  "Common::FSNode::operator<(Common::FSNode const&) const",
  "Common::FSNode::operator=(Common::FSNode const&)",
  "Common::FSNode::~FSNode()",
  "Common::File::clearErr()",
  "Common::File::close()",
  "Common::File::eos() const",
  "Common::File::err() const",
  "Common::File::exists(Common::Path const&)",
  "Common::File::open(Common::FSNode const&)",
  "Common::File::open(Common::Path const&)",
  "Common::File::open(Common::Path const&, Common::Archive&)",
  "Common::File::open(Common::SeekableReadStream*, Common::String const&)",
  "Common::File::pos() const",
  "Common::File::read(void*, unsigned int)",
  "Common::File::seek(long long, int)",
  "Common::File::size() const",
  "Common::File::~File()",
  "Common::File::~File().2",
  "Common::Functor0Mem<bool, EuphonyPlayer>::operator()() const",
  "Common::Functor0Mem<void, Audio::MidiDriver_Miles_AdLib>::operator()() const",
  "Common::Functor0Mem<void, MidiDriver_ADLIB>::operator()() const",
  "Common::Functor0Mem<void, MidiDriver_ADLIB_Multisource>::operator()() const",
  "Common::Functor0Mem<void, TownsPC98_FmSynth>::operator()() const",
  "Common::Functor1Mem<Common::IFFChunk&, bool, Audio::A8SVXLoader>::operator()(Common::IFFChunk&) const",
  "Common::Functor1Mem<unsigned char, bool, TownsPC98_MusicChannel>::operator()(unsigned char) const",
  "Common::Functor1Mem<unsigned char, bool, TownsPC98_MusicChannelPCM>::operator()(unsigned char) const",
  "Common::Functor1Mem<unsigned char, bool, TownsPC98_MusicChannelSSG>::operator()(unsigned char) const",
  "Common::Functor2Mem<int, char const**, bool, GUI::Debugger>::operator()(int, char const**) const",
  "Common::GZipReadStream::GZipReadStream(Common::SeekableReadStream*, unsigned int)",
  "Common::GZipReadStream::read(void*, unsigned int)",
  "Common::GZipReadStream::seek(long long, int)",
  "Common::GZipReadStream::~GZipReadStream()",
  "Common::GZipWriteStream::clearErr()",
  "Common::GZipWriteStream::err() const",
  "Common::GZipWriteStream::finalize()",
  "Common::GZipWriteStream::write(void const*, unsigned int)",
  "Common::GZipWriteStream::~GZipWriteStream()",
  "Common::GenericArchiveMember::GenericArchiveMember(Common::String const&, Common::Archive const*)",
  "Common::GenericArchiveMember::createReadStream() const",
  "Common::GenericArchiveMember::getName() const",
  "Common::GenericArchiveMember::~GenericArchiveMember()",
  "Common::GzioReadStream::clickteamDecompress(unsigned char*, unsigned int, unsigned char*, unsigned int, long long)",
  "Common::GzioReadStream::deflateDecompress(unsigned char*, unsigned int, unsigned char*, unsigned int, long long)",
  "Common::GzioReadStream::get_new_block()",
  "Common::GzioReadStream::inflate_codes_in_window()",
  "Common::GzioReadStream::inflate_window()",
  "Common::GzioReadStream::init_dynamic_block()",
  "Common::GzioReadStream::init_stored_block()",
  "Common::GzioReadStream::initialize_tables()",
  "Common::GzioReadStream::openClickteam(Common::SeekableReadStream*, unsigned long long, DisposeAfterUse::Flag)",
  "Common::GzioReadStream::openDeflate(Common::SeekableReadStream*, unsigned long long, DisposeAfterUse::Flag)",
  "Common::GzioReadStream::openZlib(Common::SeekableReadStream*, unsigned long long, DisposeAfterUse::Flag)",
  "Common::GzioReadStream::parentGetByte()",
  "Common::GzioReadStream::parentSeek(long long)",
  "Common::GzioReadStream::read(void*, unsigned int)",
  "Common::GzioReadStream::readAtOffset(long long, unsigned char*, unsigned int)",
  "Common::GzioReadStream::test_zlib_header()",
  "Common::GzioReadStream::zlibDecompress(unsigned char*, unsigned int, unsigned char*, unsigned int, long long)",
  "Common::GzioReadStream::~GzioReadStream()",
  "Common::HardwareInput* Common::sortPartition<Common::HardwareInput*, Common::HardwareInputTypeIdComparator>(Common::HardwareInput*, Common::HardwareInput*, Common::HardwareInput*, Common::HardwareInputTypeIdComparator&)",
  "Common::HardwareInput::createKeyboard(Common::String const&, Common::KeyState, Common::U32String const&)",
  "Common::HardwareInput::operator=(Common::HardwareInput&&)",
  "Common::HashMap<Common::HardwareInput, Common::Array<Common::Action*>, Common::HardwareInput_Hash, Common::HardwareInput_EqualTo>::clear(bool)",
  "Common::HashMap<Common::HardwareInput, Common::Array<Common::Action*>, Common::HardwareInput_Hash, Common::HardwareInput_EqualTo>::erase(Common::HashMap<Common::HardwareInput, Common::Array<Common::Action*>, Common::HardwareInput_Hash, Common::HardwareInput_EqualTo>::IteratorImpl<Common::HashMap<Common::HardwareInput, Common::Array<Common::Action*>, Common::HardwareInput_Hash, Common::HardwareInput_EqualTo>::Node>)",
  "Common::HashMap<Common::HardwareInput, Common::Array<Common::Action*>, Common::HardwareInput_Hash, Common::HardwareInput_EqualTo>::expandStorage(unsigned int)",
  "Common::HashMap<Common::HardwareInput, Common::Array<Common::Action*>, Common::HardwareInput_Hash, Common::HardwareInput_EqualTo>::lookupAndCreateIfMissing(Common::HardwareInput const&)",
  "Common::HashMap<Common::HardwareInput, Common::Array<Common::Action*>, Common::HardwareInput_Hash, Common::HardwareInput_EqualTo>::~HashMap()",
  "Common::HashMap<Common::Keymap*, Common::RemapWidget::KeymapTitleRow, Common::Hash<Common::Keymap*>, Common::EqualTo<Common::Keymap*>>::expandStorage(unsigned int)",
  "Common::HashMap<Common::Keymap*, Common::RemapWidget::KeymapTitleRow, Common::Hash<Common::Keymap*>, Common::EqualTo<Common::Keymap*>>::lookupAndCreateIfMissing(Common::Keymap* const&)",
  "Common::HashMap<Common::String, Adl::Files_AppleDOS::TOCEntry, Common::Hash<Common::String>, Common::EqualTo<Common::String>>::expandStorage(unsigned int)",
  "Common::HashMap<Common::String, Adl::Files_AppleDOS::TOCEntry, Common::Hash<Common::String>, Common::EqualTo<Common::String>>::getVal(Common::String const&) const",
  "Common::HashMap<Common::String, Adl::Files_AppleDOS::TOCEntry, Common::Hash<Common::String>, Common::EqualTo<Common::String>>::lookupAndCreateIfMissing(Common::String const&)",
  "Common::HashMap<Common::String, Adl::Files_AppleDOS::TOCEntry, Common::Hash<Common::String>, Common::EqualTo<Common::String>>::~HashMap()",
  "Common::HashMap<Common::String, Common::(anonymous namespace)::InstallShieldCabinet::FileEntry, Common::IgnoreCase_Hash, Common::IgnoreCase_EqualTo>::operator[](Common::String const&)",
  "Common::HashMap<Common::String, Common::Array<Common::AchievementDescription>, Common::Hash<Common::String>, Common::EqualTo<Common::String>>::expandStorage(unsigned int)",
  "Common::HashMap<Common::String, Common::Array<Common::AchievementDescription>, Common::Hash<Common::String>, Common::EqualTo<Common::String>>::getVal(Common::String const&) const",
  "Common::HashMap<Common::String, Common::Array<Common::AchievementDescription>, Common::Hash<Common::String>, Common::EqualTo<Common::String>>::lookupAndCreateIfMissing(Common::String const&)",
  "Common::HashMap<Common::String, Common::Array<Common::AchievementDescription>, Common::Hash<Common::String>, Common::EqualTo<Common::String>>::~HashMap()",
  "Common::HashMap<Common::String, Common::Array<Common::ArjFileChunk>, Common::IgnoreCase_Hash, Common::IgnoreCase_EqualTo>::expandStorage(unsigned int)",
  "Common::HashMap<Common::String, Common::Array<Common::ArjFileChunk>, Common::IgnoreCase_Hash, Common::IgnoreCase_EqualTo>::getVal(Common::String const&) const",
  "Common::HashMap<Common::String, Common::Array<Common::ArjFileChunk>, Common::IgnoreCase_Hash, Common::IgnoreCase_EqualTo>::lookupAndCreateIfMissing(Common::String const&)",
  "Common::HashMap<Common::String, Common::Array<Common::ArjFileChunk>, Common::IgnoreCase_Hash, Common::IgnoreCase_EqualTo>::~HashMap()",
  "Common::HashMap<Common::String, Common::Array<Common::String>, Common::Hash<Common::String>, Common::EqualTo<Common::String>>::expandStorage(unsigned int)",
  "Common::HashMap<Common::String, Common::Array<Common::String>, Common::Hash<Common::String>, Common::EqualTo<Common::String>>::lookupAndCreateIfMissing(Common::String const&)",
  "Common::HashMap<Common::String, Common::Array<Common::String>, Common::Hash<Common::String>, Common::EqualTo<Common::String>>::~HashMap()",
  "Common::HashMap<Common::String, Common::ClickteamInstaller::ClickteamFileDescriptor, Common::IgnoreCase_Hash, Common::IgnoreCase_EqualTo>::assign(Common::HashMap<Common::String, Common::ClickteamInstaller::ClickteamFileDescriptor, Common::IgnoreCase_Hash, Common::IgnoreCase_EqualTo> const&)",
  "Common::HashMap<Common::String, Common::ClickteamInstaller::ClickteamFileDescriptor, Common::IgnoreCase_Hash, Common::IgnoreCase_EqualTo>::expandStorage(unsigned int)",
  "Common::HashMap<Common::String, Common::ClickteamInstaller::ClickteamFileDescriptor, Common::IgnoreCase_Hash, Common::IgnoreCase_EqualTo>::getVal(Common::String const&) const",
  "Common::HashMap<Common::String, Common::ClickteamInstaller::ClickteamFileDescriptor, Common::IgnoreCase_Hash, Common::IgnoreCase_EqualTo>::lookupAndCreateIfMissing(Common::String const&)",
  "Common::HashMap<Common::String, Common::ClickteamInstaller::ClickteamFileDescriptor, Common::IgnoreCase_Hash, Common::IgnoreCase_EqualTo>::~HashMap()",
  "Common::HashMap<Common::String, Common::ConfigManager::Domain, Common::IgnoreCase_Hash, Common::IgnoreCase_EqualTo>::HashMap()",
  "Common::HashMap<Common::String, Common::ConfigManager::Domain, Common::IgnoreCase_Hash, Common::IgnoreCase_EqualTo>::assign(Common::HashMap<Common::String, Common::ConfigManager::Domain, Common::IgnoreCase_Hash, Common::IgnoreCase_EqualTo> const&)",
  "Common::HashMap<Common::String, Common::ConfigManager::Domain, Common::IgnoreCase_Hash, Common::IgnoreCase_EqualTo>::clear(bool)",
  "Common::HashMap<Common::String, Common::ConfigManager::Domain, Common::IgnoreCase_Hash, Common::IgnoreCase_EqualTo>::erase(Common::String const&)",
  "Common::HashMap<Common::String, Common::ConfigManager::Domain, Common::IgnoreCase_Hash, Common::IgnoreCase_EqualTo>::expandStorage(unsigned int)",
  "Common::HashMap<Common::String, Common::ConfigManager::Domain, Common::IgnoreCase_Hash, Common::IgnoreCase_EqualTo>::getVal(Common::String const&) const",
  "Common::HashMap<Common::String, Common::ConfigManager::Domain, Common::IgnoreCase_Hash, Common::IgnoreCase_EqualTo>::lookupAndCreateIfMissing(Common::String const&)",
  "Common::HashMap<Common::String, Common::ConfigManager::Domain, Common::IgnoreCase_Hash, Common::IgnoreCase_EqualTo>::operator[](Common::String const&)",
  "Common::HashMap<Common::String, Common::ConfigManager::Domain, Common::IgnoreCase_Hash, Common::IgnoreCase_EqualTo>::~HashMap()",
  "Common::HashMap<Common::String, Common::DebugManager::DebugChannel, Common::IgnoreCase_Hash, Common::IgnoreCase_EqualTo>::HashMap()",
  "Common::HashMap<Common::String, Common::DebugManager::DebugChannel, Common::IgnoreCase_Hash, Common::IgnoreCase_EqualTo>::expandStorage(unsigned int)",
  "Common::HashMap<Common::String, Common::DebugManager::DebugChannel, Common::IgnoreCase_Hash, Common::IgnoreCase_EqualTo>::lookupAndCreateIfMissing(Common::String const&)",
  "Common::HashMap<Common::String, Common::DebugManager::DebugChannel, Common::IgnoreCase_Hash, Common::IgnoreCase_EqualTo>::~HashMap()",
  "Common::HashMap<Common::String, Common::FSNode, Common::IgnoreCase_Hash, Common::IgnoreCase_EqualTo>::clear(bool)",
  "Common::HashMap<Common::String, Common::FSNode, Common::IgnoreCase_Hash, Common::IgnoreCase_EqualTo>::erase(Common::HashMap<Common::String, Common::FSNode, Common::IgnoreCase_Hash, Common::IgnoreCase_EqualTo>::IteratorImpl<Common::HashMap<Common::String, Common::FSNode, Common::IgnoreCase_Hash, Common::IgnoreCase_EqualTo>::Node>)",
  "Common::HashMap<Common::String, Common::FSNode, Common::IgnoreCase_Hash, Common::IgnoreCase_EqualTo>::expandStorage(unsigned int)",
  "Common::HashMap<Common::String, Common::FSNode, Common::IgnoreCase_Hash, Common::IgnoreCase_EqualTo>::getVal(Common::String const&) const",
  "Common::HashMap<Common::String, Common::FSNode, Common::IgnoreCase_Hash, Common::IgnoreCase_EqualTo>::lookupAndCreateIfMissing(Common::String const&)",
  "Common::HashMap<Common::String, Common::FSNode, Common::IgnoreCase_Hash, Common::IgnoreCase_EqualTo>::~HashMap()",
  "Common::HashMap<Common::String, Common::InstallShieldV3::FileEntry, Common::IgnoreCase_Hash, Common::IgnoreCase_EqualTo>::expandStorage(unsigned int)",
  "Common::HashMap<Common::String, Common::InstallShieldV3::FileEntry, Common::IgnoreCase_Hash, Common::IgnoreCase_EqualTo>::getVal(Common::String const&) const",
  "Common::HashMap<Common::String, Common::InstallShieldV3::FileEntry, Common::IgnoreCase_Hash, Common::IgnoreCase_EqualTo>::lookupAndCreateIfMissing(Common::String const&)",
  "Common::HashMap<Common::String, Common::JSONValue*, Common::Hash<Common::String>, Common::EqualTo<Common::String>>::assign(Common::HashMap<Common::String, Common::JSONValue*, Common::Hash<Common::String>, Common::EqualTo<Common::String>> const&)",
  "Common::HashMap<Common::String, Common::JSONValue*, Common::Hash<Common::String>, Common::EqualTo<Common::String>>::expandStorage(unsigned int)",
  "Common::HashMap<Common::String, Common::JSONValue*, Common::Hash<Common::String>, Common::EqualTo<Common::String>>::lookupAndCreateIfMissing(Common::String const&)",
  "Common::HashMap<Common::String, Common::JSONValue*, Common::Hash<Common::String>, Common::EqualTo<Common::String>>::operator[](Common::String const&)",
  "Common::HashMap<Common::String, Common::MacFinderInfoData, Common::IgnoreCase_Hash, Common::IgnoreCase_EqualTo>::expandStorage(unsigned int)",
  "Common::HashMap<Common::String, Common::MacFinderInfoData, Common::IgnoreCase_Hash, Common::IgnoreCase_EqualTo>::getVal(Common::String const&) const",
  "Common::HashMap<Common::String, Common::MacFinderInfoData, Common::IgnoreCase_Hash, Common::IgnoreCase_EqualTo>::lookupAndCreateIfMissing(Common::String const&)",
  "Common::HashMap<Common::String, Common::PEResources::Section, Common::IgnoreCase_Hash, Common::IgnoreCase_EqualTo>::expandStorage(unsigned int)",
  "Common::HashMap<Common::String, Common::PEResources::Section, Common::IgnoreCase_Hash, Common::IgnoreCase_EqualTo>::lookupAndCreateIfMissing(Common::String const&)",
  "Common::HashMap<Common::String, Common::SeekableReadStream*, Common::Hash<Common::String>, Common::EqualTo<Common::String>>::expandStorage(unsigned int)",
  "Common::HashMap<Common::String, Common::SeekableReadStream*, Common::Hash<Common::String>, Common::EqualTo<Common::String>>::lookupAndCreateIfMissing(Common::String const&)",
  "Common::HashMap<Common::String, Common::SharedArchiveContents, Common::IgnoreCase_Hash, Common::IgnoreCase_EqualTo>::expandStorage(unsigned int)",
  "Common::HashMap<Common::String, Common::SharedArchiveContents, Common::IgnoreCase_Hash, Common::IgnoreCase_EqualTo>::lookupAndCreateIfMissing(Common::String const&)",
  "Common::HashMap<Common::String, Common::SharedArchiveContents, Common::IgnoreCase_Hash, Common::IgnoreCase_EqualTo>::~HashMap()",
  "Common::HashMap<Common::String, Common::SharedPtr<Common::Functor2<int, char const**, bool>>, Common::IgnoreCase_Hash, Common::IgnoreCase_EqualTo>::expandStorage(unsigned int)",
  "Common::HashMap<Common::String, Common::SharedPtr<Common::Functor2<int, char const**, bool>>, Common::IgnoreCase_Hash, Common::IgnoreCase_EqualTo>::lookupAndCreateIfMissing(Common::String const&)",
  "Common::HashMap<Common::String, Common::SharedPtr<Common::Functor2<int, char const**, bool>>, Common::IgnoreCase_Hash, Common::IgnoreCase_EqualTo>::~HashMap()",
  "Common::HashMap<Common::String, Common::String, Common::Hash<Common::String>, Common::EqualTo<Common::String>>::expandStorage(unsigned int)",
  "Common::HashMap<Common::String, Common::String, Common::Hash<Common::String>, Common::EqualTo<Common::String>>::lookupAndCreateIfMissing(Common::String const&)",
  "Common::HashMap<Common::String, Common::String, Common::Hash<Common::String>, Common::EqualTo<Common::String>>::~HashMap()",
  "Common::HashMap<Common::String, Common::String, Common::IgnoreCase_Hash, Common::IgnoreCase_EqualTo>::assign(Common::HashMap<Common::String, Common::String, Common::IgnoreCase_Hash, Common::IgnoreCase_EqualTo> const&)",
  "Common::HashMap<Common::String, Common::String, Common::IgnoreCase_Hash, Common::IgnoreCase_EqualTo>::clear(bool)",
  "Common::HashMap<Common::String, Common::String, Common::IgnoreCase_Hash, Common::IgnoreCase_EqualTo>::erase(Common::String const&)",
  "Common::HashMap<Common::String, Common::String, Common::IgnoreCase_Hash, Common::IgnoreCase_EqualTo>::expandStorage(unsigned int)",
  "Common::HashMap<Common::String, Common::String, Common::IgnoreCase_Hash, Common::IgnoreCase_EqualTo>::getVal(Common::String const&)",
  "Common::HashMap<Common::String, Common::String, Common::IgnoreCase_Hash, Common::IgnoreCase_EqualTo>::getVal(Common::String const&) const",
  "Common::HashMap<Common::String, Common::String, Common::IgnoreCase_Hash, Common::IgnoreCase_EqualTo>::lookupAndCreateIfMissing(Common::String const&)",
  "Common::HashMap<Common::String, Common::String, Common::IgnoreCase_Hash, Common::IgnoreCase_EqualTo>::operator=(Common::HashMap<Common::String, Common::String, Common::IgnoreCase_Hash, Common::IgnoreCase_EqualTo> const&)",
  "Common::HashMap<Common::String, Common::String, Common::IgnoreCase_Hash, Common::IgnoreCase_EqualTo>::operator[](Common::String const&)",
  "Common::HashMap<Common::String, Common::String, Common::IgnoreCase_Hash, Common::IgnoreCase_EqualTo>::~HashMap()",
  "Common::HashMap<Common::String, Common::StuffItArchive::FileEntry, Common::IgnoreCase_Hash, Common::IgnoreCase_EqualTo>::expandStorage(unsigned int)",
  "Common::HashMap<Common::String, Common::StuffItArchive::FileEntry, Common::IgnoreCase_Hash, Common::IgnoreCase_EqualTo>::getVal(Common::String const&) const",
  "Common::HashMap<Common::String, Common::StuffItArchive::FileEntry, Common::IgnoreCase_Hash, Common::IgnoreCase_EqualTo>::lookupAndCreateIfMissing(Common::String const&)",
  "Common::HashMap<Common::String, Common::U32String, Common::IgnoreCase_Hash, Common::IgnoreCase_EqualTo>::expandStorage(unsigned int)",
  "Common::HashMap<Common::String, Common::U32String, Common::IgnoreCase_Hash, Common::IgnoreCase_EqualTo>::lookupAndCreateIfMissing(Common::String const&)",
  "Common::HashMap<Common::String, Common::U32String, Common::IgnoreCase_Hash, Common::IgnoreCase_EqualTo>::~HashMap()",
  "Common::HashMap<Common::String, Common::XMLParser::XMLKeyLayout*, Common::IgnoreCase_Hash, Common::IgnoreCase_EqualTo>::expandStorage(unsigned int)",
  "Common::HashMap<Common::String, Common::XMLParser::XMLKeyLayout*, Common::IgnoreCase_Hash, Common::IgnoreCase_EqualTo>::lookupAndCreateIfMissing(Common::String const&)",
  "Common::HashMap<Common::String, FileProperties, Common::IgnoreCase_Hash, Common::IgnoreCase_EqualTo>::assign(Common::HashMap<Common::String, FileProperties, Common::IgnoreCase_Hash, Common::IgnoreCase_EqualTo> const&)",
  "Common::HashMap<Common::String, FileProperties, Common::IgnoreCase_Hash, Common::IgnoreCase_EqualTo>::erase(Common::String const&)",
  "Common::HashMap<Common::String, FileProperties, Common::IgnoreCase_Hash, Common::IgnoreCase_EqualTo>::expandStorage(unsigned int)",
  "Common::HashMap<Common::String, FileProperties, Common::IgnoreCase_Hash, Common::IgnoreCase_EqualTo>::lookupAndCreateIfMissing(Common::String const&)",
  "Common::HashMap<Common::String, FileProperties, Common::IgnoreCase_Hash, Common::IgnoreCase_EqualTo>::operator=(Common::HashMap<Common::String, FileProperties, Common::IgnoreCase_Hash, Common::IgnoreCase_EqualTo> const&)",
  "Common::HashMap<Common::String, FileProperties, Common::IgnoreCase_Hash, Common::IgnoreCase_EqualTo>::~HashMap()",
  "Common::HashMap<Common::String, GUI::MetadataCompany, Common::IgnoreCase_Hash, Common::IgnoreCase_EqualTo>::HashMap()",
  "Common::HashMap<Common::String, GUI::MetadataCompany, Common::IgnoreCase_Hash, Common::IgnoreCase_EqualTo>::expandStorage(unsigned int)",
  "Common::HashMap<Common::String, GUI::MetadataCompany, Common::IgnoreCase_Hash, Common::IgnoreCase_EqualTo>::lookupAndCreateIfMissing(Common::String const&)",
  "Common::HashMap<Common::String, GUI::MetadataCompany, Common::IgnoreCase_Hash, Common::IgnoreCase_EqualTo>::~HashMap()",
  "Common::HashMap<Common::String, GUI::MetadataEngine, Common::IgnoreCase_Hash, Common::IgnoreCase_EqualTo>::HashMap()",
  "Common::HashMap<Common::String, GUI::MetadataEngine, Common::IgnoreCase_Hash, Common::IgnoreCase_EqualTo>::expandStorage(unsigned int)",
  "Common::HashMap<Common::String, GUI::MetadataEngine, Common::IgnoreCase_Hash, Common::IgnoreCase_EqualTo>::lookupAndCreateIfMissing(Common::String const&)",
  "Common::HashMap<Common::String, GUI::MetadataEngine, Common::IgnoreCase_Hash, Common::IgnoreCase_EqualTo>::~HashMap()",
  "Common::HashMap<Common::String, GUI::MetadataGame, Common::IgnoreCase_Hash, Common::IgnoreCase_EqualTo>::HashMap()",
  "Common::HashMap<Common::String, GUI::MetadataGame, Common::IgnoreCase_Hash, Common::IgnoreCase_EqualTo>::expandStorage(unsigned int)",
  "Common::HashMap<Common::String, GUI::MetadataGame, Common::IgnoreCase_Hash, Common::IgnoreCase_EqualTo>::freeNode(Common::HashMap<Common::String, GUI::MetadataGame, Common::IgnoreCase_Hash, Common::IgnoreCase_EqualTo>::Node*)",
  "Common::HashMap<Common::String, GUI::MetadataGame, Common::IgnoreCase_Hash, Common::IgnoreCase_EqualTo>::lookupAndCreateIfMissing(Common::String const&)",
  "Common::HashMap<Common::String, GUI::MetadataGame, Common::IgnoreCase_Hash, Common::IgnoreCase_EqualTo>::~HashMap()",
  "Common::HashMap<Common::String, GUI::MetadataSeries, Common::IgnoreCase_Hash, Common::IgnoreCase_EqualTo>::expandStorage(unsigned int)",
  "Common::HashMap<Common::String, GUI::MetadataSeries, Common::IgnoreCase_Hash, Common::IgnoreCase_EqualTo>::lookupAndCreateIfMissing(Common::String const&)",
  "Common::HashMap<Common::String, GUI::MetadataSeries, Common::IgnoreCase_Hash, Common::IgnoreCase_EqualTo>::~HashMap()",
  "Common::HashMap<Common::String, GUI::ThemeLayout*, Common::Hash<Common::String>, Common::EqualTo<Common::String>>::expandStorage(unsigned int)",
  "Common::HashMap<Common::String, GUI::ThemeLayout*, Common::Hash<Common::String>, Common::EqualTo<Common::String>>::lookupAndCreateIfMissing(Common::String const&)",
  "Common::HashMap<Common::String, GUI::ThemeParser::PaletteColor, Common::IgnoreCase_Hash, Common::IgnoreCase_EqualTo>::expandStorage(unsigned int)",
  "Common::HashMap<Common::String, GUI::ThemeParser::PaletteColor, Common::IgnoreCase_Hash, Common::IgnoreCase_EqualTo>::lookupAndCreateIfMissing(Common::String const&)",
  "Common::HashMap<Common::String, Gob::DataIO::File, Common::IgnoreCase_Hash, Common::IgnoreCase_EqualTo>::expandStorage(unsigned int)",
  "Common::HashMap<Common::String, Gob::DataIO::File, Common::IgnoreCase_Hash, Common::IgnoreCase_EqualTo>::lookupAndCreateIfMissing(Common::String const&)",
  "Common::HashMap<Common::String, Gob::DataIO::File, Common::IgnoreCase_Hash, Common::IgnoreCase_EqualTo>::~HashMap()",
  "Common::HashMap<Common::String, Graphics::Font const*, Common::Hash<Common::String>, Common::EqualTo<Common::String>>::erase(Common::String const&)",
  "Common::HashMap<Common::String, Graphics::Font const*, Common::Hash<Common::String>, Common::EqualTo<Common::String>>::expandStorage(unsigned int)",
  "Common::HashMap<Common::String, Graphics::Font const*, Common::Hash<Common::String>, Common::EqualTo<Common::String>>::getVal(Common::String const&)",
  "Common::HashMap<Common::String, Graphics::Font const*, Common::Hash<Common::String>, Common::EqualTo<Common::String>>::getVal(Common::String const&) const",
  "Common::HashMap<Common::String, Graphics::Font const*, Common::Hash<Common::String>, Common::EqualTo<Common::String>>::lookupAndCreateIfMissing(Common::String const&)",
  "Common::HashMap<Common::String, Graphics::Font*, Common::Hash<Common::String>, Common::EqualTo<Common::String>>::expandStorage(unsigned int)",
  "Common::HashMap<Common::String, Graphics::Font*, Common::Hash<Common::String>, Common::EqualTo<Common::String>>::getVal(Common::String const&)",
  "Common::HashMap<Common::String, Graphics::Font*, Common::Hash<Common::String>, Common::EqualTo<Common::String>>::lookupAndCreateIfMissing(Common::String const&)",
  "Common::HashMap<Common::String, Graphics::MacFont*, Common::Hash<Common::String>, Common::EqualTo<Common::String>>::expandStorage(unsigned int)",
  "Common::HashMap<Common::String, Graphics::MacFont*, Common::Hash<Common::String>, Common::EqualTo<Common::String>>::lookupAndCreateIfMissing(Common::String const&)",
  "Common::HashMap<Common::String, Graphics::ManagedSurface const*, Common::Hash<Common::String>, Common::EqualTo<Common::String>>::expandStorage(unsigned int)",
  "Common::HashMap<Common::String, Graphics::ManagedSurface const*, Common::Hash<Common::String>, Common::EqualTo<Common::String>>::lookupAndCreateIfMissing(Common::String const&)",
  "Common::HashMap<Common::String, Graphics::ManagedSurface*, Common::Hash<Common::String>, Common::EqualTo<Common::String>>::erase(Common::String const&)",
  "Common::HashMap<Common::String, Graphics::ManagedSurface*, Common::Hash<Common::String>, Common::EqualTo<Common::String>>::expandStorage(unsigned int)",
  "Common::HashMap<Common::String, Graphics::ManagedSurface*, Common::Hash<Common::String>, Common::EqualTo<Common::String>>::getVal(Common::String const&) const",
  "Common::HashMap<Common::String, Graphics::ManagedSurface*, Common::Hash<Common::String>, Common::EqualTo<Common::String>>::lookupAndCreateIfMissing(Common::String const&)",
  "Common::HashMap<Common::String, Scumm::DetectorDesc, Common::IgnoreCase_Hash, Common::IgnoreCase_EqualTo>::HashMap()",
  "Common::HashMap<Common::String, Scumm::DetectorDesc, Common::IgnoreCase_Hash, Common::IgnoreCase_EqualTo>::expandStorage(unsigned int)",
  "Common::HashMap<Common::String, Scumm::DetectorDesc, Common::IgnoreCase_Hash, Common::IgnoreCase_EqualTo>::lookupAndCreateIfMissing(Common::String const&)",
  "Common::HashMap<Common::String, Scumm::DetectorDesc, Common::IgnoreCase_Hash, Common::IgnoreCase_EqualTo>::~HashMap()",
  "Common::HashMap<Common::String, SizeMD5, Common::IgnoreCase_Hash, Common::IgnoreCase_EqualTo>::expandStorage(unsigned int)",
  "Common::HashMap<Common::String, SizeMD5, Common::IgnoreCase_Hash, Common::IgnoreCase_EqualTo>::lookupAndCreateIfMissing(Common::String const&)",
  "Common::HashMap<Common::String, SizeMD5, Common::IgnoreCase_Hash, Common::IgnoreCase_EqualTo>::~HashMap()",
  "Common::HashMap<Common::String, bool, Common::Hash<Common::String>, Common::EqualTo<Common::String>>::expandStorage(unsigned int)",
  "Common::HashMap<Common::String, bool, Common::Hash<Common::String>, Common::EqualTo<Common::String>>::lookupAndCreateIfMissing(Common::String const&)",
  "Common::HashMap<Common::String, bool, Common::IgnoreCase_Hash, Common::IgnoreCase_EqualTo>::expandStorage(unsigned int)",
  "Common::HashMap<Common::String, bool, Common::IgnoreCase_Hash, Common::IgnoreCase_EqualTo>::lookupAndCreateIfMissing(Common::String const&)",
  "Common::HashMap<Common::String, cached_file_in_zip, Common::IgnoreCase_Hash, Common::IgnoreCase_EqualTo>::expandStorage(unsigned int)",
  "Common::HashMap<Common::String, cached_file_in_zip, Common::IgnoreCase_Hash, Common::IgnoreCase_EqualTo>::lookupAndCreateIfMissing(Common::String const&)",
  "Common::HashMap<Common::String, float, Common::CaseSensitiveString_Hash, Common::CaseSensitiveString_EqualTo>::expandStorage(unsigned int)",
  "Common::HashMap<Common::String, float, Common::CaseSensitiveString_Hash, Common::CaseSensitiveString_EqualTo>::lookupAndCreateIfMissing(Common::String const&)",
  "Common::HashMap<Common::String, int, Common::Hash<Common::String>, Common::EqualTo<Common::String>>::expandStorage(unsigned int)",
  "Common::HashMap<Common::String, int, Common::Hash<Common::String>, Common::EqualTo<Common::String>>::lookupAndCreateIfMissing(Common::String const&)",
  "Common::HashMap<Common::String, int, Common::IgnoreCase_Hash, Common::IgnoreCase_EqualTo>::expandStorage(unsigned int)",
  "Common::HashMap<Common::String, int, Common::IgnoreCase_Hash, Common::IgnoreCase_EqualTo>::lookupAndCreateIfMissing(Common::String const&)",
  "Common::HashMap<Common::String, long long, Common::IgnoreCase_Hash, Common::IgnoreCase_EqualTo>::clear(bool)",
  "Common::HashMap<Common::String, long long, Common::IgnoreCase_Hash, Common::IgnoreCase_EqualTo>::expandStorage(unsigned int)",
  "Common::HashMap<Common::String, long long, Common::IgnoreCase_Hash, Common::IgnoreCase_EqualTo>::getVal(Common::String const&)",
  "Common::HashMap<Common::String, long long, Common::IgnoreCase_Hash, Common::IgnoreCase_EqualTo>::lookupAndCreateIfMissing(Common::String const&)",
  "Common::HashMap<Common::String, void (*)(void*), Common::IgnoreCase_Hash, Common::IgnoreCase_EqualTo>::erase(Common::HashMap<Common::String, void (*)(void*), Common::IgnoreCase_Hash, Common::IgnoreCase_EqualTo>::IteratorImpl<Common::HashMap<Common::String, void (*)(void*), Common::IgnoreCase_Hash, Common::IgnoreCase_EqualTo>::Node>)",
  "Common::HashMap<Common::String, void (*)(void*), Common::IgnoreCase_Hash, Common::IgnoreCase_EqualTo>::expandStorage(unsigned int)",
  "Common::HashMap<Common::String, void (*)(void*), Common::IgnoreCase_Hash, Common::IgnoreCase_EqualTo>::lookupAndCreateIfMissing(Common::String const&)",
  "Common::HashMap<Common::U32String, int, Common::Hash<Common::U32String>, Common::EqualTo<Common::U32String>>::expandStorage(unsigned int)",
  "Common::HashMap<Common::U32String, int, Common::Hash<Common::U32String>, Common::EqualTo<Common::U32String>>::getVal(Common::U32String const&)",
  "Common::HashMap<Common::U32String, int, Common::Hash<Common::U32String>, Common::EqualTo<Common::U32String>>::lookupAndCreateIfMissing(Common::U32String const&)",
  "Common::HashMap<Common::WinResourceID, Common::HashMap<Common::WinResourceID, Common::HashMap<Common::WinResourceID, Common::PEResources::Resource, Common::WinResourceID_Hash, Common::WinResourceID_EqualTo>, Common::WinResourceID_Hash, Common::WinResourceID_EqualTo>, Common::WinResourceID_Hash, Common::WinResourceID_EqualTo>::contains(Common::WinResourceID const&) const",
  "Common::HashMap<Common::WinResourceID, Common::HashMap<Common::WinResourceID, Common::HashMap<Common::WinResourceID, Common::PEResources::Resource, Common::WinResourceID_Hash, Common::WinResourceID_EqualTo>, Common::WinResourceID_Hash, Common::WinResourceID_EqualTo>, Common::WinResourceID_Hash, Common::WinResourceID_EqualTo>::expandStorage(unsigned int)",
  "Common::HashMap<Common::WinResourceID, Common::HashMap<Common::WinResourceID, Common::HashMap<Common::WinResourceID, Common::PEResources::Resource, Common::WinResourceID_Hash, Common::WinResourceID_EqualTo>, Common::WinResourceID_Hash, Common::WinResourceID_EqualTo>, Common::WinResourceID_Hash, Common::WinResourceID_EqualTo>::getVal(Common::WinResourceID const&) const",
  "Common::HashMap<Common::WinResourceID, Common::HashMap<Common::WinResourceID, Common::HashMap<Common::WinResourceID, Common::PEResources::Resource, Common::WinResourceID_Hash, Common::WinResourceID_EqualTo>, Common::WinResourceID_Hash, Common::WinResourceID_EqualTo>, Common::WinResourceID_Hash, Common::WinResourceID_EqualTo>::lookupAndCreateIfMissing(Common::WinResourceID const&)",
  "Common::HashMap<Common::WinResourceID, Common::HashMap<Common::WinResourceID, Common::HashMap<Common::WinResourceID, Common::PEResources::Resource, Common::WinResourceID_Hash, Common::WinResourceID_EqualTo>, Common::WinResourceID_Hash, Common::WinResourceID_EqualTo>, Common::WinResourceID_Hash, Common::WinResourceID_EqualTo>::~HashMap()",
  "Common::HashMap<Common::WinResourceID, Common::HashMap<Common::WinResourceID, Common::PEResources::Resource, Common::WinResourceID_Hash, Common::WinResourceID_EqualTo>, Common::WinResourceID_Hash, Common::WinResourceID_EqualTo>::HashMap()",
  "Common::HashMap<Common::WinResourceID, Common::HashMap<Common::WinResourceID, Common::PEResources::Resource, Common::WinResourceID_Hash, Common::WinResourceID_EqualTo>, Common::WinResourceID_Hash, Common::WinResourceID_EqualTo>::Node::Node(Common::WinResourceID const&)",
  "Common::HashMap<Common::WinResourceID, Common::HashMap<Common::WinResourceID, Common::PEResources::Resource, Common::WinResourceID_Hash, Common::WinResourceID_EqualTo>, Common::WinResourceID_Hash, Common::WinResourceID_EqualTo>::contains(Common::WinResourceID const&) const",
  "Common::HashMap<Common::WinResourceID, Common::HashMap<Common::WinResourceID, Common::PEResources::Resource, Common::WinResourceID_Hash, Common::WinResourceID_EqualTo>, Common::WinResourceID_Hash, Common::WinResourceID_EqualTo>::expandStorage(unsigned int)",
  "Common::HashMap<Common::WinResourceID, Common::HashMap<Common::WinResourceID, Common::PEResources::Resource, Common::WinResourceID_Hash, Common::WinResourceID_EqualTo>, Common::WinResourceID_Hash, Common::WinResourceID_EqualTo>::getVal(Common::WinResourceID const&) const",
  "Common::HashMap<Common::WinResourceID, Common::HashMap<Common::WinResourceID, Common::PEResources::Resource, Common::WinResourceID_Hash, Common::WinResourceID_EqualTo>, Common::WinResourceID_Hash, Common::WinResourceID_EqualTo>::lookupAndCreateIfMissing(Common::WinResourceID const&)",
  "Common::HashMap<Common::WinResourceID, Common::HashMap<Common::WinResourceID, Common::PEResources::Resource, Common::WinResourceID_Hash, Common::WinResourceID_EqualTo>, Common::WinResourceID_Hash, Common::WinResourceID_EqualTo>::~HashMap()",
  "Common::HashMap<Common::WinResourceID, Common::HashMap<Common::WinResourceID, Common::String, Common::WinResourceID_Hash, Common::WinResourceID_EqualTo>, Common::WinResourceID_Hash, Common::WinResourceID_EqualTo>::HashMap()",
  "Common::HashMap<Common::WinResourceID, Common::HashMap<Common::WinResourceID, Common::String, Common::WinResourceID_Hash, Common::WinResourceID_EqualTo>, Common::WinResourceID_Hash, Common::WinResourceID_EqualTo>::Node::Node(Common::WinResourceID const&)",
  "Common::HashMap<Common::WinResourceID, Common::HashMap<Common::WinResourceID, Common::String, Common::WinResourceID_Hash, Common::WinResourceID_EqualTo>, Common::WinResourceID_Hash, Common::WinResourceID_EqualTo>::contains(Common::WinResourceID const&) const",
  "Common::HashMap<Common::WinResourceID, Common::HashMap<Common::WinResourceID, Common::String, Common::WinResourceID_Hash, Common::WinResourceID_EqualTo>, Common::WinResourceID_Hash, Common::WinResourceID_EqualTo>::expandStorage(unsigned int)",
  "Common::HashMap<Common::WinResourceID, Common::HashMap<Common::WinResourceID, Common::String, Common::WinResourceID_Hash, Common::WinResourceID_EqualTo>, Common::WinResourceID_Hash, Common::WinResourceID_EqualTo>::getVal(Common::WinResourceID const&) const",
  "Common::HashMap<Common::WinResourceID, Common::HashMap<Common::WinResourceID, Common::String, Common::WinResourceID_Hash, Common::WinResourceID_EqualTo>, Common::WinResourceID_Hash, Common::WinResourceID_EqualTo>::lookupAndCreateIfMissing(Common::WinResourceID const&)",
  "Common::HashMap<Common::WinResourceID, Common::HashMap<Common::WinResourceID, Common::String, Common::WinResourceID_Hash, Common::WinResourceID_EqualTo>, Common::WinResourceID_Hash, Common::WinResourceID_EqualTo>::~HashMap()",
  "Common::HashMap<Common::WinResourceID, Common::PEResources::Resource, Common::WinResourceID_Hash, Common::WinResourceID_EqualTo>::contains(Common::WinResourceID const&) const",
  "Common::HashMap<Common::WinResourceID, Common::PEResources::Resource, Common::WinResourceID_Hash, Common::WinResourceID_EqualTo>::expandStorage(unsigned int)",
  "Common::HashMap<Common::WinResourceID, Common::PEResources::Resource, Common::WinResourceID_Hash, Common::WinResourceID_EqualTo>::getVal(Common::WinResourceID const&) const",
  "Common::HashMap<Common::WinResourceID, Common::PEResources::Resource, Common::WinResourceID_Hash, Common::WinResourceID_EqualTo>::lookupAndCreateIfMissing(Common::WinResourceID const&)",
  "Common::HashMap<Common::WinResourceID, Common::String, Common::WinResourceID_Hash, Common::WinResourceID_EqualTo>::contains(Common::WinResourceID const&) const",
  "Common::HashMap<Common::WinResourceID, Common::String, Common::WinResourceID_Hash, Common::WinResourceID_EqualTo>::expandStorage(unsigned int)",
  "Common::HashMap<Common::WinResourceID, Common::String, Common::WinResourceID_Hash, Common::WinResourceID_EqualTo>::getVal(Common::WinResourceID const&) const",
  "Common::HashMap<Common::WinResourceID, Common::String, Common::WinResourceID_Hash, Common::WinResourceID_EqualTo>::lookupAndCreateIfMissing(Common::WinResourceID const&)",
  "Common::HashMap<Common::WinResourceID, Common::String, Common::WinResourceID_Hash, Common::WinResourceID_EqualTo>::~HashMap()",
  "Common::HashMap<int, Common::Array<int>, Common::Hash<int>, Common::EqualTo<int>>::expandStorage(unsigned int)",
  "Common::HashMap<int, Common::Array<int>, Common::Hash<int>, Common::EqualTo<int>>::lookupAndCreateIfMissing(int const&)",
  "Common::HashMap<int, Graphics::Font const*, Common::Hash<int>, Common::EqualTo<int>>::expandStorage(unsigned int)",
  "Common::HashMap<int, Graphics::Font const*, Common::Hash<int>, Common::EqualTo<int>>::lookupAndCreateIfMissing(int const&)",
  "Common::HashMap<int, Graphics::FontInfo*, Common::Hash<int>, Common::EqualTo<int>>::expandStorage(unsigned int)",
  "Common::HashMap<int, Graphics::FontInfo*, Common::Hash<int>, Common::EqualTo<int>>::lookupAndCreateIfMissing(int const&)",
  "Common::HashMap<int, Graphics::ManagedSurface const*, Common::Hash<int>, Common::EqualTo<int>>::expandStorage(unsigned int)",
  "Common::HashMap<int, Graphics::ManagedSurface const*, Common::Hash<int>, Common::EqualTo<int>>::lookupAndCreateIfMissing(int const&)",
  "Common::HashMap<int, Video::MPEGPSDecoder::MPEGStream*, Common::Hash<int>, Common::EqualTo<int>>::expandStorage(unsigned int)",
  "Common::HashMap<int, Video::MPEGPSDecoder::MPEGStream*, Common::Hash<int>, Common::EqualTo<int>>::lookupAndCreateIfMissing(int const&)",
  "Common::HashMap<int, unsigned char, Common::Hash<int>, Common::EqualTo<int>>::expandStorage(unsigned int)",
  "Common::HashMap<int, unsigned char, Common::Hash<int>, Common::EqualTo<int>>::lookupAndCreateIfMissing(int const&)",
  "Common::HashMap<unsigned int, Graphics::BaseMacWindow*, Common::Hash<unsigned int>, Common::EqualTo<unsigned int>>::expandStorage(unsigned int)",
  "Common::HashMap<unsigned int, Graphics::BaseMacWindow*, Common::Hash<unsigned int>, Common::EqualTo<unsigned int>>::lookupAndCreateIfMissing(unsigned int const&)",
  "Common::HashMap<unsigned int, Graphics::TTFFont::Glyph, Common::Hash<unsigned int>, Common::EqualTo<unsigned int>>::expandStorage(unsigned int)",
  "Common::HashMap<unsigned int, Graphics::TTFFont::Glyph, Common::Hash<unsigned int>, Common::EqualTo<unsigned int>>::lookupAndCreateIfMissing(unsigned int const&)",
  "Common::HashMap<unsigned int, MidiParser_QT::PartStatus, Common::Hash<unsigned int>, Common::EqualTo<unsigned int>>::expandStorage(unsigned int)",
  "Common::HashMap<unsigned int, MidiParser_QT::PartStatus, Common::Hash<unsigned int>, Common::EqualTo<unsigned int>>::lookupAndCreateIfMissing(unsigned int const&)",
  "Common::HashMap<unsigned int, int, Common::Hash<unsigned int>, Common::EqualTo<unsigned int>>::expandStorage(unsigned int)",
  "Common::HashMap<unsigned int, int, Common::Hash<unsigned int>, Common::EqualTo<unsigned int>>::lookupAndCreateIfMissing(unsigned int const&)",
  "Common::HashMap<unsigned int, unsigned char, Common::Hash<unsigned int>, Common::EqualTo<unsigned int>>::expandStorage(unsigned int)",
  "Common::HashMap<unsigned int, unsigned char, Common::Hash<unsigned int>, Common::EqualTo<unsigned int>>::lookupAndCreateIfMissing(unsigned int const&)",
  "Common::HashMap<unsigned int, unsigned int, Common::Hash<unsigned int>, Common::EqualTo<unsigned int>>::expandStorage(unsigned int)",
  "Common::HashMap<unsigned int, unsigned int, Common::Hash<unsigned int>, Common::EqualTo<unsigned int>>::lookupAndCreateIfMissing(unsigned int const&)",
  "Common::HashMap<unsigned short, Common::SharedPtr<Common::ClickteamInstaller::ClickteamTag>, Common::Hash<unsigned short>, Common::EqualTo<unsigned short>>::assign(Common::HashMap<unsigned short, Common::SharedPtr<Common::ClickteamInstaller::ClickteamTag>, Common::Hash<unsigned short>, Common::EqualTo<unsigned short>> const&)",
  "Common::HashMap<unsigned short, Common::SharedPtr<Common::ClickteamInstaller::ClickteamTag>, Common::Hash<unsigned short>, Common::EqualTo<unsigned short>>::expandStorage(unsigned int)",
  "Common::HashMap<unsigned short, Common::SharedPtr<Common::ClickteamInstaller::ClickteamTag>, Common::Hash<unsigned short>, Common::EqualTo<unsigned short>>::lookupAndCreateIfMissing(unsigned short const&)",
  "Common::HashMap<unsigned short, Image::CDToonsBlock, Common::Hash<unsigned short>, Common::EqualTo<unsigned short>>::expandStorage(unsigned int)",
  "Common::HashMap<unsigned short, Image::CDToonsBlock, Common::Hash<unsigned short>, Common::EqualTo<unsigned short>>::lookupAndCreateIfMissing(unsigned short const&)",
  "Common::HashMap<unsigned short, Image::CDToonsBlock, Common::Hash<unsigned short>, Common::EqualTo<unsigned short>>::operator[](unsigned short const&)",
  "Common::HashMap<unsigned short, short, Common::Hash<unsigned short>, Common::EqualTo<unsigned short>>::assign(Common::HashMap<unsigned short, short, Common::Hash<unsigned short>, Common::EqualTo<unsigned short>> const&)",
  "Common::HashMap<unsigned short, short, Common::Hash<unsigned short>, Common::EqualTo<unsigned short>>::expandStorage(unsigned int)",
  "Common::HashMap<unsigned short, short, Common::Hash<unsigned short>, Common::EqualTo<unsigned short>>::lookupAndCreateIfMissing(unsigned short const&)",
  "Common::Huffman<Common::BitStreamImpl<Common::BitStreamMemoryStream, unsigned long long, 16, true, true>>::Huffman(unsigned char, unsigned int, unsigned int const*, unsigned char const*, unsigned int const*)",
  "Common::Huffman<Common::BitStreamImpl<Common::BitStreamMemoryStream, unsigned long long, 16, true, true>>::getSymbol(Common::BitStreamImpl<Common::BitStreamMemoryStream, unsigned long long, 16, true, true>&) const",
  "Common::Huffman<Common::BitStreamImpl<Common::SeekableReadStream, unsigned long long, 32, false, true>>::Huffman(unsigned char, unsigned int, unsigned int const*, unsigned char const*, unsigned int const*)",
  "Common::Huffman<Common::BitStreamImpl<Common::SeekableReadStream, unsigned long long, 32, false, true>>::getSymbol(Common::BitStreamImpl<Common::SeekableReadStream, unsigned long long, 32, false, true>&) const",
  "Common::Huffman<Common::BitStreamImpl<Common::SeekableReadStream, unsigned long long, 32, true, false>>::Huffman(unsigned char, unsigned int, unsigned int const*, unsigned char const*, unsigned int const*)",
  "Common::Huffman<Common::BitStreamImpl<Common::SeekableReadStream, unsigned long long, 32, true, false>>::getSymbol(Common::BitStreamImpl<Common::SeekableReadStream, unsigned long long, 32, true, false>&) const",
  "Common::Huffman<Common::BitStreamImpl<Common::SeekableReadStream, unsigned long long, 8, false, true>>::Huffman(unsigned char, unsigned int, unsigned int const*, unsigned char const*, unsigned int const*)",
  "Common::Huffman<Common::BitStreamImpl<Common::SeekableReadStream, unsigned long long, 8, false, true>>::getSymbol(Common::BitStreamImpl<Common::SeekableReadStream, unsigned long long, 8, false, true>&) const",
  "Common::IFFParser::IFFChunkNav::clearErr()",
  "Common::IFFParser::IFFChunkNav::eos() const",
  "Common::IFFParser::IFFChunkNav::err() const",
  "Common::IFFParser::IFFChunkNav::read(void*, unsigned int)",
  "Common::IFFParser::IFFParser(Common::ReadStream*, bool)",
  "Common::IFFParser::parse(Common::Functor1<Common::IFFChunk&, bool>&)",
  "Common::IFFParser::setInputStream(Common::ReadStream*)",
  "Common::IFFParser::~IFFParser()",
  "Common::INIFile::Section::removeKey(Common::String const&)",
  "Common::INIFile::Section::setKey(Common::String const&, Common::String const&)",
  "Common::INIFile::addSection(Common::String const&)",
  "Common::INIFile::clear()",
  "Common::INIFile::getKey(Common::String const&, Common::String const&, Common::String&) const",
  "Common::INIFile::getKeys(Common::String const&) const",
  "Common::INIFile::hasKey(Common::String const&, Common::String const&) const",
  "Common::INIFile::hasSection(Common::String const&) const",
  "Common::INIFile::loadFromFile(Common::String const&)",
  "Common::INIFile::loadFromFileOrDataFork(Common::String const&)",
  "Common::INIFile::loadFromSaveFile(Common::String const&)",
  "Common::INIFile::loadFromStream(Common::SeekableReadStream&)",
  "Common::INIFile::removeKey(Common::String const&, Common::String const&)",
  "Common::INIFile::removeSection(Common::String const&)",
  "Common::INIFile::renameSection(Common::String const&, Common::String const&)",
  "Common::INIFile::saveToFile(Common::String const&)",
  "Common::INIFile::saveToSaveFile(Common::String const&)",
  "Common::INIFile::setDefaultSectionName(Common::String const&)",
  "Common::INIFile::setKey(Common::String const&, Common::String const&, Common::String const&)",
  "Common::InputWatcher::checkForCapturedInput()",
  "Common::InputWatcher::notifyEvent(Common::Event const&)",
  "Common::InputWatcher::startWatching()",
  "Common::InputWatcher::stopWatching()",
  "Common::InputWatcher::~InputWatcher()",
  "Common::InstallShieldV3::InstallShieldV3()",
  "Common::InstallShieldV3::close()",
  "Common::InstallShieldV3::createReadStreamForMember(Common::Path const&) const",
  "Common::InstallShieldV3::getMember(Common::Path const&) const",
  "Common::InstallShieldV3::hasFile(Common::Path const&) const",
  "Common::InstallShieldV3::listMembers(Common::List<Common::SharedPtr<Common::ArchiveMember>>&) const",
  "Common::InstallShieldV3::open(Common::String const&)",
  "Common::InstallShieldV3::~InstallShieldV3()",
  "Common::JSON::extractString(char const**, Common::String&)",
  "Common::JSON::parse(char const*)",
  "Common::JSON::stringify(Common::JSONValue const*)",
  "Common::JSONValue::JSONValue(Common::Array<Common::JSONValue*> const&)",
  "Common::JSONValue::JSONValue(Common::HashMap<Common::String, Common::JSONValue*, Common::Hash<Common::String>, Common::EqualTo<Common::String>> const&)",
  "Common::JSONValue::JSONValue(Common::JSONValue const&)",
  "Common::JSONValue::JSONValue(Common::String const&)",
  "Common::JSONValue::JSONValue(char const*)",
  "Common::JSONValue::child(char const*)",
  "Common::JSONValue::decodeUtf8Char(char const*&, char const* const&)",
  "Common::JSONValue::hasChild(char const*) const",
  "Common::JSONValue::indent(unsigned long)",
  "Common::JSONValue::objectKeys() const",
  "Common::JSONValue::parse(char const**)",
  "Common::JSONValue::stringify(bool) const",
  "Common::JSONValue::stringifyImpl(unsigned long) const",
  "Common::JSONValue::stringifyString(Common::String const&)",
  "Common::JSONValue::~JSONValue()",
  "Common::JoystickHardwareInputSet::findHardwareInput(Common::Event const&) const",
  "Common::JoystickHardwareInputSet::findHardwareInput(Common::String const&) const",
  "Common::KeyboardHardwareInputSet::findHardwareInput(Common::Event const&) const",
  "Common::KeyboardHardwareInputSet::findHardwareInput(Common::String const&) const",
  "Common::KeyboardRepeatEventSourceWrapper::allowMapping() constCommon::EventDispatcher::dispatch()",
  "Common::KeyboardRepeatEventSourceWrapper::pollEvent(Common::Event&)",
  "Common::Keymap::Keymap(Common::Keymap::KeymapType, Common::String const&, Common::String const&)",
  "Common::Keymap::Keymap(Common::Keymap::KeymapType, Common::String const&, Common::U32String const&)",
  "Common::Keymap::addAction(Common::Action*)",
  "Common::Keymap::areMappingsIdentical(Common::Array<Common::HardwareInput> const&, Common::Array<Common::String> const&)",
  "Common::Keymap::getActionDefaultMappings(Common::Action*)",
  "Common::Keymap::getActionMapping(Common::Action*) const",
  "Common::Keymap::getMappedActions(Common::Event const&, Common::Array<Common::Action*>&) const",
  "Common::Keymap::loadMappings()",
  "Common::Keymap::registerMapping(Common::Action*, Common::HardwareInput const&)",
  "Common::Keymap::registerMappings(Common::Action*, Common::Array<Common::String> const&)",
  "Common::Keymap::resetMapping(Common::Action*)",
  "Common::Keymap::saveMappings()",
  "Common::Keymap::unregisterMapping(Common::Action*)",
  "Common::Keymap::~Keymap()",
  "Common::Keymapper::Keymapper(Common::EventManager*)",
  "Common::Keymapper::addGameKeymap(Common::Keymap*)",
  "Common::Keymapper::addGlobalKeymap(Common::Keymap*)",
  "Common::Keymapper::cleanupGameKeymaps()",
  "Common::Keymapper::clear()",
  "Common::Keymapper::executeAction(Common::Action const*, Common::Event const&)",
  "Common::Keymapper::findHardwareInput(Common::Event const&)",
  "Common::Keymapper::getMappedActions(Common::Event const&, Common::Array<Common::Action*>&, Common::Keymap::KeymapType) const",
  "Common::Keymapper::hardcodedEventMapping(Common::Event)",
  "Common::Keymapper::initKeymap(Common::Keymap*, Common::ConfigManager::Domain*)",
  "Common::Keymapper::mapEvent(Common::Event const&, Common::List<Common::Event>&)",
  "Common::Keymapper::registerHardwareInputSet(Common::HardwareInputSet*, Common::KeymapperDefaultBindings*)",
  "Common::Keymapper::reloadAllMappings()",
  "Common::Keymapper::reloadKeymapMappings(Common::Keymap*)",
  "Common::Keymapper::~Keymapper()",
  "Common::KeymapperDefaultBindings::findDefaultBinding(Common::String, Common::String) const",
  "Common::List<Common::Event>::operator=(Common::List<Common::Event> const&)",
  "Common::List<Common::INIFile::KeyValue>::List(Common::List<Common::INIFile::KeyValue> const&)",
  "Common::List<Common::INIFile::Section>::List(Common::List<Common::INIFile::Section> const&)",
  "Common::List<Common::INIFile::Section>::clear()",
  "Common::List<Common::INIFile::Section>::erase(Common::ListInternal::NodeBase*)",
  "Common::List<Common::String>::pop_front()",
  "Common::List<Common::String>::~List()",
  "Common::List<GUI::ThemeEngine::ThemeDescriptor>::operator=(Common::List<GUI::ThemeEngine::ThemeDescriptor> const&)",
  "Common::List<TinyGL::DrawCall*>::operator=(Common::List<TinyGL::DrawCall*> const&)",
  "Common::ListInternal::Iterator<Common::SharedPtr<Common::ArchiveMember>> Common::sortPartition<Common::ListInternal::Iterator<Common::SharedPtr<Common::ArchiveMember>>, GUI::ArchiveMemberLess>(Common::ListInternal::Iterator<Common::SharedPtr<Common::ArchiveMember>>, Common::ListInternal::Iterator<Common::SharedPtr<Common::ArchiveMember>>, Common::ListInternal::Iterator<Common::SharedPtr<Common::ArchiveMember>>, GUI::ArchiveMemberLess&)",
  "Common::ListInternal::Iterator<Common::SharedPtr<Common::ArchiveMember>> Common::sortPartition<Common::ListInternal::Iterator<Common::SharedPtr<Common::ArchiveMember>>, GUI::ArchiveMemberListBackComparator>(Common::ListInternal::Iterator<Common::SharedPtr<Common::ArchiveMember>>, Common::ListInternal::Iterator<Common::SharedPtr<Common::ArchiveMember>>, Common::ListInternal::Iterator<Common::SharedPtr<Common::ArchiveMember>>, GUI::ArchiveMemberListBackComparator&)",
  "Common::ListInternal::Iterator<Common::String> Common::sortPartition<Common::ListInternal::Iterator<Common::String>, Common::Less<Common::String>>(Common::ListInternal::Iterator<Common::String>, Common::ListInternal::Iterator<Common::String>, Common::ListInternal::Iterator<Common::String>, Common::Less<Common::String>&)",
  "Common::MacResManager::close()",
  "Common::MacResManager::computeResForkMD5AsString(unsigned int, bool) const",
  "Common::MacResManager::constructAppleDoubleName(Common::Path)",
  "Common::MacResManager::disassembleAppleDoubleName(Common::Path, bool*)",
  "Common::MacResManager::dumpRaw()",
  "Common::MacResManager::exists(Common::Path const&)",
  "Common::MacResManager::getFileFinderInfo(Common::Path const&, Common::Archive&, Common::MacFinderInfo&)",
  "Common::MacResManager::getFileFinderInfo(Common::Path const&, Common::Archive&, Common::MacFinderInfo&, Common::MacFinderExtendedInfo&)",
  "Common::MacResManager::getFileFinderInfo(Common::Path const&, Common::MacFinderInfo&)",
  "Common::MacResManager::getFileFinderInfo(Common::Path const&, Common::MacFinderInfo&, Common::MacFinderExtendedInfo&)",
  "Common::MacResManager::getFinderInfoFromAppleDouble(Common::SeekableReadStream*, Common::MacFinderInfo&, Common::MacFinderExtendedInfo&)",
  "Common::MacResManager::getFinderInfoFromMacBinary(Common::SeekableReadStream*, Common::MacFinderInfo&, Common::MacFinderExtendedInfo&)",
  "Common::MacResManager::getResForkDataSize() const",
  "Common::MacResManager::getResIDArray(unsigned int)",
  "Common::MacResManager::getResName(unsigned int, unsigned short) const",
  "Common::MacResManager::getResTagArray()",
  "Common::MacResManager::getResource(Common::String const&)",
  "Common::MacResManager::getResource(unsigned int, Common::String const&)",
  "Common::MacResManager::getResource(unsigned int, unsigned short)",
  "Common::MacResManager::isMacBinary(Common::SeekableReadStream&)",
  "Common::MacResManager::isRawFork(Common::SeekableReadStream&)",
  "Common::MacResManager::listFiles(Common::Array<Common::String>&, Common::String const&)",
  "Common::MacResManager::load(Common::SeekableReadStream*)",
  "Common::MacResManager::loadFromAppleDouble(Common::SeekableReadStream*)",
  "Common::MacResManager::loadFromMacBinary(Common::SeekableReadStream*)",
  "Common::MacResManager::loadFromRawFork(Common::SeekableReadStream*)",
  "Common::MacResManager::open(Common::Path const&)",
  "Common::MacResManager::open(Common::Path const&, Common::Archive&)",
  "Common::MacResManager::openFileOrDataFork(Common::Path const&)",
  "Common::MacResManager::openFileOrDataFork(Common::Path const&, Common::Archive&)",
  "Common::MacResManager::parseVers(Common::SeekableReadStream*)",
  "Common::MacResManager::readAndValidateMacBinaryHeader(Common::SeekableReadStream&, unsigned char (&) [128])",
  "Common::MacResManager::readMap()",
  "Common::MacResManager::~MacResManager()",
  "Common::MacVISEArchive::ArchiveMember::createReadStream() const",
  "Common::MacVISEArchive::ArchiveMember::getName() const",
  "Common::MacVISEArchive::createReadStreamForMember(Common::Path const&) const",
  "Common::MacVISEArchive::getFileDesc(Common::Path const&) const",
  "Common::MacVISEArchive::getFileDescIndex(Common::Path const&, unsigned int&, Common::MacVISEArchive::ArchiveMember::SubstreamType&) const",
  "Common::MacVISEArchive::getMember(Common::Path const&) const",
  "Common::MacVISEArchive::hasFile(Common::Path const&) const",
  "Common::MacVISEArchive::listMembers(Common::List<Common::SharedPtr<Common::ArchiveMember>>&) const",
  "Common::MacVISEArchive::loadCatalog()",
  "Common::MacVISEArchive::~MacVISEArchive()",
  "Common::MainTranslationManager::~MainTranslationManager()",
  "Common::MemcachingCaseInsensitiveArchive::createReadStreamForMember(Common::Path const&) const",
  "Common::MemcachingCaseInsensitiveArchive::translatePath(Common::Path const&) const",
  "Common::MemcachingCaseInsensitiveArchive::~MemcachingCaseInsensitiveArchive()",
  "Common::MemoryPool::allocChunk()",
  "Common::MemoryPool::allocPage()",
  "Common::MemoryPool::freeUnusedPages()",
  "Common::MemoryReadStream::~MemoryReadStream()",
  "Common::MemoryReadWriteStream::seek(long long, int)",
  "Common::MouseHardwareInputSet::findHardwareInput(Common::Event const&) const",
  "Common::MouseHardwareInputSet::findHardwareInput(Common::String const&) const",
  "Common::Mutex::Mutex()",
  "Common::Mutex::lock()",
  "Common::Mutex::unlock()",
  "Common::Mutex::~Mutex()",
  "Common::NEResources::NEResources()",
  "Common::NEResources::clear()",
  "Common::NEResources::findResource(Common::WinResourceID const&, Common::WinResourceID const&) const",
  "Common::NEResources::getIDList(Common::WinResourceID const&) const",
  "Common::NEResources::getResource(Common::WinResourceID const&, Common::WinResourceID const&)",
  "Common::NEResources::getResourceString(Common::SeekableReadStream&, unsigned int)",
  "Common::NEResources::getResourceTableOffset()",
  "Common::NEResources::loadFromEXE(Common::SeekableReadStream*, DisposeAfterUse::Flag)",
  "Common::NEResources::loadString(unsigned int)",
  "Common::NEResources::parseVersionInfo(Common::SeekableReadStream*)",
  "Common::NEResources::readNameTable(unsigned int, unsigned int)",
  "Common::NEResources::readResourceTable(unsigned int)",
  "Common::NEResources::~NEResources()",
  "Common::OSDMessageQueue::OSDMessageQueue()",
  "Common::OSDMessageQueue::addMessage(Common::U32String const&)",
  "Common::OSDMessageQueue::pollEvent(Common::Event&)",
  "Common::OSDMessageQueue::registerEventSource()",
  "Common::OSDMessageQueue::~OSDMessageQueue()",
  "Common::ObjectPool<Common::HashMap<Common::String, Common::Array<Common::AchievementDescription>, Common::Hash<Common::String>, Common::EqualTo<Common::String>>::Node, 10ul>::deleteChunk(Common::HashMap<Common::String, Common::Array<Common::AchievementDescription>, Common::Hash<Common::String>, Common::EqualTo<Common::String>>::Node*)",
  "Common::ObjectPool<Common::HashMap<Common::WinResourceID, Common::HashMap<Common::WinResourceID, Common::PEResources::Resource, Common::WinResourceID_Hash, Common::WinResourceID_EqualTo>, Common::WinResourceID_Hash, Common::WinResourceID_EqualTo>::Node, 10ul>::deleteChunk(Common::HashMap<Common::WinResourceID, Common::HashMap<Common::WinResourceID, Common::PEResources::Resource, Common::WinResourceID_Hash, Common::WinResourceID_EqualTo>, Common::WinResourceID_Hash, Common::WinResourceID_EqualTo>::Node*)",
  "Common::OutSaveFile::clearErr()",
  "Common::OutSaveFile::err() const",
  "Common::OutSaveFile::finalize()",
  "Common::OutSaveFile::flush()",
  "Common::OutSaveFile::pos() const",
  "Common::OutSaveFile::seek(long long, int)",
  "Common::OutSaveFile::size() const",
  "Common::OutSaveFile::write(void const*, unsigned int)",
  "Common::OutSaveFile::~OutSaveFile()",
  "Common::PEResources::PEResources()",
  "Common::PEResources::clear()",
  "Common::PEResources::getIDList(Common::WinResourceID const&) const",
  "Common::PEResources::getLangList(Common::WinResourceID const&, Common::WinResourceID const&) const",
  "Common::PEResources::getResource(Common::WinResourceID const&, Common::WinResourceID const&)",
  "Common::PEResources::getResource(Common::WinResourceID const&, Common::WinResourceID const&, Common::WinResourceID const&)",
  "Common::PEResources::getTypeList() const",
  "Common::PEResources::loadFromEXE(Common::SeekableReadStream*, DisposeAfterUse::Flag)",
  "Common::PEResources::loadString(unsigned int)",
  "Common::PEResources::parseResourceLevel(Common::PEResources::Section&, unsigned int, int)",
  "Common::PEResources::parseVersionInfo(Common::SeekableReadStream*)",
  "Common::PEResources::~PEResources()",
  "Common::PackBitsReadStream::eos() const",
  "Common::PackBitsReadStream::read(void*, unsigned int)",
  "Common::Path::Path(Common::Path const&)",
  "Common::Path::Path(Common::String const&, char)",
  "Common::Path::Path(char const*, char)",
  "Common::Path::append(Common::Path const&) const",
  "Common::Path::append(Common::String const&, char) const",
  "Common::Path::append(char const*, char) const",
  "Common::Path::appendInPlace(Common::Path const&)",
  "Common::Path::appendInPlace(Common::String const&, char)",
  "Common::Path::appendInPlace(char const*, char)",
  "Common::Path::getLastComponent() const",
  "Common::Path::getParent() const",
  "Common::Path::join(Common::Path const&) const",
  "Common::Path::join(Common::String const&, char) const",
  "Common::Path::join(char const*, char) const",
  "Common::Path::joinInPlace(Common::Path const&)",
  "Common::Path::joinInPlace(Common::String const&, char)",
  "Common::Path::joinInPlace(char const*, char)",
  "Common::Path::operator=(Common::Path const&)",
  "Common::Path::operator=(Common::String const&)",
  "Common::Path::operator=(char const*)",
  "Common::Path::set(char const*, char)",
  "Common::Path::toString(char) const",
  "Common::PowerPackerStream::PowerPackerStream(Common::SeekableReadStream&)",
  "Common::PowerPackerStream::eos() const",
  "Common::PowerPackerStream::getCrunchType(unsigned int)",
  "Common::PowerPackerStream::pos() const",
  "Common::PowerPackerStream::read(void*, unsigned int)",
  "Common::PowerPackerStream::seek(long long, int)",
  "Common::PowerPackerStream::size() const",
  "Common::PowerPackerStream::unpackBuffer(unsigned char const*, unsigned int, unsigned int&)",
  "Common::PowerPackerStream::~PowerPackerStream()",
  "Common::QuickTimeParser::QuickTimeParser()",
  "Common::QuickTimeParser::SampleDesc::~SampleDesc()",
  "Common::QuickTimeParser::Track::~Track()",
  "Common::QuickTimeParser::close()",
  "Common::QuickTimeParser::flattenEditLists()",
  "Common::QuickTimeParser::init()",
  "Common::QuickTimeParser::parseFile(Common::Path const&)",
  "Common::QuickTimeParser::parseStream(Common::SeekableReadStream*, DisposeAfterUse::Flag)",
  "Common::QuickTimeParser::readCMOV(Common::QuickTimeParser::Atom)",
  "Common::QuickTimeParser::readDefault(Common::QuickTimeParser::Atom)",
  "Common::QuickTimeParser::readELST(Common::QuickTimeParser::Atom)",
  "Common::QuickTimeParser::readESDS(Common::QuickTimeParser::Atom)",
  "Common::QuickTimeParser::readHDLR(Common::QuickTimeParser::Atom)",
  "Common::QuickTimeParser::readLeaf(Common::QuickTimeParser::Atom)",
  "Common::QuickTimeParser::readMDHD(Common::QuickTimeParser::Atom)",
  "Common::QuickTimeParser::readMOOV(Common::QuickTimeParser::Atom)",
  "Common::QuickTimeParser::readMVHD(Common::QuickTimeParser::Atom)",
  "Common::QuickTimeParser::readSMI(Common::QuickTimeParser::Atom)",
  "Common::QuickTimeParser::readSTCO(Common::QuickTimeParser::Atom)",
  "Common::QuickTimeParser::readSTSC(Common::QuickTimeParser::Atom)",
  "Common::QuickTimeParser::readSTSD(Common::QuickTimeParser::Atom)",
  "Common::QuickTimeParser::readSTSS(Common::QuickTimeParser::Atom)",
  "Common::QuickTimeParser::readSTSZ(Common::QuickTimeParser::Atom)",
  "Common::QuickTimeParser::readSTTS(Common::QuickTimeParser::Atom)",
  "Common::QuickTimeParser::readTKHD(Common::QuickTimeParser::Atom)",
  "Common::QuickTimeParser::readTRAK(Common::QuickTimeParser::Atom)",
  "Common::QuickTimeParser::readWAVE(Common::QuickTimeParser::Atom)",
  "Common::QuickTimeParser::~QuickTimeParser()",
  "Common::RandomSource::RandomSource(Common::String const&)",
  "Common::Rational::debugPrint(int, char const*) const",
  "Common::ReadStream::readPascalString(bool)",
  "Common::ReadStream::readStream(unsigned int)",
  "Common::ReadStream::readString(char, unsigned long)",
  "Common::RemapWidget::RemapWidget(GUI::GuiObject*, Common::String const&, Common::Array<Common::Keymap*> const&)",
  "Common::RemapWidget::clearMapping(unsigned int)",
  "Common::RemapWidget::handleCommand(GUI::CommandSender*, unsigned int, unsigned int)",
  "Common::RemapWidget::handleInputChanged()",
  "Common::RemapWidget::handleMouseDown(int, int, int, int)",
  "Common::RemapWidget::handleTickle()",
  "Common::RemapWidget::load()",
  "Common::RemapWidget::loadKeymap()",
  "Common::RemapWidget::reflowActionWidgets()",
  "Common::RemapWidget::refreshKeymap()",
  "Common::RemapWidget::resetKeymap(unsigned int)",
  "Common::RemapWidget::resetMapping(unsigned int)",
  "Common::RemapWidget::save()",
  "Common::RemapWidget::startRemapping(unsigned int)",
  "Common::RemapWidget::stopRemapping()",
  "Common::RemapWidget::~RemapWidget()",
  "Common::SIT13_CreateTree(Common::SIT13Data*, Common::BitStreamImpl<Common::SeekableReadStream, unsigned long long, 8, false, false>*, Common::SIT13Buffer*, unsigned short)",
  "Common::SafeSeekableSubReadStream::read(void*, unsigned int)",
  "Common::SafeSeekableSubReadStream::~SafeSeekableSubReadStream()",
  "Common::SaveFileManager::clearError()",
  "Common::SaveFileManager::copySavefile(Common::String const&, Common::String const&, bool)",
  "Common::SaveFileManager::getError()",
  "Common::SaveFileManager::getErrorDesc()",
  "Common::SaveFileManager::popErrorDesc()",
  "Common::SaveFileManager::renameSavefile(Common::String const&, Common::String const&, bool)",
  "Common::SaveFileManager::setError(Common::Error, Common::String const&)",
  "Common::SaveFileManager::~SaveFileManager()",
  "Common::SearchManager::SearchManager()",
  "Common::SearchManager::clear()",
  "Common::SearchManager::~SearchManager()",
  "Common::SearchSet::add(Common::String const&, Common::Archive*, int, bool)",
  "Common::SearchSet::addDirectory(Common::String const&, Common::FSNode const&, int, int, bool)",
  "Common::SearchSet::addDirectory(Common::String const&, Common::String const&, int, int, bool)",
  "Common::SearchSet::addSubDirectoriesMatching(Common::FSNode const&, Common::String, bool, int, int, bool)",
  "Common::SearchSet::clear()",
  "Common::SearchSet::createReadStreamForMember(Common::Path const&) const",
  "Common::SearchSet::getMember(Common::Path const&) const",
  "Common::SearchSet::hasFile(Common::Path const&) const",
  "Common::SearchSet::insert(Common::SearchSet::Node const&)",
  "Common::SearchSet::listMatchingMembers(Common::List<Common::SharedPtr<Common::ArchiveMember>>&, Common::Path const&) const",
  "Common::SearchSet::listMembers(Common::List<Common::SharedPtr<Common::ArchiveMember>>&) const",
  "Common::SearchSet::remove(Common::String const&)",
  "Common::SearchSet::setPriority(Common::String const&, int)",
  "Common::SearchSet::~SearchSet()",
  "Common::SeekableReadStream::hexdump(int, int, int)",
  "Common::SeekableReadStream::readLine(bool)",
  "Common::SeekableReadStream::readLine(char*, unsigned long, bool)",
  "Common::SeekableReadStream::skip(unsigned int)",
  "Common::SeekableSubReadStream::SeekableSubReadStream(Common::SeekableReadStream*, unsigned int, unsigned int, DisposeAfterUse::Flag)",
  "Common::SeekableSubReadStream::seek(long long, int)",
  "Common::SeekableSubReadStream::~SeekableSubReadStream()",
  "Common::SharedArchiveContents::makeStrong()",
  "Common::Singleton<Common::ConfigManager>::instance()",
  "Common::Singleton<Common::MainTranslationManager>::instance()",
  "Common::Singleton<GUI::GuiManager>::instance()",
  "Common::Singleton<Graphics::YUVToRGBManager>::instance()",
  "Common::StackLock::StackLock(Common::Mutex const&, char const*)",
  "Common::StackLock::StackLock(Common::MutexInternal*, char const*)",
  "Common::StackLock::lock()",
  "Common::StackLock::unlock()",
  "Common::StackLock::~StackLock()",
  "Common::StreamDebug::StreamDebug(int)",
  "Common::StreamDebug::maybeSpace()",
  "Common::StreamDebug::operator<<(Common::String const&)",
  "Common::StreamDebug::operator<<(bool)",
  "Common::StreamDebug::operator<<(char const*)",
  "Common::StreamDebug::operator<<(char)",
  "Common::StreamDebug::operator<<(double)",
  "Common::StreamDebug::operator<<(float)",
  "Common::StreamDebug::operator<<(int)",
  "Common::StreamDebug::operator<<(unsigned int)",
  "Common::StreamDebug::operator<<(void*)",
  "Common::StreamDebug::space()",
  "Common::StreamDebug::~StreamDebug()",
  "Common::String Graphics::(anonymous namespace)::handleEllipsis<Common::String>(Graphics::Font const&, Common::String const&, int)",
  "Common::String* Common::sortPartition<Common::String*, Common::Less<Common::String>>(Common::String*, Common::String*, Common::String*, Common::Less<Common::String>&)",
  "Common::String::String(Common::String const&)",
  "Common::String::String(Common::U32String const&, Common::CodePage)",
  "Common::String::String(char const*)",
  "Common::String::decode(Common::CodePage) const",
  "Common::String::encodeInternal(Common::U32String const&, Common::CodePage, char)",
  "Common::String::encodeJohab(Common::U32String const&, char)",
  "Common::String::encodeOneByte(Common::U32String const&, Common::CodePage, bool, char)",
  "Common::String::encodeUTF8(Common::U32String const&, char)",
  "Common::String::encodeWindows932(Common::U32String const&, char)",
  "Common::String::encodeWindows949(Common::U32String const&, char)",
  "Common::String::encodeWindows950(Common::U32String const&, bool, char)",
  "Common::String::forEachLine(Common::String (*)(Common::String, void*), ...) const",
  "Common::String::format(char const*, ...)",
  "Common::String::operator+=(Common::String const&)",
  "Common::String::operator+=(char const*)",
  "Common::String::operator+=(char)",
  "Common::String::operator=(Common::String const&)",
  "Common::String::operator=(Common::String&&)",
  "Common::String::operator=(char const*)",
  "Common::String::operator=(char)",
  "Common::String::replace(char*, char*, Common::String const&)",
  "Common::String::replace(char*, char*, char const*)",
  "Common::String::replace(unsigned int, unsigned int, Common::String const&)",
  "Common::String::replace(unsigned int, unsigned int, Common::String const&, unsigned int, unsigned int)",
  "Common::String::replace(unsigned int, unsigned int, char const*)",
  "Common::String::replace(unsigned int, unsigned int, char const*, unsigned int, unsigned int)",
  "Common::String::substr(unsigned long, unsigned long) const",
  "Common::String::translitChar(char32_t, char)",
  "Common::String::vformat(char const*, void*)",
  "Common::StringTokenizer::StringTokenizer(Common::String const&, Common::String const&)",
  "Common::StringTokenizer::nextToken()",
  "Common::StuffItArchive::StuffItArchive()",
  "Common::StuffItArchive::close()",
  "Common::StuffItArchive::decompress13(Common::SeekableReadStream*, unsigned char*, unsigned int) const",
  "Common::StuffItArchive::decompress14(Common::SeekableReadStream*, unsigned char*, unsigned int) const",
  "Common::StuffItArchive::getMember(Common::Path const&) const",
  "Common::StuffItArchive::hasFile(Common::Path const&) const",
  "Common::StuffItArchive::listMembers(Common::List<Common::SharedPtr<Common::ArchiveMember>>&) const",
  "Common::StuffItArchive::open(Common::SeekableReadStream*)",
  "Common::StuffItArchive::open(Common::String const&)",
  "Common::StuffItArchive::readContentsForPath(Common::String const&) const",
  "Common::StuffItArchive::readTree14(Common::BitStreamImpl<Common::SeekableReadStream, unsigned long long, 8, false, false>*, Common::SIT14Data*, unsigned short, unsigned short*) const",
  "Common::StuffItArchive::translatePath(Common::Path const&) const",
  "Common::StuffItArchive::~StuffItArchive()",
  "Common::SubReadStream::eos() const",
  "Common::SubReadStream::err() const",
  "Common::SubReadStream::read(void*, unsigned int)",
  "Common::SubReadStream::~SubReadStream()",
  "Common::TLanguage* Common::sortPartition<Common::TLanguage*, Common::Less<Common::TLanguage>>(Common::TLanguage*, Common::TLanguage*, Common::TLanguage*, Common::Less<Common::TLanguage>&)",
  "Common::TTSVoice::TTSVoice()",
  "Common::TTSVoice::TTSVoice(Common::TTSVoice const&)",
  "Common::TTSVoice::TTSVoice(Common::TTSVoice::Gender, Common::TTSVoice::Age, void*, Common::String)",
  "Common::TTSVoice::operator=(Common::TTSVoice const&)",
  "Common::TTSVoice::~TTSVoice()",
  "Common::TextToSpeechManager::TextToSpeechManager()",
  "Common::TextToSpeechManager::clearState()",
  "Common::TextToSpeechManager::enable(bool)",
  "Common::TextToSpeechManager::getVoice()",
  "Common::TextToSpeechManager::getVoiceIndicesByGender(Common::TTSVoice::Gender)",
  "Common::TextToSpeechManager::popState()",
  "Common::TextToSpeechManager::pushState()",
  "Common::TextToSpeechManager::setLanguage(Common::String)",
  "Common::TranslationManager::TranslationManager(Common::String const&)",
  "Common::TranslationManager::checkHeader(Common::File&)",
  "Common::TranslationManager::findMatchingLanguage(Common::String const&)",
  "Common::TranslationManager::getCurrentLanguage() const",
  "Common::TranslationManager::getLangById(int) const",
  "Common::TranslationManager::getSupportedLanguageNames() const",
  "Common::TranslationManager::getTranslation(Common::String const&) const",
  "Common::TranslationManager::getTranslation(Common::String const&, Common::String const&) const",
  "Common::TranslationManager::getTranslation(char const*) const",
  "Common::TranslationManager::getTranslation(char const*, char const*) const",
  "Common::TranslationManager::loadLanguageDat(int)",
  "Common::TranslationManager::loadTranslationsInfoDat(Common::String const&)",
  "Common::TranslationManager::openTranslationsFile(Common::FSNode const&, Common::File&, int)",
  "Common::TranslationManager::openTranslationsFile(Common::File&)",
  "Common::TranslationManager::setLanguage(Common::String const&)",
  "Common::TranslationManager::~TranslationManager()",
  "Common::U32String Common::U32String::format<int, int>(Common::U32String const&, int, int)",
  "Common::U32String Graphics::(anonymous namespace)::handleEllipsis<Common::U32String>(Graphics::Font const&, Common::U32String const&, int)",
  "Common::U32String* Common::sortPartition<Common::U32String*, Common::Less<Common::U32String>>(Common::U32String*, Common::U32String*, Common::U32String*, Common::Less<Common::U32String>&)",
  "Common::U32String::U32String(Common::String const&, Common::CodePage)",
  "Common::U32String::U32String(Common::U32String const&)",
  "Common::U32String::U32String(char const*, Common::CodePage)",
  "Common::U32String::U32String(char const*, char const*, Common::CodePage)",
  "Common::U32String::U32String(char const*, unsigned int, Common::CodePage)",
  "Common::U32String::decodeInternal(char const*, unsigned int, Common::CodePage)",
  "Common::U32String::decodeJohab(char const*, unsigned int)",
  "Common::U32String::decodeOneByte(char const*, unsigned int, Common::CodePage)",
  "Common::U32String::decodeUTF16BE(unsigned short const*, unsigned int)",
  "Common::U32String::decodeUTF16LE(unsigned short const*, unsigned int)",
  "Common::U32String::decodeUTF16Native(unsigned short const*, unsigned int)",
  "Common::U32String::decodeUTF8(char const*, unsigned int)",
  "Common::U32String::decodeWindows932(char const*, unsigned int)",
  "Common::U32String::decodeWindows949(char const*, unsigned int)",
  "Common::U32String::decodeWindows950(char const*, unsigned int)",
  "Common::U32String::encode(Common::CodePage) const",
  "Common::U32String::encode(Common::String&, Common::CodePage, char) const",
  "Common::U32String::encodeUTF16BE(unsigned int*) const",
  "Common::U32String::encodeUTF16LE(unsigned int*) const",
  "Common::U32String::encodeUTF16Native(unsigned int*) const",
  "Common::U32String::format(char const*, ...)",
  "Common::U32String::formatInternal(Common::U32String const*, ...)",
  "Common::U32String::insertString(Common::String const&, unsigned int, Common::CodePage)",
  "Common::U32String::insertString(char const*, unsigned int, Common::CodePage)",
  "Common::U32String::operator+=(Common::U32String const&)",
  "Common::U32String::operator+=(char32_t)",
  "Common::U32String::operator=(Common::String const&)",
  "Common::U32String::operator=(Common::U32String const&)",
  "Common::U32String::operator=(Common::U32String&&)",
  "Common::U32String::operator=(char const*)",
  "Common::U32String::operator=(char32_t const*)",
  "Common::U32String::substr(unsigned long, unsigned long) const",
  "Common::U32String::vformat(char32_t const*, char32_t const*, Common::U32String&, void*)",
  "Common::U32StringTokenizer::U32StringTokenizer(Common::U32String const&, Common::String const&)",
  "Common::U32StringTokenizer::nextToken()",
  "Common::UnicodeBiDiText::UnicodeBiDiText(Common::String const&, Common::CodePage, unsigned int*)",
  "Common::UnicodeBiDiText::UnicodeBiDiText(Common::U32String const&, Common::BiDiParagraph)",
  "Common::UnicodeBiDiText::initWithU32String(Common::U32String const&)",
  "Common::UnicodeBiDiText::~UnicodeBiDiText()",
  "Common::VirtualMouse::VirtualMouse(Common::EventDispatcher*)",
  "Common::VirtualMouse::addActionsToKeymap(Common::Keymap*)",
  "Common::VirtualMouse::computeJoystickMouseSpeedFactor() const",
  "Common::VirtualMouse::handleAxisMotion(short, short)",
  "Common::VirtualMouse::notifyEvent(Common::Event const&)",
  "Common::VirtualMouse::pollEvent(Common::Event&)",
  "Common::VirtualMouse::~VirtualMouse()",
  "Common::WinResourceID::WinResourceID(Common::WinResourceID const&)",
  "Common::WinResourceID::getString() const",
  "Common::WinResourceID::operator=(Common::String const&)",
  "Common::WinResourceID::toString() const",
  "Common::WinResources::VersionInfo::VersionInfo()",
  "Common::WinResources::VersionInfo::readVSVersionInfo(Common::SeekableReadStream*)",
  "Common::WinResources::createFromEXE(Common::SeekableReadStream*)",
  "Common::WinResources::createFromEXE(Common::String const&)",
  "Common::WinResources::getResource(Common::WinResourceID const&, Common::WinResourceID const&, Common::WinResourceID const&)",
  "Common::WinResources::getVersionResource(Common::WinResourceID const&)",
  "Common::WinResources::loadFromCompressedEXE(Common::String const&)",
  "Common::WinResources::loadFromEXE(Common::String const&)",
  "Common::WriteStream::finalize()",
  "Common::WriteStream::writeStream(Common::ReadStream*, unsigned int)",
  "Common::WriteStream::writeStream(Common::SeekableReadStream*)",
  "Common::WriteStream::writeString(Common::String const&)",
  "Common::XMLParser::XMLKeyLayout::~XMLKeyLayout()",
  "Common::XMLParser::allocNode()",
  "Common::XMLParser::close()",
  "Common::XMLParser::closeKey()",
  "Common::XMLParser::loadBuffer(unsigned char const*, unsigned int, DisposeAfterUse::Flag)",
  "Common::XMLParser::loadFile(Common::FSNode const&)",
  "Common::XMLParser::loadFile(Common::String const&)",
  "Common::XMLParser::loadStream(Common::SeekableReadStream*)",
  "Common::XMLParser::parse()",
  "Common::XMLParser::parseActiveKey(bool)Common::XMLParser::parseKeyValue(Common::String)",
  "Common::XMLParser::parseToken()",
  "Common::XMLParser::parseXMLHeader(Common::XMLParser::ParserNode*)",
  "Common::XMLParser::parserError(Common::String const&)",
  "Common::XMLParser::skipComments()",
  "Common::XMLParser::skipSpaces()",
  "Common::XMLParser::~XMLParser()",
  "Common::XPFloat::toDouble(Common::XPFloat::Semantics) const",
  "Common::ZipArchive::ZipArchive(void*)",
  "Common::ZipArchive::getMember(Common::Path const&) const",
  "Common::ZipArchive::hasFile(Common::Path const&) const",
  "Common::ZipArchive::listMembers(Common::List<Common::SharedPtr<Common::ArchiveMember>>&) const",
  "Common::ZipArchive::readContentsForPath(Common::String const&) const",
  "Common::ZipArchive::translatePath(Common::Path const&) const",
  "Common::ZipArchive::~ZipArchive()",
  "Common::allRenderModesGUIOs()",
  "Common::bidiByLineHelper(Common::String, void*)",
  "Common::checkGameGUIOptionLanguage(Common::Language, Common::String const&)",
  "Common::checkStubAndComputeCRC1(Common::SeekableReadStream*, unsigned int&)",
  "Common::computeStreamMD5(Common::ReadStream&, unsigned char*, unsigned int)",
  "Common::computeStreamMD5AsString(Common::ReadStream&, unsigned int)",
  "Common::convertBiDiString(Common::String const&, Common::CodePage, Common::BiDiParagraph)",
  "Common::convertBiDiString(Common::String const&, Common::Language, Common::BiDiParagraph)",
  "Common::convertBiDiStringByLines(Common::String const&, Common::CodePage, Common::BiDiParagraph)",
  "Common::convertBiDiU32String(Common::U32String const&, Common::BiDiParagraph)",
  "Common::convertFromU32String(Common::U32String const&, Common::CodePage)",
  "Common::convertToU32String(char const*, Common::CodePage)",
  "Common::convertUHCToUCS(unsigned char, unsigned char)",
  "Common::convertUtf32ToUtf8(Common::U32String const&)",
  "Common::convertUtf8ToUtf32(Common::String const&)",
  "Common::createMacVISEArchive(Common::SeekableReadStream*)",
  "Common::createStuffItArchive(Common::String const&)",
  "Common::decompressDCL(Common::SeekableReadStream*)",
  "Common::decompressDCL(Common::SeekableReadStream*, unsigned int, unsigned int)",
  "Common::errorToString(Common::ErrorCode)",
  "Common::firstPathComponents(Common::String const&, char)",
  "Common::getGameGUIOptionsDescription(Common::String const&)",
  "Common::getGameGUIOptionsDescriptionLanguage(Common::Language)",
  "Common::getHumanReadableBytes(unsigned long long, Common::String&)",
  "Common::getLanguageList()",
  "Common::getLanguageYesNo(Common::KeyCode&, Common::KeyCode&)",
  "Common::getPlatformList()",
  "Common::hexdump(unsigned char const*, int, int, int)",
  "Common::inflateZlibHeaderless(Common::WriteStream*, Common::SeekableReadStream*)",
  "Common::inflateZlibHeaderless(unsigned char*, unsigned int, unsigned char const*, unsigned int, unsigned char const*, unsigned int)",
  "Common::inflateZlibInstallShield(unsigned char*, unsigned int, unsigned char const*, unsigned int)",
  "Common::lastPathComponent(Common::String const&, char)",
  "Common::loadCJKTable(Common::File&, int, unsigned long)",
  "Common::loadCJKTables()",
  "Common::lockMemoryPoolMutex()",
  "Common::makeArjArchive(Common::Array<Common::String> const&)",
  "Common::makeArjArchive(Common::String const&)",
  "Common::makeInstallShieldArchive(Common::String const&)",
  "Common::makeKeyboardRepeatingEventSource(Common::EventSource*)",
  "Common::makeZipArchive(Common::FSNode const&)",
  "Common::makeZipArchive(Common::SeekableReadStream*)",
  "Common::makeZipArchive(Common::String const&)",
  "Common::normalizePath(Common::String const&, char)",
  "Common::operator+(Common::String const&, Common::String const&)",
  "Common::operator+(Common::String const&, char const*)",
  "Common::operator+(Common::String const&, char)",
  "Common::operator+(Common::U32String const&, Common::U32String const&)",
  "Common::operator+(Common::U32String const&, char32_t)",
  "Common::operator+(char const*, Common::String const&)",
  "Common::operator+(char, Common::String const&)",
  "Common::parseGameGUIOptions(Common::String const&)",
  "Common::punycode_decode(Common::String const&)",
  "Common::punycode_decodefilename(Common::String const&)",
  "Common::punycode_decodepath(Common::Path const&)",
  "Common::punycode_encode(Common::U32String const&)",
  "Common::punycode_encodefilename(Common::U32String const&)",
  "Common::punycode_encodepath(Common::Path const&)",
  "Common::readHeader(Common::SeekableReadStream&)",
  "Common::renderMode2GUIO(Common::RenderMode)",
  "Common::replace(Common::String&, Common::String const&, Common::String const&)",
  "Common::sprintf_s(char*, unsigned long, char const*, ...)",
  "Common::strcat_s(char*, unsigned long, char const*)",
  "Common::strcpy_s(char*, unsigned long, char const*)",
  "Common::tag2string(unsigned int, bool)",
  "Common::toPrintable(Common::String const&, bool)",
  "Common::toPrintable(Common::U32String const&, bool)",
  "Common::uncompress(unsigned char*, unsigned long*, unsigned char const*, unsigned long)",
  "Common::unlockMemoryPoolMutex()",
  "Common::updateGameGUIOptions(Common::String const&, Common::String const&)",
  "Common::vsprintf_s(char*, unsigned long, char const*, void*)",
  "Common::wrapBufferedReadStream(Common::ReadStream*, unsigned int, DisposeAfterUse::Flag)",
  "Common::wrapBufferedSeekableReadStream(Common::SeekableReadStream*, unsigned int, DisposeAfterUse::Flag)",
  "Common::wrapBufferedWriteStream(Common::SeekableWriteStream*, unsigned int)",
  "Common::wrapBufferedWriteStream(Common::WriteStream*, unsigned int)",
  "Common::wrapCompressedReadStream(Common::SeekableReadStream*, unsigned int)",
  "Common::wrapCompressedWriteStream(Common::WriteStream*)",
  "ComposerMetaEngineDetection::~ComposerMetaEngineDetection()",
  "Compute_Point_Displacement",
  "Conic_To",
  "CreateMappingString",
  "CruiseMetaEngineDetection::~CruiseMetaEngineDetection()",
  "CryOmni3D::CryOmni3DMetaEngineDetection::fallbackDetect(Common::HashMap<Common::String, Common::FSNode, Common::IgnoreCase_Hash, Common::IgnoreCase_EqualTo> const&, Common::FSList const&, ADDetectedGameExtraInfo**) const",
  "CryOmni3D::CryOmni3DMetaEngineDetection::~CryOmni3DMetaEngineDetection()",
  "CryoMetaEngineDetection::~CryoMetaEngineDetection()",
  "Cubic_To",
  "DISKAUDIO_CaptureFromDevice",
  "DISKAUDIO_CloseDevice",
  "DISKAUDIO_DetectDevices",
  "DISKAUDIO_OpenDevice",
  "DISKAUDIO_PlayDevice",
  "DISKAUDIO_WaitDevice",
  "DM::DMMetaEngineDetection::~DMMetaEngineDetection()",
  "DOSBoxCMS::generateSamples(short*, int)",
  "DOSBoxCMS::init()",
  "DOSBoxCMS::portWriteIntern(int, int, int)",
  "DOSBoxCMS::update(int, short*, int)",
  "DOSBoxCMS::write(int, int)",
  "DOSBoxCMS::writeReg(int, int)",
  "DOSBoxCMS::~DOSBoxCMS()",
  "DUMMYAUDIO_CaptureFromDevice",
  "DefaultAudioCDManager::DefaultAudioCDManager()",
  "DefaultAudioCDManager::close()",
  "DefaultAudioCDManager::existExtractedCDAudioFiles(unsigned int)",
  "DefaultAudioCDManager::fillPotentialTrackNames(Common::Array<Common::String>&, int) const",
  "DefaultAudioCDManager::getStatus() const",
  "DefaultAudioCDManager::isPlaying() const",
  "DefaultAudioCDManager::open()",
  "DefaultAudioCDManager::openRealCD()",
  "DefaultAudioCDManager::play(int, int, int, int, bool, Audio::Mixer::SoundType)",
  "DefaultAudioCDManager::setBalance(signed char)",
  "DefaultAudioCDManager::setVolume(unsigned char)",
  "DefaultAudioCDManager::stop()",
  "DefaultAudioCDManager::update()",
  "DefaultAudioCDManager::~DefaultAudioCDManager()",
  "DefaultEventManager::DefaultEventManager(Common::EventSource*)",
  "DefaultEventManager::getGlobalKeymap()",
  "DefaultEventManager::notifyEvent(Common::Event const&)",
  "DefaultEventManager::pollEvent(Common::Event&)",
  "DefaultEventManager::purgeKeyboardEvents()",
  "DefaultEventManager::purgeMouseEvents()",
  "DefaultEventManager::pushEvent(Common::Event const&)",
  "DefaultEventManager::~DefaultEventManager()",
  "DefaultSaveFileManager::DefaultSaveFileManager()",
  "DefaultSaveFileManager::DefaultSaveFileManager(Common::String const&)",
  "DefaultSaveFileManager::assureCached(Common::String const&)",
  "DefaultSaveFileManager::checkPath(Common::FSNode const&)",
  "DefaultSaveFileManager::concatWithSavesPath(Common::String)",
  "DefaultSaveFileManager::exists(Common::String const&)",
  "DefaultSaveFileManager::getSavePath() const",
  "DefaultSaveFileManager::listSavefiles(Common::String const&)",
  "DefaultSaveFileManager::openForLoading(Common::String const&)",
  "DefaultSaveFileManager::openForSaving(Common::String const&, bool)",
  "DefaultSaveFileManager::openRawFile(Common::String const&)",
  "DefaultSaveFileManager::removeSavefile(Common::String const&)",
  "DefaultSaveFileManager::updateSavefilesList(Common::Array<Common::String>&)",
  "DefaultSaveFileManager::~DefaultSaveFileManager()",
  "DefaultTimerManager::DefaultTimerManager()",
  "DefaultTimerManager::checkTimers(unsigned int)",
  "DefaultTimerManager::handler()",
  "DefaultTimerManager::installTimerProc(void (*)(void*), int, void*, Common::String const&)",
  "DefaultTimerManager::removeTimerProc(void (*)(void*))",
  "DefaultTimerManager::~DefaultTimerManager()",
  "DetectedGame* Common::copy<DetectedGame const*, DetectedGame*>(DetectedGame const*, DetectedGame const*, DetectedGame*)",
  "DetectedGame* Common::copy_backward<DetectedGame*, DetectedGame*>(DetectedGame*, DetectedGame*, DetectedGame*)",
  "DetectedGame::DetectedGame()",
  "DetectedGame::DetectedGame(Common::String const&, Common::String const&, Common::String const&, Common::Language, Common::Platform, Common::String const&, bool)",
  "DetectedGame::DetectedGame(Common::String const&, PlainGameDescriptor const&)",
  "DetectedGame::DetectedGame(DetectedGame const&)",
  "DetectedGame::appendGUIOptions(Common::String const&)",
  "DetectedGame::setGUIOptions(Common::String const&)",
  "DetectedGame::updateDesc(bool) const",
  "DetectionResults::DetectionResults(Common::Array<DetectedGame> const&)",
  "DetectionResults::generateUnknownGameReport(bool, unsigned int) const",
  "DetectionResults::listDetectedGames() const",
  "DetectionResults::listRecognizedGames() const",
  "DirectorMetaEngineDetection::DirectorMetaEngineDetection()",
  "DirectorMetaEngineDetection::fallbackDetect(Common::HashMap<Common::String, Common::FSNode, Common::IgnoreCase_Hash, Common::IgnoreCase_EqualTo> const&, Common::FSList const&, ADDetectedGameExtraInfo**) const",
  "DirectorMetaEngineDetection::~DirectorMetaEngineDetection()",
  "DotMatrixPlugin::DotMatrixPlugin()",
  "DotMatrixPlugin::createInstance(Graphics::PixelFormat const&) const",
  "DraciMetaEngineDetection::~DraciMetaEngineDetection()",
  "DragonsMetaEngineDetection::~DragonsMetaEngineDetection()",
  "Drascula::DrasculaMetaEngineDetection::~DrasculaMetaEngineDetection()",
  "DreamWebMetaEngineDetection::~DreamWebMetaEngineDetection()",
  "DrivePOSIXFilesystemNode::DrivePOSIXFilesystemNode(Common::String const&, DrivePOSIXFilesystemNode::Config const&)",
  "DrivePOSIXFilesystemNode::createReadStream()",
  "DrivePOSIXFilesystemNode::createWriteStream()",
  "DrivePOSIXFilesystemNode::getChild(Common::String const&) const",
  "DrivePOSIXFilesystemNode::getChildWithKnownType(Common::String const&, bool) const",
  "DrivePOSIXFilesystemNode::getChildren(Common::Array<AbstractFSNode*>&, Common::FSNode::ListMode, bool) const",
  "DrivePOSIXFilesystemNode::getParent() const",
  "DrivePOSIXFilesystemNode::isDrive(Common::String const&) const",
  "DrivePOSIXFilesystemNode::makeNode(Common::String const&) const",
  "DrivePOSIXFilesystemNode::~DrivePOSIXFilesystemNode()",
  "DrivesPOSIXFilesystemFactory::addDrive(Common::String const&)",
  "DrivesPOSIXFilesystemFactory::makeCurrentDirectoryFileNode() const",
  "DrivesPOSIXFilesystemFactory::makeFileNodePath(Common::String const&) const",
  "DrivesPOSIXFilesystemFactory::makeRootFileNode() const",
  "DrivesPOSIXFilesystemFactory::~DrivesPOSIXFilesystemFactory()",
  "DynamicPlugin::loadPlugin()",
  "DynamicPlugin::unloadPlugin()",
  "DynamicPlugin::~DynamicPlugin()",
  "EMSCRIPTENAUDIO_Init",
  "EMSCRIPTENAUDIO_OpenDevice",
  "EMSCRIPTEN_JoystickInit",
  "EMSCRIPTEN_JoystickOpen",
  "EMSCRIPTEN_JoystickQuit",
  "EMSCRIPTEN_JoystickRumble",
  "EMSCRIPTEN_JoystickRumbleTriggers",
  "EMSCRIPTEN_JoystickSendEffect",
  "EMSCRIPTEN_JoystickSetLED",
  "EMSCRIPTEN_JoystickSetSensorsEnabled",
  "EMSCRIPTEN_JoystickUpdate",
  "EdgePlugin::EdgePlugin()",
  "EdgePlugin::createInstance(Graphics::PixelFormat const&) const",
  "Emscripten_CreateCursor",
  "Emscripten_CreateDevice",
  "Emscripten_CreateSystemCursor",
  "Emscripten_CreateWindow",
  "Emscripten_CreateWindowFramebuffer",
  "Emscripten_DeleteDevice",
  "Emscripten_DestroyWindow",
  "Emscripten_DestroyWindowFramebuffer",
  "Emscripten_FreeCursor",
  "Emscripten_GLES_CreateContext",
  "Emscripten_GLES_LoadLibrary",
  "Emscripten_GLES_MakeCurrent",
  "Emscripten_GLES_SwapWindow",
  "Emscripten_HandleBeforeUnload",
  "Emscripten_HandleCanvasResize",
  "Emscripten_HandleFocus",
  "Emscripten_HandleFullscreenChange",
  "Emscripten_HandleKey",
  "Emscripten_HandleKeyPress",
  "Emscripten_HandleMouseButton",
  "Emscripten_HandleMouseFocus",
  "Emscripten_HandleMouseMove",
  "Emscripten_HandleResize",
  "Emscripten_HandleTouch",
  "Emscripten_HandleVisibilityChange",
  "Emscripten_HandleWheel",
  "Emscripten_InitMouse",
  "Emscripten_JoyStickConnected",
  "Emscripten_JoyStickDisconnected",
  "Emscripten_UpdateWindowFramebuffer",
  "Emscripten_VideoInit",
  "Emscripten_WarpMouse",
  "Engine::Engine(OSystem*)",
  "Engine::canSaveAutosaveCurrently()",
  "Engine::errorUnsupportedGame(Common::String)",
  "Engine::existExtractedCDAudioFiles(unsigned int)",
  "Engine::flipMute()",
  "Engine::getMetaEngineDetection()",
  "Engine::getOrCreateDebugger()",
  "Engine::getSaveStateName(int) const",
  "Engine::getTotalPlayTime() const",
  "Engine::handleAutoSave()",
  "Engine::initializePath(Common::FSNode const&)",
  "Engine::isDataAndCDAudioReadFromSameCD()",
  "Engine::loadGameDialog()",
  "Engine::loadGameState(int)",
  "Engine::loadGameStream(Common::SeekableReadStream*)",
  "Engine::openMainMenuDialog()",
  "Engine::pauseEngine()",
  "Engine::pauseEngineIntern(bool)",
  "Engine::quitGame()",
  "Engine::resumeEngine()",
  "Engine::runDialog(GUI::Dialog&)",
  "Engine::saveAutosaveIfEnabled()",
  "Engine::saveGameDialog()",
  "Engine::saveGameState(int, Common::String const&, bool)",
  "Engine::saveGameStream(Common::WriteStream*, bool)",
  "Engine::setTotalPlayTime(unsigned int)",
  "Engine::shouldQuit()",
  "Engine::syncSoundSettings()",
  "Engine::warnBeforeOverwritingAutosave()",
  "Engine::warnMissingExtractedCDAudio()",
  "Engine::warnUserAboutUnsupportedGame(Common::String)",
  "Engine::~Engine()",
  "EngineManager::createTargetForGame(DetectedGame const&)",
  "EngineManager::detectGames(Common::FSList const&, unsigned int, bool)",
  "EngineManager::findGameInLoadedPlugins(Common::String const&) const",
  "EngineManager::findGamesMatching(Common::String const&, Common::String const&) const",
  "EngineManager::findPlugin(Common::String const&) const",
  "EngineManager::findTarget(Common::String const&, Plugin const**) const",
  "EngineManager::generateUniqueDomain(Common::String)",
  "EngineManager::getPlugins(PluginType) const",
  "EngineManager::upgradeTargetForEngineId(Common::String const&) const",
  "EngineManager::upgradeTargetIfNecessary(Common::String const&) const",
  "Engines::upgradeTargetIfNecessary(Engines::ObsoleteGameID const*)",
  "EuphonyDriver::EuphonyDriver(Audio::Mixer*, EuphonyPlayer*)",
  "EuphonyDriver::assignPartToChannel(int, int)",
  "EuphonyDriver::cdaToggle(int)",
  "EuphonyDriver::channelPan(int, int)",
  "EuphonyDriver::channelPitch(int, int)",
  "EuphonyDriver::channelVolume(int, int)",
  "EuphonyDriver::controlChange_allNotesOff()",
  "EuphonyDriver::controlChange_panPos()",
  "EuphonyDriver::controlChange_volume()",
  "EuphonyDriver::init()",
  "EuphonyDriver::loadInstrument(int, int, unsigned char const*)",
  "EuphonyDriver::loadWaveTable(unsigned char const*)",
  "EuphonyDriver::noteOff()",
  "EuphonyDriver::noteOn()",
  "EuphonyDriver::pitchWheel()",
  "EuphonyDriver::playSoundEffect(int, int, int, unsigned char const*)",
  "EuphonyDriver::programChange()",
  "EuphonyDriver::reserveSoundEffectChannels(int)",
  "EuphonyDriver::reset()",
  "EuphonyDriver::send(unsigned char)",
  "EuphonyDriver::setInstrument(int, int)",
  "EuphonyDriver::setMusicVolume(int)",
  "EuphonyDriver::setOutputVolume(int, int, int)",
  "EuphonyDriver::setSoundEffectVolume(int)",
  "EuphonyDriver::setTimerA(bool, int)",
  "EuphonyDriver::setTimerB(bool, int)",
  "EuphonyDriver::soundEffectIsPlaying(int)",
  "EuphonyDriver::stopSoundEffect(int)",
  "EuphonyDriver::unloadWaveTable(int)",
  "EuphonyDriver::~EuphonyDriver()",
  "EuphonyPlayer::EuphonyPlayer(Audio::Mixer*)",
  "EuphonyPlayer::allPartsOff()",
  "EuphonyPlayer::clearHangingNotes()",
  "EuphonyPlayer::event_controlChange_pitchWheel()",
  "EuphonyPlayer::event_polyphonicAftertouch()",
  "EuphonyPlayer::event_setTempo()",
  "EuphonyPlayer::event_sysex()",
  "EuphonyPlayer::init()",
  "EuphonyPlayer::parseEvent()",
  "EuphonyPlayer::pause()",
  "EuphonyPlayer::reset()",
  "EuphonyPlayer::resetAllControls()",
  "EuphonyPlayer::sendAllNotesOff(int, int)",
  "EuphonyPlayer::sendByte(unsigned char, unsigned char)",
  "EuphonyPlayer::sendControllerReset(int, int)",
  "EuphonyPlayer::sendPendingEvent(int, int, int, int)",
  "EuphonyPlayer::sendTempo(int)",
  "EuphonyPlayer::setTempo(int)",
  "EuphonyPlayer::stop()",
  "EuphonyPlayer::timerCallback(int)",
  "EuphonyPlayer::updateCheckEot()",
  "EuphonyPlayer::updateHangingNotes()",
  "EuphonyPlayer::updateParser()",
  "EuphonyPlayer::~EuphonyPlayer()",
  "EventsBaseBackend::initBackend()",
  "FNT_Face_Done",
  "FNT_Face_Init",
  "FNT_Load_Glyph",
  "FTC_CMapCache_Lookup",
  "FTC_CMapCache_New",
  "FTC_Cache_NewNode",
  "FTC_ImageCache_Lookup",
  "FTC_ImageCache_LookupScaler",
  "FTC_ImageCache_New",
  "FTC_Manager_Done",
  "FTC_Manager_LookupFace",
  "FTC_Manager_LookupSize",
  "FTC_Manager_New",
  "FTC_Manager_RegisterCache",
  "FTC_Manager_RemoveFaceID",
  "FTC_MruList_New",
  "FTC_SBitCache_Lookup",
  "FTC_SBitCache_LookupScaler",
  "FTC_SBitCache_New",
  "FT_Add_Default_Modules",
  "FT_Add_Module",
  "FT_Attach_File",
  "FT_Attach_Stream",
  "FT_Bitmap_Convert",
  "FT_Bitmap_Copy",
  "FT_Bitmap_Done",
  "FT_Bitmap_Embolden",
  "FT_CMap_Done",
  "FT_CMap_New",
  "FT_ClassicKern_Free",
  "FT_ClassicKern_Validate",
  "FT_Done_Face",
  "FT_Done_FreeType",
  "FT_Done_Glyph",
  "FT_Done_GlyphSlot",
  "FT_Done_Library",
  "FT_Done_Size",
  "FT_Face_CheckTrueTypePatents",
  "FT_Face_GetCharVariantIndex",
  "FT_Face_GetCharVariantIsDefault",
  "FT_Face_GetCharsOfVariant",
  "FT_Face_GetVariantSelectors",
  "FT_Face_GetVariantsOfChar",
  "FT_Get_Advance",
  "FT_Get_AdvanceFTC_Manager_Reset",
  "FT_Get_Advances",
  "FT_Get_BDF_Property",
  "FT_Get_CID_From_Glyph_Index",
  "FT_Get_CID_Registry_Ordering_Supplement",
  "FT_Get_CMap_Format",
  "FT_Get_CMap_Language_ID",
  "FT_Get_Char_Index",
  "FT_Get_FSType_Flags",
  "FT_Get_First_Char",
  "FT_Get_Font_Format",
  "FT_Get_Glyph",
  "FT_Get_Glyph_Name",
  "FT_Get_Kerning",
  "FT_Get_MM_Var",
  "FT_Get_Multi_Master",
  "FT_Get_Name_Index",
  "FT_Get_Next_Char",
  "FT_Get_PFR_Advance",
  "FT_Get_PFR_Kerning",
  "FT_Get_PFR_Metrics",
  "FT_Get_PS_Font_Info",
  "FT_Get_PS_Font_Private",
  "FT_Get_PS_Font_Value",
  "FT_Get_Postscript_Name",
  "FT_Get_Sfnt_Name",
  "FT_Get_Sfnt_Table",
  "FT_Get_Track_Kerning",
  "FT_Get_TrueType_Engine_Type",
  "FT_Get_WinFNT_Header",
  "FT_GlyphLoader_CheckPoints",
  "FT_GlyphLoader_CheckSubGlyphs",
  "FT_GlyphLoader_CopyPoints",
  "FT_GlyphLoader_CreateExtra",
  "FT_GlyphLoader_Done",
  "FT_GlyphLoader_New",
  "FT_GlyphLoader_Reset",
  "FT_GlyphSlot_Embolden",
  "FT_GlyphSlot_Own_Bitmap",
  "FT_Glyph_Copy",
  "FT_Glyph_Get_CBox",
  "FT_Glyph_Stroke",
  "FT_Glyph_StrokeBorder",
  "FT_Glyph_To_Bitmap",
  "FT_Glyph_Transform",
  "FT_Gzip_Uncompress",
  "FT_Init_FreeType",
  "FT_List_Finalize",
  "FT_List_Iterate",
  "FT_Load_Char",
  "FT_Load_Glyph",
  "FT_Load_Sfnt_Table",
  "FT_New_Face",
  "FT_New_GlyphSlot",
  "FT_New_Library",
  "FT_New_Memory_Face",
  "FT_New_Size",
  "FT_OpenType_Free",
  "FT_OpenType_Validate",
  "FT_Open_Face",
  "FT_Outline_Decompose",
  "FT_Outline_Done",
  "FT_Outline_Done_Internal",
  "FT_Outline_Get_BBox",
  "FT_Outline_Get_Bitmap",
  "FT_Outline_New",
  "FT_Outline_New_Internal",
  "FT_Outline_Render",
  "FT_Property_Set",
  "FT_Raccess_Get_DataOffsets",
  "FT_Raccess_Get_HeaderInfo",
  "FT_Raccess_Guess",
  "FT_Remove_Module",
  "FT_Render_Glyph",
  "FT_Render_Glyph_Internal",
  "FT_Request_Size",
  "FT_Select_Size",
  "FT_Set_Char_Size",
  "FT_Set_Charmap",
  "FT_Set_MM_Blend_Coordinates",
  "FT_Set_MM_Design_Coordinates",
  "FT_Set_Pixel_Sizes",
  "FT_Set_Renderer",
  "FT_Set_Var_Blend_Coordinates",
  "FT_Set_Var_Design_Coordinates",
  "FT_Sfnt_Table_Info",
  "FT_Stream_Close",
  "FT_Stream_EnterFrame",
  "FT_Stream_ExitFrame",
  "FT_Stream_ExtractFrame",
  "FT_Stream_Free",
  "FT_Stream_New",
  "FT_Stream_Open",
  "FT_Stream_OpenGzip",
  "FT_Stream_OpenLZW",
  "FT_Stream_Read",
  "FT_Stream_ReadAt",
  "FT_Stream_ReadChar",
  "FT_Stream_ReadFields",
  "FT_Stream_ReadULong",
  "FT_Stream_ReadULongLE",
  "FT_Stream_ReadUOffset",
  "FT_Stream_ReadUShort",
  "FT_Stream_ReadUShortLE",
  "FT_Stream_ReleaseFrame",
  "FT_Stream_Seek",
  "FT_Stream_Skip",
  "FT_Stream_TryRead",
  "FT_Stroker_ConicTo",
  "FT_Stroker_CubicTo",
  "FT_Stroker_Done",
  "FT_Stroker_EndSubPath",
  "FT_Stroker_LineTo",
  "FT_Stroker_New",
  "FT_Stroker_ParseOutline",
  "FT_TrueTypeGX_Free",
  "FT_TrueTypeGX_Validate",
  "FileMapArchive::createReadStreamForMember(Common::Path const&) const",
  "FileMapArchive::getMember(Common::Path const&) const",
  "FileMapArchive::hasFile(Common::Path const&) const",
  "FileMapArchive::listMembers(Common::List<Common::SharedPtr<Common::ArchiveMember>>&) const",
  "FilePluginProvider::addCustomDirectories(Common::FSList&) const",
  "FilePluginProvider::getPlugins()",
  "FilePluginProvider::isPluginFilename(Common::FSNode const&) const",
  "FlushRenderCommandsIfNotBatching",
  "FlushRenderCommandsIfTextureNeeded",
  "FreescapeMetaEngineDetection::~FreescapeMetaEngineDetection()",
  "GCTM(lua_State*)",
  "GLES2_BindTexture",
  "GLES2_CacheShader",
  "GLES2_CacheShaders",
  "GLES2_CreateRenderer",
  "GLES2_CreateTexture",
  "GLES2_DestroyRenderer",
  "GLES2_DestroyTexture",
  "GLES2_GetOutputSize",
  "GLES2_QueueDrawLines",
  "GLES2_QueueDrawPoints",
  "GLES2_QueueGeometry",
  "GLES2_RenderPresent",
  "GLES2_RenderReadPixels",
  "GLES2_RunCommandQueue",
  "GLES2_SetRenderTarget",
  "GLES2_SetTextureScaleMode",
  "GLES2_SetVSync",
  "GLES2_TexSubImage2D",
  "GLES2_UnbindTexture",
  "GLES2_UnlockTexture",
  "GLES2_UpdateTexture",
  "GLES2_UpdateTextureYUV",
  "GLES2_WindowEvent",
  "GUI::AboutDialog::AboutDialog()",
  "GUI::AboutDialog::addLine(Common::U32String const&)",
  "GUI::AboutDialog::close()",
  "GUI::AboutDialog::drawDialog(GUI::DrawLayer)",
  "GUI::AboutDialog::handleKeyDown(Common::KeyState)",
  "GUI::AboutDialog::handleKeyUp(Common::KeyState)",
  "GUI::AboutDialog::handleMouseUp(int, int, int, int)",
  "GUI::AboutDialog::handleTickle()",
  "GUI::AboutDialog::open()",
  "GUI::AboutDialog::reflowLayout()",
  "GUI::AboutDialog::~AboutDialog()",
  "GUI::Animation::setInterpolator(Common::SharedPtr<GUI::Interpolator>)",
  "GUI::Animation::update(GUI::Drawable*, long)",
  "GUI::Animation::~Animation()",
  "GUI::ArchiveMemberLess::operator()(Common::SharedPtr<Common::ArchiveMember> const&, Common::SharedPtr<Common::ArchiveMember> const&) const",
  "GUI::ArchiveMemberListBackComparator::operator()(Common::SharedPtr<Common::ArchiveMember> const&, Common::SharedPtr<Common::ArchiveMember> const&)",
  "GUI::BrowserDialog::BrowserDialog(Common::U32String const&, bool)",
  "GUI::BrowserDialog::handleCommand(GUI::CommandSender*, unsigned int, unsigned int)",
  "GUI::BrowserDialog::open()",
  "GUI::BrowserDialog::runModal()",
  "GUI::BrowserDialog::~BrowserDialog()",
  "GUI::ButtonWidget::ButtonWidget(GUI::GuiObject*, Common::String const&, Common::U32String const&, Common::U32String const&, unsigned int, unsigned char, Common::U32String const&)",
  "GUI::ButtonWidget::ButtonWidget(GUI::GuiObject*, int, int, int, int, Common::U32String const&, Common::U32String const&, unsigned int, unsigned char, Common::U32String const&)",
  "GUI::ButtonWidget::drawWidget()",
  "GUI::ButtonWidget::getLabel()",
  "GUI::ButtonWidget::getMinSize(int&, int&)",
  "GUI::ButtonWidget::handleMouseDown(int, int, int, int)",
  "GUI::ButtonWidget::handleMouseEntered(int)",
  "GUI::ButtonWidget::handleMouseLeft(int)",
  "GUI::ButtonWidget::handleMouseUp(int, int, int, int)",
  "GUI::ButtonWidget::setHighLighted(bool)",
  "GUI::ButtonWidget::setLabel(Common::String const&)",
  "GUI::ButtonWidget::setLabel(Common::U32String const&)",
  "GUI::ButtonWidget::setLowresLabel(Common::U32String const&)",
  "GUI::ButtonWidget::setPressedState()",
  "GUI::ButtonWidget::setUnpressedState()",
  "GUI::ButtonWidget::~ButtonWidget()",
  "GUI::CheckboxWidget::CheckboxWidget(GUI::GuiObject*, Common::String const&, Common::U32String const&, Common::U32String const&, unsigned int, unsigned char)",
  "GUI::CheckboxWidget::CheckboxWidget(GUI::GuiObject*, int, int, int, int, Common::U32String const&, Common::U32String const&, unsigned int, unsigned char)",
  "GUI::CheckboxWidget::drawWidget()",
  "GUI::CheckboxWidget::handleMouseEntered(int)",
  "GUI::CheckboxWidget::handleMouseLeft(int)",
  "GUI::CheckboxWidget::handleMouseUp(int, int, int, int)",
  "GUI::CheckboxWidget::setState(bool)",
  "GUI::CheckboxWidget::~CheckboxWidget()",
  "GUI::ChooserDialog::ChooserDialog(Common::U32String const&, Common::String)",
  "GUI::ChooserDialog::handleCommand(GUI::CommandSender*, unsigned int, unsigned int)",
  "GUI::ChooserDialog::setList(Common::Array<Common::U32String> const&)",
  "GUI::ChooserDialog::~ChooserDialog()",
  "GUI::CommandSender::sendCommand(unsigned int, unsigned int)",
  "GUI::ConfigDialog::ConfigDialog()",
  "GUI::ConfigDialog::apply()",
  "GUI::ConfigDialog::build()",
  "GUI::ConfigDialog::~ConfigDialog()",
  "GUI::ConsoleDialog::ConsoleDialog(float, float)",
  "GUI::ConsoleDialog::addToHistory(Common::String const&)",
  "GUI::ConsoleDialog::close()",
  "GUI::ConsoleDialog::defaultKeyDownHandler(Common::KeyState&)",
  "GUI::ConsoleDialog::drawCaret(bool)",
  "GUI::ConsoleDialog::drawDialog(GUI::DrawLayer)",
  "GUI::ConsoleDialog::drawLine(int)",
  "GUI::ConsoleDialog::getUserInput()",
  "GUI::ConsoleDialog::handleCommand(GUI::CommandSender*, unsigned int, unsigned int)",
  "GUI::ConsoleDialog::handleKeyDown(Common::KeyState)",
  "GUI::ConsoleDialog::handleMouseWheel(int, int, int)",
  "GUI::ConsoleDialog::handleTickle()",
  "GUI::ConsoleDialog::historyScroll(int)",
  "GUI::ConsoleDialog::init()",
  "GUI::ConsoleDialog::loadHistory()",
  "GUI::ConsoleDialog::open()",
  "GUI::ConsoleDialog::print(char const*)",
  "GUI::ConsoleDialog::printChar(int)",
  "GUI::ConsoleDialog::printFormat(int, char const*, ...)",
  "GUI::ConsoleDialog::reflowLayout()",
  "GUI::ConsoleDialog::saveHistory()",
  "GUI::ConsoleDialog::scrollToCurrent()",
  "GUI::ConsoleDialog::slideUpAndClose()",
  "GUI::ConsoleDialog::specialKeys(Common::KeyCode)",
  "GUI::ConsoleDialog::vprintFormat(int, char const*, void*)",
  "GUI::ConsoleDialog::~ConsoleDialog()",
  "GUI::ContainerWidget::ContainerWidget(GUI::GuiObject*, Common::String const&)",
  "GUI::ContainerWidget::ContainerWidget(GUI::GuiObject*, int, int, int, int)",
  "GUI::ContainerWidget::containsWidget(GUI::Widget*) const",
  "GUI::ContainerWidget::drawWidget()",
  "GUI::ContainerWidget::findWidget(int, int)",
  "GUI::ContainerWidget::removeWidget(GUI::Widget*)",
  "GUI::ContainerWidget::~ContainerWidget()",
  "GUI::CountdownMessageDialog::CountdownMessageDialog(Common::U32String const&, unsigned int, Common::U32String const&, Common::U32String const&, Graphics::TextAlign, Common::U32String const&)",
  "GUI::CountdownMessageDialog::handleTickle()",
  "GUI::CountdownMessageDialog::updateCountdown()",
  "GUI::CountdownMessageDialog::~CountdownMessageDialog()",
  "GUI::Debugger::Debugger()",
  "GUI::Debugger::attach(char const*)",
  "GUI::Debugger::clearVars()",
  "GUI::Debugger::cmdDebugFlagDisable(int, char const**)",
  "GUI::Debugger::cmdDebugFlagEnable(int, char const**)",
  "GUI::Debugger::cmdDebugFlagsList(int, char const**)",
  "GUI::Debugger::cmdDebugLevel(int, char const**)",
  "GUI::Debugger::cmdExecFile(int, char const**)",
  "GUI::Debugger::cmdExit(int, char const**)",
  "GUI::Debugger::cmdHelp(int, char const**)",
  "GUI::Debugger::cmdMd5(int, char const**)",
  "GUI::Debugger::cmdMd5Mac(int, char const**)",
  "GUI::Debugger::cmdOpenLog(int, char const**)",
  "GUI::Debugger::debugPrintColumns(Common::Array<Common::String> const&)",
  "GUI::Debugger::debugPrintf(char const*, ...)",
  "GUI::Debugger::debuggerCompletionCallback(GUI::ConsoleDialog*, char const*, Common::String&, void*)",
  "GUI::Debugger::debuggerInputCallback(GUI::ConsoleDialog*, char const*, void*)",
  "GUI::Debugger::detach()",
  "GUI::Debugger::enter()",
  "GUI::Debugger::handleCommand(int, char const**, bool&)",
  "GUI::Debugger::onFrame()",
  "GUI::Debugger::parseCommand(char const*)",
  "GUI::Debugger::postEnter()",
  "GUI::Debugger::preEnter()",
  "GUI::Debugger::registerCmd(Common::String const&, Common::Functor2<int, char const**, bool>*)",
  "GUI::Debugger::registerVarImpl(Common::String const&, void*, GUI::Debugger::VarType, int)",
  "GUI::Debugger::splitCommand(Common::String&, int&, char const**)",
  "GUI::Debugger::tabComplete(char const*, Common::String&) const",
  "GUI::Debugger::~Debugger()",
  "GUI::Dialog::Dialog(Common::String const&)",
  "GUI::Dialog::Dialog(int, int, int, int)",
  "GUI::Dialog::close()",
  "GUI::Dialog::drawDialog(GUI::DrawLayer)",
  "GUI::Dialog::drawWidgets()",
  "GUI::Dialog::findWidget(int, int)",
  "GUI::Dialog::handleCommand(GUI::CommandSender*, unsigned int, unsigned int)",
  "GUI::Dialog::handleKeyDown(Common::KeyState)",
  "GUI::Dialog::handleKeyUp(Common::KeyState)",
  "GUI::Dialog::handleMouseDown(int, int, int, int)",
  "GUI::Dialog::handleMouseMoved(int, int, int)",
  "GUI::Dialog::handleMouseUp(int, int, int, int)",
  "GUI::Dialog::handleMouseWheel(int, int, int)",
  "GUI::Dialog::handleTickle()",
  "GUI::Dialog::markWidgetsAsDirty()",
  "GUI::Dialog::open()",
  "GUI::Dialog::receivedFocus(int, int)",
  "GUI::Dialog::reflowLayout()",
  "GUI::Dialog::releaseFocus()",
  "GUI::Dialog::removeWidget(GUI::Widget*)",
  "GUI::Dialog::runModal()",
  "GUI::Dialog::setFocusWidget(GUI::Widget*)",
  "GUI::Dialog::~Dialog()",
  "GUI::DomainEditTextWidget::~DomainEditTextWidget()",
  "GUI::DropdownButtonWidget::DropdownButtonWidget(GUI::GuiObject*, Common::String const&, Common::U32String const&, Common::U32String const&, unsigned int, unsigned char, Common::U32String const&)",
  "GUI::DropdownButtonWidget::DropdownButtonWidget(GUI::GuiObject*, int, int, int, int, Common::U32String const&, Common::U32String const&, unsigned int, unsigned char, Common::U32String const&)",
  "GUI::DropdownButtonWidget::appendEntry(Common::U32String const&, unsigned int)",
  "GUI::DropdownButtonWidget::clearEntries()",
  "GUI::DropdownButtonWidget::drawWidget()",
  "GUI::DropdownButtonWidget::getMinSize(int&, int&)",
  "GUI::DropdownButtonWidget::handleMouseMoved(int, int, int)",
  "GUI::DropdownButtonWidget::handleMouseUp(int, int, int, int)",
  "GUI::DropdownButtonWidget::reflowLayout()",
  "GUI::DropdownButtonWidget::reset()",
  "GUI::DropdownButtonWidget::~DropdownButtonWidget()",
  "GUI::EE::EE()",
  "GUI::EE::cls(bool)",
  "GUI::EE::doMenu(Common::Event&)",
  "GUI::EE::draw(int, int, int)",
  "GUI::EE::game()",
  "GUI::EE::processKeyDown(Common::Event&)",
  "GUI::EE::putshapes()",
  "GUI::EE::resetpt()",
  "GUI::EE::run()",
  "GUI::EE::setupGraphics()",
  "GUI::EEHandler::handleKeyDown(Common::KeyState&)",
  "GUI::EditGameDialog::EditGameDialog(Common::String const&)",
  "GUI::EditGameDialog::apply()",
  "GUI::EditGameDialog::handleCommand(GUI::CommandSender*, unsigned int, unsigned int)",
  "GUI::EditGameDialog::open()",
  "GUI::EditGameDialog::setupGraphicsTab()",
  "GUI::EditGameDialog::~EditGameDialog()",
  "GUI::EditTextWidget::EditTextWidget(GUI::GuiObject*, Common::String const&, Common::U32String const&, Common::U32String const&, unsigned int, unsigned int, GUI::ThemeEngine::FontStyle)",
  "GUI::EditTextWidget::EditTextWidget(GUI::GuiObject*, int, int, int, int, Common::U32String const&, Common::U32String const&, unsigned int, unsigned int, GUI::ThemeEngine::FontStyle)",
  "GUI::EditTextWidget::abortEditMode()",
  "GUI::EditTextWidget::drawWidget()",
  "GUI::EditTextWidget::endEditMode()",
  "GUI::EditTextWidget::handleMouseDown(int, int, int, int)",
  "GUI::EditTextWidget::lostFocusWidget()",
  "GUI::EditTextWidget::receivedFocusWidget()",
  "GUI::EditTextWidget::reflowLayout()",
  "GUI::EditTextWidget::setEditString(Common::U32String const&)",
  "GUI::EditTextWidget::~EditTextWidget()",
  "GUI::EditableWidget::EditableWidget(GUI::GuiObject*, Common::String const&, Common::U32String const&, unsigned int)",
  "GUI::EditableWidget::EditableWidget(GUI::GuiObject*, int, int, int, int, Common::U32String const&, unsigned int)",
  "GUI::EditableWidget::adjustOffset()",
  "GUI::EditableWidget::caretLogicalPos() const",
  "GUI::EditableWidget::caretVisualPos(int)",
  "GUI::EditableWidget::defaultKeyDownHandler(Common::KeyState&, bool&, bool&, bool&)",
  "GUI::EditableWidget::drawCaret(bool)",
  "GUI::EditableWidget::getCaretOffset() const",
  "GUI::EditableWidget::handleKeyDown(Common::KeyState)",
  "GUI::EditableWidget::handleTickle()",
  "GUI::EditableWidget::init()",
  "GUI::EditableWidget::makeCaretVisible()",
  "GUI::EditableWidget::reflowLayout()",
  "GUI::EditableWidget::setCaretPos(int)",
  "GUI::EditableWidget::setEditString(Common::U32String const&)",
  "GUI::EditableWidget::tryInsertChar(char32_t, int)",
  "GUI::EditableWidget::~EditableWidget()",
  "GUI::ExistingSave* Common::uninitialized_copy<GUI::ExistingSave const*, GUI::ExistingSave>(GUI::ExistingSave const*, GUI::ExistingSave const*, GUI::ExistingSave*)",
  "GUI::ExistingSave* Common::uninitialized_copy<GUI::ExistingSave*, GUI::ExistingSave>(GUI::ExistingSave*, GUI::ExistingSave*, GUI::ExistingSave*)",
  "GUI::ExistingSave::ExistingSave(MetaEngine*, Common::String const&, SaveStateDescriptor const&)",
  "GUI::ExistingSave::operator=(GUI::ExistingSave const&)",
  "GUI::ExtraGuiOptionsWidget::ExtraGuiOptionsWidget(GUI::GuiObject*, Common::String const&, Common::String const&, Common::Array<ExtraGuiOption> const&)",
  "GUI::ExtraGuiOptionsWidget::defineLayout(GUI::ThemeEval&, Common::String const&, Common::String const&) const",
  "GUI::ExtraGuiOptionsWidget::dialogLayout(Common::String const&)",
  "GUI::ExtraGuiOptionsWidget::handleCommand(GUI::CommandSender*, unsigned int, unsigned int)",
  "GUI::ExtraGuiOptionsWidget::load()",
  "GUI::ExtraGuiOptionsWidget::save()",
  "GUI::ExtraGuiOptionsWidget::~ExtraGuiOptionsWidget()",
  "GUI::FileBrowserDialog::FileBrowserDialog(char const*, char const*, int, char const*)",
  "GUI::FileBrowserDialog::handleCommand(GUI::CommandSender*, unsigned int, unsigned int)",
  "GUI::FileBrowserDialog::isProceedSave()",
  "GUI::FileBrowserDialog::normalieFileName()",
  "GUI::FileBrowserDialog::open()",
  "GUI::FileBrowserDialog::updateListing()",
  "GUI::FileBrowserDialog::~FileBrowserDialog()",
  "GUI::GlobalOptionsDialog::GlobalOptionsDialog(GUI::LauncherDialog*)",
  "GUI::GlobalOptionsDialog::addMIDIControls(GUI::GuiObject*, Common::String const&)",
  "GUI::GlobalOptionsDialog::addMiscControls(GUI::GuiObject*, Common::String const&, bool)",
  "GUI::GlobalOptionsDialog::addPathsControls(GUI::GuiObject*, Common::String const&, bool)",
  "GUI::GlobalOptionsDialog::apply()",
  "GUI::GlobalOptionsDialog::apply()::$_0::operator()(GUI::StaticTextWidget*, Common::String const&, Common::U32String const&) const",
  "GUI::GlobalOptionsDialog::build()",
  "GUI::GlobalOptionsDialog::build()::$_0::operator()(GUI::StaticTextWidget*, Common::String const&, Common::U32String const&) const",
  "GUI::GlobalOptionsDialog::clean()",
  "GUI::GlobalOptionsDialog::close()",
  "GUI::GlobalOptionsDialog::handleCommand(GUI::CommandSender*, unsigned int, unsigned int)",
  "GUI::GlobalOptionsDialog::handleTickle()",
  "GUI::GlobalOptionsDialog::reflowLayout()",
  "GUI::GlobalOptionsDialog::updateAutosavePeriod(int)",
  "GUI::GlobalOptionsDialog::~GlobalOptionsDialog()",
  "GUI::GraphicsWidget::GraphicsWidget(GUI::GuiObject*, Common::String const&, Common::U32String const&)",
  "GUI::GraphicsWidget::GraphicsWidget(GUI::GuiObject*, int, int, int, int, Common::U32String const&)",
  "GUI::GraphicsWidget::drawWidget()",
  "GUI::GraphicsWidget::setGfx(Graphics::ManagedSurface const*, bool)",
  "GUI::GraphicsWidget::setGfx(Graphics::Surface const*, bool)",
  "GUI::GraphicsWidget::setGfx(int, int, int, int, int)",
  "GUI::GraphicsWidget::setGfxFromTheme(char const*)",
  "GUI::GraphicsWidget::~GraphicsWidget()",
  "GUI::GridItemInfo* Common::copy<GUI::GridItemInfo const*, GUI::GridItemInfo*>(GUI::GridItemInfo const*, GUI::GridItemInfo const*, GUI::GridItemInfo*)",
  "GUI::GridItemInfo* Common::copy_backward<GUI::GridItemInfo*, GUI::GridItemInfo*>(GUI::GridItemInfo*, GUI::GridItemInfo*, GUI::GridItemInfo*)",
  "GUI::GridItemInfo* Common::uninitialized_copy<GUI::GridItemInfo const*, GUI::GridItemInfo>(GUI::GridItemInfo const*, GUI::GridItemInfo const*, GUI::GridItemInfo*)",
  "GUI::GridItemInfo* Common::uninitialized_copy<GUI::GridItemInfo*, GUI::GridItemInfo>(GUI::GridItemInfo*, GUI::GridItemInfo*, GUI::GridItemInfo*)",
  "GUI::GridItemTray::GridItemTray(GUI::GuiObject*, int, int, int, int, int, GUI::GridWidget*)",
  "GUI::GridItemTray::handleCommand(GUI::CommandSender*, unsigned int, unsigned int)",
  "GUI::GridItemTray::handleMouseDown(int, int, int, int)",
  "GUI::GridItemTray::handleMouseMoved(int, int, int)",
  "GUI::GridItemTray::handleMouseWheel(int, int, int)",
  "GUI::GridItemTray::reflowLayout()",
  "GUI::GridItemTray::~GridItemTray()",
  "GUI::GridItemWidget::GridItemWidget(GUI::GridWidget*)",
  "GUI::GridItemWidget::drawWidget()",
  "GUI::GridItemWidget::handleMouseDown(int, int, int, int)",
  "GUI::GridItemWidget::handleMouseEntered(int)",
  "GUI::GridItemWidget::handleMouseLeft(int)",
  "GUI::GridItemWidget::handleMouseMoved(int, int, int)",
  "GUI::GridItemWidget::handleMouseWheel(int, int, int)",
  "GUI::GridItemWidget::move(int, int)",
  "GUI::GridItemWidget::update()",
  "GUI::GridItemWidget::updateThumb()",
  "GUI::GridItemWidget::~GridItemWidget()",
  "GUI::GridWidget::GridWidget(GUI::GuiObject*, Common::String const&)",
  "GUI::GridWidget::assignEntriesToItems()",
  "GUI::GridWidget::calcEntrySizes()",
  "GUI::GridWidget::calcVisibleEntries()",
  "GUI::GridWidget::demoToSurface(Common::String)",
  "GUI::GridWidget::destroyItems()",
  "GUI::GridWidget::filenameToSurface(Common::String const&)",
  "GUI::GridWidget::groupEntries()",
  "GUI::GridWidget::handleMouseWheel(int, int, int)",
  "GUI::GridWidget::languageToSurface(Common::Language)",
  "GUI::GridWidget::loadFlagIcons()",
  "GUI::GridWidget::loadPlatformIcons()",
  "GUI::GridWidget::move(int, int)",
  "GUI::GridWidget::openTray(int, int, int)",
  "GUI::GridWidget::openTrayAtSelected()",
  "GUI::GridWidget::platformToSurface(Common::Platform)",
  "GUI::GridWidget::reflowLayout()",
  "GUI::GridWidget::reloadThumbnails()",
  "GUI::GridWidget::scrollBarRecalc()",
  "GUI::GridWidget::scrollToEntry(int, bool)",
  "GUI::GridWidget::setAttributeValues(Common::Array<Common::U32String> const&)",
  "GUI::GridWidget::setEntryList(Common::Array<GUI::GridItemInfo>*)",
  "GUI::GridWidget::setFilter(Common::U32String const&)",
  "GUI::GridWidget::setGroupHeaderFormat(Common::U32String const&, Common::U32String const&)",
  "GUI::GridWidget::setMetadataNames(Common::HashMap<Common::String, Common::String, Common::IgnoreCase_Hash, Common::IgnoreCase_EqualTo> const&)",
  "GUI::GridWidget::setSelected(int)",
  "GUI::GridWidget::sortGroups()",
  "GUI::GridWidget::toggleGroup(int)",
  "GUI::GridWidget::updateGrid()",
  "GUI::GridWidget::~GridWidget()",
  "GUI::GroupedListWidget::GroupedListWidget(GUI::Dialog*, Common::String const&, Common::U32String const&, unsigned int)",
  "GUI::GroupedListWidget::drawWidget()",
  "GUI::GroupedListWidget::groupByAttribute()",
  "GUI::GroupedListWidget::handleCommand(GUI::CommandSender*, unsigned int, unsigned int)",
  "GUI::GroupedListWidget::handleMouseDown(int, int, int, int)",
  "GUI::GroupedListWidget::handleMouseUp(int, int, int, int)",
  "GUI::GroupedListWidget::handleMouseWheel(int, int, int)",
  "GUI::GroupedListWidget::setAttributeValues(Common::Array<Common::U32String> const&)",
  "GUI::GroupedListWidget::setFilter(Common::U32String const&, bool)",
  "GUI::GroupedListWidget::setGroupHeaderFormat(Common::U32String const&, Common::U32String const&)",
  "GUI::GroupedListWidget::setList(Common::Array<Common::U32String> const&)",
  "GUI::GroupedListWidget::setMetadataNames(Common::HashMap<Common::String, Common::String, Common::IgnoreCase_Hash, Common::IgnoreCase_EqualTo> const&)",
  "GUI::GroupedListWidget::setSelected(int)",
  "GUI::GroupedListWidget::sortGroups()",
  "GUI::GroupedListWidget::startEditMode()",
  "GUI::GroupedListWidget::toggleGroup(int)",
  "GUI::GroupedListWidget::~GroupedListWidget()",
  "GUI::GuiManager::GuiManager()",
  "GUI::GuiManager::addToTrash(GUI::GuiObject*, GUI::Dialog*)",
  "GUI::GuiManager::animateCursor()",
  "GUI::GuiManager::checkScreenChange()",
  "GUI::GuiManager::closeTopDialog()",
  "GUI::GuiManager::computeScaleFactor()",
  "GUI::GuiManager::displayTopDialogOnly(bool)",
  "GUI::GuiManager::enableKeymap(bool)",
  "GUI::GuiManager::exitLoop()",
  "GUI::GuiManager::getKeymap() const",
  "GUI::GuiManager::giveFocusToDialog(GUI::Dialog*)",
  "GUI::GuiManager::initIconsSet()",
  "GUI::GuiManager::initKeymap()",
  "GUI::GuiManager::initTextToSpeech()",
  "GUI::GuiManager::loadNewTheme(Common::String, GUI::ThemeEngine::GraphicsMode, bool)",
  "GUI::GuiManager::openDialog(GUI::Dialog*)",
  "GUI::GuiManager::processEvent(Common::Event const&, GUI::Dialog*)",
  "GUI::GuiManager::redrawFull()",
  "GUI::GuiManager::restoreState()",
  "GUI::GuiManager::runLoop()",
  "GUI::GuiManager::saveState()",
  "GUI::GuiManager::screenChange()",
  "GUI::GuiManager::setLanguageRTL()",
  "GUI::GuiManager::setLastMousePos(short, short)",
  "GUI::GuiManager::setupCursor()",
  "GUI::GuiManager::~GuiManager()",
  "GUI::GuiObject::GuiObject(Common::String const&)",
  "GUI::GuiObject::getChildX() const",
  "GUI::GuiObject::getChildY() const",
  "GUI::GuiObject::getClipRect() const",
  "GUI::GuiObject::reflowLayout()",
  "GUI::GuiObject::resize(int, int, int, int, bool)",
  "GUI::GuiObject::~GuiObject()",
  "GUI::LangExtraFont* Common::copy<GUI::LangExtraFont const*, GUI::LangExtraFont*>(GUI::LangExtraFont const*, GUI::LangExtraFont const*, GUI::LangExtraFont*)",
  "GUI::LangExtraFont* Common::copy_backward<GUI::LangExtraFont*, GUI::LangExtraFont*>(GUI::LangExtraFont*, GUI::LangExtraFont*, GUI::LangExtraFont*)",
  "GUI::LangExtraFont* Common::uninitialized_copy<GUI::LangExtraFont const*, GUI::LangExtraFont>(GUI::LangExtraFont const*, GUI::LangExtraFont const*, GUI::LangExtraFont*)",
  "GUI::LangExtraFont* Common::uninitialized_copy<GUI::LangExtraFont*, GUI::LangExtraFont>(GUI::LangExtraFont*, GUI::LangExtraFont*, GUI::LangExtraFont*)",
  "GUI::LangExtraFont::LangExtraFont(GUI::TextData, Common::Array<Common::Language>&, Common::String const&, Common::String const&, int)",
  "GUI::LauncherChooser::LauncherChooser()",
  "GUI::LauncherChooser::genGameList()",
  "GUI::LauncherChooser::runModal()",
  "GUI::LauncherChooser::~LauncherChooser()",
  "GUI::LauncherDialog::LauncherDialog(Common::String const&, GUI::LauncherChooser*)",
  "GUI::LauncherDialog::addGame()",
  "GUI::LauncherDialog::addLayoutChooserButtons()",
  "GUI::LauncherDialog::build()",
  "GUI::LauncherDialog::checkModifier(int)",
  "GUI::LauncherDialog::clean()",
  "GUI::LauncherDialog::close()",
  "GUI::LauncherDialog::createSwitchButton(Common::String const&, Common::U32String const&, Common::U32String const&, char const*, unsigned int)",
  "GUI::LauncherDialog::doGameDetection(Common::String const&)",
  "GUI::LauncherDialog::editGame(int)",
  "GUI::LauncherDialog::getGameConfig(int, Common::String)",
  "GUI::LauncherDialog::handleCommand(GUI::CommandSender*, unsigned int, unsigned int)",
  "GUI::LauncherDialog::handleKeyDown(Common::KeyState)",
  "GUI::LauncherDialog::handleKeyUp(Common::KeyState)",
  "GUI::LauncherDialog::handleOtherEvent(Common::Event const&)",
  "GUI::LauncherDialog::loadGame(int)",
  "GUI::LauncherDialog::massAddGame()",
  "GUI::LauncherDialog::open()",
  "GUI::LauncherDialog::rebuild()",
  "GUI::LauncherDialog::reflowLayout()",
  "GUI::LauncherDialog::removeGame(int)",
  "GUI::LauncherDialog::run()",
  "GUI::LauncherDialog::~LauncherDialog()",
  "GUI::LauncherFilterMatcher(void*, int, Common::U32String const&, Common::U32String const&)",
  "GUI::LauncherGrid::LauncherGrid(Common::String const&, GUI::LauncherChooser*)",
  "GUI::LauncherGrid::build()",
  "GUI::LauncherGrid::groupEntries(Common::Array<GUI::LauncherEntry> const&)",
  "GUI::LauncherGrid::handleCommand(GUI::CommandSender*, unsigned int, unsigned int)",
  "GUI::LauncherGrid::handleKeyDown(Common::KeyState)",
  "GUI::LauncherGrid::selectTarget(Common::String const&)",
  "GUI::LauncherGrid::updateButtons()",
  "GUI::LauncherGrid::updateListing()",
  "GUI::LauncherGrid::~LauncherGrid()",
  "GUI::LauncherSimple::LauncherSimple(Common::String const&, GUI::LauncherChooser*)",
  "GUI::LauncherSimple::build()",
  "GUI::LauncherSimple::groupEntries(Common::Array<GUI::LauncherEntry> const&)",
  "GUI::LauncherSimple::handleCommand(GUI::CommandSender*, unsigned int, unsigned int)",
  "GUI::LauncherSimple::handleKeyDown(Common::KeyState)",
  "GUI::LauncherSimple::selectTarget(Common::String const&)",
  "GUI::LauncherSimple::updateButtons()",
  "GUI::LauncherSimple::updateListing()",
  "GUI::LauncherSimple::~LauncherSimple()",
  "GUI::ListWidget::ListWidget(GUI::Dialog*, Common::String const&, Common::U32String const&, unsigned int)",
  "GUI::ListWidget::ListWidget(GUI::Dialog*, int, int, int, int, Common::U32String const&, unsigned int)",
  "GUI::ListWidget::abortEditMode()",
  "GUI::ListWidget::append(Common::String const&)",
  "GUI::ListWidget::containsWidget(GUI::Widget*) const",
  "GUI::ListWidget::copyListData(Common::Array<Common::U32String> const&)",
  "GUI::ListWidget::drawFormattedText(Common::Rect const&, Common::U32String const&, GUI::ThemeEngine::State, Graphics::TextAlign, GUI::ThemeEngine::TextInversionState, int, bool, GUI::ThemeEngine::FontColor)",
  "GUI::ListWidget::drawWidget()",
  "GUI::ListWidget::endEditMode()",
  "GUI::ListWidget::escapeString(Common::U32String const&)",
  "GUI::ListWidget::findItem(int, int) const",
  "GUI::ListWidget::getCaretOffset() const",
  "GUI::ListWidget::getEditRect() const",
  "GUI::ListWidget::getThemeColor(Common::U32String const&)",
  "GUI::ListWidget::getThemeColor(GUI::ThemeEngine::FontColor)",
  "GUI::ListWidget::getThemeColor(unsigned char, unsigned char, unsigned char)",
  "GUI::ListWidget::handleCommand(GUI::CommandSender*, unsigned int, unsigned int)",
  "GUI::ListWidget::handleKeyDown(Common::KeyState)",
  "GUI::ListWidget::handleMouseDown(int, int, int, int)",
  "GUI::ListWidget::handleMouseMoved(int, int, int)",
  "GUI::ListWidget::handleMouseUp(int, int, int, int)",
  "GUI::ListWidget::handleMouseWheel(int, int, int)",
  "GUI::ListWidget::handleTickle()",
  "GUI::ListWidget::lostFocusWidget()",
  "GUI::ListWidget::receivedFocusWidget()",
  "GUI::ListWidget::reflowLayout()",
  "GUI::ListWidget::scrollToEnd()",
  "GUI::ListWidget::setFilter(Common::U32String const&, bool)",
  "GUI::ListWidget::setList(Common::Array<Common::U32String> const&)",
  "GUI::ListWidget::setSelected(int)",
  "GUI::ListWidget::startEditMode()",
  "GUI::ListWidget::stripGUIformatting(Common::U32String const&)",
  "GUI::ListWidget::~ListWidget()",
  "GUI::MassAddDialog::MassAddDialog(Common::FSNode const&)",
  "GUI::MassAddDialog::handleCommand(GUI::CommandSender*, unsigned int, unsigned int)",
  "GUI::MassAddDialog::handleTickle()",
  "GUI::MassAddDialog::~MassAddDialog()",
  "GUI::MessageDialog::MessageDialog(Common::String const&, Common::String const&, Common::String const&, Graphics::TextAlign, char const*)",
  "GUI::MessageDialog::MessageDialog(Common::U32String const&, Common::U32String const&, Common::Array<Common::U32String> const&, Graphics::TextAlign)",
  "GUI::MessageDialog::MessageDialog(Common::U32String const&, Common::U32String const&, Common::U32String const&, Graphics::TextAlign, char const*, Common::U32String const&)",
  "GUI::MessageDialog::handleCommand(GUI::CommandSender*, unsigned int, unsigned int)",
  "GUI::MessageDialog::init(Common::U32String const&, Common::U32String const&, Common::Array<Common::U32String> const&, Graphics::TextAlign, char const*, Common::U32String const&)",
  "GUI::MessageDialog::~MessageDialog()",
  "GUI::MessageDialogWithURL::MessageDialogWithURL(Common::String const&, char const*, char const*, Graphics::TextAlign)",
  "GUI::MessageDialogWithURL::MessageDialogWithURL(Common::U32String const&, char const*, Common::U32String const&, Graphics::TextAlign)",
  "GUI::MessageDialogWithURL::~MessageDialogWithURL()",
  "GUI::MetadataParser::CustomXMLKeyLayout::doCallback(Common::XMLParser*, Common::XMLParser::ParserNode*)",
  "GUI::MetadataParser::CustomXMLKeyLayout::~CustomXMLKeyLayout()",
  "GUI::MetadataParser::MetadataParser()",
  "GUI::MetadataParser::buildLayout()",
  "GUI::MetadataParser::closedKeyCallback(Common::XMLParser::ParserNode*)",
  "GUI::MetadataParser::keyCallback(Common::XMLParser::ParserNode*)",
  "GUI::MetadataParser::~MetadataParser()",
  "GUI::OptionsContainerWidget::OptionsContainerWidget(GUI::GuiObject*, Common::String const&, Common::String const&, bool, Common::String const&)",
  "GUI::OptionsContainerWidget::containsWidget(GUI::Widget*) const",
  "GUI::OptionsContainerWidget::findWidget(int, int)",
  "GUI::OptionsContainerWidget::reflowLayout()",
  "GUI::OptionsContainerWidget::removeWidget(GUI::Widget*)",
  "GUI::OptionsContainerWidget::~OptionsContainerWidget()",
  "GUI::OptionsDialog::OptionsDialog(Common::String const&, Common::String const&)",
  "GUI::OptionsDialog::OptionsDialog(Common::String const&, int, int, int, int)",
  "GUI::OptionsDialog::addAchievementsControls(GUI::GuiObject*, Common::String const&)",
  "GUI::OptionsDialog::addAudioControls(GUI::GuiObject*, Common::String const&)",
  "GUI::OptionsDialog::addControlControls(GUI::GuiObject*, Common::String const&)",
  "GUI::OptionsDialog::addGraphicControls(GUI::GuiObject*, Common::String const&)",
  "GUI::OptionsDialog::addKeyMapperControls(GUI::GuiObject*, Common::String const&, Common::Array<Common::Keymap*> const&, Common::String const&)",
  "GUI::OptionsDialog::addMIDIControls(GUI::GuiObject*, Common::String const&)",
  "GUI::OptionsDialog::addMT32Controls(GUI::GuiObject*, Common::String const&)",
  "GUI::OptionsDialog::addStatisticsControls(GUI::GuiObject*, Common::String const&)",
  "GUI::OptionsDialog::addSubtitleControls(GUI::GuiObject*, Common::String const&, int)",
  "GUI::OptionsDialog::addVolumeControls(GUI::GuiObject*, Common::String const&)",
  "GUI::OptionsDialog::apply()",
  "GUI::OptionsDialog::build()",
  "GUI::OptionsDialog::clean()",
  "GUI::OptionsDialog::close()",
  "GUI::OptionsDialog::getSubtitleMode(bool, bool)",
  "GUI::OptionsDialog::handleCommand(GUI::CommandSender*, unsigned int, unsigned int)",
  "GUI::OptionsDialog::handleOtherEvent(Common::Event const&)",
  "GUI::OptionsDialog::handleTickle()",
  "GUI::OptionsDialog::init()",
  "GUI::OptionsDialog::loadMusicDeviceSetting(GUI::PopUpWidget*, Common::String, MusicType)",
  "GUI::OptionsDialog::open()",
  "GUI::OptionsDialog::rebuild()",
  "GUI::OptionsDialog::reflowLayout()",
  "GUI::OptionsDialog::saveMusicDeviceSetting(GUI::PopUpWidget*, Common::String)",
  "GUI::OptionsDialog::setAudioSettingsState(bool)",
  "GUI::OptionsDialog::setGraphicSettingsState(bool)",
  "GUI::OptionsDialog::setMIDISettingsState(bool)",
  "GUI::OptionsDialog::setMT32SettingsState(bool)",
  "GUI::OptionsDialog::setSubtitleSettingsState(bool)",
  "GUI::OptionsDialog::setVolumeSettingsState(bool)",
  "GUI::OptionsDialog::setupGraphicsTab()",
  "GUI::OptionsDialog::testGraphicsSettings()",
  "GUI::OptionsDialog::updateMusicVolume(int) const",
  "GUI::OptionsDialog::updateScaleFactors(unsigned int)",
  "GUI::OptionsDialog::updateSfxVolume(int) const",
  "GUI::OptionsDialog::updateSpeechVolume(int) const",
  "GUI::OptionsDialog::~OptionsDialog()",
  "GUI::PicButtonWidget::PicButtonWidget(GUI::GuiObject*, Common::String const&, Common::U32String const&, unsigned int, unsigned char)",
  "GUI::PicButtonWidget::PicButtonWidget(GUI::GuiObject*, int, int, int, int, Common::U32String const&, unsigned int, unsigned char)",
  "GUI::PicButtonWidget::drawWidget()",
  "GUI::PicButtonWidget::setGfx(Graphics::ManagedSurface const*, int, bool)",
  "GUI::PicButtonWidget::setGfx(Graphics::Surface const*, int, bool)",
  "GUI::PicButtonWidget::setGfx(int, int, int, int, int, int)",
  "GUI::PicButtonWidget::setGfxFromTheme(char const*, int, bool)",
  "GUI::PicButtonWidget::~PicButtonWidget()",
  "GUI::PopUpDialog::PopUpDialog(GUI::Widget*, Common::String const&, int, int)",
  "GUI::PopUpDialog::appendEntry(Common::U32String const&)",
  "GUI::PopUpDialog::clearEntries()",
  "GUI::PopUpDialog::drawDialog(GUI::DrawLayer)",
  "GUI::PopUpDialog::drawMenuEntry(int, bool)",
  "GUI::PopUpDialog::handleKeyDown(Common::KeyState)",
  "GUI::PopUpDialog::handleMouseMoved(int, int, int)",
  "GUI::PopUpDialog::handleMouseUp(int, int, int, int)",
  "GUI::PopUpDialog::handleMouseWheel(int, int, int)",
  "GUI::PopUpDialog::moveDown()",
  "GUI::PopUpDialog::moveUp()",
  "GUI::PopUpDialog::open()",
  "GUI::PopUpDialog::read(Common::U32String const&)",
  "GUI::PopUpDialog::setSelection(int)",
  "GUI::PopUpDialog::~PopUpDialog()",
  "GUI::PopUpWidget::PopUpWidget(GUI::GuiObject*, Common::String const&, Common::U32String const&, unsigned int)",
  "GUI::PopUpWidget::PopUpWidget(GUI::GuiObject*, int, int, int, int, Common::U32String const&, unsigned int)",
  "GUI::PopUpWidget::appendEntry(Common::String const&, unsigned int)",
  "GUI::PopUpWidget::appendEntry(Common::U32String const&, unsigned int)",
  "GUI::PopUpWidget::clearEntries()",
  "GUI::PopUpWidget::drawWidget()",
  "GUI::PopUpWidget::handleMouseDown(int, int, int, int)",
  "GUI::PopUpWidget::handleMouseEntered(int)",
  "GUI::PopUpWidget::handleMouseLeft(int)GUI::ScrollContainerWidget::getChildY() const",
  "GUI::PopUpWidget::handleMouseWheel(int, int, int)",
  "GUI::PopUpWidget::reflowLayout()",
  "GUI::PopUpWidget::~PopUpWidget()",
  "GUI::PredictiveDialog::PredictiveDialog()",
  "GUI::PredictiveDialog::addWord(GUI::PredictiveDialog::Dict&, Common::String const&, Common::String const&)",
  "GUI::PredictiveDialog::addWordToDict()",
  "GUI::PredictiveDialog::bringWordtoTop(char*, int)",
  "GUI::PredictiveDialog::countWordsInString(char const*)",
  "GUI::PredictiveDialog::handleCommand(GUI::CommandSender*, unsigned int, unsigned int)",
  "GUI::PredictiveDialog::handleKeyDown(Common::KeyState)",
  "GUI::PredictiveDialog::handleKeyUp(Common::KeyState)",
  "GUI::PredictiveDialog::loadAllDictionary(GUI::PredictiveDialog::Dict&)",
  "GUI::PredictiveDialog::loadDictionary(Common::SeekableReadStream*, GUI::PredictiveDialog::Dict&)",
  "GUI::PredictiveDialog::matchWord()",
  "GUI::PredictiveDialog::mergeDicts()",
  "GUI::PredictiveDialog::pressEditText()",
  "GUI::PredictiveDialog::processButton(GUI::PredictiveDialog::ButtonId)",
  "GUI::PredictiveDialog::reflowLayout()",
  "GUI::PredictiveDialog::saveUserDictToFile()",
  "GUI::PredictiveDialog::updateHighLightedButton(GUI::PredictiveDialog::ButtonId)",
  "GUI::PredictiveDialog::~PredictiveDialog()",
  "GUI::RadiobuttonGroup::setEnabled(bool)",
  "GUI::RadiobuttonGroup::setValue(int)",
  "GUI::RadiobuttonWidget::RadiobuttonWidget(GUI::GuiObject*, Common::String const&, GUI::RadiobuttonGroup*, int, Common::U32String const&, Common::U32String const&, unsigned char)",
  "GUI::RadiobuttonWidget::RadiobuttonWidget(GUI::GuiObject*, int, int, int, int, GUI::RadiobuttonGroup*, int, Common::U32String const&, Common::U32String const&, unsigned char)",
  "GUI::RadiobuttonWidget::drawWidget()",
  "GUI::RadiobuttonWidget::handleMouseEntered(int)",
  "GUI::RadiobuttonWidget::handleMouseLeft(int)",
  "GUI::RadiobuttonWidget::handleMouseUp(int, int, int, int)",
  "GUI::RadiobuttonWidget::setState(bool, bool)",
  "GUI::RadiobuttonWidget::~RadiobuttonWidget()",
  "GUI::RepeatAnimationWrapper::start(long)",
  "GUI::RepeatAnimationWrapper::update(GUI::Drawable*, long)",
  "GUI::RepeatAnimationWrapper::~RepeatAnimationWrapper()",
  "GUI::SaveLoadChooser::SaveLoadChooser(Common::U32String const&, Common::U32String const&, bool)",
  "GUI::SaveLoadChooser::createDefaultSaveDescription(int) const",
  "GUI::SaveLoadChooser::getResultString() const",
  "GUI::SaveLoadChooser::runModalWithCurrentTarget()",
  "GUI::SaveLoadChooser::runModalWithMetaEngineAndTarget(MetaEngine const*, Common::String const&)",
  "GUI::SaveLoadChooser::selectChooser(MetaEngine const*)",
  "GUI::SaveLoadChooser::~SaveLoadChooser()",
  "GUI::SaveLoadChooserDialog::SaveLoadChooserDialog(Common::String const&, bool)",
  "GUI::SaveLoadChooserDialog::SaveLoadChooserDialog(int, int, int, int, bool)",
  "GUI::SaveLoadChooserDialog::activate(int, Common::U32String const&)",
  "GUI::SaveLoadChooserDialog::addChooserButtons()",
  "GUI::SaveLoadChooserDialog::close()",
  "GUI::SaveLoadChooserDialog::createSwitchButton(Common::String const&, Common::U32String const&, Common::U32String const&, char const*, unsigned int)",
  "GUI::SaveLoadChooserDialog::handleCommand(GUI::CommandSender*, unsigned int, unsigned int)",
  "GUI::SaveLoadChooserDialog::handleTickle()",
  "GUI::SaveLoadChooserDialog::listSaves()",
  "GUI::SaveLoadChooserDialog::open()",
  "GUI::SaveLoadChooserDialog::reflowLayout()",
  "GUI::SaveLoadChooserDialog::run(Common::String const&, MetaEngine const*)",
  "GUI::SaveLoadChooserDialog::updateSaveList()",
  "GUI::SaveLoadChooserDialog::~SaveLoadChooserDialog()",
  "GUI::SaveLoadChooserGrid::SaveLoadChooserGrid(Common::U32String const&, bool)",
  "GUI::SaveLoadChooserGrid::close()",
  "GUI::SaveLoadChooserGrid::destroyButtons()",
  "GUI::SaveLoadChooserGrid::getResultString() const",
  "GUI::SaveLoadChooserGrid::handleCommand(GUI::CommandSender*, unsigned int, unsigned int)",
  "GUI::SaveLoadChooserGrid::handleMouseWheel(int, int, int)",
  "GUI::SaveLoadChooserGrid::hideButtons()",
  "GUI::SaveLoadChooserGrid::open()",
  "GUI::SaveLoadChooserGrid::reflowLayout()",
  "GUI::SaveLoadChooserGrid::selectDescription()",
  "GUI::SaveLoadChooserGrid::updateSaveList()",
  "GUI::SaveLoadChooserGrid::updateSaves()",
  "GUI::SaveLoadChooserGrid::~SaveLoadChooserGrid()",
  "GUI::SaveLoadChooserSimple::SaveLoadChooserSimple(Common::U32String const&, Common::U32String const&, bool)",
  "GUI::SaveLoadChooserSimple::addThumbnailContainer()",
  "GUI::SaveLoadChooserSimple::close()",
  "GUI::SaveLoadChooserSimple::getResultString() const",
  "GUI::SaveLoadChooserSimple::handleCommand(GUI::CommandSender*, unsigned int, unsigned int)",
  "GUI::SaveLoadChooserSimple::open()",
  "GUI::SaveLoadChooserSimple::reflowLayout()",
  "GUI::SaveLoadChooserSimple::runIntern()",
  "GUI::SaveLoadChooserSimple::updateSaveList()",
  "GUI::SaveLoadChooserSimple::updateSelection(bool)",
  "GUI::SaveLoadChooserSimple::~SaveLoadChooserSimple()",
  "GUI::SavenameDialog::SavenameDialog()",
  "GUI::SavenameDialog::getDescription()",
  "GUI::SavenameDialog::handleCommand(GUI::CommandSender*, unsigned int, unsigned int)",
  "GUI::SavenameDialog::open()",
  "GUI::SavenameDialog::setDescription(Common::U32String const&)",
  "GUI::SavenameDialog::~SavenameDialog()",
  "GUI::ScrollBarWidget::ScrollBarWidget(GUI::GuiObject*, int, int, int, int)",
  "GUI::ScrollBarWidget::checkBounds(int)",
  "GUI::ScrollBarWidget::drawWidget()",
  "GUI::ScrollBarWidget::handleMouseDown(int, int, int, int)",
  "GUI::ScrollBarWidget::handleMouseLeft(int)",
  "GUI::ScrollBarWidget::handleMouseMoved(int, int, int)",
  "GUI::ScrollBarWidget::handleMouseWheel(int, int, int)",
  "GUI::ScrollBarWidget::handleTickle()",
  "GUI::ScrollBarWidget::~ScrollBarWidget()",
  "GUI::ScrollContainerWidget::ScrollContainerWidget(GUI::GuiObject*, Common::String const&, Common::String const&, unsigned int)",
  "GUI::ScrollContainerWidget::ScrollContainerWidget(GUI::GuiObject*, int, int, int, int, unsigned int)",
  "GUI::ScrollContainerWidget::findWidget(int, int)",
  "GUI::ScrollContainerWidget::getChildX() const",
  "GUI::ScrollContainerWidget::getClipRect() const",
  "GUI::ScrollContainerWidget::getWidth() const",
  "GUI::ScrollContainerWidget::handleCommand(GUI::CommandSender*, unsigned int, unsigned int)",
  "GUI::ScrollContainerWidget::handleMouseWheel(int, int, int)",
  "GUI::ScrollContainerWidget::init()",
  "GUI::ScrollContainerWidget::recalc()",
  "GUI::ScrollContainerWidget::reflowLayout()",
  "GUI::ScrollContainerWidget::~ScrollContainerWidget()",
  "GUI::SequenceAnimationComposite::addAnimation(Common::SharedPtr<GUI::Animation>)",
  "GUI::SequenceAnimationComposite::update(GUI::Drawable*, long)",
  "GUI::SequenceAnimationComposite::~SequenceAnimationComposite()",
  "GUI::SliderWidget::SliderWidget(GUI::GuiObject*, Common::String const&, Common::U32String const&, unsigned int)",
  "GUI::SliderWidget::SliderWidget(GUI::GuiObject*, int, int, int, int, Common::U32String const&, unsigned int)",
  "GUI::SliderWidget::drawWidget()",
  "GUI::SliderWidget::handleMouseDown(int, int, int, int)",
  "GUI::SliderWidget::handleMouseLeft(int)",
  "GUI::SliderWidget::handleMouseMoved(int, int, int)",
  "GUI::SliderWidget::handleMouseUp(int, int, int, int)",
  "GUI::SliderWidget::handleMouseWheel(int, int, int)",
  "GUI::SliderWidget::~SliderWidget()",
  "GUI::SliderWidget::~SliderWidget()GUI::SliderWidget::handleMouseEntered(int)",
  "GUI::StaticTextWidget::StaticTextWidget(GUI::GuiObject*, Common::String const&, Common::U32String const&, Common::U32String const&, GUI::ThemeEngine::FontStyle, Common::Language, bool)",
  "GUI::StaticTextWidget::StaticTextWidget(GUI::GuiObject*, int, int, int, int, Common::U32String const&, Graphics::TextAlign, Common::U32String const&, GUI::ThemeEngine::FontStyle, Common::Language, bool)",
  "GUI::StaticTextWidget::drawWidget()",
  "GUI::StaticTextWidget::handleMouseEntered(int)",
  "GUI::StaticTextWidget::setAlign(Graphics::TextAlign)",
  "GUI::StaticTextWidget::setFont(GUI::ThemeEngine::FontStyle, Common::Language)",
  "GUI::StaticTextWidget::setLabel(Common::U32String const&)",
  "GUI::StaticTextWidget::setValue(int)",
  "GUI::StaticTextWidget::~StaticTextWidget()",
  "GUI::TabWidget::TabWidget(GUI::GuiObject*, Common::String const&)",
  "GUI::TabWidget::TabWidget(GUI::GuiObject*, int, int, int, int)",
  "GUI::TabWidget::addChild(GUI::Widget*)",
  "GUI::TabWidget::addTab(Common::U32String const&, Common::String const&, bool)",
  "GUI::TabWidget::adjustTabs(int)",
  "GUI::TabWidget::containsWidget(GUI::Widget*) const",
  "GUI::TabWidget::draw()",
  "GUI::TabWidget::drawWidget()",
  "GUI::TabWidget::findWidget(int, int)",
  "GUI::TabWidget::getChildY() const",
  "GUI::TabWidget::handleCommand(GUI::CommandSender*, unsigned int, unsigned int)",
  "GUI::TabWidget::handleKeyDown(Common::KeyState)",
  "GUI::TabWidget::handleMouseDown(int, int, int, int)",
  "GUI::TabWidget::handleMouseMoved(int, int, int)",
  "GUI::TabWidget::handleMouseWheel(int, int, int)",
  "GUI::TabWidget::init()",
  "GUI::TabWidget::markAsDirty()",
  "GUI::TabWidget::recalc()",
  "GUI::TabWidget::reflowLayout()",
  "GUI::TabWidget::removeTab(int)",
  "GUI::TabWidget::removeWidget(GUI::Widget*)",
  "GUI::TabWidget::setActiveTab(int)",
  "GUI::TabWidget::setFirstVisible(int, bool)",
  "GUI::TabWidget::~TabWidget()",
  "GUI::ThemeBrowser::ThemeBrowser()",
  "GUI::ThemeBrowser::handleCommand(GUI::CommandSender*, unsigned int, unsigned int)",
  "GUI::ThemeBrowser::open()",
  "GUI::ThemeBrowser::updateListing()",
  "GUI::ThemeBrowser::~ThemeBrowser()",
  "GUI::ThemeEngine::ThemeEngine(Common::String, GUI::ThemeEngine::GraphicsMode)",
  "GUI::ThemeEngine::addBitmap(Common::String const&, Common::String const&, int, int)",
  "GUI::ThemeEngine::addDirtyRect(Common::Rect)",
  "GUI::ThemeEngine::addDrawData(Common::String const&, bool)",
  "GUI::ThemeEngine::addDrawStep(Common::String const&, Graphics::DrawStep const&)",
  "GUI::ThemeEngine::addFont(GUI::TextData, Common::String const&, Common::String const&, Common::String const&, int)",
  "GUI::ThemeEngine::addTextColor(GUI::TextColor, int, int, int)",
  "GUI::ThemeEngine::applyScreenShading(GUI::ThemeEngine::ShadingStyle)",
  "GUI::ThemeEngine::createCursor(Common::String const&, int, int)",
  "GUI::ThemeEngine::debugWidgetPosition(char const*, Common::Rect const&)",
  "GUI::ThemeEngine::disable()",
  "GUI::ThemeEngine::drawButton(Common::Rect const&, Common::U32String const&, GUI::ThemeEngine::State, unsigned short)",
  "GUI::ThemeEngine::drawCaret(Common::Rect const&, bool)",
  "GUI::ThemeEngine::drawChar(Common::Rect const&, unsigned char, Graphics::Font const*, GUI::ThemeEngine::FontColor)",
  "GUI::ThemeEngine::drawCheckbox(Common::Rect const&, int, Common::U32String const&, bool, GUI::ThemeEngine::State, bool, bool)",
  "GUI::ThemeEngine::drawDD(GUI::DrawData, Common::Rect const&, unsigned int, bool)",
  "GUI::ThemeEngine::drawDDText(GUI::TextData, GUI::TextColor, Common::Rect const&, Common::U32String const&, bool, bool, Graphics::TextAlign, GUI::ThemeEngine::TextAlignVertical, int, Common::Rect const&)",
  "GUI::ThemeEngine::drawDialogBackground(Common::Rect const&, GUI::ThemeEngine::DialogBackground)",
  "GUI::ThemeEngine::drawDropDownButton(Common::Rect const&, unsigned int, Common::U32String const&, GUI::ThemeEngine::State, bool, bool, bool)",
  "GUI::ThemeEngine::drawFoldIndicator(Common::Rect const&, bool)",
  "GUI::ThemeEngine::drawLineSeparator(Common::Rect const&)",
  "GUI::ThemeEngine::drawPopUpWidget(Common::Rect const&, Common::U32String const&, int, GUI::ThemeEngine::State, bool)",
  "GUI::ThemeEngine::drawRadiobutton(Common::Rect const&, int, Common::U32String const&, bool, GUI::ThemeEngine::State, bool)",
  "GUI::ThemeEngine::drawScrollbar(Common::Rect const&, int, int, GUI::ThemeEngine::ScrollbarState)",
  "GUI::ThemeEngine::drawSlider(Common::Rect const&, int, GUI::ThemeEngine::State, bool)",
  "GUI::ThemeEngine::drawSurface(Common::Point const&, Graphics::ManagedSurface const&, bool)",
  "GUI::ThemeEngine::drawTab(Common::Rect const&, int, Common::Array<int> const&, Common::Array<Common::U32String> const&, int, bool)",
  "GUI::ThemeEngine::drawText(Common::Rect const&, Common::U32String const&, GUI::ThemeEngine::State, Graphics::TextAlign, GUI::ThemeEngine::TextInversionState, int, bool, GUI::ThemeEngine::FontStyle, GUI::ThemeEngine::FontColor, bool, Common::Rect const&)",
  "GUI::ThemeEngine::drawToBackbuffer()",
  "GUI::ThemeEngine::drawToScreen()",
  "GUI::ThemeEngine::drawWidgetBackground(Common::Rect const&, GUI::ThemeEngine::WidgetBackground)",
  "GUI::ThemeEngine::enable()",
  "GUI::ThemeEngine::genCacheFilename(Common::String const&) const",
  "GUI::ThemeEngine::getCharWidth(unsigned int, GUI::ThemeEngine::FontStyle) const",
  "GUI::ThemeEngine::getFontHeight(GUI::ThemeEngine::FontStyle) const",
  "GUI::ThemeEngine::getKerningOffset(unsigned int, unsigned int, GUI::ThemeEngine::FontStyle) const",
  "GUI::ThemeEngine::getStringWidth(Common::U32String const&, GUI::ThemeEngine::FontStyle) const",
  "GUI::ThemeEngine::getThemeFile(Common::String const&)",
  "GUI::ThemeEngine::getThemeId(Common::String const&)",
  "GUI::ThemeEngine::hideCursor()",
  "GUI::ThemeEngine::listUsableThemes(Common::Archive&, Common::List<GUI::ThemeEngine::ThemeDescriptor>&)",
  "GUI::ThemeEngine::listUsableThemes(Common::FSNode const&, Common::List<GUI::ThemeEngine::ThemeDescriptor>&, int)",
  "GUI::ThemeEngine::listUsableThemes(Common::List<GUI::ThemeEngine::ThemeDescriptor>&)",
  "GUI::ThemeEngine::loadDefaultXML()",
  "GUI::ThemeEngine::loadExtraFont(GUI::ThemeEngine::FontStyle, Common::Language)",
  "GUI::ThemeEngine::loadFont(Common::String const&, Common::String const&, int, bool)",
  "GUI::ThemeEngine::loadFont(Common::String const&, Common::String&)",
  "GUI::ThemeEngine::loadScalableFont(Common::String const&, int, Common::String&)",
  "GUI::ThemeEngine::loadTheme(Common::String const&)",
  "GUI::ThemeEngine::loadThemeXML(Common::String const&)",
  "GUI::ThemeEngine::refresh()",
  "GUI::ThemeEngine::restoreBackground(Common::Rect)",
  "GUI::ThemeEngine::setGraphicsMode(GUI::ThemeEngine::GraphicsMode)",
  "GUI::ThemeEngine::showCursor()",
  "GUI::ThemeEngine::storeFontNames(GUI::TextData, Common::String const&, Common::String const&, Common::String const&, int)",
  "GUI::ThemeEngine::themeConfigParseHeader(Common::String, Common::String&)",
  "GUI::ThemeEngine::themeConfigUsable(Common::ArchiveMember const&, Common::String&)",
  "GUI::ThemeEngine::themeConfigUsable(Common::FSNode const&, Common::String&)",
  "GUI::ThemeEngine::unloadTheme()",
  "GUI::ThemeEngine::updateDirtyScreen()",
  "GUI::ThemeEngine::updateScreen()",
  "GUI::ThemeEngine::~ThemeEngine()",
  "GUI::ThemeEval::ThemeEval()",
  "GUI::ThemeEval::addDialog(Common::String const&, Common::String const&, short, short, int)",
  "GUI::ThemeEval::addImportedLayout(Common::String const&)",
  "GUI::ThemeEval::addLayout(GUI::ThemeLayout::LayoutType, int, GUI::ThemeLayout::ItemAlign)",
  "GUI::ThemeEval::addSpace(int)",
  "GUI::ThemeEval::addWidget(Common::String const&, Common::String const&, int, int, Graphics::TextAlign, bool)",
  "GUI::ThemeEval::buildBuiltinVars()",
  "GUI::ThemeEval::getVar(Common::String const&)",
  "GUI::ThemeEval::getVar(Common::String const&, int)",
  "GUI::ThemeEval::getWidgetData(Common::String const&, short&, short&, short&, short&)",
  "GUI::ThemeEval::getWidgetData(Common::String const&, short&, short&, short&, short&, bool&)",
  "GUI::ThemeEval::getWidgetTextHAlign(Common::String const&)",
  "GUI::ThemeEval::hasDialog(Common::String const&)",
  "GUI::ThemeEval::reflowDialogLayout(Common::String const&, GUI::Widget*)",
  "GUI::ThemeEval::reset()",
  "GUI::ThemeEval::~ThemeEval()",
  "GUI::ThemeLayout::getWidgetData(Common::String const&, short&, short&, short&, short&, bool&)",
  "GUI::ThemeLayout::getWidgetTextHAlign(Common::String const&)",
  "GUI::ThemeLayout::importLayout(GUI::ThemeLayout*)",
  "GUI::ThemeLayout::resetLayout()",
  "GUI::ThemeLayout::~ThemeLayout()",
  "GUI::ThemeLayoutMain::reflowLayout(GUI::Widget*)",
  "GUI::ThemeLayoutMain::resetLayout()",
  "GUI::ThemeLayoutMain::~ThemeLayoutMain()",
  "GUI::ThemeLayoutSpacing::makeClone(GUI::ThemeLayout*)",
  "GUI::ThemeLayoutSpacing::~ThemeLayoutSpacing()",
  "GUI::ThemeLayoutStacked::getParentHeight()",
  "GUI::ThemeLayoutStacked::getParentWidth()",
  "GUI::ThemeLayoutStacked::makeClone(GUI::ThemeLayout*)",
  "GUI::ThemeLayoutStacked::reflowLayout(GUI::Widget*)",
  "GUI::ThemeLayoutStacked::reflowLayoutHorizontal(GUI::Widget*)",
  "GUI::ThemeLayoutStacked::reflowLayoutVertical(GUI::Widget*)",
  "GUI::ThemeLayoutStacked::~ThemeLayoutStacked()",
  "GUI::ThemeLayoutTabWidget::makeClone(GUI::ThemeLayout*)",
  "GUI::ThemeLayoutTabWidget::reflowLayout(GUI::Widget*)",
  "GUI::ThemeLayoutTabWidget::~ThemeLayoutTabWidget()",
  "GUI::ThemeLayoutWidget::getWidget(GUI::Widget*) const",
  "GUI::ThemeLayoutWidget::isBound(GUI::Widget*) const",
  "GUI::ThemeLayoutWidget::makeClone(GUI::ThemeLayout*)",
  "GUI::ThemeLayoutWidget::~ThemeLayoutWidget()",
  "GUI::ThemeParser::CustomXMLKeyLayout::doCallback(Common::XMLParser*, Common::XMLParser::ParserNode*)",
  "GUI::ThemeParser::CustomXMLKeyLayout::~CustomXMLKeyLayout()",
  "GUI::ThemeParser::ThemeParser(GUI::ThemeEngine*)",
  "GUI::ThemeParser::buildLayout()",
  "GUI::ThemeParser::cleanup()",
  "GUI::ThemeParser::closedKeyCallback(Common::XMLParser::ParserNode*)",
  "GUI::ThemeParser::defaultDrawStep()",
  "GUI::ThemeParser::getPaletteColor(Common::String const&, int&, int&, int&)",
  "GUI::ThemeParser::keyCallback(Common::XMLParser::ParserNode*)",
  "GUI::ThemeParser::newDrawStep()",
  "GUI::ThemeParser::parseCommonLayoutProps(Common::XMLParser::ParserNode*, Common::String const&)",
  "GUI::ThemeParser::parseDrawStep(Common::XMLParser::ParserNode*, Graphics::DrawStep*, bool)",
  "GUI::ThemeParser::parserCallback_bitmap(Common::XMLParser::ParserNode*)",
  "GUI::ThemeParser::parserCallback_color(Common::XMLParser::ParserNode*)",
  "GUI::ThemeParser::parserCallback_cursor(Common::XMLParser::ParserNode*)",
  "GUI::ThemeParser::parserCallback_def(Common::XMLParser::ParserNode*)",
  "GUI::ThemeParser::parserCallback_defaults(Common::XMLParser::ParserNode*)",
  "GUI::ThemeParser::parserCallback_dialog(Common::XMLParser::ParserNode*)",
  "GUI::ThemeParser::parserCallback_drawdata(Common::XMLParser::ParserNode*)",
  "GUI::ThemeParser::parserCallback_drawstep(Common::XMLParser::ParserNode*)",
  "GUI::ThemeParser::parserCallback_font(Common::XMLParser::ParserNode*)",
  "GUI::ThemeParser::parserCallback_import(Common::XMLParser::ParserNode*)",
  "GUI::ThemeParser::parserCallback_language(Common::XMLParser::ParserNode*)",
  "GUI::ThemeParser::parserCallback_layout(Common::XMLParser::ParserNode*)",
  "GUI::ThemeParser::parserCallback_layout_info(Common::XMLParser::ParserNode*)",
  "GUI::ThemeParser::parserCallback_render_info(Common::XMLParser::ParserNode*)",
  "GUI::ThemeParser::parserCallback_space(Common::XMLParser::ParserNode*)",
  "GUI::ThemeParser::parserCallback_text(Common::XMLParser::ParserNode*)",
  "GUI::ThemeParser::parserCallback_text_color(Common::XMLParser::ParserNode*)",
  "GUI::ThemeParser::parserCallback_widget(Common::XMLParser::ParserNode*)",
  "GUI::ThemeParser::resolutionCheck(Common::String const&)",
  "GUI::ThemeParser::~ThemeParser()",
  "GUI::TimedMessageDialog::TimedMessageDialog(Common::U32String const&, unsigned int)",
  "GUI::TimedMessageDialog::handleTickle()",
  "GUI::TimedMessageDialog::~TimedMessageDialog()",
  "GUI::Tooltip::Tooltip()",
  "GUI::Tooltip::drawDialog(GUI::DrawLayer)",
  "GUI::Tooltip::handleKeyDown(Common::KeyState)",
  "GUI::Tooltip::handleKeyUp(Common::KeyState)",
  "GUI::Tooltip::handleMouseDown(int, int, int, int)",
  "GUI::Tooltip::handleMouseMoved(int, int, int)",
  "GUI::Tooltip::handleMouseUp(int, int, int, int)",
  "GUI::Tooltip::handleMouseWheel(int, int, int)",
  "GUI::Tooltip::setup(GUI::Dialog*, GUI::Widget*, int, int)",
  "GUI::Tooltip::~Tooltip()",
  "GUI::UnknownGameDialog::UnknownGameDialog(DetectedGame const&)",
  "GUI::UnknownGameDialog::encodeUrlString(Common::String const&)",
  "GUI::UnknownGameDialog::generateBugtrackerURL()",
  "GUI::UnknownGameDialog::handleCommand(GUI::CommandSender*, unsigned int, unsigned int)",
  "GUI::UnknownGameDialog::handleMouseWheel(int, int, int)",
  "GUI::UnknownGameDialog::rebuild()",
  "GUI::UnknownGameDialog::reflowLayout()",
  "GUI::UnknownGameDialog::~UnknownGameDialog()",
  "GUI::Widget::Widget(GUI::GuiObject*, Common::String const&, Common::U32String const&)",
  "GUI::Widget::Widget(GUI::GuiObject*, int, int, int, int, Common::U32String const&)",
  "GUI::Widget::cleanupHotkey(Common::U32String const&)",
  "GUI::Widget::containsWidgetInChain(GUI::Widget*, GUI::Widget*)",
  "GUI::Widget::draw()",
  "GUI::Widget::findWidgetInChain(GUI::Widget*, int, int)",
  "GUI::Widget::getAbsX() const",
  "GUI::Widget::getAbsY() constBase::listSaves(Common::String const&)",
  "GUI::Widget::handleCommand(GUI::CommandSender*, unsigned int, unsigned int)",
  "GUI::Widget::handleMouseWheel(int, int, int)",
  "GUI::Widget::init()",
  "GUI::Widget::markAsDirty()",
  "GUI::Widget::read(Common::U32String const&)",
  "GUI::Widget::releaseFocus()",
  "GUI::Widget::setEnabled(bool)",
  "GUI::Widget::~Widget()",
  "GUI::addClearButton(GUI::GuiObject*, Common::String const&, unsigned int, int, int, int, int)",
  "GUI::displayErrorDialog(Common::Error const&, Common::U32String const&)",
  "GUI::displayErrorDialog(Common::U32String const&)",
  "GUI::generateEntries(Common::HashMap<Common::String, Common::ConfigManager::Domain, Common::IgnoreCase_Hash, Common::IgnoreCase_EqualTo> const&, Common::HashMap<Common::String, Common::String, Common::IgnoreCase_Hash, Common::IgnoreCase_EqualTo> const&)",
  "GUI::getLangIdentifiers(Common::String const&)",
  "GUI::getRequestedLauncherType()",
  "GUI::getRequestedSaveLoadDialog(MetaEngine const*)",
  "GUI::loadSurfaceFromFile(Common::String const&, int, int)",
  "GUI::parseBoolean(Common::String const&)",
  "GUI::scaleGfx(Graphics::ManagedSurface const*, int, int, bool)",
  "GUIErrorMessage(Common::String const&, char const*)",
  "GUIErrorMessage(Common::U32String const&, char const*)",
  "GUIErrorMessageFormat(char const*, ...)",
  "GUIErrorMessageFormatU32StringPtr(Common::U32String const*, ...)",
  "GUIErrorMessageWithURL(Common::String const&, char const*)",
  "GUIErrorMessageWithURL(Common::U32String const&, char const*)",
  "GetRectDisplayIndex",
  "GetYUVPlanes",
  "Glk::AGT::AGTMetaEngine::detectClashes(Common::HashMap<Common::String, Common::String, Common::IgnoreCase_Hash, Common::IgnoreCase_EqualTo>&)",
  "Glk::AGT::AGTMetaEngine::detectGames(Common::FSList const&, Common::Array<DetectedGame>&)",
  "Glk::AGT::AGTMetaEngine::getSupportedGames(PlainGameList&)",
  "Glk::Adrift::AdriftMetaEngine::detectClashes(Common::HashMap<Common::String, Common::String, Common::IgnoreCase_Hash, Common::IgnoreCase_EqualTo>&)",
  "Glk::Adrift::AdriftMetaEngine::detectGames(Common::FSList const&, Common::Array<DetectedGame>&)",
  "Glk::Adrift::AdriftMetaEngine::getSupportedGames(PlainGameList&)",
  "Glk::AdvSys::AdvSysMetaEngine::detectClashes(Common::HashMap<Common::String, Common::String, Common::IgnoreCase_Hash, Common::IgnoreCase_EqualTo>&)",
  "Glk::AdvSys::AdvSysMetaEngine::detectGames(Common::FSList const&, Common::Array<DetectedGame>&)",
  "Glk::AdvSys::AdvSysMetaEngine::getSupportedGames(PlainGameList&)",
  "Glk::AdvSys::Game::Game()",
  "Glk::AdvSys::Game::checkVerb(Common::Array<int> const&)",
  "Glk::AdvSys::Game::findAction(Common::Array<int> const&, int, int)",
  "Glk::AdvSys::Game::findProperty(int, int) const",
  "Glk::AdvSys::Game::findWord(Common::String const&) const",
  "Glk::AdvSys::Game::getActionLocation(int) const",
  "Glk::AdvSys::Game::getObjectLocation(int) const",
  "Glk::AdvSys::Game::getObjectProperty(int, int)",
  "Glk::AdvSys::Game::getVariable(int)",
  "Glk::AdvSys::Game::hasAdjective(int, int) const",
  "Glk::AdvSys::Game::hasNoun(int, int) const",
  "Glk::AdvSys::Game::hasVerb(int, Common::Array<int> const&) const",
  "Glk::AdvSys::Game::init(Common::SeekableReadStream*)",
  "Glk::AdvSys::Game::loadGameData(Common::ReadStream&)",
  "Glk::AdvSys::Game::readMsgBlock()",
  "Glk::AdvSys::Game::readMsgChar()",
  "Glk::AdvSys::Game::readString(int)",
  "Glk::AdvSys::Game::restart()",
  "Glk::AdvSys::Game::saveGameData(Common::WriteStream&)",
  "Glk::AdvSys::Game::setObjectProperty(int, int, int)",
  "Glk::AdvSys::Game::setVariable(int, int)",
  "Glk::AdvSys::Game::~Game()",
  "Glk::AdvSys::Header::init(Common::SeekableReadStream*)",
  "Glk::Alan2::Alan2MetaEngine::detectClashes(Common::HashMap<Common::String, Common::String, Common::IgnoreCase_Hash, Common::IgnoreCase_EqualTo>&)",
  "Glk::Alan2::Alan2MetaEngine::detectGames(Common::FSList const&, Common::Array<DetectedGame>&)",
  "Glk::Alan2::Alan2MetaEngine::getSupportedGames(PlainGameList&)",
  "Glk::Alan3::Alan3MetaEngine::detectClashes(Common::HashMap<Common::String, Common::String, Common::IgnoreCase_Hash, Common::IgnoreCase_EqualTo>&)",
  "Glk::Alan3::Alan3MetaEngine::detectGames(Common::FSList const&, Common::Array<DetectedGame>&)",
  "Glk::Alan3::Alan3MetaEngine::getSupportedGames(PlainGameList&)",
  "Glk::Archetype::ArchetypeMetaEngine::detectClashes(Common::HashMap<Common::String, Common::String, Common::IgnoreCase_Hash, Common::IgnoreCase_EqualTo>&)",
  "Glk::Archetype::ArchetypeMetaEngine::detectGames(Common::FSList const&, Common::Array<DetectedGame>&)",
  "Glk::Archetype::ArchetypeMetaEngine::getSupportedGames(PlainGameList&)",
  "Glk::Blorb::Blorb(Common::FSNode const&, Glk::InterpreterType)",
  "Glk::Blorb::Blorb(Common::String const&, Glk::InterpreterType)",
  "Glk::Blorb::createReadStreamForMember(Common::Path const&) const",
  "Glk::Blorb::getBlorbFilenames(Common::String const&, Common::Array<Common::String>&, Glk::InterpreterType, Common::String const&)",
  "Glk::Blorb::getInfocomBlorbFilenames(Common::Array<Common::String>&, Common::String const&)",
  "Glk::Blorb::getMember(Common::Path const&) const",
  "Glk::Blorb::hasFile(Common::Path const&) const",
  "Glk::Blorb::isBlorb(Common::SeekableReadStream&, unsigned int)",
  "Glk::Blorb::isBlorb(Common::String const&, unsigned int)",
  "Glk::Blorb::listMembers(Common::List<Common::SharedPtr<Common::ArchiveMember>>&) const",
  "Glk::Blorb::load()",
  "Glk::Blorb::readRIdx(Common::SeekableReadStream&, Common::Array<Glk::ChunkEntry>&)",
  "Glk::Blorb::~Blorb()",
  "Glk::Comprehend::ComprehendMetaEngine::detectClashes(Common::HashMap<Common::String, Common::String, Common::IgnoreCase_Hash, Common::IgnoreCase_EqualTo>&)",
  "Glk::Comprehend::ComprehendMetaEngine::detectGames(Common::FSList const&, Common::Array<DetectedGame>&)",
  "Glk::Comprehend::ComprehendMetaEngine::findGame(char const*)",
  "Glk::Comprehend::ComprehendMetaEngine::getSupportedGames(PlainGameList&)",
  "Glk::GlkDetectedGame::GlkDetectedGame(char const*, char const*, Common::String const&, Common::Language, Common::Platform, GameSupportLevel)",
  "Glk::GlkDetectedGame::GlkDetectedGame(char const*, char const*, Common::String const&, Common::String const&, unsigned long, GameSupportLevel)",
  "Glk::GlkDetectedGame::GlkDetectedGame(char const*, char const*, Common::String const&, GameSupportLevel)",
  "Glk::GlkDetectedGame::GlkDetectedGame(char const*, char const*, char const*, Common::String const&, Common::Language, GameSupportLevel)",
  "Glk::GlkDetectedGame::getGlkGUIOptions()",
  "Glk::Glulx::GlulxMetaEngine::detectClashes(Common::HashMap<Common::String, Common::String, Common::IgnoreCase_Hash, Common::IgnoreCase_EqualTo>&)",
  "Glk::Glulx::GlulxMetaEngine::detectGames(Common::FSList const&, Common::Array<DetectedGame>&)",
  "Glk::Glulx::GlulxMetaEngine::getSupportedGames(PlainGameList&)",
  "Glk::Hugo::HugoMetaEngine::detectClashes(Common::HashMap<Common::String, Common::String, Common::IgnoreCase_Hash, Common::IgnoreCase_EqualTo>&)",
  "Glk::Hugo::HugoMetaEngine::detectGames(Common::FSList const&, Common::Array<DetectedGame>&)",
  "Glk::Hugo::HugoMetaEngine::getSupportedGames(PlainGameList&)",
  "Glk::JACL::JACLMetaEngine::detectClashes(Common::HashMap<Common::String, Common::String, Common::IgnoreCase_Hash, Common::IgnoreCase_EqualTo>&)",
  "Glk::JACL::JACLMetaEngine::detectGames(Common::FSList const&, Common::Array<DetectedGame>&)",
  "Glk::JACL::JACLMetaEngine::getSupportedGames(PlainGameList&)",
  "Glk::Level9::Level9MetaEngine::detectClashes(Common::HashMap<Common::String, Common::String, Common::IgnoreCase_Hash, Common::IgnoreCase_EqualTo>&)",
  "Glk::Level9::Level9MetaEngine::detectGames(Common::FSList const&, Common::Array<DetectedGame>&)",
  "Glk::Level9::Level9MetaEngine::getSupportedGames(PlainGameList&)",
  "Glk::Level9::Scanner::ScanV1(unsigned char*, unsigned int)",
  "Glk::Level9::Scanner::ScanV2(unsigned char*, unsigned int)",
  "Glk::Level9::Scanner::scan(unsigned char*, unsigned int)",
  "Glk::Level9::Scanner::scanner(unsigned char*, unsigned int, unsigned char**, unsigned char**)",
  "Glk::Magnetic::MagneticMetaEngine::detectClashes(Common::HashMap<Common::String, Common::String, Common::IgnoreCase_Hash, Common::IgnoreCase_EqualTo>&)",
  "Glk::Magnetic::MagneticMetaEngine::detectGames(Common::FSList const&, Common::Array<DetectedGame>&)",
  "Glk::Magnetic::MagneticMetaEngine::getSupportedGames(PlainGameList&)",
  "Glk::Quest::QuestMetaEngine::detectClashes(Common::HashMap<Common::String, Common::String, Common::IgnoreCase_Hash, Common::IgnoreCase_EqualTo>&)",
  "Glk::Quest::QuestMetaEngine::detectGames(Common::FSList const&, Common::Array<DetectedGame>&)",
  "Glk::Quest::QuestMetaEngine::getSupportedGames(PlainGameList&)",
  "Glk::Scott::ScottMetaEngine::detectClashes(Common::HashMap<Common::String, Common::String, Common::IgnoreCase_Hash, Common::IgnoreCase_EqualTo>&)",
  "Glk::Scott::ScottMetaEngine::detectGames(Common::FSList const&, Common::Array<DetectedGame>&)",
  "Glk::Scott::ScottMetaEngine::getSupportedGames(PlainGameList&)",
  "Glk::TADS::TADSMetaEngine::detectClashes(Common::HashMap<Common::String, Common::String, Common::IgnoreCase_Hash, Common::IgnoreCase_EqualTo>&)",
  "Glk::TADS::TADSMetaEngine::detectGames(Common::FSList const&, Common::Array<DetectedGame>&)",
  "Glk::TADS::TADSMetaEngine::getSupportedGames(PlainGameList&)",
  "Glk::TADS::TADSMetaEngine::getTADSVersion(Common::SeekableReadStream&)",
  "Glk::ZCode::ZCodeMetaEngine::detectClashes(Common::HashMap<Common::String, Common::String, Common::IgnoreCase_Hash, Common::IgnoreCase_EqualTo>&)",
  "Glk::ZCode::ZCodeMetaEngine::detectGames(Common::FSList const&, Common::Array<DetectedGame>&)",
  "Glk::ZCode::ZCodeMetaEngine::getSupportedGames(PlainGameList&)",
  "GlkMetaEngineDetection::detectClashes() const",
  "GlkMetaEngineDetection::detectGames(Common::FSList const&, unsigned int, bool)",
  "GlkMetaEngineDetection::findGame(char const*) const",
  "GlkMetaEngineDetection::getSupportedGames() const",
  "GnapMetaEngineDetection::~GnapMetaEngineDetection()",
  "Gob::DataIO::DataIO()",
  "Gob::DataIO::File::File(Common::String const&, unsigned int, unsigned int, unsigned char, Gob::DataIO::Archive&)",
  "Gob::DataIO::closeArchive(Gob::DataIO::Archive&)",
  "Gob::DataIO::closeArchive(bool)",
  "Gob::DataIO::fileSize(Common::String const&)",
  "Gob::DataIO::getArchiveInfo(Common::Array<Gob::ArchiveInfo>&) const",
  "Gob::DataIO::getFile(Common::String const&)",
  "Gob::DataIO::getFile(Common::String const&, int&)",
  "Gob::DataIO::getFile(Gob::DataIO::File&)",
  "Gob::DataIO::getFile(Gob::DataIO::File&, int&)",
  "Gob::DataIO::getSizeChunks(Common::SeekableReadStream&)",
  "Gob::DataIO::hasFile(Common::String const&)",
  "Gob::DataIO::openArchive(Common::String const&)",
  "Gob::DataIO::openArchive(Common::String, bool)",
  "Gob::DataIO::unpack(Common::SeekableReadStream&, int&, unsigned char, bool)",
  "Gob::DataIO::unpack(Common::SeekableReadStream&, unsigned char)",
  "Gob::DataIO::unpack(unsigned char const*, unsigned int, int&, unsigned char)",
  "Gob::DataIO::unpackChunk(Common::SeekableReadStream&, unsigned char*, unsigned int)",
  "Gob::DataIO::unpackChunks(Common::SeekableReadStream&, unsigned char*, unsigned int)",
  "Gob::DataIO::~DataIO()",
  "GobMetaEngineDetection::GobMetaEngineDetection()",
  "GobMetaEngineDetection::detectOnceUponATime(Common::FSList const&)",
  "GobMetaEngineDetection::fallbackDetect(Common::HashMap<Common::String, Common::FSNode, Common::IgnoreCase_Hash, Common::IgnoreCase_EqualTo> const&, Common::FSList const&, ADDetectedGameExtraInfo**) const",
  "GobMetaEngineDetection::~GobMetaEngineDetection()",
  "Graphics::(anonymous namespace)::loadHeader(Common::SeekableReadStream&, Graphics::(anonymous namespace)::ThumbnailHeader&, bool)",
  "Graphics::AmigaFont::AmigaFont(Common::SeekableReadStream*)",
  "Graphics::AmigaFont::drawChar(Graphics::Surface*, unsigned int, int, int, unsigned int) const",
  "Graphics::AmigaFont::getCharWidth(unsigned int) const",
  "Graphics::AmigaFont::getKerningOffset(unsigned int, unsigned int) const",
  "Graphics::AmigaFont::mapChar(unsigned int) const",
  "Graphics::BaseMacWindow::BaseMacWindow(int, bool, Graphics::MacWindowManager*)",
  "Graphics::BdfFont::cacheFontData(Graphics::BdfFont const&, Common::String const&)",
  "Graphics::BdfFont::loadFont(Common::SeekableReadStream&)",
  "Graphics::BdfFont::loadFromCache(Common::SeekableReadStream&)",
  "Graphics::BdfFont::scaleFont(Graphics::BdfFont*, int)",
  "Graphics::ConvertKSToUCS2(unsigned short)",
  "Graphics::CursorManager::Cursor::Cursor(void const*, unsigned int, unsigned int, int, int, unsigned int, bool, Graphics::PixelFormat const*)",
  "Graphics::CursorManager::Palette::Palette(unsigned char const*, unsigned int, unsigned int)",
  "Graphics::CursorManager::disableCursorPalette(bool)",
  "Graphics::CursorManager::popAllCursors()",
  "Graphics::CursorManager::popCursor()",
  "Graphics::CursorManager::popCursorPalette()",
  "Graphics::CursorManager::pushCursor(void const*, unsigned int, unsigned int, int, int, unsigned int, bool, Graphics::PixelFormat const*)",
  "Graphics::CursorManager::pushCursorPalette(unsigned char const*, unsigned int, unsigned int)",
  "Graphics::CursorManager::replaceCursor(Graphics::Cursor const*)",
  "Graphics::CursorManager::replaceCursor(void const*, unsigned int, unsigned int, int, int, unsigned int, bool, Graphics::PixelFormat const*)",
  "Graphics::CursorManager::replaceCursorPalette(unsigned char const*, unsigned int, unsigned int)",
  "Graphics::CursorManager::showMouse(bool)",
  "Graphics::CursorManager::supportsCursorPalettes()",
  "Graphics::FloodFill::FloodFill(Graphics::Surface*, unsigned int, unsigned int, bool)",
  "Graphics::FloodFill::addSeed(int, int)",
  "Graphics::FloodFill::fill()",
  "Graphics::FloodFill::fillMask()",
  "Graphics::Font::drawChar(Graphics::ManagedSurface*, unsigned int, int, int, unsigned int) const",
  "Graphics::Font::drawString(Graphics::ManagedSurface*, Common::String const&, int, int, int, unsigned int, Graphics::TextAlign, int, bool) const",
  "Graphics::Font::drawString(Graphics::ManagedSurface*, Common::U32String const&, int, int, int, unsigned int, Graphics::TextAlign, int, bool) const",
  "Graphics::Font::drawString(Graphics::Surface*, Common::String const&, int, int, int, unsigned int, Graphics::TextAlign, int, bool) const",
  "Graphics::Font::drawString(Graphics::Surface*, Common::U32String const&, int, int, int, unsigned int, Graphics::TextAlign, int, bool) const",
  "Graphics::Font::getBoundingBox(Common::String const&, int, int, int, Graphics::TextAlign, int, bool) const",
  "Graphics::Font::getBoundingBox(Common::U32String const&, int, int, int, Graphics::TextAlign, int, bool) const",
  "Graphics::Font::getBoundingBox(unsigned int) const",
  "Graphics::Font::getFontName() const",
  "Graphics::Font::getStringWidth(Common::String const&) const",
  "Graphics::Font::getStringWidth(Common::U32String const&) const",
  "Graphics::Font::wordWrapText(Common::String const&, int, Common::Array<Common::String>&, int, unsigned int) const",
  "Graphics::Font::wordWrapText(Common::U32String const&, int, Common::Array<Common::U32String>&, int, unsigned int) const",
  "Graphics::FontKorean::createFont(char const*)",
  "Graphics::FontKorean::drawChar(Graphics::Surface&, unsigned short, int, int, unsigned int, unsigned int) const",
  "Graphics::FontKoreanBase::drawChar(void*, unsigned short, int, int, unsigned int, unsigned int, int, int) const",
  "Graphics::FontKoreanBase::getCharWidth(unsigned short) const",
  "Graphics::FontKoreanBase::setDrawingMode(Graphics::FontKorean::DrawingMode)",
  "Graphics::FontKoreanBase::toggleFlippedMode(bool)",
  "Graphics::FontKoreanSVM::getCharData(unsigned short) const",
  "Graphics::FontKoreanSVM::getCharDataDefault(unsigned short) const",
  "Graphics::FontKoreanSVM::getCharDataPCE(unsigned short) const",
  "Graphics::FontKoreanSVM::loadData(char const*)",
  "Graphics::FontManager::FontManager()",
  "Graphics::FontManager::assignFontToName(Common::String const&, Graphics::Font const*)",
  "Graphics::FontManager::getFontByName(Common::String const&) const",
  "Graphics::FontManager::getFontByUsage(Graphics::FontManager::FontUsage) const",
  "Graphics::FontManager::removeFontName(Common::String const&)",
  "Graphics::FontManager::setFont(Graphics::FontManager::FontUsage, Graphics::BdfFont const*)",
  "Graphics::FontManager::setLocalizedFont(Common::String const&)",
  "Graphics::FontManager::~FontManager()",
  "Graphics::FontPCEngine::getCharData(unsigned short) const",
  "Graphics::FontSJIS::createFont(Common::Platform)",
  "Graphics::FontSJIS::drawChar(Graphics::Surface&, unsigned short, int, int, unsigned int, unsigned int) const",
  "Graphics::FontSJISBase::drawChar(void*, unsigned short, int, int, unsigned int, unsigned int, int, int) const",
  "Graphics::FontSJISBase::getCharWidth(unsigned short) const",
  "Graphics::FontSJISBase::setDrawingMode(Graphics::FontSJIS::DrawingMode)",
  "Graphics::FontSJISBase::toggleFatPrint(bool)",
  "Graphics::FontSjisSVM::loadData()",
  "Graphics::FontTowns::getCharData(unsigned short) const",
  "Graphics::FontTowns::getCharFMTChunk(unsigned short)",
  "Graphics::FontTowns::loadData()",
  "Graphics::FrameLimiter::FrameLimiter(OSystem*, unsigned int)",
  "Graphics::FrameLimiter::delayBeforeSwap()Graphics::FontKoreanWansung::englishLoadData(char const*)",
  "Graphics::FrameLimiter::startFrame()",
  "Graphics::FreeType::Done_Face(FT_FaceRec_*)",
  "Graphics::FreeType::Done_FreeType(FT_LibraryRec_*)",
  "Graphics::FreeType::Done_Glyph(FT_GlyphRec_*)",
  "Graphics::FreeType::Get_Char_Index(FT_FaceRec_*, unsigned long)",
  "Graphics::FreeType::Get_Glyph(FT_GlyphSlotRec_*, FT_GlyphRec_**)",
  "Graphics::FreeType::Get_Kerning(FT_FaceRec_*, unsigned int, unsigned int, unsigned int, FT_Vector_*)",
  "Graphics::FreeType::Glyph_Copy(FT_GlyphRec_*, FT_GlyphRec_**)",
  "Graphics::FreeType::Glyph_To_Bitmap(FT_GlyphRec_**, FT_Render_Mode_, FT_Vector_*, unsigned char)",
  "Graphics::FreeType::Init_FreeType(FT_LibraryRec_**)",
  "Graphics::FreeType::Load_Glyph(FT_FaceRec_*, unsigned int, int)",
  "Graphics::FreeType::New_Face(FT_LibraryRec_*, char const*, long, FT_FaceRec_**)",
  "Graphics::FreeType::New_Memory_Face(FT_LibraryRec_*, unsigned char const*, long, long, FT_FaceRec_**)",
  "Graphics::FreeType::Set_Pixel_Sizes(FT_FaceRec_*, unsigned int, unsigned int)",
  "Graphics::MacButton::MacButton(Graphics::MacButtonType, Graphics::TextAlign, Graphics::MacWidget*, int, int, int, int, Graphics::MacWindowManager*, Common::U32String const&, Graphics::MacFont const*, int, int)",
  "Graphics::MacButton::draw(Graphics::ManagedSurface*, bool)",
  "Graphics::MacButton::draw(bool)",
  "Graphics::MacButton::init()",
  "Graphics::MacButton::invertInner()",
  "Graphics::MacButton::invertOuter()",
  "Graphics::MacButton::processEvent(Common::Event&)",
  "Graphics::MacButton::~MacButton()",
  "Graphics::MacCursor::readFromCRSR(Common::SeekableReadStream&, bool, unsigned char)",
  "Graphics::MacCursor::readFromCURS(Common::SeekableReadStream&, unsigned char)",
  "Graphics::MacCursor::readFromStream(Common::SeekableReadStream&, bool, unsigned char, bool)",
  "Graphics::MacDialog::MacDialog(Graphics::ManagedSurface*, Graphics::MacWindowManager*, int, Graphics::MacText*, int, Common::Array<Graphics::MacDialogButton*>*, unsigned int)",
  "Graphics::MacDialog::drawOutline(Common::Rect&, int*, int)",
  "Graphics::MacDialog::getDialogFont()",
  "Graphics::MacDialog::paint()",
  "Graphics::MacDialog::run()",
  "Graphics::MacDialog::~MacDialog()",
  "Graphics::MacFONTFont::MacFONTFont(Graphics::MacFONTdata const&)",
  "Graphics::MacFONTFont::getKerningOffset(unsigned int, unsigned int) const",
  "Graphics::MacFONTFont::loadFont(Common::SeekableReadStream&, Graphics::MacFontFamily*, int, int)",
  "Graphics::MacFONTFont::scaleFont(Graphics::MacFONTFont const*, int, int)",
  "Graphics::MacFont::MacFont(int, int, int)",
  "Graphics::MacFont::setFallback(Graphics::Font const*, Common::String)",
  "Graphics::MacFont::setName(char const*)",
  "Graphics::MacFontFamily::KernEntry::KernEntry(Graphics::MacFontFamily::KernEntry const&)",
  "Graphics::MacFontFamily::MacFontFamily(Common::String const&)",
  "Graphics::MacFontFamily::getKerningOffset(unsigned int, int, unsigned int) const",
  "Graphics::MacFontFamily::load(Common::SeekableReadStream&)",
  "Graphics::MacFontFamily::~MacFontFamily()",
  "Graphics::MacFontManager::MacFontManager(unsigned int, Common::Language)",
  "Graphics::MacFontManager::generateFONTFont(Graphics::MacFont&, Graphics::MacFont&)",
  "Graphics::MacFontManager::generateFontSubstitute(Graphics::MacFont&)",
  "Graphics::MacFontManager::generateTTFFont(Graphics::MacFont&, Common::SeekableReadStream*)",
  "Graphics::MacFontManager::getFont(Graphics::MacFont)",
  "Graphics::MacFontManager::getFont(Graphics::MacFont*)",
  "Graphics::MacFontManager::getFontAliasForId(unsigned short)",
  "Graphics::MacFontManager::getFontEncoding(unsigned short)",
  "Graphics::MacFontManager::getFontIdByName(Common::String)",
  "Graphics::MacFontManager::getFontLanguage(unsigned short)",
  "Graphics::MacFontManager::getFontName(Graphics::MacFont&)",
  "Graphics::MacFontManager::getFontName(unsigned short)",
  "Graphics::MacFontManager::getFontName(unsigned short, int, int, bool)",
  "Graphics::MacFontManager::loadFonts()",
  "Graphics::MacFontManager::loadFonts(Common::MacResManager*)",
  "Graphics::MacFontManager::loadFonts(Common::SeekableReadStream*)",
  "Graphics::MacFontManager::loadFonts(Common::String const&)",
  "Graphics::MacFontManager::loadFontsBDF()",
  "Graphics::MacFontManager::loadJapaneseFonts()",
  "Graphics::MacFontManager::loadWindowsFont(Common::String)",
  "Graphics::MacFontManager::parseFontSlant(Common::String)",
  "Graphics::MacFontManager::registerFontName(Common::String, int)",
  "Graphics::MacFontManager::setLocalizedFonts()",
  "Graphics::MacFontManager::~MacFontManager()",
  "Graphics::MacFontRun::getEncodedText()",
  "Graphics::MacFontRun::getEncoding()",
  "Graphics::MacFontRun::getFont()",
  "Graphics::MacFontRun::plainByteMode()",
  "Graphics::MacFontRun::toString()",
  "Graphics::MacMenu::MacMenu(int, Common::Rect const&, Graphics::MacWindowManager*)",
  "Graphics::MacMenu::addMenuItem(Graphics::MacMenuSubMenu*, Common::String const&, int, int, char, bool, bool)",
  "Graphics::MacMenu::addMenuItem(Graphics::MacMenuSubMenu*, Common::U32String const&, int, int, char, bool, bool)",
  "Graphics::MacMenu::addStaticMenus(Graphics::MacMenuData const*)",
  "Graphics::MacMenu::addSubMenu(Graphics::MacMenuSubMenu*, int)",
  "Graphics::MacMenu::calcDimensions()",
  "Graphics::MacMenu::calcSubMenuBounds(Graphics::MacMenuSubMenu*, int, int)",
  "Graphics::MacMenu::calcSubMenuWidth(Graphics::MacMenuSubMenu*)",
  "Graphics::MacMenu::checkCallback(bool)",
  "Graphics::MacMenu::clearSubMenu(int)",
  "Graphics::MacMenu::closeMenu()",
  "Graphics::MacMenu::createMenuFromPEexe(Common::PEResources*, Graphics::MacWindowManager*)",
  "Graphics::MacMenu::createSubMenuFromString(int, char const*, int)",
  "Graphics::MacMenu::draw(Graphics::ManagedSurface*, bool)",
  "Graphics::MacMenu::drawSubMenuArrow(Graphics::ManagedSurface*, int, int, int)",
  "Graphics::MacMenu::eventLoop()",
  "Graphics::MacMenu::getAcceleratorString(Graphics::MacMenuItem*, char const*)",
  "Graphics::MacMenu::getMenuFont(int)",
  "Graphics::MacMenu::getName(Graphics::MacMenuItem*)",
  "Graphics::MacMenu::getSubMenuItem(Graphics::MacMenuItem*, Common::String const&)",
  "Graphics::MacMenu::getSubMenuItem(Graphics::MacMenuItem*, int)",
  "Graphics::MacMenu::insertMenuItem(Graphics::MacMenuSubMenu*, Common::String const&, unsigned int, int, int, char, bool, bool)",
  "Graphics::MacMenu::insertMenuItem(Graphics::MacMenuSubMenu*, Common::U32String const&, unsigned int, int, int, char, bool, bool)",
  "Graphics::MacMenu::keyEvent(Common::Event&)",
  "Graphics::MacMenu::loadMenuBarResource(Common::MacResManager*, unsigned short)",
  "Graphics::MacMenu::loadMenuResource(Common::MacResManager*, unsigned short)",
  "Graphics::MacMenu::mouseClick(int, int)",
  "Graphics::MacMenu::mouseMove(int, int)",
  "Graphics::MacMenu::mouseRelease(int, int)",
  "Graphics::MacMenu::numberOfMenuItems(Graphics::MacMenuItem*)",
  "Graphics::MacMenu::printMenu(int, Graphics::MacMenuSubMenu*)",
  "Graphics::MacMenu::processEvent(Common::Event&)",
  "Graphics::MacMenu::processMenuShortCut(unsigned char, unsigned short)",
  "Graphics::MacMenu::processSubmenuTabs(Graphics::MacMenuSubMenu*)",
  "Graphics::MacMenu::processTabs()",
  "Graphics::MacMenu::readMenuFromResource(Common::SeekableReadStream*)",
  "Graphics::MacMenu::removeMenuItem(Graphics::MacMenuSubMenu*, unsigned int)",
  "Graphics::MacMenu::renderSubmenu(Graphics::MacMenuSubMenu*, bool)",
  "Graphics::MacMenu::setName(Graphics::MacMenuItem*, Common::String const&)",
  "Graphics::MacMenu::~MacMenu()",
  "Graphics::MacMenuSubMenu::~MacMenuSubMenu()",
  "Graphics::MacText::MacText(Common::U32String const&, Graphics::MacWindowManager*, Graphics::Font const*, unsigned int, unsigned int, int, Graphics::TextAlign, int, bool)",
  "Graphics::MacText::MacText(Common::U32String const&, Graphics::MacWindowManager*, Graphics::MacFont const*, unsigned int, unsigned int, int, Graphics::TextAlign, int, bool)",
  "Graphics::MacText::MacText(Graphics::MacWidget*, int, int, int, int, Graphics::MacWindowManager*, Common::U32String const&, Graphics::MacFont const*, unsigned int, unsigned int, int, Graphics::TextAlign, int, unsigned short, unsigned short, unsigned short, unsigned short, bool)",
  "Graphics::MacText::addNewLine(int*, int*)",
  "Graphics::MacText::appendText(Common::U32String const&, Graphics::Font const*, unsigned short, unsigned short, unsigned short, bool)",
  "Graphics::MacText::appendText(Common::U32String const&, int, int, int, bool)",
  "Graphics::MacText::appendText(Common::U32String const&, int, int, int, unsigned short, unsigned short, unsigned short, bool)",
  "Graphics::MacText::appendTextDefault(Common::String const&, bool)",
  "Graphics::MacText::appendTextDefault(Common::U32String const&, bool)",
  "Graphics::MacText::appendText_(Common::U32String const&, unsigned int)",
  "Graphics::MacText::chopChunk(Common::U32String const&, int*)",
  "Graphics::MacText::clearText()",
  "Graphics::MacText::cutSelection()",
  "Graphics::MacText::deletePreviousChar(int*, int*)",
  "Graphics::MacText::deletePreviousCharInternal(int*, int*)",
  "Graphics::MacText::deleteSelection()",
  "Graphics::MacText::draw(Graphics::ManagedSurface*, bool)",
  "Graphics::MacText::draw(Graphics::ManagedSurface*, int, int, int, int, int, int)",
  "Graphics::MacText::draw(bool)",
  "Graphics::MacText::drawSelection(int, int)",
  "Graphics::MacText::drawToPoint(Graphics::ManagedSurface*, Common::Point)",
  "Graphics::MacText::drawToPoint(Graphics::ManagedSurface*, Common::Rect, Common::Point)",
  "Graphics::MacText::enforceTextFont(unsigned short)",
  "Graphics::MacText::enforceTextSlant(int)",
  "Graphics::MacText::getAlignOffset(int)",
  "Graphics::MacText::getEditedString()",
  "Graphics::MacText::getFgColor()",
  "Graphics::MacText::getLastLineWidth()",
  "Graphics::MacText::getLineHeight(int)",
  "Graphics::MacText::getLineWidth(int, bool, int)",
  "Graphics::MacText::getMouseChar(int, int)",
  "Graphics::MacText::getMouseItem(int, int)",
  "Graphics::MacText::getMouseLine(int, int)",
  "Graphics::MacText::getMouseWord(int, int)",
  "Graphics::MacText::getPlainText()",
  "Graphics::MacText::getRowCol(int, int, int*, int*, int*, int*)",
  "Graphics::MacText::getSelection(bool, bool)",
  "Graphics::MacText::getStringWidth(Graphics::MacFontRun&, Common::U32String const&)",
  "Graphics::MacText::getTextChunk(int, int, int, int, bool, bool)",
  "Graphics::MacText::getTextChunks(int, int)",
  "Graphics::MacText::getTextColor(int, int)",
  "Graphics::MacText::getTextFont(int, int)",
  "Graphics::MacText::getTextSize(int, int)",
  "Graphics::MacText::getTextSlant(int, int)",
  "Graphics::MacText::init()",
  "Graphics::MacText::insertChar(unsigned char, int*, int*)",
  "Graphics::MacText::insertTextFromClipboard()",
  "Graphics::MacText::processEvent(Common::Event&)",
  "Graphics::MacText::recalcDims()",
  "Graphics::MacText::removeLastLine()",
  "Graphics::MacText::render()",
  "Graphics::MacText::render(int, int)",
  "Graphics::MacText::render(int, int, int)",
  "Graphics::MacText::reshuffleParagraph(int*, int*)",
  "Graphics::MacText::resize(int, int)",
  "Graphics::MacText::scroll(int)",
  "Graphics::MacText::setActive(bool)",
  "Graphics::MacText::setColors(unsigned int, unsigned int)",
  "Graphics::MacText::setDefaultFormatting(unsigned short, unsigned char, unsigned short, unsigned short, unsigned short, unsigned short)",
  "Graphics::MacText::setEditable(bool)",
  "Graphics::MacText::setInterLinear(int)",
  "Graphics::MacText::setMaxWidth(int)",
  "Graphics::MacText::setSelection(int, bool)",
  "Graphics::MacText::setText(Common::U32String const&)",
  "Graphics::MacText::setTextChunks(int, int, int, void (*)(Graphics::MacFontRun&, int))",
  "Graphics::MacText::setTextColor(unsigned int, unsigned int)",
  "Graphics::MacText::setTextColor(unsigned int, unsigned int, unsigned int)",
  "Graphics::MacText::setTextFont(int, int, int)",
  "Graphics::MacText::setTextSize(int)",
  "Graphics::MacText::setTextSize(int, int, int)",
  "Graphics::MacText::setTextSlant(int, int, int)",
  "Graphics::MacText::splitString(Common::U32String const&, int)",
  "Graphics::MacText::startMarking(int, int)",
  "Graphics::MacText::undrawCursor()",
  "Graphics::MacText::updateCursorPos()",
  "Graphics::MacText::updateTextSelection(int, int)",
  "Graphics::MacText::~MacText()",
  "Graphics::MacTextWindow::MacTextWindow(Graphics::MacWindowManager*, Graphics::Font const*, int, int, int, Graphics::TextAlign, Graphics::MacMenu*, bool)",
  "Graphics::MacTextWindow::MacTextWindow(Graphics::MacWindowManager*, Graphics::MacFont const*, int, int, int, Graphics::TextAlign, Graphics::MacMenu*, bool)",
  "Graphics::MacTextWindow::appendInput(Common::String const&)",
  "Graphics::MacTextWindow::appendInput(Common::U32String const&)",
  "Graphics::MacTextWindow::appendText(Common::String const&, Graphics::MacFont const*, bool)",
  "Graphics::MacTextWindow::appendText(Common::U32String const&, Graphics::MacFont const*, bool)",
  "Graphics::MacTextWindow::blit(Graphics::ManagedSurface*, Common::Rect&)",
  "Graphics::MacTextWindow::calcScrollBar()",
  "Graphics::MacTextWindow::clearInput()",
  "Graphics::MacTextWindow::clearText()",
  "Graphics::MacTextWindow::cutSelection()",
  "Graphics::MacTextWindow::draw(Graphics::ManagedSurface*, bool)",
  "Graphics::MacTextWindow::draw(bool)",
  "Graphics::MacTextWindow::drawInput()",
  "Graphics::MacTextWindow::drawSelection()",
  "Graphics::MacTextWindow::getSelection(bool, bool)",
  "Graphics::MacTextWindow::init(bool)",
  "Graphics::MacTextWindow::processEvent(Common::Event&)",
  "Graphics::MacTextWindow::resize(int, int, bool)",
  "Graphics::MacTextWindow::scroll(int)",
  "Graphics::MacTextWindow::setDimensions(Common::Rect const&)",
  "Graphics::MacTextWindow::setTextWindowFont(Graphics::MacFont const*)",
  "Graphics::MacTextWindow::startMarking(int, int)",
  "Graphics::MacTextWindow::undrawInput()",
  "Graphics::MacTextWindow::updateTextSelection(int, int)",
  "Graphics::MacTextWindow::~MacTextWindow()",
  "Graphics::MacWidget::MacWidget(Graphics::MacWidget*, int, int, int, int, Graphics::MacWindowManager*, bool, unsigned short, unsigned short, unsigned short, unsigned int, unsigned int)",
  "Graphics::MacWidget::blit(Graphics::ManagedSurface*, Common::Rect&)",
  "Graphics::MacWidget::findEventHandler(Common::Event&, int, int)",
  "Graphics::MacWidget::removeWidget(Graphics::MacWidget*, bool)",
  "Graphics::MacWidget::~MacWidget()",
  "Graphics::MacWindow::MacWindow(int, bool, bool, bool, Graphics::MacWindowManager*)",
  "Graphics::MacWindow::addDirtyRect(Common::Rect const&)",
  "Graphics::MacWindow::blit(Graphics::ManagedSurface*, Common::Rect&)",
  "Graphics::MacWindow::center(bool)",
  "Graphics::MacWindow::disableBorder()",
  "Graphics::MacWindow::draw(Graphics::ManagedSurface*, bool)",
  "Graphics::MacWindow::draw(bool)",
  "Graphics::MacWindow::drawBorder()",
  "Graphics::MacWindow::drawBorderFromSurface(Graphics::ManagedSurface*, unsigned int)",
  "Graphics::MacWindow::drawBox(Graphics::ManagedSurface*, int, int, int, int)",
  "Graphics::MacWindow::fillRect(Graphics::ManagedSurface*, int, int, int, int, int)",
  "Graphics::MacWindow::getTitleFont()",
  "Graphics::MacWindow::loadBorder(Common::SeekableReadStream&, unsigned int, Graphics::BorderOffsets)",
  "Graphics::MacWindow::loadBorder(Common::SeekableReadStream&, unsigned int, int, int, int, int)",
  "Graphics::MacWindow::loadWin95Border(Common::String const&, unsigned int)",
  "Graphics::MacWindow::markAllDirty()",
  "Graphics::MacWindow::move(int, int)",
  "Graphics::MacWindow::processEvent(Common::Event&)",
  "Graphics::MacWindow::resize(int, int, bool)",
  "Graphics::MacWindow::resizeBorderSurface()",
  "Graphics::MacWindow::setBorder(Graphics::TransparentSurface*, unsigned int, Graphics::BorderOffsets)",
  "Graphics::MacWindow::setBorderType(int)",
  "Graphics::MacWindow::setDimensions(Common::Rect const&)",
  "Graphics::MacWindow::setTitle(Common::String const&)",
  "Graphics::MacWindow::updateInnerDims()",
  "Graphics::MacWindow::updateOuterDims()",
  "Graphics::MacWindow::~MacWindow()",
  "Graphics::MacWindowBorder::MacWindowBorder()",
  "Graphics::MacWindowBorder::addBorder(Graphics::TransparentSurface*, unsigned int, int)",
  "Graphics::MacWindowBorder::blitBorderInto(Graphics::ManagedSurface&, unsigned int, Graphics::MacWindowManager*)",
  "Graphics::MacWindowBorder::disableBorder()",
  "Graphics::MacWindowBorder::drawScrollBar(Graphics::ManagedSurface*, Graphics::MacWindowManager*)",
  "Graphics::MacWindowBorder::drawTitle(Graphics::ManagedSurface*, Graphics::MacWindowManager*, int)",
  "Graphics::MacWindowBorder::hasBorder(unsigned int)",
  "Graphics::MacWindowBorder::loadBorder(Common::SeekableReadStream&, unsigned int, Graphics::BorderOffsets)",
  "Graphics::MacWindowBorder::loadBorder(Common::SeekableReadStream&, unsigned int, int, int, int, int)",
  "Graphics::MacWindowBorder::loadInternalBorder(unsigned int)",
  "Graphics::MacWindowBorder::setBorder(Graphics::TransparentSurface*, unsigned int, Graphics::BorderOffsets)",
  "Graphics::MacWindowBorder::setBorder(Graphics::TransparentSurface*, unsigned int, int, int, int, int)",
  "Graphics::MacWindowBorder::setTitle(Common::String const&, int, Graphics::MacWindowManager*)",
  "Graphics::MacWindowBorder::~MacWindowBorder()",
  "Graphics::MacWindowManager::MacWindowManager(unsigned int, Common::Array<unsigned char*>*, Common::Language)",
  "Graphics::MacWindowManager::activateMenu()",
  "Graphics::MacWindowManager::activateScreenCopy()",
  "Graphics::MacWindowManager::addMenu()",
  "Graphics::MacWindowManager::addTextWindow(Graphics::Font const*, int, int, int, Graphics::TextAlign, Graphics::MacMenu*, bool)",
  "Graphics::MacWindowManager::addTextWindow(Graphics::MacFont const*, int, int, int, Graphics::TextAlign, Graphics::MacMenu*, bool)",
  "Graphics::MacWindowManager::addWindow(bool, bool, bool)",
  "Graphics::MacWindowManager::addWindowInitialized(Graphics::MacWindow*)",
  "Graphics::MacWindowManager::addZoomBox(Graphics::ZoomBox*)",
  "Graphics::MacWindowManager::cleanupDataBundle()",
  "Graphics::MacWindowManager::clearHandlingWidgets()",
  "Graphics::MacWindowManager::draw()",
  "Graphics::MacWindowManager::drawDesktop()",
  "Graphics::MacWindowManager::findBestColor(unsigned char, unsigned char, unsigned char)",
  "Graphics::MacWindowManager::findBestColor(unsigned int)",
  "Graphics::MacWindowManager::getBorderFile(unsigned char, unsigned int)",
  "Graphics::MacWindowManager::getDrawInvertPixel()",
  "Graphics::MacWindowManager::getFile(Common::String const&)",
  "Graphics::MacWindowManager::getMenuItemAction(Graphics::MacMenuItem*)",
  "Graphics::MacWindowManager::getMenuItemCheckMark(Graphics::MacMenuItem*)",
  "Graphics::MacWindowManager::getMenuItemEnabled(Graphics::MacMenuItem*)",
  "Graphics::MacWindowManager::getMenuItemName(Graphics::MacMenuItem*)",
  "Graphics::MacWindowManager::getTextFromClipboard(Common::U32String const&, int*)",
  "Graphics::MacWindowManager::inverter(unsigned char)",
  "Graphics::MacWindowManager::loadDataBundle()",
  "Graphics::MacWindowManager::loadDesktop()",
  "Graphics::MacWindowManager::passPalette(unsigned char const*, unsigned int)",
  "Graphics::MacWindowManager::pauseEngine()",
  "Graphics::MacWindowManager::popCursor()",
  "Graphics::MacWindowManager::printWMMode(int)",
  "Graphics::MacWindowManager::processEvent(Common::Event&)",
  "Graphics::MacWindowManager::pushCursor(Graphics::MacGUIConstants::MacCursorType, Graphics::Cursor*)",
  "Graphics::MacWindowManager::pushCustomCursor(Graphics::Cursor const*)",
  "Graphics::MacWindowManager::pushCustomCursor(unsigned char const*, int, int, int, int, int)",
  "Graphics::MacWindowManager::removeMarked()",
  "Graphics::MacWindowManager::removeMenu()",
  "Graphics::MacWindowManager::removeWindow(Graphics::MacWindow*)",
  "Graphics::MacWindowManager::renderZoomBox(bool)",
  "Graphics::MacWindowManager::replaceCursor(Graphics::MacGUIConstants::MacCursorType, Graphics::Cursor*)",
  "Graphics::MacWindowManager::replaceCursorType(Graphics::MacGUIConstants::MacCursorType)",
  "Graphics::MacWindowManager::replaceCustomCursor(unsigned char const*, int, int, int, int, int)",
  "Graphics::MacWindowManager::resizeScreen(int, int)",
  "Graphics::MacWindowManager::setActiveWidget(Graphics::MacWidget*)",
  "Graphics::MacWindowManager::setActiveWindow(int)",
  "Graphics::MacWindowManager::setDesktopColor(unsigned char, unsigned char, unsigned char)",
  "Graphics::MacWindowManager::setDesktopMode(unsigned int)",
  "Graphics::MacWindowManager::setMenuItemAction(Graphics::MacMenuItem*, int)",
  "Graphics::MacWindowManager::setMenuItemCheckMark(Graphics::MacMenuItem*, bool)",
  "Graphics::MacWindowManager::setMenuItemEnabled(Graphics::MacMenuItem*, bool)",
  "Graphics::MacWindowManager::setMenuItemName(Graphics::MacMenuItem*, Common::String const&)",
  "Graphics::MacWindowManager::setScreen(Graphics::ManagedSurface*)",
  "Graphics::MacWindowManager::setScreen(int, int)",
  "Graphics::MacWindowManager::setTextInClipboard(Common::U32String const&)",
  "Graphics::MacWindowManager::zoomBoxInner(Common::Rect&, Graphics::MacPlotData&)",
  "Graphics::MacWindowManager::~MacWindowManager()",
  "Graphics::ManagedSurface::ManagedSurface(Graphics::ManagedSurface const&)",
  "Graphics::ManagedSurface::ManagedSurface(Graphics::Surface*, DisposeAfterUse::Flag)",
  "Graphics::ManagedSurface::ManagedSurface(int, int)",
  "Graphics::ManagedSurface::ManagedSurface(int, int, Graphics::PixelFormat const&)",
  "Graphics::ManagedSurface::addDirtyRect(Common::Rect const&)",
  "Graphics::ManagedSurface::blitFrom(Graphics::ManagedSurface const&)",
  "Graphics::ManagedSurface::blitFrom(Graphics::ManagedSurface const&, Common::Point const&)",
  "Graphics::ManagedSurface::blitFrom(Graphics::ManagedSurface const&, Common::Rect const&, Common::Point const&)",
  "Graphics::ManagedSurface::blitFrom(Graphics::ManagedSurface const&, Common::Rect const&, Common::Rect const&)",
  "Graphics::ManagedSurface::blitFrom(Graphics::Surface const&)",
  "Graphics::ManagedSurface::blitFrom(Graphics::Surface const&, Common::Point const&)",
  "Graphics::ManagedSurface::blitFrom(Graphics::Surface const&, Common::Rect const&, Common::Point const&)",
  "Graphics::ManagedSurface::blitFrom(Graphics::Surface const&, Common::Rect const&, Common::Rect const&)",
  "Graphics::ManagedSurface::blitFromInner(Graphics::Surface const&, Common::Rect const&, Common::Rect const&, unsigned int const*)",
  "Graphics::ManagedSurface::clear(unsigned int)",
  "Graphics::ManagedSurface::copyFrom(Graphics::ManagedSurface const&)",
  "Graphics::ManagedSurface::copyFrom(Graphics::Surface const&)",
  "Graphics::ManagedSurface::create(Graphics::ManagedSurface&, Common::Rect const&)",
  "Graphics::ManagedSurface::create(short, short)",
  "Graphics::ManagedSurface::create(short, short, Graphics::PixelFormat const&)",
  "Graphics::ManagedSurface::operator=(Graphics::ManagedSurface const&)",
  "Graphics::ManagedSurface::transBlitFrom(Graphics::ManagedSurface const&, Common::Point const&, Graphics::ManagedSurface const&)",
  "Graphics::ManagedSurface::transBlitFrom(Graphics::ManagedSurface const&, Common::Point const&, unsigned int, bool, unsigned int, unsigned int)",
  "Graphics::ManagedSurface::transBlitFrom(Graphics::ManagedSurface const&, Common::Rect const&, Common::Point const&, unsigned int, bool, unsigned int, unsigned int)",
  "Graphics::ManagedSurface::transBlitFrom(Graphics::ManagedSurface const&, Common::Rect const&, Common::Rect const&, unsigned int, bool, unsigned int, unsigned int, Graphics::Surface const*, bool)",
  "Graphics::ManagedSurface::transBlitFrom(Graphics::ManagedSurface const&, unsigned int, bool, unsigned int, unsigned int)",
  "Graphics::ManagedSurface::transBlitFrom(Graphics::Surface const&, Common::Point const&, Graphics::ManagedSurface const&)",
  "Graphics::ManagedSurface::transBlitFrom(Graphics::Surface const&, Common::Point const&, Graphics::Surface const&)",
  "Graphics::ManagedSurface::transBlitFrom(Graphics::Surface const&, Common::Point const&, unsigned int, bool, unsigned int, unsigned int)",
  "Graphics::ManagedSurface::transBlitFrom(Graphics::Surface const&, Common::Rect const&, Common::Point const&, unsigned int, bool, unsigned int, unsigned int)",
  "Graphics::ManagedSurface::transBlitFrom(Graphics::Surface const&, Common::Rect const&, Common::Rect const&, unsigned int, bool, unsigned int, unsigned int, Graphics::Surface const*, bool)",
  "Graphics::ManagedSurface::transBlitFrom(Graphics::Surface const&, unsigned int, bool, unsigned int, unsigned int)",
  "Graphics::ManagedSurface::transBlitFromInner(Graphics::Surface const&, Common::Rect const&, Common::Rect const&, unsigned int, bool, unsigned int, unsigned int, unsigned int const*, unsigned int const*, Graphics::Surface const*, bool)",
  "Graphics::MarginedBitmap<bool>::MarginedBitmap(int, int, bool)",
  "Graphics::NinePatchBitmap::NinePatchBitmap(Graphics::TransparentSurface*, bool, int)",
  "Graphics::NinePatchBitmap::blit(Graphics::Surface&, int, int, int, int, unsigned char*, int, Graphics::MacWindowManager*, unsigned int)",
  "Graphics::NinePatchBitmap::blitClip(Graphics::Surface&, Common::Rect, int, int, int, int)",
  "Graphics::NinePatchBitmap::closestGrayscale(unsigned int, unsigned char*, int)",
  "Graphics::NinePatchBitmap::drawRegions(Graphics::Surface&, int, int, int, int)",
  "Graphics::NinePatchSide::init(Graphics::TransparentSurface*, bool, int, int*)",
  "Graphics::PaletteLookup::PaletteLookup()",
  "Graphics::PaletteLookup::PaletteLookup(unsigned char const*, unsigned int)",
  "Graphics::PaletteLookup::findBestColor(unsigned char, unsigned char, unsigned char, bool)",
  "Graphics::PaletteLookup::setPalette(unsigned char const*, unsigned int)",
  "Graphics::PixelBuffer::PixelBuffer(Graphics::PixelFormat const&, int, DisposeAfterUse::Flag)",
  "Graphics::PixelBuffer::copyBuffer(int, int, int, Graphics::PixelBuffer const&)",
  "Graphics::PixelBuffer::create(Graphics::PixelFormat const&, int, DisposeAfterUse::Flag)",
  "Graphics::PixelBuffer::create(int, DisposeAfterUse::Flag)",
  "Graphics::PixelFormat::toString() const",
  "Graphics::Renderer::getAvailableTypes()",
  "Graphics::Renderer::getBestMatchingType(Graphics::RendererType, unsigned int)",
  "Graphics::Renderer::getTypeCode(Graphics::RendererType)",
  "Graphics::Renderer::listTypes()",
  "Graphics::SVGBitmap::SVGBitmap(Common::SeekableReadStream*)",
  "Graphics::SVGBitmap::render(Graphics::ManagedSurface&, int, int)",
  "Graphics::SVGBitmap::~SVGBitmap()",
  "Graphics::Screen::Screen(int, int)",
  "Graphics::Screen::Screen(int, int, Graphics::PixelFormat)",
  "Graphics::Screen::addDirtyRect(Common::Rect const&)",
  "Graphics::Screen::clearPalette()",
  "Graphics::Screen::getPalette(unsigned char*)",
  "Graphics::Screen::makeAllDirty()",
  "Graphics::Screen::setPalette(unsigned char const*)",
  "Graphics::Screen::setPalette(unsigned char const*, unsigned int, unsigned int)",
  "Graphics::Screen::update()",
  "Graphics::Screen::updateScreen()",
  "Graphics::Surface* OpenGL::loadViaImageDecoder<Image::BitmapDecoder>(Common::FSNode const&)",
  "Graphics::Surface* OpenGL::loadViaImageDecoder<Image::JPEGDecoder>(Common::FSNode const&)",
  "Graphics::Surface* OpenGL::loadViaImageDecoder<Image::PNGDecoder>(Common::FSNode const&)",
  "Graphics::Surface* OpenGL::loadViaImageDecoder<Image::TGADecoder>(Common::FSNode const&)",
  "Graphics::Surface::convertTo(Graphics::PixelFormat const&, unsigned char const*, int, unsigned char const*, int, Graphics::DitherMethod) const",
  "Graphics::Surface::convertToInPlace(Graphics::PixelFormat const&, unsigned char const*)",
  "Graphics::Surface::debugPrint(int, int, int, int, int, int, int, unsigned char const*) const",
  "Graphics::Surface::ditherFloyd(unsigned char const*, int, Graphics::Surface*, unsigned char const*, int, Graphics::DitherMethod) const",
  "Graphics::Surface::drawLine(int, int, int, int, unsigned int)",
  "Graphics::Surface::drawThickLine(int, int, int, int, int, int, unsigned int)",
  "Graphics::Surface::fillRect(Common::Rect, unsigned int)",
  "Graphics::Surface::flipVertical(Common::Rect const&)",
  "Graphics::Surface::frameRect(Common::Rect const&, unsigned int)",
  "Graphics::Surface::hLine(int, int, int, unsigned int)",
  "Graphics::Surface::move(int, int, int)",
  "Graphics::Surface::rotoscale(Graphics::TransformStruct const&, bool) const",
  "Graphics::Surface::scale(short, short, bool) const",
  "Graphics::Surface::vLine(int, int, int, unsigned int)",
  "Graphics::TTFFont::TTFFont()",
  "Graphics::TTFFont::assureCached(unsigned int) const",
  "Graphics::TTFFont::cacheGlyph(Graphics::TTFFont::Glyph&, unsigned int) const",
  "Graphics::TTFFont::computePointSize(int, Graphics::TTFSizeMode) const",
  "Graphics::TTFFont::computePointSizeFromHeaders(int) const",
  "Graphics::TTFFont::drawChar(Graphics::ManagedSurface*, unsigned int, int, int, unsigned int) const",
  "Graphics::TTFFont::drawChar(Graphics::Surface*, unsigned int, int, int, unsigned int) const",
  "Graphics::TTFFont::drawChar(Graphics::Surface*, unsigned int, int, int, unsigned int, unsigned int const*) const",
  "Graphics::TTFFont::getBoundingBox(unsigned int) const",
  "Graphics::TTFFont::getCharWidth(unsigned int) const",
  "Graphics::TTFFont::getFontName() const",
  "Graphics::TTFFont::getKerningOffset(unsigned int, unsigned int) const",
  "Graphics::TTFFont::load(Common::SeekableReadStream&, int, Graphics::TTFSizeMode, unsigned int, Graphics::TTFRenderMode, unsigned int const*, bool)",
  "Graphics::TTFFont::load(unsigned char*, unsigned int, int, bool, bool, int, Graphics::TTFSizeMode, unsigned int, Graphics::TTFRenderMode, unsigned int const*, bool)",
  "Graphics::TTFFont::readPointSizeFromVDMXTable(int) const",
  "Graphics::TTFFont::readTTFTable(unsigned long) const",
  "Graphics::TTFFont::~TTFFont()",
  "Graphics::TTFLibrary::TTFLibrary()",
  "Graphics::TTFLibrary::closeFont(FT_FaceRec_*&)",
  "Graphics::TTFLibrary::loadFont(unsigned char const*, int, unsigned int, FT_FaceRec_*&)",
  "Graphics::TTFLibrary::~TTFLibrary()",
  "Graphics::TransparentSurface::blit(Graphics::Surface&, int, int, int, Common::Rect*, unsigned int, int, int, Graphics::TSpriteBlendMode)",
  "Graphics::TransparentSurface::blitClip(Graphics::Surface&, Common::Rect, int, int, int, Common::Rect*, unsigned int, int, int, Graphics::TSpriteBlendMode)",
  "Graphics::TransparentSurface::convertTo(Graphics::PixelFormat const&, unsigned char const*) const",
  "Graphics::TransparentSurface::rotoscale(Graphics::TransformStruct const&, bool) const",
  "Graphics::TransparentSurface::scale(short, short, bool) const",
  "Graphics::VectorRenderer::drawCallback_BEVELSQ(Common::Rect const&, Graphics::DrawStep const&)",
  "Graphics::VectorRenderer::drawCallback_BITMAP(Common::Rect const&, Graphics::DrawStep const&)",
  "Graphics::VectorRenderer::drawCallback_CIRCLE(Common::Rect const&, Graphics::DrawStep const&)",
  "Graphics::VectorRenderer::drawCallback_CROSS(Common::Rect const&, Graphics::DrawStep const&)",
  "Graphics::VectorRenderer::drawCallback_FILLSURFACE(Common::Rect const&, Graphics::DrawStep const&)",
  "Graphics::VectorRenderer::drawCallback_LINE(Common::Rect const&, Graphics::DrawStep const&)",
  "Graphics::VectorRenderer::drawCallback_ROUNDSQ(Common::Rect const&, Graphics::DrawStep const&)",
  "Graphics::VectorRenderer::drawCallback_SQUARE(Common::Rect const&, Graphics::DrawStep const&)",
  "Graphics::VectorRenderer::drawCallback_TAB(Common::Rect const&, Graphics::DrawStep const&)",
  "Graphics::VectorRenderer::drawCallback_TRIANGLE(Common::Rect const&, Graphics::DrawStep const&)",
  "Graphics::VectorRenderer::drawCross(int, int, int, int)",
  "Graphics::VectorRenderer::drawStep(Common::Rect const&, Common::Rect const&, Graphics::DrawStep const&, unsigned int)",
  "Graphics::VectorRenderer::stepGetPositions(Graphics::DrawStep const&, Common::Rect const&, unsigned short&, unsigned short&, unsigned short&, unsigned short&)",
  "Graphics::VectorRendererAA<unsigned int>::drawRoundedSquareAlg(int, int, int, int, int, unsigned int, Graphics::VectorRenderer::FillMode)",
  "Graphics::VectorRendererAA<unsigned int>::drawTabAlg(int, int, int, int, int, unsigned int, Graphics::VectorRenderer::FillMode, int, int)",
  "Graphics::VectorRendererAA<unsigned short>::drawInteriorRoundedSquareAlg(int, int, int, int, int, unsigned short, Graphics::VectorRenderer::FillMode)",
  "Graphics::VectorRendererAA<unsigned short>::drawRoundedSquareAlg(int, int, int, int, int, unsigned short, Graphics::VectorRenderer::FillMode)",
  "Graphics::VectorRendererAA<unsigned short>::drawTabAlg(int, int, int, int, int, unsigned short, Graphics::VectorRenderer::FillMode, int, int)",
  "Graphics::VectorRendererSpec<unsigned int>::blitKeyBitmap(Graphics::ManagedSurface const*, Common::Point const&, bool)",
  "Graphics::VectorRendererSpec<unsigned int>::copyFrame(OSystem*, Common::Rect const&)",
  "Graphics::VectorRendererSpec<unsigned int>::copyWholeFrame(OSystem*)",
  "Graphics::VectorRendererSpec<unsigned int>::drawBevelSquareAlg(int, int, int, int, int, unsigned int, unsigned int)",
  "Graphics::VectorRendererSpec<unsigned int>::drawBevelSquareAlgClip(int, int, int, int, int, unsigned int, unsigned int)",
  "Graphics::VectorRendererSpec<unsigned int>::drawBeveledSquare(int, int, int, int)",
  "Graphics::VectorRendererSpec<unsigned int>::drawCircle(int, int, int)",
  "Graphics::VectorRendererSpec<unsigned int>::drawInteriorRoundedSquareAlg(int, int, int, int, int, unsigned int, Graphics::VectorRenderer::FillMode)",
  "Graphics::VectorRendererSpec<unsigned int>::drawInteriorRoundedSquareAlgClip(int, int, int, int, int, unsigned int, Graphics::VectorRenderer::FillMode)",
  "Graphics::VectorRendererSpec<unsigned int>::drawLine(int, int, int, int)",
  "Graphics::VectorRendererSpec<unsigned int>::drawRoundedSquare(int, int, int, int, int)",
  "Graphics::VectorRendererSpec<unsigned int>::drawRoundedSquareAlg(int, int, int, int, int, unsigned int, Graphics::VectorRenderer::FillMode)",
  "Graphics::VectorRendererSpec<unsigned int>::drawRoundedSquareAlgClip(int, int, int, int, int, unsigned int, Graphics::VectorRenderer::FillMode)",
  "Graphics::VectorRendererSpec<unsigned int>::drawSquare(int, int, int, int)",
  "Graphics::VectorRendererSpec<unsigned int>::drawString(Graphics::Font const*, Common::U32String const&, Common::Rect const&, Graphics::TextAlign, GUI::ThemeEngine::TextAlignVertical, int, bool, Common::Rect const&)",
  "Graphics::VectorRendererSpec<unsigned int>::drawTab(int, int, int, int, int, int)",
  "Graphics::VectorRendererSpec<unsigned int>::drawTabAlg(int, int, int, int, int, unsigned int, Graphics::VectorRenderer::FillMode, int, int)",
  "Graphics::VectorRendererSpec<unsigned int>::drawTabAlgClip(int, int, int, int, int, unsigned int, Graphics::VectorRenderer::FillMode, int, int)",
  "Graphics::VectorRendererSpec<unsigned int>::drawTriangle(int, int, int, int, Graphics::VectorRenderer::TriangleOrientation)",
  "Graphics::VectorRendererSpec<unsigned int>::fillSurface()",
  "Graphics::VectorRendererSpec<unsigned int>::precalcGradient(int)",
  "Graphics::VectorRendererSpec<unsigned short>::blitKeyBitmap(Graphics::ManagedSurface const*, Common::Point const&, bool)",
  "Graphics::VectorRendererSpec<unsigned short>::copyFrame(OSystem*, Common::Rect const&)",
  "Graphics::VectorRendererSpec<unsigned short>::copyWholeFrame(OSystem*)",
  "Graphics::VectorRendererSpec<unsigned short>::drawBevelSquareAlg(int, int, int, int, int, unsigned short, unsigned short)",
  "Graphics::VectorRendererSpec<unsigned short>::drawBevelSquareAlgClip(int, int, int, int, int, unsigned short, unsigned short)",
  "Graphics::VectorRendererSpec<unsigned short>::drawBeveledSquare(int, int, int, int)",
  "Graphics::VectorRendererSpec<unsigned short>::drawCircle(int, int, int)",
  "Graphics::VectorRendererSpec<unsigned short>::drawInteriorRoundedSquareAlg(int, int, int, int, int, unsigned short, Graphics::VectorRenderer::FillMode)",
  "Graphics::VectorRendererSpec<unsigned short>::drawInteriorRoundedSquareAlgClip(int, int, int, int, int, unsigned short, Graphics::VectorRenderer::FillMode)",
  "Graphics::VectorRendererSpec<unsigned short>::drawLine(int, int, int, int)",
  "Graphics::VectorRendererSpec<unsigned short>::drawRoundedSquare(int, int, int, int, int)",
  "Graphics::VectorRendererSpec<unsigned short>::drawRoundedSquareAlg(int, int, int, int, int, unsigned short, Graphics::VectorRenderer::FillMode)",
  "Graphics::VectorRendererSpec<unsigned short>::drawRoundedSquareAlgClip(int, int, int, int, int, unsigned short, Graphics::VectorRenderer::FillMode)",
  "Graphics::VectorRendererSpec<unsigned short>::drawSquare(int, int, int, int)",
  "Graphics::VectorRendererSpec<unsigned short>::drawString(Graphics::Font const*, Common::U32String const&, Common::Rect const&, Graphics::TextAlign, GUI::ThemeEngine::TextAlignVertical, int, bool, Common::Rect const&)",
  "Graphics::VectorRendererSpec<unsigned short>::drawTab(int, int, int, int, int, int)",
  "Graphics::VectorRendererSpec<unsigned short>::drawTabAlg(int, int, int, int, int, unsigned short, Graphics::VectorRenderer::FillMode, int, int)",
  "Graphics::VectorRendererSpec<unsigned short>::drawTabAlgClip(int, int, int, int, int, unsigned short, Graphics::VectorRenderer::FillMode, int, int)",
  "Graphics::VectorRendererSpec<unsigned short>::drawTriangle(int, int, int, int, Graphics::VectorRenderer::TriangleOrientation)",
  "Graphics::VectorRendererSpec<unsigned short>::fillSurface()",
  "Graphics::VectorRendererSpec<unsigned short>::precalcGradient(int)",
  "Graphics::WinCursor::readFromStream(Common::SeekableReadStream&)",
  "Graphics::WinCursorGroup::createCursorGroup(Common::WinResources*, Common::WinResourceID const&)",
  "Graphics::WinCursorGroup::~WinCursorGroup()",
  "Graphics::WinFont::getFONFontName(Common::SeekableReadStream&)",
  "Graphics::WinFont::getFontIndex(Common::SeekableReadStream&, Graphics::WinFontDirEntry const&)",
  "Graphics::WinFont::loadFromEXE(Common::WinResources*, Common::String const&, Graphics::WinFontDirEntry const&)",
  "Graphics::WinFont::loadFromFNT(Common::SeekableReadStream&)",
  "Graphics::WinFont::loadFromFNT(Common::String const&)",
  "Graphics::WinFont::loadFromFON(Common::SeekableReadStream&, Graphics::WinFontDirEntry const&)",
  "Graphics::WinFont::loadFromFON(Common::String const&, Graphics::WinFontDirEntry const&)",
  "Graphics::WinFont::~WinFont()",
  "Graphics::YUVToRGBManager::convert410(Graphics::Surface*, Graphics::YUVToRGBManager::LuminanceScale, unsigned char const*, unsigned char const*, unsigned char const*, int, int, int, int)",
  "Graphics::YUVToRGBManager::convert420(Graphics::Surface*, Graphics::YUVToRGBManager::LuminanceScale, unsigned char const*, unsigned char const*, unsigned char const*, int, int, int, int)",
  "Graphics::YUVToRGBManager::convert420Alpha(Graphics::Surface*, Graphics::YUVToRGBManager::LuminanceScale, unsigned char const*, unsigned char const*, unsigned char const*, unsigned char const*, int, int, int, int)",
  "Graphics::YUVToRGBManager::convert444(Graphics::Surface*, Graphics::YUVToRGBManager::LuminanceScale, unsigned char const*, unsigned char const*, unsigned char const*, int, int, int, int)",
  "Graphics::YUVToRGBManager::getLookup(Graphics::PixelFormat, Graphics::YUVToRGBManager::LuminanceScale, bool)",
  "Graphics::blacksquareinwhitecircle(Graphics::ManagedSurface*, int, int, int, int, int)",
  "Graphics::checkThumbnailHeader(Common::SeekableReadStream&)",
  "Graphics::circleColorNoblend(Graphics::ManagedSurface*, double, double, double, int, bool)",
  "Graphics::cleanFontName(Common::String)",
  "Graphics::copyRows(int, Graphics::RowReader&, Graphics::RowWriter&)",
  "Graphics::createMarginedLinePixelsBitmap(Graphics::MarginedBitmap<unsigned char> const&)",
  "Graphics::createPaletteLookup(unsigned int const*, unsigned int const*)",
  "Graphics::createRenderer(int)",
  "Graphics::createScreenShot(Graphics::Surface&)",
  "Graphics::createThumbnail(Graphics::Surface&)",
  "Graphics::create_g_consolefont()",
  "Graphics::create_g_sysfont()",
  "Graphics::create_g_sysfont_big()",
  "Graphics::drawEllipse(int, int, int, int, unsigned int, bool, void (*)(int, int, int, void*), void*)",
  "Graphics::drawFilledRect(Common::Rect&, unsigned int, void (*)(int, int, int, void*), void*)",
  "Graphics::drawFilledRect1(Common::Rect&, unsigned int, void (*)(int, int, int, void*), void*)",
  "Graphics::drawHLine(int, int, int, unsigned int, void (*)(int, int, int, void*), void*)",
  "Graphics::drawLine(int, int, int, int, unsigned int, void (*)(int, int, int, void*), void*)",
  "Graphics::drawPolygonScan(int*, int*, int, Common::Rect&, unsigned int, void (*)(int, int, int, void*), void*)",
  "Graphics::drawRect(Common::Rect&, unsigned int, void (*)(int, int, int, void*), void*)",
  "Graphics::drawRect1(Common::Rect&, unsigned int, void (*)(int, int, int, void*), void*)",
  "Graphics::drawRoundRect(Common::Rect&, int, unsigned int, bool, void (*)(int, int, int, void*), void*)",
  "Graphics::drawRoundRect1(Common::Rect&, int, unsigned int, bool, void (*)(int, int, int, void*), void*)",
  "Graphics::drawThickLine(int, int, int, int, int, int, unsigned int, void (*)(int, int, int, void*), void*)",
  "Graphics::drawThickLine2(int, int, int, int, int, unsigned int, void (*)(int, int, int, void*), void*)",
  "Graphics::drawVLine(int, int, int, unsigned int, void (*)(int, int, int, void*), void*)",
  "Graphics::findTTFace(Common::Array<Common::String> const&, Common::U32String const&, bool, bool, int, unsigned int, Graphics::TTFRenderMode, unsigned int const*)",
  "Graphics::frame(Graphics::ManagedSurface*, int, int, int, int, int, int, int, int, int)",
  "Graphics::larryScale(Graphics::MarginedBitmap<unsigned char> const&, unsigned char, int, int, Graphics::RowWriter&)",
  "Graphics::larryScale(int, int, unsigned char, Graphics::RowReader&, int, int, Graphics::RowWriter&)",
  "Graphics::loadTTFFont(Common::SeekableReadStream&, int, Graphics::TTFSizeMode, unsigned int, Graphics::TTFRenderMode, unsigned int const*, bool)",
  "Graphics::loadTTFFontFromArchive(Common::String const&, int, Graphics::TTFSizeMode, unsigned int, Graphics::TTFRenderMode, unsigned int const*)",
  "Graphics::loadThumbnail(Common::SeekableReadStream&, Graphics::Surface*&, bool)",
  "Graphics::makeBusyWinCursor()",
  "Graphics::makeDefaultWinCursor()",
  "Graphics::menuTimerHandler(void*)",
  "Graphics::readUnicodeString(Common::SeekableReadStream*)",
  "Graphics::renderPM5544(int, int)",
  "Graphics::saveThumbnail(Common::WriteStream&)",
  "Graphics::saveThumbnail(Common::WriteStream&, Graphics::Surface const&)",
  "Graphics::scale(Graphics::Surface const&, int, int)",
  "Graphics::scaleBlit(unsigned char*, unsigned char const*, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, Graphics::PixelFormat const&)",
  "Graphics::scaleBlitBilinear(unsigned char*, unsigned char const*, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, Graphics::PixelFormat const&)",
  "Graphics::scaleDown(Graphics::MarginedBitmap<unsigned char> const&, unsigned char, int, int, Graphics::RowWriter&)",
  "Graphics::scaleLine(int, int)",
  "Graphics::scaleUp(Graphics::MarginedBitmap<unsigned char> const&, int, int, Graphics::RowWriter&)",
  "Graphics::shutdownTTF()",
  "Graphics::skipThumbnail(Common::SeekableReadStream&)",
  "Graphics::stripFormat(Common::U32String const&)",
  "Graphics::underlineAccelerator(Graphics::ManagedSurface*, Graphics::Font const*, Common::UnicodeBiDiText const&, int, int, int, unsigned int)",
  "Graphics::windowTypeName(unsigned char)",
  "GriffonMetaEngineDetection::~GriffonMetaEngineDetection()",
  "Grim::GrimMetaEngineDetection::~GrimMetaEngineDetection()",
  "Groovie::GroovieMetaEngineDetection::~GroovieMetaEngineDetection()",
  "GuessControllerType",
  "HDBMetaEngineDetection::~HDBMetaEngineDetection()",
  "HQPlugin::HQPlugin()",
  "HQPlugin::createInstance(Graphics::PixelFormat const&) const",
  "HQScaler::HQScaler(Graphics::PixelFormat const&)",
  "HQScaler::decreaseFactor()",
  "HQScaler::increaseFactor()",
  "HQScaler::initLUT(Graphics::PixelFormat)",
  "HadeschMetaEngineDetection::~HadeschMetaEngineDetection()",
  "HandleAudioProcess",
  "HandleCaptureProcess",
  "HopkinsMetaEngineDetection::~HopkinsMetaEngineDetection()",
  "Hugo::HugoMetaEngineDetection::~HugoMetaEngineDetection()",
  "HypnoMetaEngineDetection::~HypnoMetaEngineDetection()",
  "ICB::IcbMetaEngineDetection::~IcbMetaEngineDetection()",
  "IMA_ADPCM_CalculateSampleFrames",
  "IMA_ADPCM_Decode",
  "IMA_ADPCM_Init",
  "IllusionsMetaEngineDetection::~IllusionsMetaEngineDetection()",
  "Image::(anonymous namespace)::errorExit(jpeg_common_struct*)",
  "Image::(anonymous namespace)::fillInputBuffer(jpeg_decompress_struct*)",
  "Image::(anonymous namespace)::outputMessage(jpeg_common_struct*)",
  "Image::(anonymous namespace)::skipInputData(jpeg_decompress_struct*, long)",
  "Image::BitmapDecoder::destroy()",
  "Image::BitmapDecoder::loadStream(Common::SeekableReadStream&)",
  "Image::BitmapDecoder::~BitmapDecoder()",
  "Image::BitmapRawDecoder::BitmapRawDecoder(int, int, int, bool, bool)",
  "Image::BitmapRawDecoder::decodeFrame(Common::SeekableReadStream&)",
  "Image::BitmapRawDecoder::getPixelFormat() const",
  "Image::CDToonsDecoder::CDToonsDecoder(unsigned short, unsigned short)",
  "Image::CDToonsDecoder::decodeFrame(Common::SeekableReadStream&)",
  "Image::CDToonsDecoder::renderBlock(unsigned char*, unsigned int, int, int, unsigned int, unsigned int)",
  "Image::Cel3DODecoder::loadStream(Common::SeekableReadStream&)",
  "Image::CinepakDecoder::CinepakDecoder(int)",
  "Image::CinepakDecoder::decodeFrame(Common::SeekableReadStream&)",
  "Image::CinepakDecoder::decodeVectors(Common::SeekableReadStream&, unsigned short, unsigned char, unsigned int)",
  "Image::CinepakDecoder::ditherVectors(Common::SeekableReadStream&, unsigned short, unsigned char, unsigned int)",
  "Image::CinepakDecoder::loadCodebook(Common::SeekableReadStream&, unsigned short, unsigned char, unsigned char, unsigned int)",
  "Image::Codec::createQuickTimeDitherTable(unsigned char const*, unsigned int)",
  "Image::GIFDecoder::loadStream(Common::SeekableReadStream&)",
  "Image::HLZDecoder::decodeFrame(Common::SeekableReadStream&)",
  "Image::HLZDecoder::decodeFrameInPlace(Common::SeekableReadStream&, unsigned int, unsigned char*)",
  "Image::HNM6::DecoderImpl::DecoderImpl(unsigned short, unsigned short, Graphics::PixelFormat const&, unsigned int, bool)",
  "Image::HNM6::DecoderImpl::decodeFrame(Common::SeekableReadStream&)",
  "Image::HNM6::DecoderImpl::decodeIWkf44(Graphics::Surface&, unsigned int, unsigned int)",
  "Image::HNM6::DecoderImpl::decodeIWkf88(Graphics::Surface&, unsigned int, unsigned int)",
  "Image::HNM6::DecoderImpl::decodeIXif22(Graphics::Surface&, Graphics::Surface&, unsigned int, unsigned int)",
  "Image::HNM6::DecoderImpl::decodeIXif44(Graphics::Surface&, Graphics::Surface&, unsigned int, unsigned int)",
  "Image::HNM6::DecoderImpl::decodeIXif88(Graphics::Surface&, Graphics::Surface&, unsigned int, unsigned int)",
  "Image::HNM6::DecoderImpl::decodeIXkf44(Graphics::Surface&, unsigned int, unsigned int)",
  "Image::HNM6::DecoderImpl::decodeIXkf88(Graphics::Surface&, unsigned int, unsigned int)",
  "Image::HNM6::DecoderImpl::renderPlane(int*, int*)",
  "Image::IFFDecoder::loadBitmap(Common::SeekableReadStream&)",
  "Image::IFFDecoder::loadHeader(Common::SeekableReadStream&)",
  "Image::IFFDecoder::loadPalette(Common::SeekableReadStream&, unsigned int)",
  "Image::IFFDecoder::loadPaletteRange(Common::SeekableReadStream&, unsigned int)",
  "Image::IFFDecoder::loadStream(Common::SeekableReadStream&)",
  "Image::ImageDecoder::hasPalette() const",
  "Image::Indeo3Decoder::Indeo3Decoder(unsigned short, unsigned short, unsigned int)",
  "Image::Indeo3Decoder::allocFrames()",
  "Image::Indeo3Decoder::buildModPred()",
  "Image::Indeo3Decoder::decodeChunk(unsigned char*, unsigned char*, int, int, unsigned char const*, unsigned int, unsigned char const*, unsigned char const*, int)",
  "Image::Indeo3Decoder::decodeFrame(Common::SeekableReadStream&)",
  "Image::Indeo3Decoder::isIndeo3(Common::SeekableReadStream&)",
  "Image::Indeo4Decoder::Indeo4Decoder(unsigned short, unsigned short, unsigned int)",
  "Image::Indeo4Decoder::decodeBandHeader(Image::Indeo::IVIBandDesc*)",
  "Image::Indeo4Decoder::decodeFrame(Common::SeekableReadStream&)",
  "Image::Indeo4Decoder::decodeMbInfo(Image::Indeo::IVIBandDesc*, Image::Indeo::IVITile*)",
  "Image::Indeo4Decoder::decodePictureHeader()",
  "Image::Indeo4Decoder::decodeRLETransparency(short (*) [2])",
  "Image::Indeo4Decoder::decodeTransparency()",
  "Image::Indeo4Decoder::isIndeo4(Common::SeekableReadStream&)",
  "Image::Indeo5Decoder::Indeo5Decoder(unsigned short, unsigned short, unsigned int)",
  "Image::Indeo5Decoder::decodeBandHeader(Image::Indeo::IVIBandDesc*)",
  "Image::Indeo5Decoder::decodeFrame(Common::SeekableReadStream&)",
  "Image::Indeo5Decoder::decodeMbInfo(Image::Indeo::IVIBandDesc*, Image::Indeo::IVITile*)",
  "Image::Indeo5Decoder::decodePictureHeader()",
  "Image::Indeo5Decoder::decode_gop_header()",
  "Image::Indeo5Decoder::isIndeo5(Common::SeekableReadStream&)",
  "Image::Indeo::IVI45DecContext::IVI45DecContext()",
  "Image::Indeo::IVIBandDesc::initTiles(Image::Indeo::IVITile*, int, int, int, int)",
  "Image::Indeo::IVIHuffDesc::createHuffFromDesc(Image::Indeo::VLC*, bool) const",
  "Image::Indeo::IVIHuffTab::decodeHuffDesc(Image::Indeo::IVI45DecContext*, int, int)",
  "Image::Indeo::IVIPlaneDesc::checkImageSize(unsigned int, unsigned int, int)",
  "Image::Indeo::IVIPlaneDesc::initPlanes(Image::Indeo::IVIPlaneDesc*, Image::Indeo::IVIPicConfig const*, bool)",
  "Image::Indeo::IVIPlaneDesc::initTiles(Image::Indeo::IVIPlaneDesc*, int, int)",
  "Image::Indeo::IndeoDecoderBase::IndeoDecoderBase(unsigned short, unsigned short, unsigned int)",
  "Image::Indeo::IndeoDecoderBase::decodeBlocks(Image::Indeo::GetBits*, Image::Indeo::IVIBandDesc*, Image::Indeo::IVITile*)",
  "Image::Indeo::IndeoDecoderBase::decodeCodedBlocks(Image::Indeo::GetBits*, Image::Indeo::IVIBandDesc*, void (*)(short*, short const*, unsigned int, int), void (*)(short*, short const*, short const*, unsigned int, int, int), int, int, int, int, int*, int, int, int, unsigned int, int)",
  "Image::Indeo::IndeoDecoderBase::decodeIndeoFrame()",
  "Image::Indeo::IndeoDecoderBase::decode_band(Image::Indeo::IVIBandDesc*)",
  "Image::Indeo::IndeoDecoderBase::iviDcTransform(Image::Indeo::IVIBandDesc*, int*, int, int)",
  "Image::Indeo::IndeoDecoderBase::iviMc(Image::Indeo::IVIBandDesc*, void (*)(short*, short const*, unsigned int, int), void (*)(short*, short const*, short const*, unsigned int, int, int), int, int, int, int, int, int, int)",
  "Image::Indeo::IndeoDecoderBase::processEmptyTile(Image::Indeo::IVIBandDesc*, Image::Indeo::IVITile*, int)",
  "Image::Indeo::VLC::buildTable(int, int, Image::Indeo::VLCcode*, int)",
  "Image::Indeo::VLC::init_vlc(int, int, void const*, int, int, void const*, int, int, int)",
  "Image::Indeo::VLC::init_vlc(int, int, void const*, int, int, void const*, int, int, void const*, int, int, int)",
  "Image::JPEGDecoder::decodeFrame(Common::SeekableReadStream&)",
  "Image::JPEGDecoder::loadStream(Common::SeekableReadStream&)",
  "Image::JYV1Decoder::decodeFrame(Common::SeekableReadStream&)",
  "Image::MJPEGDecoder::MJPEGDecoder()",
  "Image::MJPEGDecoder::decodeFrame(Common::SeekableReadStream&)",
  "Image::MSRLE4Decoder::MSRLE4Decoder(unsigned short, unsigned short, unsigned char)",
  "Image::MSRLE4Decoder::decode4(Common::SeekableReadStream&)",
  "Image::MSRLE4Decoder::decodeFrame(Common::SeekableReadStream&)",
  "Image::MSRLEDecoder::MSRLEDecoder(unsigned short, unsigned short, unsigned char)",
  "Image::MSRLEDecoder::decode8(Common::SeekableReadStream&)",
  "Image::MSRLEDecoder::decodeFrame(Common::SeekableReadStream&)",
  "Image::MSVideo1Decoder::MSVideo1Decoder(unsigned short, unsigned short, unsigned char)",
  "Image::MSVideo1Decoder::decode16(Common::SeekableReadStream&)",
  "Image::MSVideo1Decoder::decode8(Common::SeekableReadStream&)",
  "Image::MSVideo1Decoder::decodeFrame(Common::SeekableReadStream&)",
  "Image::PCXDecoder::decodeRLE(Common::SeekableReadStream&, unsigned char*, unsigned int, bool)",
  "Image::PCXDecoder::loadStream(Common::SeekableReadStream&)",
  "Image::PICTDecoder::decodeCompressedQuickTime(Common::SeekableReadStream&)",
  "Image::PICTDecoder::loadStream(Common::SeekableReadStream&)",
  "Image::PICTDecoder::o_clip(Common::SeekableReadStream&)",
  "Image::PICTDecoder::o_headerOp(Common::SeekableReadStream&)",
  "Image::PICTDecoder::o_longComment(Common::SeekableReadStream&)",
  "Image::PICTDecoder::o_longText(Common::SeekableReadStream&)",
  "Image::PICTDecoder::o_pnSize(Common::SeekableReadStream&)",
  "Image::PICTDecoder::o_txFace(Common::SeekableReadStream&)",
  "Image::PICTDecoder::o_txFont(Common::SeekableReadStream&)",
  "Image::PICTDecoder::o_txRatio(Common::SeekableReadStream&)",
  "Image::PICTDecoder::o_versionOp(Common::SeekableReadStream&)",
  "Image::PICTDecoder::on_bitsRect(Common::SeekableReadStream&)",
  "Image::PICTDecoder::on_compressedQuickTime(Common::SeekableReadStream&)",
  "Image::PICTDecoder::on_directBitsRect(Common::SeekableReadStream&)",
  "Image::PICTDecoder::on_packBitsRect(Common::SeekableReadStream&)",
  "Image::PICTDecoder::oq_compressedQuickTime(Common::SeekableReadStream&)",
  "Image::PICTDecoder::oq_directBitsRect(Common::SeekableReadStream&)",
  "Image::PICTDecoder::oq_packBitsRect(Common::SeekableReadStream&)",
  "Image::PICTDecoder::readPixMap(Common::SeekableReadStream&, bool)",
  "Image::PICTDecoder::setupOpcodesCommon()",
  "Image::PICTDecoder::setupOpcodesNormal()",
  "Image::PICTDecoder::setupOpcodesQuickTime()",
  "Image::PICTDecoder::skipBitsRect(Common::SeekableReadStream&, bool)",
  "Image::PICTDecoder::unpackBitsLine(unsigned char*, unsigned int, Common::SeekableReadStream*, unsigned char, unsigned char)",
  "Image::PICTDecoder::unpackBitsRect(Common::SeekableReadStream&, bool)",
  "Image::PNGDecoder::loadStream(Common::SeekableReadStream&)",
  "Image::QTRLEDecoder::createSurface()",
  "Image::QTRLEDecoder::decode1(Common::SeekableReadStream&, unsigned int, unsigned int)",
  "Image::QTRLEDecoder::decode16(Common::SeekableReadStream&, unsigned int, unsigned int)",
  "Image::QTRLEDecoder::decode24(Common::SeekableReadStream&, unsigned int, unsigned int)",
  "Image::QTRLEDecoder::decode2_4(Common::SeekableReadStream&, unsigned int, unsigned int, unsigned char)",
  "Image::QTRLEDecoder::decode32(Common::SeekableReadStream&, unsigned int, unsigned int)",
  "Image::QTRLEDecoder::decode8(Common::SeekableReadStream&, unsigned int, unsigned int)",
  "Image::QTRLEDecoder::decodeFrame(Common::SeekableReadStream&)",
  "Image::QTRLEDecoder::dither24(Common::SeekableReadStream&, unsigned int, unsigned int)",
  "Image::QTRLEDecoder::getPixelFormat() const",
  "Image::QTRLEDecoder::setDither(Image::Codec::DitherType, unsigned char const*)",
  "Image::RPZADecoder::decodeFrame(Common::SeekableReadStream&)",
  "Image::RPZADecoder::setDither(Image::Codec::DitherType, unsigned char const*)",
  "Image::SMCDecoder::SMCDecoder(unsigned short, unsigned short)",
  "Image::SMCDecoder::decodeFrame(Common::SeekableReadStream&)",
  "Image::SVQ1Decoder::SVQ1Decoder(unsigned short, unsigned short)",
  "Image::SVQ1Decoder::decodeFrame(Common::SeekableReadStream&)",
  "Image::SVQ1Decoder::svq1DecodeBlockIntra(Common::BitStreamImpl<Common::SeekableReadStream, unsigned long long, 32, false, true>*, unsigned char*, int)",
  "Image::SVQ1Decoder::svq1DecodeBlockNonIntra(Common::BitStreamImpl<Common::SeekableReadStream, unsigned long long, 32, false, true>*, unsigned char*, int)",
  "Image::SVQ1Decoder::svq1DecodeDeltaBlock(Common::BitStreamImpl<Common::SeekableReadStream, unsigned long long, 32, false, true>*, unsigned char*, unsigned char*, int, Common::Point*, int, int)",
  "Image::SVQ1Decoder::svq1DecodeMotionVector(Common::BitStreamImpl<Common::SeekableReadStream, unsigned long long, 32, false, true>*, Common::Point*, Common::Point**)",
  "Image::SVQ1Decoder::svq1MotionInter4vBlock(Common::BitStreamImpl<Common::SeekableReadStream, unsigned long long, 32, false, true>*, unsigned char*, unsigned char*, int, Common::Point*, int, int)",
  "Image::SVQ1Decoder::svq1MotionInterBlock(Common::BitStreamImpl<Common::SeekableReadStream, unsigned long long, 32, false, true>*, unsigned char*, unsigned char*, int, Common::Point*, int, int)",
  "Image::TGADecoder::loadStream(Common::SeekableReadStream&)",
  "Image::TGADecoder::readColorMap(Common::SeekableReadStream&, unsigned char, unsigned char)",
  "Image::TGADecoder::readData(Common::SeekableReadStream&, unsigned char, unsigned char)",
  "Image::TGADecoder::readDataColorMapped(Common::SeekableReadStream&, unsigned char, unsigned char)",
  "Image::TGADecoder::readDataRLE(Common::SeekableReadStream&, unsigned char, unsigned char)",
  "Image::TGADecoder::readHeader(Common::SeekableReadStream&, unsigned char&, unsigned char&)",
  "Image::TrueMotion1Decoder::decode16()",
  "Image::TrueMotion1Decoder::decodeFrame(Common::SeekableReadStream&)",
  "Image::TrueMotion1Decoder::decodeHeader(Common::SeekableReadStream&)",
  "Image::XanDecoder::XanDecoder(int, int, int)",
  "Image::XanDecoder::convertYUVtoRGBSurface()",
  "Image::XanDecoder::decodeChroma(Common::SeekableReadStream&, int)",
  "Image::XanDecoder::decodeFrame(Common::SeekableReadStream&)",
  "Image::XanDecoder::decodeFrameType0(Common::SeekableReadStream&)",
  "Image::XanDecoder::decodeFrameType1(Common::SeekableReadStream&)",
  "Image::XanDecoder::decompressLuma(Common::SeekableReadStream&)",
  "Image::_unpack(Common::SeekableReadStream&, unsigned char*, int)",
  "Image::createBitmapCodec(unsigned int, unsigned int, int, int, int)",
  "Image::createHNM6Decoder(unsigned short, unsigned short, Graphics::PixelFormat const&, unsigned int, bool)",
  "Image::createQuickTimeCodec(unsigned int, int, int, int)",
  "Image::pngError(png_struct_def*, char const*)",
  "Image::pngFlushStream(png_struct_def*)",
  "Image::pngReadFromStream(png_struct_def*, unsigned char*, unsigned long)",
  "Image::pngWarning(png_struct_def*, char const*)",
  "Image::pngWriteToStream(png_struct_def*, unsigned char*, unsigned long)",
  "Image::writeBMP(Common::WriteStream&, Graphics::Surface const&)",
  "Image::writePNG(Common::WriteStream&, Graphics::Surface const&, unsigned char const*)",
  "Ins_DELTAP",
  "Ins_MDRP",
  "Ins_MIRP",
  "IsMacResource",
  "KingdomMetaEngineDetection::~KingdomMetaEngineDetection()",
  "KyraMetaEngineDetection::~KyraMetaEngineDetection()",
  "LAW_Decode",
  "LAW_Init",
  "LISTChunk::LISTChunk(Common::String)",
  "LabMetaEngineDetection::~LabMetaEngineDetection()",
  "LastExpress::LastExpressMetaEngineDetection::~LastExpressMetaEngineDetection()",
  "LegacySdlEventSource::LegacySdlEventSource()",
  "LegacySdlEventSource::computeJoystickMouseSpeedFactor() const",
  "LegacySdlEventSource::handleAxisToMouseMotion(short, short)",
  "LegacySdlEventSource::handleControllerAxisMotion(SDL_Event const&, Common::Event&)",
  "LegacySdlEventSource::handleControllerButton(SDL_Event const&, Common::Event&, bool)",
  "LegacySdlEventSource::handleJoyAxisMotion(SDL_Event&, Common::Event&)",
  "LegacySdlEventSource::handleKbdMouse(Common::Event&)",
  "LegacySdlEventSource::handleMouseButtonDown(SDL_Event&, Common::Event&)",
  "LegacySdlEventSource::handleMouseButtonUp(SDL_Event&, Common::Event&)",
  "LegacySdlEventSource::handleMouseMotion(SDL_Event&, Common::Event&)",
  "LegacySdlEventSource::pollEvent(Common::Event&)",
  "LegacySdlEventSource::updateKbdMouse()",
  "LegacySdlEventSource::~LegacySdlEventSource()",
  "Lilliput::LilliputMetaEngineDetection::~LilliputMetaEngineDetection()",
  "ListTypeChunk::AddChildChunk(Chunk*)",
  "ListTypeChunk::GetSize()",
  "ListTypeChunk::Write(unsigned char*)",
  "Lua::LuaFileConfig::LuaFileConfig(Common::String const&, Common::String const&)",
  "Lua::LuaFileConfig::formatDouble(double)",
  "Lua::LuaFileConfig::getLanguage()",
  "Lua::LuaFileConfig::setLanguage(Common::String const&)",
  "Lua::LuaFileConfig::setupConfigFile()",
  "Lua::LuaFileConfig::updateSetting(Common::String const&, Common::String const&)",
  "Lua::LuaFileConfig::write(char const*, unsigned long)",
  "Lua::LuaFileConfig::writeSettings()",
  "Lua::LuaFileConfig::~LuaFileConfig()",
  "Lua::LuaFileProxy::create(Common::String const&, Common::String const&)",
  "Lua::LuaFileRead::LuaFileRead(Common::String const&, Common::String const&)",
  "Lua::LuaFileRead::eof() const",
  "Lua::LuaFileRead::read(void*, unsigned long, unsigned long)",
  "Lua::LuaFileRead::~LuaFileRead()",
  "Lua::boxUpValue_start(lua_State*)",
  "Lua::createProto(lua_State*)",
  "Lua::createString(lua_State*, char const*, unsigned long)",
  "Lua::createUpValue(lua_State*, int)",
  "Lua::lua_newLclosure(lua_State*, int, Table*)",
  "Lua::lua_newlstr(lua_State*, char const*, unsigned long)",
  "Lua::lua_newproto(lua_State*)",
  "Lua::lua_realloc(lua_State*, void*, unsigned long, unsigned long)",
  "Lua::lua_reallocCallInfo(lua_State*, int)",
  "Lua::lua_reallocstack(lua_State*, int)",
  "Lua::makeFakeProto(lua_State*, unsigned char)",
  "Lua::makeUpValue(lua_State*, int)",
  "Lua::persist(Lua::SerializationInfo*)",
  "Lua::persistBoolean(Lua::SerializationInfo*)",
  "Lua::persistFunction(Lua::SerializationInfo*)",
  "Lua::persistLua(lua_State*, Common::WriteStream*)",
  "Lua::persistNumber(Lua::SerializationInfo*)",
  "Lua::persistProto(Lua::SerializationInfo*)",
  "Lua::persistString(Lua::SerializationInfo*)",
  "Lua::persistTable(Lua::SerializationInfo*)",
  "Lua::persistThread(Lua::SerializationInfo*)",
  "Lua::persistUpValue(Lua::SerializationInfo*)",
  "Lua::persistUserData(Lua::SerializationInfo*)",
  "Lua::serializeSpecialObject(Lua::SerializationInfo*, bool)",
  "Lua::unpersist(Lua::UnSerializationInfo*)",
  "Lua::unpersistLua(lua_State*, Common::ReadStream*)",
  "LureMetaEngineDetection::~LureMetaEngineDetection()",
  "MADSMetaEngineDetection::~MADSMetaEngineDetection()",
  "MD5CacheManager::MD5CacheManager()",
  "MD5CacheManager::~MD5CacheManager()",
  "MS_ADPCM_CalculateSampleFrames",
  "MS_ADPCM_Decode",
  "MS_ADPCM_Init",
  "MT32Emu::AbstractFile::getSHA1()",
  "MT32Emu::AbstractLowPassFilter<float>::createLowPassFilter(MT32Emu::AnalogOutputMode, bool)",
  "MT32Emu::AbstractLowPassFilter<int>::createLowPassFilter(MT32Emu::AnalogOutputMode, bool)",
  "MT32Emu::AccurateLowPassFilter::process(float)",
  "MT32Emu::AccurateLowPassFilter::process(int)",
  "MT32Emu::Analog::createAnalog(MT32Emu::AnalogOutputMode, bool, MT32Emu::RendererType)",
  "MT32Emu::AnalogImpl<float>::AnalogImpl(MT32Emu::AnalogOutputMode, bool)",
  "MT32Emu::AnalogImpl<float>::getDACStreamsLength(unsigned int) const",
  "MT32Emu::AnalogImpl<float>::getOutputSampleRate() const",
  "MT32Emu::AnalogImpl<float>::process(float*, float const*, float const*, float const*, float const*, float const*, float const*, unsigned int)",
  "MT32Emu::AnalogImpl<float>::~AnalogImpl()",
  "MT32Emu::AnalogImpl<int>::AnalogImpl(MT32Emu::AnalogOutputMode, bool)",
  "MT32Emu::AnalogImpl<int>::getDACStreamsLength(unsigned int) const",
  "MT32Emu::AnalogImpl<int>::getOutputSampleRate() const",
  "MT32Emu::AnalogImpl<int>::process(short*, short const*, short const*, short const*, short const*, short const*, short const*, unsigned int)",
  "MT32Emu::AnalogImpl<int>::~AnalogImpl()",
  "MT32Emu::BReverbModel::createBReverbModel(MT32Emu::ReverbMode, bool, MT32Emu::RendererType)",
  "MT32Emu::BReverbModelImpl<float>::close()",
  "MT32Emu::BReverbModelImpl<float>::isActive() const",
  "MT32Emu::BReverbModelImpl<float>::open()",
  "MT32Emu::BReverbModelImpl<float>::process(float const*, float const*, float*, float*, unsigned int)",
  "MT32Emu::BReverbModelImpl<float>::setParameters(unsigned char, unsigned char)",
  "MT32Emu::BReverbModelImpl<float>::~BReverbModelImpl()",
  "MT32Emu::BReverbModelImpl<short>::close()",
  "MT32Emu::BReverbModelImpl<short>::isActive() const",
  "MT32Emu::BReverbModelImpl<short>::open()",
  "MT32Emu::BReverbModelImpl<short>::process(short const*, short const*, short*, short*, unsigned int)",
  "MT32Emu::BReverbModelImpl<short>::setParameters(unsigned char, unsigned char)",
  "MT32Emu::BReverbModelImpl<short>::~BReverbModelImpl()",
  "MT32Emu::CppInterfaceImpl::onDeviceReconfig(void*)",
  "MT32Emu::CppInterfaceImpl::onDeviceReset(void*)",
  "MT32Emu::CppInterfaceImpl::onErrorControlROM(void*)",
  "MT32Emu::CppInterfaceImpl::onErrorPCMROM(void*)",
  "MT32Emu::CppInterfaceImpl::onMIDIMessagePlayed(void*)",
  "MT32Emu::CppInterfaceImpl::onMIDIQueueOverflow(void*)",
  "MT32Emu::CppInterfaceImpl::onMIDISystemRealtime(void*, unsigned char)",
  "MT32Emu::CppInterfaceImpl::onNewReverbMode(void*, unsigned char)",
  "MT32Emu::CppInterfaceImpl::onNewReverbTime(void*, unsigned char)",
  "MT32Emu::CppInterfaceImpl::onPolyStateChanged(void*, unsigned char)",
  "MT32Emu::CppInterfaceImpl::onProgramChanged(void*, unsigned char, char const*, char const*)",
  "MT32Emu::CppInterfaceImpl::showLCDMessage(void*, char const*)",
  "MT32Emu::DefaultMidiStreamParser::DefaultMidiStreamParser(MT32Emu::Synth&, unsigned int)",
  "MT32Emu::DefaultMidiStreamParser::handleShortMessage(unsigned int)",
  "MT32Emu::DefaultMidiStreamParser::handleSysex(unsigned char const*, unsigned int)",
  "MT32Emu::DefaultMidiStreamParser::handleSystemRealtimeMessage(unsigned char)",
  "MT32Emu::DefaultMidiStreamParser::printDebug(char const*)",
  "MT32Emu::DelegatingMidiStreamParser::handleShortMessage(unsigned int)",
  "MT32Emu::DelegatingReportHandlerAdapter::onDeviceReconfig()",
  "MT32Emu::DelegatingReportHandlerAdapter::onDeviceReset()",
  "MT32Emu::DelegatingReportHandlerAdapter::onLCDStateUpdated()",
  "MT32Emu::DelegatingReportHandlerAdapter::onMIDIMessagePlayed()",
  "MT32Emu::DelegatingReportHandlerAdapter::onMIDISystemRealtime(unsigned char)",
  "MT32Emu::DelegatingReportHandlerAdapter::onMidiMessageLEDStateUpdated(bool)",
  "MT32Emu::DelegatingReportHandlerAdapter::onNewReverbLevel(unsigned char)",
  "MT32Emu::DelegatingReportHandlerAdapter::onNewReverbTime(unsigned char)",
  "MT32Emu::DelegatingReportHandlerAdapter::onPolyStateChanged(unsigned char)",
  "MT32Emu::DelegatingReportHandlerAdapter::onProgramChanged(unsigned char, char const*, char const*)",
  "MT32Emu::DelegatingReportHandlerAdapter::printDebug(char const*, void*)",
  "MT32Emu::DelegatingReportHandlerAdapter::showLCDMessage(char const*)",
  "MT32Emu::DynamicSysexDataStorage::allocate(unsigned int)",
  "MT32Emu::FileStream::FileStream()",
  "MT32Emu::FileStream::close()",
  "MT32Emu::FileStream::getData()",
  "MT32Emu::FileStream::getSize()",
  "MT32Emu::FileStream::open(char const*)",
  "MT32Emu::FileStream::~FileStream()",
  "MT32Emu::InternalResampler::InternalResampler(MT32Emu::Synth&, double, MT32Emu::SamplerateConversionQuality)",
  "MT32Emu::InternalResampler::getOutputSamples(float*, unsigned int)",
  "MT32Emu::InternalResampler::~InternalResampler()",
  "MT32Emu::MidiEventQueue::MidiEventQueue(unsigned int, unsigned int)",
  "MT32Emu::MidiEventQueue::SysexDataStorage::create(unsigned int)",
  "MT32Emu::MidiEventQueue::dropMidiEvent()",
  "MT32Emu::MidiEventQueue::pushShortMessage(unsigned int, unsigned int)",
  "MT32Emu::MidiEventQueue::pushSysex(unsigned char const*, unsigned int, unsigned int)",
  "MT32Emu::MidiEventQueue::~MidiEventQueue()",
  "MT32Emu::MidiStreamParser::MidiStreamParser(unsigned int)",
  "MT32Emu::MidiStreamParserImpl::MidiStreamParserImpl(MT32Emu::MidiReceiver&, MT32Emu::MidiReporter&, unsigned int)",
  "MT32Emu::MidiStreamParserImpl::checkStreamBufferCapacity(bool)",
  "MT32Emu::MidiStreamParserImpl::parseShortMessageStatus(unsigned char const*)",
  "MT32Emu::MidiStreamParserImpl::parseStream(unsigned char const*, unsigned int)",
  "MT32Emu::MidiStreamParserImpl::parseSysex(unsigned char const*, unsigned int)",
  "MT32Emu::MidiStreamParserImpl::parseSysexFragment(unsigned char const*, unsigned int)",
  "MT32Emu::MidiStreamParserImpl::processShortMessage(unsigned int)",
  "MT32Emu::MidiStreamParserImpl::processStatusByte(unsigned char&)",
  "MT32Emu::Part::Part(MT32Emu::Synth*, unsigned int)",
  "MT32Emu::Part::allNotesOff()",
  "MT32Emu::Part::allSoundOff()",
  "MT32Emu::Part::noteOff(unsigned int)",
  "MT32Emu::Part::noteOn(unsigned int, unsigned int)",
  "MT32Emu::Part::partialDeactivated(MT32Emu::Poly*)",
  "MT32Emu::Part::playPoly(MT32Emu::PatchCache const*, MT32Emu::MemParams::RhythmTemp const*, unsigned int, unsigned int, unsigned int)",
  "MT32Emu::Part::refresh()",
  "MT32Emu::Part::refreshTimbre(unsigned int)",
  "MT32Emu::Part::reset()",
  "MT32Emu::Part::resetAllControllers()",
  "MT32Emu::Part::setHoldPedal(bool)",
  "MT32Emu::Part::setProgram(unsigned int)",
  "MT32Emu::Part::setVolumeOverride(unsigned char)",
  "MT32Emu::Part::stopNote(unsigned int)",
  "MT32Emu::Part::stopPedalHold()",
  "MT32Emu::Partial::Partial(MT32Emu::Synth*, int)",
  "MT32Emu::Partial::canProduceOutput()",
  "MT32Emu::Partial::deactivate()",
  "MT32Emu::Partial::getAmpValue()",
  "MT32Emu::Partial::produceOutput(float*, float*, unsigned int)",
  "MT32Emu::Partial::produceOutput(short*, short*, unsigned int)",
  "MT32Emu::Partial::startPartial(MT32Emu::Part const*, MT32Emu::Poly*, MT32Emu::PatchCache const*, MT32Emu::MemParams::RhythmTemp const*, MT32Emu::Partial*)",
  "MT32Emu::Partial::~Partial()",
  "MT32Emu::PartialManager::PartialManager(MT32Emu::Synth*, MT32Emu::Part**)",
  "MT32Emu::PartialManager::allocPartial(int)",
  "MT32Emu::PartialManager::deactivateAll()",
  "MT32Emu::PartialManager::partialDeactivated(int)",
  "MT32Emu::PartialManager::polyFreed(MT32Emu::Poly*)",
  "MT32Emu::PartialManager::produceOutput(int, float*, float*, unsigned int)",
  "MT32Emu::PartialManager::produceOutput(int, short*, short*, unsigned int)",
  "MT32Emu::PartialManager::~PartialManager()",
  "MT32Emu::Poly::noteOff(bool)",
  "MT32Emu::Poly::partialDeactivated(MT32Emu::Partial*)",
  "MT32Emu::Poly::reset(unsigned int, unsigned int, bool, MT32Emu::Partial**)",
  "MT32Emu::Poly::setState(MT32Emu::PolyState)",
  "MT32Emu::Poly::startDecay()",
  "MT32Emu::Poly::stopPedalHold()",
  "MT32Emu::ROMImage::ROMImage(MT32Emu::File*, bool, MT32Emu::ROMInfo const* const*)",
  "MT32Emu::ROMImage::appendImages(MT32Emu::ROMImage const*, MT32Emu::ROMImage const*)",
  "MT32Emu::ROMImage::freeROMImage(MT32Emu::ROMImage const*)",
  "MT32Emu::ROMImage::interleaveImages(MT32Emu::ROMImage const*, MT32Emu::ROMImage const*)",
  "MT32Emu::ROMImage::makeFullROMImage(unsigned char*, unsigned long)",
  "MT32Emu::ROMImage::makeROMImage(MT32Emu::File*)",
  "MT32Emu::ROMImage::makeROMImage(MT32Emu::File*, MT32Emu::File*)",
  "MT32Emu::ROMImage::makeROMImage(MT32Emu::File*, MT32Emu::ROMInfo const* const*)",
  "MT32Emu::ROMImage::mergeROMImages(MT32Emu::ROMImage const*, MT32Emu::ROMImage const*)",
  "MT32Emu::ROMImage::~ROMImage()",
  "MT32Emu::ROMInfo::getROMInfo(MT32Emu::File*)",
  "MT32Emu::ROMInfo::getROMInfo(MT32Emu::File*, MT32Emu::ROMInfo const* const*)",
  "MT32Emu::ROMInfo::getROMInfoList(unsigned int, unsigned int)",
  "MT32Emu::Renderer::updateDisplayState()",
  "MT32Emu::RendererImpl<float>::doRender(float*, unsigned int)",
  "MT32Emu::RendererImpl<float>::doRenderStreams(MT32Emu::DACOutputStreams<float> const&, unsigned int)",
  "MT32Emu::RendererImpl<float>::produceStreams(MT32Emu::DACOutputStreams<float> const&, unsigned int)",
  "MT32Emu::RendererImpl<float>::render(float*, unsigned int)",
  "MT32Emu::RendererImpl<float>::render(short*, unsigned int)",
  "MT32Emu::RendererImpl<float>::renderStreams(MT32Emu::DACOutputStreams<float> const&, unsigned int)",
  "MT32Emu::RendererImpl<float>::renderStreams(MT32Emu::DACOutputStreams<short> const&, unsigned int)",
  "MT32Emu::RendererImpl<short>::doRender(short*, unsigned int)",
  "MT32Emu::RendererImpl<short>::doRenderStreams(MT32Emu::DACOutputStreams<short> const&, unsigned int)",
  "MT32Emu::RendererImpl<short>::produceStreams(MT32Emu::DACOutputStreams<short> const&, unsigned int)",
  "MT32Emu::RendererImpl<short>::render(float*, unsigned int)",
  "MT32Emu::RendererImpl<short>::render(short*, unsigned int)",
  "MT32Emu::RendererImpl<short>::renderStreams(MT32Emu::DACOutputStreams<float> const&, unsigned int)",
  "MT32Emu::RendererImpl<short>::renderStreams(MT32Emu::DACOutputStreams<short> const&, unsigned int)",
  "MT32Emu::ReportHandler::printDebug(char const*, void*)",
  "MT32Emu::ReportHandler::showLCDMessage(char const*)",
  "MT32Emu::RhythmPart::RhythmPart(MT32Emu::Synth*, unsigned int)",
  "MT32Emu::RhythmPart::getAbsTimbreNum() const",
  "MT32Emu::RhythmPart::noteOff(unsigned int)",
  "MT32Emu::RhythmPart::noteOn(unsigned int, unsigned int)",
  "MT32Emu::RhythmPart::setTimbre(MT32Emu::TimbreParam*)",
  "MT32Emu::SampleRateConverter::SampleRateConverter(MT32Emu::Synth&, double, MT32Emu::SamplerateConversionQuality)",
  "MT32Emu::SampleRateConverter::getOutputSamples(float*, unsigned int)",
  "MT32Emu::SampleRateConverter::getOutputSamples(short*, unsigned int)",
  "MT32Emu::SampleRateConverter::~SampleRateConverter()",
  "MT32Emu::ScummVMReportHandler::onErrorControlROM()",
  "MT32Emu::ScummVMReportHandler::onErrorPCMROM()",
  "MT32Emu::ScummVMReportHandler::printDebug(char const*, void*)",
  "MT32Emu::ScummVMReportHandler::showLCDMessage(char const*)",
  "MT32Emu::Synth::Synth(MT32Emu::ReportHandler*)",
  "MT32Emu::Synth::close()",
  "MT32Emu::Synth::configureMIDIEventQueueSysexStorage(unsigned int)",
  "MT32Emu::Synth::dispose()",
  "MT32Emu::Synth::flushMIDIQueue()",
  "MT32Emu::Synth::getStereoOutputSampleRate() const",
  "MT32Emu::Synth::initMemoryRegions()",
  "MT32Emu::Synth::initPCMList(unsigned short, unsigned short)",
  "MT32Emu::Synth::initTimbres(unsigned short, unsigned short, unsigned short, unsigned short, bool)",
  "MT32Emu::Synth::isActive()",
  "MT32Emu::Synth::isMT32ReverbCompatibilityMode() const",
  "MT32Emu::Synth::loadControlROM(MT32Emu::ROMImage const&)",
  "MT32Emu::Synth::loadPCMROM(MT32Emu::ROMImage const&)",
  "MT32Emu::Synth::newTimbreSet(unsigned char) const",
  "MT32Emu::Synth::open(MT32Emu::ROMImage const&, MT32Emu::ROMImage const&, MT32Emu::AnalogOutputMode)",
  "MT32Emu::Synth::open(MT32Emu::ROMImage const&, MT32Emu::ROMImage const&, unsigned int, MT32Emu::AnalogOutputMode)",
  "MT32Emu::Synth::playMsg(unsigned int)",
  "MT32Emu::Synth::playMsg(unsigned int, unsigned int)",
  "MT32Emu::Synth::playMsgNow(unsigned int)",
  "MT32Emu::Synth::playMsgOnPart(unsigned char, unsigned char, unsigned char, unsigned char)",
  "MT32Emu::Synth::playSysex(unsigned char const*, unsigned int)",
  "MT32Emu::Synth::playSysex(unsigned char const*, unsigned int, unsigned int)",
  "MT32Emu::Synth::playSysexNow(unsigned char const*, unsigned int)",
  "MT32Emu::Synth::playSysexWithoutFraming(unsigned char const*, unsigned int)",
  "MT32Emu::Synth::playSysexWithoutHeader(unsigned char, unsigned char, unsigned char const*, unsigned int)",
  "MT32Emu::Synth::preallocateReverbMemory(bool)",
  "MT32Emu::Synth::printDebug(char const*, ...)",
  "MT32Emu::Synth::printPartialUsage(unsigned int)",
  "MT32Emu::Synth::refreshSystem()",
  "MT32Emu::Synth::refreshSystemChanAssign(unsigned char, unsigned char)",
  "MT32Emu::Synth::refreshSystemReverbParameters()",
  "MT32Emu::Synth::render(float*, unsigned int)",
  "MT32Emu::Synth::render(short*, unsigned int)",
  "MT32Emu::Synth::renderStreams(MT32Emu::DACOutputStreams<float> const&, unsigned int)",
  "MT32Emu::Synth::renderStreams(MT32Emu::DACOutputStreams<short> const&, unsigned int)",
  "MT32Emu::Synth::renderStreams(float*, float*, float*, float*, float*, float*, unsigned int)",
  "MT32Emu::Synth::renderStreams(short*, short*, short*, short*, short*, short*, unsigned int)",
  "MT32Emu::Synth::reset()",
  "MT32Emu::Synth::setMIDIEventQueueSize(unsigned int)",
  "MT32Emu::Synth::setOutputGain(float)",
  "MT32Emu::Synth::setPartVolumeOverride(unsigned char, unsigned char)",
  "MT32Emu::Synth::setReverbCompatibilityMode(bool)",
  "MT32Emu::Synth::setReverbEnabled(bool)",
  "MT32Emu::Synth::setReverbOutputGain(float)",
  "MT32Emu::Synth::writeMemoryRegion(MT32Emu::MemoryRegion const*, unsigned int, unsigned int, unsigned char const*)",
  "MT32Emu::Synth::writeSysex(unsigned char, unsigned char const*, unsigned int)",
  "MT32Emu::Synth::writeSysexGlobal(unsigned int, unsigned char const*, unsigned int)",
  "MT32Emu::Synth::~Synth()",
  "MT32Emu::SynthWrapper::getOutputSamples(float*, unsigned int)",
  "MT32Emu::TVA::handleInterrupt()",
  "MT32Emu::TVA::nextPhase()",
  "MT32Emu::addROMFiles(mt32emu_data*, MT32Emu::File*, MT32Emu::File*, MT32Emu::MachineConfiguration const*)",
  "MT32Emu::identifyROM(mt32emu_rom_info*, MT32Emu::File*, char const*)",
  "MT32Emu::replaceOrMergeROMImage(MT32Emu::ROMImage const*&, MT32Emu::ROMImage const*, MT32Emu::MachineConfiguration const*, mt32emu_return_code, mt32emu_return_code)",
  "MT32EmuMusicPlugin::checkDevice(unsigned int) const",
  "MT32EmuMusicPlugin::createInstance(MidiDriver**, unsigned int) const",
  "MT32EmuMusicPlugin::getDevices() const",
  "MTropolisMetaEngineDetection::~MTropolisMetaEngineDetection()",
  "MacVenture::MacVentureMetaEngineDetection::~MacVentureMetaEngineDetection()",
  "MadeMetaEngineDetection::fallbackDetect(Common::HashMap<Common::String, Common::FSNode, Common::IgnoreCase_Hash, Common::IgnoreCase_EqualTo> const&, Common::FSList const&, ADDetectedGameExtraInfo**) const",
  "MadeMetaEngineDetection::~MadeMetaEngineDetection()",
  "MainMenuDialog::MainMenuDialog(Engine*)",
  "MainMenuDialog::handleCommand(GUI::CommandSender*, unsigned int, unsigned int)",
  "MainMenuDialog::load()",
  "MainMenuDialog::reflowLayout()",
  "MainMenuDialog::save()",
  "MainMenuDialog::~MainMenuDialog()",
  "Map1to",
  "Math::CosineTable::CosineTable(int)",
  "Math::DCT::DCT(int, Math::DCT::TransformType)",
  "Math::FFT::FFT(int, int)",
  "Math::MDCT::MDCT(int, bool, double)",
  "Math::Quaternion::fromEuler(Math::Angle const&, Math::Angle const&, Math::Angle const&, Math::EulerOrder)",
  "Math::Quaternion::getEuler(Math::Angle*, Math::Angle*, Math::Angle*, Math::EulerOrder) const",
  "Math::RDFT::RDFT(int, Math::RDFT::TransformType)",
  "Math::Rect2d::intersectsRect(Math::Rect2d const&) const",
  "Math::Rotation3D<Math::Matrix<4, 4>>::buildFromEuler(Math::Angle const&, Math::Angle const&, Math::Angle const&, Math::EulerOrder)",
  "Math::Rotation3D<Math::Matrix<4, 4>>::getEuler(Math::Angle*, Math::Angle*, Math::Angle*, Math::EulerOrder) const",
  "Math::SineTable::SineTable(int)",
  "Math::operator<<(Common::StreamDebug&, Math::Angle const&)",
  "Math::operator<<(Common::StreamDebug&, Math::Line2d const&)",
  "MemFile::GetShort(unsigned long) const",
  "MemFile::GetWord(unsigned long) const",
  "MemFile::MemFile(unsigned char const*, unsigned int)",
  "MemFile::size() const",
  "MemFile::~MemFile()",
  "MetaEngine::appendExtendedSave(Common::OutSaveFile*, unsigned int, Common::String, bool)",
  "MetaEngine::appendExtendedSaveToStream(Common::WriteStream*, unsigned int, Common::String, bool, unsigned int)",
  "MetaEngine::buildEngineOptionsWidget(GUI::GuiObject*, Common::String const&, Common::String const&) const",
  "MetaEngine::copySaveFileToFreeSlot(char const*, int)",
  "MetaEngine::findEmptySaveSlot(char const*)",
  "MetaEngine::getAchievementsInfo(Common::String const&) const",
  "MetaEngine::getMaximumSaveSlot() const",
  "MetaEngine::getSavegameFile(int, char const*) const",
  "MetaEngine::getSavegameThumbnail(Graphics::Surface&)",
  "MetaEngine::initKeymaps(char const*) const",
  "MetaEngine::listSaves(char const*) const",
  "MetaEngine::listSaves(char const*, bool) const",
  "MetaEngine::parseSavegameHeader(ExtendedSavegameHeader*, SaveStateDescriptor*)",
  "MetaEngine::querySaveMetaInfos(char const*, int) const",
  "MetaEngine::readSavegameHeader(Common::SeekableReadStream*, ExtendedSavegameHeader*, bool)",
  "MetaEngine::registerDefaultSettings(Common::String const&) const",
  "MetaEngine::removeSaveState(char const*, int) const",
  "MetaEngineDetection& Plugin::get<MetaEngineDetection>() const",
  "MetaEngineDetection::parseAndCustomizeGuiOptions(Common::String const&, Common::String const&) const",
  "MidiChannel::allNotesOff()MidiChannel::sustain(bool)",
  "MidiChannel::effectLevel(unsigned char)",
  "MidiChannel::modulationWheel(unsigned char)",
  "MidiChannel::panPosition(unsigned char)",
  "MidiChannel::volume(unsigned char)",
  "MidiChannel_MPU401::controlChange(unsigned char, unsigned char)",
  "MidiChannel_MPU401::noteOn(unsigned char, unsigned char)",
  "MidiChannel_MPU401::pitchBend(short)",
  "MidiChannel_MPU401::pitchBendFactor(unsigned char)",
  "MidiChannel_MPU401::programChange(unsigned char)",
  "MidiDriver::checkDevice(unsigned int)",
  "MidiDriver::detectDevice(int)",
  "MidiDriver::getDeviceHandle(Common::String const&)",
  "MidiDriver::getDeviceString(unsigned int, MidiDriver::DeviceStringType)",
  "MidiDriver::midiDriverCommonSend(unsigned int)",
  "MidiDriver::midiDriverCommonSysEx(unsigned char const*, unsigned short)",
  "MidiDriver::musicType2GUIO(unsigned int)",
  "MidiDriver::sendGMReset()",
  "MidiDriver::sendMT32Reset()",
  "MidiDriver::setPitchBendRange(unsigned char, unsigned int)",
  "MidiDriver_ADLIB::MidiDriver_ADLIB()",
  "MidiDriver_ADLIB::adlibKeyOff(int)",
  "MidiDriver_ADLIB::adlibKeyOnOff(int)",
  "MidiDriver_ADLIB::adlibNoteOn(int, unsigned char, int)",
  "MidiDriver_ADLIB::adlibNoteOnEx(int, unsigned char, int)",
  "MidiDriver_ADLIB::adlibPlayNote(int, int)",
  "MidiDriver_ADLIB::adlibSetParam(int, unsigned char, int, bool)",
  "MidiDriver_ADLIB::adlibSetupChannel(int, AdLibInstrument const*, unsigned char, unsigned char)",
  "MidiDriver_ADLIB::adlibSetupChannelSecondary(int, AdLibInstrument const*, unsigned char, unsigned char, unsigned char)",
  "MidiDriver_ADLIB::adlibWrite(unsigned char, unsigned char)",
  "MidiDriver_ADLIB::adlibWriteSecondary(unsigned char, unsigned char)",
  "MidiDriver_ADLIB::allocateVoice(unsigned char)",
  "MidiDriver_ADLIB::close()",
  "MidiDriver_ADLIB::mcIncStuff(AdLibVoice*, Struct10*, Struct11*)",
  "MidiDriver_ADLIB::mcKeyOn(AdLibVoice*, AdLibInstrument const*, unsigned char, unsigned char, AdLibInstrument const*, unsigned char)",
  "MidiDriver_ADLIB::mcOff(AdLibVoice*)",
  "MidiDriver_ADLIB::onTimer()",
  "MidiDriver_ADLIB::open()",
  "MidiDriver_ADLIB::partKeyOff(AdLibPart*, unsigned char)",
  "MidiDriver_ADLIB::partKeyOn(AdLibPart*, AdLibInstrument const*, unsigned char, unsigned char, AdLibInstrument const*, unsigned char)",
  "MidiDriver_ADLIB::send(signed char, unsigned int)",
  "MidiDriver_ADLIB::send(unsigned int)",
  "MidiDriver_ADLIB::setPitchBendRange(unsigned char, unsigned int)",
  "MidiDriver_ADLIB::~MidiDriver_ADLIB()",
  "MidiDriver_ADLIB_Multisource::MidiDriver_ADLIB_Multisource(OPL::Config::OplType, int)",
  "MidiDriver_ADLIB_Multisource::allNotesOff(unsigned char, unsigned char)",
  "MidiDriver_ADLIB_Multisource::allSoundOff(unsigned char, unsigned char)",
  "MidiDriver_ADLIB_Multisource::allocateOplChannel(unsigned char, unsigned char, unsigned char)",
  "MidiDriver_ADLIB_Multisource::applyControllerDefaults(unsigned char)",
  "MidiDriver_ADLIB_Multisource::applySourceVolume(unsigned char)",
  "MidiDriver_ADLIB_Multisource::calculateFrequency(unsigned char, unsigned char, unsigned char)",
  "MidiDriver_ADLIB_Multisource::calculateVolume(unsigned char, unsigned char, unsigned char, OplInstrumentDefinition&, unsigned char)",
  "MidiDriver_ADLIB_Multisource::controlChange(unsigned char, unsigned char, unsigned char, unsigned char)",
  "MidiDriver_ADLIB_Multisource::dataEntry(unsigned char, unsigned char, unsigned char, unsigned char)",
  "MidiDriver_ADLIB_Multisource::deinitSource(unsigned char)",
  "MidiDriver_ADLIB_Multisource::detectOplType(OPL::Config::OplType)",
  "MidiDriver_ADLIB_Multisource::expression(unsigned char, unsigned char, unsigned char)",
  "MidiDriver_ADLIB_Multisource::initOpl()",
  "MidiDriver_ADLIB_Multisource::metaEvent(signed char, unsigned char, unsigned char*, unsigned short)",
  "MidiDriver_ADLIB_Multisource::noteOff(unsigned char, unsigned char, unsigned char, unsigned char)",
  "MidiDriver_ADLIB_Multisource::noteOn(unsigned char, unsigned char, unsigned char, unsigned char)",
  "MidiDriver_ADLIB_Multisource::open()",
  "MidiDriver_ADLIB_Multisource::panning(unsigned char, unsigned char, unsigned char)",
  "MidiDriver_ADLIB_Multisource::pitchBend(unsigned char, unsigned char, unsigned char, unsigned char)",
  "MidiDriver_ADLIB_Multisource::recalculateFrequencies(unsigned char, unsigned char)",
  "MidiDriver_ADLIB_Multisource::recalculateVolumes(unsigned char, unsigned char)",
  "MidiDriver_ADLIB_Multisource::resetAllControllers(unsigned char, unsigned char)",
  "MidiDriver_ADLIB_Multisource::send(signed char, unsigned int)",
  "MidiDriver_ADLIB_Multisource::setRhythmMode(bool)",
  "MidiDriver_ADLIB_Multisource::stopAllNotes(unsigned char, unsigned char)",
  "MidiDriver_ADLIB_Multisource::sustain(unsigned char, unsigned char, unsigned char)",
  "MidiDriver_ADLIB_Multisource::sysEx(unsigned char const*, unsigned short)",
  "MidiDriver_ADLIB_Multisource::volume(unsigned char, unsigned char, unsigned char)",
  "MidiDriver_ADLIB_Multisource::writeFrequency(unsigned char, OplInstrumentRhythmType)",
  "MidiDriver_ADLIB_Multisource::writeInstrument(unsigned char, MidiDriver_ADLIB_Multisource::InstrumentInfo)",
  "MidiDriver_ADLIB_Multisource::writeKeyOff(unsigned char, OplInstrumentRhythmType, bool)",
  "MidiDriver_ADLIB_Multisource::writePanning(unsigned char, OplInstrumentRhythmType)",
  "MidiDriver_ADLIB_Multisource::writeRegister(unsigned short, unsigned char, bool)",
  "MidiDriver_ADLIB_Multisource::writeRhythm(bool)",
  "MidiDriver_ADLIB_Multisource::writeVolume(unsigned char, unsigned char, OplInstrumentRhythmType)",
  "MidiDriver_ADLIB_Multisource::~MidiDriver_ADLIB_Multisource()",
  "MidiDriver_BASE::MidiDriver_BASE()",
  "MidiDriver_BASE::metaEvent(signed char, unsigned char, unsigned char*, unsigned short)",
  "MidiDriver_BASE::midiDumpDelta()",
  "MidiDriver_BASE::midiDumpDo(unsigned int)",
  "MidiDriver_BASE::midiDumpFinish()",
  "MidiDriver_BASE::midiDumpInit()",
  "MidiDriver_BASE::midiDumpSysEx(unsigned char const*, unsigned short)",
  "MidiDriver_BASE::midiDumpVarLength(unsigned int const&)",
  "MidiDriver_BASE::send(signed char, unsigned char, unsigned char, unsigned char)",
  "MidiDriver_BASE::send(signed char, unsigned int)",
  "MidiDriver_BASE::send(unsigned char, unsigned char, unsigned char)",
  "MidiDriver_BASE::stopAllNotes(bool)",
  "MidiDriver_BASE::sysExNoDelay(unsigned char const*, unsigned short)",
  "MidiDriver_BASE::~MidiDriver_BASE()",
  "MidiDriver_Casio::MidiDriver_Casio(MusicType)",
  "MidiDriver_Casio::close()",
  "MidiDriver_Casio::getBaseTempo()",
  "MidiDriver_Casio::isRhythmChannel(unsigned char)",
  "MidiDriver_Casio::mapNote(unsigned char, unsigned char)",
  "MidiDriver_Casio::metaEvent(signed char, unsigned char, unsigned char*, unsigned short)",
  "MidiDriver_Casio::noteOff(unsigned char, unsigned char, unsigned char, unsigned char, signed char)",
  "MidiDriver_Casio::noteOn(unsigned char, unsigned char, unsigned char, signed char)",
  "MidiDriver_Casio::open()",
  "MidiDriver_Casio::open(MidiDriver*, MusicType)",
  "MidiDriver_Casio::processEvent(signed char, unsigned int, unsigned char)",
  "MidiDriver_Casio::programChange(unsigned char, unsigned char, signed char)",
  "MidiDriver_Casio::send(signed char, unsigned int)",
  "MidiDriver_Casio::stopAllNotes(bool)",
  "MidiDriver_Casio::timerCallback(void*)",
  "MidiDriver_Casio::~MidiDriver_Casio()",
  "MidiDriver_Emulated::open()",
  "MidiDriver_Emulated::readBuffer(short*, int)",
  "MidiDriver_Emulated::~MidiDriver_Emulated()",
  "MidiDriver_MPU401::MidiDriver_MPU401()",
  "MidiDriver_MPU401::close()",
  "MidiDriver_MPU401::setTimerCallback(void*, void (*)(void*))",
  "MidiDriver_MPU401::~MidiDriver_MPU401()",
  "MidiDriver_MT32::MidiDriver_MT32(Audio::Mixer*)",
  "MidiDriver_MT32::close()",
  "MidiDriver_MT32::generateSamples(short*, int)",
  "MidiDriver_MT32::open()",
  "MidiDriver_MT32::send(unsigned int)",
  "MidiDriver_MT32::setPitchBendRange(unsigned char, unsigned int)",
  "MidiDriver_MT32::sysEx(unsigned char const*, unsigned short)",
  "MidiDriver_MT32::~MidiDriver_MT32()",
  "MidiDriver_MT32GM::MidiDriver_MT32GM(MusicType)",
  "MidiDriver_MT32GM::addActiveNote(unsigned char, unsigned char, signed char)",
  "MidiDriver_MT32GM::allocateChannel()",
  "MidiDriver_MT32GM::allocateSourceChannels(unsigned char, unsigned char)",
  "MidiDriver_MT32GM::applyControllerDefaults(unsigned char, MidiDriver_MT32GM::MidiChannelControlData&, unsigned char, bool)",
  "MidiDriver_MT32GM::applySourceVolume(unsigned char)",
  "MidiDriver_MT32GM::channelAftertouch(unsigned char, unsigned char, signed char, MidiDriver_MT32GM::MidiChannelControlData&, bool)",
  "MidiDriver_MT32GM::clearSysExQueue()",
  "MidiDriver_MT32GM::close()",
  "MidiDriver_MT32GM::controlChange(unsigned char, unsigned char, unsigned char, signed char, MidiDriver_MT32GM::MidiChannelControlData&, bool)",
  "MidiDriver_MT32GM::deinitSource(unsigned char)",
  "MidiDriver_MT32GM::getBaseTempo()",
  "MidiDriver_MT32GM::getPercussionChannel()",
  "MidiDriver_MT32GM::initControlData()",
  "MidiDriver_MT32GM::initGM(bool, bool)",
  "MidiDriver_MT32GM::isReady(signed char)",
  "MidiDriver_MT32GM::mapSourceChannel(unsigned char, unsigned char)",
  "MidiDriver_MT32GM::metaEvent(signed char, unsigned char, unsigned char*, unsigned short)",
  "MidiDriver_MT32GM::noteOnOff(unsigned char, unsigned char, unsigned char, unsigned char, signed char, MidiDriver_MT32GM::MidiChannelControlData&)",
  "MidiDriver_MT32GM::onTimer()",
  "MidiDriver_MT32GM::open()",
  "MidiDriver_MT32GM::open(MidiDriver*, bool)",
  "MidiDriver_MT32GM::pitchBend(unsigned char, unsigned char, unsigned char, signed char, MidiDriver_MT32GM::MidiChannelControlData&, bool)",
  "MidiDriver_MT32GM::polyAftertouch(unsigned char, unsigned char, unsigned char, signed char, MidiDriver_MT32GM::MidiChannelControlData&, bool)",
  "MidiDriver_MT32GM::processEvent(signed char, unsigned int, unsigned char, MidiDriver_MT32GM::MidiChannelControlData&, bool)",
  "MidiDriver_MT32GM::programChange(unsigned char, unsigned char, signed char, MidiDriver_MT32GM::MidiChannelControlData&, bool)",
  "MidiDriver_MT32GM::removeActiveNote(unsigned char, unsigned char, signed char)",
  "MidiDriver_MT32GM::removeActiveNotes(unsigned char, bool)",
  "MidiDriver_MT32GM::send(signed char, unsigned int)",
  "MidiDriver_MT32GM::send(unsigned int)",
  "MidiDriver_MT32GM::stopAllNotes(bool)",
  "MidiDriver_MT32GM::stopAllNotes(unsigned char, unsigned char)",
  "MidiDriver_MT32GM::sysEx(unsigned char const*, unsigned short)",
  "MidiDriver_MT32GM::sysExMT32(unsigned char const*, unsigned short, unsigned int, bool, bool, signed char)",
  "MidiDriver_MT32GM::sysExNoDelay(unsigned char const*, unsigned short)",
  "MidiDriver_MT32GM::sysExQueue(unsigned char const*, unsigned short, signed char)",
  "MidiDriver_MT32GM::~MidiDriver_MT32GM()",
  "MidiDriver_Multisource::MidiDriver_Multisource()",
  "MidiDriver_Multisource::abortFade(MidiDriver_Multisource::FadeAbortType)",
  "MidiDriver_Multisource::abortFade(unsigned char, MidiDriver_Multisource::FadeAbortType)",
  "MidiDriver_Multisource::clearControllerDefault(MidiDriver_Multisource::ControllerDefaultType)",
  "MidiDriver_Multisource::deinitSource(unsigned char)",
  "MidiDriver_Multisource::onTimer()",
  "MidiDriver_Multisource::resetSourceVolume()",
  "MidiDriver_Multisource::resetSourceVolume(unsigned char)",
  "MidiDriver_Multisource::send(unsigned int)",
  "MidiDriver_Multisource::setControllerDefault(MidiDriver_Multisource::ControllerDefaultType)",
  "MidiDriver_Multisource::setControllerDefault(MidiDriver_Multisource::ControllerDefaultType, short)",
  "MidiDriver_Multisource::setControllerDefaults(MidiDriver_Multisource::ControllerDefaultType, short*)",
  "MidiDriver_Multisource::setSourceType(MidiDriver_Multisource::SourceType)",
  "MidiDriver_Multisource::setSourceType(unsigned char, MidiDriver_Multisource::SourceType)",
  "MidiDriver_Multisource::setSourceVolume(unsigned char, unsigned short)",
  "MidiDriver_Multisource::setSourceVolume(unsigned short)",
  "MidiDriver_Multisource::startFade(unsigned char, unsigned short, unsigned short)",
  "MidiDriver_Multisource::startFade(unsigned short, unsigned short)",
  "MidiDriver_Multisource::syncSoundSettings()",
  "MidiDriver_Multisource::updateFading()",
  "MidiDriver_Multisource::~MidiDriver_Multisource()",
  "MidiDriver_NULL::~MidiDriver_NULL()",
  "MidiDriver_NULL_Multisource::close()",
  "MidiDriver_NULL_Multisource::open()",
  "MidiDriver_NULL_Multisource::~MidiDriver_NULL_Multisource()",
  "MidiDriver_SEQ::MidiDriver_SEQ()",
  "MidiDriver_SEQ::close()",
  "MidiDriver_SEQ::open()",
  "MidiDriver_SEQ::send(unsigned int)",
  "MidiDriver_SEQ::sysEx(unsigned char const*, unsigned short)",
  "MidiDriver_SEQ::~MidiDriver_SEQ()",
  "MidiDriver_TIMIDITY::MidiDriver_TIMIDITY()",
  "MidiDriver_TIMIDITY::close()",
  "MidiDriver_TIMIDITY::connect_to_server(char const*, char const*)",
  "MidiDriver_TIMIDITY::open()",
  "MidiDriver_TIMIDITY::send(unsigned int)",
  "MidiDriver_TIMIDITY::sysEx(unsigned char const*, unsigned short)",
  "MidiDriver_TIMIDITY::teardown()",
  "MidiDriver_TIMIDITY::timidity_ctl_command(char const*, ...)",
  "MidiDriver_TIMIDITY::timidity_eot()",
  "MidiDriver_TIMIDITY::timidity_meta_seq(int, int, int)",
  "MidiDriver_TIMIDITY::timidity_sync(int)",
  "MidiDriver_TIMIDITY::timidity_write_data(void const*, unsigned long)",
  "MidiDriver_TIMIDITY::~MidiDriver_TIMIDITY()",
  "MidiParser::allNotesOff()",
  "MidiParser::createParser_QT(signed char)",
  "MidiParser::createParser_SMF(signed char)",
  "MidiParser::createParser_XMIDI(void (*)(unsigned char, void*), void*, int)",
  "MidiParser::defaultXMidiCallback(unsigned char, void*)",
  "MidiParser::hangAllActiveNotes()",
  "MidiParser::hangingNote(unsigned char, unsigned char, unsigned int, bool)",
  "MidiParser::jumpToTick(unsigned int, bool, bool, bool)",
  "MidiParser::onTimer()",
  "MidiParser::pausePlaying()",
  "MidiParser::processEvent(EventInfo const&, bool)",
  "MidiParser::sendMetaEventToDriver(unsigned char, unsigned char*, unsigned short)",
  "MidiParser::sendToDriver(unsigned int)",
  "MidiParser::setTrack(int)",
  "MidiParser::startPlaying()",
  "MidiParser::stopPlaying()",
  "MidiParser::unloadMusic()",
  "MidiParser::~MidiParser()",
  "MidiParser_QT::MIDISampleDesc::~MIDISampleDesc()",
  "MidiParser_QT::MidiParser_QT(signed char)",
  "MidiParser_QT::deallocateFreeChannel()",
  "MidiParser_QT::definePart(unsigned int, unsigned int)",
  "MidiParser_QT::findFreeChannel(unsigned int)",
  "MidiParser_QT::getChannel(unsigned int)",
  "MidiParser_QT::handleControllerEvent(unsigned int, unsigned int, unsigned char, unsigned char)",
  "MidiParser_QT::handleGeneralEvent(unsigned int)",
  "MidiParser_QT::handleNoteEvent(unsigned int, unsigned char, unsigned char, unsigned int)",
  "MidiParser_QT::initCommon()",
  "MidiParser_QT::initFromContainerTracks()",
  "MidiParser_QT::loadFromContainerFile(Common::String const&)",
  "MidiParser_QT::loadFromContainerStream(Common::SeekableReadStream*, DisposeAfterUse::Flag)",
  "MidiParser_QT::loadFromTune(Common::SeekableReadStream*, DisposeAfterUse::Flag)",
  "MidiParser_QT::loadMusic(unsigned char*, unsigned int)",
  "MidiParser_QT::parseNextEvent(EventInfo&)",
  "MidiParser_QT::readNextEvent()",
  "MidiParser_QT::readSampleDesc(Common::QuickTimeParser::Track*, unsigned int, unsigned int)",
  "MidiParser_QT::readWholeTrack(Common::QuickTimeParser::Track*, unsigned int&)",
  "MidiParser_QT::resetTracking()",
  "MidiParser_QT::sendMetaEventToDriver(unsigned char, unsigned char*, unsigned short)",
  "MidiParser_QT::sendToDriver(unsigned int)",
  "MidiParser_QT::setupPart(unsigned int)",
  "MidiParser_QT::unloadMusic()",
  "MidiParser_QT::~MidiParser_QT()",
  "MidiParser_SMF::compressToType0(unsigned char**, unsigned char, unsigned char*, bool)",
  "MidiParser_SMF::determineDataSize(Common::SeekableReadStream*)",
  "MidiParser_SMF::loadMusic(unsigned char*, unsigned int)",
  "MidiParser_SMF::parseNextEvent(EventInfo&)",
  "MidiParser_SMF::~MidiParser_SMF()",
  "MidiParser_XMIDI::determineDataSize(Common::SeekableReadStream*)",
  "MidiParser_XMIDI::jumpToIndex(unsigned char, bool)",
  "MidiParser_XMIDI::loadMusic(unsigned char*, unsigned int)",
  "MidiParser_XMIDI::onTrackStart(unsigned char)",
  "MidiParser_XMIDI::parseNextEvent(EventInfo&)",
  "MidiParser_XMIDI::setMidiDriver(MidiDriver_BASE*)",
  "MidiParser_XMIDI::~MidiParser_XMIDI()",
  "MixerManager::~MixerManager()",
  "ModularGraphicsBackend::beginGFXTransaction()virtual thunk to ModularGraphicsBackend::getScreenChangeID() const",
  "ModularGraphicsBackend::clearFocusRectangle()",
  "ModularGraphicsBackend::clearOverlay()",
  "ModularGraphicsBackend::copyRectToOverlay(void const*, int, int, int, int, int)",
  "ModularGraphicsBackend::displayActivityIconOnOSD(Graphics::Surface const*)",
  "ModularGraphicsBackend::displayMessageOnOSD(Common::U32String const&)",
  "ModularGraphicsBackend::fillScreen(unsigned int)",
  "ModularGraphicsBackend::getDefaultGraphicsMode() const",
  "ModularGraphicsBackend::getDefaultScaler() const",
  "ModularGraphicsBackend::getFeatureState(OSystem::Feature)",
  "ModularGraphicsBackend::getFeatureState(OSystem::Feature)virtual thunk to ModularGraphicsBackend::getFeatureState(OSystem::Feature)",
  "ModularGraphicsBackend::getGraphicsMode() const",
  "ModularGraphicsBackend::getHeight()",
  "ModularGraphicsBackend::getHiDPIScreenFactor() const",
  "ModularGraphicsBackend::getOverlayFormat() const",
  "ModularGraphicsBackend::getOverlayHeight()",
  "ModularGraphicsBackend::getOverlayWidth()",
  "ModularGraphicsBackend::getScaleFactor() const",
  "ModularGraphicsBackend::getScaler() const",
  "ModularGraphicsBackend::getScreenFormat() constModularGraphicsBackend::getDefaultStretchMode() const",
  "ModularGraphicsBackend::getSupportedFormats() const",
  "ModularGraphicsBackend::getSupportedGraphicsModes() const",
  "ModularGraphicsBackend::getSupportedStretchModes() const",
  "ModularGraphicsBackend::getWidth()",
  "ModularGraphicsBackend::grabOverlay(Graphics::Surface&)",
  "ModularGraphicsBackend::hasFeature(OSystem::Feature)",
  "ModularGraphicsBackend::hideOverlay()",
  "ModularGraphicsBackend::initSize(unsigned int, unsigned int, Graphics::PixelFormat const*)",
  "ModularGraphicsBackend::initSizeHint(Common::Array<Graphics::Mode> const&)",
  "ModularGraphicsBackend::isOverlayVisible() const",
  "ModularGraphicsBackend::lockMouse(bool)",
  "ModularGraphicsBackend::lockScreen()virtual thunk to ModularGraphicsBackend::unlockScreen()",
  "ModularGraphicsBackend::saveScreenshot()",
  "ModularGraphicsBackend::setCursorPalette(unsigned char const*, unsigned int, unsigned int)",
  "ModularGraphicsBackend::setFeatureState(OSystem::Feature, bool)",
  "ModularGraphicsBackend::setFocusRectangle(Common::Rect const&)",
  "ModularGraphicsBackend::setMouseCursor(void const*, unsigned int, unsigned int, int, int, unsigned int, bool, Graphics::PixelFormat const*)",
  "ModularGraphicsBackend::setShader(Common::String const&)",
  "ModularGraphicsBackend::setStretchMode(int)",
  "ModularGraphicsBackend::showMouse(bool)",
  "ModularGraphicsBackend::showOverlay(bool)",
  "ModularGraphicsBackend::unlockScreen()",
  "ModularGraphicsBackend::updateScreen()",
  "ModularGraphicsBackend::warpMouse(int, int)",
  "ModularGraphicsBackend::~ModularGraphicsBackend()virtual thunk to ModularGraphicsBackend::setFeatureState(OSystem::Feature, bool)",
  "ModularMixerBackend::getMixer()",
  "ModularMixerBackend::~ModularMixerBackend()",
  "Modules::ModXmS3mStream::ModXmS3mStream(Common::SeekableReadStream*, int, int, int)",
  "Modules::ModXmS3mStream::calculateDuration()",
  "Modules::ModXmS3mStream::readBuffer(short*, int)",
  "Modules::ModXmS3mStream::rewind()",
  "Modules::ModXmS3mStream::seek(int)",
  "Modules::ModXmS3mStream::setSequencePos(int)",
  "Modules::Module::load(Common::SeekableReadStream&, int)",
  "Modules::ModuleModXmS3m::SamplePingPong(Modules::Sample&)",
  "Modules::ModuleModXmS3m::load(Common::SeekableReadStream&)",
  "Modules::ModuleModXmS3m::loadAmf(Common::SeekableReadStream&)",
  "Modules::ModuleModXmS3m::loadMod(Common::SeekableReadStream&)",
  "Modules::ModuleModXmS3m::loadS3m(Common::SeekableReadStream&)",
  "Modules::ModuleModXmS3m::loadXm(Common::SeekableReadStream&)",
  "Modules::ModuleModXmS3m::readSampleSint16LE(Common::SeekableReadStream&, int, short*)",
  "Modules::ModuleModXmS3m::readSampleSint8(Common::SeekableReadStream&, int, short*)",
  "Modules::ProtrackerStream::ProtrackerStream(Common::SeekableReadStream*, int, int, bool)",
  "Modules::ProtrackerStream::ProtrackerStream(int, bool)",
  "Modules::ProtrackerStream::interrupt()",
  "Modules::ProtrackerStream::updateRow()",
  "Modules::ProtrackerStream::~ProtrackerStream()",
  "Mohawk::MohawkMetaEngine_Myst::registerDefaultSettings()",
  "Mohawk::MohawkMetaEngine_Riven::registerDefaultSettings()",
  "MohawkMetaEngineDetection::fallbackDetect(Common::HashMap<Common::String, Common::FSNode, Common::IgnoreCase_Hash, Common::IgnoreCase_EqualTo> const&, Common::FSList const&, ADDetectedGameExtraInfo**) const",
  "MohawkMetaEngineDetection::toDetectedGame(ADDetectedGame const&, ADDetectedGameExtraInfo*) const",
  "MohawkMetaEngineDetection::~MohawkMetaEngineDetection()",
  "MortevielleMetaEngineDetection::~MortevielleMetaEngineDetection()",
  "MusicDevice::MusicDevice(MusicPluginObject const*, Common::String, MusicType)",
  "MusicDevice::getCompleteId()",
  "MusicDevice::getCompleteName()",
  "MusicDevice::getHandle()",
  "MusicManager::getPlugins() const",
  "MutationOfJBMetaEngineDetection::~MutationOfJBMetaEngineDetection()",
  "Myst3::Myst3MetaEngineDetection::~Myst3MetaEngineDetection()",
  "NGIMetaEngineDetection::~NGIMetaEngineDetection()",
  "NancyMetaEngineDetection::~NancyMetaEngineDetection()",
  "NeverhoodMetaEngineDetection::~NeverhoodMetaEngineDetection()",
  "NormalPlugin::NormalPlugin()",
  "NormalPlugin::createInstance(Graphics::PixelFormat const&) const",
  "NormalScaler::decreaseFactor()",
  "NormalScaler::increaseFactor()",
  "NullMusicPlugin::createInstance(MidiDriver**, unsigned int) const",
  "NullMusicPlugin::getDevices() const",
  "OPL::Config::create(OPL::Config::OplType)",
  "OPL::Config::create(signed char, OPL::Config::OplType)",
  "OPL::Config::detect(OPL::Config::OplType)",
  "OPL::DOSBox::Chip::read()",
  "OPL::DOSBox::Chip::write(unsigned int, unsigned char)",
  "OPL::DOSBox::DBOPL::Channel* OPL::DOSBox::DBOPL::Channel::BlockTemplate<(OPL::DOSBox::DBOPL::SynthMode)10>(OPL::DOSBox::DBOPL::Chip*, unsigned int, int*)",
  "OPL::DOSBox::DBOPL::Channel* OPL::DOSBox::DBOPL::Channel::BlockTemplate<(OPL::DOSBox::DBOPL::SynthMode)11>(OPL::DOSBox::DBOPL::Chip*, unsigned int, int*)",
  "OPL::DOSBox::DBOPL::Channel* OPL::DOSBox::DBOPL::Channel::BlockTemplate<(OPL::DOSBox::DBOPL::SynthMode)1>(OPL::DOSBox::DBOPL::Chip*, unsigned int, int*)",
  "OPL::DOSBox::DBOPL::Channel* OPL::DOSBox::DBOPL::Channel::BlockTemplate<(OPL::DOSBox::DBOPL::SynthMode)2>(OPL::DOSBox::DBOPL::Chip*, unsigned int, int*)",
  "OPL::DOSBox::DBOPL::Channel* OPL::DOSBox::DBOPL::Channel::BlockTemplate<(OPL::DOSBox::DBOPL::SynthMode)3>(OPL::DOSBox::DBOPL::Chip*, unsigned int, int*)",
  "OPL::DOSBox::DBOPL::Channel* OPL::DOSBox::DBOPL::Channel::BlockTemplate<(OPL::DOSBox::DBOPL::SynthMode)5>(OPL::DOSBox::DBOPL::Chip*, unsigned int, int*)",
  "OPL::DOSBox::DBOPL::Channel* OPL::DOSBox::DBOPL::Channel::BlockTemplate<(OPL::DOSBox::DBOPL::SynthMode)6>(OPL::DOSBox::DBOPL::Chip*, unsigned int, int*)",
  "OPL::DOSBox::DBOPL::Channel* OPL::DOSBox::DBOPL::Channel::BlockTemplate<(OPL::DOSBox::DBOPL::SynthMode)7>(OPL::DOSBox::DBOPL::Chip*, unsigned int, int*)",
  "OPL::DOSBox::DBOPL::Channel* OPL::DOSBox::DBOPL::Channel::BlockTemplate<(OPL::DOSBox::DBOPL::SynthMode)8>(OPL::DOSBox::DBOPL::Chip*, unsigned int, int*)",
  "OPL::DOSBox::DBOPL::Chip::GenerateBlock2(unsigned int, int*)",
  "OPL::DOSBox::DBOPL::Chip::GenerateBlock3(unsigned int, int*)",
  "OPL::DOSBox::OPL::OPL(OPL::Config::OplType)",
  "OPL::DOSBox::OPL::dualWrite(unsigned char, unsigned char, unsigned char)",
  "OPL::DOSBox::OPL::generateSamples(short*, int)",
  "OPL::DOSBox::OPL::init()",
  "OPL::DOSBox::OPL::read(int)",
  "OPL::DOSBox::OPL::reset()",
  "OPL::DOSBox::OPL::write(int, int)",
  "OPL::DOSBox::OPL::~OPL()",
  "OPL::EmulatedOPL::EmulatedOPL()",
  "OPL::EmulatedOPL::getRate() const",
  "OPL::EmulatedOPL::readBuffer(short*, int)",
  "OPL::EmulatedOPL::setCallbackFrequency(int)OPL::EmulatedOPL::startCallbacks(int)",
  "OPL::EmulatedOPL::stopCallbacks()",
  "OPL::EmulatedOPL::~EmulatedOPL()",
  "OPL::MAME::OPL::init()",
  "OPL::MAME::OPL::read(int)",
  "OPL::MAME::OPL::reset()",
  "OPL::MAME::OPL::write(int, int)",
  "OPL::MAME::OPL::writeReg(int, int)",
  "OPL::MAME::OPL::~OPL()",
  "OPL::MAME::OPLCreate(int, int, int)",
  "OPL::MAME::OPLRead(OPL::MAME::fm_opl_f*, int)",
  "OPL::MAME::OPLResetChip(OPL::MAME::fm_opl_f*)",
  "OPL::MAME::OPLTimerOver(OPL::MAME::fm_opl_f*, int)",
  "OPL::MAME::OPLWrite(OPL::MAME::fm_opl_f*, int, int)",
  "OPL::MAME::OPLWriteReg(OPL::MAME::fm_opl_f*, int, int)",
  "OPL::MAME::OPL_STATUSMASK_SET(OPL::MAME::fm_opl_f*, int)",
  "OPL::MAME::OPL_STATUS_RESET(OPL::MAME::fm_opl_f*, int)",
  "OPL::MAME::makeAdLibOPL(int)",
  "OPL::NUKED::OPL3_Generate(OPL::NUKED::_opl3_chip*, short*)",
  "OPL::NUKED::OPL3_GenerateResampled(OPL::NUKED::_opl3_chip*, short*)",
  "OPL::NUKED::OPL3_GenerateStream(OPL::NUKED::_opl3_chip*, short*, unsigned int)",
  "OPL::NUKED::OPL::OPL(OPL::Config::OplType)",
  "OPL::NUKED::OPL::generateSamples(short*, int)",
  "OPL::NUKED::OPL::init()",
  "OPL::NUKED::OPL::~OPL()",
  "OPL::OPL::OPL()",
  "OPL::OPL::start(Common::Functor0<void>*, int)",
  "OPL::OPL::stop()",
  "OPL::OPL::~OPL()",
  "OPL::RealOPL::RealOPL()",
  "OPL::RealOPL::onTimer()",
  "OPL::RealOPL::setCallbackFrequency(int)",
  "OPL::RealOPL::startCallbacks(int)",
  "OPL::RealOPL::stopCallbacks()",
  "OPL::RealOPL::timerProc(void*)",
  "OPL::RealOPL::~RealOPL()",
  "OSystem::createConfigReadStream()",
  "OSystem::createConfigWriteStream()",
  "OSystem::destroy()",
  "OSystem::fatalError()",
  "OSystem::getDefaultConfigFileName()",
  "OSystem::getSystemLanguage() const",
  "OSystem::getTextFromClipboard()",
  "OSystem::initBackend()",
  "OSystem::isConnectionLimited()",
  "OSystem::setGraphicsMode(char const*)",
  "OSystem::setStretchMode(char const*)",
  "OSystem::setTextInClipboard(Common::U32String const&)",
  "OSystem_Emscripten::getFeatureState(OSystem::Feature)",
  "OSystem_Emscripten::hasFeature(OSystem::Feature)",
  "OSystem_Emscripten::setFeatureState(OSystem::Feature, bool)",
  "OSystem_Emscripten::~OSystem_Emscripten()",
  "OSystem_POSIX::addSysArchivesToSearchSet(Common::SearchSet&, int)",
  "OSystem_POSIX::createAudioCDManager()",
  "OSystem_POSIX::getDefaultConfigFileName()",
  "OSystem_POSIX::getDefaultIconsPath()",
  "OSystem_POSIX::getDefaultLogFileName()",
  "OSystem_POSIX::getScreenshotsPath()",
  "OSystem_POSIX::getXdgUserDir(char const*)",
  "OSystem_POSIX::hasFeature(OSystem::Feature)",
  "OSystem_POSIX::init()",
  "OSystem_POSIX::initBackend()",
  "OSystem_POSIX::~OSystem_POSIX()",
  "OSystem_SDL::addSysArchivesToSearchSet(Common::SearchSet&, int)",
  "OSystem_SDL::createAudioCDManager()",
  "OSystem_SDL::createLogFile()",
  "OSystem_SDL::createMutex()",
  "OSystem_SDL::delayMillis(unsigned int)",
  "OSystem_SDL::detectAntiAliasingSupport()",
  "OSystem_SDL::engineDone()",
  "OSystem_SDL::engineInit()",
  "OSystem_SDL::fatalError()",
  "OSystem_SDL::getDefaultGraphicsMode() const",
  "OSystem_SDL::getDefaultIconsPath()",
  "OSystem_SDL::getGlobalKeymaps()",
  "OSystem_SDL::getGraphicsMode() const",
  "OSystem_SDL::getHardwareInputSet()",
  "OSystem_SDL::getOpenGLProcAddress(char const*) const",
  "OSystem_SDL::getScreenshotsPath()",
  "OSystem_SDL::getSupportedAntiAliasingLevels() const",
  "OSystem_SDL::getSupportedGraphicsModes() const",
  "OSystem_SDL::getSystemLanguage() const",
  "OSystem_SDL::getTextFromClipboard()",
  "OSystem_SDL::hasFeature(OSystem::Feature)",
  "OSystem_SDL::hasTextInClipboard()",
  "OSystem_SDL::init()",
  "OSystem_SDL::initBackend()",
  "OSystem_SDL::initSDL()",
  "OSystem_SDL::logMessage(LogMessageType::Type, char const*)",
  "OSystem_SDL::openUrl(Common::String const&)",
  "OSystem_SDL::quit()",
  "OSystem_SDL::setGraphicsMode(int, unsigned int)",
  "OSystem_SDL::setTextInClipboard(Common::U32String const&)",
  "OSystem_SDL::setWindowCaption(Common::U32String const&)",
  "OSystem_SDL::setupGraphicsModes()",
  "OSystem_SDL::~OSystem_SDL()",
  "OSystem_SDL::~OSystem_SDL().2",
  "OpenGL::Backbuffer::activateInternal()",
  "OpenGL::Backbuffer::setDimensions(unsigned int, unsigned int)",
  "OpenGL::CLUT8LookUpPipeline::CLUT8LookUpPipeline()",
  "OpenGL::CLUT8LookUpPipeline::drawTextureInternal(OpenGL::GLTexture const&, float const*, float const*)",
  "OpenGL::CLUT8LookUpPipeline::~CLUT8LookUpPipeline()",
  "OpenGL::Context::getGLSLVersion() const",
  "OpenGL::Context::initialize(OpenGL::ContextType)",
  "OpenGL::FakePipeline::~FakePipeline()",
  "OpenGL::FakeTexture::FakeTexture(unsigned int, unsigned int, unsigned int, Graphics::PixelFormat const&, Graphics::PixelFormat const&)",
  "OpenGL::FakeTexture::allocate(unsigned int, unsigned int)",
  "OpenGL::FakeTexture::updateGLTexture()",
  "OpenGL::FakeTexture::~FakeTexture()",
  "OpenGL::FrameBuffer::FrameBuffer(unsigned int, unsigned int)",
  "OpenGL::FrameBuffer::FrameBuffer(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int)",
  "OpenGL::FrameBuffer::attach()",
  "OpenGL::FrameBuffer::detach()",
  "OpenGL::FrameBuffer::init()",
  "OpenGL::FrameBuffer::~FrameBuffer()",
  "OpenGL::Framebuffer::activate(OpenGL::Pipeline*)",
  "OpenGL::Framebuffer::applyBlendState()",
  "OpenGL::Framebuffer::applyClearColor()",
  "OpenGL::Framebuffer::applyScissorBox()",
  "OpenGL::Framebuffer::applyScissorTestState()",
  "OpenGL::Framebuffer::applyViewport()",
  "OpenGL::Framebuffer::copyRenderStateFrom(OpenGL::Framebuffer const&, unsigned int)",
  "OpenGL::Framebuffer::deactivate()",
  "OpenGL::Framebuffer::enableBlend(OpenGL::Framebuffer::BlendMode)",
  "OpenGL::Framebuffer::enableScissorTest(bool)",
  "OpenGL::Framebuffer::setScissorBox(int, int, int, int)",
  "OpenGL::GLTexture::GLTexture(unsigned int, unsigned int, unsigned int)",
  "OpenGL::GLTexture::bind() const",
  "OpenGL::GLTexture::create()",
  "OpenGL::GLTexture::enableLinearFiltering(bool)",
  "OpenGL::GLTexture::setSize(unsigned int, unsigned int)",
  "OpenGL::GLTexture::setWrapMode(OpenGL::WrapMode)",
  "OpenGL::GLTexture::~GLTexture()",
  "OpenGL::LibRetro::PresetParser::PresetParser()",
  "OpenGL::LibRetro::PresetParser::computeDefaultScale(Common::String const&, float*, unsigned int*, OpenGL::LibRetro::ScaleType)",
  "OpenGL::LibRetro::PresetParser::lookUpValue(Common::String const&, Common::String*)",
  "OpenGL::LibRetro::PresetParser::lookUpValue(Common::String const&, OpenGL::LibRetro::FilteringMode*, OpenGL::LibRetro::FilteringMode)",
  "OpenGL::LibRetro::PresetParser::lookUpValue(Common::String const&, OpenGL::LibRetro::ScaleType*, OpenGL::LibRetro::ScaleType)",
  "OpenGL::LibRetro::PresetParser::lookUpValue(Common::String const&, OpenGL::WrapMode*, OpenGL::WrapMode)",
  "OpenGL::LibRetro::PresetParser::lookUpValue(Common::String const&, bool*)",
  "OpenGL::LibRetro::PresetParser::lookUpValue(Common::String const&, float*)",
  "OpenGL::LibRetro::PresetParser::lookUpValue(Common::String const&, unsigned int*)",
  "OpenGL::LibRetro::PresetParser::lookUpValueScale(Common::String const&, float*, unsigned int*, OpenGL::LibRetro::ScaleType)",
  "OpenGL::LibRetro::PresetParser::parseParameters()",
  "OpenGL::LibRetro::PresetParser::parsePass(unsigned int, bool)",
  "OpenGL::LibRetro::PresetParser::parsePassScale(unsigned int, OpenGL::LibRetro::ShaderPass*)",
  "OpenGL::LibRetro::PresetParser::parsePassScaleType(unsigned int, bool, OpenGL::LibRetro::ShaderPass*)",
  "OpenGL::LibRetro::PresetParser::parsePasses()",
  "OpenGL::LibRetro::PresetParser::parsePreset(Common::SeekableReadStream&)",
  "OpenGL::LibRetro::PresetParser::parseStream(Common::SeekableReadStream&)",
  "OpenGL::LibRetro::PresetParser::parseTexture(Common::String const&)",
  "OpenGL::LibRetro::PresetParser::parseTextures()",
  "OpenGL::LibRetro::PresetParser::~PresetParser()",
  "OpenGL::LibRetro::ShaderPreset::~ShaderPreset()",
  "OpenGL::LibRetro::parsePreset(Common::FSNode const&)",
  "OpenGL::LibRetroPipeline::LibRetroPipeline()",
  "OpenGL::LibRetroPipeline::LibRetroPipeline(Common::FSNode const&)",
  "OpenGL::LibRetroPipeline::Pass* Common::copy<OpenGL::LibRetroPipeline::Pass const*, OpenGL::LibRetroPipeline::Pass*>(OpenGL::LibRetroPipeline::Pass const*, OpenGL::LibRetroPipeline::Pass const*, OpenGL::LibRetroPipeline::Pass*)",
  "OpenGL::LibRetroPipeline::Pass* Common::copy_backward<OpenGL::LibRetroPipeline::Pass*, OpenGL::LibRetroPipeline::Pass*>(OpenGL::LibRetroPipeline::Pass*, OpenGL::LibRetroPipeline::Pass*, OpenGL::LibRetroPipeline::Pass*)",
  "OpenGL::LibRetroPipeline::Pass::Pass(OpenGL::LibRetroPipeline::Pass const&)",
  "OpenGL::LibRetroPipeline::Pass::addTexCoord(Common::String const&, OpenGL::LibRetroPipeline::Pass::TexCoordAttribute::Type, unsigned int)",
  "OpenGL::LibRetroPipeline::Pass::addTexSampler(Common::String const&, unsigned int*, OpenGL::LibRetroPipeline::Pass::TextureSampler::Type, unsigned int, bool)",
  "OpenGL::LibRetroPipeline::Pass::buildTexCoords(unsigned int, Common::Array<Common::String> const&)",
  "OpenGL::LibRetroPipeline::Pass::buildTexSamplers(unsigned int, Common::Array<OpenGL::LibRetroPipeline::Texture> const&, Common::Array<Common::String> const&)",
  "OpenGL::LibRetroPipeline::activateInternal()",
  "OpenGL::LibRetroPipeline::beginScaling()",
  "OpenGL::LibRetroPipeline::close()",
  "OpenGL::LibRetroPipeline::drawTextureInternal(OpenGL::GLTexture const&, float const*, float const*)",
  "OpenGL::LibRetroPipeline::finishScaling()",
  "OpenGL::LibRetroPipeline::isSupportedByContext()",
  "OpenGL::LibRetroPipeline::loadPasses()",
  "OpenGL::LibRetroPipeline::loadTexture(Common::FSNode const&)",
  "OpenGL::LibRetroPipeline::loadTextures()",
  "OpenGL::LibRetroPipeline::open(Common::FSNode const&)",
  "OpenGL::LibRetroPipeline::renderPass(OpenGL::LibRetroPipeline::Pass const&)",
  "OpenGL::LibRetroPipeline::renderPassSetupCoordinates(OpenGL::LibRetroPipeline::Pass const&)",
  "OpenGL::LibRetroPipeline::renderPassSetupTextures(OpenGL::LibRetroPipeline::Pass const&)",
  "OpenGL::LibRetroPipeline::setDisplaySizes(unsigned int, unsigned int, Common::Rect const&)",
  "OpenGL::LibRetroPipeline::setPipelineState()",
  "OpenGL::LibRetroPipeline::setShaderTexUniforms(Common::String const&, OpenGL::Shader*, OpenGL::GLTexture const&)",
  "OpenGL::LibRetroPipeline::setupFBOs()",
  "OpenGL::LibRetroPipeline::setupPassUniforms(unsigned int)",
  "OpenGL::LibRetroPipeline::~LibRetroPipeline()",
  "OpenGL::LibRetroTextureTarget::setScaledSize(unsigned int, unsigned int, Common::Rect const&)",
  "OpenGL::LibRetroTextureTarget::~LibRetroTextureTarget()",
  "OpenGL::OpenGLGraphicsManager::OpenGLGraphicsManager()",
  "OpenGL::OpenGLGraphicsManager::beginGFXTransaction()",
  "OpenGL::OpenGLGraphicsManager::clearOverlay()",
  "OpenGL::OpenGLGraphicsManager::copyRectToOverlay(void const*, int, int, int, int, int)",
  "OpenGL::OpenGLGraphicsManager::copyRectToScreen(void const*, int, int, int, int, int)",
  "OpenGL::OpenGLGraphicsManager::createSurface(Graphics::PixelFormat const&, bool, bool)",
  "OpenGL::OpenGLGraphicsManager::displayActivityIconOnOSD(Graphics::Surface const*)",
  "OpenGL::OpenGLGraphicsManager::displayMessageOnOSD(Common::U32String const&)",
  "OpenGL::OpenGLGraphicsManager::endGFXTransaction()",
  "OpenGL::OpenGLGraphicsManager::fillScreen(unsigned int)",
  "OpenGL::OpenGLGraphicsManager::getDefaultScaler() const",
  "OpenGL::OpenGLGraphicsManager::getFontOSD() const",
  "OpenGL::OpenGLGraphicsManager::getGLPixelFormat(Graphics::PixelFormat const&, unsigned int&, unsigned int&, unsigned int&) const",
  "OpenGL::OpenGLGraphicsManager::getOverlayWidth() const",
  "OpenGL::OpenGLGraphicsManager::getSupportedFormats() const",
  "OpenGL::OpenGLGraphicsManager::grabOverlay(Graphics::Surface&) const",
  "OpenGL::OpenGLGraphicsManager::grabPalette(unsigned char*, unsigned int, unsigned int) const",
  "OpenGL::OpenGLGraphicsManager::handleResizeImpl(int, int)",
  "OpenGL::OpenGLGraphicsManager::hasFeature(OSystem::Feature) const",
  "OpenGL::OpenGLGraphicsManager::loadShader(Common::String const&)",
  "OpenGL::OpenGLGraphicsManager::lockScreen()",
  "OpenGL::OpenGLGraphicsManager::notifyContextCreate(OpenGL::ContextType, Graphics::PixelFormat const&, Graphics::PixelFormat const&)OpenGL::OpenGLGraphicsManager::gameNeedsAspectRatioCorrection() const",
  "OpenGL::OpenGLGraphicsManager::notifyContextDestroy()",
  "OpenGL::OpenGLGraphicsManager::osdMessageUpdateSurface()",
  "OpenGL::OpenGLGraphicsManager::recalculateCursorScaling()",
  "OpenGL::OpenGLGraphicsManager::recalculateDisplayAreas()",
  "OpenGL::OpenGLGraphicsManager::saveScreenshot(Common::String const&) const",
  "OpenGL::OpenGLGraphicsManager::setCursorPalette(unsigned char const*, unsigned int, unsigned int)",
  "OpenGL::OpenGLGraphicsManager::setFeatureState(OSystem::Feature, bool)",
  "OpenGL::OpenGLGraphicsManager::setGraphicsMode(int, unsigned int)",
  "OpenGL::OpenGLGraphicsManager::setMouseCursor(void const*, unsigned int, unsigned int, int, int, unsigned int, bool, Graphics::PixelFormat const*)",
  "OpenGL::OpenGLGraphicsManager::setPalette(unsigned char const*, unsigned int, unsigned int)",
  "OpenGL::OpenGLGraphicsManager::setScaler(unsigned int, int)",
  "OpenGL::OpenGLGraphicsManager::setShader(Common::String const&)",
  "OpenGL::OpenGLGraphicsManager::setStretchMode(int)",
  "OpenGL::OpenGLGraphicsManager::updateCursorPalette()",
  "OpenGL::OpenGLGraphicsManager::updateLinearFiltering()",
  "OpenGL::OpenGLGraphicsManager::updateScreen()",
  "OpenGL::OpenGLGraphicsManager::~OpenGLGraphicsManager()",
  "OpenGL::Pipeline::activate()",
  "OpenGL::Pipeline::activateInternal()",
  "OpenGL::Pipeline::deactivate()",
  "OpenGL::Pipeline::deactivateInternal()",
  "OpenGL::Pipeline::setFramebuffer(OpenGL::Framebuffer*)",
  "OpenGL::Pipeline::~Pipeline()",
  "OpenGL::ScaledTexture::ScaledTexture(unsigned int, unsigned int, unsigned int, Graphics::PixelFormat const&, Graphics::PixelFormat const&)",
  "OpenGL::ScaledTexture::allocate(unsigned int, unsigned int)",
  "OpenGL::ScaledTexture::setScaler(unsigned int, int)",
  "OpenGL::ScaledTexture::~ScaledTexture()",
  "OpenGL::Shader::Shader(OpenGL::Shader const&)",
  "OpenGL::Shader::addAttribute(char const*)",
  "OpenGL::Shader::createBuffer(unsigned int, long, void const*, unsigned int)",
  "OpenGL::Shader::createCompatShader(char const*, unsigned int, Common::String const&, int)",
  "OpenGL::Shader::createDirectShader(unsigned long, char const* const*, unsigned int, Common::String const&)",
  "OpenGL::Shader::disableVertexAttribute(char const*, int, float const*)",
  "OpenGL::Shader::enableVertexAttribute(char const*, int, unsigned int, unsigned char, int, void const*)",
  "OpenGL::Shader::enableVertexAttribute(char const*, unsigned int, int, unsigned int, unsigned char, int, unsigned int)",
  "OpenGL::Shader::freeBuffer(unsigned int)",
  "OpenGL::Shader::fromFiles(char const*, char const*, char const* const*, int)",
  "OpenGL::Shader::fromStrings(Common::String const&, char const*, char const*, char const* const*, int)",
  "OpenGL::Shader::getAttribute(char const*)",
  "OpenGL::Shader::getUniformLocation(Common::String const&) const",
  "OpenGL::Shader::loadFromFiles(char const*, char const*, char const* const*, int)",
  "OpenGL::Shader::loadFromStrings(Common::String const&, char const*, char const*, char const* const*, int)",
  "OpenGL::Shader::loadFromStringsArray(Common::String const&, unsigned long, char const* const*, unsigned long, char const* const*, char const* const*)",
  "OpenGL::Shader::loadShader(Common::String const&, unsigned int, unsigned int, char const* const*)",
  "OpenGL::Shader::loadShaderFromFile(char const*, char const*, unsigned int, int)",
  "OpenGL::Shader::unbind()",
  "OpenGL::Shader::~Shader()",
  "OpenGL::ShaderManager::notifyCreate()",
  "OpenGL::ShaderManager::notifyDestroy()",
  "OpenGL::ShaderManager::query(OpenGL::ShaderManager::ShaderUsage) const",
  "OpenGL::ShaderManager::~ShaderManager()",
  "OpenGL::ShaderPipeline::ShaderPipeline(OpenGL::Shader*)",
  "OpenGL::ShaderPipeline::activateInternal()",
  "OpenGL::ShaderPipeline::deactivateInternal()",
  "OpenGL::ShaderPipeline::drawTextureInternal(OpenGL::GLTexture const&, float const*, float const*)",
  "OpenGL::ShaderPipeline::setProjectionMatrix(Math::Matrix<4, 4> const&)",
  "OpenGL::ShaderPipeline::~ShaderPipeline()",
  "OpenGL::ShaderSurfaceRenderer::ShaderSurfaceRenderer()",
  "OpenGL::ShaderSurfaceRenderer::prepareState()",
  "OpenGL::ShaderSurfaceRenderer::render(OpenGL::TextureGL const*, Math::Rect2d const&)",
  "OpenGL::ShaderSurfaceRenderer::restorePreviousState()",
  "OpenGL::ShaderSurfaceRenderer::~ShaderSurfaceRenderer()",
  "OpenGL::Surface::copyRectToTexture(unsigned int, unsigned int, unsigned int, unsigned int, void const*, unsigned int)",
  "OpenGL::Surface::fill(unsigned int)",
  "OpenGL::SurfaceRenderer::enableAlphaBlending(bool)",
  "OpenGL::Texture::Texture(unsigned int, unsigned int, unsigned int, Graphics::PixelFormat const&)",
  "OpenGL::Texture::allocate(unsigned int, unsigned int)",
  "OpenGL::Texture::destroy()",
  "OpenGL::Texture::enableLinearFiltering(bool)",
  "OpenGL::Texture::recreate()",
  "OpenGL::Texture::updateGLTexture()",
  "OpenGL::Texture::updateGLTexture(Common::Rect&)",
  "OpenGL::Texture::~Texture()",
  "OpenGL::TextureCLUT8GPU::TextureCLUT8GPU()",
  "OpenGL::TextureCLUT8GPU::allocate(unsigned int, unsigned int)",
  "OpenGL::TextureCLUT8GPU::destroy()",
  "OpenGL::TextureCLUT8GPU::enableLinearFiltering(bool)",
  "OpenGL::TextureCLUT8GPU::isSupportedByContext()",
  "OpenGL::TextureCLUT8GPU::lookUpColors()",
  "OpenGL::TextureCLUT8GPU::recreate()",
  "OpenGL::TextureCLUT8GPU::updateGLTexture()",
  "OpenGL::TextureCLUT8GPU::~TextureCLUT8GPU()",
  "OpenGL::TextureGL::TextureGL(unsigned int, unsigned int)",
  "OpenGL::TextureGL::~TextureGL()",
  "OpenGL::TextureRGB555::TextureRGB555()",
  "OpenGL::TextureRGB555::updateGLTexture()",
  "OpenGL::TextureRGB555::~TextureRGB555()",
  "OpenGL::TextureRGBA8888Swap::TextureRGBA8888Swap()",
  "OpenGL::TextureRGBA8888Swap::updateGLTexture()",
  "OpenGL::TextureRGBA8888Swap::~TextureRGBA8888Swap()",
  "OpenGL::TextureTarget::TextureTarget()",
  "OpenGL::TextureTarget::activateInternal()",
  "OpenGL::TextureTarget::create()",
  "OpenGL::TextureTarget::destroy()",
  "OpenGL::TextureTarget::setSize(unsigned int, unsigned int)",
  "OpenGL::TextureTarget::~TextureTarget()",
  "OpenGL::TiledSurface::TiledSurface(unsigned int, unsigned int, Graphics::PixelFormat const&)",
  "OpenGL::TiledSurface::draw(OpenGL::SurfaceRenderer*) const",
  "OpenGL::TiledSurface::fill(unsigned int)",
  "OpenGL::TiledSurface::update()",
  "OpenGL::TiledSurface::~TiledSurface()",
  "OpenGL::checkGLError(char const*, char const*, int)",
  "OpenGL::clearGLError()",
  "OpenGL::createBestSurfaceRenderer()",
  "OpenGL::getChildRecursive(Common::FSNode const&, Common::String const&)",
  "OpenGLSdlGraphics3dManager::OpenGLSdlGraphics3dManager(SdlEventSource*, SdlWindow*, bool)",
  "OpenGLSdlGraphics3dManager::clearOverlay()",
  "OpenGLSdlGraphics3dManager::closeOverlay()",
  "OpenGLSdlGraphics3dManager::createFramebuffer(unsigned int, unsigned int)",
  "OpenGLSdlGraphics3dManager::createOrUpdateGLContext(unsigned int, unsigned int, unsigned int, unsigned int, bool, bool)",
  "OpenGLSdlGraphics3dManager::createOrUpdateScreen()",
  "OpenGLSdlGraphics3dManager::deinitializeRenderer()",
  "OpenGLSdlGraphics3dManager::drawOverlay()",
  "OpenGLSdlGraphics3dManager::endGFXTransaction()",
  "OpenGLSdlGraphics3dManager::gameNeedsAspectRatioCorrection() const",
  "OpenGLSdlGraphics3dManager::getFeatureState(OSystem::Feature) const",
  "OpenGLSdlGraphics3dManager::handleResizeImpl(int, int)",
  "OpenGLSdlGraphics3dManager::hideOverlay()",
  "OpenGLSdlGraphics3dManager::initSize(unsigned int, unsigned int, Graphics::PixelFormat const*)",
  "OpenGLSdlGraphics3dManager::initializeOpenGLContext() const",
  "OpenGLSdlGraphics3dManager::isVSyncEnabled() const",
  "OpenGLSdlGraphics3dManager::notifyResize(int, int)",
  "OpenGLSdlGraphics3dManager::saveScreenshot(Common::String const&) const",
  "OpenGLSdlGraphics3dManager::setFeatureState(OSystem::Feature, bool)",
  "OpenGLSdlGraphics3dManager::setStretchMode(int)",
  "OpenGLSdlGraphics3dManager::setupScreen()",
  "OpenGLSdlGraphics3dManager::shouldRenderToFramebuffer() const",
  "OpenGLSdlGraphics3dManager::showMouse(bool)",
  "OpenGLSdlGraphics3dManager::showOverlay(bool)",
  "OpenGLSdlGraphics3dManager::updateScreen()",
  "OpenGLSdlGraphics3dManager::~OpenGLSdlGraphics3dManager()",
  "OpenGLSdlGraphics3dManager::~OpenGLSdlGraphics3dManager().2",
  "OpenGLSdlGraphicsManager::OpenGLSdlGraphicsManager(SdlEventSource*, SdlWindow*)",
  "OpenGLSdlGraphicsManager::getFeatureState(OSystem::Feature) const",
  "OpenGLSdlGraphicsManager::getHiDPIScreenFactor() const",
  "OpenGLSdlGraphicsManager::handleResizeImpl(int, int)",
  "OpenGLSdlGraphicsManager::hasFeature(OSystem::Feature) const",
  "OpenGLSdlGraphicsManager::loadVideoMode(unsigned int, unsigned int, Graphics::PixelFormat const&)",
  "OpenGLSdlGraphicsManager::notifyEvent(Common::Event const&)",
  "OpenGLSdlGraphicsManager::notifyResize(int, int)",
  "OpenGLSdlGraphicsManager::refreshScreen()",
  "OpenGLSdlGraphicsManager::saveScreenshot(Common::String const&) const",
  "OpenGLSdlGraphicsManager::setFeatureState(OSystem::Feature, bool)",
  "OpenGLSdlGraphicsManager::setupMode(unsigned int, unsigned int)",
  "OpenGLSdlGraphicsManager::updateScreen()",
  "OpenGLSdlGraphicsManager::~OpenGLSdlGraphicsManager()",
  "OpenGLSdlGraphicsManager::~OpenGLSdlGraphicsManager().2",
  "PC98AudioCore::MutexLock::MutexLock(PC98AudioCoreInternal*, int)",
  "PC98AudioCore::MutexLock::~MutexLock()",
  "PC98AudioCore::PC98AudioCore(Audio::Mixer*, PC98AudioPluginDriver*, PC98AudioPluginDriver::EmuType)",
  "PC98AudioCore::init()",
  "PC98AudioCore::readPort(unsigned short)",
  "PC98AudioCore::readReg(unsigned char, unsigned char)",
  "PC98AudioCore::reset()",
  "PC98AudioCore::setMusicVolume(int)",
  "PC98AudioCore::setSoundEffectChanMask(int)",
  "PC98AudioCore::setSoundEffectVolume(int)",
  "PC98AudioCore::ssgSetVolume(int)",
  "PC98AudioCore::stackLockMutex()",
  "PC98AudioCore::stackUnlockMutex()",
  "PC98AudioCore::writePort(unsigned short, unsigned char)",
  "PC98AudioCore::writeReg(unsigned char, unsigned char, unsigned char)",
  "PC98AudioCore::~PC98AudioCore()",
  "PC98AudioCoreInternal::PC98AudioCoreInternal(Audio::Mixer*, PC98AudioCore*, PC98AudioPluginDriver*, PC98AudioPluginDriver::EmuType)",
  "PC98AudioCoreInternal::addNewRef(Audio::Mixer*, PC98AudioCore*, PC98AudioPluginDriver*, PC98AudioPluginDriver::EmuType)",
  "PC98AudioCoreInternal::assignPluginDriver(PC98AudioCore*, PC98AudioPluginDriver*, bool)",
  "PC98AudioCoreInternal::init()",
  "PC98AudioCoreInternal::readPort(unsigned short)",
  "PC98AudioCoreInternal::releaseRef(PC98AudioCore*)",
  "PC98AudioCoreInternal::removePluginDriver(PC98AudioCore*)",
  "PC98AudioCoreInternal::setMusicVolume(int)",
  "PC98AudioCoreInternal::setSoundEffectChanMask(int)",
  "PC98AudioCoreInternal::setSoundEffectVolume(int)",
  "PC98AudioCoreInternal::ssgSetVolume(int)",
  "PC98AudioCoreInternal::timerCallbackA()",
  "PC98AudioCoreInternal::timerCallbackB()",
  "PC98AudioCoreInternal::writePort(unsigned short, unsigned char)",
  "PC98AudioCoreInternal::~PC98AudioCoreInternal()",
  "PC98EmuMusicPlugin::createInstance(MidiDriver**, unsigned int) const",
  "PC98EmuMusicPlugin::getDevices() const",
  "PCF_Face_Done",
  "PCF_Face_Init",
  "PCF_Glyph_Load",
  "PCMChannel_Base::updateOutput()",
  "PCMDevice_Base::PCMDevice_Base(int, int, int)",
  "PCMDevice_Base::readBuffer(int*, unsigned int)",
  "PCM_Decode",
  "PCM_Init",
  "PCSpeakerMusicPlugin::getDevices() const",
  "PCjrMusicPlugin::getDevices() const",
  "PMPlugin::PMPlugin()",
  "PMPlugin::createInstance(Graphics::PixelFormat const&) const",
  "POSIXFilesystemFactory::makeCurrentDirectoryFileNode() const",
  "POSIXFilesystemFactory::makeFileNodePath(Common::String const&) const",
  "POSIXFilesystemFactory::makeRootFileNode() const",
  "POSIXFilesystemNode::POSIXFilesystemNode(Common::String const&)",
  "POSIXFilesystemNode::createDirectory()",
  "POSIXFilesystemNode::createReadStream()",
  "POSIXFilesystemNode::createWriteStream()",
  "POSIXFilesystemNode::getChild(Common::String const&) const",
  "POSIXFilesystemNode::getChildren(Common::Array<AbstractFSNode*>&, Common::FSNode::ListMode, bool) const",
  "POSIXFilesystemNode::getDisplayName() const",
  "POSIXFilesystemNode::getName() const",
  "POSIXFilesystemNode::getParent() const",
  "POSIXFilesystemNode::getPath() const",
  "POSIXFilesystemNode::makeNode(Common::String const&) const",
  "POSIXFilesystemNode::~POSIXFilesystemNode()",
  "POSIXPlugin::findSymbol(char const*)",
  "POSIXPlugin::loadPlugin()",
  "POSIXPlugin::unloadPlugin()",
  "POSIXPlugin::~POSIXPlugin()",
  "POSIXPluginProvider::createPlugin(Common::FSNode const&) const",
  "POSIXSaveFileManager::POSIXSaveFileManager()",
  "POSIXSaveFileManager::~POSIXSaveFileManager()",
  "PSXSamp::ConvertToStdWave(unsigned char*)",
  "PSXSamp::PSXSamp(VGMSampColl*, unsigned int, unsigned int, unsigned int, unsigned int, unsigned char, unsigned short, unsigned int, Common::String, bool)",
  "PSXSamp::~PSXSamp()",
  "PSXSampColl::GetSampleInfo()",
  "PSXSampColl::PSXSampColl(VGMInstrSet*, unsigned int, unsigned int, Common::Array<SizeOffsetPair> const&)",
  "PSXSampColl::~PSXSampColl()",
  "ParallactionMetaEngineDetection::~ParallactionMetaEngineDetection()",
  "PauseToken::clear()",
  "PauseToken::operator=(PauseToken const&)",
  "PauseToken::operator=(PauseToken&&)",
  "PauseToken::~PauseToken()",
  "PegasusMetaEngineDetection::~PegasusMetaEngineDetection()",
  "PetkaMetaEngineDetection::~PetkaMetaEngineDetection()",
  "PinkMetaEngineDetection::~PinkMetaEngineDetection()",
  "Playground3dMetaEngineDetection::~Playground3dMetaEngineDetection()",
  "Plugin::getName() const",
  "PluginManager::PluginManager()",
  "PluginManager::addPluginProvider(PluginProvider*)",
  "PluginManager::addToPluginsInMemList(Plugin*)",
  "PluginManager::findEnginePlugin(Common::String const&)",
  "PluginManager::findLoadedPlugin(Common::String const&)",
  "PluginManager::getEngineFromMetaEngine(Plugin const*)",
  "PluginManager::getMetaEngineFromEngine(Plugin const*)",
  "PluginManager::instance()",
  "PluginManager::loadAllPlugins()",
  "PluginManager::loadAllPluginsOfType(PluginType)",
  "PluginManager::tryLoadPlugin(Plugin*)",
  "PluginManager::unloadAllPlugins()",
  "PluginManager::unloadPluginsExcept(PluginType, Plugin const*, bool)",
  "PluginManager::~PluginManager()",
  "PluginManagerUncached::init()",
  "PluginManagerUncached::loadFirstPlugin()",
  "PluginManagerUncached::loadNextPlugin()",
  "PluginManagerUncached::loadPluginByFileName(Common::String const&)",
  "PluginManagerUncached::loadPluginFromEngineId(Common::String const&)",
  "PluginManagerUncached::updateConfigWithFileName(Common::String const&)",
  "PluginManagerUncached::~PluginManagerUncached()",
  "PlumbersMetaEngineDetection::~PlumbersMetaEngineDetection()",
  "Posix::assureDirectoryExists(Common::String const&, char const*)",
  "PosixIoStream::makeFromPath(Common::String const&, bool)",
  "PosixIoStream::size() const",
  "PosixIoStream::~PosixIoStream()",
  "PrepQueueCmdDraw",
  "PrinceMetaEngineDetection::~PrinceMetaEngineDetection()",
  "PrivateMetaEngineDetection::~PrivateMetaEngineDetection()",
  "QualifiedGameDescriptor::QualifiedGameDescriptor(char const*, PlainGameDescriptor const&)",
  "QualifiedGameDescriptor::operator=(QualifiedGameDescriptor&&)",
  "QualifiedGameDescriptor::~QualifiedGameDescriptor()",
  "Queen::detectVersion(Queen::DetectedGameVersion*, Common::File*)CGE2::BtPage::readBTree(Common::ReadStream&)",
  "QueenMetaEngineDetection::fallbackDetect(Common::HashMap<Common::String, Common::FSNode, Common::IgnoreCase_Hash, Common::IgnoreCase_EqualTo> const&, Common::FSList const&, ADDetectedGameExtraInfo**) const",
  "QueenMetaEngineDetection::~QueenMetaEngineDetection()",
  "QueueCmdCopy",
  "QueueCmdCopyEx",
  "QueueCmdDrawLines",
  "QueueCmdDrawPoints",
  "QueueCmdGeometry",
  "QueueCmdSetClipRect",
  "QueueCmdSetViewport",
  "RIFFChunk::RIFFChunk(Common::String)",
  "RLEAlphaSurface",
  "RLEColorkeySurface",
  "RawFile::GetBytes(unsigned long, unsigned int, void*) const",
  "RecursivelyCalculateShapeTree",
  "RenderDrawLineBresenham",
  "RenderDrawLinesWithRectsF",
  "RenderDrawPointsWithRects",
  "RenderDrawPointsWithRectsF",
  "Render_Glyph",
  "Render_Single_Pass",
  "ResetOutput",
  "RiffFile::RiffFile(Common::String const&, Common::String const&)",
  "RiffFile::~RiffFile()",
  "SAIPlugin::SAIPlugin()",
  "SAIPlugin::createInstance(Graphics::PixelFormat const&) const",
  "SDLPlugin::findSymbol(char const*)",
  "SDLPlugin::loadPlugin()",
  "SDLPlugin::unloadPlugin()",
  "SDLPlugin::~SDLPlugin()",
  "SDLPluginProvider::createPlugin(Common::FSNode const&) const",
  "SDL_AbortAssertion",
  "SDL_AddAudioCVTFilter",
  "SDL_AddAudioDevice",
  "SDL_AddBasicVideoDisplay",
  "SDL_AddDisplayMode",
  "SDL_AddDollarGesture",
  "SDL_AddEventWatch",
  "SDL_AddHintCallback",
  "SDL_AddTimer",
  "SDL_AddTouch",
  "SDL_AddVideoDisplay",
  "SDL_AllocBlitMap",
  "SDL_AllocFormat",
  "SDL_AllocPalette",
  "SDL_AllocRW",
  "SDL_AllocateRenderVertices",
  "SDL_AssertionsQuit",
  "SDL_AtomicLock",
  "SDL_AudioDetectDevices_Default",
  "SDL_AudioInit",
  "SDL_AudioOpenDevice_Default",
  "SDL_AudioQuit",
  "SDL_AudioStreamClear",
  "SDL_AudioStreamFlush",
  "SDL_AudioStreamGet",
  "SDL_AudioStreamPut",
  "SDL_AudioStreamPutInternal",
  "SDL_AutoUpdateJoysticksChanged",
  "SDL_BlendFillRect",
  "SDL_BlendFillRect_RGB",
  "SDL_BlendFillRect_RGBA",
  "SDL_BlendFillRects",
  "SDL_BlendLine",
  "SDL_BlendLines",
  "SDL_BlendPoint",
  "SDL_BlendPoint_RGB",
  "SDL_BlendPoint_RGBA",
  "SDL_BlendPoints",
  "SDL_BufferQueueFillCallback",
  "SDL_BuildAudioCVT",
  "SDL_BuildAudioResampleCVT",
  "SDL_BuildAudioTypeCVTFromFloat",
  "SDL_BuildAudioTypeCVTToFloat",
  "SDL_CalculateBlit",
  "SDL_CalculateGammaRamp",
  "SDL_CalculateShapeBitmap",
  "SDL_CalculateShapeTree",
  "SDL_CaptureAudio",
  "SDL_CaptureMouse",
  "SDL_CleanupAudioStreamResampler",
  "SDL_ClearComposition",
  "SDL_ClearDataQueue",
  "SDL_ClearHints",
  "SDL_ClearQueuedAudio",
  "SDL_CloseAudio",
  "SDL_CloseAudioDevice",
  "SDL_CondBroadcast",
  "SDL_CondSignal",
  "SDL_CondWait",
  "SDL_CondWaitTimeout",
  "SDL_Convert21To4",
  "SDL_Convert21To5",
  "SDL_Convert21To7",
  "SDL_Convert21ToMono",
  "SDL_Convert21ToQuad",
  "SDL_Convert21ToStereo",
  "SDL_Convert41To2",
  "SDL_Convert41To5",
  "SDL_Convert41To6",
  "SDL_Convert41ToMono",
  "SDL_Convert41ToQuad",
  "SDL_Convert41ToStereo",
  "SDL_Convert51To2",
  "SDL_Convert51To4",
  "SDL_Convert51To7",
  "SDL_Convert51ToMonoSDL_Convert41To7",
  "SDL_Convert51ToQuad",
  "SDL_Convert51ToStereo",
  "SDL_Convert61To4",
  "SDL_Convert61To5",
  "SDL_Convert61To7",
  "SDL_Convert61ToMono",
  "SDL_Convert71To4",
  "SDL_Convert71To6",
  "SDL_Convert71ToMono",
  "SDL_Convert71ToQuad",
  "SDL_Convert71ToStereo",
  "SDL_ConvertAudio",
  "SDL_ConvertColorkeyToAlpha",
  "SDL_ConvertMonoTo2",
  "SDL_ConvertMonoTo4",
  "SDL_ConvertMonoTo5",
  "SDL_ConvertMonoTo6",
  "SDL_ConvertMonoTo7",
  "SDL_ConvertMonoToQuad",
  "SDL_ConvertMonoToStereo",
  "SDL_ConvertPixels",
  "SDL_ConvertPixels_ARGB8888_to_YUV",
  "SDL_ConvertPixels_PackUVPlanes_to_NV",
  "SDL_ConvertPixels_RGB_to_YUV",
  "SDL_ConvertPixels_SplitNV_to_UVPlanes",
  "SDL_ConvertPixels_SwapUVPlanes",
  "SDL_ConvertPixels_YUV_to_RGB",
  "SDL_ConvertPixels_YUV_to_YUV",
  "SDL_ConvertQuadTo2",
  "SDL_ConvertQuadTo4",
  "SDL_ConvertQuadTo5",
  "SDL_ConvertQuadTo6",
  "SDL_ConvertQuadTo7",
  "SDL_ConvertQuadToMono",
  "SDL_ConvertQuadToStereo",
  "SDL_ConvertStereoTo2",
  "SDL_ConvertStereoTo4",
  "SDL_ConvertStereoTo5",
  "SDL_ConvertStereoTo6",
  "SDL_ConvertStereoTo7",
  "SDL_ConvertStereoToMono",
  "SDL_ConvertStereoToQuad",
  "SDL_ConvertSurface",
  "SDL_ConvertSurfaceFormat",
  "SDL_Convert_Byteswap",
  "SDL_Convert_F32_to_S16_Scalar",
  "SDL_Convert_F32_to_S32_Scalar",
  "SDL_Convert_F32_to_S8_Scalar",
  "SDL_Convert_F32_to_U16_Scalar",
  "SDL_Convert_F32_to_U8_Scalar",
  "SDL_Convert_S16_to_F32_Scalar",
  "SDL_Convert_S32_to_F32_Scalar",
  "SDL_Convert_S8_to_F32_Scalar",
  "SDL_Convert_U16_to_F32_Scalar",
  "SDL_CreateColorCursor",
  "SDL_CreateCond",
  "SDL_CreateCursor",
  "SDL_CreateJoystickName",
  "SDL_CreateMutex",
  "SDL_CreateRGBSurface",
  "SDL_CreateRGBSurfaceFrom",
  "SDL_CreateRGBSurfaceWithFormat",
  "SDL_CreateRGBSurfaceWithFormatFrom",
  "SDL_CreateRenderer",
  "SDL_CreateSemaphore",
  "SDL_CreateShapedWindow",
  "SDL_CreateSoftwareRenderer",
  "SDL_CreateSurfaceOnStack",
  "SDL_CreateSystemCursor",
  "SDL_CreateTexture",
  "SDL_CreateTextureFromSurface",
  "SDL_CreateThread",
  "SDL_CreateThreadInternal",
  "SDL_CreateThreadWithStackSize",
  "SDL_CreateWindow",
  "SDL_CreateWindowAndRenderer",
  "SDL_CreateWindowFrom",
  "SDL_DUMMY_SensorOpen",
  "SDL_DelHintCallback",
  "SDL_DelTouch",
  "SDL_DelVideoDisplay",
  "SDL_Delay",
  "SDL_DequeueAudio",
  "SDL_DestroyCond",
  "SDL_DestroyMutex",
  "SDL_DestroyTexture",
  "SDL_DestroyWindow",
  "SDL_DetachThread",
  "SDL_DisableScreenSaver",
  "SDL_DrawLine",
  "SDL_DrawLines",
  "SDL_DrawPoint",
  "SDL_DrawPoints",
  "SDL_DuplicateSurface",
  "SDL_EGL_ChooseConfigSDL_EGL_InitializeOffscreen",
  "SDL_EGL_CreateContext",
  "SDL_EGL_CreateOffscreenSurface",
  "SDL_EGL_CreateSurface",
  "SDL_EGL_DeleteContext",
  "SDL_EGL_DestroySurface",
  "SDL_EGL_GetProcAddress",
  "SDL_EGL_GetSwapInterval",
  "SDL_EGL_LoadLibrary",
  "SDL_EGL_LoadLibraryOnly",
  "SDL_EGL_MakeCurrent",
  "SDL_EGL_PrivateChooseConfig",
  "SDL_EGL_SetErrorEx",
  "SDL_EGL_SetSwapInterval",
  "SDL_EGL_SwapBuffers",
  "SDL_EGL_UnloadLibrary",
  "SDL_Emscripten_TimerHelper",
  "SDL_EnableScreenSaver",
  "SDL_EncloseFPoints",
  "SDL_EnclosePoints",
  "SDL_Error",
  "SDL_EventState",
  "SDL_EventsInit",
  "SDL_EventsQuit",
  "SDL_FillRect",
  "SDL_FillRects",
  "SDL_FilterEvents",
  "SDL_FinishWindowCreation",
  "SDL_FlashWindow",
  "SDL_FreeAudioStream",
  "SDL_FreeBlitMap",
  "SDL_FreeCursor",
  "SDL_FreeDataQueue",
  "SDL_FreeFormat",
  "SDL_FreePalette",
  "SDL_FreeRW",
  "SDL_FreeShapeTree",
  "SDL_FreeSurface",
  "SDL_FreeWAV",
  "SDL_GL_BindTexture",
  "SDL_GL_CreateContext",
  "SDL_GL_DeduceMaxSupportedESProfile",
  "SDL_GL_DeleteContext",
  "SDL_GL_ExtensionSupported",
  "SDL_GL_GetAttribute",
  "SDL_GL_GetCurrentContext",
  "SDL_GL_GetCurrentWindow",
  "SDL_GL_GetDrawableSize",
  "SDL_GL_GetProcAddress",
  "SDL_GL_GetSwapInterval",
  "SDL_GL_LoadLibrary",
  "SDL_GL_MakeCurrent",
  "SDL_GL_ResetAttributes",
  "SDL_GL_SetAttribute",
  "SDL_GL_SetSwapInterval",
  "SDL_GL_SwapWindow",
  "SDL_GL_UnbindTexture",
  "SDL_GL_UnloadLibrary",
  "SDL_GameControllerAddMapping",
  "SDL_GameControllerAddMappingsFromRW",
  "SDL_GameControllerClose",
  "SDL_GameControllerEventState",
  "SDL_GameControllerEventWatcher",
  "SDL_GameControllerGetAxis",
  "SDL_GameControllerGetButton",
  "SDL_GameControllerGetFirmwareVersion",
  "SDL_GameControllerGetPlayerIndex",
  "SDL_GameControllerGetProduct",
  "SDL_GameControllerGetProductVersion",
  "SDL_GameControllerGetSensorData",
  "SDL_GameControllerGetSerial",
  "SDL_GameControllerGetTouchpadFinger",
  "SDL_GameControllerGetType",
  "SDL_GameControllerGetVendor",
  "SDL_GameControllerHandleDelayedGuideButton",
  "SDL_GameControllerHasLED",
  "SDL_GameControllerHasRumble",
  "SDL_GameControllerHasRumbleTriggers",
  "SDL_GameControllerIgnoreDevicesChanged",
  "SDL_GameControllerIgnoreDevicesExceptChanged",
  "SDL_GameControllerInit",
  "SDL_GameControllerInitMappings",
  "SDL_GameControllerMapping",
  "SDL_GameControllerMappingForDeviceIndex",
  "SDL_GameControllerMappingForGUID",
  "SDL_GameControllerMappingForIndex",
  "SDL_GameControllerName",
  "SDL_GameControllerNameForIndex",
  "SDL_GameControllerOpen",
  "SDL_GameControllerPath",
  "SDL_GameControllerPathForIndex",
  "SDL_GameControllerQuit",
  "SDL_GameControllerQuitMappings",
  "SDL_GameControllerRumble",
  "SDL_GameControllerRumbleTriggers",
  "SDL_GameControllerSendEffect",
  "SDL_GameControllerSetLED",
  "SDL_GameControllerSetPlayerIndex",
  "SDL_GameControllerSetSensorEnabled",
  "SDL_GameControllerTypeForIndex",
  "SDL_GameControllerUpdate",
  "SDL_Generic_SetTLSData",
  "SDL_GestureAddTouch",
  "SDL_GestureDelTouch",
  "SDL_GestureProcessEvent",
  "SDL_GestureQuit",
  "SDL_GetAudioDeviceName",
  "SDL_GetAudioDeviceSpec",
  "SDL_GetAudioDeviceStatus",
  "SDL_GetAudioStatus",
  "SDL_GetBasePath",
  "SDL_GetClipboardText",
  "SDL_GetClosestDisplayMode",
  "SDL_GetClosestDisplayModeForDisplay",
  "SDL_GetColorKey",
  "SDL_GetCurrentDisplayMode",
  "SDL_GetCurrentVideoDriver",
  "SDL_GetDefaultAudioInfo",
  "SDL_GetDesktopDisplayMode",
  "SDL_GetDisplay",
  "SDL_GetDisplayBounds",
  "SDL_GetDisplayDPI",
  "SDL_GetDisplayDriverData",
  "SDL_GetDisplayForWindow",
  "SDL_GetDisplayMode",
  "SDL_GetDisplayName",
  "SDL_GetDisplayOrientation",
  "SDL_GetDisplayUsableBounds",
  "SDL_GetDriverAndJoystickIndex",
  "SDL_GetGlobalMouseState",
  "SDL_GetJoystickGUIDType",
  "SDL_GetJoystickGameControllerTypeFromGUID",
  "SDL_GetJoystickGameControllerTypeFromVIDPID",
  "SDL_GetKeyFromName",
  "SDL_GetKeyFromScancode",
  "SDL_GetKeyName",
  "SDL_GetNumAudioDevices",
  "SDL_GetNumDisplayModes",
  "SDL_GetNumTouchFingers",
  "SDL_GetNumVideoDisplays",
  "SDL_GetPointDisplayIndex",
  "SDL_GetPrefPath",
  "SDL_GetPreferredLocales",
  "SDL_GetQueuedAudioSize",
  "SDL_GetRectDisplayIndex",
  "SDL_GetRenderDrawBlendMode",
  "SDL_GetRenderDrawColor",
  "SDL_GetRenderDriverInfo",
  "SDL_GetRenderTarget",
  "SDL_GetRenderer",
  "SDL_GetRendererInfo",
  "SDL_GetRendererOutputSize",
  "SDL_GetScancodeFromName",
  "SDL_GetScancodeName",
  "SDL_GetSpanEnclosingRect",
  "SDL_GetTextureAlphaMod",
  "SDL_GetTextureBlendMode",
  "SDL_GetTextureColorMod",
  "SDL_GetTextureScaleMode",
  "SDL_GetTextureUserData",
  "SDL_GetTouch",
  "SDL_GetTouchDevice",
  "SDL_GetTouchDeviceType",
  "SDL_GetTouchFinger",
  "SDL_GetTouchName",
  "SDL_GetWindowBordersSize",
  "SDL_GetWindowBrightness",
  "SDL_GetWindowData",
  "SDL_GetWindowDisplayIndex",
  "SDL_GetWindowDisplayMode",
  "SDL_GetWindowFlags",
  "SDL_GetWindowGammaRamp",
  "SDL_GetWindowGrab",
  "SDL_GetWindowICCProfile",
  "SDL_GetWindowID",
  "SDL_GetWindowKeyboardGrab",
  "SDL_GetWindowMaximumSize",
  "SDL_GetWindowMinimumSize",
  "SDL_GetWindowMouseGrab",
  "SDL_GetWindowMouseRect",
  "SDL_GetWindowOpacity",
  "SDL_GetWindowPixelFormat",
  "SDL_GetWindowPosition",
  "SDL_GetWindowSize",
  "SDL_GetWindowSurface",
  "SDL_GetWindowTitle",
  "SDL_GetWindowWMInfo",
  "SDL_HapticClose",
  "SDL_HapticDestroyEffect",
  "SDL_HapticEffectSupported",
  "SDL_HapticGetEffectStatus",
  "SDL_HapticIndex",
  "SDL_HapticName",
  "SDL_HapticNewEffect",
  "SDL_HapticNumAxes",
  "SDL_HapticNumEffects",
  "SDL_HapticNumEffectsPlaying",
  "SDL_HapticOpen",
  "SDL_HapticOpenFromJoystick",
  "SDL_HapticOpenFromMouse",
  "SDL_HapticOpened",
  "SDL_HapticPause",
  "SDL_HapticQuery",
  "SDL_HapticQuit",
  "SDL_HapticRumbleInit",
  "SDL_HapticRumblePlay",
  "SDL_HapticRumbleStop",
  "SDL_HapticRumbleSupported",
  "SDL_HapticRunEffect",
  "SDL_HapticSetAutocenter",
  "SDL_HapticSetGain",
  "SDL_HapticStopAll",
  "SDL_HapticStopEffect",
  "SDL_HapticUnpause",
  "SDL_HapticUpdateEffect",
  "SDL_HasClipboardText",
  "SDL_HasEvent",
  "SDL_HasEvents",
  "SDL_HasIntersection",
  "SDL_HasIntersectionF",
  "SDL_HasScreenKeyboardSupport",
  "SDL_HideWindow",
  "SDL_Init",
  "SDL_InitFormat",
  "SDL_InitSubSystem",
  "SDL_IntersectFRect",
  "SDL_IntersectFRectAndLine",
  "SDL_IntersectRect",
  "SDL_IntersectRectAndLine",
  "SDL_InvalidateAllBlitMap",
  "SDL_InvalidateMap",
  "SDL_IsGameController",
  "SDL_IsGameControllerNameAndGUID",
  "SDL_IsJoystickNintendoSwitchJoyCon",
  "SDL_IsJoystickNintendoSwitchJoyConLeft",
  "SDL_IsJoystickNintendoSwitchJoyConRight",
  "SDL_IsJoystickNintendoSwitchPro",
  "SDL_IsJoystickNintendoSwitchProInputOnly",
  "SDL_IsJoystickPS4",
  "SDL_IsJoystickPS5",
  "SDL_IsJoystickSteamController",
  "SDL_IsJoystickXboxOne",
  "SDL_IsScreenKeyboardShown",
  "SDL_IsTextInputActive",
  "SDL_IsTextInputShown",
  "SDL_JoystickAttachVirtual",
  "SDL_JoystickAttachVirtualEx",
  "SDL_JoystickClose",
  "SDL_JoystickCurrentPowerLevel",
  "SDL_JoystickDetachVirtual",
  "SDL_JoystickEventState",
  "SDL_JoystickGetAxis",
  "SDL_JoystickGetAxisInitialState",
  "SDL_JoystickGetBall",
  "SDL_JoystickGetButton",
  "SDL_JoystickGetDeviceGUID",
  "SDL_JoystickGetDeviceInstanceID",
  "SDL_JoystickGetDevicePlayerIndex",
  "SDL_JoystickGetDeviceProduct",
  "SDL_JoystickGetDeviceProductVersion",
  "SDL_JoystickGetDeviceType",
  "SDL_JoystickGetDeviceVendor",
  "SDL_JoystickGetFirmwareVersion",
  "SDL_JoystickGetGUID",
  "SDL_JoystickGetHat",
  "SDL_JoystickGetPlayerIndex",
  "SDL_JoystickGetProduct",
  "SDL_JoystickGetProductVersion",
  "SDL_JoystickGetSerial",
  "SDL_JoystickGetType",
  "SDL_JoystickGetVendor",
  "SDL_JoystickHasLED",
  "SDL_JoystickHasRumble",
  "SDL_JoystickHasRumbleTriggers",
  "SDL_JoystickInit",
  "SDL_JoystickInstanceID",
  "SDL_JoystickIsHaptic",
  "SDL_JoystickName",
  "SDL_JoystickNameForIndex",
  "SDL_JoystickNumAxes",
  "SDL_JoystickNumBalls",
  "SDL_JoystickNumButtons",
  "SDL_JoystickNumHats",
  "SDL_JoystickOpen",
  "SDL_JoystickPath",
  "SDL_JoystickPathForIndex",
  "SDL_JoystickQuit",
  "SDL_JoystickRumble",
  "SDL_JoystickRumbleTriggers",
  "SDL_JoystickSendEffect",
  "SDL_JoystickSetLED",
  "SDL_JoystickSetPlayerIndex",
  "SDL_JoystickSetVirtualAxis",
  "SDL_JoystickSetVirtualButton",
  "SDL_JoystickSetVirtualHat",
  "SDL_JoystickUpdate",
  "SDL_ListAdd",
  "SDL_ListClear",
  "SDL_ListPop",
  "SDL_ListRemove",
  "SDL_LoadBMP_RW",
  "SDL_LoadDollarTemplates",
  "SDL_LoadFile",
  "SDL_LoadFile_RW",
  "SDL_LoadFunction",
  "SDL_LoadObject",
  "SDL_LoadVIDPIDListFromHint",
  "SDL_LoadWAV_RW",
  "SDL_LockAudioDevice",
  "SDL_LockSurface",
  "SDL_LockTexture",
  "SDL_LockTextureToSurface",
  "SDL_Log",
  "SDL_LogCritical",
  "SDL_LogDebug",
  "SDL_LogError",
  "SDL_LogInfo",
  "SDL_LogInit",
  "SDL_LogMessage",
  "SDL_LogMessageV",
  "SDL_LogOutput",
  "SDL_LogQuit",
  "SDL_LogResetPriorities",
  "SDL_LogSetPriority",
  "SDL_LogVerbose",
  "SDL_LogWarn",
  "SDL_LowerBlit",
  "SDL_LowerBlitScaled",
  "SDL_MapSurface",
  "SDL_MaximizeWindow",
  "SDL_MemoryBarrierAcquireFunction",
  "SDL_MemoryBarrierReleaseFunction",
  "SDL_Metal_CreateView",
  "SDL_Metal_DestroyView",
  "SDL_Metal_GetDrawableSize",
  "SDL_Metal_GetLayer",
  "SDL_MinimizeWindow",
  "SDL_MixAudio",
  "SDL_MixAudioFormat",
  "SDL_MouseAutoCaptureChanged",
  "SDL_MouseInit",
  "SDL_MouseNormalSpeedScaleChanged",
  "SDL_MouseRelativeSpeedScaleChanged",
  "SDL_MouseTouchEventsChanged",
  "SDL_NewAudioStream",
  "SDL_NewDataQueue",
  "SDL_NumSensors",
  "SDL_OnApplicationDidBecomeActive",
  "SDL_OnApplicationDidEnterBackground",
  "SDL_OnApplicationDidReceiveMemoryWarning",
  "SDL_OnApplicationWillEnterForeground",
  "SDL_OnApplicationWillResignActive",
  "SDL_OnApplicationWillTerminate",
  "SDL_OnWindowFocusGained",
  "SDL_OnWindowFocusLost",
  "SDL_OnWindowHidden",
  "SDL_OnWindowMinimized",
  "SDL_OnWindowMoved",
  "SDL_OnWindowResized",
  "SDL_OnWindowRestored",
  "SDL_OnWindowShown",
  "SDL_OpenAudio",
  "SDL_OpenAudioDevice",
  "SDL_OpenURL",
  "SDL_OpenedAudioDeviceDisconnected",
  "SDL_PauseAudio",
  "SDL_PeepEvents",
  "SDL_PeepEventsInternal",
  "SDL_PerformWarpMouseInWindow",
  "SDL_PixelFormatEnumToMasks",
  "SDL_PollEvent",
  "SDL_PollSentinelChanged",
  "SDL_PremultiplyAlpha",
  "SDL_PrivateAddMappingForGUID",
  "SDL_PrivateAppendToMappingString",
  "SDL_PrivateGameControllerAddMapping",
  "SDL_PrivateGameControllerButton",
  "SDL_PrivateGameControllerParseElement",
  "SDL_PrivateGetControllerMapping",
  "SDL_PrivateGetControllerMappingForGUID",
  "SDL_PrivateJoystickAddSensor",
  "SDL_PrivateJoystickAddTouchpad",
  "SDL_PrivateJoystickAdded",
  "SDL_PrivateJoystickAxis",
  "SDL_PrivateJoystickBall",
  "SDL_PrivateJoystickBatteryLevel",
  "SDL_PrivateJoystickButton",
  "SDL_PrivateJoystickGetAutoGamepadMapping",
  "SDL_PrivateJoystickHat",
  "SDL_PrivateJoystickRemoved",
  "SDL_PrivateJoystickSensor",
  "SDL_PrivateJoystickTouchpad",
  "SDL_PrivateJoystickValid",
  "SDL_PrivateLoadButtonMapping",
  "SDL_PrivateLowerBlitScaled",
  "SDL_PrivateSendMouseButton",
  "SDL_PrivateSendMouseMotion",
  "SDL_PrivateSensorUpdate",
  "SDL_PrivateUpperBlitScaled",
  "SDL_PromptAssertion",
  "SDL_PumpEvents",
  "SDL_PumpEventsInternal",
  "SDL_PushEvent",
  "SDL_QueryTexture",
  "SDL_QueueAudio",
  "SDL_Quit",
  "SDL_QuitSubSystem",
  "SDL_RLEAlphaBlit",
  "SDL_RLEBlit",
  "SDL_RLESurface",
  "SDL_RWFromConstMem",
  "SDL_RWFromFP",
  "SDL_RWFromFile",
  "SDL_RWFromMem",
  "SDL_RWclose",
  "SDL_RWread",
  "SDL_RWseek",
  "SDL_RWsize",
  "SDL_RWtell",
  "SDL_RWwrite",
  "SDL_RaiseWindow",
  "SDL_ReadBE16",
  "SDL_ReadBE32SDL_LoadFile_RW",
  "SDL_ReadBE64",
  "SDL_ReadLE16",
  "SDL_ReadLE32",
  "SDL_ReadLE64",
  "SDL_ReadU8",
  "SDL_RecreateWindow",
  "SDL_ReleaseAutoReleaseKeys",
  "SDL_RemoveAudioDevice",
  "SDL_RemoveTimer",
  "SDL_RenderClear",
  "SDL_RenderCopy",
  "SDL_RenderCopyEx",
  "SDL_RenderCopyExF",
  "SDL_RenderCopyF",
  "SDL_RenderDrawLine",
  "SDL_RenderDrawLineF",
  "SDL_RenderDrawLines",
  "SDL_RenderDrawLinesF",
  "SDL_RenderDrawPoint",
  "SDL_RenderDrawPointF",
  "SDL_RenderDrawPoints",
  "SDL_RenderDrawPointsF",
  "SDL_RenderDrawRect",
  "SDL_RenderDrawRectF",
  "SDL_RenderDrawRects",
  "SDL_RenderDrawRectsF",
  "SDL_RenderFillRect",
  "SDL_RenderFillRectF",
  "SDL_RenderFillRects",
  "SDL_RenderFillRectsF",
  "SDL_RenderFlush",
  "SDL_RenderGeometry",
  "SDL_RenderGeometryRaw",
  "SDL_RenderGetClipRect",
  "SDL_RenderGetIntegerScale",
  "SDL_RenderGetLogicalSize",
  "SDL_RenderGetMetalCommandEncoder",
  "SDL_RenderGetScale",
  "SDL_RenderGetViewport",
  "SDL_RenderGetWindow",
  "SDL_RenderIsClipEnabled",
  "SDL_RenderLogicalToWindow",
  "SDL_RenderPresent",
  "SDL_RenderReadPixels",
  "SDL_RenderSetClipRect",
  "SDL_RenderSetIntegerScale",
  "SDL_RenderSetLogicalSize",
  "SDL_RenderSetScale",
  "SDL_RenderSetVSync",
  "SDL_RenderSetViewport",
  "SDL_RenderWindowToLogical",
  "SDL_ReportAssertion",
  "SDL_ResampleCVT",
  "SDL_ResampleCVT_c",
  "SDL_ResampleCVT_c2",
  "SDL_ResampleCVT_c4",
  "SDL_ResampleCVT_c6",
  "SDL_ResampleCVT_c8",
  "SDL_ReserveSpaceInDataQueue",
  "SDL_ResetDisplayModes",
  "SDL_ResetHint",
  "SDL_ResetKeyboard",
  "SDL_RestoreWindow",
  "SDL_RunAudio",
  "SDL_RunThread",
  "SDL_SIMDAlloc",
  "SDL_SIMDFree",
  "SDL_SIMDRealloc",
  "SDL_SW_BlitTriangle",
  "SDL_SW_CopyYUVToRGB",
  "SDL_SW_CreateYUVTexture",
  "SDL_SW_DestroyYUVTexture",
  "SDL_SW_FillTriangle",
  "SDL_SW_LockYUVTexture",
  "SDL_SW_RenderGeometryRaw",
  "SDL_SYS_CreateThread",
  "SDL_SYS_HapticDestroyEffect",
  "SDL_SYS_HapticGetEffectStatus",
  "SDL_SYS_HapticName",
  "SDL_SYS_HapticNewEffect",
  "SDL_SYS_HapticOpen",
  "SDL_SYS_HapticOpenFromJoystick",
  "SDL_SYS_HapticPause",
  "SDL_SYS_HapticRunEffect",
  "SDL_SYS_HapticSetAutocenter",
  "SDL_SYS_HapticSetGain",
  "SDL_SYS_HapticStopAll",
  "SDL_SYS_HapticStopEffect",
  "SDL_SYS_HapticUnpause",
  "SDL_SYS_HapticUpdateEffect",
  "SDL_SYS_SetTLSData",
  "SDL_SaveAllDollarTemplates",
  "SDL_SaveBMP_RW",
  "SDL_SaveDollarTemplate",
  "SDL_SemPost",
  "SDL_SemTryWait",
  "SDL_SemWait",
  "SDL_SemWaitTimeout",
  "SDL_SendAppEvent",
  "SDL_SendClipboardUpdate",
  "SDL_SendDisplayEvent",
  "SDL_SendDrop",
  "SDL_SendDropComplete",
  "SDL_SendDropFile",
  "SDL_SendDropText",
  "SDL_SendEditingText",
  "SDL_SendKeyboardKey",
  "SDL_SendKeyboardKeyAutoRelease",
  "SDL_SendKeyboardKeyInternal",
  "SDL_SendKeyboardText",
  "SDL_SendKeyboardUnicodeKey",
  "SDL_SendKeymapChangedEvent",
  "SDL_SendLocaleChangedEvent",
  "SDL_SendMouseButton",
  "SDL_SendMouseButtonClicks",
  "SDL_SendMouseMotion",
  "SDL_SendMouseWheel",
  "SDL_SendPendingSignalEvents",
  "SDL_SendQuit",
  "SDL_SendSysWMEvent",
  "SDL_SendTouch",
  "SDL_SendTouchMotion",
  "SDL_SendWindowEvent",
  "SDL_SensorClose",
  "SDL_SensorGetData",
  "SDL_SensorGetDeviceInstanceID",
  "SDL_SensorGetDeviceName",
  "SDL_SensorGetDeviceNonPortableType",
  "SDL_SensorGetDeviceType",
  "SDL_SensorGetInstanceID",
  "SDL_SensorGetName",
  "SDL_SensorGetNonPortableType",
  "SDL_SensorGetType",
  "SDL_SensorInit",
  "SDL_SensorOpen",
  "SDL_SensorQuit",
  "SDL_SensorUpdate",
  "SDL_SetClipRect",
  "SDL_SetClipboardText",
  "SDL_SetColorKey",
  "SDL_SetCursor",
  "SDL_SetDefaultCursor",
  "SDL_SetDisplayModeForDisplay",
  "SDL_SetError",
  "SDL_SetHint",
  "SDL_SetHintWithPriority",
  "SDL_SetJoystickIDForPlayerIndex",
  "SDL_SetKeyboardFocus",
  "SDL_SetKeymap",
  "SDL_SetMemoryFunctions",
  "SDL_SetMouseFocus",
  "SDL_SetPixelFormatPalette",
  "SDL_SetRelativeMouseMode",
  "SDL_SetRenderDrawBlendMode",
  "SDL_SetRenderDrawColor",
  "SDL_SetRenderTargetSDL_RendererEventWatch",
  "SDL_SetSurfaceAlphaMod",
  "SDL_SetSurfaceBlendMode",
  "SDL_SetSurfaceColorMod",
  "SDL_SetSurfacePalette",
  "SDL_SetSurfaceRLE",
  "SDL_SetTextInputRect",
  "SDL_SetTextureAlphaMod",
  "SDL_SetTextureBlendMode",
  "SDL_SetTextureColorMod",
  "SDL_SetTextureScaleMode",
  "SDL_SetTextureUserData",
  "SDL_SetWindowAlwaysOnTop",
  "SDL_SetWindowBordered",
  "SDL_SetWindowBrightness",
  "SDL_SetWindowData",
  "SDL_SetWindowDisplayMode",
  "SDL_SetWindowFullscreen",
  "SDL_SetWindowGammaRamp",
  "SDL_SetWindowGrab",
  "SDL_SetWindowHitTest",
  "SDL_SetWindowIcon",
  "SDL_SetWindowInputFocus",
  "SDL_SetWindowKeyboardGrab",
  "SDL_SetWindowMaximumSize",
  "SDL_SetWindowMinimumSize",
  "SDL_SetWindowModalFor",
  "SDL_SetWindowMouseGrab",
  "SDL_SetWindowMouseRect",
  "SDL_SetWindowOpacity",
  "SDL_SetWindowPosition",
  "SDL_SetWindowResizable",
  "SDL_SetWindowShape",
  "SDL_SetWindowSize",
  "SDL_SetWindowTitle",
  "SDL_ShouldIgnoreJoystick",
  "SDL_ShowCursor",
  "SDL_ShowMessageBox",
  "SDL_ShowWindow",
  "SDL_SoftBlit",
  "SDL_SoftStretch",
  "SDL_SoftStretchLinear",
  "SDL_StartEventLoop",
  "SDL_StartTextInput",
  "SDL_StopEventLoop",
  "SDL_StopTextInput",
  "SDL_TLSCleanup",
  "SDL_TLSSet",
  "SDL_TimerQuit",
  "SDL_ToggleDragAndDropSupport",
  "SDL_TouchQuit",
  "SDL_UnRLESurface",
  "SDL_UnionFRect",
  "SDL_UnionRect",
  "SDL_UnloadObject",
  "SDL_UnlockAudio",
  "SDL_UnlockAudioDevice",
  "SDL_UnlockSurface",
  "SDL_UnlockTexture",
  "SDL_UpdateFullscreenMode",
  "SDL_UpdateMouseCapture",
  "SDL_UpdateMouseFocus",
  "SDL_UpdateNVTexture",
  "SDL_UpdateTexture",
  "SDL_UpdateTextureNVPlanar",
  "SDL_UpdateTextureNative",
  "SDL_UpdateTextureYUVPlanar",
  "SDL_UpdateWindowGrab",
  "SDL_UpdateWindowSurface",
  "SDL_UpdateWindowSurfaceRects",
  "SDL_UpdateYUVTexture",
  "SDL_UpperBlit",
  "SDL_UpperBlitScaled",
  "SDL_UpperSoftStretch",
  "SDL_VideoInit",
  "SDL_VideoQuit",
  "SDL_Vulkan_CreateSurface",
  "SDL_Vulkan_GetDrawableSize",
  "SDL_Vulkan_GetInstanceExtensions",
  "SDL_Vulkan_GetVkGetInstanceProcAddr",
  "SDL_Vulkan_LoadLibrary",
  "SDL_Vulkan_UnloadLibrary",
  "SDL_WaitEvent",
  "SDL_WaitEventTimeout",
  "SDL_WaitEventTimeout_Device",
  "SDL_WaitThread",
  "SDL_WarpMouseGlobal",
  "SDL_WarpMouseInWindow",
  "SDL_WriteBE16",
  "SDL_WriteBE32",
  "SDL_WriteBE64",
  "SDL_WriteLE16",
  "SDL_WriteLE64",
  "SDL_WriteToDataQueue",
  "SDL_WriteU8",
  "SDL_asprintf",
  "SDL_atof",
  "SDL_bsearch",
  "SDL_calloc",
  "SDL_free",
  "SDL_iconv_string",
  "SDL_malloc",
  "SDL_qsort",
  "SDL_realloc",
  "SDL_snprintf",
  "SDL_sscanf",
  "SDL_strdup",
  "SDL_strtod",
  "SDL_vasprintf",
  "SDL_vsnprintf",
  "SDL_vsscanf",
  "SDL_wcsdup",
  "SDLgfx_rotateSurface",
  "SF2File::SF2File(SynthFile*)",
  "SF2File::SaveToMem()",
  "SF2File::~SF2File()",
  "SF2InfoListChunk::SF2InfoListChunk(Common::String)",
  "SRCTools::FIRResampler::Constants::Constants(unsigned int, double, float const*, unsigned int)",
  "SRCTools::FIRResampler::FIRResampler(unsigned int, double, float const*, unsigned int)",
  "SRCTools::IIR2xDecimator::IIR2xDecimator(SRCTools::IIRResampler::Quality)",
  "SRCTools::IIR2xDecimator::IIR2xDecimator(unsigned int, float, SRCTools::IIRSection const*)",
  "SRCTools::IIR2xInterpolator::IIR2xInterpolator(SRCTools::IIRResampler::Quality)",
  "SRCTools::IIR2xInterpolator::IIR2xInterpolator(unsigned int, float, SRCTools::IIRSection const*)",
  "SRCTools::IIRResampler::Constants::Constants(unsigned int, float, SRCTools::IIRSection const*, SRCTools::IIRResampler::Quality)",
  "SRCTools::IIRResampler::IIRResampler(SRCTools::IIRResampler::Quality)",
  "SRCTools::IIRResampler::IIRResampler(unsigned int, float, SRCTools::IIRSection const*)",
  "SRCTools::ResamplerModel::CascadeStage::getOutputSamples(float*, unsigned int)",
  "SRCTools::ResamplerModel::InternalResamplerCascadeStage::~InternalResamplerCascadeStage()",
  "SRCTools::ResamplerModel::createResamplerModel(SRCTools::FloatSampleProvider&, SRCTools::ResamplerStage&)",
  "SRCTools::ResamplerModel::createResamplerModel(SRCTools::FloatSampleProvider&, SRCTools::ResamplerStage**, unsigned int)",
  "SRCTools::ResamplerModel::createResamplerModel(SRCTools::FloatSampleProvider&, double, double, SRCTools::ResamplerModel::Quality)",
  "SRCTools::ResamplerModel::freeResamplerModel(SRCTools::FloatSampleProvider&, SRCTools::FloatSampleProvider&)",
  "SRCTools::SincResampler::createSincResampler(double, double, double, double, double, unsigned int)",
  "SW_CreateRenderer",
  "SW_CreateRendererForSurface",
  "SW_CreateTexture",
  "SW_DestroyRenderer",
  "SW_DestroyTexture",
  "SW_GetOutputSize",
  "SW_QueueCopy",
  "SW_QueueCopyEx",
  "SW_QueueDrawPoints",
  "SW_QueueFillRects",
  "SW_QueueGeometry",
  "SW_RenderPresent",
  "SW_RenderReadPixels",
  "SW_RunCommandQueue",
  "SW_UpdateTexture",
  "Saga2MetaEngineDetection::~Saga2MetaEngineDetection()",
  "SagaMetaEngineDetection::~SagaMetaEngineDetection()",
  "SaveStateDescriptor* Common::copy<SaveStateDescriptor const*, SaveStateDescriptor*>(SaveStateDescriptor const*, SaveStateDescriptor const*, SaveStateDescriptor*)",
  "SaveStateDescriptor* Common::copy_backward<SaveStateDescriptor*, SaveStateDescriptor*>(SaveStateDescriptor*, SaveStateDescriptor*, SaveStateDescriptor*)",
  "SaveStateDescriptor::SaveStateDescriptor(MetaEngine const*, int, Common::String const&)",
  "SaveStateDescriptor::SaveStateDescriptor(MetaEngine const*, int, Common::U32String const&)",
  "SaveStateDescriptor::hasAutosaveName() const",
  "SaveStateDescriptor::initSaveType(MetaEngine const*)",
  "SaveStateDescriptor::isAutosave() const",
  "SaveStateDescriptor::setPlayTime(int, int)",
  "SaveStateDescriptor::setPlayTime(unsigned int)",
  "SaveStateDescriptor::setSaveDate(int, int, int)",
  "SaveStateDescriptor::setSaveTime(int, int)",
  "SaveStateDescriptor::setThumbnail(Graphics::Surface*)",
  "Scaler::scale(unsigned char const*, unsigned int, unsigned char*, unsigned int, int, int, int, int)",
  "ScalerManager::findScalerPlugin(char const*) const",
  "ScalerManager::findScalerPluginIndex(char const*) const",
  "ScalerManager::getMaxExtraPixels() const",
  "ScalerManager::getPlugins() const",
  "ScalerManager::updateOldSettings()",
  "Sci::SciMetaEngineDetection::fallbackDetect(Common::HashMap<Common::String, Common::FSNode, Common::IgnoreCase_Hash, Common::IgnoreCase_EqualTo> const&, Common::FSList const&, ADDetectedGameExtraInfo**) const",
  "Sci::SciMetaEngineDetection::~SciMetaEngineDetection()",
  "Scumm::ScummDiskImage::ScummDiskImage(char const*, char const*, Scumm::GameSettings)",
  "Scumm::ScummDiskImage::close()",
  "Scumm::ScummDiskImage::eos() const",
  "Scumm::ScummDiskImage::extractIndex(Common::WriteStream*)",
  "Scumm::ScummDiskImage::extractResource(Common::WriteStream*, int)",
  "Scumm::ScummDiskImage::fileReadByte()",
  "Scumm::ScummDiskImage::fileReadUint16LE()",
  "Scumm::ScummDiskImage::generateIndex()",
  "Scumm::ScummDiskImage::generateResource(int)",
  "Scumm::ScummDiskImage::open(Common::Path const&)",
  "Scumm::ScummDiskImage::openDisk(char)",
  "Scumm::ScummDiskImage::openSubFile(Common::String const&)",
  "Scumm::ScummDiskImage::pos() const",
  "Scumm::ScummDiskImage::read(void*, unsigned int)",
  "Scumm::ScummDiskImage::seek(long long, int)",
  "Scumm::ScummDiskImage::size() const",
  "Scumm::ScummDiskImage::~ScummDiskImage()",
  "Scumm::ScummFile::clearErr()",
  "Scumm::ScummFile::eos() const",
  "Scumm::ScummFile::open(Common::Path const&)",
  "Scumm::ScummFile::openSubFile(Common::String const&)",
  "Scumm::ScummFile::pos() const",
  "Scumm::ScummFile::read(void*, unsigned int)",
  "Scumm::ScummFile::resetSubfile()",
  "Scumm::ScummFile::seek(long long, int)",
  "Scumm::ScummFile::setSubfileRange(int, int)",
  "Scumm::ScummFile::size() const",
  "Scumm::ScummFile::~ScummFile()",
  "Scumm::ScummNESFile::close()",
  "Scumm::ScummNESFile::eos() const",
  "Scumm::ScummNESFile::extractResource(Common::WriteStream*, Scumm::ScummNESFile::Resource const*, Scumm::ScummNESFile::ResType)",
  "Scumm::ScummNESFile::fileReadByte()",
  "Scumm::ScummNESFile::fileReadUint16LE()",
  "Scumm::ScummNESFile::generateIndex()",
  "Scumm::ScummNESFile::generateResource(int)",
  "Scumm::ScummNESFile::open(Common::Path const&)",
  "Scumm::ScummNESFile::openSubFile(Common::String const&)",
  "Scumm::ScummNESFile::pos() const",
  "Scumm::ScummNESFile::seek(long long, int)",
  "Scumm::ScummNESFile::size() const",
  "Scumm::ScummNESFile::~ScummNESFile()",
  "Scumm::ScummSteamFile::open(Common::Path const&)",
  "Scumm::ScummSteamFile::openWithSubRange(Common::String const&, int, int)",
  "Scumm::ScummSteamFile::~ScummSteamFile()",
  "Scumm::composeFileHashMap(Common::HashMap<Common::String, Scumm::DetectorDesc, Common::IgnoreCase_Hash, Common::IgnoreCase_EqualTo>&, Common::FSList const&, int, char const* const*)",
  "Scumm::detectLanguage(Common::FSList const&, unsigned char, Common::Language)",
  "Scumm::searchFSNode(Common::FSList const&, Common::String const&, Common::FSNode&)",
  "ScummMetaEngineDetection::detectGames(Common::FSList const&, unsigned int, bool)",
  "ScummMetaEngineDetection::getSupportedGames() const",
  "ScummMetaEngineDetection::parseAndCustomizeGuiOptions(Common::String const&, Common::String const&) const",
  "SdlEventSource::SdlEventSource()",
  "SdlEventSource::closeJoystick()",
  "SdlEventSource::dispatchSDLEvent(SDL_Event&, Common::Event&)",
  "SdlEventSource::handleControllerButton(SDL_Event const&, Common::Event&, bool)",
  "SdlEventSource::handleJoyButtonDown(SDL_Event&, Common::Event&)",
  "SdlEventSource::handleJoyButtonUp(SDL_Event&, Common::Event&)",
  "SdlEventSource::handleJoyHatMotion(SDL_Event&, Common::Event&)",
  "SdlEventSource::handleJoystickAdded(SDL_JoyDeviceEvent const&, Common::Event&)",
  "SdlEventSource::handleJoystickRemoved(SDL_JoyDeviceEvent const&, Common::Event&)",
  "SdlEventSource::handleKeyDown(SDL_Event&, Common::Event&)",
  "SdlEventSource::handleKeyUp(SDL_Event&, Common::Event&)",
  "SdlEventSource::handleMouseButtonDown(SDL_Event&, Common::Event&)",
  "SdlEventSource::handleMouseButtonUp(SDL_Event&, Common::Event&)",
  "SdlEventSource::handleMouseMotion(SDL_Event&, Common::Event&)",
  "SdlEventSource::handleResizeEvent(Common::Event&, int, int)",
  "SdlEventSource::loadGameControllerMappingFile()",
  "SdlEventSource::obtainUnicode(SDL_Keysym)",
  "SdlEventSource::openJoystick(int)",
  "SdlEventSource::pollEvent(Common::Event&)",
  "SdlEventSource::processMouseEvent(Common::Event&, int, int, int, int)",
  "SdlEventSource::~SdlEventSource()",
  "SdlGraphicsManager::SdlGraphicsManager(SdlEventSource*, SdlWindow*)",
  "SdlGraphicsManager::activateManager()",
  "SdlGraphicsManager::createOrUpdateWindow(int, int, unsigned int)",
  "SdlGraphicsManager::deactivateManager()",
  "SdlGraphicsManager::defaultGraphicsModeConfig() const",
  "SdlGraphicsManager::getKeymap()",
  "SdlGraphicsManager::getPreferredFullscreenResolution()",
  "SdlGraphicsManager::getState() const",
  "SdlGraphicsManager::initSizeHint(Common::Array<Graphics::Mode> const&)",
  "SdlGraphicsManager::lockMouse(bool)",
  "SdlGraphicsManager::notifyActiveAreaChanged()",
  "SdlGraphicsManager::notifyEvent(Common::Event const&)",
  "SdlGraphicsManager::notifyMousePosition(Common::Point&)",
  "SdlGraphicsManager::saveScreenshot()",
  "SdlGraphicsManager::setState(SdlGraphicsManager::State const&)",
  "SdlGraphicsManager::setSystemMousePosition(int, int)",
  "SdlGraphicsManager::showMouse(bool)",
  "SdlGraphicsManager::showSystemMouseCursor(bool)",
  "SdlGraphicsManager::toggleFullScreen()",
  "SdlMixerManager::callbackHandler(unsigned char*, int)",
  "SdlMixerManager::getAudioSpec(unsigned int)",
  "SdlMixerManager::init()",
  "SdlMixerManager::resumeAudio()",
  "SdlMixerManager::sdlCallback(void*, unsigned char*, int)",
  "SdlMixerManager::startAudio()",
  "SdlMixerManager::suspendAudio()",
  "SdlMixerManager::~SdlMixerManager()",
  "SdlMutexInternal::~SdlMutexInternal()",
  "SdlTimerManager::SdlTimerManager()",
  "SdlTimerManager::~SdlTimerManager()",
  "SdlWindow::SdlWindow()",
  "SdlWindow::createOrUpdateWindow(int, int, unsigned int)",
  "SdlWindow::destroyWindow()",
  "SdlWindow::getDesktopResolution()",
  "SdlWindow::getDisplayDpi(float*, float*) const",
  "SdlWindow::getDisplayIndex() const",
  "SdlWindow::getDpiScalingFactor() const",
  "SdlWindow::getSDLWMInformation(SDL_SysWMinfo*) const",
  "SdlWindow::getSdlDpiScalingFactor() const",
  "SdlWindow::grabMouse(bool)",
  "SdlWindow::hasMouseFocus() const",
  "SdlWindow::iconifyWindow()",
  "SdlWindow::lockMouse(bool)",
  "SdlWindow::setMouseRect(Common::Rect const&)",
  "SdlWindow::setWindowCaption(Common::String const&)",
  "SdlWindow::setupIcon()",
  "SdlWindow::warpMouseInWindow(int, int)",
  "SdlWindow::~SdlWindow()",
  "SegaAudioInterface::MutexLock::MutexLock(SegaAudioInterfaceInternal*, int)",
  "SegaAudioInterface::MutexLock::~MutexLock()",
  "SegaAudioInterface::SegaAudioInterface(Audio::Mixer*, SegaAudioPluginDriver*)",
  "SegaAudioInterface::init()",
  "SegaAudioInterface::loadPCMData(unsigned short, unsigned char const*, unsigned short)",
  "SegaAudioInterface::playPCMChannel(unsigned char, unsigned char, unsigned short, unsigned short, unsigned char, unsigned char)",
  "SegaAudioInterface::psgWrite(unsigned char)",
  "SegaAudioInterface::readReg(unsigned char, unsigned char)",
  "SegaAudioInterface::reset()",
  "SegaAudioInterface::setMusicVolume(int)",
  "SegaAudioInterface::setSoundEffectChanMask(int)",
  "SegaAudioInterface::setSoundEffectVolume(int)",
  "SegaAudioInterface::stackLockMutex()",
  "SegaAudioInterface::stackUnlockMutex()",
  "SegaAudioInterface::stopPCMChannel(unsigned char)",
  "SegaAudioInterface::writeReg(unsigned char, unsigned char, unsigned char)",
  "SegaAudioInterface::~SegaAudioInterface()",
  "SegaAudioInterfaceInternal::SegaAudioInterfaceInternal(Audio::Mixer*, SegaAudioInterface*, SegaAudioPluginDriver*)",
  "SegaAudioInterfaceInternal::addNewRef(Audio::Mixer*, SegaAudioInterface*, SegaAudioPluginDriver*)",
  "SegaAudioInterfaceInternal::assignPluginDriver(SegaAudioInterface*, SegaAudioPluginDriver*, bool)",
  "SegaAudioInterfaceInternal::init()",
  "SegaAudioInterfaceInternal::loadPCMData(unsigned short, unsigned char const*, unsigned short)",
  "SegaAudioInterfaceInternal::nextTickEx(int*, unsigned int)",
  "SegaAudioInterfaceInternal::playPCMChannel(unsigned char, unsigned char, unsigned short, unsigned short, unsigned char, unsigned char)",
  "SegaAudioInterfaceInternal::psgWrite(unsigned char)",
  "SegaAudioInterfaceInternal::releaseRef(SegaAudioInterface*)",
  "SegaAudioInterfaceInternal::removePluginDriver(SegaAudioInterface*)",
  "SegaAudioInterfaceInternal::setMusicVolume(int)",
  "SegaAudioInterfaceInternal::setSoundEffectChanMask(int)",
  "SegaAudioInterfaceInternal::setSoundEffectVolume(int)",
  "SegaAudioInterfaceInternal::stopPCMChannel(unsigned char)",
  "SegaAudioInterfaceInternal::timerCallbackB()",
  "SegaAudioInterfaceInternal::~SegaAudioInterfaceInternal()",
  "SegaCDSoundPlugin::createInstance(MidiDriver**, unsigned int) const",
  "SegaCDSoundPlugin::getDevices() const",
  "SeqMusicPlugin::createInstance(MidiDriver**, unsigned int) const",
  "SeqMusicPlugin::getDevices() const",
  "SetDrawState",
  "SherlockMetaEngineDetection::~SherlockMetaEngineDetection()",
  "SkyMetaEngineDetection::detectGames(Common::FSList const&, unsigned int, bool)",
  "SkyMetaEngineDetection::getSupportedGames() const",
  "SludgeMetaEngineDetection::fallbackDetect(Common::HashMap<Common::String, Common::FSNode, Common::IgnoreCase_Hash, Common::IgnoreCase_EqualTo> const&, Common::FSList const&, ADDetectedGameExtraInfo**) const",
  "SludgeMetaEngineDetection::~SludgeMetaEngineDetection()",
  "SourceScaler::scaleIntern(unsigned char const*, unsigned int, unsigned char*, unsigned int, int, int, int, int)",
  "SourceScaler::setSource(unsigned char const*, unsigned int, int, int, int)",
  "StarTrekMetaEngineDetection::~StarTrekMetaEngineDetection()",
  "Stark::StarkMetaEngineDetection::~StarkMetaEngineDetection()",
  "StaticPlugin::~StaticPlugin()",
  "StaticPluginProvider::getPlugins()",
  "StdioStream::flush()",
  "StdioStream::makeFromPath(Common::String const&, bool)",
  "StdioStream::pos() const",
  "StdioStream::read(void*, unsigned int)",
  "StdioStream::seek(long long, int)",
  "StdioStream::size() const",
  "StdioStream::write(void const*, unsigned int)",
  "StdioStream::~StdioStream()",
  "StdioStream::~StdioStream().2",
  "SuperEaglePlugin::SuperEaglePlugin()",
  "SuperEaglePlugin::createInstance(Graphics::PixelFormat const&) const",
  "SuperSAIPlugin::SuperSAIPlugin()",
  "SuperSAIPlugin::createInstance(Graphics::PixelFormat const&) const",
  "SupernovaMetaEngineDetection::~SupernovaMetaEngineDetection()",
  "SurfaceSdlGraphicsManager::SDL_SetAlpha(SDL_Surface*, unsigned int, unsigned char)",
  "SurfaceSdlGraphicsManager::SDL_SetColorKey(SDL_Surface*, unsigned int, unsigned int)",
  "SurfaceSdlGraphicsManager::SDL_SetVideoMode(int, int, int, unsigned int)",
  "SurfaceSdlGraphicsManager::SDL_UpdateRects(SDL_Surface*, int, SDL_Rect*)",
  "SurfaceSdlGraphicsManager::SurfaceSdlGraphicsManager(SdlEventSource*, SdlWindow*)",
  "SurfaceSdlGraphicsManager::blitCursor()",
  "SurfaceSdlGraphicsManager::clearFocusRectangle()",
  "SurfaceSdlGraphicsManager::clearOverlay()",
  "SurfaceSdlGraphicsManager::copyRectToOverlay(void const*, int, int, int, int, int)",
  "SurfaceSdlGraphicsManager::copyRectToScreen(void const*, int, int, int, int, int)",
  "SurfaceSdlGraphicsManager::deinitializeRenderer()",
  "SurfaceSdlGraphicsManager::detectSupportedFormats()",
  "SurfaceSdlGraphicsManager::displayActivityIconOnOSD(Graphics::Surface const*)",
  "SurfaceSdlGraphicsManager::displayMessageOnOSD(Common::U32String const&)",
  "SurfaceSdlGraphicsManager::drawMouse()",
  "SurfaceSdlGraphicsManager::drawOSD()",
  "SurfaceSdlGraphicsManager::endGFXTransaction()",
  "SurfaceSdlGraphicsManager::fillScreen(unsigned int)",
  "SurfaceSdlGraphicsManager::fixupResolutionForAspectRatio(AspectRatio, int&, int&) const",
  "SurfaceSdlGraphicsManager::getDefaultScaler() const",
  "SurfaceSdlGraphicsManager::getSupportedFormats() const",
  "SurfaceSdlGraphicsManager::grabOverlay(Graphics::Surface&) const",
  "SurfaceSdlGraphicsManager::handleResizeImpl(int, int)",
  "SurfaceSdlGraphicsManager::handleScalerHotkeys(unsigned int, int)",
  "SurfaceSdlGraphicsManager::hotswapGFXMode()",
  "SurfaceSdlGraphicsManager::initSize(unsigned int, unsigned int, Graphics::PixelFormat const*)",
  "SurfaceSdlGraphicsManager::internUpdateScreen()",
  "SurfaceSdlGraphicsManager::loadGFXMode()",
  "SurfaceSdlGraphicsManager::lockScreen()",
  "SurfaceSdlGraphicsManager::notifyEvent(Common::Event const&)",
  "SurfaceSdlGraphicsManager::notifyResize(int, int)",
  "SurfaceSdlGraphicsManager::recreateScreenTexture()",
  "SurfaceSdlGraphicsManager::removeOSDMessage()",
  "SurfaceSdlGraphicsManager::saveScreenshot(Common::String const&) const",
  "SurfaceSdlGraphicsManager::setAspectRatioCorrection(bool)",
  "SurfaceSdlGraphicsManager::setCursorPalette(unsigned char const*, unsigned int, unsigned int)",
  "SurfaceSdlGraphicsManager::setFeatureState(OSystem::Feature, bool)",
  "SurfaceSdlGraphicsManager::setFilteringMode(bool)",
  "SurfaceSdlGraphicsManager::setFocusRectangle(Common::Rect const&)",
  "SurfaceSdlGraphicsManager::setFullscreenMode(bool)",
  "SurfaceSdlGraphicsManager::setGraphicsModeIntern()",
  "SurfaceSdlGraphicsManager::setMouseCursor(void const*, unsigned int, unsigned int, int, int, unsigned int, bool, Graphics::PixelFormat const*)",
  "SurfaceSdlGraphicsManager::setPalette(unsigned char const*, unsigned int, unsigned int)",
  "SurfaceSdlGraphicsManager::setScaler(unsigned int, int)",
  "SurfaceSdlGraphicsManager::setStretchMode(int)",
  "SurfaceSdlGraphicsManager::undrawMouse()",
  "SurfaceSdlGraphicsManager::unloadGFXMode()",
  "SurfaceSdlGraphicsManager::unlockScreen()",
  "SurfaceSdlGraphicsManager::updateOSD()",
  "SurfaceSdlGraphicsManager::updateScreen()",
  "SurfaceSdlGraphicsManager::~SurfaceSdlGraphicsManager()",
  "SurfaceSdlGraphicsManager::~SurfaceSdlGraphicsManager().2",
  "Sword25MetaEngineDetection::~Sword25MetaEngineDetection()",
  "Sword2MetaEngineDetection::~Sword2MetaEngineDetection()",
  "SwordMetaEngineDetection::~SwordMetaEngineDetection()",
  "SynthFile::AddInstr(unsigned int, unsigned int)",
  "SynthFile::AddWave(unsigned short, unsigned short, int, int, unsigned short, unsigned short, unsigned int, unsigned char*, Common::String)",
  "SynthFile::SynthFile(Common::String)",
  "SynthFile::~SynthFile()",
  "SynthInstr::AddRgn()",
  "SynthInstr::SynthInstr(unsigned int, unsigned int, Common::String)",
  "SynthInstr::~SynthInstr()",
  "SynthRgn::AddArt()",
  "SynthRgn::AddSampInfo()",
  "SynthSampInfo::SetLoopInfo(Loop&, VGMSamp*)",
  "SynthWave::AddSampInfo()",
  "SynthWave::ConvertTo16bitSigned()",
  "SynthWave::~SynthWave()",
  "T1_Done_Blend",
  "T1_Face_Done",
  "T1_Face_Initparse_encoding",
  "T1_Get_Advances",
  "T1_Get_MM_Var",
  "T1_GlyphSlot_Init",
  "T1_Load_Glyph",
  "T1_Parse_Glyph",
  "T1_Parse_Glyph_And_Get_Char_String",
  "T1_Read_Metrics",
  "T1_Read_PFM",
  "T1_Size_Done",
  "T1_Size_Init",
  "T1_Size_Request",
  "T42_Face_Done",
  "T42_Face_Init",
  "T42_GlyphSlot_Done",
  "T42_GlyphSlot_Init",
  "T42_GlyphSlot_Load",
  "T42_Size_Done",
  "T42_Size_Init",
  "T42_Size_Request",
  "T42_Size_Select",
  "TSageMetaEngineDetection::~TSageMetaEngineDetection()",
  "TT_Access_Glyph_Frame",
  "TT_Forget_Glyph_Frame",
  "TT_Get_MM_Var",
  "TT_Hint_Glyph",
  "TT_Load_Composite_Glyph",
  "TT_Load_Context",
  "TT_Load_Simple_Glyph",
  "TT_New_Context",
  "TT_Process_Composite_Glyph",
  "TT_Process_Simple_Glyph",
  "TT_RunIns",
  "TT_Set_MM_Blend",
  "TT_Set_Var_Design",
  "TT_Vary_Apply_Glyph_Deltas",
  "TVPlugin::TVPlugin()",
  "TVPlugin::createInstance(Graphics::PixelFormat const&) const",
  "TeenAgentMetaEngineDetection::~TeenAgentMetaEngineDetection()",
  "TestbedMetaEngineDetection::~TestbedMetaEngineDetection()",
  "TimidityMusicPlugin::createInstance(MidiDriver**, unsigned int) const",
  "TimidityMusicPlugin::getDevices() const",
  "TinselMetaEngineDetection::fallbackDetect(Common::HashMap<Common::String, Common::FSNode, Common::IgnoreCase_Hash, Common::IgnoreCase_EqualTo> const&, Common::FSList const&, ADDetectedGameExtraInfo**) const",
  "TinselMetaEngineDetection::~TinselMetaEngineDetection()",
  "TinyGL::BilinearTexelBuffer::BilinearTexelBuffer(Graphics::PixelBuffer const&, unsigned int, unsigned int, unsigned int)",
  "TinyGL::BlitImage::Line::operator=(TinyGL::BlitImage::Line const&)",
  "TinyGL::BlitImage::loadData(Graphics::Surface const&, unsigned int, bool)",
  "TinyGL::BlitImage::tglBlitZBuffer(int, int)",
  "TinyGL::BlittingDrawCall::execute(Common::Rect const&, bool) const",
  "TinyGL::BlittingDrawCall::execute(bool) const",
  "TinyGL::ClearBufferDrawCall::execute(Common::Rect const&, bool) const",
  "TinyGL::ClearBufferDrawCall::execute(bool) const",
  "TinyGL::FrameBuffer::FrameBuffer(int, int, Graphics::PixelFormat const&, bool)",
  "TinyGL::FrameBuffer::clear(int, int, int, int, int, int, bool, int)",
  "TinyGL::FrameBuffer::clearRegion(int, int, int, int, bool, int, bool, int, int, int, bool, int)",
  "TinyGL::FrameBuffer::fillLine(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "TinyGL::FrameBuffer::fillLineFlat(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "TinyGL::FrameBuffer::fillLineFlatZ(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "TinyGL::FrameBuffer::fillLineInterp(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "TinyGL::FrameBuffer::fillLineInterpZ(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "TinyGL::FrameBuffer::fillLineZ(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "TinyGL::FrameBuffer::fillTriangleFlat(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "TinyGL::FrameBuffer::fillTriangleSmooth(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "TinyGL::FrameBuffer::fillTriangleTextureMappingPerspectiveFlat(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "TinyGL::FrameBuffer::fillTriangleTextureMappingPerspectiveSmooth(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "TinyGL::FrameBuffer::plot(TinyGL::ZBufferPoint*)",
  "TinyGL::GLContext::debugDrawRectangle(Common::Rect, int, int, int)",
  "TinyGL::GLContext::deinit()",
  "TinyGL::GLContext::disposeDrawCallLists()",
  "TinyGL::GLContext::disposeResources()",
  "TinyGL::GLContext::endSharedState()",
  "TinyGL::GLContext::free_texture(TinyGL::GLTexture*)",
  "TinyGL::GLContext::free_texture(unsigned int)",
  "TinyGL::GLContext::gl_GetFloatv(int, float*)",
  "TinyGL::GLContext::gl_GetIntegerv(int, int*)",
  "TinyGL::GLContext::gl_add_op(TinyGL::GLParam*)",
  "TinyGL::GLContext::gl_draw_line(TinyGL::GLVertex*, TinyGL::GLVertex*)",
  "TinyGL::GLContext::gl_draw_point(TinyGL::GLVertex*)",
  "TinyGL::GLContext::gl_draw_triangle(TinyGL::GLVertex*, TinyGL::GLVertex*, TinyGL::GLVertex*)",
  "TinyGL::GLContext::gl_draw_triangle_clip(TinyGL::GLVertex*, TinyGL::GLVertex*, TinyGL::GLVertex*, int)",
  "TinyGL::GLContext::gl_draw_triangle_fill(TinyGL::GLContext*, TinyGL::GLVertex*, TinyGL::GLVertex*, TinyGL::GLVertex*)",
  "TinyGL::GLContext::gl_draw_triangle_line(TinyGL::GLContext*, TinyGL::GLVertex*, TinyGL::GLVertex*, TinyGL::GLVertex*)",
  "TinyGL::GLContext::gl_draw_triangle_point(TinyGL::GLContext*, TinyGL::GLVertex*, TinyGL::GLVertex*, TinyGL::GLVertex*)",
  "TinyGL::GLContext::gl_print_matrix(float const*)",
  "TinyGL::GLContext::gl_resizeImage(Graphics::PixelBuffer&, int, int, Graphics::PixelBuffer const&, int, int)",
  "TinyGL::GLContext::gl_resizeImageNoInterpolate(Graphics::PixelBuffer&, int, int, Graphics::PixelBuffer const&, int, int)",
  "TinyGL::GLContext::gl_shade_vertex(TinyGL::GLVertex*)",
  "TinyGL::GLContext::glopArrayElement(TinyGL::GLParam*)",
  "TinyGL::GLContext::glopCallList(TinyGL::GLParam*)",
  "TinyGL::GLContext::glopClear(TinyGL::GLParam*)",
  "TinyGL::GLContext::glopDrawArrays(TinyGL::GLParam*)",
  "TinyGL::GLContext::glopDrawElements(TinyGL::GLParam*)",
  "TinyGL::GLContext::glopEnd(TinyGL::GLParam*)",
  "TinyGL::GLContext::glopFog(TinyGL::GLParam*)",
  "TinyGL::GLContext::glopLightModel(TinyGL::GLParam*)",
  "TinyGL::GLContext::glopPixelStore(TinyGL::GLParam*)",
  "TinyGL::GLContext::glopTexEnv(TinyGL::GLParam*)",
  "TinyGL::GLContext::glopTexImage2D(TinyGL::GLParam*)",
  "TinyGL::GLContext::glopTexParameter(TinyGL::GLParam*)",
  "TinyGL::GLContext::glopVertex(TinyGL::GLParam*)",
  "TinyGL::GLContext::glopViewport(TinyGL::GLParam*)",
  "TinyGL::GLContext::init(int, int, Graphics::PixelFormat, int, bool, bool)",
  "TinyGL::GLContext::issueDrawCall(TinyGL::DrawCall*)",
  "TinyGL::GLContext::presentBufferDirtyRects(Common::List<Common::Rect>&)",
  "TinyGL::GLContext::presentBufferSimple(Common::List<Common::Rect>&)",
  "TinyGL::GLContext::specbuf_get_buffer(int, float)",
  "TinyGL::Internal::allocateFrame(int)",
  "TinyGL::Internal::tglBlit(TinyGL::BlitImage*, TinyGL::BlitTransform const&)",
  "TinyGL::Internal::tglBlitNoBlend(TinyGL::BlitImage*, TinyGL::BlitTransform const&)",
  "TinyGL::Internal::tglBlitZBuffer(TinyGL::BlitImage*, int, int)",
  "TinyGL::NearestTexelBuffer::NearestTexelBuffer(Graphics::PixelBuffer const&, unsigned int, unsigned int, unsigned int)",
  "TinyGL::NearestTexelBuffer::getARGBAt(unsigned int, unsigned int, unsigned int, unsigned char&, unsigned char&, unsigned char&, unsigned char&) const",
  "TinyGL::RasterizationDrawCall::RasterizationDrawCall()",
  "TinyGL::RasterizationDrawCall::execute(Common::Rect const&, bool) const",
  "TinyGL::RasterizationDrawCall::execute(bool) const",
  "TinyGL::TexelBuffer::getARGBAt(unsigned int, unsigned int, int, int, unsigned char&, unsigned char&, unsigned char&, unsigned char&) const",
  "TinyGL::copyToBuffer(Graphics::PixelFormat const&)",
  "TinyGL::createContext(int, int, Graphics::PixelFormat, int, bool, bool)",
  "TinyGL::destroyContext()",
  "TinyGL::glopArrayElement(TinyGL::GLContext*, TinyGL::GLParam*)",
  "TinyGL::glopCallList(TinyGL::GLContext*, TinyGL::GLParam*)",
  "TinyGL::glopClear(TinyGL::GLContext*, TinyGL::GLParam*)",
  "TinyGL::glopDrawArrays(TinyGL::GLContext*, TinyGL::GLParam*)",
  "TinyGL::glopDrawElements(TinyGL::GLContext*, TinyGL::GLParam*)",
  "TinyGL::glopEnd(TinyGL::GLContext*, TinyGL::GLParam*)",
  "TinyGL::glopFog(TinyGL::GLContext*, TinyGL::GLParam*)",
  "TinyGL::glopLightModel(TinyGL::GLContext*, TinyGL::GLParam*)",
  "TinyGL::glopPixelStore(TinyGL::GLContext*, TinyGL::GLParam*)",
  "TinyGL::glopTexEnv(TinyGL::GLContext*, TinyGL::GLParam*)",
  "TinyGL::glopTexImage2D(TinyGL::GLContext*, TinyGL::GLParam*)",
  "TinyGL::glopTexParameter(TinyGL::GLContext*, TinyGL::GLParam*)",
  "TinyGL::glopVertex(TinyGL::GLContext*, TinyGL::GLParam*)",
  "TinyGL::glopViewport(TinyGL::GLContext*, TinyGL::GLParam*)",
  "TinyGL::presentBuffer()",
  "TinyGL::presentBuffer(Common::List<Common::Rect>&)",
  "TitanicMetaEngineDetection::~TitanicMetaEngineDetection()",
  "ToltecsMetaEngineDetection::~ToltecsMetaEngineDetection()",
  "TonyMetaEngineDetection::~TonyMetaEngineDetection()",
  "ToonMetaEngineDetection::fallbackDetect(Common::HashMap<Common::String, Common::FSNode, Common::IgnoreCase_Hash, Common::IgnoreCase_EqualTo> const&, Common::FSList const&, ADDetectedGameExtraInfo**) const",
  "ToonMetaEngineDetection::~ToonMetaEngineDetection()",
  "ToucheMetaEngineDetection::fallbackDetect(Common::HashMap<Common::String, Common::FSNode, Common::IgnoreCase_Hash, Common::IgnoreCase_EqualTo> const&, Common::FSList const&, ADDetectedGameExtraInfo**) const",
  "ToucheMetaEngineDetection::~ToucheMetaEngineDetection()",
  "TownsAudioInterface::TownsAudioInterface(Audio::Mixer*, TownsAudioInterfacePluginDriver*, bool)",
  "TownsAudioInterface::callback(int, ...)",
  "TownsAudioInterface::init()",
  "TownsAudioInterface::setMusicVolume(int)",
  "TownsAudioInterface::setSoundEffectChanMask(int)",
  "TownsAudioInterface::setSoundEffectVolume(int)",
  "TownsAudioInterface::~TownsAudioInterface()",
  "TownsAudioInterfaceInternal::TownsAudioInterfaceInternal(Audio::Mixer*, TownsAudioInterface*, TownsAudioInterfacePluginDriver*, bool)",
  "TownsAudioInterfaceInternal::addNewRef(Audio::Mixer*, TownsAudioInterface*, TownsAudioInterfacePluginDriver*, bool)",
  "TownsAudioInterfaceInternal::assignPluginDriver(TownsAudioInterface*, TownsAudioInterfacePluginDriver*)",
  "TownsAudioInterfaceInternal::bufferedWriteReg(unsigned char, unsigned char, unsigned char)",
  "TownsAudioInterfaceInternal::callback(int, ...)",
  "TownsAudioInterfaceInternal::fmChanOff(int)",
  "TownsAudioInterfaceInternal::fmKeyOff(int)",
  "TownsAudioInterfaceInternal::fmKeyOn(int, int, int)",
  "TownsAudioInterfaceInternal::fmReset()",
  "TownsAudioInterfaceInternal::fmSetInstrument(int, int)",
  "TownsAudioInterfaceInternal::fmSetLevel(int, int)",
  "TownsAudioInterfaceInternal::fmSetPanPos(int, int)",
  "TownsAudioInterfaceInternal::fmSetPitch(int, int)",
  "TownsAudioInterfaceInternal::init()",
  "TownsAudioInterfaceInternal::intf_chanOff(void*&)",
  "TownsAudioInterfaceInternal::intf_enableTimerA(void*&)",
  "TownsAudioInterfaceInternal::intf_enableTimerB(void*&)",
  "TownsAudioInterfaceInternal::intf_fmKeyOff(void*&)",
  "TownsAudioInterfaceInternal::intf_fmKeyOn(void*&)",
  "TownsAudioInterfaceInternal::intf_fmReset(void*&)",
  "TownsAudioInterfaceInternal::intf_fmSetInstrument(void*&)",
  "TownsAudioInterfaceInternal::intf_fmSetLevel(void*&)",
  "TownsAudioInterfaceInternal::intf_fmSetPanPos(void*&)",
  "TownsAudioInterfaceInternal::intf_fmSetPitch(void*&)",
  "TownsAudioInterfaceInternal::intf_keyOff(void*&)",
  "TownsAudioInterfaceInternal::intf_keyOn(void*&)",
  "TownsAudioInterfaceInternal::intf_loadSamples(void*&)",
  "TownsAudioInterfaceInternal::intf_loadWaveTable(void*&)",
  "TownsAudioInterfaceInternal::intf_pcmPlayEffect(void*&)",
  "TownsAudioInterfaceInternal::intf_reset(void*&)",
  "TownsAudioInterfaceInternal::intf_setInstrument(void*&)",
  "TownsAudioInterfaceInternal::intf_setLevel(void*&)",
  "TownsAudioInterfaceInternal::intf_setPanPos(void*&)",
  "TownsAudioInterfaceInternal::intf_setPitch(void*&)",
  "TownsAudioInterfaceInternal::intf_setTimerA(void*&)",
  "TownsAudioInterfaceInternal::intf_setTimerB(void*&)",
  "TownsAudioInterfaceInternal::intf_unloadWaveTable(void*&)",
  "TownsAudioInterfaceInternal::intf_writeReg(void*&)",
  "TownsAudioInterfaceInternal::nextTickEx(int*, unsigned int)",
  "TownsAudioInterfaceInternal::processCommand(int, void*&)",
  "TownsAudioInterfaceInternal::releaseRef(TownsAudioInterface*)",
  "TownsAudioInterfaceInternal::removePluginDriver(TownsAudioInterface*)",
  "TownsAudioInterfaceInternal::setMusicVolume(int)",
  "TownsAudioInterfaceInternal::setSoundEffectChanMask(int)",
  "TownsAudioInterfaceInternal::setSoundEffectVolume(int)",
  "TownsAudioInterfaceInternal::timerCallbackA()",
  "TownsAudioInterfaceInternal::timerCallbackB()",
  "TownsAudioInterfaceInternal::updateOutputVolumeInternal()",
  "TownsAudioInterfaceInternal::~TownsAudioInterfaceInternal()",
  "TownsAudio_PCMChannel::loadData(unsigned char*, unsigned int)",
  "TownsAudio_WaveTable::readData(unsigned char const*)",
  "TownsEmuMusicPlugin::createInstance(MidiDriver**, unsigned int) const",
  "TownsEmuMusicPlugin::getDevices() const",
  "TownsPC98_AudioDriver::TownsPC98_AudioDriver(Audio::Mixer*, PC98AudioPluginDriver::EmuType)",
  "TownsPC98_AudioDriver::fadeStep()",
  "TownsPC98_AudioDriver::init()",
  "TownsPC98_AudioDriver::loadMusicData(unsigned char*, bool)",
  "TownsPC98_AudioDriver::loadSoundEffectData(unsigned char*, unsigned char)",
  "TownsPC98_AudioDriver::readReg(unsigned char, unsigned char)",
  "TownsPC98_AudioDriver::reset()",
  "TownsPC98_AudioDriver::setMusicTempo(unsigned char)",
  "TownsPC98_AudioDriver::setMusicVolume(int)",
  "TownsPC98_AudioDriver::setSfxTempo(unsigned short)",
  "TownsPC98_AudioDriver::setSoundEffectVolume(int)",
  "TownsPC98_AudioDriver::startSoundEffect()",
  "TownsPC98_AudioDriver::timerCallbackA()",
  "TownsPC98_AudioDriver::timerCallbackB()",
  "TownsPC98_AudioDriver::writeReg(unsigned char, unsigned char, unsigned char)",
  "TownsPC98_AudioDriver::~TownsPC98_AudioDriver()",
  "TownsPC98_FmSynth::TownsPC98_FmSynth(Audio::Mixer*, TownsPC98_FmSynth::EmuType)",
  "TownsPC98_FmSynth::deinit()",
  "TownsPC98_FmSynth::generateTables()",
  "TownsPC98_FmSynth::init()",
  "TownsPC98_FmSynth::readBuffer(short*, int)",
  "TownsPC98_FmSynth::readReg(unsigned char, unsigned char)",
  "TownsPC98_FmSynth::reset()",
  "TownsPC98_FmSynth::setLevelSSG(int)",
  "TownsPC98_FmSynth::setVolumeChannelMasks(int, int)",
  "TownsPC98_FmSynth::setVolumeIntern(int, int)",
  "TownsPC98_FmSynth::writeReg(unsigned char, unsigned char, unsigned char)",
  "TownsPC98_FmSynth::writeRegInternal(unsigned char, unsigned char, unsigned char)",
  "TownsPC98_FmSynth::~TownsPC98_FmSynth()",
  "TownsPC98_FmSynthPercussionSource::TownsPC98_FmSynthPercussionSource(unsigned int, unsigned int)",
  "TownsPC98_FmSynthSquareWaveSource::TownsPC98_FmSynthSquareWaveSource(unsigned int, unsigned int)",
  "TownsPC98_FmSynthSquareWaveSource::init(int const*, int const*)",
  "TownsPC98_FmSynthSquareWaveSource::nextTick(int*, unsigned int)",
  "TownsPC98_FmSynthSquareWaveSource::updateRegs()",
  "TownsPC98_FmSynthSquareWaveSource::writeReg(unsigned char, unsigned char, bool)",
  "TownsPC98_MusicChannel::TownsPC98_MusicChannel(TownsPC98_AudioDriver*, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)",
  "TownsPC98_MusicChannel::control_f0_setPatch(unsigned char)",
  "TownsPC98_MusicChannel::control_f1_presetOutputLevel(unsigned char)",
  "TownsPC98_MusicChannel::control_f4_setOutputLevel(unsigned char)",
  "TownsPC98_MusicChannel::control_f5_tempo(unsigned char)",
  "TownsPC98_MusicChannel::control_fa_writeReg(unsigned char)",
  "TownsPC98_MusicChannel::control_fb_incOutLevel(unsigned char)",
  "TownsPC98_MusicChannel::control_fc_decOutLevel(unsigned char)",
  "TownsPC98_MusicChannel::control_ff_endOfTrack(unsigned char)",
  "TownsPC98_MusicChannel::fadeStep()",
  "TownsPC98_MusicChannel::keyOff()",
  "TownsPC98_MusicChannel::keyOn()",
  "TownsPC98_MusicChannel::processControlEvent(unsigned char)",
  "TownsPC98_MusicChannel::processEvents()",
  "TownsPC98_MusicChannel::processFrequency()",
  "TownsPC98_MusicChannel::readReg(unsigned char, unsigned char)",
  "TownsPC98_MusicChannel::setOutputLevel()",
  "TownsPC98_MusicChannel::writeReg(unsigned char, unsigned char, unsigned char)",
  "TownsPC98_MusicChannel::~TownsPC98_MusicChannel()",
  "TownsPC98_MusicChannelPCM::TownsPC98_MusicChannelPCM(TownsPC98_AudioDriver*, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)",
  "TownsPC98_MusicChannelPCM::control_f1_prcStart(unsigned char)",
  "TownsPC98_MusicChannelPCM::processControlEvent(unsigned char)",
  "TownsPC98_MusicChannelPCM::processEvents()",
  "TownsPC98_MusicChannelPCM::~TownsPC98_MusicChannelPCM()",
  "TownsPC98_MusicChannelSSG::TownsPC98_MusicChannelSSG(TownsPC98_AudioDriver*, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)",
  "TownsPC98_MusicChannelSSG::control_ff_endOfTrack(unsigned char)",
  "TownsPC98_MusicChannelSSG::fadeStep()",
  "TownsPC98_MusicChannelSSG::keyOn()",
  "TownsPC98_MusicChannelSSG::loadData(unsigned char*)",
  "TownsPC98_MusicChannelSSG::processControlEvent(unsigned char)",
  "TownsPC98_MusicChannelSSG::processEvents()",
  "TownsPC98_MusicChannelSSG::processFrequency()",
  "TownsPC98_MusicChannelSSG::restore()",
  "TownsPC98_MusicChannelSSG::setOutputLevel(unsigned char)",
  "TownsPC98_MusicChannelSSG::~TownsPC98_MusicChannelSSG()",
  "TownsPC98_SfxChannel::~TownsPC98_SfxChannel()",
  "TrecisionMetaEngineDetection::~TrecisionMetaEngineDetection()",
  "TuckerMetaEngineDetection::fallbackDetect(Common::HashMap<Common::String, Common::FSNode, Common::IgnoreCase_Hash, Common::IgnoreCase_EqualTo> const&, Common::FSList const&, ADDetectedGameExtraInfo**) const",
  "TuckerMetaEngineDetection::~TuckerMetaEngineDetection()",
  "TwinEMetaEngineDetection::~TwinEMetaEngineDetection()",
  "UltimaMetaEngineDetection::UltimaMetaEngineDetection()",
  "UltimaMetaEngineDetection::~UltimaMetaEngineDetection()",
  "UpdateEventsForDeviceRemoval",
  "Update_Max",
  "VGMColl::CreateSF2File(VGMInstrSet*)",
  "VGMColl::CreateSynthFile(VGMInstrSet*)",
  "VGMColl::UnpackSampColl(SynthFile&, VGMSampColl*, Common::Array<VGMSamp*>&)",
  "VGMContainerItem::AddHeader(unsigned int, unsigned int, Common::String const&)",
  "VGMContainerItem::AddSimpleItem(unsigned int, unsigned int, Common::String const&)",
  "VGMContainerItem::VGMContainerItem()",
  "VGMContainerItem::VGMContainerItem(VGMFile*, unsigned int, unsigned int, Common::String)",
  "VGMContainerItem::~VGMContainerItem()",
  "VGMFile::GetBytes(unsigned int, unsigned int, void*)",
  "VGMFile::LoadVGMFile()",
  "VGMFile::VGMFile(RawFile*, unsigned int, unsigned int, Common::String)",
  "VGMHeader::VGMHeader(VGMItem*, unsigned int, unsigned int, Common::String const&)",
  "VGMHeader::~VGMHeader()",
  "VGMInstr::VGMInstr(VGMInstrSet*, unsigned int, unsigned int, unsigned int, unsigned int, Common::String const&)",
  "VGMInstr::~VGMInstr()",
  "VGMInstrSet::Load()",
  "VGMInstrSet::LoadInstrs()",
  "VGMInstrSet::VGMInstrSet(RawFile*, unsigned int, unsigned int, Common::String, VGMSampColl*)",
  "VGMInstrSet::~VGMInstrSet()",
  "VGMItem::GetByte(unsigned int)",
  "VGMItem::GetBytes(unsigned int, unsigned int, void*)",
  "VGMItem::GetShort(unsigned int)",
  "VGMItem::VGMItem(VGMFile*, unsigned int, unsigned int, Common::String)",
  "VGMItem::~VGMItem()",
  "VGMRgn::AddGeneralItem(unsigned int, unsigned int, Common::String const&)",
  "VGMRgn::AddKeyHigh(unsigned char, unsigned int, unsigned int)",
  "VGMRgn::AddKeyLow(unsigned char, unsigned int, unsigned int)",
  "VGMRgn::AddPan(unsigned char, unsigned int, unsigned int)",
  "VGMRgn::AddSampNum(int, unsigned int, unsigned int)",
  "VGMRgn::AddUnityKey(signed char, unsigned int, unsigned int)",
  "VGMRgn::AddVolume(double, unsigned int, unsigned int)",
  "VGMRgn::VGMRgn(VGMInstr*, unsigned int, unsigned int, Common::String)",
  "VGMRgn::~VGMRgn()",
  "VGMRgnItem::VGMRgnItem(VGMRgn*, VGMRgnItem::RgnItemType, unsigned int, unsigned int, Common::String const&)",
  "VGMRgnItem::~VGMRgnItem()",
  "VGMSamp::VGMSamp(VGMSampColl*, unsigned int, unsigned int, unsigned int, unsigned int, unsigned char, unsigned short, unsigned int, Common::String)",
  "VGMSamp::~VGMSamp()",
  "VGMSampColl::Load()",
  "VGMSampColl::VGMSampColl(RawFile*, VGMInstrSet*, unsigned int, unsigned int, Common::String)",
  "VGMSampColl::VGMSampColl(RawFile*, unsigned int, unsigned int, Common::String)",
  "VGMSampColl::~VGMSampColl()",
  "Vab::GetHeaderInfo()",
  "Vab::GetInstrPointers()",
  "Vab::Vab(RawFile*, unsigned int)",
  "Vab::~Vab()",
  "VabInstr::LoadInstr()",
  "VabInstr::VabInstr(VGMInstrSet*, unsigned int, unsigned int, unsigned int, unsigned int, Common::String const&)",
  "VabInstr::~VabInstr()",
  "VabRgn::LoadRgn()",
  "VabRgn::VabRgn(VabInstr*, unsigned int)",
  "VabRgn::~VabRgn()",
  "Video::AVIDecoder::AVIAudioTrack::AVIAudioTrack(Video::AVIDecoder::AVIStreamHeader const&, Video::AVIDecoder::PCMWaveFormat const&, Audio::Mixer::SoundType)",
  "Video::AVIDecoder::AVIAudioTrack::createAudioStream()",
  "Video::AVIDecoder::AVIAudioTrack::queueSound(Common::SeekableReadStream*)",
  "Video::AVIDecoder::AVIAudioTrack::resetStream()",
  "Video::AVIDecoder::AVIAudioTrack::rewind()",
  "Video::AVIDecoder::AVIAudioTrack::skipAudio(Audio::Timestamp const&, Audio::Timestamp const&)",
  "Video::AVIDecoder::AVIAudioTrack::~AVIAudioTrack()",
  "Video::AVIDecoder::AVIDecoder()",
  "Video::AVIDecoder::AVIDecoder(Common::Rational const&)",
  "Video::AVIDecoder::AVIVideoTrack::AVIVideoTrack(int, Video::AVIDecoder::AVIStreamHeader const&, Video::AVIDecoder::BitmapInfoHeader const&, unsigned char*)",
  "Video::AVIDecoder::AVIVideoTrack::canDither() const",
  "Video::AVIDecoder::AVIVideoTrack::createCodec()",
  "Video::AVIDecoder::AVIVideoTrack::decodeFrame(Common::SeekableReadStream*)",
  "Video::AVIDecoder::AVIVideoTrack::endOfTrack() const",
  "Video::AVIDecoder::AVIVideoTrack::getPalette() const",
  "Video::AVIDecoder::AVIVideoTrack::getPixelFormat() const",
  "Video::AVIDecoder::AVIVideoTrack::hasDirtyPalette() const",
  "Video::AVIDecoder::AVIVideoTrack::loadPaletteFromChunk(Common::SeekableReadStream*)",
  "Video::AVIDecoder::AVIVideoTrack::rewind()",
  "Video::AVIDecoder::AVIVideoTrack::setDither(unsigned char const*)",
  "Video::AVIDecoder::AVIVideoTrack::setReverse(bool)",
  "Video::AVIDecoder::AVIVideoTrack::~AVIVideoTrack()",
  "Video::AVIDecoder::addTrack(Video::VideoDecoder::Track*, bool)",
  "Video::AVIDecoder::checkTruemotion1()",
  "Video::AVIDecoder::close()",
  "Video::AVIDecoder::createAudioTrack(Video::AVIDecoder::AVIStreamHeader, Video::AVIDecoder::PCMWaveFormat)",
  "Video::AVIDecoder::decodeNextFrame()",
  "Video::AVIDecoder::decodeNextTransparency()",
  "Video::AVIDecoder::getAudioTrack(int)",
  "Video::AVIDecoder::handleList(unsigned int)",
  "Video::AVIDecoder::handleNextPacket(Video::AVIDecoder::TrackStatus&)",
  "Video::AVIDecoder::loadStream(Common::SeekableReadStream*)",
  "Video::AVIDecoder::parseNextChunk()",
  "Video::AVIDecoder::readNextPacket()",
  "Video::AVIDecoder::readOldIndex(unsigned int)Video::AVIDecoder::handleStreamHeader(unsigned int)",
  "Video::AVIDecoder::readPalette8(unsigned int)",
  "Video::AVIDecoder::readStreamName(unsigned int)",
  "Video::AVIDecoder::rewind()",
  "Video::AVIDecoder::seekIntern(Audio::Timestamp const&)",
  "Video::AVIDecoder::seekTransparencyFrame(int)",
  "Video::AVIDecoder::skipChunk(unsigned int)",
  "Video::AVIDecoder::~AVIDecoder()",
  "Video::AdvancedVMDDecoder::AdvancedVMDDecoder(Audio::Mixer::SoundType)",
  "Video::AdvancedVMDDecoder::VMDVideoTrack::decodeNextFrame()",
  "Video::AdvancedVMDDecoder::VMDVideoTrack::getPixelFormat() const",
  "Video::AdvancedVMDDecoder::close()",
  "Video::AdvancedVMDDecoder::loadStream(Common::SeekableReadStream*)",
  "Video::AdvancedVMDDecoder::setSurfaceMemory(void*, unsigned short, unsigned short, unsigned char)",
  "Video::AdvancedVMDDecoder::~AdvancedVMDDecoder()",
  "Video::BigHuffmanTree::BigHuffmanTree(Common::BitStreamImpl<Common::BitStreamMemoryStream, unsigned int, 8, false, false>&, int)",
  "Video::BinkDecoder::AudioInfo::~AudioInfo()",
  "Video::BinkDecoder::BinkAudioTrack::BinkAudioTrack(Video::BinkDecoder::AudioInfo&, Audio::Mixer::SoundType)",
  "Video::BinkDecoder::BinkAudioTrack::audioBlock(short*)",
  "Video::BinkDecoder::BinkAudioTrack::audioBlockDCT()",
  "Video::BinkDecoder::BinkAudioTrack::audioBlockRDFT()",
  "Video::BinkDecoder::BinkAudioTrack::decodePacket()",
  "Video::BinkDecoder::BinkAudioTrack::getFloat()",
  "Video::BinkDecoder::BinkAudioTrack::getRate()",
  "Video::BinkDecoder::BinkAudioTrack::readAudioCoeffs(float*)",
  "Video::BinkDecoder::BinkAudioTrack::seek(Audio::Timestamp const&)",
  "Video::BinkDecoder::BinkAudioTrack::skipSamples(Audio::Timestamp const&)",
  "Video::BinkDecoder::BinkAudioTrack::~BinkAudioTrack()",
  "Video::BinkDecoder::BinkDecoder()",
  "Video::BinkDecoder::BinkVideoTrack::BinkVideoTrack(unsigned int, unsigned int, Graphics::PixelFormat const&, unsigned int, Common::Rational const&, bool, bool, unsigned int)",
  "Video::BinkDecoder::BinkVideoTrack::blockInter(Video::BinkDecoder::BinkVideoTrack::DecodeContext&)",
  "Video::BinkDecoder::BinkVideoTrack::blockIntra(Video::BinkDecoder::BinkVideoTrack::DecodeContext&)",
  "Video::BinkDecoder::BinkVideoTrack::blockMotion(Video::BinkDecoder::BinkVideoTrack::DecodeContext&)",
  "Video::BinkDecoder::BinkVideoTrack::blockResidue(Video::BinkDecoder::BinkVideoTrack::DecodeContext&)",
  "Video::BinkDecoder::BinkVideoTrack::blockRun(Video::BinkDecoder::BinkVideoTrack::DecodeContext&)",
  "Video::BinkDecoder::BinkVideoTrack::blockScaled(Video::BinkDecoder::BinkVideoTrack::DecodeContext&)",
  "Video::BinkDecoder::BinkVideoTrack::blockScaledIntra(Video::BinkDecoder::BinkVideoTrack::DecodeContext&)",
  "Video::BinkDecoder::BinkVideoTrack::blockScaledRun(Video::BinkDecoder::BinkVideoTrack::DecodeContext&)",
  "Video::BinkDecoder::BinkVideoTrack::decodePacket(Video::BinkDecoder::VideoFrame&)",
  "Video::BinkDecoder::BinkVideoTrack::decodePlane(Video::BinkDecoder::VideoFrame&, int, bool)",
  "Video::BinkDecoder::BinkVideoTrack::getHuffmanSymbol(Video::BinkDecoder::VideoFrame&, Video::BinkDecoder::BinkVideoTrack::Huffman&)",
  "Video::BinkDecoder::BinkVideoTrack::initBundles()",
  "Video::BinkDecoder::BinkVideoTrack::initHuffman()",
  "Video::BinkDecoder::BinkVideoTrack::mergeHuffmanSymbols(Video::BinkDecoder::VideoFrame&, unsigned char*, unsigned char const*, int)",
  "Video::BinkDecoder::BinkVideoTrack::readBlockTypes(Video::BinkDecoder::VideoFrame&, Video::BinkDecoder::BinkVideoTrack::Bundle&)",
  "Video::BinkDecoder::BinkVideoTrack::readBundle(Video::BinkDecoder::VideoFrame&, Video::BinkDecoder::BinkVideoTrack::Source)",
  "Video::BinkDecoder::BinkVideoTrack::readBundleCount(Video::BinkDecoder::VideoFrame&, Video::BinkDecoder::BinkVideoTrack::Bundle&)",
  "Video::BinkDecoder::BinkVideoTrack::readColors(Video::BinkDecoder::VideoFrame&, Video::BinkDecoder::BinkVideoTrack::Bundle&)",
  "Video::BinkDecoder::BinkVideoTrack::readDCTCoeffs(Video::BinkDecoder::VideoFrame&, int*, bool)",
  "Video::BinkDecoder::BinkVideoTrack::readHuffman(Video::BinkDecoder::VideoFrame&, Video::BinkDecoder::BinkVideoTrack::Huffman&)",
  "Video::BinkDecoder::BinkVideoTrack::readMotionValues(Video::BinkDecoder::VideoFrame&, Video::BinkDecoder::BinkVideoTrack::Bundle&)",
  "Video::BinkDecoder::BinkVideoTrack::readPatterns(Video::BinkDecoder::VideoFrame&, Video::BinkDecoder::BinkVideoTrack::Bundle&)",
  "Video::BinkDecoder::BinkVideoTrack::readResidue(Video::BinkDecoder::VideoFrame&, short*, int)",
  "Video::BinkDecoder::BinkVideoTrack::readRuns(Video::BinkDecoder::VideoFrame&, Video::BinkDecoder::BinkVideoTrack::Bundle&)",
  "Video::BinkDecoder::BinkVideoTrack::rewind()",
  "Video::BinkDecoder::VideoFrame::~VideoFrame()",
  "Video::BinkDecoder::close()",
  "Video::BinkDecoder::getAudioTrack(int)",
  "Video::BinkDecoder::getFrameRate()",
  "Video::BinkDecoder::initAudioTrack(Video::BinkDecoder::AudioInfo&)",
  "Video::BinkDecoder::loadStream(Common::SeekableReadStream*)",
  "Video::BinkDecoder::readNextPacket()",
  "Video::BinkDecoder::seekIntern(Audio::Timestamp const&)",
  "Video::BinkDecoder::~BinkDecoder()",
  "Video::CoktelDecoder::close()",
  "Video::CoktelDecoder::createSurface()",
  "Video::CoktelDecoder::deLZ77(unsigned char*, unsigned char const*, unsigned int, unsigned int)",
  "Video::CoktelDecoder::disableSound()",
  "Video::CoktelDecoder::endOfVideo() const",
  "Video::CoktelDecoder::evaluateSeekFrame(int&, int) const",
  "Video::CoktelDecoder::finishSound()",
  "Video::CoktelDecoder::getExpectedFrameFromCurrentTime() const",
  "Video::CoktelDecoder::getSurface() const",
  "Video::CoktelDecoder::getTimeToNextFrame() const",
  "Video::CoktelDecoder::pauseVideo(bool)",
  "Video::CoktelDecoder::renderBlockSparse2Y(Graphics::Surface&, unsigned char const*, Common::Rect&)",
  "Video::CoktelDecoder::setSurfaceMemory()",
  "Video::CoktelDecoder::setSurfaceMemory(void*, unsigned short, unsigned short, unsigned char)",
  "Video::DPCMStream::endOfData() const",
  "Video::DPCMStream::readBuffer(short*, int)",
  "Video::DPCMStream::~DPCMStream()",
  "Video::DXADecoder::DXADecoder()",
  "Video::DXADecoder::DXAVideoTrack::decode12(int)",
  "Video::DXADecoder::DXAVideoTrack::decode13(int)",
  "Video::DXADecoder::DXAVideoTrack::decodeNextFrame()",
  "Video::DXADecoder::DXAVideoTrack::decodeZlib(unsigned char*, int, int)",
  "Video::DXADecoder::DXAVideoTrack::setFrameStartPos()",
  "Video::DXADecoder::DXAVideoTrack::~DXAVideoTrack()",
  "Video::DXADecoder::loadStream(Common::SeekableReadStream*)",
  "Video::DXADecoder::readSoundData(Common::SeekableReadStream*)",
  "Video::DXADecoder::~DXADecoder()",
  "Video::FlicDecoder::FlicDecoder()",
  "Video::FlicDecoder::FlicVideoTrack::FlicVideoTrack(Common::SeekableReadStream*, unsigned short, unsigned short, unsigned short, bool)",
  "Video::FlicDecoder::FlicVideoTrack::copyFrame(unsigned char*)",
  "Video::FlicDecoder::FlicVideoTrack::decodeDeltaFLC(unsigned char*)",
  "Video::FlicDecoder::FlicVideoTrack::decodeNextFrame()",
  "Video::FlicDecoder::FlicVideoTrack::endOfTrack() const",
  "Video::FlicDecoder::FlicVideoTrack::handleFrame()",
  "Video::FlicDecoder::FlicVideoTrack::readHeader()",
  "Video::FlicDecoder::FlicVideoTrack::rewind()",
  "Video::FlicDecoder::FlicVideoTrack::~FlicVideoTrack()",
  "Video::FlicDecoder::loadStream(Common::SeekableReadStream*)",
  "Video::FlicDecoder::~FlicDecoder()",
  "Video::HNMDecoder::APCAudioTrack::APCAudioTrack(unsigned int, unsigned char, Audio::Mixer::SoundType)",
  "Video::HNMDecoder::APCAudioTrack::decodeSound(unsigned short, unsigned char*, unsigned int)",
  "Video::HNMDecoder::APCAudioTrack::~APCAudioTrack()",
  "Video::HNMDecoder::DPCMAudioTrack::DPCMAudioTrack(unsigned short, unsigned short, unsigned int, bool, Audio::Mixer::SoundType)",
  "Video::HNMDecoder::DPCMAudioTrack::decodeSound(unsigned short, unsigned char*, unsigned int)",
  "Video::HNMDecoder::DPCMAudioTrack::~DPCMAudioTrack()",
  "Video::HNMDecoder::HNM45VideoTrack::HNM45VideoTrack(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned char const*)",
  "Video::HNMDecoder::HNM45VideoTrack::decodePalette(unsigned char*, unsigned int)",
  "Video::HNMDecoder::HNM4VideoTrack::HNM4VideoTrack(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned char const*)",
  "Video::HNMDecoder::HNM4VideoTrack::decodeChunk(unsigned char*, unsigned int, unsigned short, unsigned short)",
  "Video::HNMDecoder::HNM4VideoTrack::decodeInterframe(unsigned char*, unsigned int)",
  "Video::HNMDecoder::HNM4VideoTrack::decodeInterframeA(unsigned char*, unsigned int)",
  "Video::HNMDecoder::HNM4VideoTrack::decodeIntraframe(unsigned char*, unsigned int)",
  "Video::HNMDecoder::HNM4VideoTrack::presentFrame(unsigned short)",
  "Video::HNMDecoder::HNM5VideoTrack::decodeChunk(unsigned char*, unsigned int, unsigned short, unsigned short)",
  "Video::HNMDecoder::HNM5VideoTrack::decodeFrame(unsigned char*, unsigned int)",
  "Video::HNMDecoder::HNM6VideoTrack::HNM6VideoTrack(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, Graphics::PixelFormat const&)",
  "Video::HNMDecoder::HNM6VideoTrack::decodeChunk(unsigned char*, unsigned int, unsigned short, unsigned short)",
  "Video::HNMDecoder::HNM6VideoTrack::getPixelFormat() const",
  "Video::HNMDecoder::HNM6VideoTrack::~HNM6VideoTrack()",
  "Video::HNMDecoder::HNMDecoder(Graphics::PixelFormat const&, bool, unsigned char*)",
  "Video::HNMDecoder::HNMVideoTrack::endOfTrack() const",
  "Video::HNMDecoder::close()",
  "Video::HNMDecoder::loadStream(Common::SeekableReadStream*)",
  "Video::HNMDecoder::readNextPacket()",
  "Video::HNMDecoder::~HNMDecoder()",
  "Video::IMDDecoder::assessVideoProperties()",
  "Video::IMDDecoder::close()",
  "Video::IMDDecoder::emptySoundSlice(bool)",
  "Video::IMDDecoder::initialSoundSlice(bool)",
  "Video::IMDDecoder::loadCoordinates()",
  "Video::IMDDecoder::loadFrameTableOffsets(unsigned int&, unsigned int&)",
  "Video::IMDDecoder::loadFrameTables(unsigned int, unsigned int)",
  "Video::IMDDecoder::loadStream(Common::SeekableReadStream*)",
  "Video::IMDDecoder::nextSoundSlice(bool)",
  "Video::IMDDecoder::processFrame()",
  "Video::IMDDecoder::reloadStream(Common::SeekableReadStream*)",
  "Video::IMDDecoder::renderFrame(Common::Rect&)",
  "Video::IMDDecoder::seek(int, int, bool)",
  "Video::IMDDecoder::~IMDDecoder()",
  "Video::MPEGPSDecoder::MPEGPSDecoder(double)",
  "Video::MPEGPSDecoder::MPEGPSDemuxer::close()",
  "Video::MPEGPSDecoder::MPEGPSDemuxer::findNextStartCode(unsigned int&)",
  "Video::MPEGPSDecoder::MPEGPSDemuxer::getNextPacket(unsigned int, int&, unsigned int&, unsigned int&)",
  "Video::MPEGPSDecoder::MPEGPSDemuxer::loadStream(Common::SeekableReadStream*)",
  "Video::MPEGPSDecoder::MPEGPSDemuxer::parseProgramStreamMap(int)",
  "Video::MPEGPSDecoder::MPEGPSDemuxer::queueNextPacket()",
  "Video::MPEGPSDecoder::MPEGPSDemuxer::readNextPacketHeader(int&, unsigned int&, unsigned int&)",
  "Video::MPEGPSDecoder::MPEGPSDemuxer::readPTS(int)",
  "Video::MPEGPSDecoder::MPEGPSDemuxer::~MPEGPSDemuxer()",
  "Video::MPEGPSDecoder::MPEGVideoTrack::MPEGVideoTrack(Common::SeekableReadStream*, Graphics::PixelFormat const&)",
  "Video::MPEGPSDecoder::MPEGVideoTrack::findDimensions(Common::SeekableReadStream*, Graphics::PixelFormat const&)",
  "Video::MPEGPSDecoder::MPEGVideoTrack::sendPacket(Common::SeekableReadStream*, unsigned int, unsigned int)",
  "Video::MPEGPSDecoder::PS2AudioTrack::PS2AudioTrack(Common::SeekableReadStream*, Audio::Mixer::SoundType)",
  "Video::MPEGPSDecoder::PS2AudioTrack::sendPacket(Common::SeekableReadStream*, unsigned int, unsigned int)",
  "Video::MPEGPSDecoder::PS2AudioTrack::~PS2AudioTrack()",
  "Video::MPEGPSDecoder::addFirstVideoTrack()",
  "Video::MPEGPSDecoder::close()",
  "Video::MPEGPSDecoder::detectPrivateStreamType(Common::SeekableReadStream*)",
  "Video::MPEGPSDecoder::getStream(unsigned int, Common::SeekableReadStream*)",
  "Video::MPEGPSDecoder::loadStream(Common::SeekableReadStream*)",
  "Video::MPEGPSDecoder::readNextPacket()",
  "Video::MPEGPSDecoder::~MPEGPSDecoder()",
  "Video::MveDecoder::MveDecoder()",
  "Video::MveDecoder::MveVideoTrack::getHeight() const",
  "Video::MveDecoder::MveVideoTrack::getPixelFormat() const",
  "Video::MveDecoder::MveVideoTrack::getWidth() const",
  "Video::MveDecoder::applyPalette(PaletteManager*)",
  "Video::MveDecoder::copyBlock_16bit(Graphics::Surface&, Common::MemoryReadStream&, int)",
  "Video::MveDecoder::copyBlock_8bit(Graphics::Surface&, Common::MemoryReadStream&, int)",
  "Video::MveDecoder::decodeFormat10()Video::PacoDecoder::close()",
  "Video::MveDecoder::decodeFormat6()",
  "Video::MveDecoder::loadStream(Common::SeekableReadStream*)",
  "Video::MveDecoder::readNextPacket()",
  "Video::MveDecoder::readPacketHeader()",
  "Video::MveDecoder::~MveDecoder()",
  "Video::PSXStreamDecoder::PSXAudioTrack::PSXAudioTrack(Common::SeekableReadStream*, Audio::Mixer::SoundType)",
  "Video::PSXStreamDecoder::PSXAudioTrack::endOfTrack() const",
  "Video::PSXStreamDecoder::PSXAudioTrack::queueAudioFromSector(Common::SeekableReadStream*)",
  "Video::PSXStreamDecoder::PSXAudioTrack::~PSXAudioTrack()",
  "Video::PSXStreamDecoder::PSXStreamDecoder(Video::PSXStreamDecoder::CDSpeed, unsigned int)",
  "Video::PSXStreamDecoder::PSXVideoTrack::PSXVideoTrack(Common::SeekableReadStream*, Video::PSXStreamDecoder::CDSpeed, int)",
  "Video::PSXStreamDecoder::PSXVideoTrack::decodeBlock(Common::BitStreamImpl<Common::BitStreamMemoryStream, unsigned long long, 16, true, true>*, unsigned char*, int, unsigned short, unsigned short, Video::PSXStreamDecoder::PSXVideoTrack::PlaneType)",
  "Video::PSXStreamDecoder::PSXVideoTrack::decodeFrame(Common::BitStreamMemoryStream*, unsigned int)",
  "Video::PSXStreamDecoder::PSXVideoTrack::decodeMacroBlock(Common::BitStreamImpl<Common::BitStreamMemoryStream, unsigned long long, 16, true, true>*, int, int, unsigned short, unsigned short)",
  "Video::PSXStreamDecoder::PSXVideoTrack::readAC(Common::BitStreamImpl<Common::BitStreamMemoryStream, unsigned long long, 16, true, true>*, int*)",
  "Video::PSXStreamDecoder::PSXVideoTrack::readDC(Common::BitStreamImpl<Common::BitStreamMemoryStream, unsigned long long, 16, true, true>*, unsigned short, Video::PSXStreamDecoder::PSXVideoTrack::PlaneType)",
  "Video::PSXStreamDecoder::close()",
  "Video::PSXStreamDecoder::loadStream(Common::SeekableReadStream*)",
  "Video::PSXStreamDecoder::readNextPacket()",
  "Video::PSXStreamDecoder::readSector()",
  "Video::PSXStreamDecoder::~PSXStreamDecoder()",
  "Video::PacoDecoder::PacoAudioTrack::PacoAudioTrack(int)",
  "Video::PacoDecoder::PacoAudioTrack::queueSound(Common::SeekableReadStream*, unsigned int)",
  "Video::PacoDecoder::PacoAudioTrack::~PacoAudioTrack()",
  "Video::PacoDecoder::PacoDecoder()",
  "Video::PacoDecoder::PacoVideoTrack::PacoVideoTrack(unsigned short, unsigned short, unsigned short, unsigned short)",
  "Video::PacoDecoder::PacoVideoTrack::endOfTrack() const",
  "Video::PacoDecoder::PacoVideoTrack::handleFrame(Common::SeekableReadStream*, unsigned int, int)",
  "Video::PacoDecoder::PacoVideoTrack::handlePalette(Common::SeekableReadStream*)",
  "Video::PacoDecoder::getAudioSamplingRate()",
  "Video::PacoDecoder::getPalette()",
  "Video::PacoDecoder::loadStream(Common::SeekableReadStream*)",
  "Video::PacoDecoder::readNextPacket()",
  "Video::PacoDecoder::~PacoDecoder()",
  "Video::PreIMDDecoder::close()",
  "Video::PreIMDDecoder::decodeNextFrame()",
  "Video::PreIMDDecoder::loadStream(Common::SeekableReadStream*)",
  "Video::PreIMDDecoder::processFrame()",
  "Video::PreIMDDecoder::reloadStream(Common::SeekableReadStream*)",
  "Video::PreIMDDecoder::renderFrame()",
  "Video::PreIMDDecoder::seek(int, int, bool)",
  "Video::PreIMDDecoder::~PreIMDDecoder()",
  "Video::QuickTimeDecoder::AudioTrackHandler::updateBuffer()",
  "Video::QuickTimeDecoder::QuickTimeDecoder()",
  "Video::QuickTimeDecoder::VideoSampleDesc::initCodec()",
  "Video::QuickTimeDecoder::VideoSampleDesc::~VideoSampleDesc()",
  "Video::QuickTimeDecoder::VideoTrackHandler::VideoTrackHandler(Video::QuickTimeDecoder*, Common::QuickTimeParser::Track*)",
  "Video::QuickTimeDecoder::VideoTrackHandler::bufferNextFrame()",
  "Video::QuickTimeDecoder::VideoTrackHandler::decodeNextFrame()",
  "Video::QuickTimeDecoder::VideoTrackHandler::enterNewEditListEntry(bool, bool)",
  "Video::QuickTimeDecoder::VideoTrackHandler::forceDither(Graphics::Surface const&)",
  "Video::QuickTimeDecoder::VideoTrackHandler::getCurFrameDuration()",
  "Video::QuickTimeDecoder::VideoTrackHandler::getNextFramePacket(unsigned int&)",
  "Video::QuickTimeDecoder::VideoTrackHandler::getNextFrameStartTime() const",
  "Video::QuickTimeDecoder::VideoTrackHandler::getPixelFormat() const",
  "Video::QuickTimeDecoder::VideoTrackHandler::seek(Audio::Timestamp const&)",
  "Video::QuickTimeDecoder::VideoTrackHandler::setDither(unsigned char const*)",
  "Video::QuickTimeDecoder::VideoTrackHandler::setReverse(bool)",
  "Video::QuickTimeDecoder::close()",
  "Video::QuickTimeDecoder::decodeNextFrame()",
  "Video::QuickTimeDecoder::init()",
  "Video::QuickTimeDecoder::loadFile(Common::Path const&)",
  "Video::QuickTimeDecoder::loadStream(Common::SeekableReadStream*)",
  "Video::QuickTimeDecoder::readSampleDesc(Common::QuickTimeParser::Track*, unsigned int, unsigned int)",
  "Video::QuickTimeDecoder::updateAudioBuffer()",
  "Video::QuickTimeDecoder::~QuickTimeDecoder()",
  "Video::SRTParser::cleanup()",
  "Video::SRTParser::getSubtitle(unsigned int)",
  "Video::SRTParser::parseFile(char const*)",
  "Video::SRTParser::~SRTParser()",
  "Video::SmackerDecoder::SmackerAudioTrack::SmackerAudioTrack(Video::SmackerDecoder::AudioInfo const&, Audio::Mixer::SoundType)",
  "Video::SmackerDecoder::SmackerAudioTrack::queueCompressedBuffer(unsigned char*, unsigned int, unsigned int)",
  "Video::SmackerDecoder::SmackerAudioTrack::queuePCM(unsigned char*, unsigned int)",
  "Video::SmackerDecoder::SmackerAudioTrack::rewind()",
  "Video::SmackerDecoder::SmackerAudioTrack::~SmackerAudioTrack()",
  "Video::SmackerDecoder::SmackerDecoder()",
  "Video::SmackerDecoder::SmackerVideoTrack::SmackerVideoTrack(unsigned int, unsigned int, unsigned int, Common::Rational const&, unsigned int, unsigned int)",
  "Video::SmackerDecoder::SmackerVideoTrack::decodeFrame(Common::BitStreamImpl<Common::BitStreamMemoryStream, unsigned int, 8, false, false>&)",
  "Video::SmackerDecoder::SmackerVideoTrack::getNextDirtyRect()",
  "Video::SmackerDecoder::SmackerVideoTrack::readTrees(Common::BitStreamImpl<Common::BitStreamMemoryStream, unsigned int, 8, false, false>&, unsigned int, unsigned int, unsigned int, unsigned int)",
  "Video::SmackerDecoder::SmackerVideoTrack::unpackPalette(Common::SeekableReadStream*)",
  "Video::SmackerDecoder::close()",
  "Video::SmackerDecoder::createVideoTrack(unsigned int, unsigned int, unsigned int, Common::Rational const&, unsigned int, unsigned int) const",
  "Video::SmackerDecoder::forceSeekToFrame(unsigned int)",
  "Video::SmackerDecoder::getAudioTrack(int)",
  "Video::SmackerDecoder::getFrameRate() const",
  "Video::SmackerDecoder::getNextDirtyRect()",
  "Video::SmackerDecoder::handleAudioTrack(unsigned char, unsigned int, unsigned int)",
  "Video::SmackerDecoder::loadStream(Common::SeekableReadStream*)",
  "Video::SmackerDecoder::readNextPacket()",
  "Video::SmackerDecoder::rewind()",
  "Video::SmackerDecoder::~SmackerDecoder()",
  "Video::Subtitles::Subtitles()",
  "Video::Subtitles::drawSubtitle(unsigned int, bool)",
  "Video::Subtitles::loadSRTFile(char const*)",
  "Video::Subtitles::renderSubtitle()",
  "Video::Subtitles::setBBox(Common::Rect)",
  "Video::Subtitles::setFont(char const*, int)",
  "Video::Subtitles::~Subtitles()",
  "Video::ThreeDOMovieDecoder::StreamAudioTrack::StreamAudioTrack(unsigned int, unsigned int, unsigned int, Audio::Mixer::SoundType, unsigned int)",
  "Video::ThreeDOMovieDecoder::StreamAudioTrack::queueAudio(Common::SeekableReadStream*, unsigned int)",
  "Video::ThreeDOMovieDecoder::StreamAudioTrack::~StreamAudioTrack()",
  "Video::ThreeDOMovieDecoder::StreamVideoTrack::StreamVideoTrack(unsigned int, unsigned int, unsigned int, unsigned int)",
  "Video::ThreeDOMovieDecoder::StreamVideoTrack::decodeFrame(Common::SeekableReadStream*, unsigned int)",
  "Video::ThreeDOMovieDecoder::StreamVideoTrack::endOfTrack() const",
  "Video::ThreeDOMovieDecoder::StreamVideoTrack::getPixelFormat() const",
  "Video::ThreeDOMovieDecoder::StreamVideoTrack::~StreamVideoTrack()",
  "Video::ThreeDOMovieDecoder::ThreeDOMovieDecoder()",
  "Video::ThreeDOMovieDecoder::close()",
  "Video::ThreeDOMovieDecoder::loadStream(Common::SeekableReadStream*)",
  "Video::ThreeDOMovieDecoder::readNextPacket()",
  "Video::ThreeDOMovieDecoder::~ThreeDOMovieDecoder()",
  "Video::VMDDecoder::assessAudioProperties()",
  "Video::VMDDecoder::assessVideoProperties()",
  "Video::VMDDecoder::blit16(Graphics::Surface const&, Common::Rect&)",
  "Video::VMDDecoder::blit24(Graphics::Surface const&, Common::Rect&)",
  "Video::VMDDecoder::close()",
  "Video::VMDDecoder::colorModeChanged()",
  "Video::VMDDecoder::create16bitADPCM(Common::SeekableReadStream*)",
  "Video::VMDDecoder::create16bitDPCM(Common::SeekableReadStream*)",
  "Video::VMDDecoder::create8bitRaw(Common::SeekableReadStream*)",
  "Video::VMDDecoder::createAudioStream()",
  "Video::VMDDecoder::decodeNextFrame()",
  "Video::VMDDecoder::emptySoundSlice(unsigned int)",
  "Video::VMDDecoder::filledSoundSlice(unsigned int)",
  "Video::VMDDecoder::filledSoundSlice(unsigned int)Video::VMD_ADPCMStream::VMD_ADPCMStream(Common::SeekableReadStream*, DisposeAfterUse::Flag, int, int)",
  "Video::VMDDecoder::filledSoundSlices(unsigned int, unsigned int)",
  "Video::VMDDecoder::getEmbeddedFile(Common::String const&) const",
  "Video::VMDDecoder::getPixelFormat() const",
  "Video::VMDDecoder::loadStream(Common::SeekableReadStream*)",
  "Video::VMDDecoder::openExternalCodec()",
  "Video::VMDDecoder::processFrame()",
  "Video::VMDDecoder::readFiles()",
  "Video::VMDDecoder::readFrameTable(int&)",
  "Video::VMDDecoder::reloadStream(Common::SeekableReadStream*)",
  "Video::VMDDecoder::renderFrame(Common::Rect&)",
  "Video::VMDDecoder::seek(int, int, bool)",
  "Video::VMDDecoder::~VMDDecoder()",
  "Video::VMD_ADPCMStream::VMD_ADPCMStream(Common::SeekableReadStream*, DisposeAfterUse::Flag, int, int)",
  "Video::VMD_ADPCMStream::~VMD_ADPCMStream()",
  "Video::VideoDecoder::AudioTrack::endOfTrack() const",
  "Video::VideoDecoder::AudioTrack::pauseIntern(bool)",
  "Video::VideoDecoder::AudioTrack::setMute(bool)",
  "Video::VideoDecoder::AudioTrack::setVolume(unsigned char)",
  "Video::VideoDecoder::AudioTrack::start()",
  "Video::VideoDecoder::AudioTrack::start(Audio::Timestamp const&)",
  "Video::VideoDecoder::AudioTrack::stop()",
  "Video::VideoDecoder::FixedRateVideoTrack::getDuration() const",
  "Video::VideoDecoder::FixedRateVideoTrack::getFrameAtTime(Audio::Timestamp const&) const",
  "Video::VideoDecoder::FixedRateVideoTrack::getFrameTime(unsigned int) const",
  "Video::VideoDecoder::FixedRateVideoTrack::getNextFrameStartTime() const",
  "Video::VideoDecoder::RewindableAudioTrack::getAudioStream() const",
  "Video::VideoDecoder::SeekableAudioTrack::seek(Audio::Timestamp const&)",
  "Video::VideoDecoder::StreamFileAudioTrack::loadFromFile(Common::String const&)",
  "Video::VideoDecoder::StreamFileAudioTrack::~StreamFileAudioTrack()",
  "Video::VideoDecoder::Track::pause(bool)",
  "Video::VideoDecoder::Track::rewind()",
  "Video::VideoDecoder::VideoDecoder()",
  "Video::VideoDecoder::VideoTrack::endOfTrack() const",
  "Video::VideoDecoder::addStreamFileTrack(Common::String const&)",
  "Video::VideoDecoder::addTrack(Video::VideoDecoder::Track*, bool)",
  "Video::VideoDecoder::close()",
  "Video::VideoDecoder::decodeNextFrame()",
  "Video::VideoDecoder::endOfVideo() const",
  "Video::VideoDecoder::endOfVideoTracks() const",
  "Video::VideoDecoder::findNextVideoTrack()",
  "Video::VideoDecoder::getAudioTrackCount() const",
  "Video::VideoDecoder::getCurFrame() const",
  "Video::VideoDecoder::getDuration() const",
  "Video::VideoDecoder::getFrameCount() const",
  "Video::VideoDecoder::getHeight() const",
  "Video::VideoDecoder::getPixelFormat() const",
  "Video::VideoDecoder::getTime() const",
  "Video::VideoDecoder::getTimeToNextFrame() const",
  "Video::VideoDecoder::getWidth() const",
  "Video::VideoDecoder::hasAudio() const",
  "Video::VideoDecoder::hasFramesLeft() const",
  "Video::VideoDecoder::isRewindable() const",
  "Video::VideoDecoder::isSeekable() const",
  "Video::VideoDecoder::loadFile(Common::Path const&)",
  "Video::VideoDecoder::needsUpdate() const",
  "Video::VideoDecoder::pauseVideo(bool)",
  "Video::VideoDecoder::resetPauseStartTime()",
  "Video::VideoDecoder::rewind()",
  "Video::VideoDecoder::seek(Audio::Timestamp const&)",
  "Video::VideoDecoder::seekToFrame(unsigned int)",
  "Video::VideoDecoder::setAudioTrack(int)",
  "Video::VideoDecoder::setBalance(signed char)",
  "Video::VideoDecoder::setDitheringPalette(unsigned char const*)",
  "Video::VideoDecoder::setEndFrame(unsigned int)",
  "Video::VideoDecoder::setEndTime(Audio::Timestamp const&)",
  "Video::VideoDecoder::setRate(Common::Rational const&)",
  "Video::VideoDecoder::setReverse(bool)",
  "Video::VideoDecoder::setSoundType(Audio::Mixer::SoundType)",
  "Video::VideoDecoder::setVolume(unsigned char)",
  "Video::VideoDecoder::start()",
  "Video::VideoDecoder::startAudio()",
  "Video::VideoDecoder::startAudioLimit(Audio::Timestamp const&)",
  "Video::VideoDecoder::stop()",
  "Video::VideoDecoder::stopAudio()",
  "VoyeurMetaEngineDetection::~VoyeurMetaEngineDetection()",
  "WageMetaEngineDetection::~WageMetaEngineDetection()",
  "WaveCheckFormat",
  "WaveReadFormat",
  "WaveReadPartialChunkData",
  "WindowedGraphicsManager::convertVirtualToWindow(int, int) const",
  "WindowedGraphicsManager::convertWindowToVirtual(int, int) const",
  "WindowedGraphicsManager::hideOverlay()",
  "WindowedGraphicsManager::populateDisplayAreaDrawRect(int, int, int, Common::Rect&) const",
  "WindowedGraphicsManager::recalculateDisplayAreas()",
  "WindowedGraphicsManager::setShakePos(int, int)",
  "WindowedGraphicsManager::showOverlay(bool)",
  "WindowedGraphicsManager::warpMouse(int, int)",
  "Wintermute::WintermuteMetaEngineDetection::fallbackDetect(Common::HashMap<Common::String, Common::FSNode, Common::IgnoreCase_Hash, Common::IgnoreCase_EqualTo> const&, Common::FSList const&, ADDetectedGameExtraInfo**) const",
  "Wintermute::WintermuteMetaEngineDetection::~WintermuteMetaEngineDetection()",
  "XeenMetaEngineDetection::~XeenMetaEngineDetection()",
  "ZVisionMetaEngineDetection::~ZVisionMetaEngineDetection()",
  "_GLOBAL__I_000100",
  "__asctime_r",
  "__crypt_r",
  "__crypt_sha256",
  "__crypt_sha512",
  "__cxa_bad_cast",
  "__cxa_bad_typeid",
  "__cxa_can_catch",
  "__cxa_decrement_exception_refcount",
  "__cxa_demangle",
  "__cxa_increment_exception_refcount",
  "__cxa_is_pointer_type",
  "__cxa_rethrow_primary_exception",
  "__cxa_throw_bad_array_new_length",
  "__cxx_global_array_dtor",
  "__cxx_global_array_dtor.4",
  "__cxx_global_var_init",
  "__cxxabiv1::(anonymous namespace)::DtorsManager::~DtorsManager()",
  "__cxxabiv1::(anonymous namespace)::run_dtors(void*)",
  "__cxxabiv1::__base_class_type_info::has_unambiguous_public_base(__cxxabiv1::__dynamic_cast_info*, void*, int) const",
  "__cxxabiv1::__base_class_type_info::search_above_dst(__cxxabiv1::__dynamic_cast_info*, void const*, void const*, int, bool) const",
  "__cxxabiv1::__base_class_type_info::search_below_dst(__cxxabiv1::__dynamic_cast_info*, void const*, int, bool) const",
  "__cxxabiv1::__class_type_info::can_catch(__cxxabiv1::__shim_type_info const*, void*&) const",
  "__cxxabiv1::__pbase_type_info::can_catch(__cxxabiv1::__shim_type_info const*, void*&) const",
  "__cxxabiv1::__pointer_to_member_type_info::can_catch(__cxxabiv1::__shim_type_info const*, void*&) const",
  "__cxxabiv1::__pointer_to_member_type_info::can_catch_nested(__cxxabiv1::__shim_type_info const*) const",
  "__cxxabiv1::__pointer_type_info::can_catch(__cxxabiv1::__shim_type_info const*, void*&) const",
  "__cxxabiv1::__pointer_type_info::can_catch_nested(__cxxabiv1::__shim_type_info const*) const",
  "__cxxabiv1::__si_class_type_info::has_unambiguous_public_base(__cxxabiv1::__dynamic_cast_info*, void*, int) const",
  "__cxxabiv1::__si_class_type_info::search_above_dst(__cxxabiv1::__dynamic_cast_info*, void const*, void const*, int, bool) const",
  "__cxxabiv1::__si_class_type_info::search_below_dst(__cxxabiv1::__dynamic_cast_info*, void const*, int, bool) const",
  "__cxxabiv1::__vmi_class_type_info::has_unambiguous_public_base(__cxxabiv1::__dynamic_cast_info*, void*, int) const",
  "__cxxabiv1::__vmi_class_type_info::search_above_dst(__cxxabiv1::__dynamic_cast_info*, void const*, void const*, int, bool) const",
  "__cxxabiv1::__vmi_class_type_info::search_below_dst(__cxxabiv1::__dynamic_cast_info*, void const*, int, bool) const",
  "__dl_invalid_handle",
  "__dl_seterr",
  "__dl_vseterr",
  "__dlsym",
  "__dynamic_cast",
  "__emutls_get_address",
  "__fclose_ca",
  "__fgetwc_unlocked",
  "__fgetwc_unlocked_internal",
  "__floatscan",
  "__fputwc_unlocked",
  "__fseeko",
  "__fseeko_unlocked",
  "__fseeko_unlockedfread",
  "__ftello",
  "__ftello_unlocked",
  "__fwritex",
  "__get_resolv_conf",
  "__getopt_long",
  "__getopt_long_core",
  "__getopt_msg",
  "__intscan",
  "__lookup_serv",
  "__netlink_enumerate",
  "__overflow",
  "__pthread_once",
  "__ptsname_r",
  "__qsort_r",
  "__res_msend",
  "__res_msend_rc",
  "__res_send",
  "__rtnetlink_enumerate",
  "__shgetc",
  "__small_fprintf",
  "__small_printf",
  "__small_sprintf",
  "__small_vfprintf",
  "__small_vsnprintf",
  "__small_vsprintf",
  "__synccall",
  "__toread",
  "__uflow",
  "__vfprintf_internal",
  "__vsyslog",
  "__wasi_fd_sync",
  "__wasm_call_ctors",
  "_bdf_add_property",
  "_bdf_list_split",
  "_bdf_parse_glyphs",
  "_bdf_parse_properties",
  "_bdf_parse_start",
  "_bdf_set_default_spacing",
  "_dlopen_js",
  "_emscripten_errf",
  "_emscripten_outf",
  "_flushlbf",
  "_pthread_cleanup_pop",
  "_tt_check_patents_in_range",
  "_vsyslog",
  "access_virt_barray",
  "access_virt_sarray",
  "add_audio_device",
  "add_huff_table",
  "addk(FuncState*, lua_TValue*, lua_TValue*)",
  "addmntent",
  "adjust_assign(LexState*, int, int, expdesc*)",
  "af_autofitter_load_glyph",
  "af_axis_hints_new_edge",
  "af_cjk_hints_apply",
  "af_cjk_hints_detect_features",
  "af_cjk_metrics_init",
  "af_cjk_metrics_init_widths",
  "af_dummy_hints_apply",
  "af_face_globals_free",
  "af_face_globals_new",
  "af_get_char_index",
  "af_glyph_hints_done",
  "af_glyph_hints_reload",
  "af_indic_hints_apply",
  "af_indic_metrics_init",
  "af_latin_hints_apply",
  "af_latin_hints_compute_segments",
  "af_latin_hints_detect_features",
  "af_latin_metrics_init",
  "af_property_get",
  "af_property_set",
  "afm_parser_done",
  "afm_parser_init",
  "afm_parser_parse",
  "afm_parser_read_vals",
  "alGetProcAddress",
  "alcGetProcAddress",
  "alloc_barray",
  "alloc_sarray",
  "alloc_small",
  "arith_encode",
  "asctime",
  "asprintf",
  "assignment(LexState*, LHS_assign*, int)",
  "atof",
  "auxresume(lua_State*, lua_State*, int)",
  "auxsort(lua_State*, int, int)",
  "auxupvalue(lua_State*, int)",
  "bdf_free_font",
  "bdf_interpret_style",
  "block(LexState*)",
  "body(LexState*, expdesc*, int, int)",
  "bool MT32Emu::Partial::doProduceOutput<float, MT32Emu::LA32FloatPartialPair>(float*, float*, unsigned int, MT32Emu::LA32FloatPartialPair*)",
  "bool MT32Emu::Partial::doProduceOutput<short, MT32Emu::LA32IntPartialPair>(short*, short*, unsigned int, MT32Emu::LA32IntPartialPair*)",
  "bool MT32Emu::Partial::generateNextSample<MT32Emu::LA32FloatPartialPair>(MT32Emu::LA32FloatPartialPair*)",
  "bool MT32Emu::Partial::generateNextSample<MT32Emu::LA32IntPartialPair>(MT32Emu::LA32IntPartialPair*)",
  "bool OpenGL::LibRetro::PresetParser::lookUpValue<unsigned int, int>(Common::String const&, unsigned int*, int const&)",
  "bool std::__2::has_facet[abi:v15006]<std::__2::codecvt<char, char, __mbstate_t>>(std::__2::locale const&)",
  "bool std::__2::operator==[abi:v15006]<char, std::__2::char_traits<char>>(std::__2::istreambuf_iterator<char, std::__2::char_traits<char>> const&, std::__2::istreambuf_iterator<char, std::__2::char_traits<char>> const&)",
  "bool std::__2::operator==[abi:v15006]<wchar_t, std::__2::char_traits<wchar_t>>(std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>> const&, std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>> const&)",
  "bsearch",
  "build_ycc_rgb_table",
  "call",
  "call_binTM(lua_State*, lua_TValue const*, lua_TValue const*, lua_TValue*, TMS)",
  "call_once",
  "call_orderTM(lua_State*, lua_TValue const*, lua_TValue const*, TMS)",
  "callallgcTM(lua_State*, void*)",
  "cf2_arrstack_push",
  "cf2_builder_cubeTo",
  "cf2_builder_lineTo",
  "cf2_decoder_parse_charstrings",
  "cf2_doFlex",
  "cf2_doStems",
  "cf2_freeSeacComponent",
  "cf2_getSeacComponent",
  "cf2_glyphpath_closeOpenPath",
  "cf2_glyphpath_curveTo",
  "cf2_glyphpath_lineTo",
  "cf2_glyphpath_moveTo",
  "cf2_glyphpath_pushPrevElem",
  "cf2_hintmap_build",
  "cf2_interpT2CharString",
  "cff_builder_start_point",
  "cff_charset_load",
  "cff_cmap_unicode_char_index",
  "cff_cmap_unicode_char_next",
  "cff_cmap_unicode_done",
  "cff_cmap_unicode_init",
  "cff_encoding_load",
  "cff_face_done",
  "cff_face_init",
  "cff_get_advances",
  "cff_get_cmap_info",
  "cff_get_glyph_name",
  "cff_get_interface",
  "cff_get_kerning",
  "cff_get_name_index",
  "cff_get_ps_name",
  "cff_get_ros",
  "cff_glyph_load",
  "cff_index_access_element",
  "cff_index_done",
  "cff_index_get_name",
  "cff_index_get_pointers",
  "cff_index_get_sid_string",
  "cff_index_init",
  "cff_parser_run",
  "cff_sid_to_glyph_name",
  "cff_size_done",
  "cff_size_init",
  "cff_size_request",
  "cff_size_select",
  "cff_slot_init",
  "cff_subfont_load",
  "char const* std::__2::__find_end_classic[abi:v15006]<char const*, char const*, bool (char, char) noexcept>(char const*, char const*, char const*, char const*, bool (&)(char, char) noexcept)",
  "char const* std::__2::__find_first_of_ce<char const*, char const*, bool (&)(char, char) noexcept>(char const*, char const*, char const*, char const*, bool (&)(char, char) noexcept)",
  "check_match(LexState*, int, int, int)",
  "check_type1_format",
  "chunk(LexState*)",
  "cid_face_done",
  "cid_face_init",
  "cid_hex_to_binary",
  "cid_load_glyph",
  "cid_parse_font_matrix",
  "cid_size_done",
  "cid_size_init",
  "cid_size_request",
  "cid_slot_init",
  "cid_slot_load_glyph",
  "close_audio_device",
  "close_func(LexState*)",
  "close_state(lua_State*)",
  "codearith(FuncState*, OpCode, expdesc*, expdesc*)",
  "compress",
  "compress2",
  "compress_data",
  "compress_first_pass",
  "compress_output",
  "condjump(FuncState*, OpCode, int, int, int)",
  "confstr",
  "constructor(LexState*, expdesc*)",
  "consume_data",
  "consume_markers",
  "cookieclose",
  "cookieread",
  "cookieseek",
  "cookiewrite",
  "copySDLSurface(SDL_Surface*)",
  "copy_pixel_rows",
  "createSdlMutexInternal()",
  "createThumbnailFromScreen(Graphics::Surface*)",
  "create_colorindex",
  "crypt",
  "ctime",
  "ctime_r",
  "db_debug(lua_State*)",
  "db_errorfb(lua_State*)",
  "db_gethook(lua_State*)",
  "db_getinfo(lua_State*)",
  "db_getlocal(lua_State*)",
  "db_getmetatable(lua_State*)",
  "db_getupvalue(lua_State*)",
  "db_setfenv(lua_State*)",
  "db_sethook(lua_State*)",
  "db_setlocal(lua_State*)",
  "db_setmetatable(lua_State*)",
  "db_setupvalue(lua_State*)",
  "dcgettext",
  "dcngettext",
  "debug(char const*, ...)",
  "debug(int, char const*, ...)",
  "debugC(int, unsigned int, char const*, ...)",
  "debugC(unsigned int, char const*, ...)",
  "debugCN(int, unsigned int, char const*, ...)",
  "debugCN(unsigned int, char const*, ...)",
  "debugChannelSet(int, unsigned int)",
  "debugN(char const*, ...)",
  "debugN(int, char const*, ...)",
  "debug_print",
  "decfloat",
  "decltype(std::declval<bool (&)(char, char) noexcept>()(std::declval<char const&>(), std::declval<char const&>())) std::__2::__invoke[abi:v15006]<bool (&)(char, char) noexcept, char const&, char const&>(bool (&)(char, char) noexcept, char const&, char const&)",
  "decltype(std::declval<bool (&)(wchar_t, wchar_t) noexcept>()(std::declval<wchar_t const&>(), std::declval<wchar_t const&>())) std::__2::__invoke[abi:v15006]<bool (&)(wchar_t, wchar_t) noexcept, wchar_t const&, wchar_t const&>(bool (&)(wchar_t, wchar_t) noexcept, wchar_t const&, wchar_t const&)",
  "decltype(std::declval<std::__2::(anonymous namespace)::__fake_bind>()()) std::__2::__invoke[abi:v15006]<std::__2::(anonymous namespace)::__fake_bind>(std::__2::(anonymous namespace)::__fake_bind&&)",
  "decode_gamma",
  "decode_mcu",
  "decode_mcu_AC_first",
  "decode_mcu_AC_refine",
  "decode_mcu_DC_first",
  "decode_mcu_DC_refine",
  "decode_mcu_sub",
  "decompress_data",
  "decompress_onepass",
  "decompress_smooth_data",
  "defaultErrorHandler(char const*)",
  "defaultOutputFormatter(char*, char const*, unsigned long)",
  "deflate",
  "deflateCopy",
  "deflateEnd",
  "deflateInit2_",
  "deflateInit_",
  "deflateParams",
  "demangling_unexpected_handler()",
  "destroy_face",
  "destroy_size",
  "dgettext",
  "discharge2reg(FuncState*, expdesc*, int)",
  "dlclose",
  "dlopen",
  "dlopen_js_onerror",
  "dlopen_js_onsuccess",
  "dlsym",
  "dngettext",
  "do_getc",
  "do_getc.2",
  "do_glob",
  "do_nftw",
  "do_putc",
  "do_putc.2",
  "dollarNormalize",
  "double std::__2::(anonymous namespace)::as_float<double, std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>>>(std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>> const&, std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>> const&, unsigned long*)",
  "double std::__2::(anonymous namespace)::as_float<double, std::__2::basic_string<wchar_t, std::__2::char_traits<wchar_t>, std::__2::allocator<wchar_t>>>(std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>> const&, std::__2::basic_string<wchar_t, std::__2::char_traits<wchar_t>, std::__2::allocator<wchar_t>> const&, unsigned long*)",
  "double std::__2::(anonymous namespace)::as_float_helper<double, std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>>, double (*)(char const*, char**)>(std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>> const&, std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>> const&, unsigned long*, double (*)(char const*, char**))",
  "double std::__2::(anonymous namespace)::as_float_helper<double, std::__2::basic_string<wchar_t, std::__2::char_traits<wchar_t>, std::__2::allocator<wchar_t>>, double (*)(wchar_t const*, wchar_t**)>(std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>> const&, std::__2::basic_string<wchar_t, std::__2::char_traits<wchar_t>, std::__2::allocator<wchar_t>> const&, unsigned long*, double (*)(wchar_t const*, wchar_t**))",
  "double std::__2::__do_strtod[abi:v15006]<double>(char const*, char**)",
  "double std::__2::__num_get_float<double>(char const*, char const*, unsigned int&)",
  "dprintf",
  "dynCall_di",
  "dynCall_fif",
  "dynCall_fiii",
  "dynCall_i",
  "dynCall_id",
  "dynCall_ii",
  "dynCall_iidiiii",
  "dynCall_iii",
  "dynCall_iiii",
  "dynCall_iiiii",
  "dynCall_iiiiiddynCall_fi",
  "dynCall_iiiiii",
  "dynCall_iiiiiidiiff",
  "dynCall_iiiiiii",
  "dynCall_iiiiiiii",
  "dynCall_iiiiiiiiidynCall_vif",
  "dynCall_iiiiiiiiii",
  "dynCall_iiiiiiiiiiiiiiff",
  "dynCall_iiiiiijj",
  "dynCall_iiiiij",
  "dynCall_iiiiijj",
  "dynCall_iiji",
  "dynCall_ji",
  "dynCall_jiji",
  "dynCall_v",
  "dynCall_vi",
  "dynCall_viffff",
  "dynCall_vii",
  "dynCall_viif",
  "dynCall_viii",
  "dynCall_viiii",
  "dynCall_viiiiiii",
  "dynCall_viiiiiiii",
  "dynCall_viiiiiiiii",
  "dynCall_viiiiiiiiii",
  "dynCall_viiiiiiiiiii",
  "dynCall_viiiiiiiiiiii",
  "dynCall_viijii",
  "ecvt",
  "emit_bits_e",
  "emit_buffered_bits",
  "emit_dht",
  "emit_dqt",
  "emit_eobrun",
  "emit_header",
  "emit_message",
  "emit_restart",
  "emit_restart_e",
  "emit_sof",
  "empty_mem_output_buffer",
  "emscripten_console_errorf",
  "emscripten_console_logf",
  "emscripten_console_warnf",
  "emscripten_scan_stack",
  "emscripten_sleep",
  "encode_mcu",
  "encode_mcu_AC_first",
  "encode_mcu_AC_refine",
  "encode_mcu_DC_first",
  "encode_mcu_DC_refine",
  "encode_mcu_gather",
  "endmntent",
  "ensure_init",
  "err",
  "error",
  "error(char const*, ...)",
  "error_exit",
  "errx",
  "ether_ntoa",
  "ether_ntoa_r",
  "examine_app0",
  "exp2reg(FuncState*, expdesc*, int)",
  "f_Ccall(lua_State*, void*)",
  "f_call(lua_State*, void*)",
  "f_flush(lua_State*)",
  "f_lines(lua_State*)",
  "f_luaopen(lua_State*, void*)",
  "f_parser(lua_State*, void*)",
  "f_read(lua_State*)",
  "f_seek(lua_State*)",
  "f_setvbuf(lua_State*)",
  "f_write(lua_State*)",
  "fclose",
  "fcvt",
  "fflush",
  "fgetc",
  "fgetln",
  "fgetpos",
  "fgets",
  "fgetwc",
  "fgetws",
  "field(LexState*, expdesc*)",
  "fill_input_buffer",
  "fill_mem_input_buffer",
  "finish_input_pass",
  "finish_output_bmp",
  "finish_output_pass",
  "finish_output_ppm",
  "finish_output_tga",
  "finish_pass",
  "finish_pass_gather",
  "finish_pass_huff",
  "finish_pass_master",
  "fiprintf",
  "float std::__2::(anonymous namespace)::as_float<float, std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>>>(std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>> const&, std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>> const&, unsigned long*)",
  "float std::__2::(anonymous namespace)::as_float<float, std::__2::basic_string<wchar_t, std::__2::char_traits<wchar_t>, std::__2::allocator<wchar_t>>>(std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>> const&, std::__2::basic_string<wchar_t, std::__2::char_traits<wchar_t>, std::__2::allocator<wchar_t>> const&, unsigned long*)",
  "float std::__2::(anonymous namespace)::as_float_helper<float, std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>>, float (*)(char const*, char**)>(std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>> const&, std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>> const&, unsigned long*, float (*)(char const*, char**))",
  "float std::__2::(anonymous namespace)::as_float_helper<float, std::__2::basic_string<wchar_t, std::__2::char_traits<wchar_t>, std::__2::allocator<wchar_t>>, float (*)(wchar_t const*, wchar_t**)>(std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>> const&, std::__2::basic_string<wchar_t, std::__2::char_traits<wchar_t>, std::__2::allocator<wchar_t>> const&, unsigned long*, float (*)(wchar_t const*, wchar_t**))",
  "float std::__2::__do_strtod[abi:v15006]<float>(char const*, char**)",
  "float std::__2::__num_get_float<float>(char const*, char const*, unsigned int&)",
  "flush_bits_e",
  "fmt_fp",
  "fmtmsg",
  "fnt_font_load",
  "forbody(LexState*, int, int, int, int)",
  "foreach(lua_State*)",
  "foreachi(lua_State*)",
  "forkpty",
  "format_message",
  "forward_DCT",
  "forward_DCT_float",
  "fprintf",
  "fputc",
  "fputs",
  "fputwc",
  "fputws",
  "fread",
  "free_pool",
  "freopen",
  "fscanf",
  "fseek",
  "fsetpos",
  "fsync",
  "ft_add_renderer",
  "ft_ansi_stream_close",
  "ft_ansi_stream_io",
  "ft_bitmap_glyph_copy",
  "ft_bitmap_glyph_done",
  "ft_bitmap_glyph_init",
  "ft_black_done",
  "ft_black_new",
  "ft_black_render",
  "ft_glyphslot_alloc_bitmap",
  "ft_glyphslot_done",
  "ft_glyphslot_free_bitmap",
  "ft_glyphslot_set_bitmap",
  "ft_gzip_alloc",
  "ft_gzip_check_header",
  "ft_gzip_file_fill_output",
  "ft_gzip_file_io",
  "ft_gzip_free",
  "ft_gzip_stream_close",
  "ft_gzip_stream_io",
  "ft_lzw_stream_close",
  "ft_lzw_stream_io",
  "ft_lzwstate_done",
  "ft_lzwstate_get_code",
  "ft_lzwstate_io",
  "ft_mem_alloc",
  "ft_mem_dup",
  "ft_mem_free",
  "ft_mem_qalloc",
  "ft_mem_qrealloc",
  "ft_mem_realloc",
  "ft_module_get_service",
  "ft_outline_glyph_copy",
  "ft_outline_glyph_done",
  "ft_outline_glyph_init",
  "ft_raster1_init",
  "ft_raster1_render",
  "ft_raster1_set_mode",
  "ft_smooth_init",
  "ft_smooth_render",
  "ft_smooth_render_generic",
  "ft_smooth_render_lcd",
  "ft_smooth_render_lcd_v",
  "ft_smooth_set_mode",
  "ft_stroke_border_conicto",
  "ft_stroke_border_cubicto",
  "ft_stroke_border_lineto",
  "ft_stroker_arcto",
  "ft_stroker_cap",
  "ft_stroker_inside",
  "ft_stroker_outside",
  "ft_stroker_subpath_start",
  "ft_var_readpackeddeltas",
  "ft_var_readpackedpoints",
  "ftc_basic_family_get_count",
  "ftc_basic_family_load_bitmap",
  "ftc_basic_family_load_glyph",
  "ftc_basic_gnode_compare_faceid",
  "ftc_cache_done",
  "ftc_cache_init",
  "ftc_cache_resize",
  "ftc_cmap_node_free",
  "ftc_cmap_node_new",
  "ftc_face_node_done",
  "ftc_face_node_init",
  "ftc_gcache_done",
  "ftc_gcache_init",
  "ftc_inode_free",
  "ftc_inode_new",
  "ftc_node_destroy",
  "ftc_sbit_copy_bitmap",
  "ftc_scaler_lookup_size",
  "ftc_size_node_done",
  "ftc_size_node_init",
  "ftc_size_node_reset",
  "ftc_snode_compare",
  "ftc_snode_free",
  "ftc_snode_load",
  "ftc_snode_new",
  "ftell",
  "funcargs(LexState*, expdesc*)",
  "fwprintf",
  "fwrite",
  "fwscanf",
  "g_ACCESS_DETECTION_getObject()",
  "g_ADLIB_getObject()",
  "g_ADL_DETECTION_getObject()",
  "g_ADVMAME_getObject()",
  "g_AGI_DETECTION_getObject()",
  "g_AGOS_DETECTION_getObject()",
  "g_AGS_DETECTION_getObject()",
  "g_AMIGA_getObject()",
  "g_APPLEIIGS_getObject()",
  "g_ASYLUM_DETECTION_getObject()",
  "g_AUTO_getObject()",
  "g_AVALANCHE_DETECTION_getObject()",
  "g_BBVS_DETECTION_getObject()",
  "g_BLADERUNNER_DETECTION_getObject()",
  "g_BURIED_DETECTION_getObject()",
  "g_C64_getObject()",
  "g_CGE2_DETECTION_getObject()",
  "g_CGE_DETECTION_getObject()",
  "g_CHEWY_DETECTION_getObject()",
  "g_CINE_DETECTION_getObject()",
  "g_CMS_getObject()",
  "g_COMPOSER_DETECTION_getObject()",
  "g_CRUISE_DETECTION_getObject()",
  "g_CRYOMNI3D_DETECTION_getObject()",
  "g_CRYO_DETECTION_getObject()",
  "g_DIRECTOR_DETECTION_getObject()",
  "g_DM_DETECTION_getObject()",
  "g_DOTMATRIX_getObject()",
  "g_DRACI_DETECTION_getObject()",
  "g_DRAGONS_DETECTION_getObject()",
  "g_DRASCULA_DETECTION_getObject()",
  "g_DREAMWEB_DETECTION_getObject()",
  "g_EDGE_getObject()",
  "g_FREESCAPE_DETECTION_getObject()",
  "g_GLK_DETECTION_getObject()",
  "g_GNAP_DETECTION_getObject()",
  "g_GOB_DETECTION_getObject()",
  "g_GRIFFON_DETECTION_getObject()",
  "g_GRIM_DETECTION_getObject()",
  "g_GROOVIE_DETECTION_getObject()",
  "g_HADESCH_DETECTION_getObject()",
  "g_HDB_DETECTION_getObject()",
  "g_HOPKINS_DETECTION_getObject()",
  "g_HQ_getObject()",
  "g_HUGO_DETECTION_getObject()",
  "g_HYPNO_DETECTION_getObject()",
  "g_ICB_DETECTION_getObject()",
  "g_ILLUSIONS_DETECTION_getObject()",
  "g_KINGDOM_DETECTION_getObject()",
  "g_KYRA_DETECTION_getObject()",
  "g_LAB_DETECTION_getObject()",
  "g_LASTEXPRESS_DETECTION_getObject()",
  "g_LILLIPUT_DETECTION_getObject()",
  "g_LURE_DETECTION_getObject()",
  "g_MACVENTURE_DETECTION_getObject()",
  "g_MADE_DETECTION_getObject()",
  "g_MADS_DETECTION_getObject()",
  "g_MOHAWK_DETECTION_getObject()",
  "g_MORTEVIELLE_DETECTION_getObject()",
  "g_MT32_getObject()",
  "g_MTROPOLIS_DETECTION_getObject()",
  "g_MUTATIONOFJB_DETECTION_getObject()",
  "g_MYST3_DETECTION_getObject()",
  "g_NANCY_DETECTION_getObject()",
  "g_NEVERHOOD_DETECTION_getObject()",
  "g_NGI_DETECTION_getObject()",
  "g_NORMAL_getObject()",
  "g_NULL_getObject()",
  "g_PARALLACTION_DETECTION_getObject()",
  "g_PC98_getObject()",
  "g_PCJR_getObject()",
  "g_PCSPK_getObject()",
  "g_PEGASUS_DETECTION_getObject()",
  "g_PETKA_DETECTION_getObject()",
  "g_PINK_DETECTION_getObject()",
  "g_PLAYGROUND3D_DETECTION_getObject()",
  "g_PLUMBERS_DETECTION_getObject()",
  "g_PM_getObject()",
  "g_PRINCE_DETECTION_getObject()",
  "g_PRIVATE_DETECTION_getObject()",
  "g_QUEEN_DETECTION_getObject()",
  "g_SAGA2_DETECTION_getObject()",
  "g_SAGA_DETECTION_getObject()",
  "g_SAI_getObject()",
  "g_SCI_DETECTION_getObject()",
  "g_SCUMM_DETECTION_getObject()",
  "g_SEGACD_getObject()",
  "g_SEQ_getObject()",
  "g_SHERLOCK_DETECTION_getObject()",
  "g_SKY_DETECTION_getObject()",
  "g_SLUDGE_DETECTION_getObject()",
  "g_STARK_DETECTION_getObject()",
  "g_STARTREK_DETECTION_getObject()",
  "g_SUPEREAGLE_getObject()",
  "g_SUPERNOVA_DETECTION_getObject()",
  "g_SUPERSAI_getObject()",
  "g_SWORD1_DETECTION_getObject()",
  "g_SWORD25_DETECTION_getObject()",
  "g_SWORD2_DETECTION_getObject()",
  "g_TEENAGENT_DETECTION_getObject()",
  "g_TESTBED_DETECTION_getObject()",
  "g_TIMIDITY_getObject()",
  "g_TINSEL_DETECTION_getObject()",
  "g_TITANIC_DETECTION_getObject()",
  "g_TOLTECS_DETECTION_getObject()",
  "g_TONY_DETECTION_getObject()",
  "g_TOON_DETECTION_getObject()",
  "g_TOUCHE_DETECTION_getObject()",
  "g_TOWNS_getObject()",
  "g_TRECISION_DETECTION_getObject()",
  "g_TSAGE_DETECTION_getObject()",
  "g_TUCKER_DETECTION_getObject()",
  "g_TV_getObject()",
  "g_TWINE_DETECTION_getObject()",
  "g_ULTIMA_DETECTION_getObject()",
  "g_VOYEUR_DETECTION_getObject()",
  "g_WAGE_DETECTION_getObject()",
  "g_WINTERMUTE_DETECTION_getObject()",
  "g_XEEN_DETECTION_getObject()",
  "g_ZVISION_DETECTION_getObject()",
  "gctm(lua_State*)",
  "gcvt",
  "generatePreferredTarget(ADGameDescription const*, int, Common::String)",
  "generateUnknownGameReport(Common::Array<DetectedGame> const&, bool, bool, unsigned int)",
  "generateUnknownGameReport(DetectedGame const&, bool, bool, unsigned int)",
  "generic_reader(lua_State*, void*, unsigned long*)",
  "getDesiredAspectRatio()",
  "getF(lua_State*, void*, unsigned long*)",
  "getFilePropertiesIntern(unsigned int, Common::HashMap<Common::String, Common::FSNode, Common::IgnoreCase_Hash, Common::IgnoreCase_EqualTo> const&, ADGameDescription const&, Common::String const&, FileProperties&)",
  "get_16bit_row",
  "get_24bit_row",
  "get_32bit_row",
  "get_8bit_gray_row",
  "get_8bit_row",
  "get_interesting_appn",
  "get_memory_row",
  "get_raw_row",
  "get_scaled_gray_row",
  "get_sof",
  "get_text_gray_row",
  "get_text_rgb_row",
  "get_word_rgb_row",
  "getc",
  "getc_unlocked",
  "getchar",
  "getchar_unlocked",
  "getdelim",
  "getfunc(lua_State*, int)",
  "gethooktable(lua_State*)",
  "getifaddrs",
  "getline",
  "getmntent",
  "getmntent_r",
  "getn(lua_State*)",
  "getopt",
  "getopt_long",
  "getopt_long_only",
  "gets",
  "getservbyname",
  "getservbyname_r",
  "getsizes(lua_State*)",
  "gettext",
  "getw",
  "getwc",
  "getwchar",
  "gfind_nodef(lua_State*)",
  "gladLoadGL",
  "gladLoadGLES",
  "gladLoadGLES1UserPtr",
  "gladLoadGLES2",
  "gladLoadGLES2UserPtr",
  "gladLoadGLUserPtr",
  "glad_gl_get_extensions(int, char const**, unsigned int*, char***)",
  "glad_gl_load_GL_KHR_debug(void (* (*)(void*, char const*))(), void*)",
  "glob",
  "gmatch(lua_State*)",
  "gmatch_aux(lua_State*)",
  "grabScreen565(Graphics::Surface*)",
  "gray_convert_glyph",
  "gray_convert_glyph_inner",
  "gray_hline",
  "gray_raster_done",
  "gray_raster_new",
  "gray_raster_render",
  "growCI(lua_State*)",
  "gz_avail",
  "gz_comp",
  "gz_decomp",
  "gz_error",
  "gz_fetch",
  "gz_init",
  "gz_look",
  "gz_open",
  "gz_read",
  "gz_write",
  "gz_zero",
  "gzclose",
  "gzclose_r",
  "gzclose_w",
  "gzdirect",
  "gzdopen",
  "gzflush",
  "gzfread",
  "gzfwrite",
  "gzgetc",
  "gzgetc_",
  "gzgets",
  "gzopen",
  "gzopen64",
  "gzprintf",
  "gzputc",
  "gzputs",
  "gzread",
  "gzsetparams",
  "gzungetc",
  "gzvprintf",
  "gzwrite",
  "hash_init",
  "hash_insert",
  "herror",
  "hexfloat",
  "hookf(lua_State*, lua_Debug*)",
  "if_nameindex",
  "image_memory_write",
  "inclinenumber(LexState*)",
  "inet_ntoa",
  "inet_ntop",
  "inflate",
  "inflateBack",
  "inflateBackEnd",
  "inflateBackInit_",
  "inflateCopy",
  "inflateEnd",
  "inflateInit2_",
  "inflateInit_",
  "inflateReset2",
  "inflateSetDictionary",
  "inflate_flush",
  "initCommonGFX()",
  "initGraphics(int, int)",
  "initGraphics(int, int, Common::List<Graphics::PixelFormat> const&)",
  "initGraphics(int, int, Graphics::PixelFormat const*)",
  "initGraphics3d(int, int)",
  "initGraphicsModes(Common::Array<Graphics::Mode> const&)",
  "init_destination",
  "init_error_limit",
  "int Audio::Paula::readBufferIntern<false>(short*, int)",
  "int Audio::Paula::readBufferIntern<true>(short*, int)",
  "int Common::sprintf_s<char, 20ul>(char (&) [20ul], char const*, ...)",
  "int Common::sprintf_s<char, 8ul>(char (&) [8ul], char const*, ...)",
  "int std::__2::(anonymous namespace)::as_integer<int, std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>>>(std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>> const&, std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>> const&, unsigned long*, int)",
  "int std::__2::(anonymous namespace)::as_integer<int, std::__2::basic_string<wchar_t, std::__2::char_traits<wchar_t>, std::__2::allocator<wchar_t>>>(std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>> const&, std::__2::basic_string<wchar_t, std::__2::char_traits<wchar_t>, std::__2::allocator<wchar_t>> const&, unsigned long*, int)",
  "int std::__2::__get_up_to_n_digits<char, char*>(char*&, char*, unsigned int&, std::__2::ctype<char> const&, int)",
  "int std::__2::__get_up_to_n_digits<char, std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>>(std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>&, std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>, unsigned int&, std::__2::ctype<char> const&, int)",
  "int std::__2::__get_up_to_n_digits<wchar_t, std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>>(std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>&, std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>, unsigned int&, std::__2::ctype<wchar_t> const&, int)",
  "int std::__2::__get_up_to_n_digits<wchar_t, wchar_t*>(wchar_t*&, wchar_t*, unsigned int&, std::__2::ctype<wchar_t> const&, int)",
  "invoke_ii",
  "invoke_iii",
  "invoke_iiii",
  "invoke_iiiii",
  "invoke_vi",
  "invoke_vii",
  "invoke_viiii",
  "io_close(lua_State*)",
  "io_fclose(lua_State*)",
  "io_flush(lua_State*)",
  "io_gc(lua_State*)",
  "io_input(lua_State*)",
  "io_lines(lua_State*)",
  "io_noclose(lua_State*)",
  "io_open(lua_State*)",
  "io_output(lua_State*)",
  "io_pclose(lua_State*)",
  "io_popen(lua_State*)",
  "io_read(lua_State*)",
  "io_readline(lua_State*)",
  "io_tmpfile(lua_State*)",
  "io_tostring(lua_State*)",
  "io_type(lua_State*)",
  "io_write(lua_State*)",
  "ipairsaux(lua_State*)",
  "iprintf",
  "jcopy_markers_execute",
  "jcopy_markers_setup",
  "jinit_1pass_quantizer",
  "jinit_2pass_quantizer",
  "jinit_arith_decoder",
  "jinit_arith_encoder",
  "jinit_c_coef_controller",
  "jinit_c_main_controller",
  "jinit_c_master_control",
  "jinit_c_prep_controller",
  "jinit_color_converter",
  "jinit_color_deconverter",
  "jinit_compress_master",
  "jinit_d_coef_controller",
  "jinit_d_main_controller",
  "jinit_d_post_controller",
  "jinit_downsampler",
  "jinit_forward_dct",
  "jinit_huff_decoder",
  "jinit_huff_encoder",
  "jinit_input_controller",
  "jinit_inverse_dct",
  "jinit_marker_reader",
  "jinit_marker_writer",
  "jinit_master_decompress",
  "jinit_memory_mgr",
  "jinit_merged_upsampler",
  "jinit_read_bmp",
  "jinit_read_gif",
  "jinit_read_ppm",
  "jinit_read_targa",
  "jinit_upsampler",
  "jinit_write_bmp",
  "jinit_write_gif",
  "jinit_write_ppm",
  "jinit_write_targa",
  "jpeg_CreateCompress",
  "jpeg_CreateDecompress",
  "jpeg_abort",
  "jpeg_abort_compress",
  "jpeg_abort_decompress",
  "jpeg_add_quant_table",
  "jpeg_alloc_huff_table",
  "jpeg_alloc_quant_table",
  "jpeg_calc_jpeg_dimensions",
  "jpeg_calc_output_dimensions",
  "jpeg_copy_critical_parameters",
  "jpeg_default_colorspace",
  "jpeg_default_qtables",
  "jpeg_destroy",
  "jpeg_destroy_compress",
  "jpeg_destroy_decompress",
  "jpeg_fill_bit_buffer",
  "jpeg_finish_compress",
  "jpeg_finish_decompress",
  "jpeg_finish_output",
  "jpeg_gen_optimal_table",
  "jpeg_has_multiple_scans",
  "jpeg_huff_decode",
  "jpeg_input_complete",
  "jpeg_make_c_derived_tbl",
  "jpeg_make_d_derived_tbl",
  "jpeg_mem_dest",
  "jpeg_mem_src",
  "jpeg_new_colormap",
  "jpeg_open_backing_store",
  "jpeg_read_coefficients",
  "jpeg_read_header",
  "jpeg_read_raw_data",
  "jpeg_read_scanlinesjpeg_consume_input",
  "jpeg_resync_to_restart",
  "jpeg_save_markers",
  "jpeg_set_colorspace",
  "jpeg_set_defaults",
  "jpeg_set_linear_quality",
  "jpeg_set_marker_processor",
  "jpeg_set_quality",
  "jpeg_simple_progression",
  "jpeg_start_compress",
  "jpeg_start_decompress",
  "jpeg_start_output",
  "jpeg_stdio_dest",
  "jpeg_stdio_src",
  "jpeg_write_coefficients",
  "jpeg_write_m_byte",
  "jpeg_write_m_header",
  "jpeg_write_marker",
  "jpeg_write_raw_data",
  "jpeg_write_scanlines",
  "jpeg_write_tables",
  "jtransform_adjust_parameters",
  "jtransform_execute_transform",
  "jtransform_request_workspace",
  "jumponcond(FuncState*, expdesc*, int)",
  "kill",
  "killpg",
  "launcherDialog()",
  "legalstub$Common::DumpFile::pos() const",
  "legalstub$Common::DumpFile::seek(long long, int)",
  "legalstub$Common::DumpFile::size() const",
  "legalstub$Common::File::pos() const",
  "legalstub$Common::File::seek(long long, int)",
  "legalstub$Common::File::size() const",
  "legalstub$Common::GZipReadStream::seek(long long, int)",
  "legalstub$Common::GzioReadStream::clickteamDecompress(unsigned char*, unsigned int, unsigned char*, unsigned int, long long)",
  "legalstub$Common::GzioReadStream::deflateDecompress(unsigned char*, unsigned int, unsigned char*, unsigned int, long long)",
  "legalstub$Common::GzioReadStream::openClickteam(Common::SeekableReadStream*, unsigned long long, DisposeAfterUse::Flag)",
  "legalstub$Common::GzioReadStream::openDeflate(Common::SeekableReadStream*, unsigned long long, DisposeAfterUse::Flag)",
  "legalstub$Common::GzioReadStream::openZlib(Common::SeekableReadStream*, unsigned long long, DisposeAfterUse::Flag)",
  "legalstub$Common::GzioReadStream::parentSeek(long long)",
  "legalstub$Common::GzioReadStream::readAtOffset(long long, unsigned char*, unsigned int)",
  "legalstub$Common::GzioReadStream::zlibDecompress(unsigned char*, unsigned int, unsigned char*, unsigned int, long long)",
  "legalstub$Common::MemoryReadWriteStream::seek(long long, int)",
  "legalstub$Common::OutSaveFile::pos() const",
  "legalstub$Common::OutSaveFile::seek(long long, int)",
  "legalstub$Common::OutSaveFile::size() const",
  "legalstub$Common::PowerPackerStream::pos() const",
  "legalstub$Common::PowerPackerStream::seek(long long, int)",
  "legalstub$Common::PowerPackerStream::size() const",
  "legalstub$Common::SeekableSubReadStream::seek(long long, int)",
  "legalstub$Common::getHumanReadableBytes(unsigned long long, Common::String&)",
  "legalstub$PosixIoStream::size() const",
  "legalstub$SDL_AddTouch",
  "legalstub$SDL_DelTouch",
  "legalstub$SDL_GestureAddTouch",
  "legalstub$SDL_GestureDelTouch",
  "legalstub$SDL_GetNumTouchFingers",
  "legalstub$SDL_GetTouch",
  "legalstub$SDL_GetTouchDevice",
  "legalstub$SDL_GetTouchDeviceType",
  "legalstub$SDL_GetTouchFinger",
  "legalstub$SDL_LoadDollarTemplates",
  "legalstub$SDL_RWseek",
  "legalstub$SDL_RWsize",
  "legalstub$SDL_RWtell",
  "legalstub$SDL_ReadBE64",
  "legalstub$SDL_ReadLE64",
  "legalstub$SDL_SaveDollarTemplate",
  "legalstub$SDL_SendTouch",
  "legalstub$SDL_SendTouchMotion",
  "legalstub$SDL_WriteBE64",
  "legalstub$SDL_WriteLE64",
  "legalstub$Scumm::ScummDiskImage::pos() const",
  "legalstub$Scumm::ScummDiskImage::seek(long long, int)",
  "legalstub$Scumm::ScummDiskImage::size() const",
  "legalstub$Scumm::ScummFile::pos() const",
  "legalstub$Scumm::ScummFile::seek(long long, int)",
  "legalstub$Scumm::ScummFile::size() const",
  "legalstub$Scumm::ScummNESFile::pos() const",
  "legalstub$Scumm::ScummNESFile::seek(long long, int)",
  "legalstub$Scumm::ScummNESFile::size() const",
  "legalstub$StdioStream::pos() const",
  "legalstub$StdioStream::seek(long long, int)",
  "legalstub$StdioStream::size() const",
  "legalstub$__fseeko",
  "legalstub$__ftello",
  "legalstub$__intscan",
  "legalstub$dynCall_iiiiiijj",
  "legalstub$dynCall_iiiiij",
  "legalstub$dynCall_iiiiijj",
  "legalstub$dynCall_iiji",
  "legalstub$dynCall_ji",
  "legalstub$dynCall_jiji",
  "legalstub$dynCall_viijii",
  "legalstub$non-virtual thunk to Common::MemoryReadWriteStream::seek(long long, int)",
  "legalstub$non-virtual thunk to PosixIoStream::size() const",
  "legalstub$non-virtual thunk to StdioStream::pos() const",
  "legalstub$non-virtual thunk to StdioStream::seek(long long, int)",
  "legalstub$non-virtual thunk to StdioStream::size() const",
  "legalstub$std::__2::__fs::filesystem::__file_size(std::__2::__fs::filesystem::path const&, std::__2::error_code*)",
  "legalstub$std::__2::__fs::filesystem::__hard_link_count(std::__2::__fs::filesystem::path const&, std::__2::error_code*)",
  "legalstub$std::__2::__fs::filesystem::__last_write_time(std::__2::__fs::filesystem::path const&, std::__2::chrono::time_point<std::__2::__fs::filesystem::_FilesystemClock, std::__2::chrono::duration<__int128, std::__2::ratio<1ll, 1000000000ll>>>, std::__2::error_code*)",
  "legalstub$std::__2::__fs::filesystem::__remove_all(std::__2::__fs::filesystem::path const&, std::__2::error_code*)",
  "legalstub$std::__2::__fs::filesystem::__resize_file(std::__2::__fs::filesystem::path const&, unsigned long long, std::__2::error_code*)",
  "legalstub$std::__2::basic_filebuf<char, std::__2::char_traits<char>>::seekoff(long long, std::__2::ios_base::seekdir, unsigned int)",
  "legalstub$std::__2::basic_istream<char, std::__2::char_traits<char>>::seekg(long long, std::__2::ios_base::seekdir)",
  "legalstub$std::__2::basic_istream<wchar_t, std::__2::char_traits<wchar_t>>::seekg(long long, std::__2::ios_base::seekdir)",
  "legalstub$std::__2::basic_ostream<char, std::__2::char_traits<char>>::operator<<(long double)",
  "legalstub$std::__2::basic_ostream<char, std::__2::char_traits<char>>::operator<<(long long)",
  "legalstub$std::__2::basic_ostream<char, std::__2::char_traits<char>>::operator<<(unsigned long long)",
  "legalstub$std::__2::basic_ostream<wchar_t, std::__2::char_traits<wchar_t>>::operator<<(long double)",
  "legalstub$std::__2::basic_ostream<wchar_t, std::__2::char_traits<wchar_t>>::operator<<(long long)",
  "legalstub$std::__2::basic_ostream<wchar_t, std::__2::char_traits<wchar_t>>::operator<<(unsigned long long)",
  "legalstub$std::__2::basic_streambuf<char, std::__2::char_traits<char>>::pubseekoff[abi:v15006](long long, std::__2::ios_base::seekdir, unsigned int)",
  "legalstub$std::__2::basic_streambuf<wchar_t, std::__2::char_traits<wchar_t>>::pubseekoff[abi:v15006](long long, std::__2::ios_base::seekdir, unsigned int)",
  "legalstub$std::__2::money_put<char, std::__2::ostreambuf_iterator<char, std::__2::char_traits<char>>>::do_put(std::__2::ostreambuf_iterator<char, std::__2::char_traits<char>>, bool, std::__2::ios_base&, char, long double) const",
  "legalstub$std::__2::money_put<wchar_t, std::__2::ostreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>>::do_put(std::__2::ostreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>, bool, std::__2::ios_base&, wchar_t, long double) const",
  "legalstub$std::__2::num_put<char, std::__2::ostreambuf_iterator<char, std::__2::char_traits<char>>>::do_put(std::__2::ostreambuf_iterator<char, std::__2::char_traits<char>>, std::__2::ios_base&, char, long double) const",
  "legalstub$std::__2::num_put<char, std::__2::ostreambuf_iterator<char, std::__2::char_traits<char>>>::do_put(std::__2::ostreambuf_iterator<char, std::__2::char_traits<char>>, std::__2::ios_base&, char, long long) const",
  "legalstub$std::__2::num_put<char, std::__2::ostreambuf_iterator<char, std::__2::char_traits<char>>>::do_put(std::__2::ostreambuf_iterator<char, std::__2::char_traits<char>>, std::__2::ios_base&, char, unsigned long long) const",
  "legalstub$std::__2::num_put<char, std::__2::ostreambuf_iterator<char, std::__2::char_traits<char>>>::put[abi:v15006](std::__2::ostreambuf_iterator<char, std::__2::char_traits<char>>, std::__2::ios_base&, char, long double) const",
  "legalstub$std::__2::num_put<char, std::__2::ostreambuf_iterator<char, std::__2::char_traits<char>>>::put[abi:v15006](std::__2::ostreambuf_iterator<char, std::__2::char_traits<char>>, std::__2::ios_base&, char, long long) const",
  "legalstub$std::__2::num_put<char, std::__2::ostreambuf_iterator<char, std::__2::char_traits<char>>>::put[abi:v15006](std::__2::ostreambuf_iterator<char, std::__2::char_traits<char>>, std::__2::ios_base&, char, unsigned long long) const",
  "legalstub$std::__2::num_put<wchar_t, std::__2::ostreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>>::do_put(std::__2::ostreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>, std::__2::ios_base&, wchar_t, long double) const",
  "legalstub$std::__2::num_put<wchar_t, std::__2::ostreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>>::do_put(std::__2::ostreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>, std::__2::ios_base&, wchar_t, long long) const",
  "legalstub$std::__2::num_put<wchar_t, std::__2::ostreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>>::do_put(std::__2::ostreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>, std::__2::ios_base&, wchar_t, unsigned long long) const",
  "legalstub$std::__2::num_put<wchar_t, std::__2::ostreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>>::put[abi:v15006](std::__2::ostreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>, std::__2::ios_base&, wchar_t, long double) const",
  "legalstub$std::__2::num_put<wchar_t, std::__2::ostreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>>::put[abi:v15006](std::__2::ostreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>, std::__2::ios_base&, wchar_t, long long) const",
  "legalstub$std::__2::num_put<wchar_t, std::__2::ostreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>>::put[abi:v15006](std::__2::ostreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>, std::__2::ios_base&, wchar_t, unsigned long long) const",
  "legalstub$std::__2::ostreambuf_iterator<char, std::__2::char_traits<char>> std::__2::num_put<char, std::__2::ostreambuf_iterator<char, std::__2::char_traits<char>>>::__do_put_floating_point[abi:v15006]<long double>(std::__2::ostreambuf_iterator<char, std::__2::char_traits<char>>, std::__2::ios_base&, char, long double, char const*) const",
  "legalstub$std::__2::ostreambuf_iterator<char, std::__2::char_traits<char>> std::__2::num_put<char, std::__2::ostreambuf_iterator<char, std::__2::char_traits<char>>>::__do_put_integral[abi:v15006]<long long>(std::__2::ostreambuf_iterator<char, std::__2::char_traits<char>>, std::__2::ios_base&, char, long long, char const*) const",
  "legalstub$std::__2::ostreambuf_iterator<char, std::__2::char_traits<char>> std::__2::num_put<char, std::__2::ostreambuf_iterator<char, std::__2::char_traits<char>>>::__do_put_integral[abi:v15006]<unsigned long long>(std::__2::ostreambuf_iterator<char, std::__2::char_traits<char>>, std::__2::ios_base&, char, unsigned long long, char const*) const",
  "legalstub$std::__2::ostreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>> std::__2::num_put<wchar_t, std::__2::ostreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>>::__do_put_floating_point[abi:v15006]<long double>(std::__2::ostreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>, std::__2::ios_base&, wchar_t, long double, char const*) const",
  "legalstub$std::__2::ostreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>> std::__2::num_put<wchar_t, std::__2::ostreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>>::__do_put_integral[abi:v15006]<long long>(std::__2::ostreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>, std::__2::ios_base&, wchar_t, long long, char const*) const",
  "legalstub$std::__2::ostreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>> std::__2::num_put<wchar_t, std::__2::ostreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>>::__do_put_integral[abi:v15006]<unsigned long long>(std::__2::ostreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>, std::__2::ios_base&, wchar_t, unsigned long long, char const*) const",
  "legalstub$std::__2::stoll(std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>> const&, unsigned long*, int)",
  "legalstub$std::__2::stoll(std::__2::basic_string<wchar_t, std::__2::char_traits<wchar_t>, std::__2::allocator<wchar_t>> const&, unsigned long*, int)",
  "legalstub$std::__2::stoull(std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>> const&, unsigned long*, int)",
  "legalstub$std::__2::stoull(std::__2::basic_string<wchar_t, std::__2::char_traits<wchar_t>, std::__2::allocator<wchar_t>> const&, unsigned long*, int)",
  "legalstub$std::__2::to_string(long double)",
  "legalstub$std::__2::to_string(long long)",
  "legalstub$std::__2::to_string(unsigned long long)",
  "legalstub$std::__2::to_wstring(long double)",
  "legalstub$std::__2::to_wstring(long long)",
  "legalstub$std::__2::to_wstring(unsigned long long)",
  "legalstub$virtual thunk to Common::SeekableSubReadStream::seek(long long, int)",
  "legalstub$void Common::unknownKeyError<long long>(long long)",
  "legalstub$void Common::unknownKeyError<unsigned long long>(unsigned long long)",
  "legalstub$wcstoimax",
  "legalstub$wcstoll",
  "legalstub$wcstoull",
  "legalstub$wcstoumax",
  "lfind",
  "ll_loadlib(lua_State*)",
  "ll_module(lua_State*)",
  "ll_require(lua_State*)",
  "ll_seeall(lua_State*)",
  "llex(LexState*, SemInfo*)",
  "load_library_start",
  "load_post_names",
  "load_truetype_glyph",
  "loader_preload(lua_State*)",
  "locking_getc",
  "locking_getc.2",
  "locking_putc",
  "locking_putc.2",
  "long double std::__2::(anonymous namespace)::as_float<long double, std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>>>(std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>> const&, std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>> const&, unsigned long*)",
  "long double std::__2::(anonymous namespace)::as_float<long double, std::__2::basic_string<wchar_t, std::__2::char_traits<wchar_t>, std::__2::allocator<wchar_t>>>(std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>> const&, std::__2::basic_string<wchar_t, std::__2::char_traits<wchar_t>, std::__2::allocator<wchar_t>> const&, unsigned long*)",
  "long double std::__2::(anonymous namespace)::as_float_helper<long double, std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>>, long double (*)(char const*, char**)>(std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>> const&, std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>> const&, unsigned long*, long double (*)(char const*, char**))",
  "long double std::__2::(anonymous namespace)::as_float_helper<long double, std::__2::basic_string<wchar_t, std::__2::char_traits<wchar_t>, std::__2::allocator<wchar_t>>, long double (*)(wchar_t const*, wchar_t**)>(std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>> const&, std::__2::basic_string<wchar_t, std::__2::char_traits<wchar_t>, std::__2::allocator<wchar_t>> const&, unsigned long*, long double (*)(wchar_t const*, wchar_t**))",
  "long double std::__2::__do_strtod[abi:v15006]<long double>(char const*, char**)",
  "long double std::__2::__num_get_float<long double>(char const*, char const*, unsigned int&)",
  "long long std::__2::(anonymous namespace)::as_integer<long long, std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>>>(std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>> const&, std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>> const&, unsigned long*, int)",
  "long long std::__2::(anonymous namespace)::as_integer<long long, std::__2::basic_string<wchar_t, std::__2::char_traits<wchar_t>, std::__2::allocator<wchar_t>>>(std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>> const&, std::__2::basic_string<wchar_t, std::__2::char_traits<wchar_t>, std::__2::allocator<wchar_t>> const&, unsigned long*, int)",
  "long long std::__2::(anonymous namespace)::as_integer_helper<long long, std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>>, long long (*)(char const*, char**, int)>(std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>> const&, std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>> const&, unsigned long*, int, long long (*)(char const*, char**, int))",
  "long long std::__2::(anonymous namespace)::as_integer_helper<long long, std::__2::basic_string<wchar_t, std::__2::char_traits<wchar_t>, std::__2::allocator<wchar_t>>, long long (*)(wchar_t const*, wchar_t**, int)>(std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>> const&, std::__2::basic_string<wchar_t, std::__2::char_traits<wchar_t>, std::__2::allocator<wchar_t>> const&, unsigned long*, int, long long (*)(wchar_t const*, wchar_t**, int))",
  "long std::__2::(anonymous namespace)::as_integer<long, std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>>>(std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>> const&, std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>> const&, unsigned long*, int)",
  "long std::__2::(anonymous namespace)::as_integer<long, std::__2::basic_string<wchar_t, std::__2::char_traits<wchar_t>, std::__2::allocator<wchar_t>>>(std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>> const&, std::__2::basic_string<wchar_t, std::__2::char_traits<wchar_t>, std::__2::allocator<wchar_t>> const&, unsigned long*, int)",
  "long std::__2::(anonymous namespace)::as_integer_helper<long, std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>>, long (*)(char const*, char**, int)>(std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>> const&, std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>> const&, unsigned long*, int, long (*)(char const*, char**, int))",
  "long std::__2::(anonymous namespace)::as_integer_helper<long, std::__2::basic_string<wchar_t, std::__2::char_traits<wchar_t>, std::__2::allocator<wchar_t>>, long (*)(wchar_t const*, wchar_t**, int)>(std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>> const&, std::__2::basic_string<wchar_t, std::__2::char_traits<wchar_t>, std::__2::allocator<wchar_t>> const&, unsigned long*, int, long (*)(wchar_t const*, wchar_t**, int))",
  "lsearch",
  "luaB_assert(lua_State*)",
  "luaB_auxwrap(lua_State*)",
  "luaB_cocreate(lua_State*)",
  "luaB_collectgarbage(lua_State*)",
  "luaB_coresume(lua_State*)",
  "luaB_costatus(lua_State*)",
  "luaB_cowrap(lua_State*)",
  "luaB_dofile(lua_State*)",
  "luaB_error(lua_State*)",
  "luaB_gcinfo(lua_State*)",
  "luaB_getfenv(lua_State*)",
  "luaB_getmetatable(lua_State*)",
  "luaB_ipairs(lua_State*)",
  "luaB_load(lua_State*)",
  "luaB_loadfile(lua_State*)",
  "luaB_loadstring(lua_State*)",
  "luaB_newproxy(lua_State*)",
  "luaB_next(lua_State*)",
  "luaB_pairs(lua_State*)",
  "luaB_pcall(lua_State*)",
  "luaB_print(lua_State*)",
  "luaB_rawequal(lua_State*)",
  "luaB_rawget(lua_State*)",
  "luaB_rawset(lua_State*)",
  "luaB_select(lua_State*)",
  "luaB_setfenv(lua_State*)",
  "luaB_setmetatable(lua_State*)",
  "luaB_tonumber(lua_State*)",
  "luaB_tostring(lua_State*)",
  "luaB_type(lua_State*)",
  "luaB_unpack(lua_State*)",
  "luaB_xpcall(lua_State*)",
  "luaB_yield(lua_State*)",
  "luaC_callGCTM(lua_State*)",
  "luaC_freeall(lua_State*)",
  "luaC_fullgc(lua_State*)",
  "luaC_step(lua_State*)",
  "luaD_call(lua_State*, lua_TValue*, int)",
  "luaD_callhook(lua_State*, int, int)",
  "luaD_growstack(lua_State*, int)",
  "luaD_pcall(lua_State*, void (*)(lua_State*, void*), void*, long, long)",
  "luaD_poscall(lua_State*, lua_TValue*)",
  "luaD_precall(lua_State*, lua_TValue*, int)",
  "luaD_protectedparser(lua_State*, Zio*, char const*)",
  "luaD_rawrunprotected(lua_State*, void (*)(lua_State*, void*), void*)",
  "luaD_reallocCI(lua_State*, int)",
  "luaD_reallocstack(lua_State*, int)",
  "luaD_seterrorobj(lua_State*, int, lua_TValue*)",
  "luaD_throw(lua_State*, int)",
  "luaE_freethread(lua_State*, lua_State*)",
  "luaE_newthread(lua_State*)",
  "luaF_close(lua_State*, lua_TValue*)",
  "luaF_findupval(lua_State*, lua_TValue*)",
  "luaF_freeclosure(lua_State*, Closure*)",
  "luaF_freeproto(lua_State*, Proto*)",
  "luaF_freeupval(lua_State*, UpVal*)",
  "luaF_newCclosure(lua_State*, int, Table*)",
  "luaF_newLclosure(lua_State*, int, Table*)",
  "luaF_newproto(lua_State*)",
  "luaF_newupval(lua_State*)",
  "luaG_aritherror(lua_State*, lua_TValue const*, lua_TValue const*)",
  "luaG_concaterror(lua_State*, lua_TValue*, lua_TValue*)",
  "luaG_errormsg(lua_State*)",
  "luaG_ordererror(lua_State*, lua_TValue const*, lua_TValue const*)",
  "luaG_runerror(lua_State*, char const*, ...)",
  "luaG_typeerror(lua_State*, lua_TValue const*, char const*)",
  "luaH_free(lua_State*, Table*)",
  "luaH_new(lua_State*, int, int)",
  "luaH_next(lua_State*, Table*, lua_TValue*)",
  "luaH_resizearray(lua_State*, Table*, int)",
  "luaH_set(lua_State*, Table*, lua_TValue const*)",
  "luaH_setnum(lua_State*, Table*, int)",
  "luaH_setstr(lua_State*, Table*, TString*)",
  "luaK_checkstack(FuncState*, int)",
  "luaK_code(FuncState*, unsigned int, int)",
  "luaK_codeABC(FuncState*, OpCode, int, int, int)",
  "luaK_codeABx(FuncState*, OpCode, int, unsigned int)",
  "luaK_concat(FuncState*, int*, int)",
  "luaK_dischargevars(FuncState*, expdesc*)",
  "luaK_exp2RK(FuncState*, expdesc*)",
  "luaK_exp2anyreg(FuncState*, expdesc*)",
  "luaK_exp2nextreg(FuncState*, expdesc*)",
  "luaK_exp2val(FuncState*, expdesc*)",
  "luaK_goiftrue(FuncState*, expdesc*)",
  "luaK_indexed(FuncState*, expdesc*, expdesc*)",
  "luaK_infix(FuncState*, BinOpr, expdesc*)",
  "luaK_jump(FuncState*)",
  "luaK_nil(FuncState*, int, int)",
  "luaK_numberK(FuncState*, double)",
  "luaK_patchlist(FuncState*, int, int)",
  "luaK_patchtohere(FuncState*, int)",
  "luaK_posfix(FuncState*, BinOpr, expdesc*, expdesc*)",
  "luaK_prefix(FuncState*, UnOpr, expdesc*)",
  "luaK_reserveregs(FuncState*, int)",
  "luaK_ret(FuncState*, int, int)",
  "luaK_self(FuncState*, expdesc*, expdesc*)",
  "luaK_setlist(FuncState*, int, int, int)",
  "luaK_setreturns(FuncState*, expdesc*, int)",
  "luaK_storevar(FuncState*, expdesc*, expdesc*)",
  "luaK_stringK(FuncState*, TString*)",
  "luaL_addlstring(luaL_Buffer*, char const*, unsigned long)",
  "luaL_addstring(luaL_Buffer*, char const*)",
  "luaL_addvalue(luaL_Buffer*)",
  "luaL_argerror(lua_State*, int, char const*)",
  "luaL_callmeta(lua_State*, int, char const*)",
  "luaL_checkany(lua_State*, int)",
  "luaL_checkinteger(lua_State*, int)",
  "luaL_checklstring(lua_State*, int, unsigned long*)",
  "luaL_checknumber(lua_State*, int)",
  "luaL_checkoption(lua_State*, int, char const*, char const* const*)",
  "luaL_checkstack(lua_State*, int, char const*)",
  "luaL_checktype(lua_State*, int, int)",
  "luaL_checkudata(lua_State*, int, char const*)",
  "luaL_error(lua_State*, char const*, ...)",
  "luaL_findtable(lua_State*, int, char const*, int)",
  "luaL_getmetafield(lua_State*, int, char const*)",
  "luaL_getn(lua_State*, int)",
  "luaL_gsub(lua_State*, char const*, char const*, char const*)",
  "luaL_loadbuffer(lua_State*, char const*, unsigned long, char const*)",
  "luaL_loadfile(lua_State*, char const*)",
  "luaL_loadstring(lua_State*, char const*)",
  "luaL_newmetatable(lua_State*, char const*)",
  "luaL_newstate()",
  "luaL_openlib(lua_State*, char const*, luaL_Reg const*, int)",
  "luaL_openlibs(lua_State*)",
  "luaL_optinteger(lua_State*, int, long)",
  "luaL_optlstring(lua_State*, int, char const*, unsigned long*)",
  "luaL_optnumber(lua_State*, int, double)",
  "luaL_prepbuffer(luaL_Buffer*)",
  "luaL_pushresult(luaL_Buffer*)",
  "luaL_ref(lua_State*, int)",
  "luaL_register(lua_State*, char const*, luaL_Reg const*)",
  "luaL_setn(lua_State*, int, int)",
  "luaL_typerror(lua_State*, int, char const*)",
  "luaL_unref(lua_State*, int, int)",
  "luaL_where(lua_State*, int)",
  "luaM_growaux_(lua_State*, void*, int*, unsigned long, int, char const*)",
  "luaM_realloc_(lua_State*, void*, unsigned long, unsigned long)",
  "luaM_toobig(lua_State*)",
  "luaO_pushfstring(lua_State*, char const*, ...)",
  "luaO_pushvfstring(lua_State*, char const*, void*)",
  "luaO_str2d(char const*, double*)",
  "luaS_newlstr(lua_State*, char const*, unsigned long)",
  "luaS_newudata(lua_State*, unsigned long, Table*)",
  "luaS_resize(lua_State*, int)",
  "luaT_init(lua_State*)",
  "luaV_concat(lua_State*, int, int)",
  "luaV_equalval(lua_State*, lua_TValue const*, lua_TValue const*)",
  "luaV_execute(lua_State*, int)",
  "luaV_gettable(lua_State*, lua_TValue const*, lua_TValue*, lua_TValue*)",
  "luaV_lessthan(lua_State*, lua_TValue const*, lua_TValue const*)",
  "luaV_settable(lua_State*, lua_TValue const*, lua_TValue*, lua_TValue*)",
  "luaV_tonumber(lua_TValue const*, lua_TValue*)",
  "luaV_tostring(lua_State*, lua_TValue*)",
  "luaX_init(lua_State*)",
  "luaX_lexerror(LexState*, char const*, int)",
  "luaX_lookahead(LexState*)",
  "luaX_newstring(LexState*, char const*, unsigned long)",
  "luaX_next(LexState*)",
  "luaX_setinput(lua_State*, LexState*, Zio*, TString*)",
  "luaX_syntaxerror(LexState*, char const*)",
  "luaX_token2str(LexState*, int)",
  "luaY_parser(lua_State*, Zio*, Mbuffer*, char const*)",
  "luaZ_fill(Zio*)",
  "luaZ_lookahead(Zio*)",
  "luaZ_openspace(lua_State*, Mbuffer*, unsigned long)",
  "luaZ_read(Zio*, void*, unsigned long)",
  "lua_call(lua_State*, int, int)",
  "lua_checkstack(lua_State*, int)",
  "lua_close(lua_State*)",
  "lua_concat(lua_State*, int)",
  "lua_cpcall(lua_State*, int (*)(lua_State*), void*)",
  "lua_createtable(lua_State*, int, int)",
  "lua_dump(lua_State*, int (*)(lua_State*, void const*, unsigned long, void*), void*)",
  "lua_equal(lua_State*, int, int)",
  "lua_error(lua_State*)",
  "lua_gc(lua_State*, int, int)",
  "lua_getfield(lua_State*, int, char const*)",
  "lua_getinfo(lua_State*, char const*, lua_Debug*)",
  "lua_gettable(lua_State*, int)",
  "lua_isnumber(lua_State*, int)",
  "lua_lessthan(lua_State*, int, int)",
  "lua_load(lua_State*, char const* (*)(lua_State*, void*, unsigned long*), void*, char const*)",
  "lua_newstate(void* (*)(void*, void*, unsigned long, unsigned long), void*)",
  "lua_newthread(lua_State*)",
  "lua_newuserdata(lua_State*, unsigned long)",
  "lua_next(lua_State*, int)",
  "lua_objlen(lua_State*, int)",
  "lua_pcall(lua_State*, int, int, int)",
  "lua_pushcclosure(lua_State*, int (*)(lua_State*), int)",
  "lua_pushfstring(lua_State*, char const*, ...)",
  "lua_pushlstring(lua_State*, char const*, unsigned long)",
  "lua_pushstring(lua_State*, char const*)",
  "lua_pushvfstring(lua_State*, char const*, void*)",
  "lua_rawset(lua_State*, int)",
  "lua_rawseti(lua_State*, int, int)",
  "lua_replace(lua_State*, int)",
  "lua_resume(lua_State*, int)",
  "lua_setfield(lua_State*, int, char const*)",
  "lua_settable(lua_State*, int)",
  "lua_tointeger(lua_State*, int)",
  "lua_tolstring(lua_State*, int, unsigned long*)",
  "lua_tonumber(lua_State*, int)",
  "lua_yield(lua_State*, int)",
  "luaopen_base(lua_State*)",
  "luaopen_debug(lua_State*)",
  "luaopen_io(lua_State*)",
  "luaopen_math(lua_State*)",
  "luaopen_os(lua_State*)",
  "luaopen_package(lua_State*)",
  "luaopen_string(lua_State*)",
  "luaopen_table(lua_State*)",
  "main",
  "make_ga_colormap",
  "make_rgb_colormap",
  "match(MatchState*, char const*, char const*)",
  "math_abs(lua_State*)",
  "math_acos(lua_State*)",
  "math_asin(lua_State*)",
  "math_atan(lua_State*)",
  "math_atan2(lua_State*)",
  "math_ceil(lua_State*)",
  "math_cos(lua_State*)",
  "math_cosh(lua_State*)",
  "math_deg(lua_State*)",
  "math_exp(lua_State*)",
  "math_floor(lua_State*)",
  "math_fmod(lua_State*)",
  "math_frexp(lua_State*)",
  "math_ldexp(lua_State*)",
  "math_log(lua_State*)",
  "math_log10(lua_State*)",
  "math_max(lua_State*)",
  "math_min(lua_State*)",
  "math_modf(lua_State*)",
  "math_pow(lua_State*)",
  "math_rad(lua_State*)",
  "math_random(lua_State*)",
  "math_randomseed(lua_State*)",
  "math_sin(lua_State*)",
  "math_sinh(lua_State*)",
  "math_sqrt(lua_State*)",
  "math_tan(lua_State*)",
  "math_tanh(lua_State*)",
  "maxn(lua_State*)",
  "mem_close",
  "mem_seek",
  "mem_writeconst",
  "memory_stream_close",
  "merged_1v_upsample",
  "merged_2v_upsample",
  "mt32emu_add_machine_rom_file",
  "mt32emu_add_rom_data",
  "mt32emu_add_rom_file",
  "mt32emu_close_synth",
  "mt32emu_configure_midi_event_queue_sysex_storage",
  "mt32emu_create_context",
  "mt32emu_flush_midi_queue",
  "mt32emu_free_context",
  "mt32emu_get_actual_stereo_output_samplerate",
  "mt32emu_identify_rom_data",
  "mt32emu_identify_rom_file",
  "mt32emu_is_active",
  "mt32emu_is_mt32_reverb_compatibility_mode",
  "mt32emu_open_synth",
  "mt32emu_parse_stream",
  "mt32emu_parse_stream_at",
  "mt32emu_play_msg",
  "mt32emu_play_msg_at",
  "mt32emu_play_msg_now",
  "mt32emu_play_msg_on_part",
  "mt32emu_play_short_message",
  "mt32emu_play_short_message_at",
  "mt32emu_play_sysex",
  "mt32emu_play_sysex_at",
  "mt32emu_play_sysex_now",
  "mt32emu_preallocate_reverb_memory",
  "mt32emu_render_bit16s",
  "mt32emu_render_bit16s_streams",
  "mt32emu_render_float",
  "mt32emu_render_float_streams",
  "mt32emu_set_midi_event_queue_size",
  "mt32emu_set_midi_receiver",
  "mt32emu_set_output_gain",
  "mt32emu_set_part_volume_override",
  "mt32emu_set_reverb_compatibility_mode",
  "mt32emu_set_reverb_enabled",
  "mt32emu_set_reverb_output_gain",
  "mt32emu_write_sysex",
  "new_color_map_1_quant",
  "new_localvar(LexState*, TString*, int)",
  "newkey(lua_State*, Table*, lua_TValue const*)",
  "next_marker",
  "nftw",
  "ngettext",
  "non-virtual thunk to Audio::MidiDriver_Miles_Midi::processXMIDITimbreChunk(unsigned char const*, unsigned int)",
  "non-virtual thunk to Audio::MidiDriver_Miles_Midi::~MidiDriver_Miles_Midi()",
  "non-virtual thunk to Audio::QuickTimeAudioStream::~QuickTimeAudioStream()",
  "non-virtual thunk to CMS::EmulatedCMS::getRate() const",
  "non-virtual thunk to CMS::EmulatedCMS::readBuffer(short*, int)",
  "non-virtual thunk to CMS::EmulatedCMS::~EmulatedCMS()",
  "non-virtual thunk to Common::(anonymous namespace)::BufferedSeekableReadStream::pos() const",
  "non-virtual thunk to Common::(anonymous namespace)::BufferedSeekableReadStream::size() const",
  "non-virtual thunk to Common::(anonymous namespace)::BufferedSeekableReadStream::~BufferedSeekableReadStream()",
  "non-virtual thunk to Common::MemoryReadWriteStream::seek(long long, int)",
  "non-virtual thunk to Common::OSDMessageQueue::pollEvent(Common::Event&)",
  "non-virtual thunk to Common::OSDMessageQueue::~OSDMessageQueue()",
  "non-virtual thunk to Common::SearchManager::clear()",
  "non-virtual thunk to Common::SearchManager::~SearchManager()",
  "non-virtual thunk to Common::VirtualMouse::notifyEvent(Common::Event const&)",
  "non-virtual thunk to Common::VirtualMouse::~VirtualMouse()",
  "non-virtual thunk to DOSBoxCMS::~DOSBoxCMS()",
  "non-virtual thunk to DefaultEventManager::notifyEvent(Common::Event const&)",
  "non-virtual thunk to DefaultEventManager::~DefaultEventManager()",
  "non-virtual thunk to GUI::ButtonWidget::~ButtonWidget()",
  "non-virtual thunk to GUI::CheckboxWidget::~CheckboxWidget()",
  "non-virtual thunk to GUI::DomainEditTextWidget::~DomainEditTextWidget()",
  "non-virtual thunk to GUI::DropdownButtonWidget::~DropdownButtonWidget()",
  "non-virtual thunk to GUI::EditTextWidget::~EditTextWidget()",
  "non-virtual thunk to GUI::EditableWidget::~EditableWidget()",
  "non-virtual thunk to GUI::GlobalOptionsDialog::~GlobalOptionsDialog()",
  "non-virtual thunk to GUI::GridItemTray::~GridItemTray()",
  "non-virtual thunk to GUI::GridItemWidget::~GridItemWidget()",
  "non-virtual thunk to GUI::GridWidget::~GridWidget()",
  "non-virtual thunk to GUI::GroupedListWidget::~GroupedListWidget()",
  "non-virtual thunk to GUI::GuiManager::~GuiManager()",
  "non-virtual thunk to GUI::ListWidget::~ListWidget()",
  "non-virtual thunk to GUI::PicButtonWidget::~PicButtonWidget()",
  "non-virtual thunk to GUI::PopUpWidget::~PopUpWidget()",
  "non-virtual thunk to GUI::RadiobuttonWidget::~RadiobuttonWidget()",
  "non-virtual thunk to GUI::ScrollBarWidget::~ScrollBarWidget()",
  "non-virtual thunk to GUI::ScrollContainerWidget::~ScrollContainerWidget()",
  "non-virtual thunk to GUI::SliderWidget::~SliderWidget()",
  "non-virtual thunk to Image::JPEGDecoder::decodeFrame(Common::SeekableReadStream&)",
  "non-virtual thunk to MT32Emu::AccurateLowPassFilter::process(float)",
  "non-virtual thunk to MT32Emu::DefaultMidiStreamParser::handleShortMessage(unsigned int)",
  "non-virtual thunk to MT32Emu::DefaultMidiStreamParser::handleSysex(unsigned char const*, unsigned int)",
  "non-virtual thunk to MT32Emu::DefaultMidiStreamParser::handleSystemRealtimeMessage(unsigned char)",
  "non-virtual thunk to MT32Emu::DefaultMidiStreamParser::printDebug(char const*)",
  "non-virtual thunk to MT32Emu::DelegatingMidiStreamParser::handleShortMessage(unsigned int)",
  "non-virtual thunk to MT32Emu::DelegatingMidiStreamParser::handleSysex(unsigned char const*, unsigned int)MT32Emu::DelegatingMidiStreamParser::handleSystemRealtimeMessage(unsigned char)",
  "non-virtual thunk to MT32Emu::DelegatingMidiStreamParser::handleSystemRealtimeMessage(unsigned char)",
  "non-virtual thunk to MidiDriver_Emulated::open()",
  "non-virtual thunk to MidiDriver_Emulated::~MidiDriver_Emulated()",
  "non-virtual thunk to MidiDriver_MT32::close()",
  "non-virtual thunk to MidiDriver_MT32::open()",
  "non-virtual thunk to MidiDriver_MT32::send(unsigned int)",
  "non-virtual thunk to MidiDriver_MT32::setPitchBendRange(unsigned char, unsigned int)",
  "non-virtual thunk to MidiDriver_MT32::sysEx(unsigned char const*, unsigned short)",
  "non-virtual thunk to MidiDriver_MT32::~MidiDriver_MT32()",
  "non-virtual thunk to MidiParser_QT::readSampleDesc(Common::QuickTimeParser::Track*, unsigned int, unsigned int)",
  "non-virtual thunk to MidiParser_QT::~MidiParser_QT()",
  "non-virtual thunk to OPL::DOSBox::OPL::~OPL()",
  "non-virtual thunk to OPL::EmulatedOPL::readBuffer(short*, int)",
  "non-virtual thunk to OPL::EmulatedOPL::~EmulatedOPL()",
  "non-virtual thunk to OPL::MAME::OPL::~OPL()",
  "non-virtual thunk to OPL::NUKED::OPL::~OPL()",
  "non-virtual thunk to OSystem_Emscripten::getFeatureState(OSystem::Feature)",
  "non-virtual thunk to OSystem_Emscripten::hasFeature(OSystem::Feature)",
  "non-virtual thunk to OSystem_Emscripten::setFeatureState(OSystem::Feature, bool)",
  "non-virtual thunk to OSystem_Emscripten::~OSystem_Emscripten()",
  "non-virtual thunk to OSystem_POSIX::hasFeature(OSystem::Feature)",
  "non-virtual thunk to OSystem_POSIX::~OSystem_POSIX()",
  "non-virtual thunk to OSystem_SDL::getDefaultGraphicsMode() const",
  "non-virtual thunk to OSystem_SDL::getGraphicsMode() const",
  "non-virtual thunk to OSystem_SDL::getSupportedGraphicsModes() const",
  "non-virtual thunk to OSystem_SDL::hasFeature(OSystem::Feature)",
  "non-virtual thunk to OSystem_SDL::setGraphicsMode(int, unsigned int)",
  "non-virtual thunk to OSystem_SDL::~OSystem_SDL()",
  "non-virtual thunk to OpenGLSdlGraphicsManager::handleResizeImpl(int, int)",
  "non-virtual thunk to OpenGLSdlGraphicsManager::notifyEvent(Common::Event const&)",
  "non-virtual thunk to OpenGLSdlGraphicsManager::notifyResize(int, int)",
  "non-virtual thunk to OpenGLSdlGraphicsManager::saveScreenshot(Common::String const&) const",
  "non-virtual thunk to OpenGLSdlGraphicsManager::~OpenGLSdlGraphicsManager()",
  "non-virtual thunk to PosixIoStream::size() const",
  "non-virtual thunk to PosixIoStream::~PosixIoStream()",
  "non-virtual thunk to StdioStream::flush()",
  "non-virtual thunk to StdioStream::pos() const",
  "non-virtual thunk to StdioStream::seek(long long, int)",
  "non-virtual thunk to StdioStream::size() const",
  "non-virtual thunk to StdioStream::write(void const*, unsigned int)",
  "non-virtual thunk to StdioStream::~StdioStream()",
  "non-virtual thunk to Video::MPEGPSDecoder::MPEGVideoTrack::sendPacket(Common::SeekableReadStream*, unsigned int, unsigned int)",
  "non-virtual thunk to Video::MPEGPSDecoder::PS2AudioTrack::sendPacket(Common::SeekableReadStream*, unsigned int, unsigned int)",
  "non-virtual thunk to Video::MPEGPSDecoder::PS2AudioTrack::~PS2AudioTrack()",
  "non-virtual thunk to Video::QuickTimeDecoder::readSampleDesc(Common::QuickTimeParser::Track*, unsigned int, unsigned int)",
  "non-virtual thunk to Video::QuickTimeDecoder::~QuickTimeDecoder()",
  "non-virtual thunk to std::__2::basic_iostream<char, std::__2::char_traits<char>>::~basic_iostream()",
  "non-virtual thunk to std::__2::basic_stringstream<char, std::__2::char_traits<char>, std::__2::allocator<char>>::~basic_stringstream()",
  "non-virtual thunk to std::__2::strstream::~strstream()",
  "nsvgParse",
  "nsvgRasterize",
  "nsvg__parseAttr(NSVGparser*, char const*, char const*)",
  "nsvg__parseAttribs(NSVGparser*, char const**)",
  "nsvg__parseColor(char const*)",
  "nsvg__parseColorRGB(char const*)",
  "nsvg__parseGradient(NSVGparser*, char const**, char)",
  "nsvg__parseGradientStop(NSVGparser*, char const**)",
  "nsvg__parseLine(NSVGparser*, char const**)",
  "nsvg__parseNameValue(NSVGparser*, char const*, char const*)",
  "nsvg__parsePoly(NSVGparser*, char const**, int)",
  "nsvg__parseSVG(NSVGparser*, char const**)",
  "nsvg__parseXML(char*, void (*)(void*, char const*, char const**), void (*)(void*, char const*), void (*)(void*, char const*), void*)",
  "nsvg__startElement(void*, char const*, char const**)",
  "oggpackB_writecopy",
  "oggpack_writecopy",
  "oggpack_writecopy_helper",
  "open_audio_device",
  "open_face",
  "open_face_PS_from_sfnt_stream",
  "open_face_from_buffer",
  "open_func(LexState*, FuncState*)",
  "openpty",
  "operator new(unsigned long)",
  "operator new(unsigned long, std::align_val_t)",
  "operator new(unsigned long, std::align_val_t, std::nothrow_t const&)",
  "operator new(unsigned long, std::nothrow_t const&)",
  "operator new[](unsigned long)",
  "operator new[](unsigned long, std::align_val_t)",
  "operator new[](unsigned long, std::align_val_t, std::nothrow_t const&)",
  "operator new[](unsigned long, std::nothrow_t const&)",
  "os_clock(lua_State*)",
  "os_date(lua_State*)",
  "os_difftime(lua_State*)",
  "os_exit(lua_State*)",
  "os_getenv(lua_State*)",
  "os_time(lua_State*)",
  "os_tmpname(lua_State*)",
  "out",
  "output_message",
  "output_pass_setup",
  "pad.3",
  "panic(lua_State*)",
  "parlist(LexState*)",
  "parse_atom",
  "parse_blend_axis_types",
  "parse_blend_design_map",
  "parse_blend_design_positions",
  "parse_bracket",
  "parse_buildchar",
  "parse_charstrings",
  "parse_dict",
  "parse_fd_array",
  "parse_subrs",
  "pass_startup",
  "patchlistaux(FuncState*, int, int, int, int)",
  "pcf_get_accel",
  "pcf_get_encodings",
  "pcf_get_metric",
  "pcf_interpret_style",
  "pcf_load_font",
  "per_scan_setup",
  "perror",
  "pfr_aux_name_load",
  "pfr_extra_item_load_bitmap_info",
  "pfr_extra_item_load_font_id",
  "pfr_extra_item_load_kerning_pairs",
  "pfr_extra_item_load_stem_snaps",
  "pfr_extra_items_parse",
  "pfr_face_done",
  "pfr_face_get_kerning",
  "pfr_face_init",
  "pfr_get_kerning",
  "pfr_glyph_curve_to",
  "pfr_glyph_load_rec",
  "pfr_slot_done",
  "pfr_slot_load",
  "png_app_error",
  "png_app_warning",
  "png_ascii_from_fixed",
  "png_ascii_from_fp",
  "png_benign_error",
  "png_build_16bit_table",
  "png_build_gamma_table",
  "png_cache_unknown_chunk",
  "png_calloc",
  "png_check_IHDR",
  "png_check_chunk_length",
  "png_check_chunk_name",
  "png_chunk_benign_error",
  "png_chunk_error",
  "png_chunk_report",
  "png_colorspace_set_ICC",
  "png_colorspace_set_chromaticities",
  "png_colorspace_set_endpoints",
  "png_colorspace_set_gamma",
  "png_colorspace_set_rgb_coefficients",
  "png_colorspace_set_sRGB",
  "png_colorspace_sync",
  "png_colorspace_sync_info",
  "png_combine_row",
  "png_compress_IDAT",
  "png_crc_error",
  "png_crc_finish",
  "png_crc_read",
  "png_create_colormap_entry",
  "png_create_info_struct",
  "png_create_png_struct",
  "png_create_read_struct",
  "png_create_read_struct_2",
  "png_create_write_struct",
  "png_create_write_struct_2",
  "png_data_freer",
  "png_decompress_chunk",
  "png_default_error",
  "png_default_flush",
  "png_default_read_data",
  "png_default_write_data",
  "png_deflate_claim",
  "png_destroy_gamma_table",
  "png_destroy_info_struct",
  "png_destroy_png_struct",
  "png_destroy_read_struct",
  "png_destroy_write_struct",
  "png_do_read_transformations",
  "png_do_write_transformations",
  "png_error",
  "png_fixed",
  "png_fixed_error",
  "png_flush",
  "png_free",
  "png_free_buffer_list",
  "png_free_data",
  "png_free_jmpbuf",
  "png_get_IHDR",
  "png_get_sCAL",
  "png_get_sCAL_fixed",
  "png_get_uint_3",
  "png_handle_IEND",
  "png_handle_IHDR",
  "png_handle_PLTE",
  "png_handle_bKGD",
  "png_handle_cHRM",
  "png_handle_eXIf",
  "png_handle_gAMA",
  "png_handle_hIST",
  "png_handle_iCCP",
  "png_handle_iTXt",
  "png_handle_oFFs",
  "png_handle_pCAL",
  "png_handle_pHYs",
  "png_handle_sBIT",
  "png_handle_sCAL",
  "png_handle_sPLT",
  "png_handle_sRGB",
  "png_handle_tEXt",
  "png_handle_tIME",
  "png_handle_tRNS",
  "png_handle_unknown",
  "png_handle_zTXt",
  "png_icc_check_header",
  "png_icc_check_length",
  "png_icc_check_tag_table",
  "png_icc_profile_error",
  "png_icc_set_sRGB",
  "png_image_begin_read_from_file",
  "png_image_begin_read_from_memory",
  "png_image_begin_read_from_stdio",
  "png_image_error",
  "png_image_finish_read",
  "png_image_free",
  "png_image_memory_read",
  "png_image_read_and_map",
  "png_image_read_background",
  "png_image_read_colormap",
  "png_image_read_colormapped",
  "png_image_read_composite",
  "png_image_read_direct",
  "png_image_read_header",
  "png_image_read_init",
  "png_image_write_init",
  "png_image_write_main",
  "png_image_write_memory",
  "png_image_write_to_file",
  "png_image_write_to_memory",
  "png_image_write_to_stdio",
  "png_inflate",
  "png_inflate_claim",
  "png_inflate_read",
  "png_info_init_3",
  "png_init_read_transformations",
  "png_longjmp",
  "png_malloc",
  "png_malloc_arraypng_realloc_array",
  "png_malloc_base",
  "png_malloc_default",
  "png_malloc_warn",
  "png_process_IDAT_data",
  "png_process_data",
  "png_process_data_pause",
  "png_process_data_skip",
  "png_process_some_data",
  "png_progressive_combine_row",
  "png_push_have_end",
  "png_push_have_info",
  "png_push_have_row",
  "png_push_process_row",
  "png_push_read_IDAT",
  "png_push_read_chunk",
  "png_push_read_sig",
  "png_push_save_buffer",
  "png_read_IDAT_data",
  "png_read_buffer",
  "png_read_chunk_header",
  "png_read_data",
  "png_read_end",
  "png_read_filter_row",
  "png_read_finish_IDAT",
  "png_read_finish_row",
  "png_read_image",
  "png_read_info",
  "png_read_png",
  "png_read_row",
  "png_read_rows",
  "png_read_sig",
  "png_read_start_row",
  "png_read_transform_info",
  "png_read_update_info",
  "png_safe_execute",
  "png_set_IHDR",
  "png_set_PLTE",
  "png_set_add_alpha",
  "png_set_alpha_mode",
  "png_set_alpha_mode_fixed",
  "png_set_background",
  "png_set_background_fixed",
  "png_set_cHRM",
  "png_set_cHRM_XYZ",
  "png_set_cHRM_XYZ_fixed",
  "png_set_cHRM_fixed",
  "png_set_compression_buffer_size",
  "png_set_eXIf_",
  "png_set_expand",
  "png_set_expand_16",
  "png_set_expand_gray_1_2_4_to_8",
  "png_set_filler",
  "png_set_filter",
  "png_set_gAMA",
  "png_set_gAMA_fixed",
  "png_set_gamma",
  "png_set_gamma_fixed",
  "png_set_gray_to_rgb",
  "png_set_hIST",
  "png_set_iCCP",
  "png_set_keep_unknown_chunks",
  "png_set_longjmp_fn",
  "png_set_pCAL",
  "png_set_palette_to_rgb",
  "png_set_quantize",
  "png_set_rgb_to_gray",
  "png_set_rgb_to_gray_fixed",
  "png_set_rows",
  "png_set_sCAL",
  "png_set_sCAL_fixed",
  "png_set_sCAL_s",
  "png_set_sPLT",
  "png_set_sRGB",
  "png_set_sRGB_gAMA_and_cHRM",
  "png_set_scale_16",
  "png_set_sig_bytes",
  "png_set_strip_16",
  "png_set_strip_alpha",
  "png_set_tRNS",
  "png_set_tRNS_to_alpha",
  "png_set_text",
  "png_set_text_2",
  "png_set_unknown_chunk_location",
  "png_set_unknown_chunks",
  "png_set_user_transform_info",
  "png_start_read_image",
  "png_text_compress",
  "png_write_IEND",
  "png_write_IHDR",
  "png_write_PLTE",
  "png_write_bKGD",
  "png_write_cHRM_fixed",
  "png_write_chunk",
  "png_write_chunk_data",
  "png_write_chunk_end",
  "png_write_chunk_start",
  "png_write_complete_chunk",
  "png_write_data",
  "png_write_eXIf",
  "png_write_end",
  "png_write_find_filter",
  "png_write_finish_row",
  "png_write_flush",
  "png_write_gAMA_fixed",
  "png_write_hIST",
  "png_write_iCCP",
  "png_write_iTXt",
  "png_write_image",
  "png_write_image_16bit",
  "png_write_image_8bit",
  "png_write_info",
  "png_write_info_before_PLTE",
  "png_write_oFFs",
  "png_write_pCAL",
  "png_write_pHYs",
  "png_write_png",
  "png_write_row",
  "png_write_rows",
  "png_write_sBIT",
  "png_write_sCAL_s",
  "png_write_sPLT",
  "png_write_sRGB",
  "png_write_sig",
  "png_write_start_row",
  "png_write_tEXt",
  "png_write_tIME",
  "png_write_tRNS",
  "png_write_zTXt",
  "png_zalloc",
  "png_zfree",
  "png_zlib_inflate",
  "pop_arg",
  "post_process_1pass",
  "post_process_2pass",
  "post_process_prepass",
  "pre_process_context",
  "pre_process_data",
  "preload_image",
  "prepare_for_output_pass",
  "prepare_for_pass",
  "primaryexp(LexState*, expdesc*)",
  "printf",
  "printf_core",
  "process_data_context_main",
  "process_data_crank_post",
  "process_data_simple_main",
  "process_restart",
  "propagatemark(global_State*)",
  "ps_dimension_add_t1stem",
  "ps_dimension_done",
  "ps_dimension_end",
  "ps_dimension_set_mask_bits",
  "ps_hinter_done",
  "ps_hints_apply",
  "ps_hints_close",
  "ps_hints_t1reset",
  "ps_hints_t1stem3",
  "ps_hints_t2counter",
  "ps_hints_t2mask",
  "ps_parser_load_field",
  "ps_parser_load_field_table",
  "ps_table_add",
  "ps_table_done",
  "ps_table_new",
  "ps_table_release",
  "ps_unicodes_init",
  "psh_globals_destroy",
  "psh_globals_new",
  "psh_hint_table_init",
  "pthread_sigmask",
  "ptsname",
  "push_onecapture(MatchState*, int, char const*, char const*)",
  "pushclosure(LexState*, FuncState*, expdesc*)",
  "put_demapped_gray",
  "put_demapped_rgb",
  "put_gray_rows",
  "put_pixel_rows",
  "put_pixel_rows.2",
  "put_pixel_rows.3",
  "putc",
  "putc_unlocked",
  "putchar",
  "putchar_unlocked",
  "puts",
  "putw",
  "putwc",
  "putwchar",
  "qsort",
  "raccess_guess_apple_double",
  "raccess_guess_apple_generic",
  "raccess_guess_apple_single",
  "raccess_guess_darwin_hfsplus",
  "raccess_guess_darwin_newvfs",
  "raccess_guess_darwin_ufs_export",
  "raccess_guess_linux_cap",
  "raccess_guess_linux_double",
  "raccess_guess_linux_netatalk",
  "raccess_guess_vfat",
  "raccess_make_file_name",
  "raise",
  "readRlePixels",
  "read_color_map",
  "read_long_string(LexState*, SemInfo*, int)",
  "read_markers",
  "read_non_rle_pixel",
  "read_numeral(LexState*, SemInfo*)",
  "read_pbm_integer",
  "read_quant_tables",
  "read_restart_marker",
  "read_rle_pixel",
  "read_scan_integer",
  "read_scan_script",
  "read_text_integer",
  "realize_virt_arrays",
  "recfield(LexState*, ConsControl*)",
  "regcomp",
  "regerror",
  "request_virt_barray",
  "request_virt_sarray",
  "reset_input_controller",
  "resize(lua_State*, Table*, int, int)",
  "resume(lua_State*, void*)",
  "rewind",
  "rgb_ycc_start",
  "runGame(Plugin const*, Plugin const*, OSystem&, Common::String const&)",
  "save(LexState*, int)",
  "saveLastLaunchedTarget(Common::String const&)",
  "save_marker",
  "scandir",
  "scanexp",
  "scanf",
  "scumm_strdup(char const*)",
  "scummvm_main",
  "select_scan_parameters",
  "self_destruct",
  "sep_downsample",
  "sep_upsample",
  "set_quality_ratings",
  "set_quant_slots",
  "set_sample_factors",
  "setn(lua_State*)",
  "setnodevector(lua_State*, Table*, int)",
  "setrlimit",
  "setupGraphics(OSystem&)",
  "sfnt_done_face",
  "sfnt_get_charset_id",
  "sfnt_get_glyph_name",
  "sfnt_get_name_index",
  "sfnt_get_ps_name",
  "sfnt_init_face",
  "sfnt_load_face",
  "sfnt_stream_close",
  "sha256crypt",
  "sha512crypt",
  "sift",
  "sigprocmask",
  "singlestep(lua_State*)",
  "singlevar(LexState*, expdesc*)",
  "singlevaraux(FuncState*, TString*, expdesc*, int)",
  "siprintf",
  "skip_input_data",
  "skip_sep(LexState*)",
  "skip_variable",
  "snprintf",
  "sort(lua_State*)",
  "sort_comp(lua_State*, int, int)",
  "splashScreen()",
  "sprintf",
  "sscanf",
  "start_input_bmp",
  "start_input_pass",
  "start_input_tga",
  "start_output_gif",
  "start_output_pass",
  "start_output_ppm",
  "start_output_tga",
  "start_pass",
  "start_pass.2",
  "start_pass_1_quant",
  "start_pass_2_quant",
  "start_pass_coef",
  "start_pass_dpost",
  "start_pass_fdctmgr",
  "start_pass_huff",
  "start_pass_huff_decoder",
  "start_pass_main",
  "start_pass_prep",
  "std::__2::(anonymous namespace)::__fake_bind::operator()() const",
  "std::__2::(anonymous namespace)::do_strerror_r(int)",
  "std::__2::(anonymous namespace)::initial_string<std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>>>::operator()() const",
  "std::__2::(anonymous namespace)::initial_string<std::__2::basic_string<wchar_t, std::__2::char_traits<wchar_t>, std::__2::allocator<wchar_t>>>::operator()() const",
  "std::__2::(anonymous namespace)::release::operator()(std::__2::locale::facet*)",
  "std::__2::(anonymous namespace)::throw_from_string_invalid_arg(std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>> const&)",
  "std::__2::(anonymous namespace)::throw_from_string_out_of_range(std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>> const&)",
  "std::__2::DoIOSInit::DoIOSInit()",
  "std::__2::DoIOSInit::~DoIOSInit()",
  "std::__2::__allocation_guard<std::__2::allocator<std::__2::__shared_ptr_emplace<std::__2::__fs::filesystem::__dir_stream, std::__2::allocator<std::__2::__fs::filesystem::__dir_stream>>>>::__allocation_guard[abi:v15006]<std::__2::allocator<std::__2::__fs::filesystem::__dir_stream>>(std::__2::allocator<std::__2::__fs::filesystem::__dir_stream>, unsigned long)",
  "std::__2::__allocation_guard<std::__2::allocator<std::__2::__shared_ptr_emplace<std::__2::__fs::filesystem::recursive_directory_iterator::__shared_imp, std::__2::allocator<std::__2::__fs::filesystem::recursive_directory_iterator::__shared_imp>>>>::__allocation_guard[abi:v15006]<std::__2::allocator<std::__2::__fs::filesystem::recursive_directory_iterator::__shared_imp>>(std::__2::allocator<std::__2::__fs::filesystem::recursive_directory_iterator::__shared_imp>, unsigned long)",
  "std::__2::__allocation_result<std::__2::allocator_traits<std::__2::__hidden_allocator<std::__2::__assoc_sub_state*>>::pointer> std::__2::__allocate_at_least[abi:v15006]<std::__2::__hidden_allocator<std::__2::__assoc_sub_state*>>(std::__2::__hidden_allocator<std::__2::__assoc_sub_state*>&, unsigned long)",
  "std::__2::__allocation_result<std::__2::allocator_traits<std::__2::__hidden_allocator<std::__2::pair<std::__2::condition_variable*, std::__2::mutex*>>>::pointer> std::__2::__allocate_at_least[abi:v15006]<std::__2::__hidden_allocator<std::__2::pair<std::__2::condition_variable*, std::__2::mutex*>>>(std::__2::__hidden_allocator<std::__2::pair<std::__2::condition_variable*, std::__2::mutex*>>&, unsigned long)",
  "std::__2::__allocation_result<std::__2::allocator_traits<std::__2::__sso_allocator<std::__2::locale::facet*, 30ul>>::pointer> std::__2::__allocate_at_least[abi:v15006]<std::__2::__sso_allocator<std::__2::locale::facet*, 30ul>>(std::__2::__sso_allocator<std::__2::locale::facet*, 30ul>&, unsigned long)",
  "std::__2::__allocation_result<std::__2::allocator_traits<std::__2::allocator<char>>::pointer> std::__2::__allocate_at_least[abi:v15006]<std::__2::allocator<char>>(std::__2::allocator<char>&, unsigned long)",
  "std::__2::__allocation_result<std::__2::allocator_traits<std::__2::allocator<std::__2::__fs::filesystem::__dir_stream*>>::pointer> std::__2::__allocate_at_least[abi:v15006]<std::__2::allocator<std::__2::__fs::filesystem::__dir_stream*>>(std::__2::allocator<std::__2::__fs::filesystem::__dir_stream*>&, unsigned long)",
  "std::__2::__allocation_result<std::__2::allocator_traits<std::__2::allocator<std::__2::basic_string_view<char, std::__2::char_traits<char>>>>::pointer> std::__2::__allocate_at_least[abi:v15006]<std::__2::allocator<std::__2::basic_string_view<char, std::__2::char_traits<char>>>>(std::__2::allocator<std::__2::basic_string_view<char, std::__2::char_traits<char>>>&, unsigned long)",
  "std::__2::__allocation_result<std::__2::allocator_traits<std::__2::allocator<std::__2::pair<std::__2::basic_string_view<char, std::__2::char_traits<char>>, std::__2::__fs::filesystem::PathPartKind>>>::pointer> std::__2::__allocate_at_least[abi:v15006]<std::__2::allocator<std::__2::pair<std::__2::basic_string_view<char, std::__2::char_traits<char>>, std::__2::__fs::filesystem::PathPartKind>>>(std::__2::allocator<std::__2::pair<std::__2::basic_string_view<char, std::__2::char_traits<char>>, std::__2::__fs::filesystem::PathPartKind>>&, unsigned long)",
  "std::__2::__allocation_result<std::__2::allocator_traits<std::__2::allocator<wchar_t>>::pointer> std::__2::__allocate_at_least[abi:v15006]<std::__2::allocator<wchar_t>>(std::__2::allocator<wchar_t>&, unsigned long)",
  "std::__2::__assoc_sub_state::__has_value[abi:v15006]() const",
  "std::__2::__assoc_sub_state::__on_zero_shared()",
  "std::__2::__assoc_sub_state::__sub_wait(std::__2::unique_lock<std::__2::mutex>&)",
  "std::__2::__assoc_sub_state::copy()",
  "std::__2::__assoc_sub_state::set_exception(std::exception_ptr)",
  "std::__2::__assoc_sub_state::set_exception_at_thread_exit(std::exception_ptr)",
  "std::__2::__assoc_sub_state::set_value()",
  "std::__2::__assoc_sub_state::set_value_at_thread_exit()",
  "std::__2::__assoc_sub_state::wait()",
  "std::__2::__assoc_sub_state::~__assoc_sub_state()",
  "std::__2::__barrier_algorithm_base::__barrier_algorithm_base(long&)",
  "std::__2::__c_node::~__c_node()",
  "std::__2::__call_once(unsigned long volatile&, void*, void (*)(void*))",
  "std::__2::__call_once_param<std::__2::tuple<std::__2::(anonymous namespace)::__fake_bind&&>>::operator()[abi:v15006]()",
  "std::__2::__construct_barrier_algorithm_base(long&)",
  "std::__2::__do_message::message(int) const",
  "std::__2::__fs::filesystem::(anonymous namespace)::remove_all_impl(int, std::__2::__fs::filesystem::path const&, std::__2::error_code&)",
  "std::__2::__fs::filesystem::__absolute(std::__2::__fs::filesystem::path const&, std::__2::error_code*)",
  "std::__2::__fs::filesystem::__canonical(std::__2::__fs::filesystem::path const&, std::__2::error_code*)",
  "std::__2::__fs::filesystem::__copy(std::__2::__fs::filesystem::path const&, std::__2::__fs::filesystem::path const&, std::__2::__fs::filesystem::copy_options, std::__2::error_code*)",
  "std::__2::__fs::filesystem::__copy_file(std::__2::__fs::filesystem::path const&, std::__2::__fs::filesystem::path const&, std::__2::__fs::filesystem::copy_options, std::__2::error_code*)",
  "std::__2::__fs::filesystem::__copy_file(std::__2::__fs::filesystem::path const&, std::__2::__fs::filesystem::path const&, std::__2::__fs::filesystem::copy_options, std::__2::error_code*)::$_0::operator()() const",
  "std::__2::__fs::filesystem::__copy_symlink(std::__2::__fs::filesystem::path const&, std::__2::__fs::filesystem::path const&, std::__2::error_code*)",
  "std::__2::__fs::filesystem::__create_directories(std::__2::__fs::filesystem::path const&, std::__2::error_code*)",
  "std::__2::__fs::filesystem::__create_directory(std::__2::__fs::filesystem::path const&, std::__2::__fs::filesystem::path const&, std::__2::error_code*)",
  "std::__2::__fs::filesystem::__create_directory(std::__2::__fs::filesystem::path const&, std::__2::error_code*)",
  "std::__2::__fs::filesystem::__create_directory_symlink(std::__2::__fs::filesystem::path const&, std::__2::__fs::filesystem::path const&, std::__2::error_code*)",
  "std::__2::__fs::filesystem::__create_hard_link(std::__2::__fs::filesystem::path const&, std::__2::__fs::filesystem::path const&, std::__2::error_code*)",
  "std::__2::__fs::filesystem::__create_symlink(std::__2::__fs::filesystem::path const&, std::__2::__fs::filesystem::path const&, std::__2::error_code*)",
  "std::__2::__fs::filesystem::__current_path(std::__2::__fs::filesystem::path const&, std::__2::error_code*)",
  "std::__2::__fs::filesystem::__current_path(std::__2::error_code*)",
  "std::__2::__fs::filesystem::__dir_stream* std::__2::construct_at[abi:v15006]<std::__2::__fs::filesystem::__dir_stream, std::__2::__fs::filesystem::path const&, std::__2::__fs::filesystem::directory_options&, std::__2::error_code&, std::__2::__fs::filesystem::__dir_stream*>(std::__2::__fs::filesystem::__dir_stream*, std::__2::__fs::filesystem::path const&, std::__2::__fs::filesystem::directory_options&, std::__2::error_code&)",
  "std::__2::__fs::filesystem::__dir_stream::__dir_stream(std::__2::__fs::filesystem::path const&, std::__2::__fs::filesystem::directory_options, std::__2::error_code&)",
  "std::__2::__fs::filesystem::__dir_stream::advance(std::__2::error_code&)",
  "std::__2::__fs::filesystem::__do_absolute(std::__2::__fs::filesystem::path const&, std::__2::__fs::filesystem::path*, std::__2::error_code*)",
  "std::__2::__fs::filesystem::__equivalent(std::__2::__fs::filesystem::path const&, std::__2::__fs::filesystem::path const&, std::__2::error_code*)",
  "std::__2::__fs::filesystem::__file_size(std::__2::__fs::filesystem::path const&, std::__2::error_code*)",
  "std::__2::__fs::filesystem::__fs_is_empty(std::__2::__fs::filesystem::path const&, std::__2::error_code*)",
  "std::__2::__fs::filesystem::__hard_link_count(std::__2::__fs::filesystem::path const&, std::__2::error_code*)",
  "std::__2::__fs::filesystem::__last_write_time(std::__2::__fs::filesystem::path const&, std::__2::chrono::time_point<std::__2::__fs::filesystem::_FilesystemClock, std::__2::chrono::duration<__int128, std::__2::ratio<1ll, 1000000000ll>>>, std::__2::error_code*)",
  "std::__2::__fs::filesystem::__last_write_time(std::__2::__fs::filesystem::path const&, std::__2::error_code*)",
  "std::__2::__fs::filesystem::__permissions(std::__2::__fs::filesystem::path const&, std::__2::__fs::filesystem::perms, std::__2::__fs::filesystem::perm_options, std::__2::error_code*)",
  "std::__2::__fs::filesystem::__read_symlink(std::__2::__fs::filesystem::path const&, std::__2::error_code*)",
  "std::__2::__fs::filesystem::__remove(std::__2::__fs::filesystem::path const&, std::__2::error_code*)",
  "std::__2::__fs::filesystem::__remove_all(std::__2::__fs::filesystem::path const&, std::__2::error_code*)",
  "std::__2::__fs::filesystem::__rename(std::__2::__fs::filesystem::path const&, std::__2::__fs::filesystem::path const&, std::__2::error_code*)",
  "std::__2::__fs::filesystem::__resize_file(std::__2::__fs::filesystem::path const&, unsigned long long, std::__2::error_code*)",
  "std::__2::__fs::filesystem::__space(std::__2::__fs::filesystem::path const&, std::__2::error_code*)",
  "std::__2::__fs::filesystem::__status(std::__2::__fs::filesystem::path const&, std::__2::error_code*)",
  "std::__2::__fs::filesystem::__symlink_status(std::__2::__fs::filesystem::path const&, std::__2::error_code*)",
  "std::__2::__fs::filesystem::__temp_directory_path(std::__2::error_code*)",
  "std::__2::__fs::filesystem::__weakly_canonical(std::__2::__fs::filesystem::path const&, std::__2::error_code*)",
  "std::__2::__fs::filesystem::detail::(anonymous namespace)::ErrorHandler<bool>::report(std::__2::errc const&) const",
  "std::__2::__fs::filesystem::detail::(anonymous namespace)::ErrorHandler<bool>::report(std::__2::errc const&, char const*, ...) const",
  "std::__2::__fs::filesystem::detail::(anonymous namespace)::ErrorHandler<bool>::report(std::__2::error_code const&) const",
  "std::__2::__fs::filesystem::detail::(anonymous namespace)::ErrorHandler<bool>::report_impl(std::__2::error_code const&, char const*, void*) const",
  "std::__2::__fs::filesystem::detail::(anonymous namespace)::ErrorHandler<std::__2::__fs::filesystem::path>::report(std::__2::errc const&) const",
  "std::__2::__fs::filesystem::detail::(anonymous namespace)::ErrorHandler<std::__2::__fs::filesystem::path>::report(std::__2::errc const&, char const*, ...) const",
  "std::__2::__fs::filesystem::detail::(anonymous namespace)::ErrorHandler<std::__2::__fs::filesystem::path>::report(std::__2::error_code const&) const",
  "std::__2::__fs::filesystem::detail::(anonymous namespace)::ErrorHandler<std::__2::__fs::filesystem::path>::report(std::__2::error_code const&, char const*, ...) const",
  "std::__2::__fs::filesystem::detail::(anonymous namespace)::ErrorHandler<std::__2::__fs::filesystem::path>::report_impl(std::__2::error_code const&, char const*, void*) const",
  "std::__2::__fs::filesystem::detail::(anonymous namespace)::ErrorHandler<std::__2::chrono::time_point<std::__2::__fs::filesystem::_FilesystemClock, std::__2::chrono::duration<__int128, std::__2::ratio<1ll, 1000000000ll>>>>::report(std::__2::error_code const&) const",
  "std::__2::__fs::filesystem::detail::(anonymous namespace)::ErrorHandler<unsigned long long>::report(std::__2::error_code const&) const",
  "std::__2::__fs::filesystem::detail::(anonymous namespace)::ErrorHandler<void>::report(std::__2::errc const&) const",
  "std::__2::__fs::filesystem::detail::(anonymous namespace)::ErrorHandler<void>::report(std::__2::error_code const&) const",
  "std::__2::__fs::filesystem::detail::(anonymous namespace)::ErrorHandler<void>::report(std::__2::error_code const&, char const*, ...) const",
  "std::__2::__fs::filesystem::detail::(anonymous namespace)::ErrorHandler<void>::report_impl(std::__2::error_code const&, char const*, void*) const",
  "std::__2::__fs::filesystem::detail::(anonymous namespace)::FileDescriptor std::__2::__fs::filesystem::detail::(anonymous namespace)::FileDescriptor::create_with_status<int, unsigned int>(std::__2::__fs::filesystem::path const*, std::__2::error_code&, int, unsigned int)",
  "std::__2::__fs::filesystem::detail::(anonymous namespace)::FileDescriptor std::__2::__fs::filesystem::detail::(anonymous namespace)::FileDescriptor::create_with_status<int>(std::__2::__fs::filesystem::path const*, std::__2::error_code&, int)",
  "std::__2::__fs::filesystem::detail::(anonymous namespace)::FileDescriptor::refresh_status(std::__2::error_code&)",
  "std::__2::__fs::filesystem::detail::(anonymous namespace)::copy_file_impl(std::__2::__fs::filesystem::detail::(anonymous namespace)::FileDescriptor&, std::__2::__fs::filesystem::detail::(anonymous namespace)::FileDescriptor&, std::__2::error_code&)",
  "std::__2::__fs::filesystem::detail::(anonymous namespace)::create_file_status(std::__2::error_code&, std::__2::__fs::filesystem::path const&, stat const&, std::__2::error_code*)",
  "std::__2::__fs::filesystem::detail::(anonymous namespace)::format_string(char const*, ...)",
  "std::__2::__fs::filesystem::detail::(anonymous namespace)::format_string_impl(char const*, void*)",
  "std::__2::__fs::filesystem::detail::(anonymous namespace)::posix_lstat(std::__2::__fs::filesystem::path const&, stat&, std::__2::error_code*)",
  "std::__2::__fs::filesystem::detail::(anonymous namespace)::posix_lstat(std::__2::__fs::filesystem::path const&, std::__2::error_code*)",
  "std::__2::__fs::filesystem::detail::(anonymous namespace)::posix_stat(std::__2::__fs::filesystem::path const&, stat&, std::__2::error_code*)",
  "std::__2::__fs::filesystem::detail::(anonymous namespace)::posix_stat(std::__2::__fs::filesystem::path const&, std::__2::error_code*)",
  "std::__2::__fs::filesystem::directory_entry::__do_refresh()",
  "std::__2::__fs::filesystem::directory_entry::__get_ft[abi:v15006](std::__2::error_code*) const",
  "std::__2::__fs::filesystem::directory_entry::__get_sym_ft[abi:v15006](std::__2::error_code*) const",
  "std::__2::__fs::filesystem::directory_iterator::__increment(std::__2::error_code*)",
  "std::__2::__fs::filesystem::directory_iterator::directory_iterator(std::__2::__fs::filesystem::path const&, std::__2::error_code*, std::__2::__fs::filesystem::directory_options)",
  "std::__2::__fs::filesystem::directory_iterator::directory_iterator[abi:v15006](std::__2::__fs::filesystem::path const&)",
  "std::__2::__fs::filesystem::directory_iterator::directory_iterator[abi:v15006](std::__2::__fs::filesystem::path const&, std::__2::error_code&)",
  "std::__2::__fs::filesystem::directory_iterator::increment[abi:v15006](std::__2::error_code&)",
  "std::__2::__fs::filesystem::directory_iterator::~directory_iterator[abi:v15006]()",
  "std::__2::__fs::filesystem::filesystem_error::__create_what(int)",
  "std::__2::__fs::filesystem::filesystem_error::__create_what(int)::$_0::operator()() const",
  "std::__2::__fs::filesystem::filesystem_error::~filesystem_error()",
  "std::__2::__fs::filesystem::operator/[abi:v15006](std::__2::__fs::filesystem::path const&, std::__2::__fs::filesystem::path const&)",
  "std::__2::__fs::filesystem::path::__assign_view[abi:v15006](std::__2::basic_string_view<char, std::__2::char_traits<char>> const&)",
  "std::__2::__fs::filesystem::path::__reserve[abi:v15006](unsigned long)",
  "std::__2::__fs::filesystem::path::begin() const",
  "std::__2::__fs::filesystem::path::extension[abi:v15006]() const",
  "std::__2::__fs::filesystem::path::filename[abi:v15006]() const",
  "std::__2::__fs::filesystem::path::iterator::__decrement()",
  "std::__2::__fs::filesystem::path::iterator::__increment()",
  "std::__2::__fs::filesystem::path::lexically_normal() const",
  "std::__2::__fs::filesystem::path::lexically_normal() const::$_0::operator()(std::__2::__fs::filesystem::PathPartKind, std::__2::basic_string_view<char, std::__2::char_traits<char>>) const",
  "std::__2::__fs::filesystem::path::lexically_relative(std::__2::__fs::filesystem::path const&) const",
  "std::__2::__fs::filesystem::path::operator/=[abi:v15006](std::__2::__fs::filesystem::path const&)",
  "std::__2::__fs::filesystem::path::parent_path[abi:v15006]() const",
  "std::__2::__fs::filesystem::path::path[abi:v15006](std::__2::__fs::filesystem::path const&)",
  "std::__2::__fs::filesystem::path::path[abi:v15006]<char [1], void>(char const (&) [1], std::__2::__fs::filesystem::path::format)",
  "std::__2::__fs::filesystem::path::path[abi:v15006]<char [2], void>(char const (&) [2], std::__2::__fs::filesystem::path::format)",
  "std::__2::__fs::filesystem::path::path[abi:v15006]<char const*, void>(char const* const&, std::__2::__fs::filesystem::path::format)",
  "std::__2::__fs::filesystem::path::path[abi:v15006]<char*, void>(char* const&, std::__2::__fs::filesystem::path::format)",
  "std::__2::__fs::filesystem::path::path[abi:v15006]<std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>>, void>(std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>> const&, std::__2::__fs::filesystem::path::format)",
  "std::__2::__fs::filesystem::path::path[abi:v15006]<std::__2::basic_string_view<char, std::__2::char_traits<char>>, void>(std::__2::basic_string_view<char, std::__2::char_traits<char>> const&, std::__2::__fs::filesystem::path::format)",
  "std::__2::__fs::filesystem::path::replace_extension(std::__2::__fs::filesystem::path const&)",
  "std::__2::__fs::filesystem::recursive_directory_iterator::__advance(std::__2::error_code*)",
  "std::__2::__fs::filesystem::recursive_directory_iterator::__increment(std::__2::error_code*)",
  "std::__2::__fs::filesystem::recursive_directory_iterator::__pop(std::__2::error_code*)",
  "std::__2::__fs::filesystem::recursive_directory_iterator::__try_recursion(std::__2::error_code*)",
  "std::__2::__fs::filesystem::recursive_directory_iterator::recursive_directory_iterator(std::__2::__fs::filesystem::path const&, std::__2::__fs::filesystem::directory_options, std::__2::error_code*)",
  "std::__2::__fs::filesystem::status[abi:v15006](std::__2::__fs::filesystem::path const&, std::__2::error_code&)",
  "std::__2::__future_error_category::message(int) const",
  "std::__2::__generic_error_category::message(int) const",
  "std::__2::__hidden_allocator<std::__2::__assoc_sub_state*>::allocate(unsigned long)",
  "std::__2::__hidden_allocator<std::__2::pair<std::__2::condition_variable*, std::__2::mutex*>>::allocate(unsigned long)",
  "std::__2::__iostream_category::message(int) const",
  "std::__2::__libcpp_abort_debug_function(std::__2::__libcpp_debug_info const&)",
  "std::__2::__libcpp_allocate[abi:v15006](unsigned long, unsigned long)",
  "std::__2::__libcpp_asprintf_l(char**, __locale_struct*, char const*, ...)",
  "std::__2::__libcpp_db::__addable(void const*, long) const",
  "std::__2::__libcpp_db::__decrementable(void const*) const",
  "std::__2::__libcpp_db::__dereferenceable(void const*) const",
  "std::__2::__libcpp_db::__insert_c(void*, std::__2::__c_node* (*)(void*, void*, std::__2::__c_node*))",
  "std::__2::__libcpp_db::__subscriptable(void const*, long) const",
  "std::__2::__libcpp_db::~__libcpp_db()",
  "std::__2::__libcpp_debug_info::what() const",
  "std::__2::__libcpp_refstring::__libcpp_refstring(char const*)",
  "std::__2::__libcpp_snprintf_l(char*, unsigned long, __locale_struct*, char const*, ...)",
  "std::__2::__libcpp_sscanf_l(char const*, __locale_struct*, char const*, ...)",
  "std::__2::__libcpp_verbose_abort(char const*, ...)",
  "std::__2::__money_get<char>::__gather_info(bool, std::__2::locale const&, std::__2::money_base::pattern&, char&, char&, std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>>&, std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>>&, std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>>&, std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>>&, int&)",
  "std::__2::__money_get<wchar_t>::__gather_info(bool, std::__2::locale const&, std::__2::money_base::pattern&, wchar_t&, wchar_t&, std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>>&, std::__2::basic_string<wchar_t, std::__2::char_traits<wchar_t>, std::__2::allocator<wchar_t>>&, std::__2::basic_string<wchar_t, std::__2::char_traits<wchar_t>, std::__2::allocator<wchar_t>>&, std::__2::basic_string<wchar_t, std::__2::char_traits<wchar_t>, std::__2::allocator<wchar_t>>&, int&)",
  "std::__2::__money_put<char>::__format(char*, char*&, char*&, unsigned int, char const*, char const*, std::__2::ctype<char> const&, bool, std::__2::money_base::pattern const&, char, char, std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>> const&, std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>> const&, std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>> const&, int)",
  "std::__2::__money_put<char>::__gather_info(bool, bool, std::__2::locale const&, std::__2::money_base::pattern&, char&, char&, std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>>&, std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>>&, std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>>&, int&)",
  "std::__2::__money_put<wchar_t>::__format(wchar_t*, wchar_t*&, wchar_t*&, unsigned int, wchar_t const*, wchar_t const*, std::__2::ctype<wchar_t> const&, bool, std::__2::money_base::pattern const&, wchar_t, wchar_t, std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>> const&, std::__2::basic_string<wchar_t, std::__2::char_traits<wchar_t>, std::__2::allocator<wchar_t>> const&, std::__2::basic_string<wchar_t, std::__2::char_traits<wchar_t>, std::__2::allocator<wchar_t>> const&, int)",
  "std::__2::__money_put<wchar_t>::__gather_info(bool, bool, std::__2::locale const&, std::__2::money_base::pattern&, wchar_t&, wchar_t&, std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>>&, std::__2::basic_string<wchar_t, std::__2::char_traits<wchar_t>, std::__2::allocator<wchar_t>>&, std::__2::basic_string<wchar_t, std::__2::char_traits<wchar_t>, std::__2::allocator<wchar_t>>&, int&)",
  "std::__2::__num_get<char>::__stage2_float_prep(std::__2::ios_base&, char*, char&, char&)",
  "std::__2::__num_get<char>::__stage2_int_prep(std::__2::ios_base&, char&)",
  "std::__2::__num_get<wchar_t>::__do_widen(std::__2::ios_base&, wchar_t*) const",
  "std::__2::__num_get<wchar_t>::__stage2_float_prep(std::__2::ios_base&, wchar_t*, wchar_t&, wchar_t&)",
  "std::__2::__num_get<wchar_t>::__stage2_int_prep(std::__2::ios_base&, wchar_t&)",
  "std::__2::__num_put<char>::__widen_and_group_float(char*, char*, char*, char*, char*&, char*&, std::__2::locale const&)",
  "std::__2::__num_put<char>::__widen_and_group_int(char*, char*, char*, char*, char*&, char*&, std::__2::locale const&)",
  "std::__2::__num_put<wchar_t>::__widen_and_group_float(char*, char*, char*, wchar_t*, wchar_t*&, wchar_t*&, std::__2::locale const&)",
  "std::__2::__num_put<wchar_t>::__widen_and_group_int(char*, char*, char*, wchar_t*, wchar_t*&, wchar_t*&, std::__2::locale const&)",
  "std::__2::__release_shared_count::operator()(std::__2::__shared_count*)",
  "std::__2::__shared_count::__release_shared[abi:v15006]()",
  "std::__2::__shared_ptr_emplace<std::__2::__fs::filesystem::__dir_stream, std::__2::allocator<std::__2::__fs::filesystem::__dir_stream>>::__shared_ptr_emplace[abi:v15006]<std::__2::__fs::filesystem::path const&, std::__2::__fs::filesystem::directory_options&, std::__2::error_code&>(std::__2::allocator<std::__2::__fs::filesystem::__dir_stream>, std::__2::__fs::filesystem::path const&, std::__2::__fs::filesystem::directory_options&, std::__2::error_code&)",
  "std::__2::__shared_weak_count::__release_shared[abi:v15006]()",
  "std::__2::__shared_weak_count::__release_weak()",
  "std::__2::__split_buffer<std::__2::__assoc_sub_state*, std::__2::__hidden_allocator<std::__2::__assoc_sub_state*>&>::__split_buffer(unsigned long, unsigned long, std::__2::__hidden_allocator<std::__2::__assoc_sub_state*>&)",
  "std::__2::__split_buffer<std::__2::__fs::filesystem::__dir_stream*, std::__2::allocator<std::__2::__fs::filesystem::__dir_stream*>&>::__split_buffer(unsigned long, unsigned long, std::__2::allocator<std::__2::__fs::filesystem::__dir_stream*>&)",
  "std::__2::__split_buffer<std::__2::__fs::filesystem::__dir_stream*, std::__2::allocator<std::__2::__fs::filesystem::__dir_stream*>&>::push_back(std::__2::__fs::filesystem::__dir_stream*&&)",
  "std::__2::__split_buffer<std::__2::__fs::filesystem::__dir_stream*, std::__2::allocator<std::__2::__fs::filesystem::__dir_stream*>&>::push_front(std::__2::__fs::filesystem::__dir_stream* const&)",
  "std::__2::__split_buffer<std::__2::__fs::filesystem::__dir_stream*, std::__2::allocator<std::__2::__fs::filesystem::__dir_stream*>>::push_back(std::__2::__fs::filesystem::__dir_stream*&&)",
  "std::__2::__split_buffer<std::__2::__fs::filesystem::__dir_stream*, std::__2::allocator<std::__2::__fs::filesystem::__dir_stream*>>::push_back[abi:v15006](std::__2::__fs::filesystem::__dir_stream* const&)",
  "std::__2::__split_buffer<std::__2::__fs::filesystem::__dir_stream*, std::__2::allocator<std::__2::__fs::filesystem::__dir_stream*>>::push_front(std::__2::__fs::filesystem::__dir_stream*&&)",
  "std::__2::__split_buffer<std::__2::basic_string_view<char, std::__2::char_traits<char>>, std::__2::allocator<std::__2::basic_string_view<char, std::__2::char_traits<char>>>&>::__split_buffer(unsigned long, unsigned long, std::__2::allocator<std::__2::basic_string_view<char, std::__2::char_traits<char>>>&)",
  "std::__2::__split_buffer<std::__2::locale::facet*, std::__2::__sso_allocator<std::__2::locale::facet*, 30ul>&>::__split_buffer(unsigned long, unsigned long, std::__2::__sso_allocator<std::__2::locale::facet*, 30ul>&)",
  "std::__2::__split_buffer<std::__2::pair<std::__2::basic_string_view<char, std::__2::char_traits<char>>, std::__2::__fs::filesystem::PathPartKind>, std::__2::allocator<std::__2::pair<std::__2::basic_string_view<char, std::__2::char_traits<char>>, std::__2::__fs::filesystem::PathPartKind>>&>::__split_buffer(unsigned long, unsigned long, std::__2::allocator<std::__2::pair<std::__2::basic_string_view<char, std::__2::char_traits<char>>, std::__2::__fs::filesystem::PathPartKind>>&)",
  "std::__2::__split_buffer<std::__2::pair<std::__2::condition_variable*, std::__2::mutex*>, std::__2::__hidden_allocator<std::__2::pair<std::__2::condition_variable*, std::__2::mutex*>>&>::__split_buffer(unsigned long, unsigned long, std::__2::__hidden_allocator<std::__2::pair<std::__2::condition_variable*, std::__2::mutex*>>&)",
  "std::__2::__sso_allocator<std::__2::locale::facet*, 30ul>::allocate[abi:v15006](unsigned long, void const*)",
  "std::__2::__stdinbuf<char>::__getchar(bool)",
  "std::__2::__stdinbuf<char>::__stdinbuf(_IO_FILE*, __mbstate_t*)",
  "std::__2::__stdinbuf<char>::imbue(std::__2::locale const&)",
  "std::__2::__stdinbuf<char>::pbackfail(int)",
  "std::__2::__stdinbuf<char>::uflow()",
  "std::__2::__stdinbuf<char>::underflow()",
  "std::__2::__stdinbuf<char>::~__stdinbuf()",
  "std::__2::__stdinbuf<wchar_t>::__getchar(bool)",
  "std::__2::__stdinbuf<wchar_t>::__stdinbuf(_IO_FILE*, __mbstate_t*)",
  "std::__2::__stdinbuf<wchar_t>::imbue(std::__2::locale const&)",
  "std::__2::__stdinbuf<wchar_t>::pbackfail(unsigned int)",
  "std::__2::__stdinbuf<wchar_t>::uflow()",
  "std::__2::__stdinbuf<wchar_t>::underflow()",
  "std::__2::__stdinbuf<wchar_t>::~__stdinbuf()",
  "std::__2::__stdoutbuf<char>::__stdoutbuf(_IO_FILE*, __mbstate_t*)",
  "std::__2::__stdoutbuf<char>::imbue(std::__2::locale const&)",
  "std::__2::__stdoutbuf<char>::overflow(int)",
  "std::__2::__stdoutbuf<char>::sync()",
  "std::__2::__stdoutbuf<char>::xsputn(char const*, long)",
  "std::__2::__stdoutbuf<char>::~__stdoutbuf()",
  "std::__2::__stdoutbuf<wchar_t>::__stdoutbuf(_IO_FILE*, __mbstate_t*)",
  "std::__2::__stdoutbuf<wchar_t>::imbue(std::__2::locale const&)",
  "std::__2::__stdoutbuf<wchar_t>::overflow(unsigned int)",
  "std::__2::__stdoutbuf<wchar_t>::sync()",
  "std::__2::__stdoutbuf<wchar_t>::xsputn(wchar_t const*, long)",
  "std::__2::__stdoutbuf<wchar_t>::~__stdoutbuf()",
  "std::__2::__system_error_category::message(int) const",
  "std::__2::__thread_specific_ptr<std::__2::__thread_struct>::__at_thread_exit(void*)",
  "std::__2::__thread_struct::__make_ready_at_thread_exit(std::__2::__assoc_sub_state*)",
  "std::__2::__thread_struct::__thread_struct()",
  "std::__2::__thread_struct::notify_all_at_thread_exit(std::__2::condition_variable*, std::__2::mutex*)",
  "std::__2::__thread_struct::~__thread_struct()",
  "std::__2::__thread_struct_imp::__make_ready_at_thread_exit(std::__2::__assoc_sub_state*)",
  "std::__2::__thread_struct_imp::notify_all_at_thread_exit(std::__2::condition_variable*, std::__2::mutex*)",
  "std::__2::__thread_struct_imp::~__thread_struct_imp()",
  "std::__2::__time_get::__time_get(char const*)",
  "std::__2::__time_get::__time_get(std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>> const&)",
  "std::__2::__time_get_c_storage<char>::__X() const",
  "std::__2::__time_get_c_storage<char>::__am_pm() const",
  "std::__2::__time_get_c_storage<char>::__c() const",
  "std::__2::__time_get_c_storage<char>::__months() const",
  "std::__2::__time_get_c_storage<char>::__r() const",
  "std::__2::__time_get_c_storage<char>::__weeks() const",
  "std::__2::__time_get_c_storage<char>::__x() const",
  "std::__2::__time_get_c_storage<wchar_t>::__X() const",
  "std::__2::__time_get_c_storage<wchar_t>::__am_pm() const",
  "std::__2::__time_get_c_storage<wchar_t>::__c() const",
  "std::__2::__time_get_c_storage<wchar_t>::__months() const",
  "std::__2::__time_get_c_storage<wchar_t>::__r() const",
  "std::__2::__time_get_c_storage<wchar_t>::__weeks() const",
  "std::__2::__time_get_c_storage<wchar_t>::__x() const",
  "std::__2::__time_get_storage<char>::__analyze(char, std::__2::ctype<char> const&)",
  "std::__2::__time_get_storage<char>::__time_get_storage(char const*)",
  "std::__2::__time_get_storage<char>::__time_get_storage(std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>> const&)",
  "std::__2::__time_get_storage<char>::init(std::__2::ctype<char> const&)",
  "std::__2::__time_get_storage<wchar_t>::__analyze(char, std::__2::ctype<wchar_t> const&)",
  "std::__2::__time_get_storage<wchar_t>::__time_get_storage(char const*)",
  "std::__2::__time_get_storage<wchar_t>::__time_get_storage(std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>> const&)",
  "std::__2::__time_get_storage<wchar_t>::init(std::__2::ctype<wchar_t> const&)",
  "std::__2::__time_get_temp<char>::__time_get_temp(char const*)",
  "std::__2::__time_get_temp<char>::__time_get_temp(std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>> const&)",
  "std::__2::__time_get_temp<wchar_t>::__time_get_temp(char const*)",
  "std::__2::__time_get_temp<wchar_t>::__time_get_temp(std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>> const&)",
  "std::__2::__time_put::__time_put(char const*)",
  "std::__2::__time_put::__time_put(std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>> const&)",
  "std::__2::allocator<char>::allocate[abi:v15006](unsigned long)",
  "std::__2::allocator<std::__2::__fs::filesystem::__dir_stream*>::allocate[abi:v15006](unsigned long)",
  "std::__2::allocator<std::__2::__fs::filesystem::__dir_stream>::allocate[abi:v15006](unsigned long)",
  "std::__2::allocator<std::__2::__shared_ptr_emplace<std::__2::__fs::filesystem::__dir_stream, std::__2::allocator<std::__2::__fs::filesystem::__dir_stream>>>::allocate[abi:v15006](unsigned long)",
  "std::__2::allocator<std::__2::__shared_ptr_emplace<std::__2::__fs::filesystem::recursive_directory_iterator::__shared_imp, std::__2::allocator<std::__2::__fs::filesystem::recursive_directory_iterator::__shared_imp>>>::allocate[abi:v15006](unsigned long)",
  "std::__2::allocator<std::__2::basic_string_view<char, std::__2::char_traits<char>>>::allocate[abi:v15006](unsigned long)",
  "std::__2::allocator<std::__2::locale::facet*>::allocate[abi:v15006](unsigned long)",
  "std::__2::allocator<std::__2::pair<std::__2::basic_string_view<char, std::__2::char_traits<char>>, std::__2::__fs::filesystem::PathPartKind>>::allocate[abi:v15006](unsigned long)",
  "std::__2::allocator<unsigned long>::allocate[abi:v15006](unsigned long)",
  "std::__2::allocator<wchar_t>::allocate[abi:v15006](unsigned long)",
  "std::__2::allocator_traits<std::__2::allocator<char>>::allocate[abi:v15006](std::__2::allocator<char>&, unsigned long)",
  "std::__2::allocator_traits<std::__2::allocator<std::__2::__fs::filesystem::__dir_stream>>::allocate[abi:v15006](std::__2::allocator<std::__2::__fs::filesystem::__dir_stream>&, unsigned long)",
  "std::__2::allocator_traits<std::__2::allocator<std::__2::__shared_ptr_emplace<std::__2::__fs::filesystem::__dir_stream, std::__2::allocator<std::__2::__fs::filesystem::__dir_stream>>>>::allocate[abi:v15006](std::__2::allocator<std::__2::__shared_ptr_emplace<std::__2::__fs::filesystem::__dir_stream, std::__2::allocator<std::__2::__fs::filesystem::__dir_stream>>>&, unsigned long)",
  "std::__2::allocator_traits<std::__2::allocator<std::__2::__shared_ptr_emplace<std::__2::__fs::filesystem::recursive_directory_iterator::__shared_imp, std::__2::allocator<std::__2::__fs::filesystem::recursive_directory_iterator::__shared_imp>>>>::allocate[abi:v15006](std::__2::allocator<std::__2::__shared_ptr_emplace<std::__2::__fs::filesystem::recursive_directory_iterator::__shared_imp, std::__2::allocator<std::__2::__fs::filesystem::recursive_directory_iterator::__shared_imp>>>&, unsigned long)",
  "std::__2::basic_filebuf<char, std::__2::char_traits<char>>::__open(int, unsigned int)",
  "std::__2::basic_filebuf<char, std::__2::char_traits<char>>::basic_filebuf()",
  "std::__2::basic_filebuf<char, std::__2::char_traits<char>>::close()",
  "std::__2::basic_filebuf<char, std::__2::char_traits<char>>::imbue(std::__2::locale const&)",
  "std::__2::basic_filebuf<char, std::__2::char_traits<char>>::open(char const*, unsigned int)",
  "std::__2::basic_filebuf<char, std::__2::char_traits<char>>::open(std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>> const&, unsigned int)",
  "std::__2::basic_filebuf<char, std::__2::char_traits<char>>::overflow(int)",
  "std::__2::basic_filebuf<char, std::__2::char_traits<char>>::seekoff(long long, std::__2::ios_base::seekdir, unsigned int)",
  "std::__2::basic_filebuf<char, std::__2::char_traits<char>>::seekpos(std::__2::fpos<__mbstate_t>, unsigned int)",
  "std::__2::basic_filebuf<char, std::__2::char_traits<char>>::setbuf(char*, long)",
  "std::__2::basic_filebuf<char, std::__2::char_traits<char>>::swap(std::__2::basic_filebuf<char, std::__2::char_traits<char>>&)",
  "std::__2::basic_filebuf<char, std::__2::char_traits<char>>::underflow()",
  "std::__2::basic_filebuf<char, std::__2::char_traits<char>>::~basic_filebuf()",
  "std::__2::basic_ifstream<char, std::__2::char_traits<char>>::__open(int, unsigned int)",
  "std::__2::basic_ifstream<char, std::__2::char_traits<char>>::basic_ifstream()",
  "std::__2::basic_ifstream<char, std::__2::char_traits<char>>::open(char const*, unsigned int)",
  "std::__2::basic_ifstream<char, std::__2::char_traits<char>>::open(std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>> const&, unsigned int)",
  "std::__2::basic_ifstream<char, std::__2::char_traits<char>>::~basic_ifstream()",
  "std::__2::basic_ifstream<char, std::__2::char_traits<char>>::~basic_ifstream().2",
  "std::__2::basic_ios<char, std::__2::char_traits<char>>::copyfmt(std::__2::basic_ios<char, std::__2::char_traits<char>> const&)",
  "std::__2::basic_ios<char, std::__2::char_traits<char>>::fill[abi:v15006]() const",
  "std::__2::basic_ios<char, std::__2::char_traits<char>>::init[abi:v15006](std::__2::basic_streambuf<char, std::__2::char_traits<char>>*)",
  "std::__2::basic_ios<char, std::__2::char_traits<char>>::swap[abi:v15006](std::__2::basic_ios<char, std::__2::char_traits<char>>&)",
  "std::__2::basic_ios<char, std::__2::char_traits<char>>::widen[abi:v15006](char) const",
  "std::__2::basic_ios<char, std::__2::char_traits<char>>::~basic_ios()",
  "std::__2::basic_ios<wchar_t, std::__2::char_traits<wchar_t>>::copyfmt(std::__2::basic_ios<wchar_t, std::__2::char_traits<wchar_t>> const&)",
  "std::__2::basic_ios<wchar_t, std::__2::char_traits<wchar_t>>::fill[abi:v15006]() const",
  "std::__2::basic_ios<wchar_t, std::__2::char_traits<wchar_t>>::init[abi:v15006](std::__2::basic_streambuf<wchar_t, std::__2::char_traits<wchar_t>>*)",
  "std::__2::basic_ios<wchar_t, std::__2::char_traits<wchar_t>>::widen[abi:v15006](char) const",
  "std::__2::basic_ios<wchar_t, std::__2::char_traits<wchar_t>>::~basic_ios()",
  "std::__2::basic_iostream<char, std::__2::char_traits<char>>::operator=(std::__2::basic_iostream<char, std::__2::char_traits<char>>&&)",
  "std::__2::basic_iostream<char, std::__2::char_traits<char>>::swap[abi:v15006](std::__2::basic_iostream<char, std::__2::char_traits<char>>&)",
  "std::__2::basic_iostream<char, std::__2::char_traits<char>>::~basic_iostream()",
  "std::__2::basic_iostream<char, std::__2::char_traits<char>>::~basic_iostream().2",
  "std::__2::basic_istream<char, std::__2::char_traits<char>>& std::__2::__input_arithmetic[abi:v15006]<bool, char, std::__2::char_traits<char>>(std::__2::basic_istream<char, std::__2::char_traits<char>>&, bool&)",
  "std::__2::basic_istream<char, std::__2::char_traits<char>>& std::__2::__input_arithmetic[abi:v15006]<double, char, std::__2::char_traits<char>>(std::__2::basic_istream<char, std::__2::char_traits<char>>&, double&)",
  "std::__2::basic_istream<char, std::__2::char_traits<char>>& std::__2::__input_arithmetic[abi:v15006]<float, char, std::__2::char_traits<char>>(std::__2::basic_istream<char, std::__2::char_traits<char>>&, float&)",
  "std::__2::basic_istream<char, std::__2::char_traits<char>>& std::__2::__input_arithmetic[abi:v15006]<long double, char, std::__2::char_traits<char>>(std::__2::basic_istream<char, std::__2::char_traits<char>>&, long double&)",
  "std::__2::basic_istream<char, std::__2::char_traits<char>>& std::__2::__input_arithmetic[abi:v15006]<long long, char, std::__2::char_traits<char>>(std::__2::basic_istream<char, std::__2::char_traits<char>>&, long long&)",
  "std::__2::basic_istream<char, std::__2::char_traits<char>>& std::__2::__input_arithmetic[abi:v15006]<long, char, std::__2::char_traits<char>>(std::__2::basic_istream<char, std::__2::char_traits<char>>&, long&)",
  "std::__2::basic_istream<char, std::__2::char_traits<char>>& std::__2::__input_arithmetic[abi:v15006]<unsigned int, char, std::__2::char_traits<char>>(std::__2::basic_istream<char, std::__2::char_traits<char>>&, unsigned int&)",
  "std::__2::basic_istream<char, std::__2::char_traits<char>>& std::__2::__input_arithmetic[abi:v15006]<unsigned long long, char, std::__2::char_traits<char>>(std::__2::basic_istream<char, std::__2::char_traits<char>>&, unsigned long long&)",
  "std::__2::basic_istream<char, std::__2::char_traits<char>>& std::__2::__input_arithmetic[abi:v15006]<unsigned long, char, std::__2::char_traits<char>>(std::__2::basic_istream<char, std::__2::char_traits<char>>&, unsigned long&)",
  "std::__2::basic_istream<char, std::__2::char_traits<char>>& std::__2::__input_arithmetic[abi:v15006]<unsigned short, char, std::__2::char_traits<char>>(std::__2::basic_istream<char, std::__2::char_traits<char>>&, unsigned short&)",
  "std::__2::basic_istream<char, std::__2::char_traits<char>>& std::__2::__input_arithmetic[abi:v15006]<void*, char, std::__2::char_traits<char>>(std::__2::basic_istream<char, std::__2::char_traits<char>>&, void*&)",
  "std::__2::basic_istream<char, std::__2::char_traits<char>>& std::__2::__input_arithmetic_with_numeric_limits[abi:v15006]<int, char, std::__2::char_traits<char>>(std::__2::basic_istream<char, std::__2::char_traits<char>>&, int&)",
  "std::__2::basic_istream<char, std::__2::char_traits<char>>& std::__2::__input_arithmetic_with_numeric_limits[abi:v15006]<short, char, std::__2::char_traits<char>>(std::__2::basic_istream<char, std::__2::char_traits<char>>&, short&)",
  "std::__2::basic_istream<char, std::__2::char_traits<char>>::basic_istream[abi:v15006](std::__2::basic_streambuf<char, std::__2::char_traits<char>>*)",
  "std::__2::basic_istream<char, std::__2::char_traits<char>>::get()",
  "std::__2::basic_istream<char, std::__2::char_traits<char>>::get(char*, long, char)",
  "std::__2::basic_istream<char, std::__2::char_traits<char>>::get(std::__2::basic_streambuf<char, std::__2::char_traits<char>>&, char)",
  "std::__2::basic_istream<char, std::__2::char_traits<char>>::getline(char*, long, char)",
  "std::__2::basic_istream<char, std::__2::char_traits<char>>::ignore(long, int)",
  "std::__2::basic_istream<char, std::__2::char_traits<char>>::operator=(std::__2::basic_istream<char, std::__2::char_traits<char>>&&)",
  "std::__2::basic_istream<char, std::__2::char_traits<char>>::operator>>(bool&)",
  "std::__2::basic_istream<char, std::__2::char_traits<char>>::operator>>(double&)",
  "std::__2::basic_istream<char, std::__2::char_traits<char>>::operator>>(float&)",
  "std::__2::basic_istream<char, std::__2::char_traits<char>>::operator>>(int&)",
  "std::__2::basic_istream<char, std::__2::char_traits<char>>::operator>>(long double&)",
  "std::__2::basic_istream<char, std::__2::char_traits<char>>::operator>>(long long&)",
  "std::__2::basic_istream<char, std::__2::char_traits<char>>::operator>>(long&)",
  "std::__2::basic_istream<char, std::__2::char_traits<char>>::operator>>(short&)",
  "std::__2::basic_istream<char, std::__2::char_traits<char>>::operator>>(std::__2::basic_streambuf<char, std::__2::char_traits<char>>*)",
  "std::__2::basic_istream<char, std::__2::char_traits<char>>::operator>>(unsigned int&)",
  "std::__2::basic_istream<char, std::__2::char_traits<char>>::operator>>(unsigned long long&)",
  "std::__2::basic_istream<char, std::__2::char_traits<char>>::operator>>(unsigned long&)",
  "std::__2::basic_istream<char, std::__2::char_traits<char>>::operator>>(unsigned short&)",
  "std::__2::basic_istream<char, std::__2::char_traits<char>>::operator>>(void*&)",
  "std::__2::basic_istream<char, std::__2::char_traits<char>>::peek()",
  "std::__2::basic_istream<char, std::__2::char_traits<char>>::putback(char)",
  "std::__2::basic_istream<char, std::__2::char_traits<char>>::read(char*, long)",
  "std::__2::basic_istream<char, std::__2::char_traits<char>>::readsome(char*, long)",
  "std::__2::basic_istream<char, std::__2::char_traits<char>>::seekg(long long, std::__2::ios_base::seekdir)",
  "std::__2::basic_istream<char, std::__2::char_traits<char>>::seekg(std::__2::fpos<__mbstate_t>)",
  "std::__2::basic_istream<char, std::__2::char_traits<char>>::sentry::sentry(std::__2::basic_istream<char, std::__2::char_traits<char>>&, bool)",
  "std::__2::basic_istream<char, std::__2::char_traits<char>>::swap[abi:v15006](std::__2::basic_istream<char, std::__2::char_traits<char>>&)",
  "std::__2::basic_istream<char, std::__2::char_traits<char>>::sync()",
  "std::__2::basic_istream<char, std::__2::char_traits<char>>::tellg()",
  "std::__2::basic_istream<char, std::__2::char_traits<char>>::unget()",
  "std::__2::basic_istream<char, std::__2::char_traits<char>>::~basic_istream()",
  "std::__2::basic_istream<char, std::__2::char_traits<char>>::~basic_istream().2",
  "std::__2::basic_istream<wchar_t, std::__2::char_traits<wchar_t>>& std::__2::__input_arithmetic[abi:v15006]<bool, wchar_t, std::__2::char_traits<wchar_t>>(std::__2::basic_istream<wchar_t, std::__2::char_traits<wchar_t>>&, bool&)",
  "std::__2::basic_istream<wchar_t, std::__2::char_traits<wchar_t>>& std::__2::__input_arithmetic[abi:v15006]<double, wchar_t, std::__2::char_traits<wchar_t>>(std::__2::basic_istream<wchar_t, std::__2::char_traits<wchar_t>>&, double&)",
  "std::__2::basic_istream<wchar_t, std::__2::char_traits<wchar_t>>& std::__2::__input_arithmetic[abi:v15006]<float, wchar_t, std::__2::char_traits<wchar_t>>(std::__2::basic_istream<wchar_t, std::__2::char_traits<wchar_t>>&, float&)",
  "std::__2::basic_istream<wchar_t, std::__2::char_traits<wchar_t>>& std::__2::__input_arithmetic[abi:v15006]<long double, wchar_t, std::__2::char_traits<wchar_t>>(std::__2::basic_istream<wchar_t, std::__2::char_traits<wchar_t>>&, long double&)",
  "std::__2::basic_istream<wchar_t, std::__2::char_traits<wchar_t>>& std::__2::__input_arithmetic[abi:v15006]<long long, wchar_t, std::__2::char_traits<wchar_t>>(std::__2::basic_istream<wchar_t, std::__2::char_traits<wchar_t>>&, long long&)",
  "std::__2::basic_istream<wchar_t, std::__2::char_traits<wchar_t>>& std::__2::__input_arithmetic[abi:v15006]<long, wchar_t, std::__2::char_traits<wchar_t>>(std::__2::basic_istream<wchar_t, std::__2::char_traits<wchar_t>>&, long&)",
  "std::__2::basic_istream<wchar_t, std::__2::char_traits<wchar_t>>& std::__2::__input_arithmetic[abi:v15006]<unsigned int, wchar_t, std::__2::char_traits<wchar_t>>(std::__2::basic_istream<wchar_t, std::__2::char_traits<wchar_t>>&, unsigned int&)",
  "std::__2::basic_istream<wchar_t, std::__2::char_traits<wchar_t>>& std::__2::__input_arithmetic[abi:v15006]<unsigned long long, wchar_t, std::__2::char_traits<wchar_t>>(std::__2::basic_istream<wchar_t, std::__2::char_traits<wchar_t>>&, unsigned long long&)",
  "std::__2::basic_istream<wchar_t, std::__2::char_traits<wchar_t>>& std::__2::__input_arithmetic[abi:v15006]<unsigned long, wchar_t, std::__2::char_traits<wchar_t>>(std::__2::basic_istream<wchar_t, std::__2::char_traits<wchar_t>>&, unsigned long&)",
  "std::__2::basic_istream<wchar_t, std::__2::char_traits<wchar_t>>& std::__2::__input_arithmetic[abi:v15006]<unsigned short, wchar_t, std::__2::char_traits<wchar_t>>(std::__2::basic_istream<wchar_t, std::__2::char_traits<wchar_t>>&, unsigned short&)",
  "std::__2::basic_istream<wchar_t, std::__2::char_traits<wchar_t>>& std::__2::__input_arithmetic[abi:v15006]<void*, wchar_t, std::__2::char_traits<wchar_t>>(std::__2::basic_istream<wchar_t, std::__2::char_traits<wchar_t>>&, void*&)",
  "std::__2::basic_istream<wchar_t, std::__2::char_traits<wchar_t>>& std::__2::__input_arithmetic_with_numeric_limits[abi:v15006]<int, wchar_t, std::__2::char_traits<wchar_t>>(std::__2::basic_istream<wchar_t, std::__2::char_traits<wchar_t>>&, int&)",
  "std::__2::basic_istream<wchar_t, std::__2::char_traits<wchar_t>>& std::__2::__input_arithmetic_with_numeric_limits[abi:v15006]<short, wchar_t, std::__2::char_traits<wchar_t>>(std::__2::basic_istream<wchar_t, std::__2::char_traits<wchar_t>>&, short&)",
  "std::__2::basic_istream<wchar_t, std::__2::char_traits<wchar_t>>::basic_istream[abi:v15006](std::__2::basic_streambuf<wchar_t, std::__2::char_traits<wchar_t>>*)",
  "std::__2::basic_istream<wchar_t, std::__2::char_traits<wchar_t>>::get()",
  "std::__2::basic_istream<wchar_t, std::__2::char_traits<wchar_t>>::get(std::__2::basic_streambuf<wchar_t, std::__2::char_traits<wchar_t>>&, wchar_t)",
  "std::__2::basic_istream<wchar_t, std::__2::char_traits<wchar_t>>::get(wchar_t*, long, wchar_t)",
  "std::__2::basic_istream<wchar_t, std::__2::char_traits<wchar_t>>::getline(wchar_t*, long, wchar_t)",
  "std::__2::basic_istream<wchar_t, std::__2::char_traits<wchar_t>>::ignore(long, unsigned int)",
  "std::__2::basic_istream<wchar_t, std::__2::char_traits<wchar_t>>::operator>>(bool&)",
  "std::__2::basic_istream<wchar_t, std::__2::char_traits<wchar_t>>::operator>>(double&)",
  "std::__2::basic_istream<wchar_t, std::__2::char_traits<wchar_t>>::operator>>(float&)",
  "std::__2::basic_istream<wchar_t, std::__2::char_traits<wchar_t>>::operator>>(int&)",
  "std::__2::basic_istream<wchar_t, std::__2::char_traits<wchar_t>>::operator>>(long double&)",
  "std::__2::basic_istream<wchar_t, std::__2::char_traits<wchar_t>>::operator>>(long long&)",
  "std::__2::basic_istream<wchar_t, std::__2::char_traits<wchar_t>>::operator>>(long&)",
  "std::__2::basic_istream<wchar_t, std::__2::char_traits<wchar_t>>::operator>>(short&)",
  "std::__2::basic_istream<wchar_t, std::__2::char_traits<wchar_t>>::operator>>(std::__2::basic_streambuf<wchar_t, std::__2::char_traits<wchar_t>>*)",
  "std::__2::basic_istream<wchar_t, std::__2::char_traits<wchar_t>>::operator>>(unsigned int&)",
  "std::__2::basic_istream<wchar_t, std::__2::char_traits<wchar_t>>::operator>>(unsigned long long&)",
  "std::__2::basic_istream<wchar_t, std::__2::char_traits<wchar_t>>::operator>>(unsigned long&)",
  "std::__2::basic_istream<wchar_t, std::__2::char_traits<wchar_t>>::operator>>(unsigned short&)",
  "std::__2::basic_istream<wchar_t, std::__2::char_traits<wchar_t>>::operator>>(void*&)",
  "std::__2::basic_istream<wchar_t, std::__2::char_traits<wchar_t>>::peek()",
  "std::__2::basic_istream<wchar_t, std::__2::char_traits<wchar_t>>::putback(wchar_t)",
  "std::__2::basic_istream<wchar_t, std::__2::char_traits<wchar_t>>::read(wchar_t*, long)",
  "std::__2::basic_istream<wchar_t, std::__2::char_traits<wchar_t>>::readsome(wchar_t*, long)",
  "std::__2::basic_istream<wchar_t, std::__2::char_traits<wchar_t>>::seekg(long long, std::__2::ios_base::seekdir)",
  "std::__2::basic_istream<wchar_t, std::__2::char_traits<wchar_t>>::seekg(std::__2::fpos<__mbstate_t>)",
  "std::__2::basic_istream<wchar_t, std::__2::char_traits<wchar_t>>::sentry::sentry(std::__2::basic_istream<wchar_t, std::__2::char_traits<wchar_t>>&, bool)",
  "std::__2::basic_istream<wchar_t, std::__2::char_traits<wchar_t>>::sync()",
  "std::__2::basic_istream<wchar_t, std::__2::char_traits<wchar_t>>::tellg()",
  "std::__2::basic_istream<wchar_t, std::__2::char_traits<wchar_t>>::unget()",
  "std::__2::basic_istream<wchar_t, std::__2::char_traits<wchar_t>>::~basic_istream()",
  "std::__2::basic_istream<wchar_t, std::__2::char_traits<wchar_t>>::~basic_istream().2",
  "std::__2::basic_istringstream<char, std::__2::char_traits<char>, std::__2::allocator<char>>::operator=(std::__2::basic_istringstream<char, std::__2::char_traits<char>, std::__2::allocator<char>>&&)",
  "std::__2::basic_istringstream<char, std::__2::char_traits<char>, std::__2::allocator<char>>::~basic_istringstream()",
  "std::__2::basic_istringstream<char, std::__2::char_traits<char>, std::__2::allocator<char>>::~basic_istringstream().2",
  "std::__2::basic_ofstream<char, std::__2::char_traits<char>>::__open(int, unsigned int)",
  "std::__2::basic_ofstream<char, std::__2::char_traits<char>>::basic_ofstream()",
  "std::__2::basic_ofstream<char, std::__2::char_traits<char>>::open(char const*, unsigned int)",
  "std::__2::basic_ofstream<char, std::__2::char_traits<char>>::open(std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>> const&, unsigned int)",
  "std::__2::basic_ofstream<char, std::__2::char_traits<char>>::~basic_ofstream()",
  "std::__2::basic_ofstream<char, std::__2::char_traits<char>>::~basic_ofstream().2",
  "std::__2::basic_ostream<char, std::__2::char_traits<char>>::basic_ostream[abi:v15006](std::__2::basic_streambuf<char, std::__2::char_traits<char>>*)",
  "std::__2::basic_ostream<char, std::__2::char_traits<char>>::flush()",
  "std::__2::basic_ostream<char, std::__2::char_traits<char>>::operator<<(bool)",
  "std::__2::basic_ostream<char, std::__2::char_traits<char>>::operator<<(double)",
  "std::__2::basic_ostream<char, std::__2::char_traits<char>>::operator<<(float)",
  "std::__2::basic_ostream<char, std::__2::char_traits<char>>::operator<<(int)",
  "std::__2::basic_ostream<char, std::__2::char_traits<char>>::operator<<(long double)",
  "std::__2::basic_ostream<char, std::__2::char_traits<char>>::operator<<(long long)",
  "std::__2::basic_ostream<char, std::__2::char_traits<char>>::operator<<(long)",
  "std::__2::basic_ostream<char, std::__2::char_traits<char>>::operator<<(short)",
  "std::__2::basic_ostream<char, std::__2::char_traits<char>>::operator<<(std::__2::basic_streambuf<char, std::__2::char_traits<char>>*)",
  "std::__2::basic_ostream<char, std::__2::char_traits<char>>::operator<<(unsigned int)",
  "std::__2::basic_ostream<char, std::__2::char_traits<char>>::operator<<(unsigned long long)",
  "std::__2::basic_ostream<char, std::__2::char_traits<char>>::operator<<(unsigned long)",
  "std::__2::basic_ostream<char, std::__2::char_traits<char>>::operator<<(unsigned short)",
  "std::__2::basic_ostream<char, std::__2::char_traits<char>>::operator<<(void const*)",
  "std::__2::basic_ostream<char, std::__2::char_traits<char>>::operator=(std::__2::basic_ostream<char, std::__2::char_traits<char>>&&)",
  "std::__2::basic_ostream<char, std::__2::char_traits<char>>::put(char)",
  "std::__2::basic_ostream<char, std::__2::char_traits<char>>::sentry::sentry(std::__2::basic_ostream<char, std::__2::char_traits<char>>&)",
  "std::__2::basic_ostream<char, std::__2::char_traits<char>>::sentry::~sentry()",
  "std::__2::basic_ostream<char, std::__2::char_traits<char>>::swap[abi:v15006](std::__2::basic_ostream<char, std::__2::char_traits<char>>&)",
  "std::__2::basic_ostream<char, std::__2::char_traits<char>>::write(char const*, long)",
  "std::__2::basic_ostream<char, std::__2::char_traits<char>>::~basic_ostream()",
  "std::__2::basic_ostream<char, std::__2::char_traits<char>>::~basic_ostream().2",
  "std::__2::basic_ostream<wchar_t, std::__2::char_traits<wchar_t>>::basic_ostream[abi:v15006](std::__2::basic_streambuf<wchar_t, std::__2::char_traits<wchar_t>>*)",
  "std::__2::basic_ostream<wchar_t, std::__2::char_traits<wchar_t>>::flush()",
  "std::__2::basic_ostream<wchar_t, std::__2::char_traits<wchar_t>>::operator<<(bool)",
  "std::__2::basic_ostream<wchar_t, std::__2::char_traits<wchar_t>>::operator<<(double)",
  "std::__2::basic_ostream<wchar_t, std::__2::char_traits<wchar_t>>::operator<<(float)",
  "std::__2::basic_ostream<wchar_t, std::__2::char_traits<wchar_t>>::operator<<(int)",
  "std::__2::basic_ostream<wchar_t, std::__2::char_traits<wchar_t>>::operator<<(long double)",
  "std::__2::basic_ostream<wchar_t, std::__2::char_traits<wchar_t>>::operator<<(long long)",
  "std::__2::basic_ostream<wchar_t, std::__2::char_traits<wchar_t>>::operator<<(long)",
  "std::__2::basic_ostream<wchar_t, std::__2::char_traits<wchar_t>>::operator<<(short)",
  "std::__2::basic_ostream<wchar_t, std::__2::char_traits<wchar_t>>::operator<<(std::__2::basic_streambuf<wchar_t, std::__2::char_traits<wchar_t>>*)",
  "std::__2::basic_ostream<wchar_t, std::__2::char_traits<wchar_t>>::operator<<(unsigned int)",
  "std::__2::basic_ostream<wchar_t, std::__2::char_traits<wchar_t>>::operator<<(unsigned long long)",
  "std::__2::basic_ostream<wchar_t, std::__2::char_traits<wchar_t>>::operator<<(unsigned long)",
  "std::__2::basic_ostream<wchar_t, std::__2::char_traits<wchar_t>>::operator<<(unsigned short)",
  "std::__2::basic_ostream<wchar_t, std::__2::char_traits<wchar_t>>::operator<<(void const*)",
  "std::__2::basic_ostream<wchar_t, std::__2::char_traits<wchar_t>>::put(wchar_t)",
  "std::__2::basic_ostream<wchar_t, std::__2::char_traits<wchar_t>>::sentry::sentry(std::__2::basic_ostream<wchar_t, std::__2::char_traits<wchar_t>>&)",
  "std::__2::basic_ostream<wchar_t, std::__2::char_traits<wchar_t>>::sentry::~sentry()",
  "std::__2::basic_ostream<wchar_t, std::__2::char_traits<wchar_t>>::write(wchar_t const*, long)",
  "std::__2::basic_ostream<wchar_t, std::__2::char_traits<wchar_t>>::~basic_ostream()",
  "std::__2::basic_ostream<wchar_t, std::__2::char_traits<wchar_t>>::~basic_ostream().2",
  "std::__2::basic_ostringstream<char, std::__2::char_traits<char>, std::__2::allocator<char>>::operator=(std::__2::basic_ostringstream<char, std::__2::char_traits<char>, std::__2::allocator<char>>&&)",
  "std::__2::basic_ostringstream<char, std::__2::char_traits<char>, std::__2::allocator<char>>::~basic_ostringstream()",
  "std::__2::basic_ostringstream<char, std::__2::char_traits<char>, std::__2::allocator<char>>::~basic_ostringstream().2",
  "std::__2::basic_streambuf<char, std::__2::char_traits<char>>::basic_streambuf()",
  "std::__2::basic_streambuf<char, std::__2::char_traits<char>>::operator=(std::__2::basic_streambuf<char, std::__2::char_traits<char>> const&)",
  "std::__2::basic_streambuf<char, std::__2::char_traits<char>>::pubimbue[abi:v15006](std::__2::locale const&)",
  "std::__2::basic_streambuf<char, std::__2::char_traits<char>>::pubseekoff[abi:v15006](long long, std::__2::ios_base::seekdir, unsigned int)",
  "std::__2::basic_streambuf<char, std::__2::char_traits<char>>::pubseekpos[abi:v15006](std::__2::fpos<__mbstate_t>, unsigned int)",
  "std::__2::basic_streambuf<char, std::__2::char_traits<char>>::pubsync[abi:v15006]()",
  "std::__2::basic_streambuf<char, std::__2::char_traits<char>>::sbumpc[abi:v15006]()",
  "std::__2::basic_streambuf<char, std::__2::char_traits<char>>::sgetc[abi:v15006]()",
  "std::__2::basic_streambuf<char, std::__2::char_traits<char>>::sgetn[abi:v15006](char*, long)",
  "std::__2::basic_streambuf<char, std::__2::char_traits<char>>::sputbackc[abi:v15006](char)",
  "std::__2::basic_streambuf<char, std::__2::char_traits<char>>::sputc[abi:v15006](char)",
  "std::__2::basic_streambuf<char, std::__2::char_traits<char>>::sputn[abi:v15006](char const*, long)",
  "std::__2::basic_streambuf<char, std::__2::char_traits<char>>::sungetc[abi:v15006]()",
  "std::__2::basic_streambuf<char, std::__2::char_traits<char>>::swap(std::__2::basic_streambuf<char, std::__2::char_traits<char>>&)",
  "std::__2::basic_streambuf<char, std::__2::char_traits<char>>::uflow()",
  "std::__2::basic_streambuf<char, std::__2::char_traits<char>>::xsgetn(char*, long)",
  "std::__2::basic_streambuf<char, std::__2::char_traits<char>>::xsputn(char const*, long)",
  "std::__2::basic_streambuf<char, std::__2::char_traits<char>>::~basic_streambuf()",
  "std::__2::basic_streambuf<wchar_t, std::__2::char_traits<wchar_t>>::basic_streambuf()",
  "std::__2::basic_streambuf<wchar_t, std::__2::char_traits<wchar_t>>::in_avail[abi:v15006]()",
  "std::__2::basic_streambuf<wchar_t, std::__2::char_traits<wchar_t>>::operator=(std::__2::basic_streambuf<wchar_t, std::__2::char_traits<wchar_t>> const&)",
  "std::__2::basic_streambuf<wchar_t, std::__2::char_traits<wchar_t>>::pubseekoff[abi:v15006](long long, std::__2::ios_base::seekdir, unsigned int)",
  "std::__2::basic_streambuf<wchar_t, std::__2::char_traits<wchar_t>>::pubseekpos[abi:v15006](std::__2::fpos<__mbstate_t>, unsigned int)",
  "std::__2::basic_streambuf<wchar_t, std::__2::char_traits<wchar_t>>::pubsync[abi:v15006]()",
  "std::__2::basic_streambuf<wchar_t, std::__2::char_traits<wchar_t>>::sbumpc[abi:v15006]()",
  "std::__2::basic_streambuf<wchar_t, std::__2::char_traits<wchar_t>>::sgetc[abi:v15006]()",
  "std::__2::basic_streambuf<wchar_t, std::__2::char_traits<wchar_t>>::sgetn[abi:v15006](wchar_t*, long)",
  "std::__2::basic_streambuf<wchar_t, std::__2::char_traits<wchar_t>>::sputbackc[abi:v15006](wchar_t)",
  "std::__2::basic_streambuf<wchar_t, std::__2::char_traits<wchar_t>>::sputc[abi:v15006](wchar_t)",
  "std::__2::basic_streambuf<wchar_t, std::__2::char_traits<wchar_t>>::sputc[abi:v15006](wchar_t)std::__2::num_get<wchar_t, std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>>::get[abi:v15006](std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>, std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>, std::__2::ios_base&, unsigned int&, void*&) conststd::__2::num_get<wchar_t, std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>>::get[abi:v15006](std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>, std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>, std::__2::ios_base&, unsigned int&, long long&) const",
  "std::__2::basic_streambuf<wchar_t, std::__2::char_traits<wchar_t>>::sputn[abi:v15006](wchar_t const*, long)",
  "std::__2::basic_streambuf<wchar_t, std::__2::char_traits<wchar_t>>::sungetc[abi:v15006]()",
  "std::__2::basic_streambuf<wchar_t, std::__2::char_traits<wchar_t>>::swap(std::__2::basic_streambuf<wchar_t, std::__2::char_traits<wchar_t>>&)",
  "std::__2::basic_streambuf<wchar_t, std::__2::char_traits<wchar_t>>::uflow()",
  "std::__2::basic_streambuf<wchar_t, std::__2::char_traits<wchar_t>>::xsputn(wchar_t const*, long)",
  "std::__2::basic_streambuf<wchar_t, std::__2::char_traits<wchar_t>>::~basic_streambuf()",
  "std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>> const* std::__2::__scan_keyword<std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>, std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>> const*, std::__2::ctype<char>>(std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>&, std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>, std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>> const*, std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>> const*, std::__2::ctype<char> const&, unsigned int&, bool)",
  "std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>> std::__2::(anonymous namespace)::as_string<std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>>, int (*)(char*, unsigned long, char const*, ...), double>(int (*)(char*, unsigned long, char const*, ...), std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>>, std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>>::value_type const*, double)",
  "std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>> std::__2::(anonymous namespace)::as_string<std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>>, int (*)(char*, unsigned long, char const*, ...), float>(int (*)(char*, unsigned long, char const*, ...), std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>>, std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>>::value_type const*, float)",
  "std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>> std::__2::(anonymous namespace)::as_string<std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>>, int (*)(char*, unsigned long, char const*, ...), long double>(int (*)(char*, unsigned long, char const*, ...), std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>>, std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>>::value_type const*, long double)",
  "std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>> std::__2::(anonymous namespace)::i_to_string<std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>>, int>(int)",
  "std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>> std::__2::(anonymous namespace)::i_to_string<std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>>, long long>(long long)",
  "std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>> std::__2::(anonymous namespace)::i_to_string<std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>>, long>(long)",
  "std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>> std::__2::(anonymous namespace)::i_to_string<std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>>, unsigned int>(unsigned int)",
  "std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>> std::__2::(anonymous namespace)::i_to_string<std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>>, unsigned long long>(unsigned long long)",
  "std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>> std::__2::(anonymous namespace)::i_to_string<std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>>, unsigned long>(unsigned long)",
  "std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>> std::__2::operator+<char, std::__2::char_traits<char>, std::__2::allocator<char>>(char const*, std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>> const&)",
  "std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>> std::__2::operator+[abi:v15006]<char, std::__2::char_traits<char>, std::__2::allocator<char>>(char const*, std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>>&&)",
  "std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>> std::__2::operator+[abi:v15006]<char, std::__2::char_traits<char>, std::__2::allocator<char>>(std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>> const&, char const*)",
  "std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>> std::__2::operator+[abi:v15006]<char, std::__2::char_traits<char>, std::__2::allocator<char>>(std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>>&&, char const*)",
  "std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>> std::__2::operator+[abi:v15006]<char, std::__2::char_traits<char>, std::__2::allocator<char>>(std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>>&&, std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>>&&)",
  "std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>>& std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>>::__assign_no_alias<false>(char const*, unsigned long)",
  "std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>>& std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>>::__assign_no_alias<true>(char const*, unsigned long)",
  "std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>>* std::__2::__scan_keyword<char*, std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>>*, std::__2::ctype<char>>(char*&, char*, std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>>*, std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>>*, std::__2::ctype<char> const&, unsigned int&, bool)",
  "std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>>::__append_default_init[abi:v15006](unsigned long)",
  "std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>>::__assign_external(char const*)",
  "std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>>::__assign_external(char const*, unsigned long)",
  "std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>>::__grow_by(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)",
  "std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>>::__grow_by_and_replace(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, char const*)",
  "std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>>::__init(char const*, unsigned long)",
  "std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>>::__init(char const*, unsigned long, unsigned long)",
  "std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>>::__init(unsigned long, char)",
  "std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>>::__init_copy_ctor_external(char const*, unsigned long)",
  "std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>>::__resize_default_init[abi:v15006](unsigned long)",
  "std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>>::__shrink_or_extend[abi:v15006](unsigned long)",
  "std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>>::append(char const*)",
  "std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>>::append(char const*, unsigned long)",
  "std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>>::append(std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>> const&, unsigned long, unsigned long)",
  "std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>>::append(unsigned long, char)",
  "std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>>::append[abi:v15006](std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>> const&)",
  "std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>>::assign(char const*)",
  "std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>>::assign(char const*, unsigned long)",
  "std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>>::assign(std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>> const&, unsigned long, unsigned long)",
  "std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>>::assign(unsigned long, char)",
  "std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>>::basic_string(std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>> const&)",
  "std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>>::basic_string(std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>> const&, unsigned long, unsigned long, std::__2::allocator<char> const&)",
  "std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>>::basic_string<std::__2::basic_string_view<char, std::__2::char_traits<char>>, void>(std::__2::basic_string_view<char, std::__2::char_traits<char>> const&)",
  "std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>>::basic_string[abi:v15006](std::__2::__uninitialized_size_tag, unsigned long, std::__2::allocator<char> const&)",
  "std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>>::basic_string[abi:v15006](unsigned long, char)",
  "std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>>::basic_string[abi:v15006]<char const*, void>(char const*, char const*)",
  "std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>>::basic_string[abi:v15006]<char const*, void>(char const*, char const*, std::__2::allocator<char> const&)",
  "std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>>::basic_string[abi:v15006]<char*, void>(char*, char*)",
  "std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>>::basic_string[abi:v15006]<char*, void>(char*, char*, std::__2::allocator<char> const&)",
  "std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>>::basic_string[abi:v15006]<std::nullptr_t>(char const*)",
  "std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>>::find_first_of(char const*, unsigned long, unsigned long) const",
  "std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>>::insert(std::__2::__wrap_iter<char const*>, char)",
  "std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>>::insert(unsigned long, char const*)",
  "std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>>::insert(unsigned long, char const*, unsigned long)",
  "std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>>::insert(unsigned long, std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>> const&, unsigned long, unsigned long)",
  "std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>>::insert(unsigned long, unsigned long, char)",
  "std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>>::operator+=[abi:v15006](char const*)",
  "std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>>::operator+=[abi:v15006](char)",
  "std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>>::operator+=[abi:v15006](std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>> const&)",
  "std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>>::operator=(std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>> const&)",
  "std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>>::operator=[abi:v15006](char const*)",
  "std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>>::push_back(char)",
  "std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>>::replace(unsigned long, unsigned long, char const*)",
  "std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>>::replace(unsigned long, unsigned long, char const*, unsigned long)",
  "std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>>::replace(unsigned long, unsigned long, std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>> const&, unsigned long, unsigned long)",
  "std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>>::replace(unsigned long, unsigned long, unsigned long, char)",
  "std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>>::reserve(unsigned long)",
  "std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>>::resize(unsigned long, char)",
  "std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>>::resize[abi:v15006](unsigned long)",
  "std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>>::rfind(char const*, unsigned long, unsigned long) const",
  "std::__2::basic_string<wchar_t, std::__2::char_traits<wchar_t>, std::__2::allocator<wchar_t>> const* std::__2::__scan_keyword<std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>, std::__2::basic_string<wchar_t, std::__2::char_traits<wchar_t>, std::__2::allocator<wchar_t>> const*, std::__2::ctype<wchar_t>>(std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>&, std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>, std::__2::basic_string<wchar_t, std::__2::char_traits<wchar_t>, std::__2::allocator<wchar_t>> const*, std::__2::basic_string<wchar_t, std::__2::char_traits<wchar_t>, std::__2::allocator<wchar_t>> const*, std::__2::ctype<wchar_t> const&, unsigned int&, bool)",
  "std::__2::basic_string<wchar_t, std::__2::char_traits<wchar_t>, std::__2::allocator<wchar_t>> std::__2::(anonymous namespace)::as_string<std::__2::basic_string<wchar_t, std::__2::char_traits<wchar_t>, std::__2::allocator<wchar_t>>, int (*)(wchar_t*, unsigned long, wchar_t const*, ...), double>(int (*)(wchar_t*, unsigned long, wchar_t const*, ...), std::__2::basic_string<wchar_t, std::__2::char_traits<wchar_t>, std::__2::allocator<wchar_t>>, std::__2::basic_string<wchar_t, std::__2::char_traits<wchar_t>, std::__2::allocator<wchar_t>>::value_type const*, double)",
  "std::__2::basic_string<wchar_t, std::__2::char_traits<wchar_t>, std::__2::allocator<wchar_t>> std::__2::(anonymous namespace)::as_string<std::__2::basic_string<wchar_t, std::__2::char_traits<wchar_t>, std::__2::allocator<wchar_t>>, int (*)(wchar_t*, unsigned long, wchar_t const*, ...), float>(int (*)(wchar_t*, unsigned long, wchar_t const*, ...), std::__2::basic_string<wchar_t, std::__2::char_traits<wchar_t>, std::__2::allocator<wchar_t>>, std::__2::basic_string<wchar_t, std::__2::char_traits<wchar_t>, std::__2::allocator<wchar_t>>::value_type const*, float)",
  "std::__2::basic_string<wchar_t, std::__2::char_traits<wchar_t>, std::__2::allocator<wchar_t>> std::__2::(anonymous namespace)::as_string<std::__2::basic_string<wchar_t, std::__2::char_traits<wchar_t>, std::__2::allocator<wchar_t>>, int (*)(wchar_t*, unsigned long, wchar_t const*, ...), long double>(int (*)(wchar_t*, unsigned long, wchar_t const*, ...), std::__2::basic_string<wchar_t, std::__2::char_traits<wchar_t>, std::__2::allocator<wchar_t>>, std::__2::basic_string<wchar_t, std::__2::char_traits<wchar_t>, std::__2::allocator<wchar_t>>::value_type const*, long double)",
  "std::__2::basic_string<wchar_t, std::__2::char_traits<wchar_t>, std::__2::allocator<wchar_t>> std::__2::(anonymous namespace)::i_to_string<std::__2::basic_string<wchar_t, std::__2::char_traits<wchar_t>, std::__2::allocator<wchar_t>>, int>(int)",
  "std::__2::basic_string<wchar_t, std::__2::char_traits<wchar_t>, std::__2::allocator<wchar_t>> std::__2::(anonymous namespace)::i_to_string<std::__2::basic_string<wchar_t, std::__2::char_traits<wchar_t>, std::__2::allocator<wchar_t>>, long long>(long long)",
  "std::__2::basic_string<wchar_t, std::__2::char_traits<wchar_t>, std::__2::allocator<wchar_t>> std::__2::(anonymous namespace)::i_to_string<std::__2::basic_string<wchar_t, std::__2::char_traits<wchar_t>, std::__2::allocator<wchar_t>>, long>(long)",
  "std::__2::basic_string<wchar_t, std::__2::char_traits<wchar_t>, std::__2::allocator<wchar_t>> std::__2::(anonymous namespace)::i_to_string<std::__2::basic_string<wchar_t, std::__2::char_traits<wchar_t>, std::__2::allocator<wchar_t>>, unsigned int>(unsigned int)",
  "std::__2::basic_string<wchar_t, std::__2::char_traits<wchar_t>, std::__2::allocator<wchar_t>> std::__2::(anonymous namespace)::i_to_string<std::__2::basic_string<wchar_t, std::__2::char_traits<wchar_t>, std::__2::allocator<wchar_t>>, unsigned long long>(unsigned long long)",
  "std::__2::basic_string<wchar_t, std::__2::char_traits<wchar_t>, std::__2::allocator<wchar_t>> std::__2::(anonymous namespace)::i_to_string<std::__2::basic_string<wchar_t, std::__2::char_traits<wchar_t>, std::__2::allocator<wchar_t>>, unsigned long>(unsigned long)",
  "std::__2::basic_string<wchar_t, std::__2::char_traits<wchar_t>, std::__2::allocator<wchar_t>>& std::__2::basic_string<wchar_t, std::__2::char_traits<wchar_t>, std::__2::allocator<wchar_t>>::__assign_no_alias<false>(wchar_t const*, unsigned long)",
  "std::__2::basic_string<wchar_t, std::__2::char_traits<wchar_t>, std::__2::allocator<wchar_t>>& std::__2::basic_string<wchar_t, std::__2::char_traits<wchar_t>, std::__2::allocator<wchar_t>>::__assign_no_alias<true>(wchar_t const*, unsigned long)",
  "std::__2::basic_string<wchar_t, std::__2::char_traits<wchar_t>, std::__2::allocator<wchar_t>>* std::__2::__scan_keyword<wchar_t*, std::__2::basic_string<wchar_t, std::__2::char_traits<wchar_t>, std::__2::allocator<wchar_t>>*, std::__2::ctype<wchar_t>>(wchar_t*&, wchar_t*, std::__2::basic_string<wchar_t, std::__2::char_traits<wchar_t>, std::__2::allocator<wchar_t>>*, std::__2::basic_string<wchar_t, std::__2::char_traits<wchar_t>, std::__2::allocator<wchar_t>>*, std::__2::ctype<wchar_t> const&, unsigned int&, bool)",
  "std::__2::basic_string<wchar_t, std::__2::char_traits<wchar_t>, std::__2::allocator<wchar_t>>::__assign_external(wchar_t const*)",
  "std::__2::basic_string<wchar_t, std::__2::char_traits<wchar_t>, std::__2::allocator<wchar_t>>::__assign_external(wchar_t const*, unsigned long)",
  "std::__2::basic_string<wchar_t, std::__2::char_traits<wchar_t>, std::__2::allocator<wchar_t>>::__grow_by(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)",
  "std::__2::basic_string<wchar_t, std::__2::char_traits<wchar_t>, std::__2::allocator<wchar_t>>::__grow_by_and_replace(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, wchar_t const*)",
  "std::__2::basic_string<wchar_t, std::__2::char_traits<wchar_t>, std::__2::allocator<wchar_t>>::__init(unsigned long, wchar_t)",
  "std::__2::basic_string<wchar_t, std::__2::char_traits<wchar_t>, std::__2::allocator<wchar_t>>::__init(wchar_t const*, unsigned long)",
  "std::__2::basic_string<wchar_t, std::__2::char_traits<wchar_t>, std::__2::allocator<wchar_t>>::__init(wchar_t const*, unsigned long, unsigned long)",
  "std::__2::basic_string<wchar_t, std::__2::char_traits<wchar_t>, std::__2::allocator<wchar_t>>::__init_copy_ctor_external(wchar_t const*, unsigned long)",
  "std::__2::basic_string<wchar_t, std::__2::char_traits<wchar_t>, std::__2::allocator<wchar_t>>::__shrink_or_extend[abi:v15006](unsigned long)",
  "std::__2::basic_string<wchar_t, std::__2::char_traits<wchar_t>, std::__2::allocator<wchar_t>>::append(std::__2::basic_string<wchar_t, std::__2::char_traits<wchar_t>, std::__2::allocator<wchar_t>> const&, unsigned long, unsigned long)",
  "std::__2::basic_string<wchar_t, std::__2::char_traits<wchar_t>, std::__2::allocator<wchar_t>>::append(unsigned long, wchar_t)",
  "std::__2::basic_string<wchar_t, std::__2::char_traits<wchar_t>, std::__2::allocator<wchar_t>>::append(wchar_t const*)",
  "std::__2::basic_string<wchar_t, std::__2::char_traits<wchar_t>, std::__2::allocator<wchar_t>>::append(wchar_t const*, unsigned long)",
  "std::__2::basic_string<wchar_t, std::__2::char_traits<wchar_t>, std::__2::allocator<wchar_t>>::assign(std::__2::basic_string<wchar_t, std::__2::char_traits<wchar_t>, std::__2::allocator<wchar_t>> const&, unsigned long, unsigned long)",
  "std::__2::basic_string<wchar_t, std::__2::char_traits<wchar_t>, std::__2::allocator<wchar_t>>::assign(unsigned long, wchar_t)",
  "std::__2::basic_string<wchar_t, std::__2::char_traits<wchar_t>, std::__2::allocator<wchar_t>>::assign(wchar_t const*)",
  "std::__2::basic_string<wchar_t, std::__2::char_traits<wchar_t>, std::__2::allocator<wchar_t>>::assign(wchar_t const*, unsigned long)",
  "std::__2::basic_string<wchar_t, std::__2::char_traits<wchar_t>, std::__2::allocator<wchar_t>>::basic_string(std::__2::basic_string<wchar_t, std::__2::char_traits<wchar_t>, std::__2::allocator<wchar_t>> const&)",
  "std::__2::basic_string<wchar_t, std::__2::char_traits<wchar_t>, std::__2::allocator<wchar_t>>::basic_string(std::__2::basic_string<wchar_t, std::__2::char_traits<wchar_t>, std::__2::allocator<wchar_t>> const&, unsigned long, unsigned long, std::__2::allocator<wchar_t> const&)",
  "std::__2::basic_string<wchar_t, std::__2::char_traits<wchar_t>, std::__2::allocator<wchar_t>>::basic_string[abi:v15006](unsigned long, wchar_t)",
  "std::__2::basic_string<wchar_t, std::__2::char_traits<wchar_t>, std::__2::allocator<wchar_t>>::basic_string[abi:v15006]<char*, void>(char*, char*)",
  "std::__2::basic_string<wchar_t, std::__2::char_traits<wchar_t>, std::__2::allocator<wchar_t>>::basic_string[abi:v15006]<std::nullptr_t>(wchar_t const*)",
  "std::__2::basic_string<wchar_t, std::__2::char_traits<wchar_t>, std::__2::allocator<wchar_t>>::basic_string[abi:v15006]<wchar_t const*, void>(wchar_t const*, wchar_t const*)",
  "std::__2::basic_string<wchar_t, std::__2::char_traits<wchar_t>, std::__2::allocator<wchar_t>>::basic_string[abi:v15006]<wchar_t*, void>(wchar_t*, wchar_t*, std::__2::allocator<wchar_t> const&)",
  "std::__2::basic_string<wchar_t, std::__2::char_traits<wchar_t>, std::__2::allocator<wchar_t>>::find_first_of(wchar_t const*, unsigned long, unsigned long) const",
  "std::__2::basic_string<wchar_t, std::__2::char_traits<wchar_t>, std::__2::allocator<wchar_t>>::insert(std::__2::__wrap_iter<wchar_t const*>, wchar_t)",
  "std::__2::basic_string<wchar_t, std::__2::char_traits<wchar_t>, std::__2::allocator<wchar_t>>::insert(unsigned long, std::__2::basic_string<wchar_t, std::__2::char_traits<wchar_t>, std::__2::allocator<wchar_t>> const&, unsigned long, unsigned long)",
  "std::__2::basic_string<wchar_t, std::__2::char_traits<wchar_t>, std::__2::allocator<wchar_t>>::insert(unsigned long, unsigned long, wchar_t)",
  "std::__2::basic_string<wchar_t, std::__2::char_traits<wchar_t>, std::__2::allocator<wchar_t>>::insert(unsigned long, wchar_t const*)",
  "std::__2::basic_string<wchar_t, std::__2::char_traits<wchar_t>, std::__2::allocator<wchar_t>>::insert(unsigned long, wchar_t const*, unsigned long)",
  "std::__2::basic_string<wchar_t, std::__2::char_traits<wchar_t>, std::__2::allocator<wchar_t>>::operator=[abi:v15006](wchar_t const*)",
  "std::__2::basic_string<wchar_t, std::__2::char_traits<wchar_t>, std::__2::allocator<wchar_t>>::push_back(wchar_t)",
  "std::__2::basic_string<wchar_t, std::__2::char_traits<wchar_t>, std::__2::allocator<wchar_t>>::replace(unsigned long, unsigned long, std::__2::basic_string<wchar_t, std::__2::char_traits<wchar_t>, std::__2::allocator<wchar_t>> const&, unsigned long, unsigned long)",
  "std::__2::basic_string<wchar_t, std::__2::char_traits<wchar_t>, std::__2::allocator<wchar_t>>::replace(unsigned long, unsigned long, unsigned long, wchar_t)",
  "std::__2::basic_string<wchar_t, std::__2::char_traits<wchar_t>, std::__2::allocator<wchar_t>>::replace(unsigned long, unsigned long, wchar_t const*)",
  "std::__2::basic_string<wchar_t, std::__2::char_traits<wchar_t>, std::__2::allocator<wchar_t>>::replace(unsigned long, unsigned long, wchar_t const*, unsigned long)",
  "std::__2::basic_string<wchar_t, std::__2::char_traits<wchar_t>, std::__2::allocator<wchar_t>>::reserve(unsigned long)",
  "std::__2::basic_string<wchar_t, std::__2::char_traits<wchar_t>, std::__2::allocator<wchar_t>>::resize(unsigned long, wchar_t)",
  "std::__2::basic_string<wchar_t, std::__2::char_traits<wchar_t>, std::__2::allocator<wchar_t>>::resize[abi:v15006](unsigned long)",
  "std::__2::basic_string<wchar_t, std::__2::char_traits<wchar_t>, std::__2::allocator<wchar_t>>::rfind(wchar_t const*, unsigned long, unsigned long) const",
  "std::__2::basic_stringbuf<char, std::__2::char_traits<char>, std::__2::allocator<char>>::basic_stringbuf(std::__2::basic_stringbuf<char, std::__2::char_traits<char>, std::__2::allocator<char>>&&)",
  "std::__2::basic_stringbuf<char, std::__2::char_traits<char>, std::__2::allocator<char>>::operator=(std::__2::basic_stringbuf<char, std::__2::char_traits<char>, std::__2::allocator<char>>&&)",
  "std::__2::basic_stringbuf<char, std::__2::char_traits<char>, std::__2::allocator<char>>::overflow(int)",
  "std::__2::basic_stringbuf<char, std::__2::char_traits<char>, std::__2::allocator<char>>::seekpos[abi:v15006](std::__2::fpos<__mbstate_t>, unsigned int)",
  "std::__2::basic_stringbuf<char, std::__2::char_traits<char>, std::__2::allocator<char>>::str() const",
  "std::__2::basic_stringbuf<char, std::__2::char_traits<char>, std::__2::allocator<char>>::str(std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>> const&)",
  "std::__2::basic_stringbuf<char, std::__2::char_traits<char>, std::__2::allocator<char>>::swap(std::__2::basic_stringbuf<char, std::__2::char_traits<char>, std::__2::allocator<char>>&)",
  "std::__2::basic_stringbuf<char, std::__2::char_traits<char>, std::__2::allocator<char>>::~basic_stringbuf()",
  "std::__2::basic_stringstream<char, std::__2::char_traits<char>, std::__2::allocator<char>>::operator=(std::__2::basic_stringstream<char, std::__2::char_traits<char>, std::__2::allocator<char>>&&)",
  "std::__2::basic_stringstream<char, std::__2::char_traits<char>, std::__2::allocator<char>>::~basic_stringstream()",
  "std::__2::basic_stringstream<char, std::__2::char_traits<char>, std::__2::allocator<char>>::~basic_stringstream().2",
  "std::__2::codecvt<char, char, __mbstate_t> const& std::__2::use_facet[abi:v15006]<std::__2::codecvt<char, char, __mbstate_t>>(std::__2::locale const&)",
  "std::__2::codecvt<char, char, __mbstate_t>::always_noconv[abi:v15006]() const",
  "std::__2::codecvt<char, char, __mbstate_t>::encoding[abi:v15006]() const",
  "std::__2::codecvt<char, char, __mbstate_t>::in[abi:v15006](__mbstate_t&, char const*, char const*, char const*&, char*, char*, char*&) const",
  "std::__2::codecvt<char, char, __mbstate_t>::length[abi:v15006](__mbstate_t&, char const*, char const*, unsigned long) const",
  "std::__2::codecvt<char, char, __mbstate_t>::out[abi:v15006](__mbstate_t&, char const*, char const*, char const*&, char*, char*, char*&) const",
  "std::__2::codecvt<char, char, __mbstate_t>::unshift[abi:v15006](__mbstate_t&, char*, char*, char*&) const",
  "std::__2::codecvt<wchar_t, char, __mbstate_t> const& std::__2::use_facet[abi:v15006]<std::__2::codecvt<wchar_t, char, __mbstate_t>>(std::__2::locale const&)",
  "std::__2::codecvt<wchar_t, char, __mbstate_t>::always_noconv[abi:v15006]() const",
  "std::__2::codecvt<wchar_t, char, __mbstate_t>::codecvt(char const*, unsigned long)",
  "std::__2::codecvt<wchar_t, char, __mbstate_t>::encoding[abi:v15006]() const",
  "std::__2::codecvt<wchar_t, char, __mbstate_t>::in[abi:v15006](__mbstate_t&, char const*, char const*, char const*&, wchar_t*, wchar_t*, wchar_t*&) const",
  "std::__2::codecvt<wchar_t, char, __mbstate_t>::out[abi:v15006](__mbstate_t&, wchar_t const*, wchar_t const*, wchar_t const*&, char*, char*, char*&) const",
  "std::__2::codecvt<wchar_t, char, __mbstate_t>::unshift[abi:v15006](__mbstate_t&, char*, char*, char*&) const",
  "std::__2::codecvt_byname<wchar_t, char, __mbstate_t>::codecvt_byname[abi:v15006](std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>> const&, unsigned long)",
  "std::__2::collate<char>::do_transform(char const*, char const*) const",
  "std::__2::collate<wchar_t>::do_transform(wchar_t const*, wchar_t const*) const",
  "std::__2::collate_byname<char>::collate_byname(char const*, unsigned long)",
  "std::__2::collate_byname<char>::collate_byname(std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>> const&, unsigned long)",
  "std::__2::collate_byname<char>::do_compare(char const*, char const*, char const*, char const*) const",
  "std::__2::collate_byname<char>::do_transform(char const*, char const*) const",
  "std::__2::collate_byname<wchar_t>::collate_byname(char const*, unsigned long)",
  "std::__2::collate_byname<wchar_t>::collate_byname(std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>> const&, unsigned long)",
  "std::__2::collate_byname<wchar_t>::do_compare(wchar_t const*, wchar_t const*, wchar_t const*, wchar_t const*) const",
  "std::__2::collate_byname<wchar_t>::do_transform(wchar_t const*, wchar_t const*) const",
  "std::__2::ctype<char> const& std::__2::use_facet[abi:v15006]<std::__2::ctype<char>>(std::__2::locale const&)",
  "std::__2::ctype<char>::narrow[abi:v15006](char, char) const",
  "std::__2::ctype<char>::toupper[abi:v15006](char) const",
  "std::__2::ctype<char>::widen[abi:v15006](char const*, char const*, char*) const",
  "std::__2::ctype<char>::widen[abi:v15006](char) const",
  "std::__2::ctype<wchar_t> const& std::__2::use_facet[abi:v15006]<std::__2::ctype<wchar_t>>(std::__2::locale const&)",
  "std::__2::ctype<wchar_t>::is[abi:v15006](unsigned long, wchar_t) const",
  "std::__2::ctype<wchar_t>::narrow[abi:v15006](wchar_t, char) const",
  "std::__2::ctype<wchar_t>::toupper[abi:v15006](wchar_t) const",
  "std::__2::ctype<wchar_t>::widen[abi:v15006](char const*, char const*, wchar_t*) const",
  "std::__2::ctype<wchar_t>::widen[abi:v15006](char) const",
  "std::__2::ctype_byname<char>::ctype_byname(char const*, unsigned long)",
  "std::__2::ctype_byname<char>::ctype_byname(std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>> const&, unsigned long)",
  "std::__2::ctype_byname<wchar_t>::ctype_byname(char const*, unsigned long)",
  "std::__2::ctype_byname<wchar_t>::ctype_byname(std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>> const&, unsigned long)",
  "std::__2::deque<std::__2::__fs::filesystem::__dir_stream, std::__2::allocator<std::__2::__fs::filesystem::__dir_stream>>::__add_back_capacity()",
  "std::__2::deque<std::__2::__fs::filesystem::__dir_stream, std::__2::allocator<std::__2::__fs::filesystem::__dir_stream>>::push_back(std::__2::__fs::filesystem::__dir_stream&&)",
  "std::__2::enable_if<__is_cpp17_forward_iterator<char const*>::value, std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>>&>::type std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>>::append[abi:v15006]<char const*>(char const*, char const*)",
  "std::__2::enable_if<__is_cpp17_forward_iterator<char const*>::value, void>::type std::__2::__fs::filesystem::_PathCVT<char>::__append_range[abi:v15006]<char const*>(std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>>&, char const*, char const*)",
  "std::__2::enable_if<__is_cpp17_forward_iterator<char const*>::value, void>::type std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>>::__init<char const*>(char const*, char const*)",
  "std::__2::enable_if<__is_cpp17_forward_iterator<char*>::value, std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>>&>::type std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>>::append[abi:v15006]<char*>(char*, char*)",
  "std::__2::enable_if<__is_cpp17_forward_iterator<char*>::value, void>::type std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>>::__init<char*>(char*, char*)",
  "std::__2::enable_if<__is_cpp17_forward_iterator<char*>::value, void>::type std::__2::basic_string<wchar_t, std::__2::char_traits<wchar_t>, std::__2::allocator<wchar_t>>::__init<char*>(char*, char*)",
  "std::__2::enable_if<__is_cpp17_forward_iterator<std::__2::locale::facet**>::value && is_constructible<std::__2::locale::facet*, std::__2::iterator_traits<std::__2::locale::facet**>::reference>::value, void>::type std::__2::vector<std::__2::locale::facet*, std::__2::__sso_allocator<std::__2::locale::facet*, 30ul>>::assign<std::__2::locale::facet**>(std::__2::locale::facet**, std::__2::locale::facet**)",
  "std::__2::enable_if<__is_cpp17_forward_iterator<wchar_t const*>::value, void>::type std::__2::basic_string<wchar_t, std::__2::char_traits<wchar_t>, std::__2::allocator<wchar_t>>::__init<wchar_t const*>(wchar_t const*, wchar_t const*)",
  "std::__2::enable_if<__is_cpp17_forward_iterator<wchar_t*>::value, std::__2::basic_string<wchar_t, std::__2::char_traits<wchar_t>, std::__2::allocator<wchar_t>>&>::type std::__2::basic_string<wchar_t, std::__2::char_traits<wchar_t>, std::__2::allocator<wchar_t>>::append[abi:v15006]<wchar_t*>(wchar_t*, wchar_t*)",
  "std::__2::enable_if<__is_cpp17_forward_iterator<wchar_t*>::value, std::__2::basic_string<wchar_t, std::__2::char_traits<wchar_t>, std::__2::allocator<wchar_t>>&>::type std::__2::basic_string<wchar_t, std::__2::char_traits<wchar_t>, std::__2::allocator<wchar_t>>::assign<wchar_t*>(wchar_t*, wchar_t*)",
  "std::__2::enable_if<__is_cpp17_forward_iterator<wchar_t*>::value, void>::type std::__2::basic_string<wchar_t, std::__2::char_traits<wchar_t>, std::__2::allocator<wchar_t>>::__init<wchar_t*>(wchar_t*, wchar_t*)",
  "std::__2::enable_if<__is_pathable<char [1]>::value, std::__2::__fs::filesystem::path&>::type std::__2::__fs::filesystem::path::append[abi:v15006]<char [1]>(char const (&) [1])",
  "std::__2::enable_if<__is_pathable<char [1]>::value, std::__2::__fs::filesystem::path&>::type std::__2::__fs::filesystem::path::operator/=[abi:v15006]<char [1]>(char const (&) [1])",
  "std::__2::enable_if<__is_pathable<char [3]>::value, std::__2::__fs::filesystem::path&>::type std::__2::__fs::filesystem::path::append[abi:v15006]<char [3]>(char const (&) [3])",
  "std::__2::enable_if<__is_pathable<char [3]>::value, std::__2::__fs::filesystem::path&>::type std::__2::__fs::filesystem::path::operator/=[abi:v15006]<char [3]>(char const (&) [3])",
  "std::__2::enable_if<__is_pathable<std::__2::basic_string_view<char, std::__2::char_traits<char>>>::value, std::__2::__fs::filesystem::path&>::type std::__2::__fs::filesystem::path::append[abi:v15006]<std::__2::basic_string_view<char, std::__2::char_traits<char>>>(std::__2::basic_string_view<char, std::__2::char_traits<char>> const&)",
  "std::__2::enable_if<__is_pathable<std::__2::basic_string_view<char, std::__2::char_traits<char>>>::value, std::__2::__fs::filesystem::path&>::type std::__2::__fs::filesystem::path::assign[abi:v15006]<std::__2::basic_string_view<char, std::__2::char_traits<char>>>(std::__2::basic_string_view<char, std::__2::char_traits<char>> const&)",
  "std::__2::enable_if<__is_pathable<std::__2::basic_string_view<char, std::__2::char_traits<char>>>::value, std::__2::__fs::filesystem::path&>::type std::__2::__fs::filesystem::path::operator/=[abi:v15006]<std::__2::basic_string_view<char, std::__2::char_traits<char>>>(std::__2::basic_string_view<char, std::__2::char_traits<char>> const&)",
  "std::__2::enable_if<is_move_constructible<std::__2::locale>::value && is_move_assignable<std::__2::locale>::value, void>::type std::__2::swap[abi:v15006]<std::__2::locale>(std::__2::locale&, std::__2::locale&)",
  "std::__2::error_category::equivalent(int, std::__2::error_condition const&) const",
  "std::__2::error_code::message() const",
  "std::__2::error_condition::message() const",
  "std::__2::future<void>::get()",
  "std::__2::future<void>::~future()",
  "std::__2::future_error::future_error(std::__2::error_code)",
  "std::__2::gslice::__init(unsigned long)",
  "std::__2::init_am_pm()",
  "std::__2::init_months()",
  "std::__2::init_wam_pm()",
  "std::__2::init_weeks()",
  "std::__2::init_wmonths()",
  "std::__2::init_wweeks()",
  "std::__2::ios_base::Init::Init()",
  "std::__2::ios_base::__call_callbacks(std::__2::ios_base::event)",
  "std::__2::ios_base::copyfmt(std::__2::ios_base const&)",
  "std::__2::ios_base::failure::failure(char const*, std::__2::error_code const&)",
  "std::__2::ios_base::failure::failure(std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>> const&, std::__2::error_code const&)",
  "std::__2::ios_base::imbue(std::__2::locale const&)",
  "std::__2::ios_base::init(void*)",
  "std::__2::ios_base::swap(std::__2::ios_base&)",
  "std::__2::ios_base::~ios_base()",
  "std::__2::istreambuf_iterator<char, std::__2::char_traits<char>> std::__2::num_get<char, std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>>::__do_get_floating_point<double>(std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>, std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>, std::__2::ios_base&, unsigned int&, double&) const",
  "std::__2::istreambuf_iterator<char, std::__2::char_traits<char>> std::__2::num_get<char, std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>>::__do_get_floating_point<float>(std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>, std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>, std::__2::ios_base&, unsigned int&, float&) const",
  "std::__2::istreambuf_iterator<char, std::__2::char_traits<char>> std::__2::num_get<char, std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>>::__do_get_floating_point<long double>(std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>, std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>, std::__2::ios_base&, unsigned int&, long double&) const",
  "std::__2::istreambuf_iterator<char, std::__2::char_traits<char>> std::__2::num_get<char, std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>>::__do_get_signed<long long>(std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>, std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>, std::__2::ios_base&, unsigned int&, long long&) const",
  "std::__2::istreambuf_iterator<char, std::__2::char_traits<char>> std::__2::num_get<char, std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>>::__do_get_signed<long>(std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>, std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>, std::__2::ios_base&, unsigned int&, long&) const",
  "std::__2::istreambuf_iterator<char, std::__2::char_traits<char>> std::__2::num_get<char, std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>>::__do_get_unsigned<unsigned int>(std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>, std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>, std::__2::ios_base&, unsigned int&, unsigned int&) const",
  "std::__2::istreambuf_iterator<char, std::__2::char_traits<char>> std::__2::num_get<char, std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>>::__do_get_unsigned<unsigned long long>(std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>, std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>, std::__2::ios_base&, unsigned int&, unsigned long long&) const",
  "std::__2::istreambuf_iterator<char, std::__2::char_traits<char>> std::__2::num_get<char, std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>>::__do_get_unsigned<unsigned long>(std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>, std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>, std::__2::ios_base&, unsigned int&, unsigned long&) const",
  "std::__2::istreambuf_iterator<char, std::__2::char_traits<char>> std::__2::num_get<char, std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>>::__do_get_unsigned<unsigned short>(std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>, std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>, std::__2::ios_base&, unsigned int&, unsigned short&) const",
  "std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>::__test_for_eof[abi:v15006]() const",
  "std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>::equal[abi:v15006](std::__2::istreambuf_iterator<char, std::__2::char_traits<char>> const&) const",
  "std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>::operator*[abi:v15006]() const",
  "std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>::operator++[abi:v15006]()",
  "std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>::operator++[abi:v15006](int)",
  "std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>> std::__2::num_get<wchar_t, std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>>::__do_get_floating_point<double>(std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>, std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>, std::__2::ios_base&, unsigned int&, double&) const",
  "std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>> std::__2::num_get<wchar_t, std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>>::__do_get_floating_point<float>(std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>, std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>, std::__2::ios_base&, unsigned int&, float&) const",
  "std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>> std::__2::num_get<wchar_t, std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>>::__do_get_floating_point<long double>(std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>, std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>, std::__2::ios_base&, unsigned int&, long double&) const",
  "std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>> std::__2::num_get<wchar_t, std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>>::__do_get_signed<long long>(std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>, std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>, std::__2::ios_base&, unsigned int&, long long&) const",
  "std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>> std::__2::num_get<wchar_t, std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>>::__do_get_signed<long>(std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>, std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>, std::__2::ios_base&, unsigned int&, long&) const",
  "std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>> std::__2::num_get<wchar_t, std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>>::__do_get_unsigned<unsigned int>(std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>, std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>, std::__2::ios_base&, unsigned int&, unsigned int&) const",
  "std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>> std::__2::num_get<wchar_t, std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>>::__do_get_unsigned<unsigned long long>(std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>, std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>, std::__2::ios_base&, unsigned int&, unsigned long long&) const",
  "std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>> std::__2::num_get<wchar_t, std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>>::__do_get_unsigned<unsigned long>(std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>, std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>, std::__2::ios_base&, unsigned int&, unsigned long&) const",
  "std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>> std::__2::num_get<wchar_t, std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>>::__do_get_unsigned<unsigned short>(std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>, std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>, std::__2::ios_base&, unsigned int&, unsigned short&) const",
  "std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>::__test_for_eof[abi:v15006]() const",
  "std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>::equal[abi:v15006](std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>> const&) const",
  "std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>::operator*[abi:v15006]() const",
  "std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>::operator++[abi:v15006]()",
  "std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>::operator++[abi:v15006](int)",
  "std::__2::istrstream::~istrstream()",
  "std::__2::istrstream::~istrstream().2",
  "std::__2::locale::__global()",
  "std::__2::locale::__imp& std::__2::(anonymous namespace)::make<std::__2::locale::__imp, unsigned int>(unsigned int)",
  "std::__2::locale::__imp::__imp(std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>> const&, unsigned long)",
  "std::__2::locale::__imp::__imp(std::__2::locale::__imp const&)",
  "std::__2::locale::__imp::__imp(std::__2::locale::__imp const&, std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>> const&, int)",
  "std::__2::locale::__imp::__imp(std::__2::locale::__imp const&, std::__2::locale::__imp const&, int)",
  "std::__2::locale::__imp::__imp(std::__2::locale::__imp const&, std::__2::locale::facet*, long)",
  "std::__2::locale::__imp::__imp(unsigned long)",
  "std::__2::locale::__imp::install(std::__2::locale::facet*, long)",
  "std::__2::locale::__imp::make_classic()",
  "std::__2::locale::__imp::make_global()",
  "std::__2::locale::__imp::~__imp()",
  "std::__2::locale::__install_ctor(std::__2::locale const&, std::__2::locale::facet*, long)",
  "std::__2::locale::classic()",
  "std::__2::locale::facet::__on_zero_shared()",
  "std::__2::locale::global(std::__2::locale const&)",
  "std::__2::locale::has_facet(std::__2::locale::id&) const",
  "std::__2::locale::id::__get()",
  "std::__2::locale::locale()",
  "std::__2::locale::locale(char const*)",
  "std::__2::locale::locale(std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>> const&)",
  "std::__2::locale::locale(std::__2::locale const&, char const*, int)",
  "std::__2::locale::locale(std::__2::locale const&, std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>> const&, int)",
  "std::__2::locale::locale(std::__2::locale const&, std::__2::locale const&, int)",
  "std::__2::locale::name() const",
  "std::__2::locale::operator=(std::__2::locale const&)",
  "std::__2::locale::use_facet(std::__2::locale::id&) const",
  "std::__2::locale::~locale()",
  "std::__2::messages<char>::do_get(long, int, int, std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>> const&) const",
  "std::__2::messages<wchar_t>::do_get(long, int, int, std::__2::basic_string<wchar_t, std::__2::char_traits<wchar_t>, std::__2::allocator<wchar_t>> const&) const",
  "std::__2::money_get<char, std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>>::__do_get(std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>&, std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>, bool, std::__2::locale const&, unsigned int, unsigned int&, bool&, std::__2::ctype<char> const&, std::__2::unique_ptr<char, void (*)(void*)>&, char*&, char*)",
  "std::__2::money_get<char, std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>>::do_get(std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>, std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>, bool, std::__2::ios_base&, unsigned int&, long double&) const",
  "std::__2::money_get<char, std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>>::do_get(std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>, std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>, bool, std::__2::ios_base&, unsigned int&, std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>>&) const",
  "std::__2::money_get<wchar_t, std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>>::__do_get(std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>&, std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>, bool, std::__2::locale const&, unsigned int, unsigned int&, bool&, std::__2::ctype<wchar_t> const&, std::__2::unique_ptr<wchar_t, void (*)(void*)>&, wchar_t*&, wchar_t*)",
  "std::__2::money_get<wchar_t, std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>>::do_get(std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>, std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>, bool, std::__2::ios_base&, unsigned int&, long double&) const",
  "std::__2::money_get<wchar_t, std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>>::do_get(std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>, std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>, bool, std::__2::ios_base&, unsigned int&, std::__2::basic_string<wchar_t, std::__2::char_traits<wchar_t>, std::__2::allocator<wchar_t>>&) const",
  "std::__2::money_put<char, std::__2::ostreambuf_iterator<char, std::__2::char_traits<char>>>::do_put(std::__2::ostreambuf_iterator<char, std::__2::char_traits<char>>, bool, std::__2::ios_base&, char, long double) const",
  "std::__2::money_put<char, std::__2::ostreambuf_iterator<char, std::__2::char_traits<char>>>::do_put(std::__2::ostreambuf_iterator<char, std::__2::char_traits<char>>, bool, std::__2::ios_base&, char, std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>> const&) const",
  "std::__2::money_put<wchar_t, std::__2::ostreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>>::do_put(std::__2::ostreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>, bool, std::__2::ios_base&, wchar_t, long double) const",
  "std::__2::money_put<wchar_t, std::__2::ostreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>>::do_put(std::__2::ostreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>, bool, std::__2::ios_base&, wchar_t, std::__2::basic_string<wchar_t, std::__2::char_traits<wchar_t>, std::__2::allocator<wchar_t>> const&) const",
  "std::__2::moneypunct<char, false> const& std::__2::use_facet[abi:v15006]<std::__2::moneypunct<char, false>>(std::__2::locale const&)",
  "std::__2::moneypunct<char, false>::decimal_point[abi:v15006]() const",
  "std::__2::moneypunct<char, false>::do_negative_sign() const",
  "std::__2::moneypunct<char, false>::frac_digits[abi:v15006]() const",
  "std::__2::moneypunct<char, false>::grouping[abi:v15006]() const",
  "std::__2::moneypunct<char, false>::neg_format[abi:v15006]() const",
  "std::__2::moneypunct<char, false>::negative_sign[abi:v15006]() const",
  "std::__2::moneypunct<char, false>::pos_format[abi:v15006]() const",
  "std::__2::moneypunct<char, false>::positive_sign[abi:v15006]() const",
  "std::__2::moneypunct<char, false>::thousands_sep[abi:v15006]() const",
  "std::__2::moneypunct<char, true> const& std::__2::use_facet[abi:v15006]<std::__2::moneypunct<char, true>>(std::__2::locale const&)",
  "std::__2::moneypunct<char, true>::curr_symbol[abi:v15006]() const",
  "std::__2::moneypunct<char, true>::decimal_point[abi:v15006]() const",
  "std::__2::moneypunct<char, true>::do_negative_sign() const",
  "std::__2::moneypunct<char, true>::frac_digits[abi:v15006]() const",
  "std::__2::moneypunct<char, true>::grouping[abi:v15006]() const",
  "std::__2::moneypunct<char, true>::neg_format[abi:v15006]() const",
  "std::__2::moneypunct<char, true>::negative_sign[abi:v15006]() const",
  "std::__2::moneypunct<char, true>::pos_format[abi:v15006]() const",
  "std::__2::moneypunct<char, true>::positive_sign[abi:v15006]() const",
  "std::__2::moneypunct<char, true>::thousands_sep[abi:v15006]() const",
  "std::__2::moneypunct<wchar_t, false> const& std::__2::use_facet[abi:v15006]<std::__2::moneypunct<wchar_t, false>>(std::__2::locale const&)",
  "std::__2::moneypunct<wchar_t, false>::curr_symbol[abi:v15006]() const",
  "std::__2::moneypunct<wchar_t, false>::decimal_point[abi:v15006]() const",
  "std::__2::moneypunct<wchar_t, false>::do_negative_sign() const",
  "std::__2::moneypunct<wchar_t, false>::grouping[abi:v15006]() const",
  "std::__2::moneypunct<wchar_t, false>::neg_format[abi:v15006]() const",
  "std::__2::moneypunct<wchar_t, false>::negative_sign[abi:v15006]() const",
  "std::__2::moneypunct<wchar_t, false>::pos_format[abi:v15006]() const",
  "std::__2::moneypunct<wchar_t, false>::positive_sign[abi:v15006]() const",
  "std::__2::moneypunct<wchar_t, false>::thousands_sep[abi:v15006]() const",
  "std::__2::moneypunct<wchar_t, true> const& std::__2::use_facet[abi:v15006]<std::__2::moneypunct<wchar_t, true>>(std::__2::locale const&)",
  "std::__2::moneypunct<wchar_t, true>::curr_symbol[abi:v15006]() const",
  "std::__2::moneypunct<wchar_t, true>::decimal_point[abi:v15006]() const",
  "std::__2::moneypunct<wchar_t, true>::do_negative_sign() const",
  "std::__2::moneypunct<wchar_t, true>::frac_digits[abi:v15006]() const",
  "std::__2::moneypunct<wchar_t, true>::grouping[abi:v15006]() const",
  "std::__2::moneypunct<wchar_t, true>::neg_format[abi:v15006]() const",
  "std::__2::moneypunct<wchar_t, true>::negative_sign[abi:v15006]() const",
  "std::__2::moneypunct<wchar_t, true>::pos_format[abi:v15006]() const",
  "std::__2::moneypunct<wchar_t, true>::positive_sign[abi:v15006]() const",
  "std::__2::moneypunct<wchar_t, true>::thousands_sep[abi:v15006]() const",
  "std::__2::moneypunct_byname<char, false>::do_curr_symbol() const",
  "std::__2::moneypunct_byname<char, false>::do_grouping() const",
  "std::__2::moneypunct_byname<char, false>::do_negative_sign() const",
  "std::__2::moneypunct_byname<char, false>::do_positive_sign() const",
  "std::__2::moneypunct_byname<char, false>::init(char const*)",
  "std::__2::moneypunct_byname<char, false>::moneypunct_byname[abi:v15006](std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>> const&, unsigned long)",
  "std::__2::moneypunct_byname<char, true>::do_curr_symbol() const",
  "std::__2::moneypunct_byname<char, true>::do_grouping() const",
  "std::__2::moneypunct_byname<char, true>::do_negative_sign() const",
  "std::__2::moneypunct_byname<char, true>::do_positive_sign() const",
  "std::__2::moneypunct_byname<char, true>::init(char const*)",
  "std::__2::moneypunct_byname<char, true>::moneypunct_byname[abi:v15006](std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>> const&, unsigned long)",
  "std::__2::moneypunct_byname<wchar_t, false>::do_curr_symbol() const",
  "std::__2::moneypunct_byname<wchar_t, false>::do_grouping() const",
  "std::__2::moneypunct_byname<wchar_t, false>::do_negative_sign() const",
  "std::__2::moneypunct_byname<wchar_t, false>::do_positive_sign() const",
  "std::__2::moneypunct_byname<wchar_t, false>::init(char const*)",
  "std::__2::moneypunct_byname<wchar_t, false>::moneypunct_byname[abi:v15006](std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>> const&, unsigned long)",
  "std::__2::moneypunct_byname<wchar_t, true>::do_curr_symbol() const",
  "std::__2::moneypunct_byname<wchar_t, true>::do_grouping() const",
  "std::__2::moneypunct_byname<wchar_t, true>::do_negative_sign() const",
  "std::__2::moneypunct_byname<wchar_t, true>::do_positive_sign() const",
  "std::__2::moneypunct_byname<wchar_t, true>::init(char const*)",
  "std::__2::moneypunct_byname<wchar_t, true>::moneypunct_byname[abi:v15006](std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>> const&, unsigned long)",
  "std::__2::notify_all_at_thread_exit(std::__2::condition_variable&, std::__2::unique_lock<std::__2::mutex>)",
  "std::__2::num_get<char, std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>> const& std::__2::use_facet[abi:v15006]<std::__2::num_get<char, std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>>>(std::__2::locale const&)",
  "std::__2::num_get<char, std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>>::do_get(std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>, std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>, std::__2::ios_base&, unsigned int&, double&) const",
  "std::__2::num_get<char, std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>>::do_get(std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>, std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>, std::__2::ios_base&, unsigned int&, float&) const",
  "std::__2::num_get<char, std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>>::do_get(std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>, std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>, std::__2::ios_base&, unsigned int&, long double&) const",
  "std::__2::num_get<char, std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>>::do_get(std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>, std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>, std::__2::ios_base&, unsigned int&, long long&) const",
  "std::__2::num_get<char, std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>>::do_get(std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>, std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>, std::__2::ios_base&, unsigned int&, long&) const",
  "std::__2::num_get<char, std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>>::do_get(std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>, std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>, std::__2::ios_base&, unsigned int&, unsigned int&) const",
  "std::__2::num_get<char, std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>>::do_get(std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>, std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>, std::__2::ios_base&, unsigned int&, unsigned long long&) const",
  "std::__2::num_get<char, std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>>::do_get(std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>, std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>, std::__2::ios_base&, unsigned int&, unsigned long&) const",
  "std::__2::num_get<char, std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>>::do_get(std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>, std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>, std::__2::ios_base&, unsigned int&, unsigned short&) const",
  "std::__2::num_get<char, std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>>::do_get(std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>, std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>, std::__2::ios_base&, unsigned int&, void*&) const",
  "std::__2::num_get<char, std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>>::get[abi:v15006](std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>, std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>, std::__2::ios_base&, unsigned int&, bool&) const",
  "std::__2::num_get<char, std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>>::get[abi:v15006](std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>, std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>, std::__2::ios_base&, unsigned int&, double&) const",
  "std::__2::num_get<char, std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>>::get[abi:v15006](std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>, std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>, std::__2::ios_base&, unsigned int&, float&) const",
  "std::__2::num_get<char, std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>>::get[abi:v15006](std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>, std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>, std::__2::ios_base&, unsigned int&, long double&) const",
  "std::__2::num_get<char, std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>>::get[abi:v15006](std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>, std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>, std::__2::ios_base&, unsigned int&, long long&) const",
  "std::__2::num_get<char, std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>>::get[abi:v15006](std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>, std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>, std::__2::ios_base&, unsigned int&, long&) const",
  "std::__2::num_get<char, std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>>::get[abi:v15006](std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>, std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>, std::__2::ios_base&, unsigned int&, unsigned int&) const",
  "std::__2::num_get<char, std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>>::get[abi:v15006](std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>, std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>, std::__2::ios_base&, unsigned int&, unsigned long long&) const",
  "std::__2::num_get<char, std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>>::get[abi:v15006](std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>, std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>, std::__2::ios_base&, unsigned int&, unsigned long&) const",
  "std::__2::num_get<char, std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>>::get[abi:v15006](std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>, std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>, std::__2::ios_base&, unsigned int&, unsigned short&) const",
  "std::__2::num_get<char, std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>>::get[abi:v15006](std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>, std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>, std::__2::ios_base&, unsigned int&, void*&) const",
  "std::__2::num_get<wchar_t, std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>> const& std::__2::use_facet[abi:v15006]<std::__2::num_get<wchar_t, std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>>>(std::__2::locale const&)",
  "std::__2::num_get<wchar_t, std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>>::do_get(std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>, std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>, std::__2::ios_base&, unsigned int&, bool&) const",
  "std::__2::num_get<wchar_t, std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>>::do_get(std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>, std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>, std::__2::ios_base&, unsigned int&, double&) const",
  "std::__2::num_get<wchar_t, std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>>::do_get(std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>, std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>, std::__2::ios_base&, unsigned int&, float&) const",
  "std::__2::num_get<wchar_t, std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>>::do_get(std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>, std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>, std::__2::ios_base&, unsigned int&, long double&) const",
  "std::__2::num_get<wchar_t, std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>>::do_get(std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>, std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>, std::__2::ios_base&, unsigned int&, long long&) const",
  "std::__2::num_get<wchar_t, std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>>::do_get(std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>, std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>, std::__2::ios_base&, unsigned int&, long&) const",
  "std::__2::num_get<wchar_t, std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>>::do_get(std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>, std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>, std::__2::ios_base&, unsigned int&, unsigned int&) const",
  "std::__2::num_get<wchar_t, std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>>::do_get(std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>, std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>, std::__2::ios_base&, unsigned int&, unsigned long long&) const",
  "std::__2::num_get<wchar_t, std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>>::do_get(std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>, std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>, std::__2::ios_base&, unsigned int&, unsigned long&) const",
  "std::__2::num_get<wchar_t, std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>>::do_get(std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>, std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>, std::__2::ios_base&, unsigned int&, unsigned short&) const",
  "std::__2::num_get<wchar_t, std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>>::do_get(std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>, std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>, std::__2::ios_base&, unsigned int&, void*&) const",
  "std::__2::num_get<wchar_t, std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>>::get[abi:v15006](std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>, std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>, std::__2::ios_base&, unsigned int&, bool&) const",
  "std::__2::num_get<wchar_t, std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>>::get[abi:v15006](std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>, std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>, std::__2::ios_base&, unsigned int&, double&) const",
  "std::__2::num_get<wchar_t, std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>>::get[abi:v15006](std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>, std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>, std::__2::ios_base&, unsigned int&, float&) const",
  "std::__2::num_get<wchar_t, std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>>::get[abi:v15006](std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>, std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>, std::__2::ios_base&, unsigned int&, long double&) const",
  "std::__2::num_get<wchar_t, std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>>::get[abi:v15006](std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>, std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>, std::__2::ios_base&, unsigned int&, long long&) const",
  "std::__2::num_get<wchar_t, std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>>::get[abi:v15006](std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>, std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>, std::__2::ios_base&, unsigned int&, long&) const",
  "std::__2::num_get<wchar_t, std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>>::get[abi:v15006](std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>, std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>, std::__2::ios_base&, unsigned int&, unsigned int&) const",
  "std::__2::num_get<wchar_t, std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>>::get[abi:v15006](std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>, std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>, std::__2::ios_base&, unsigned int&, unsigned long long&) const",
  "std::__2::num_get<wchar_t, std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>>::get[abi:v15006](std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>, std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>, std::__2::ios_base&, unsigned int&, unsigned long&) const",
  "std::__2::num_get<wchar_t, std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>>::get[abi:v15006](std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>, std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>, std::__2::ios_base&, unsigned int&, unsigned short&) const",
  "std::__2::num_get<wchar_t, std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>>::get[abi:v15006](std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>, std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>, std::__2::ios_base&, unsigned int&, void*&) const",
  "std::__2::num_put<char, std::__2::ostreambuf_iterator<char, std::__2::char_traits<char>>> const& std::__2::use_facet[abi:v15006]<std::__2::num_put<char, std::__2::ostreambuf_iterator<char, std::__2::char_traits<char>>>>(std::__2::locale const&)",
  "std::__2::num_put<char, std::__2::ostreambuf_iterator<char, std::__2::char_traits<char>>>::do_put(std::__2::ostreambuf_iterator<char, std::__2::char_traits<char>>, std::__2::ios_base&, char, bool) const",
  "std::__2::num_put<char, std::__2::ostreambuf_iterator<char, std::__2::char_traits<char>>>::do_put(std::__2::ostreambuf_iterator<char, std::__2::char_traits<char>>, std::__2::ios_base&, char, double) const",
  "std::__2::num_put<char, std::__2::ostreambuf_iterator<char, std::__2::char_traits<char>>>::do_put(std::__2::ostreambuf_iterator<char, std::__2::char_traits<char>>, std::__2::ios_base&, char, long double) const",
  "std::__2::num_put<char, std::__2::ostreambuf_iterator<char, std::__2::char_traits<char>>>::do_put(std::__2::ostreambuf_iterator<char, std::__2::char_traits<char>>, std::__2::ios_base&, char, long long) const",
  "std::__2::num_put<char, std::__2::ostreambuf_iterator<char, std::__2::char_traits<char>>>::do_put(std::__2::ostreambuf_iterator<char, std::__2::char_traits<char>>, std::__2::ios_base&, char, long) const",
  "std::__2::num_put<char, std::__2::ostreambuf_iterator<char, std::__2::char_traits<char>>>::do_put(std::__2::ostreambuf_iterator<char, std::__2::char_traits<char>>, std::__2::ios_base&, char, unsigned long long) const",
  "std::__2::num_put<char, std::__2::ostreambuf_iterator<char, std::__2::char_traits<char>>>::do_put(std::__2::ostreambuf_iterator<char, std::__2::char_traits<char>>, std::__2::ios_base&, char, unsigned long) const",
  "std::__2::num_put<char, std::__2::ostreambuf_iterator<char, std::__2::char_traits<char>>>::do_put(std::__2::ostreambuf_iterator<char, std::__2::char_traits<char>>, std::__2::ios_base&, char, void const*) const",
  "std::__2::num_put<char, std::__2::ostreambuf_iterator<char, std::__2::char_traits<char>>>::put[abi:v15006](std::__2::ostreambuf_iterator<char, std::__2::char_traits<char>>, std::__2::ios_base&, char, bool) const",
  "std::__2::num_put<char, std::__2::ostreambuf_iterator<char, std::__2::char_traits<char>>>::put[abi:v15006](std::__2::ostreambuf_iterator<char, std::__2::char_traits<char>>, std::__2::ios_base&, char, double) const",
  "std::__2::num_put<char, std::__2::ostreambuf_iterator<char, std::__2::char_traits<char>>>::put[abi:v15006](std::__2::ostreambuf_iterator<char, std::__2::char_traits<char>>, std::__2::ios_base&, char, long double) const",
  "std::__2::num_put<char, std::__2::ostreambuf_iterator<char, std::__2::char_traits<char>>>::put[abi:v15006](std::__2::ostreambuf_iterator<char, std::__2::char_traits<char>>, std::__2::ios_base&, char, long long) const",
  "std::__2::num_put<char, std::__2::ostreambuf_iterator<char, std::__2::char_traits<char>>>::put[abi:v15006](std::__2::ostreambuf_iterator<char, std::__2::char_traits<char>>, std::__2::ios_base&, char, long) const",
  "std::__2::num_put<char, std::__2::ostreambuf_iterator<char, std::__2::char_traits<char>>>::put[abi:v15006](std::__2::ostreambuf_iterator<char, std::__2::char_traits<char>>, std::__2::ios_base&, char, unsigned long long) const",
  "std::__2::num_put<char, std::__2::ostreambuf_iterator<char, std::__2::char_traits<char>>>::put[abi:v15006](std::__2::ostreambuf_iterator<char, std::__2::char_traits<char>>, std::__2::ios_base&, char, unsigned long) const",
  "std::__2::num_put<char, std::__2::ostreambuf_iterator<char, std::__2::char_traits<char>>>::put[abi:v15006](std::__2::ostreambuf_iterator<char, std::__2::char_traits<char>>, std::__2::ios_base&, char, void const*) const",
  "std::__2::num_put<wchar_t, std::__2::ostreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>> const& std::__2::use_facet[abi:v15006]<std::__2::num_put<wchar_t, std::__2::ostreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>>>(std::__2::locale const&)",
  "std::__2::num_put<wchar_t, std::__2::ostreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>>::do_put(std::__2::ostreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>, std::__2::ios_base&, wchar_t, bool) const",
  "std::__2::num_put<wchar_t, std::__2::ostreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>>::do_put(std::__2::ostreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>, std::__2::ios_base&, wchar_t, double) const",
  "std::__2::num_put<wchar_t, std::__2::ostreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>>::do_put(std::__2::ostreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>, std::__2::ios_base&, wchar_t, long double) const",
  "std::__2::num_put<wchar_t, std::__2::ostreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>>::do_put(std::__2::ostreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>, std::__2::ios_base&, wchar_t, long long) const",
  "std::__2::num_put<wchar_t, std::__2::ostreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>>::do_put(std::__2::ostreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>, std::__2::ios_base&, wchar_t, long) const",
  "std::__2::num_put<wchar_t, std::__2::ostreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>>::do_put(std::__2::ostreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>, std::__2::ios_base&, wchar_t, unsigned long long) const",
  "std::__2::num_put<wchar_t, std::__2::ostreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>>::do_put(std::__2::ostreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>, std::__2::ios_base&, wchar_t, unsigned long) const",
  "std::__2::num_put<wchar_t, std::__2::ostreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>>::do_put(std::__2::ostreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>, std::__2::ios_base&, wchar_t, void const*) const",
  "std::__2::num_put<wchar_t, std::__2::ostreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>>::put[abi:v15006](std::__2::ostreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>, std::__2::ios_base&, wchar_t, bool) const",
  "std::__2::num_put<wchar_t, std::__2::ostreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>>::put[abi:v15006](std::__2::ostreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>, std::__2::ios_base&, wchar_t, double) const",
  "std::__2::num_put<wchar_t, std::__2::ostreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>>::put[abi:v15006](std::__2::ostreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>, std::__2::ios_base&, wchar_t, long double) const",
  "std::__2::num_put<wchar_t, std::__2::ostreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>>::put[abi:v15006](std::__2::ostreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>, std::__2::ios_base&, wchar_t, long long) const",
  "std::__2::num_put<wchar_t, std::__2::ostreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>>::put[abi:v15006](std::__2::ostreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>, std::__2::ios_base&, wchar_t, long) const",
  "std::__2::num_put<wchar_t, std::__2::ostreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>>::put[abi:v15006](std::__2::ostreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>, std::__2::ios_base&, wchar_t, unsigned long long) const",
  "std::__2::num_put<wchar_t, std::__2::ostreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>>::put[abi:v15006](std::__2::ostreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>, std::__2::ios_base&, wchar_t, unsigned long) const",
  "std::__2::num_put<wchar_t, std::__2::ostreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>>::put[abi:v15006](std::__2::ostreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>, std::__2::ios_base&, wchar_t, void const*) const",
  "std::__2::numpunct<char> const& std::__2::use_facet[abi:v15006]<std::__2::numpunct<char>>(std::__2::locale const&)",
  "std::__2::numpunct<char>::decimal_point[abi:v15006]() const",
  "std::__2::numpunct<char>::do_falsename() const",
  "std::__2::numpunct<char>::do_grouping() const",
  "std::__2::numpunct<char>::do_truename() const",
  "std::__2::numpunct<char>::grouping[abi:v15006]() const",
  "std::__2::numpunct<char>::thousands_sep[abi:v15006]() const",
  "std::__2::numpunct<char>::truename[abi:v15006]() const",
  "std::__2::numpunct<wchar_t> const& std::__2::use_facet[abi:v15006]<std::__2::numpunct<wchar_t>>(std::__2::locale const&)",
  "std::__2::numpunct<wchar_t>::decimal_point[abi:v15006]() const",
  "std::__2::numpunct<wchar_t>::do_falsename() const",
  "std::__2::numpunct<wchar_t>::do_grouping() const",
  "std::__2::numpunct<wchar_t>::do_truename() const",
  "std::__2::numpunct<wchar_t>::falsename[abi:v15006]() const",
  "std::__2::numpunct<wchar_t>::grouping[abi:v15006]() const",
  "std::__2::numpunct<wchar_t>::thousands_sep[abi:v15006]() const",
  "std::__2::numpunct<wchar_t>::truename[abi:v15006]() const",
  "std::__2::numpunct_byname<char>::__init(char const*)",
  "std::__2::numpunct_byname<char>::numpunct_byname(char const*, unsigned long)",
  "std::__2::numpunct_byname<char>::numpunct_byname(std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>> const&, unsigned long)",
  "std::__2::numpunct_byname<wchar_t>::__init(char const*)",
  "std::__2::numpunct_byname<wchar_t>::numpunct_byname(char const*, unsigned long)",
  "std::__2::numpunct_byname<wchar_t>::numpunct_byname(std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>> const&, unsigned long)",
  "std::__2::operator==[abi:v15006](std::__2::error_code const&, std::__2::error_condition const&)",
  "std::__2::ostreambuf_iterator<char, std::__2::char_traits<char>> std::__2::__pad_and_output<char, std::__2::char_traits<char>>(std::__2::ostreambuf_iterator<char, std::__2::char_traits<char>>, char const*, char const*, char const*, std::__2::ios_base&, char)",
  "std::__2::ostreambuf_iterator<char, std::__2::char_traits<char>> std::__2::copy[abi:v15006]<char*, std::__2::ostreambuf_iterator<char, std::__2::char_traits<char>>>(char*, char*, std::__2::ostreambuf_iterator<char, std::__2::char_traits<char>>)",
  "std::__2::ostreambuf_iterator<char, std::__2::char_traits<char>> std::__2::copy[abi:v15006]<std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>, std::__2::ostreambuf_iterator<char, std::__2::char_traits<char>>>(std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>, std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>, std::__2::ostreambuf_iterator<char, std::__2::char_traits<char>>)",
  "std::__2::ostreambuf_iterator<char, std::__2::char_traits<char>> std::__2::num_put<char, std::__2::ostreambuf_iterator<char, std::__2::char_traits<char>>>::__do_put_floating_point[abi:v15006]<double>(std::__2::ostreambuf_iterator<char, std::__2::char_traits<char>>, std::__2::ios_base&, char, double, char const*) const",
  "std::__2::ostreambuf_iterator<char, std::__2::char_traits<char>> std::__2::num_put<char, std::__2::ostreambuf_iterator<char, std::__2::char_traits<char>>>::__do_put_floating_point[abi:v15006]<long double>(std::__2::ostreambuf_iterator<char, std::__2::char_traits<char>>, std::__2::ios_base&, char, long double, char const*) const",
  "std::__2::ostreambuf_iterator<char, std::__2::char_traits<char>> std::__2::num_put<char, std::__2::ostreambuf_iterator<char, std::__2::char_traits<char>>>::__do_put_integral[abi:v15006]<long long>(std::__2::ostreambuf_iterator<char, std::__2::char_traits<char>>, std::__2::ios_base&, char, long long, char const*) const",
  "std::__2::ostreambuf_iterator<char, std::__2::char_traits<char>> std::__2::num_put<char, std::__2::ostreambuf_iterator<char, std::__2::char_traits<char>>>::__do_put_integral[abi:v15006]<long>(std::__2::ostreambuf_iterator<char, std::__2::char_traits<char>>, std::__2::ios_base&, char, long, char const*) const",
  "std::__2::ostreambuf_iterator<char, std::__2::char_traits<char>> std::__2::num_put<char, std::__2::ostreambuf_iterator<char, std::__2::char_traits<char>>>::__do_put_integral[abi:v15006]<unsigned long long>(std::__2::ostreambuf_iterator<char, std::__2::char_traits<char>>, std::__2::ios_base&, char, unsigned long long, char const*) const",
  "std::__2::ostreambuf_iterator<char, std::__2::char_traits<char>> std::__2::num_put<char, std::__2::ostreambuf_iterator<char, std::__2::char_traits<char>>>::__do_put_integral[abi:v15006]<unsigned long>(std::__2::ostreambuf_iterator<char, std::__2::char_traits<char>>, std::__2::ios_base&, char, unsigned long, char const*) const",
  "std::__2::ostreambuf_iterator<char, std::__2::char_traits<char>>::operator=[abi:v15006](char)",
  "std::__2::ostreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>> std::__2::__pad_and_output<wchar_t, std::__2::char_traits<wchar_t>>(std::__2::ostreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>, wchar_t const*, wchar_t const*, wchar_t const*, std::__2::ios_base&, wchar_t)",
  "std::__2::ostreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>> std::__2::copy[abi:v15006]<wchar_t*, std::__2::ostreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>>(wchar_t*, wchar_t*, std::__2::ostreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>)",
  "std::__2::ostreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>> std::__2::num_put<wchar_t, std::__2::ostreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>>::__do_put_floating_point[abi:v15006]<double>(std::__2::ostreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>, std::__2::ios_base&, wchar_t, double, char const*) const",
  "std::__2::ostreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>> std::__2::num_put<wchar_t, std::__2::ostreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>>::__do_put_floating_point[abi:v15006]<long double>(std::__2::ostreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>, std::__2::ios_base&, wchar_t, long double, char const*) const",
  "std::__2::ostreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>> std::__2::num_put<wchar_t, std::__2::ostreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>>::__do_put_integral[abi:v15006]<long long>(std::__2::ostreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>, std::__2::ios_base&, wchar_t, long long, char const*) const",
  "std::__2::ostreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>> std::__2::num_put<wchar_t, std::__2::ostreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>>::__do_put_integral[abi:v15006]<long>(std::__2::ostreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>, std::__2::ios_base&, wchar_t, long, char const*) const",
  "std::__2::ostreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>> std::__2::num_put<wchar_t, std::__2::ostreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>>::__do_put_integral[abi:v15006]<unsigned long long>(std::__2::ostreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>, std::__2::ios_base&, wchar_t, unsigned long long, char const*) const",
  "std::__2::ostreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>> std::__2::num_put<wchar_t, std::__2::ostreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>>::__do_put_integral[abi:v15006]<unsigned long>(std::__2::ostreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>, std::__2::ios_base&, wchar_t, unsigned long, char const*) const",
  "std::__2::ostreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>::operator=[abi:v15006](wchar_t)",
  "std::__2::ostrstream::~ostrstream()",
  "std::__2::ostrstream::~ostrstream().2",
  "std::__2::pair<char const*, char const*> std::__2::__find_end_impl[abi:v15006]<std::__2::_ClassicAlgPolicy, char const*, char const*, char const*, char const*, bool (char, char) noexcept, std::__2::__identity, std::__2::__identity>(char const*, char const*, char const*, char const*, bool (&)(char, char) noexcept, std::__2::__identity&, std::__2::__identity&, std::__2::forward_iterator_tag, std::__2::forward_iterator_tag)",
  "std::__2::pair<char*, std::__2::ostreambuf_iterator<char, std::__2::char_traits<char>>> std::__2::__copy[abi:v15006]<char*, char*, std::__2::ostreambuf_iterator<char, std::__2::char_traits<char>>, 0>(char*, char*, std::__2::ostreambuf_iterator<char, std::__2::char_traits<char>>)",
  "std::__2::pair<char*, std::__2::ostreambuf_iterator<char, std::__2::char_traits<char>>> std::__2::__copy_impl[abi:v15006]<char*, char*, std::__2::ostreambuf_iterator<char, std::__2::char_traits<char>>>(char*, char*, std::__2::ostreambuf_iterator<char, std::__2::char_traits<char>>)",
  "std::__2::pair<std::__2::basic_string_view<char, std::__2::char_traits<char>>, std::__2::__fs::filesystem::PathPartKind>& std::__2::vector<std::__2::pair<std::__2::basic_string_view<char, std::__2::char_traits<char>>, std::__2::__fs::filesystem::PathPartKind>, std::__2::allocator<std::__2::pair<std::__2::basic_string_view<char, std::__2::char_traits<char>>, std::__2::__fs::filesystem::PathPartKind>>>::emplace_back<std::__2::basic_string_view<char, std::__2::char_traits<char>>&, std::__2::__fs::filesystem::PathPartKind&>(std::__2::basic_string_view<char, std::__2::char_traits<char>>&, std::__2::__fs::filesystem::PathPartKind&)",
  "std::__2::pair<std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>, std::__2::ostreambuf_iterator<char, std::__2::char_traits<char>>> std::__2::__copy[abi:v15006]<std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>, std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>, std::__2::ostreambuf_iterator<char, std::__2::char_traits<char>>, 0>(std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>, std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>, std::__2::ostreambuf_iterator<char, std::__2::char_traits<char>>)",
  "std::__2::pair<std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>, std::__2::ostreambuf_iterator<char, std::__2::char_traits<char>>> std::__2::__copy_impl[abi:v15006]<std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>, std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>, std::__2::ostreambuf_iterator<char, std::__2::char_traits<char>>>(std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>, std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>, std::__2::ostreambuf_iterator<char, std::__2::char_traits<char>>)",
  "std::__2::pair<wchar_t const*, wchar_t const*> std::__2::__find_end_impl[abi:v15006]<std::__2::_ClassicAlgPolicy, wchar_t const*, wchar_t const*, wchar_t const*, wchar_t const*, bool (wchar_t, wchar_t) noexcept, std::__2::__identity, std::__2::__identity>(wchar_t const*, wchar_t const*, wchar_t const*, wchar_t const*, bool (&)(wchar_t, wchar_t) noexcept, std::__2::__identity&, std::__2::__identity&, std::__2::forward_iterator_tag, std::__2::forward_iterator_tag)",
  "std::__2::pair<wchar_t*, std::__2::ostreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>> std::__2::__copy[abi:v15006]<wchar_t*, wchar_t*, std::__2::ostreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>, 0>(wchar_t*, wchar_t*, std::__2::ostreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>)",
  "std::__2::pair<wchar_t*, std::__2::ostreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>> std::__2::__copy_impl[abi:v15006]<wchar_t*, wchar_t*, std::__2::ostreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>>(wchar_t*, wchar_t*, std::__2::ostreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>)",
  "std::__2::promise<void>::promise()",
  "std::__2::promise<void>::set_exception(std::exception_ptr)",
  "std::__2::promise<void>::set_exception_at_thread_exit(std::exception_ptr)",
  "std::__2::promise<void>::set_value()",
  "std::__2::promise<void>::set_value_at_thread_exit()",
  "std::__2::promise<void>::~promise()",
  "std::__2::random_device::random_device(std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>> const&)",
  "std::__2::regex_error::regex_error(std::__2::regex_constants::error_type)",
  "std::__2::shared_future<void>::operator=(std::__2::shared_future<void> const&)",
  "std::__2::shared_future<void>::~shared_future()",
  "std::__2::shared_ptr<std::__2::__fs::filesystem::__dir_stream> std::__2::allocate_shared[abi:v15006]<std::__2::__fs::filesystem::__dir_stream, std::__2::allocator<std::__2::__fs::filesystem::__dir_stream>, std::__2::__fs::filesystem::path const&, std::__2::__fs::filesystem::directory_options&, std::__2::error_code&, void>(std::__2::allocator<std::__2::__fs::filesystem::__dir_stream> const&, std::__2::__fs::filesystem::path const&, std::__2::__fs::filesystem::directory_options&, std::__2::error_code&)",
  "std::__2::shared_ptr<std::__2::__fs::filesystem::__dir_stream> std::__2::make_shared[abi:v15006]<std::__2::__fs::filesystem::__dir_stream, std::__2::__fs::filesystem::path const&, std::__2::__fs::filesystem::directory_options&, std::__2::error_code&, void>(std::__2::__fs::filesystem::path const&, std::__2::__fs::filesystem::directory_options&, std::__2::error_code&)",
  "std::__2::shared_ptr<std::__2::__fs::filesystem::__dir_stream>::operator=[abi:v15006](std::__2::shared_ptr<std::__2::__fs::filesystem::__dir_stream>&&)",
  "std::__2::shared_ptr<std::__2::__fs::filesystem::__dir_stream>::reset[abi:v15006]()",
  "std::__2::shared_ptr<std::__2::__fs::filesystem::__dir_stream>::~shared_ptr[abi:v15006]()",
  "std::__2::shared_ptr<std::__2::__fs::filesystem::filesystem_error::_Storage>::~shared_ptr[abi:v15006]()",
  "std::__2::shared_ptr<std::__2::__fs::filesystem::recursive_directory_iterator::__shared_imp> std::__2::allocate_shared[abi:v15006]<std::__2::__fs::filesystem::recursive_directory_iterator::__shared_imp, std::__2::allocator<std::__2::__fs::filesystem::recursive_directory_iterator::__shared_imp>, void>(std::__2::allocator<std::__2::__fs::filesystem::recursive_directory_iterator::__shared_imp> const&)",
  "std::__2::shared_ptr<std::__2::__fs::filesystem::recursive_directory_iterator::__shared_imp> std::__2::make_shared[abi:v15006]<std::__2::__fs::filesystem::recursive_directory_iterator::__shared_imp, void>()",
  "std::__2::shared_ptr<std::__2::__fs::filesystem::recursive_directory_iterator::__shared_imp>::operator=[abi:v15006](std::__2::shared_ptr<std::__2::__fs::filesystem::recursive_directory_iterator::__shared_imp>&&)",
  "std::__2::shared_ptr<std::__2::__fs::filesystem::recursive_directory_iterator::__shared_imp>::reset[abi:v15006]()",
  "std::__2::shared_ptr<std::__2::__fs::filesystem::recursive_directory_iterator::__shared_imp>::~shared_ptr[abi:v15006]()",
  "std::__2::stack<std::__2::__fs::filesystem::__dir_stream, std::__2::deque<std::__2::__fs::filesystem::__dir_stream, std::__2::allocator<std::__2::__fs::filesystem::__dir_stream>>>::push[abi:v15006](std::__2::__fs::filesystem::__dir_stream&&)",
  "std::__2::stod(std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>> const&, unsigned long*)",
  "std::__2::stod(std::__2::basic_string<wchar_t, std::__2::char_traits<wchar_t>, std::__2::allocator<wchar_t>> const&, unsigned long*)",
  "std::__2::stof(std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>> const&, unsigned long*)",
  "std::__2::stof(std::__2::basic_string<wchar_t, std::__2::char_traits<wchar_t>, std::__2::allocator<wchar_t>> const&, unsigned long*)",
  "std::__2::stoi(std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>> const&, unsigned long*, int)",
  "std::__2::stoi(std::__2::basic_string<wchar_t, std::__2::char_traits<wchar_t>, std::__2::allocator<wchar_t>> const&, unsigned long*, int)",
  "std::__2::stol(std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>> const&, unsigned long*, int)",
  "std::__2::stol(std::__2::basic_string<wchar_t, std::__2::char_traits<wchar_t>, std::__2::allocator<wchar_t>> const&, unsigned long*, int)",
  "std::__2::stold(std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>> const&, unsigned long*)",
  "std::__2::stold(std::__2::basic_string<wchar_t, std::__2::char_traits<wchar_t>, std::__2::allocator<wchar_t>> const&, unsigned long*)",
  "std::__2::stoll(std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>> const&, unsigned long*, int)",
  "std::__2::stoll(std::__2::basic_string<wchar_t, std::__2::char_traits<wchar_t>, std::__2::allocator<wchar_t>> const&, unsigned long*, int)",
  "std::__2::stoul(std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>> const&, unsigned long*, int)",
  "std::__2::stoul(std::__2::basic_string<wchar_t, std::__2::char_traits<wchar_t>, std::__2::allocator<wchar_t>> const&, unsigned long*, int)",
  "std::__2::stoull(std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>> const&, unsigned long*, int)",
  "std::__2::stoull(std::__2::basic_string<wchar_t, std::__2::char_traits<wchar_t>, std::__2::allocator<wchar_t>> const&, unsigned long*, int)",
  "std::__2::strstream::~strstream()",
  "std::__2::strstream::~strstream().2",
  "std::__2::strstreambuf::overflow(int)",
  "std::__2::strstreambuf::strstreambuf(char const*, long)",
  "std::__2::strstreambuf::strstreambuf(char*, long, char*)",
  "std::__2::strstreambuf::strstreambuf(long)",
  "std::__2::strstreambuf::strstreambuf(signed char const*, long)",
  "std::__2::strstreambuf::strstreambuf(signed char*, long, signed char*)",
  "std::__2::strstreambuf::strstreambuf(unsigned char const*, long)",
  "std::__2::strstreambuf::strstreambuf(unsigned char*, long, unsigned char*)",
  "std::__2::strstreambuf::strstreambuf(void* (*)(unsigned long), void (*)(void*))",
  "std::__2::strstreambuf::swap(std::__2::strstreambuf&)",
  "std::__2::strstreambuf::~strstreambuf()",
  "std::__2::system_error::__init(std::__2::error_code const&, std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>>)",
  "std::__2::system_error::system_error(int, std::__2::error_category const&)",
  "std::__2::system_error::system_error(int, std::__2::error_category const&, char const*)",
  "std::__2::system_error::system_error(int, std::__2::error_category const&, std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>> const&)",
  "std::__2::system_error::system_error(std::__2::error_code)",
  "std::__2::system_error::system_error(std::__2::error_code, char const*)",
  "std::__2::system_error::system_error(std::__2::error_code, std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>> const&)",
  "std::__2::thread::~thread()",
  "std::__2::time_get<char, std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>>::__get_12_hour(int&, std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>&, std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>, unsigned int&, std::__2::ctype<char> const&) const",
  "std::__2::time_get<char, std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>>::__get_am_pm(int&, std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>&, std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>, unsigned int&, std::__2::ctype<char> const&) const",
  "std::__2::time_get<char, std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>>::__get_day(int&, std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>&, std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>, unsigned int&, std::__2::ctype<char> const&) const",
  "std::__2::time_get<char, std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>>::__get_day_year_num(int&, std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>&, std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>, unsigned int&, std::__2::ctype<char> const&) const",
  "std::__2::time_get<char, std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>>::__get_hour(int&, std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>&, std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>, unsigned int&, std::__2::ctype<char> const&) const",
  "std::__2::time_get<char, std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>>::__get_minute(int&, std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>&, std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>, unsigned int&, std::__2::ctype<char> const&) const",
  "std::__2::time_get<char, std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>>::__get_month(int&, std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>&, std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>, unsigned int&, std::__2::ctype<char> const&) const",
  "std::__2::time_get<char, std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>>::__get_monthname(int&, std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>&, std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>, unsigned int&, std::__2::ctype<char> const&) const",
  "std::__2::time_get<char, std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>>::__get_percent(std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>&, std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>, unsigned int&, std::__2::ctype<char> const&) const",
  "std::__2::time_get<char, std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>>::__get_second(int&, std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>&, std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>, unsigned int&, std::__2::ctype<char> const&) const",
  "std::__2::time_get<char, std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>>::__get_weekday(int&, std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>&, std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>, unsigned int&, std::__2::ctype<char> const&) const",
  "std::__2::time_get<char, std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>>::__get_weekdayname(int&, std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>&, std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>, unsigned int&, std::__2::ctype<char> const&) const",
  "std::__2::time_get<char, std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>>::__get_white_space(std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>&, std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>, unsigned int&, std::__2::ctype<char> const&) const",
  "std::__2::time_get<char, std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>>::__get_year(int&, std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>&, std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>, unsigned int&, std::__2::ctype<char> const&) const",
  "std::__2::time_get<char, std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>>::__get_year4(int&, std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>&, std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>, unsigned int&, std::__2::ctype<char> const&) const",
  "std::__2::time_get<char, std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>>::do_get_date(std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>, std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>, std::__2::ios_base&, unsigned int&, tm*) const",
  "std::__2::time_get<char, std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>>::do_get_monthname(std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>, std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>, std::__2::ios_base&, unsigned int&, tm*) const",
  "std::__2::time_get<char, std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>>::do_get_time(std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>, std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>, std::__2::ios_base&, unsigned int&, tm*) const",
  "std::__2::time_get<char, std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>>::do_get_weekday(std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>, std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>, std::__2::ios_base&, unsigned int&, tm*) const",
  "std::__2::time_get<char, std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>>::do_get_year(std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>, std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>, std::__2::ios_base&, unsigned int&, tm*) const",
  "std::__2::time_get<char, std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>>::get(std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>, std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>, std::__2::ios_base&, unsigned int&, tm*, char const*, char const*) const",
  "std::__2::time_get<wchar_t, std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>>::__get_12_hour(int&, std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>&, std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>, unsigned int&, std::__2::ctype<wchar_t> const&) const",
  "std::__2::time_get<wchar_t, std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>>::__get_am_pm(int&, std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>&, std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>, unsigned int&, std::__2::ctype<wchar_t> const&) const",
  "std::__2::time_get<wchar_t, std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>>::__get_day(int&, std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>&, std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>, unsigned int&, std::__2::ctype<wchar_t> const&) const",
  "std::__2::time_get<wchar_t, std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>>::__get_day_year_num(int&, std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>&, std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>, unsigned int&, std::__2::ctype<wchar_t> const&) const",
  "std::__2::time_get<wchar_t, std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>>::__get_hour(int&, std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>&, std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>, unsigned int&, std::__2::ctype<wchar_t> const&) const",
  "std::__2::time_get<wchar_t, std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>>::__get_minute(int&, std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>&, std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>, unsigned int&, std::__2::ctype<wchar_t> const&) const",
  "std::__2::time_get<wchar_t, std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>>::__get_month(int&, std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>&, std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>, unsigned int&, std::__2::ctype<wchar_t> const&) const",
  "std::__2::time_get<wchar_t, std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>>::__get_monthname(int&, std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>&, std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>, unsigned int&, std::__2::ctype<wchar_t> const&) const",
  "std::__2::time_get<wchar_t, std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>>::__get_percent(std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>&, std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>, unsigned int&, std::__2::ctype<wchar_t> const&) const",
  "std::__2::time_get<wchar_t, std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>>::__get_second(int&, std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>&, std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>, unsigned int&, std::__2::ctype<wchar_t> const&) const",
  "std::__2::time_get<wchar_t, std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>>::__get_weekday(int&, std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>&, std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>, unsigned int&, std::__2::ctype<wchar_t> const&) const",
  "std::__2::time_get<wchar_t, std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>>::__get_weekdayname(int&, std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>&, std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>, unsigned int&, std::__2::ctype<wchar_t> const&) const",
  "std::__2::time_get<wchar_t, std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>>::__get_white_space(std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>&, std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>, unsigned int&, std::__2::ctype<wchar_t> const&) const",
  "std::__2::time_get<wchar_t, std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>>::__get_year(int&, std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>&, std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>, unsigned int&, std::__2::ctype<wchar_t> const&) const",
  "std::__2::time_get<wchar_t, std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>>::__get_year4(int&, std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>&, std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>, unsigned int&, std::__2::ctype<wchar_t> const&) const",
  "std::__2::time_get<wchar_t, std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>>::do_get(std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>, std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>, std::__2::ios_base&, unsigned int&, tm*, char, char) const",
  "std::__2::time_get<wchar_t, std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>>::do_get_date(std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>, std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>, std::__2::ios_base&, unsigned int&, tm*) const",
  "std::__2::time_get<wchar_t, std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>>::do_get_monthname(std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>, std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>, std::__2::ios_base&, unsigned int&, tm*) const",
  "std::__2::time_get<wchar_t, std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>>::do_get_time(std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>, std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>, std::__2::ios_base&, unsigned int&, tm*) const",
  "std::__2::time_get<wchar_t, std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>>::do_get_weekday(std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>, std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>, std::__2::ios_base&, unsigned int&, tm*) const",
  "std::__2::time_get<wchar_t, std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>>::do_get_year(std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>, std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>, std::__2::ios_base&, unsigned int&, tm*) const",
  "std::__2::time_get<wchar_t, std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>>::get(std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>, std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>, std::__2::ios_base&, unsigned int&, tm*, wchar_t const*, wchar_t const*) const",
  "std::__2::time_get_byname<char, std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>>::time_get_byname[abi:v15006](std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>> const&, unsigned long)",
  "std::__2::time_get_byname<wchar_t, std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>>::time_get_byname[abi:v15006](std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>> const&, unsigned long)",
  "std::__2::time_put<char, std::__2::ostreambuf_iterator<char, std::__2::char_traits<char>>>::do_put(std::__2::ostreambuf_iterator<char, std::__2::char_traits<char>>, std::__2::ios_base&, char, tm const*, char, char) const",
  "std::__2::time_put<char, std::__2::ostreambuf_iterator<char, std::__2::char_traits<char>>>::put(std::__2::ostreambuf_iterator<char, std::__2::char_traits<char>>, std::__2::ios_base&, char, tm const*, char const*, char const*) const",
  "std::__2::time_put<char, std::__2::ostreambuf_iterator<char, std::__2::char_traits<char>>>::time_put[abi:v15006](std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>> const&, unsigned long)",
  "std::__2::time_put<wchar_t, std::__2::ostreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>>::do_put(std::__2::ostreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>, std::__2::ios_base&, wchar_t, tm const*, char, char) const",
  "std::__2::time_put<wchar_t, std::__2::ostreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>>::put(std::__2::ostreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>, std::__2::ios_base&, wchar_t, tm const*, wchar_t const*, wchar_t const*) const",
  "std::__2::time_put<wchar_t, std::__2::ostreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>>::time_put[abi:v15006](std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>> const&, unsigned long)",
  "std::__2::time_put_byname<char, std::__2::ostreambuf_iterator<char, std::__2::char_traits<char>>>::time_put_byname[abi:v15006](std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>> const&, unsigned long)",
  "std::__2::time_put_byname<wchar_t, std::__2::ostreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>>::time_put_byname[abi:v15006](std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>> const&, unsigned long)",
  "std::__2::to_string(double)",
  "std::__2::to_string(float)",
  "std::__2::to_string(int)",
  "std::__2::to_string(long double)",
  "std::__2::to_string(long long)",
  "std::__2::to_string(long)",
  "std::__2::to_string(unsigned int)",
  "std::__2::to_string(unsigned long long)",
  "std::__2::to_string(unsigned long)",
  "std::__2::to_wstring(double)",
  "std::__2::to_wstring(float)",
  "std::__2::to_wstring(int)",
  "std::__2::to_wstring(long double)",
  "std::__2::to_wstring(long long)",
  "std::__2::to_wstring(long)",
  "std::__2::to_wstring(unsigned int)",
  "std::__2::to_wstring(unsigned long long)",
  "std::__2::to_wstring(unsigned long)",
  "std::__2::unique_ptr<_IO_FILE, int (*)(_IO_FILE*)>::reset[abi:v15006](_IO_FILE*)",
  "std::__2::unique_ptr<_IO_FILE, int (*)(_IO_FILE*)>::~unique_ptr[abi:v15006]()",
  "std::__2::unique_ptr<char, void (*)(void*)>::operator=[abi:v15006](std::__2::unique_ptr<char, void (*)(void*)>&&)",
  "std::__2::unique_ptr<char, void (*)(void*)>::reset[abi:v15006](char*)",
  "std::__2::unique_ptr<char, void (*)(void*)>::~unique_ptr[abi:v15006]()",
  "std::__2::unique_ptr<int, void (*)(void*)>::reset[abi:v15006](int*)",
  "std::__2::unique_ptr<int, void (*)(void*)>::~unique_ptr[abi:v15006]()",
  "std::__2::unique_ptr<long, void (*)(void*)>::reset[abi:v15006](long*)",
  "std::__2::unique_ptr<long, void (*)(void*)>::~unique_ptr[abi:v15006]()",
  "std::__2::unique_ptr<std::__2::__shared_count, std::__2::__release_shared_count>::reset[abi:v15006](std::__2::__shared_count*)",
  "std::__2::unique_ptr<std::__2::__shared_count, std::__2::__release_shared_count>::~unique_ptr[abi:v15006]()",
  "std::__2::unique_ptr<std::__2::locale::facet, std::__2::(anonymous namespace)::release>::reset[abi:v15006](std::__2::locale::facet*)",
  "std::__2::unique_ptr<std::__2::locale::facet, std::__2::(anonymous namespace)::release>::~unique_ptr[abi:v15006]()",
  "std::__2::unique_ptr<unsigned char, void (*)(void*)>::reset[abi:v15006](unsigned char*)",
  "std::__2::unique_ptr<unsigned char, void (*)(void*)>::~unique_ptr[abi:v15006]()",
  "std::__2::unique_ptr<unsigned int, void (*)(void*)>::operator=[abi:v15006](std::__2::unique_ptr<unsigned int, void (*)(void*)>&&)",
  "std::__2::unique_ptr<unsigned int, void (*)(void*)>::reset[abi:v15006](unsigned int*)",
  "std::__2::unique_ptr<unsigned int, void (*)(void*)>::~unique_ptr[abi:v15006]()",
  "std::__2::unique_ptr<void (*)(std::__2::ios_base::event, std::__2::ios_base&, int), void (*)(void*)>::reset[abi:v15006](void (**)(std::__2::ios_base::event, std::__2::ios_base&, int))",
  "std::__2::unique_ptr<void (*)(std::__2::ios_base::event, std::__2::ios_base&, int), void (*)(void*)>::~unique_ptr[abi:v15006]()",
  "std::__2::unique_ptr<void*, void (*)(void*)>::reset[abi:v15006](void**)",
  "std::__2::unique_ptr<void*, void (*)(void*)>::~unique_ptr[abi:v15006]()",
  "std::__2::unique_ptr<wchar_t, void (*)(void*)>::operator=[abi:v15006](std::__2::unique_ptr<wchar_t, void (*)(void*)>&&)",
  "std::__2::unique_ptr<wchar_t, void (*)(void*)>::reset[abi:v15006](wchar_t*)",
  "std::__2::unique_ptr<wchar_t, void (*)(void*)>::~unique_ptr[abi:v15006]()",
  "std::__2::valarray<unsigned long>::resize(unsigned long, unsigned long)",
  "std::__2::valarray<unsigned long>::valarray[abi:v15006](unsigned long)",
  "std::__2::vector<std::__2::__assoc_sub_state*, std::__2::__hidden_allocator<std::__2::__assoc_sub_state*>>::push_back[abi:v15006](std::__2::__assoc_sub_state* const&)",
  "std::__2::vector<std::__2::basic_string_view<char, std::__2::char_traits<char>>, std::__2::allocator<std::__2::basic_string_view<char, std::__2::char_traits<char>>>>::push_back[abi:v15006](std::__2::basic_string_view<char, std::__2::char_traits<char>>&&)",
  "std::__2::vector<std::__2::locale::facet*, std::__2::__sso_allocator<std::__2::locale::facet*, 30ul>>::__append(unsigned long)",
  "std::__2::vector<std::__2::locale::facet*, std::__2::__sso_allocator<std::__2::locale::facet*, 30ul>>::__vallocate[abi:v15006](unsigned long)",
  "std::__2::vector<std::__2::locale::facet*, std::__2::__sso_allocator<std::__2::locale::facet*, 30ul>>::operator=[abi:v15006](std::__2::vector<std::__2::locale::facet*, std::__2::__sso_allocator<std::__2::locale::facet*, 30ul>> const&)",
  "std::__2::vector<std::__2::locale::facet*, std::__2::__sso_allocator<std::__2::locale::facet*, 30ul>>::resize(unsigned long)",
  "std::__2::vector<std::__2::locale::facet*, std::__2::__sso_allocator<std::__2::locale::facet*, 30ul>>::vector(unsigned long)",
  "std::__2::vector<std::__2::pair<std::__2::basic_string_view<char, std::__2::char_traits<char>>, std::__2::__fs::filesystem::PathPartKind>, std::__2::allocator<std::__2::pair<std::__2::basic_string_view<char, std::__2::char_traits<char>>, std::__2::__fs::filesystem::PathPartKind>>>::reserve(unsigned long)",
  "std::__2::vector<std::__2::pair<std::__2::condition_variable*, std::__2::mutex*>, std::__2::__hidden_allocator<std::__2::pair<std::__2::condition_variable*, std::__2::mutex*>>>::push_back[abi:v15006](std::__2::pair<std::__2::condition_variable*, std::__2::mutex*>&&)",
  "std::__terminate(void (*)())",
  "std::__unexpected(void (*)())",
  "std::exception_ptr::exception_ptr(std::exception_ptr const&)",
  "std::exception_ptr::operator=(std::exception_ptr const&)",
  "std::exception_ptr::~exception_ptr()",
  "std::experimental::fundamentals_v1::pmr::__new_delete_memory_resource_imp::do_allocate(unsigned long, unsigned long)",
  "std::logic_error::logic_error(char const*)",
  "std::logic_error::logic_error(std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>> const&)",
  "std::nested_exception::rethrow_nested() const",
  "std::nested_exception::~nested_exception()",
  "std::rethrow_exception(std::exception_ptr)",
  "std::runtime_error::runtime_error(char const*)",
  "std::runtime_error::runtime_error(std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>> const&)",
  "std::terminate()",
  "std::unexpected()",
  "stdio_close",
  "stdio_read",
  "stdio_seek",
  "stdio_size",
  "stdio_write",
  "str_byte(lua_State*)",
  "str_char(lua_State*)",
  "str_dump(lua_State*)",
  "str_find(lua_State*)",
  "str_find_aux(lua_State*, int)",
  "str_format(lua_State*)",
  "str_gsub(lua_State*)",
  "str_len(lua_State*)",
  "str_lower(lua_State*)",
  "str_match(lua_State*)",
  "str_rep(lua_State*)",
  "str_reverse(lua_State*)",
  "str_sub(lua_State*)",
  "str_upper(lua_State*)",
  "streamDbg(int)",
  "strfmon",
  "strfmon_l",
  "strtod",
  "strtod_l",
  "strtof",
  "strtof_l",
  "strtold",
  "strtold_l",
  "strtox",
  "subexpr(LexState*, expdesc*, unsigned int)",
  "sweeplist(lua_State*, GCObject**, unsigned long)",
  "swprintf",
  "swscanf",
  "syslog",
  "t1_allocate_blend",
  "t1_builder_add_contour",
  "t1_builder_add_point",
  "t1_builder_check_points",
  "t1_builder_start_point",
  "t1_cmap_std_char_index",
  "t1_cmap_std_char_next",
  "t1_cmap_unicode_char_index",
  "t1_cmap_unicode_char_next",
  "t1_cmap_unicode_done",
  "t1_decoder_init",
  "t1_decoder_parse_charstrings",
  "t1_hints_stem",
  "t1_parse_font_matrix",
  "t2_hints_stems",
  "t42_parse_encoding",
  "t42_parse_font_matrix",
  "t42_parse_sfnts",
  "tconcat(lua_State*)",
  "tdelete",
  "tdestroy",
  "term_destination",
  "tfind",
  "tglAlphaFunc(int, float)",
  "tglArrayElement(int)",
  "tglBegin(int)",
  "tglBindTexture(int, unsigned int)",
  "tglBlendFunc(int, int)",
  "tglBlit(TinyGL::BlitImage*, TinyGL::BlitTransform const&)",
  "tglBlit(TinyGL::BlitImage*, int, int)",
  "tglBlitFast(TinyGL::BlitImage*, int, int)",
  "tglBlitNoBlend(TinyGL::BlitImage*, TinyGL::BlitTransform const&)",
  "tglBlitZBuffer(TinyGL::BlitImage*, int, int)",
  "tglCallList(unsigned int)",
  "tglClear(unsigned int)",
  "tglClearColor(float, float, float, float)",
  "tglClearDepth(double)",
  "tglClearStencil(int)",
  "tglColor3f(float, float, float)",
  "tglColor3fv(float const*)",
  "tglColor3ub(unsigned char, unsigned char, unsigned char)",
  "tglColor4f(float, float, float, float)",
  "tglColor4fv(float const*)",
  "tglColor4ub(unsigned char, unsigned char, unsigned char, unsigned char)",
  "tglColorMask(unsigned char, unsigned char, unsigned char, unsigned char)",
  "tglColorMaterial(int, int)",
  "tglColorPointer(int, int, int, void const*)",
  "tglCullFace(int)",
  "tglDepthFunc(int)",
  "tglDepthMask(unsigned char)",
  "tglDisable(int)",
  "tglDisableClientState(int)",
  "tglDrawArrays(int, int, int)",
  "tglDrawElements(int, int, int, void const*)",
  "tglEdgeFlag(unsigned char)",
  "tglEnable(int)",
  "tglEnableClientState(int)",
  "tglEnd()",
  "tglFogf(int, float)",
  "tglFogfv(int, float const*)",
  "tglFogi(int, int)",
  "tglFogiv(int, int const*)",
  "tglFrontFace(int)",
  "tglFrustum(double, double, double, double, double, double)",
  "tglGenBlitImage()",
  "tglGetFloatv(int, float*)",
  "tglGetIntegerv(int, int*)",
  "tglHint(int, int)",
  "tglInitNames()",
  "tglLightModelfv(int, float const*)",
  "tglLightModeli(int, int)",
  "tglLightf(int, int, float)",
  "tglLightfv(int, int, float const*)",
  "tglLoadIdentity()",
  "tglLoadMatrixf(float const*)",
  "tglLoadName(unsigned int)",
  "tglMaterialf(int, int, float)",
  "tglMaterialfv(int, int, float const*)",
  "tglMatrixMode(int)",
  "tglMultMatrixf(float const*)",
  "tglNormal3f(float, float, float)",
  "tglNormal3fv(float const*)",
  "tglNormalPointer(int, int, void const*)",
  "tglOrtho(double, double, double, double, double, double)",
  "tglPixelStorei(int, int)",
  "tglPolygonMode(int, int)",
  "tglPolygonOffset(float, float)",
  "tglPopMatrix()",
  "tglPopName()",
  "tglPushMatrix()",
  "tglPushName(unsigned int)",
  "tglRotatef(float, float, float, float)",
  "tglScalef(float, float, float)",
  "tglShadeModel(int)",
  "tglStencilFunc(int, int, unsigned int)",
  "tglStencilMask(unsigned int)",
  "tglStencilOp(int, int, int)",
  "tglTexCoord1f(float)",
  "tglTexCoord1fv(float const*)",
  "tglTexCoord2f(float, float)",
  "tglTexCoord2fv(float const*)",
  "tglTexCoord3f(float, float, float)",
  "tglTexCoord3fv(float const*)",
  "tglTexCoord4f(float, float, float, float)",
  "tglTexCoord4fv(float const*)",
  "tglTexCoordPointer(int, int, int, void const*)",
  "tglTexEnvi(int, int, int)",
  "tglTexImage2D(int, int, int, int, int, int, int, int, void const*)",
  "tglTexParameteri(int, int, int)",
  "tglTranslatef(float, float, float)",
  "tglUploadBlitImage(TinyGL::BlitImage*, Graphics::Surface const&, unsigned int, bool)",
  "tglVertex2f(float, float)",
  "tglVertex3f(float, float, float)",
  "tglVertex3fv(float const*)",
  "tglVertex4f(float, float, float, float)",
  "tglVertexPointer(int, int, int, void const*)",
  "tglViewport(int, int, int, int)",
  "timer_handler(unsigned int, void*)",
  "tinsert(lua_State*)",
  "tre_parse",
  "tremove(lua_State*)",
  "trinkle",
  "tsearch",
  "tt_check_single_notdef",
  "tt_check_trickyness",
  "tt_cmap14_char_var_index",
  "tt_cmap14_char_variants",
  "tt_cmap14_done",
  "tt_cmap14_get_def_chars",
  "tt_cmap14_variant_chars",
  "tt_cmap14_variants",
  "tt_face_build_cmaps",
  "tt_face_done",
  "tt_face_find_bdf_prop",
  "tt_face_free_name",
  "tt_face_free_ps_names",
  "tt_face_free_sbit",
  "tt_face_get_metrics",
  "tt_face_get_name",
  "tt_face_get_ps_name",
  "tt_face_goto_table",
  "tt_face_init",
  "tt_face_load_any",
  "tt_face_load_bhed",
  "tt_face_load_cmap",
  "tt_face_load_font_dir",
  "tt_face_load_fpgm",
  "tt_face_load_gasp",
  "tt_face_load_hdmx",
  "tt_face_load_head",
  "tt_face_load_hhea",
  "tt_face_load_hmtx",
  "tt_face_load_kern",
  "tt_face_load_loca",
  "tt_face_load_maxp",
  "tt_face_load_name",
  "tt_face_load_os2",
  "tt_face_load_pclt",
  "tt_face_load_post",
  "tt_face_load_prep",
  "tt_face_load_sbit",
  "tt_face_load_sbit_image",
  "tt_face_load_strike_metrics",
  "tt_face_vary_cvt",
  "tt_get_advances",
  "tt_get_cmap_info",
  "tt_get_interface",
  "tt_get_kerning",
  "tt_get_metrics",
  "tt_glyph_load",
  "tt_glyphzone_done",
  "tt_name_entry_ascii_from_other",
  "tt_name_entry_ascii_from_utf16",
  "tt_sbit_decoder_alloc_bitmap",
  "tt_sbit_decoder_load_bitmap",
  "tt_sbit_decoder_load_compound",
  "tt_sbit_decoder_load_image",
  "tt_size_done",
  "tt_size_done_bytecode",
  "tt_size_request",
  "tt_size_run_fpgm",
  "tt_size_run_prep",
  "tt_size_select",
  "tt_slot_init",
  "twalk",
  "uncompress",
  "uncompress2",
  "ungetc",
  "ungetwc",
  "unsigned int Common::BitStreamImpl<Common::SeekableReadStream, unsigned long long, 32, true, false>::getBits<10>()",
  "unsigned int Common::BitStreamImpl<Common::SeekableReadStream, unsigned long long, 32, true, false>::getBits<11>()",
  "unsigned int Common::BitStreamImpl<Common::SeekableReadStream, unsigned long long, 32, true, false>::getBits<2>()",
  "unsigned int Common::BitStreamImpl<Common::SeekableReadStream, unsigned long long, 32, true, false>::getBits<3>()",
  "unsigned int Common::BitStreamImpl<Common::SeekableReadStream, unsigned long long, 32, true, false>::getBits<4>()",
  "unsigned int Common::BitStreamImpl<Common::SeekableReadStream, unsigned long long, 32, true, false>::getBits<5>()",
  "unsigned int Common::BitStreamImpl<Common::SeekableReadStream, unsigned long long, 32, true, false>::getBits<7>()",
  "unsigned int Common::BitStreamImpl<Common::SeekableReadStream, unsigned long long, 32, true, false>::getBits<8>()",
  "unsigned int Common::BitStreamImpl<Common::SeekableReadStream, unsigned long long, 8, false, false>::getBits<10>()",
  "unsigned int Common::BitStreamImpl<Common::SeekableReadStream, unsigned long long, 8, false, false>::getBits<12>()",
  "unsigned int Common::BitStreamImpl<Common::SeekableReadStream, unsigned long long, 8, false, false>::getBits<15>()",
  "unsigned int Common::BitStreamImpl<Common::SeekableReadStream, unsigned long long, 8, false, false>::getBits<16>()",
  "unsigned int Common::BitStreamImpl<Common::SeekableReadStream, unsigned long long, 8, false, false>::getBits<2>()",
  "unsigned int Common::BitStreamImpl<Common::SeekableReadStream, unsigned long long, 8, false, false>::getBits<3>()",
  "unsigned int Common::BitStreamImpl<Common::SeekableReadStream, unsigned long long, 8, false, false>::getBits<6>()",
  "unsigned int Common::BitStreamImpl<Common::SeekableReadStream, unsigned long long, 8, false, false>::getBits<8>()",
  "unsigned int Common::BitStreamImpl<Common::SeekableReadStream, unsigned long long, 8, false, true>::getBits<16>()",
  "unsigned int Common::BitStreamImpl<Common::SeekableReadStream, unsigned long long, 8, false, true>::getBits<24>()",
  "unsigned int Common::BitStreamImpl<Common::SeekableReadStream, unsigned long long, 8, false, true>::getBits<2>()",
  "unsigned int Common::BitStreamImpl<Common::SeekableReadStream, unsigned long long, 8, false, true>::getBits<31>()",
  "unsigned int Common::BitStreamImpl<Common::SeekableReadStream, unsigned long long, 8, false, true>::getBits<3>()",
  "unsigned int Common::BitStreamImpl<Common::SeekableReadStream, unsigned long long, 8, false, true>::getBits<4>()",
  "unsigned int Common::BitStreamImpl<Common::SeekableReadStream, unsigned long long, 8, false, true>::getBits<5>()",
  "unsigned int Common::BitStreamImpl<Common::SeekableReadStream, unsigned long long, 8, false, true>::getBits<7>()",
  "unsigned int Common::BitStreamImpl<Common::SeekableReadStream, unsigned long long, 8, false, true>::getBits<8>()",
  "unsigned long long std::__2::(anonymous namespace)::as_integer<unsigned long long, std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>>>(std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>> const&, std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>> const&, unsigned long*, int)",
  "unsigned long long std::__2::(anonymous namespace)::as_integer<unsigned long long, std::__2::basic_string<wchar_t, std::__2::char_traits<wchar_t>, std::__2::allocator<wchar_t>>>(std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>> const&, std::__2::basic_string<wchar_t, std::__2::char_traits<wchar_t>, std::__2::allocator<wchar_t>> const&, unsigned long*, int)",
  "unsigned long long std::__2::(anonymous namespace)::as_integer_helper<unsigned long long, std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>>, unsigned long long (*)(char const*, char**, int)>(std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>> const&, std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>> const&, unsigned long*, int, unsigned long long (*)(char const*, char**, int))",
  "unsigned long long std::__2::(anonymous namespace)::as_integer_helper<unsigned long long, std::__2::basic_string<wchar_t, std::__2::char_traits<wchar_t>, std::__2::allocator<wchar_t>>, unsigned long long (*)(wchar_t const*, wchar_t**, int)>(std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>> const&, std::__2::basic_string<wchar_t, std::__2::char_traits<wchar_t>, std::__2::allocator<wchar_t>> const&, unsigned long*, int, unsigned long long (*)(wchar_t const*, wchar_t**, int))",
  "unsigned long std::__2::(anonymous namespace)::as_integer<unsigned long, std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>>>(std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>> const&, std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>> const&, unsigned long*, int)",
  "unsigned long std::__2::(anonymous namespace)::as_integer<unsigned long, std::__2::basic_string<wchar_t, std::__2::char_traits<wchar_t>, std::__2::allocator<wchar_t>>>(std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>> const&, std::__2::basic_string<wchar_t, std::__2::char_traits<wchar_t>, std::__2::allocator<wchar_t>> const&, unsigned long*, int)",
  "unsigned long std::__2::(anonymous namespace)::as_integer_helper<unsigned long, std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>>, unsigned long (*)(char const*, char**, int)>(std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>> const&, std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>> const&, unsigned long*, int, unsigned long (*)(char const*, char**, int))",
  "unsigned long std::__2::(anonymous namespace)::as_integer_helper<unsigned long, std::__2::basic_string<wchar_t, std::__2::char_traits<wchar_t>, std::__2::allocator<wchar_t>>, unsigned long (*)(wchar_t const*, wchar_t**, int)>(std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>> const&, std::__2::basic_string<wchar_t, std::__2::char_traits<wchar_t>, std::__2::allocator<wchar_t>> const&, unsigned long*, int, unsigned long (*)(wchar_t const*, wchar_t**, int))",
  "unsigned long std::__2::__str_find_first_of[abi:v15006]<char, unsigned long, std::__2::char_traits<char>, 4294967295ul>(char const*, unsigned long, char const*, unsigned long, unsigned long)",
  "unsigned long std::__2::__str_find_first_of[abi:v15006]<wchar_t, unsigned long, std::__2::char_traits<wchar_t>, 4294967295ul>(wchar_t const*, unsigned long, wchar_t const*, unsigned long, unsigned long)",
  "unsigned long std::__2::__str_rfind[abi:v15006]<char, unsigned long, std::__2::char_traits<char>, 4294967295ul>(char const*, unsigned long, char const*, unsigned long, unsigned long)",
  "unsigned long std::__2::__str_rfind[abi:v15006]<wchar_t, unsigned long, std::__2::char_traits<wchar_t>, 4294967295ul>(wchar_t const*, unsigned long, wchar_t const*, unsigned long, unsigned long)",
  "unzClose(void*)",
  "unzGetCurrentFileInfo(void*, unz_file_info*, char*, unsigned long, void*, unsigned long, char*, unsigned long)",
  "unzGoToFirstFile(void*)",
  "unzGoToNextFile(void*)",
  "unzLocateFile(void*, char const*, int)",
  "unzOpen(Common::SeekableReadStream*)",
  "unzOpenCurrentFile(void*, Common::CRC32 const&)",
  "unzlocal_GetCurrentFileInfoInternal(void*, unz_file_info*, unz_file_info_internal*, char*, unsigned long, void*, unsigned long, char*, unsigned long)",
  "updatewindow",
  "vasprintf",
  "vdprintf",
  "verr",
  "verrx",
  "vfiprintf",
  "vfprintf",
  "vfscanf",
  "vfwprintf",
  "vfwscanf",
  "virtual thunk to Audio::ADPCMStream::rewind()Audio::ADPCMStream::ADPCMStream(Common::SeekableReadStream*, DisposeAfterUse::Flag, unsigned int, int, int, unsigned int)",
  "virtual thunk to Audio::ASFStream::readBuffer(short*, int)",
  "virtual thunk to Audio::ASFStream::rewind()",
  "virtual thunk to Audio::ASFStream::~ASFStream()",
  "virtual thunk to Audio::Apple_ADPCMStream::readBuffer(short*, int)",
  "virtual thunk to Audio::Audio3DO_ADP4_Stream::readBuffer(short*, int)",
  "virtual thunk to Audio::Audio3DO_SDX2_Stream::readBuffer(short*, int)",
  "virtual thunk to Audio::DK3_ADPCMStream::readBuffer(short*, int)",
  "virtual thunk to Audio::DVI_ADPCMStream::readBuffer(short*, int)",
  "virtual thunk to Audio::LoopingAudioStream::endOfData() const",
  "virtual thunk to Audio::LoopingAudioStream::readBuffer(short*, int)",
  "virtual thunk to Audio::MSIma_ADPCMStream::readBuffer(short*, int)",
  "virtual thunk to Audio::MS_ADPCMStream::readBuffer(short*, int)",
  "virtual thunk to Audio::Oki_ADPCMStream::readBuffer(short*, int)",
  "virtual thunk to Audio::QuickTimeAudioDecoder::QuickTimeAudioTrack::endOfData() const",
  "virtual thunk to Audio::SubLoopingAudioStream::endOfData() const",
  "virtual thunk to Audio::SubLoopingAudioStream::readBuffer(short*, int)",
  "virtual thunk to Audio::VocStream::readBuffer(short*, int)",
  "virtual thunk to Audio::VocStream::~VocStream()",
  "virtual thunk to Audio::XAStream::readBuffer(short*, int)",
  "virtual thunk to Audio::XAStream::~XAStream()",
  "virtual thunk to Audio::XA_ADPCMStream::readBuffer(short*, int)",
  "virtual thunk to AudioCDStream::readBuffer(short*, int)",
  "virtual thunk to Common::ConcatReadStream::read(void*, unsigned int)",
  "virtual thunk to Common::DumpFile::err() const",
  "virtual thunk to Common::DumpFile::~DumpFile()",
  "virtual thunk to Common::File::clearErr()",
  "virtual thunk to Common::File::eos() const",
  "virtual thunk to Common::File::err() const",
  "virtual thunk to Common::File::read(void*, unsigned int)",
  "virtual thunk to Common::File::~File()",
  "virtual thunk to Common::GzioReadStream::read(void*, unsigned int)",
  "virtual thunk to Common::OutSaveFile::clearErr()",
  "virtual thunk to Common::OutSaveFile::err() const",
  "virtual thunk to Common::OutSaveFile::~OutSaveFile()",
  "virtual thunk to Common::SafeSeekableSubReadStream::read(void*, unsigned int)",
  "virtual thunk to Common::SafeSeekableSubReadStream::~SafeSeekableSubReadStream()",
  "virtual thunk to Common::SeekableSubReadStream::seek(long long, int)",
  "virtual thunk to Common::SeekableSubReadStream::~SeekableSubReadStream()",
  "virtual thunk to Common::SubReadStream::read(void*, unsigned int)",
  "virtual thunk to EventsBaseBackend::initBackend()",
  "virtual thunk to ModularGraphicsBackend::beginGFXTransaction()",
  "virtual thunk to ModularGraphicsBackend::copyRectToOverlay(void const*, int, int, int, int, int)",
  "virtual thunk to ModularGraphicsBackend::copyRectToScreen(void const*, int, int, int, int, int)",
  "virtual thunk to ModularGraphicsBackend::displayActivityIconOnOSD(Graphics::Surface const*)AudioCDStream::startTimer(bool)",
  "virtual thunk to ModularGraphicsBackend::displayMessageOnOSD(Common::U32String const&)",
  "virtual thunk to ModularGraphicsBackend::endGFXTransaction()",
  "virtual thunk to ModularGraphicsBackend::fillScreen(unsigned int)",
  "virtual thunk to ModularGraphicsBackend::getDefaultGraphicsMode() const",
  "virtual thunk to ModularGraphicsBackend::getDefaultScaler() const",
  "virtual thunk to ModularGraphicsBackend::getDefaultStretchMode() const",
  "virtual thunk to ModularGraphicsBackend::getGraphicsMode() const",
  "virtual thunk to ModularGraphicsBackend::getHeight()",
  "virtual thunk to ModularGraphicsBackend::getHiDPIScreenFactor() const",
  "virtual thunk to ModularGraphicsBackend::getOverlayFormat() const",
  "virtual thunk to ModularGraphicsBackend::getOverlayWidth()",
  "virtual thunk to ModularGraphicsBackend::getScaleFactor() const",
  "virtual thunk to ModularGraphicsBackend::getScaler() const",
  "virtual thunk to ModularGraphicsBackend::getScreenFormat() const",
  "virtual thunk to ModularGraphicsBackend::getStretchMode() const",
  "virtual thunk to ModularGraphicsBackend::getSupportedFormats() const",
  "virtual thunk to ModularGraphicsBackend::getSupportedGraphicsModes() const",
  "virtual thunk to ModularGraphicsBackend::getSupportedStretchModes() const",
  "virtual thunk to ModularGraphicsBackend::getWidth()",
  "virtual thunk to ModularGraphicsBackend::grabOverlay(Graphics::Surface&)",
  "virtual thunk to ModularGraphicsBackend::hasFeature(OSystem::Feature)",
  "virtual thunk to ModularGraphicsBackend::hideOverlay()",
  "virtual thunk to ModularGraphicsBackend::initSize(unsigned int, unsigned int, Graphics::PixelFormat const*)",
  "virtual thunk to ModularGraphicsBackend::initSizeHint(Common::Array<Graphics::Mode> const&)",
  "virtual thunk to ModularGraphicsBackend::isOverlayVisible() const",
  "virtual thunk to ModularGraphicsBackend::lockMouse(bool)",
  "virtual thunk to ModularGraphicsBackend::saveScreenshot()",
  "virtual thunk to ModularGraphicsBackend::setCursorPalette(unsigned char const*, unsigned int, unsigned int)",
  "virtual thunk to ModularGraphicsBackend::setFocusRectangle(Common::Rect const&)",
  "virtual thunk to ModularGraphicsBackend::setGraphicsMode(int, unsigned int)",
  "virtual thunk to ModularGraphicsBackend::setScaler(unsigned int, int)",
  "virtual thunk to ModularGraphicsBackend::setShader(Common::String const&)",
  "virtual thunk to ModularGraphicsBackend::setShakePos(int, int)",
  "virtual thunk to ModularGraphicsBackend::setStretchMode(int)",
  "virtual thunk to ModularGraphicsBackend::showMouse(bool)",
  "virtual thunk to ModularGraphicsBackend::showOverlay(bool)",
  "virtual thunk to ModularGraphicsBackend::warpMouse(int, int)",
  "virtual thunk to ModularMixerBackend::getMixer()",
  "virtual thunk to Modules::ModXmS3mStream::readBuffer(short*, int)",
  "virtual thunk to OSystem_Emscripten::getFeatureState(OSystem::Feature)",
  "virtual thunk to OSystem_Emscripten::hasFeature(OSystem::Feature)",
  "virtual thunk to OSystem_Emscripten::setFeatureState(OSystem::Feature, bool)",
  "virtual thunk to OSystem_Emscripten::~OSystem_Emscripten()",
  "virtual thunk to OSystem_POSIX::addSysArchivesToSearchSet(Common::SearchSet&, int)",
  "virtual thunk to OSystem_POSIX::getDefaultConfigFileName()",
  "virtual thunk to OSystem_POSIX::hasFeature(OSystem::Feature)",
  "virtual thunk to OSystem_POSIX::init()",
  "virtual thunk to OSystem_POSIX::initBackend()",
  "virtual thunk to OSystem_POSIX::~OSystem_POSIX()",
  "virtual thunk to OSystem_SDL::addSysArchivesToSearchSet(Common::SearchSet&, int)",
  "virtual thunk to OSystem_SDL::createMutex()",
  "virtual thunk to OSystem_SDL::delayMillis(unsigned int)",
  "virtual thunk to OSystem_SDL::engineDone()",
  "virtual thunk to OSystem_SDL::engineInit()",
  "virtual thunk to OSystem_SDL::fatalError()",
  "virtual thunk to OSystem_SDL::getDefaultGraphicsMode() const",
  "virtual thunk to OSystem_SDL::getGlobalKeymaps()",
  "virtual thunk to OSystem_SDL::getGraphicsMode() const",
  "virtual thunk to OSystem_SDL::getHardwareInputSet()",
  "virtual thunk to OSystem_SDL::getOpenGLProcAddress(char const*) const",
  "virtual thunk to OSystem_SDL::getSupportedAntiAliasingLevels() const",
  "virtual thunk to OSystem_SDL::getSupportedGraphicsModes() const",
  "virtual thunk to OSystem_SDL::getSystemLanguage() const",
  "virtual thunk to OSystem_SDL::getTextFromClipboard()",
  "virtual thunk to OSystem_SDL::hasFeature(OSystem::Feature)",
  "virtual thunk to OSystem_SDL::hasTextInClipboard()",
  "virtual thunk to OSystem_SDL::init()",
  "virtual thunk to OSystem_SDL::initBackend()",
  "virtual thunk to OSystem_SDL::logMessage(LogMessageType::Type, char const*)",
  "virtual thunk to OSystem_SDL::openUrl(Common::String const&)",
  "virtual thunk to OSystem_SDL::quit()",
  "virtual thunk to OSystem_SDL::setGraphicsMode(int, unsigned int)",
  "virtual thunk to OSystem_SDL::setTextInClipboard(Common::U32String const&)",
  "virtual thunk to OSystem_SDL::setWindowCaption(Common::U32String const&)",
  "virtual thunk to OSystem_SDL::~OSystem_SDL()",
  "virtual thunk to OpenGL::OpenGLGraphicsManager::beginGFXTransaction()",
  "virtual thunk to OpenGL::OpenGLGraphicsManager::clearOverlay()",
  "virtual thunk to OpenGL::OpenGLGraphicsManager::copyRectToOverlay(void const*, int, int, int, int, int)",
  "virtual thunk to OpenGL::OpenGLGraphicsManager::copyRectToScreen(void const*, int, int, int, int, int)",
  "virtual thunk to OpenGL::OpenGLGraphicsManager::displayActivityIconOnOSD(Graphics::Surface const*)",
  "virtual thunk to OpenGL::OpenGLGraphicsManager::displayMessageOnOSD(Common::U32String const&)",
  "virtual thunk to OpenGL::OpenGLGraphicsManager::endGFXTransaction()",
  "virtual thunk to OpenGL::OpenGLGraphicsManager::fillScreen(unsigned int)",
  "virtual thunk to OpenGL::OpenGLGraphicsManager::gameNeedsAspectRatioCorrection() const",
  "virtual thunk to OpenGL::OpenGLGraphicsManager::getDefaultScaler() const",
  "virtual thunk to OpenGL::OpenGLGraphicsManager::getOverlayFormat() const",
  "virtual thunk to OpenGL::OpenGLGraphicsManager::getOverlayHeight() const",
  "virtual thunk to OpenGL::OpenGLGraphicsManager::getOverlayWidth() const",
  "virtual thunk to OpenGL::OpenGLGraphicsManager::getSupportedFormats() const",
  "virtual thunk to OpenGL::OpenGLGraphicsManager::grabOverlay(Graphics::Surface&) const",
  "virtual thunk to OpenGL::OpenGLGraphicsManager::grabPalette(unsigned char*, unsigned int, unsigned int) const",
  "virtual thunk to OpenGL::OpenGLGraphicsManager::handleResizeImpl(int, int)",
  "virtual thunk to OpenGL::OpenGLGraphicsManager::hasFeature(OSystem::Feature) const",
  "virtual thunk to OpenGL::OpenGLGraphicsManager::lockScreen()",
  "virtual thunk to OpenGL::OpenGLGraphicsManager::recalculateDisplayAreas()",
  "virtual thunk to OpenGL::OpenGLGraphicsManager::setCursorPalette(unsigned char const*, unsigned int, unsigned int)",
  "virtual thunk to OpenGL::OpenGLGraphicsManager::setFeatureState(OSystem::Feature, bool)",
  "virtual thunk to OpenGL::OpenGLGraphicsManager::setGraphicsMode(int, unsigned int)",
  "virtual thunk to OpenGL::OpenGLGraphicsManager::setMouseCursor(void const*, unsigned int, unsigned int, int, int, unsigned int, bool, Graphics::PixelFormat const*)",
  "virtual thunk to OpenGL::OpenGLGraphicsManager::setPalette(unsigned char const*, unsigned int, unsigned int)",
  "virtual thunk to OpenGL::OpenGLGraphicsManager::setScaler(unsigned int, int)",
  "virtual thunk to OpenGL::OpenGLGraphicsManager::setShader(Common::String const&)",
  "virtual thunk to OpenGL::OpenGLGraphicsManager::setStretchMode(int)",
  "virtual thunk to OpenGL::OpenGLGraphicsManager::updateScreen()",
  "virtual thunk to OpenGLSdlGraphics3dManager::clearOverlay()",
  "virtual thunk to OpenGLSdlGraphics3dManager::endGFXTransaction()",
  "virtual thunk to OpenGLSdlGraphics3dManager::gameNeedsAspectRatioCorrection() const",
  "virtual thunk to OpenGLSdlGraphics3dManager::getFeatureState(OSystem::Feature) const",
  "virtual thunk to OpenGLSdlGraphics3dManager::handleResizeImpl(int, int)",
  "virtual thunk to OpenGLSdlGraphics3dManager::hideOverlay()",
  "virtual thunk to OpenGLSdlGraphics3dManager::initSize(unsigned int, unsigned int, Graphics::PixelFormat const*)",
  "virtual thunk to OpenGLSdlGraphics3dManager::setFeatureState(OSystem::Feature, bool)",
  "virtual thunk to OpenGLSdlGraphics3dManager::setStretchMode(int)",
  "virtual thunk to OpenGLSdlGraphics3dManager::showMouse(bool)",
  "virtual thunk to OpenGLSdlGraphics3dManager::showOverlay(bool)",
  "virtual thunk to OpenGLSdlGraphics3dManager::updateScreen()",
  "virtual thunk to OpenGLSdlGraphics3dManager::~OpenGLSdlGraphics3dManager()",
  "virtual thunk to OpenGLSdlGraphicsManager::getFeatureState(OSystem::Feature) const",
  "virtual thunk to OpenGLSdlGraphicsManager::getHiDPIScreenFactor() const",
  "virtual thunk to OpenGLSdlGraphicsManager::handleResizeImpl(int, int)",
  "virtual thunk to OpenGLSdlGraphicsManager::hasFeature(OSystem::Feature) const",
  "virtual thunk to OpenGLSdlGraphicsManager::setFeatureState(OSystem::Feature, bool)",
  "virtual thunk to OpenGLSdlGraphicsManager::updateScreen()",
  "virtual thunk to OpenGLSdlGraphicsManager::~OpenGLSdlGraphicsManager()",
  "virtual thunk to Scumm::ScummDiskImage::read(void*, unsigned int)",
  "virtual thunk to Scumm::ScummFile::eos() const",
  "virtual thunk to Scumm::ScummFile::read(void*, unsigned int)",
  "virtual thunk to Scumm::ScummNESFile::read(void*, unsigned int)",
  "virtual thunk to SdlGraphicsManager::initSizeHint(Common::Array<Graphics::Mode> const&)",
  "virtual thunk to SdlGraphicsManager::lockMouse(bool)",
  "virtual thunk to SdlGraphicsManager::notifyActiveAreaChanged()",
  "virtual thunk to SdlGraphicsManager::saveScreenshot()",
  "virtual thunk to SdlGraphicsManager::setSystemMousePosition(int, int)",
  "virtual thunk to SdlGraphicsManager::showMouse(bool)",
  "virtual thunk to StdioStream::read(void*, unsigned int)",
  "virtual thunk to StdioStream::~StdioStream()",
  "virtual thunk to SurfaceSdlGraphicsManager::clearFocusRectangle()",
  "virtual thunk to SurfaceSdlGraphicsManager::clearOverlay()",
  "virtual thunk to SurfaceSdlGraphicsManager::copyRectToOverlay(void const*, int, int, int, int, int)",
  "virtual thunk to SurfaceSdlGraphicsManager::copyRectToScreen(void const*, int, int, int, int, int)",
  "virtual thunk to SurfaceSdlGraphicsManager::displayActivityIconOnOSD(Graphics::Surface const*)",
  "virtual thunk to SurfaceSdlGraphicsManager::displayMessageOnOSD(Common::U32String const&)",
  "virtual thunk to SurfaceSdlGraphicsManager::endGFXTransaction()",
  "virtual thunk to SurfaceSdlGraphicsManager::fillScreen(unsigned int)",
  "virtual thunk to SurfaceSdlGraphicsManager::getDefaultScaler() const",
  "virtual thunk to SurfaceSdlGraphicsManager::getSupportedFormats() const",
  "virtual thunk to SurfaceSdlGraphicsManager::grabOverlay(Graphics::Surface&) const",
  "virtual thunk to SurfaceSdlGraphicsManager::handleResizeImpl(int, int)",
  "virtual thunk to SurfaceSdlGraphicsManager::initSize(unsigned int, unsigned int, Graphics::PixelFormat const*)",
  "virtual thunk to SurfaceSdlGraphicsManager::lockScreen()",
  "virtual thunk to SurfaceSdlGraphicsManager::setCursorPalette(unsigned char const*, unsigned int, unsigned int)",
  "virtual thunk to SurfaceSdlGraphicsManager::setFeatureState(OSystem::Feature, bool)",
  "virtual thunk to SurfaceSdlGraphicsManager::setFocusRectangle(Common::Rect const&)",
  "virtual thunk to SurfaceSdlGraphicsManager::setMouseCursor(void const*, unsigned int, unsigned int, int, int, unsigned int, bool, Graphics::PixelFormat const*)",
  "virtual thunk to SurfaceSdlGraphicsManager::setPalette(unsigned char const*, unsigned int, unsigned int)",
  "virtual thunk to SurfaceSdlGraphicsManager::setScaler(unsigned int, int)",
  "virtual thunk to SurfaceSdlGraphicsManager::setStretchMode(int)",
  "virtual thunk to SurfaceSdlGraphicsManager::unlockScreen()",
  "virtual thunk to SurfaceSdlGraphicsManager::updateScreen()",
  "virtual thunk to SurfaceSdlGraphicsManager::~SurfaceSdlGraphicsManager()",
  "virtual thunk to WindowedGraphicsManager::hideOverlay()",
  "virtual thunk to WindowedGraphicsManager::setShakePos(int, int)",
  "virtual thunk to WindowedGraphicsManager::showOverlay(bool)",
  "virtual thunk to WindowedGraphicsManager::warpMouse(int, int)",
  "virtual thunk to std::__2::basic_ifstream<char, std::__2::char_traits<char>>::~basic_ifstream()",
  "virtual thunk to std::__2::basic_iostream<char, std::__2::char_traits<char>>::~basic_iostream()",
  "virtual thunk to std::__2::basic_istream<char, std::__2::char_traits<char>>::~basic_istream()",
  "virtual thunk to std::__2::basic_istream<wchar_t, std::__2::char_traits<wchar_t>>::~basic_istream()",
  "virtual thunk to std::__2::basic_istringstream<char, std::__2::char_traits<char>, std::__2::allocator<char>>::~basic_istringstream()",
  "virtual thunk to std::__2::basic_ofstream<char, std::__2::char_traits<char>>::~basic_ofstream()",
  "virtual thunk to std::__2::basic_ostream<char, std::__2::char_traits<char>>::~basic_ostream()",
  "virtual thunk to std::__2::basic_ostream<wchar_t, std::__2::char_traits<wchar_t>>::~basic_ostream()",
  "virtual thunk to std::__2::basic_ostringstream<char, std::__2::char_traits<char>, std::__2::allocator<char>>::~basic_ostringstream()",
  "virtual thunk to std::__2::basic_stringstream<char, std::__2::char_traits<char>, std::__2::allocator<char>>::~basic_stringstream()",
  "virtual thunk to std::__2::istrstream::~istrstream()",
  "virtual thunk to std::__2::ostrstream::~ostrstream()",
  "virtual thunk to std::__2::strstream::~strstream()",
  "vlogf",
  "void Common::sort<Common::FSNode*, Common::Less<Common::FSNode>>(Common::FSNode*, Common::FSNode*, Common::Less<Common::FSNode>)",
  "void Common::sort<Common::HardwareInput*, Common::HardwareInputTypeIdComparator>(Common::HardwareInput*, Common::HardwareInput*, Common::HardwareInputTypeIdComparator)",
  "void Common::sort<Common::ListInternal::Iterator<Common::DebugManager::DebugChannel>, Common::(anonymous namespace)::DebugLevelComperator>(Common::ListInternal::Iterator<Common::DebugManager::DebugChannel>, Common::ListInternal::Iterator<Common::DebugManager::DebugChannel>, Common::(anonymous namespace)::DebugLevelComperator)",
  "void Common::sort<Common::ListInternal::Iterator<Common::SharedPtr<Common::ArchiveMember>>, GUI::ArchiveMemberLess>(Common::ListInternal::Iterator<Common::SharedPtr<Common::ArchiveMember>>, Common::ListInternal::Iterator<Common::SharedPtr<Common::ArchiveMember>>, GUI::ArchiveMemberLess)",
  "void Common::sort<Common::ListInternal::Iterator<Common::SharedPtr<Common::ArchiveMember>>, GUI::ArchiveMemberListBackComparator>(Common::ListInternal::Iterator<Common::SharedPtr<Common::ArchiveMember>>, Common::ListInternal::Iterator<Common::SharedPtr<Common::ArchiveMember>>, GUI::ArchiveMemberListBackComparator)",
  "void Common::sort<Common::ListInternal::Iterator<Common::String>, Common::Less<Common::String>>(Common::ListInternal::Iterator<Common::String>, Common::ListInternal::Iterator<Common::String>, Common::Less<Common::String>)",
  "void Common::sort<Common::String*, Common::Less<Common::String>>(Common::String*, Common::String*, Common::Less<Common::String>)",
  "void Common::sort<Common::TLanguage*, Common::Less<Common::TLanguage>>(Common::TLanguage*, Common::TLanguage*, Common::Less<Common::TLanguage>)",
  "void Common::sort<Common::U32String*, Common::Less<Common::U32String>>(Common::U32String*, Common::U32String*, Common::Less<Common::U32String>)",
  "void Common::sort<Common::U32String*, GUI::GroupedListWidget::sortGroups()::$_0>(Common::U32String*, Common::U32String*, GUI::GroupedListWidget::sortGroups()::$_0)",
  "void Common::sort<DetectedGame*, GUI::GameDescLess>(DetectedGame*, DetectedGame*, GUI::GameDescLess)",
  "void Common::sort<DetectedGame*, GUI::GameTargetLess>(DetectedGame*, DetectedGame*, GUI::GameTargetLess)",
  "void Common::sort<GUI::LauncherEntry*, GUI::LauncherEntryComparator>(GUI::LauncherEntry*, GUI::LauncherEntry*, GUI::LauncherEntryComparator)",
  "void Common::sort<SaveStateDescriptor*, SaveStateDescriptorSlotComparator>(SaveStateDescriptor*, SaveStateDescriptor*, SaveStateDescriptorSlotComparator)",
  "void Common::unknownKeyError<Common::String>(Common::String)",
  "void Common::unknownKeyError<Common::U32String>(Common::U32String)",
  "void Common::unknownKeyError<Common::WinResourceID>(Common::WinResourceID)",
  "void Common::unknownKeyError<char const*>(char const*)",
  "void Common::unknownKeyError<int>(int)",
  "void Common::unknownKeyError<long long>(long long)",
  "void Common::unknownKeyError<long>(long)",
  "void Common::unknownKeyError<short>(short)",
  "void Common::unknownKeyError<signed char>(signed char)",
  "void Common::unknownKeyError<unsigned char>(unsigned char)",
  "void Common::unknownKeyError<unsigned int>(unsigned int)",
  "void Common::unknownKeyError<unsigned long long>(unsigned long long)",
  "void Common::unknownKeyError<unsigned long>(unsigned long)",
  "void Common::unknownKeyError<unsigned short>(unsigned short)",
  "void Common::unknownKeyError<void*>(void*)",
  "void GUI::GridWidget::unloadSurfaces<Common::String>(Common::HashMap<Common::String, Graphics::ManagedSurface const*, Common::Hash<Common::String>, Common::EqualTo<Common::String>>&)",
  "void GUI::GridWidget::unloadSurfaces<int>(Common::HashMap<int, Graphics::ManagedSurface const*, Common::Hash<int>, Common::EqualTo<int>>&)",
  "void Graphics::transBlit<unsigned char, unsigned char>(Graphics::Surface const&, Common::Rect const&, Graphics::ManagedSurface&, Common::Rect const&, unsigned char, bool, unsigned int, unsigned int, unsigned int const*, unsigned int const*, Graphics::Surface const*, bool)",
  "void Graphics::transBlit<unsigned char, unsigned int>(Graphics::Surface const&, Common::Rect const&, Graphics::ManagedSurface&, Common::Rect const&, unsigned char, bool, unsigned int, unsigned int, unsigned int const*, unsigned int const*, Graphics::Surface const*, bool)",
  "void Graphics::transBlit<unsigned char, unsigned short>(Graphics::Surface const&, Common::Rect const&, Graphics::ManagedSurface&, Common::Rect const&, unsigned char, bool, unsigned int, unsigned int, unsigned int const*, unsigned int const*, Graphics::Surface const*, bool)",
  "void Graphics::transBlit<unsigned int, unsigned int>(Graphics::Surface const&, Common::Rect const&, Graphics::ManagedSurface&, Common::Rect const&, unsigned int, bool, unsigned int, unsigned int, unsigned int const*, unsigned int const*, Graphics::Surface const*, bool)",
  "void Graphics::transBlit<unsigned int, unsigned short>(Graphics::Surface const&, Common::Rect const&, Graphics::ManagedSurface&, Common::Rect const&, unsigned int, bool, unsigned int, unsigned int, unsigned int const*, unsigned int const*, Graphics::Surface const*, bool)",
  "void Graphics::transBlit<unsigned short, unsigned int>(Graphics::Surface const&, Common::Rect const&, Graphics::ManagedSurface&, Common::Rect const&, unsigned short, bool, unsigned int, unsigned int, unsigned int const*, unsigned int const*, Graphics::Surface const*, bool)",
  "void Graphics::transBlit<unsigned short, unsigned short>(Graphics::Surface const&, Common::Rect const&, Graphics::ManagedSurface&, Common::Rect const&, unsigned short, bool, unsigned int, unsigned int, unsigned int const*, unsigned int const*, Graphics::Surface const*, bool)",
  "void MT32Emu::AnalogImpl<float>::produceOutput<float>(float*, float const*, float const*, float const*, float const*, float const*, float const*, unsigned int)",
  "void MT32Emu::AnalogImpl<int>::produceOutput<short>(short*, short const*, short const*, short const*, short const*, short const*, short const*, unsigned int)",
  "void MT32Emu::BReverbModelImpl<float>::produceOutput<float>(float const*, float const*, float*, float*, unsigned int)",
  "void MT32Emu::BReverbModelImpl<short>::produceOutput<int>(short const*, short const*, short*, short*, unsigned int)",
  "void MT32Emu::RendererImpl<float>::doRenderAndConvertStreams<short>(MT32Emu::DACOutputStreams<short> const&, unsigned int)",
  "void MT32Emu::RendererImpl<short>::doRenderAndConvertStreams<float>(MT32Emu::DACOutputStreams<float> const&, unsigned int)",
  "void OPL::DOSBox::DBOPL::Channel::GeneratePercussion<false>(OPL::DOSBox::DBOPL::Chip*, int*)",
  "void OPL::DOSBox::DBOPL::Channel::GeneratePercussion<true>(OPL::DOSBox::DBOPL::Chip*, int*)",
  "void PSXConvADSR<VabRgn>(VabRgn*, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, bool)",
  "void SWAP<Common::FSNode>(Common::FSNode&, Common::FSNode&)",
  "void SWAP<Common::SharedPtr<Common::ArchiveMember>>(Common::SharedPtr<Common::ArchiveMember>&, Common::SharedPtr<Common::ArchiveMember>&)",
  "void SWAP<DetectedGame>(DetectedGame&, DetectedGame&)",
  "void SWAP<GUI::LauncherEntry>(GUI::LauncherEntry&, GUI::LauncherEntry&)",
  "void SWAP<SaveStateDescriptor>(SaveStateDescriptor&, SaveStateDescriptor&)",
  "void TinyGL::BlitImage::tglBlitGeneric<false, false, false, false, false, false>(TinyGL::BlitTransform const&)",
  "void TinyGL::BlitImage::tglBlitGeneric<false, false, false, false, false, true>(TinyGL::BlitTransform const&)",
  "void TinyGL::BlitImage::tglBlitGeneric<false, false, false, false, true, false>(TinyGL::BlitTransform const&)",
  "void TinyGL::BlitImage::tglBlitGeneric<false, false, false, false, true, true>(TinyGL::BlitTransform const&)",
  "void TinyGL::BlitImage::tglBlitGeneric<false, false, false, true, false, false>(TinyGL::BlitTransform const&)",
  "void TinyGL::BlitImage::tglBlitGeneric<false, false, false, true, false, true>(TinyGL::BlitTransform const&)",
  "void TinyGL::BlitImage::tglBlitGeneric<false, false, false, true, true, false>(TinyGL::BlitTransform const&)",
  "void TinyGL::BlitImage::tglBlitGeneric<false, false, false, true, true, true>(TinyGL::BlitTransform const&)",
  "void TinyGL::BlitImage::tglBlitGeneric<false, true, false, false, false, false>(TinyGL::BlitTransform const&)",
  "void TinyGL::BlitImage::tglBlitGeneric<false, true, false, false, false, true>(TinyGL::BlitTransform const&)",
  "void TinyGL::BlitImage::tglBlitGeneric<false, true, false, false, true, false>(TinyGL::BlitTransform const&)",
  "void TinyGL::BlitImage::tglBlitGeneric<false, true, false, false, true, true>(TinyGL::BlitTransform const&)",
  "void TinyGL::BlitImage::tglBlitGeneric<false, true, false, true, false, false>(TinyGL::BlitTransform const&)",
  "void TinyGL::BlitImage::tglBlitGeneric<false, true, false, true, false, true>(TinyGL::BlitTransform const&)",
  "void TinyGL::BlitImage::tglBlitGeneric<false, true, false, true, true, false>(TinyGL::BlitTransform const&)",
  "void TinyGL::BlitImage::tglBlitGeneric<false, true, false, true, true, true>(TinyGL::BlitTransform const&)",
  "void TinyGL::BlitImage::tglBlitGeneric<true, false, false, false, false, false>(TinyGL::BlitTransform const&)",
  "void TinyGL::BlitImage::tglBlitGeneric<true, false, false, false, false, true>(TinyGL::BlitTransform const&)",
  "void TinyGL::BlitImage::tglBlitGeneric<true, false, false, false, true, false>(TinyGL::BlitTransform const&)",
  "void TinyGL::BlitImage::tglBlitGeneric<true, false, false, false, true, true>(TinyGL::BlitTransform const&)",
  "void TinyGL::BlitImage::tglBlitGeneric<true, false, false, true, false, false>(TinyGL::BlitTransform const&)",
  "void TinyGL::BlitImage::tglBlitGeneric<true, false, false, true, false, true>(TinyGL::BlitTransform const&)",
  "void TinyGL::BlitImage::tglBlitGeneric<true, false, false, true, true, false>(TinyGL::BlitTransform const&)",
  "void TinyGL::BlitImage::tglBlitGeneric<true, false, false, true, true, true>(TinyGL::BlitTransform const&)",
  "void TinyGL::BlitImage::tglBlitGeneric<true, true, false, false, false, false>(TinyGL::BlitTransform const&)",
  "void TinyGL::BlitImage::tglBlitGeneric<true, true, false, false, false, true>(TinyGL::BlitTransform const&)",
  "void TinyGL::BlitImage::tglBlitGeneric<true, true, false, false, true, false>(TinyGL::BlitTransform const&)",
  "void TinyGL::BlitImage::tglBlitGeneric<true, true, false, false, true, true>(TinyGL::BlitTransform const&)",
  "void TinyGL::BlitImage::tglBlitGeneric<true, true, false, true, false, false>(TinyGL::BlitTransform const&)",
  "void TinyGL::BlitImage::tglBlitGeneric<true, true, false, true, false, true>(TinyGL::BlitTransform const&)",
  "void TinyGL::BlitImage::tglBlitGeneric<true, true, false, true, true, false>(TinyGL::BlitTransform const&)",
  "void TinyGL::BlitImage::tglBlitGeneric<true, true, false, true, true, true>(TinyGL::BlitTransform const&)",
  "void TinyGL::BlitImage::tglBlitRLE<false, false, true>(int, int, int, int, int, int, float, float, float, float)",
  "void TinyGL::BlitImage::tglBlitRLE<false, true, false>(int, int, int, int, int, int, float, float, float, float)",
  "void TinyGL::BlitImage::tglBlitRLE<false, true, true>(int, int, int, int, int, int, float, float, float, float)",
  "void TinyGL::BlitImage::tglBlitRLE<true, false, true>(int, int, int, int, int, int, float, float, float, float)",
  "void TinyGL::BlitImage::tglBlitRotoScale<false, false, false, false>(int, int, int, int, int, int, int, int, int, int, int, float, float, float, float)",
  "void TinyGL::BlitImage::tglBlitRotoScale<false, false, false, true>(int, int, int, int, int, int, int, int, int, int, int, float, float, float, float)",
  "void TinyGL::BlitImage::tglBlitRotoScale<false, false, true, false>(int, int, int, int, int, int, int, int, int, int, int, float, float, float, float)",
  "void TinyGL::BlitImage::tglBlitRotoScale<false, false, true, true>(int, int, int, int, int, int, int, int, int, int, int, float, float, float, float)",
  "void TinyGL::BlitImage::tglBlitRotoScale<false, true, false, false>(int, int, int, int, int, int, int, int, int, int, int, float, float, float, float)",
  "void TinyGL::BlitImage::tglBlitRotoScale<false, true, false, true>(int, int, int, int, int, int, int, int, int, int, int, float, float, float, float)",
  "void TinyGL::BlitImage::tglBlitRotoScale<false, true, true, false>(int, int, int, int, int, int, int, int, int, int, int, float, float, float, float)",
  "void TinyGL::BlitImage::tglBlitRotoScale<false, true, true, true>(int, int, int, int, int, int, int, int, int, int, int, float, float, float, float)",
  "void TinyGL::BlitImage::tglBlitRotoScale<true, false, false, false>(int, int, int, int, int, int, int, int, int, int, int, float, float, float, float)",
  "void TinyGL::BlitImage::tglBlitRotoScale<true, false, false, true>(int, int, int, int, int, int, int, int, int, int, int, float, float, float, float)",
  "void TinyGL::BlitImage::tglBlitRotoScale<true, false, true, false>(int, int, int, int, int, int, int, int, int, int, int, float, float, float, float)",
  "void TinyGL::BlitImage::tglBlitRotoScale<true, false, true, true>(int, int, int, int, int, int, int, int, int, int, int, float, float, float, float)",
  "void TinyGL::BlitImage::tglBlitRotoScale<true, true, false, false>(int, int, int, int, int, int, int, int, int, int, int, float, float, float, float)",
  "void TinyGL::BlitImage::tglBlitRotoScale<true, true, false, true>(int, int, int, int, int, int, int, int, int, int, int, float, float, float, float)",
  "void TinyGL::BlitImage::tglBlitRotoScale<true, true, true, false>(int, int, int, int, int, int, int, int, int, int, int, float, float, float, float)",
  "void TinyGL::BlitImage::tglBlitRotoScale<true, true, true, true>(int, int, int, int, int, int, int, int, int, int, int, float, float, float, float)",
  "void TinyGL::BlitImage::tglBlitScale<false, false, false, false>(int, int, int, int, int, int, int, int, float, float, float, float)",
  "void TinyGL::BlitImage::tglBlitScale<false, false, false, true>(int, int, int, int, int, int, int, int, float, float, float, float)",
  "void TinyGL::BlitImage::tglBlitScale<false, false, true, false>(int, int, int, int, int, int, int, int, float, float, float, float)",
  "void TinyGL::BlitImage::tglBlitScale<false, false, true, true>(int, int, int, int, int, int, int, int, float, float, float, float)",
  "void TinyGL::BlitImage::tglBlitScale<false, true, false, false>(int, int, int, int, int, int, int, int, float, float, float, float)",
  "void TinyGL::BlitImage::tglBlitScale<false, true, false, true>(int, int, int, int, int, int, int, int, float, float, float, float)",
  "void TinyGL::BlitImage::tglBlitScale<false, true, true, false>(int, int, int, int, int, int, int, int, float, float, float, float)",
  "void TinyGL::BlitImage::tglBlitScale<false, true, true, true>(int, int, int, int, int, int, int, int, float, float, float, float)",
  "void TinyGL::BlitImage::tglBlitScale<true, false, false, false>(int, int, int, int, int, int, int, int, float, float, float, float)",
  "void TinyGL::BlitImage::tglBlitScale<true, false, false, true>(int, int, int, int, int, int, int, int, float, float, float, float)",
  "void TinyGL::BlitImage::tglBlitScale<true, false, true, false>(int, int, int, int, int, int, int, int, float, float, float, float)",
  "void TinyGL::BlitImage::tglBlitScale<true, false, true, true>(int, int, int, int, int, int, int, int, float, float, float, float)",
  "void TinyGL::BlitImage::tglBlitScale<true, true, false, false>(int, int, int, int, int, int, int, int, float, float, float, float)",
  "void TinyGL::BlitImage::tglBlitScale<true, true, false, true>(int, int, int, int, int, int, int, int, float, float, float, float)",
  "void TinyGL::BlitImage::tglBlitScale<true, true, true, false>(int, int, int, int, int, int, int, int, float, float, float, float)",
  "void TinyGL::BlitImage::tglBlitScale<true, true, true, true>(int, int, int, int, int, int, int, int, float, float, float, float)",
  "void TinyGL::BlitImage::tglBlitSimple<false, false, false, false>(int, int, int, int, int, int, float, float, float, float)",
  "void TinyGL::BlitImage::tglBlitSimple<false, false, false, true>(int, int, int, int, int, int, float, float, float, float)",
  "void TinyGL::BlitImage::tglBlitSimple<false, false, true, false>(int, int, int, int, int, int, float, float, float, float)",
  "void TinyGL::BlitImage::tglBlitSimple<false, false, true, true>(int, int, int, int, int, int, float, float, float, float)",
  "void TinyGL::BlitImage::tglBlitSimple<false, true, false, false>(int, int, int, int, int, int, float, float, float, float)",
  "void TinyGL::BlitImage::tglBlitSimple<false, true, false, true>(int, int, int, int, int, int, float, float, float, float)",
  "void TinyGL::BlitImage::tglBlitSimple<false, true, true, false>(int, int, int, int, int, int, float, float, float, float)",
  "void TinyGL::BlitImage::tglBlitSimple<false, true, true, true>(int, int, int, int, int, int, float, float, float, float)",
  "void TinyGL::BlitImage::tglBlitSimple<true, false, false, true>(int, int, int, int, int, int, float, float, float, float)",
  "void TinyGL::BlitImage::tglBlitSimple<true, false, true, false>(int, int, int, int, int, int, float, float, float, float)",
  "void TinyGL::BlitImage::tglBlitSimple<true, false, true, true>(int, int, int, int, int, int, float, float, float, float)",
  "void TinyGL::BlitImage::tglBlitSimple<true, true, false, true>(int, int, int, int, int, int, float, float, float, float)",
  "void TinyGL::BlitImage::tglBlitSimple<true, true, true, false>(int, int, int, int, int, int, float, float, float, float)",
  "void TinyGL::BlitImage::tglBlitSimple<true, true, true, true>(int, int, int, int, int, int, float, float, float, float)",
  "void TinyGL::FrameBuffer::drawLine<false, false, false, false>(TinyGL::ZBufferPoint const*, TinyGL::ZBufferPoint const*)",
  "void TinyGL::FrameBuffer::drawLine<false, false, false, true>(TinyGL::ZBufferPoint const*, TinyGL::ZBufferPoint const*)",
  "void TinyGL::FrameBuffer::drawLine<false, false, true, false>(TinyGL::ZBufferPoint const*, TinyGL::ZBufferPoint const*)",
  "void TinyGL::FrameBuffer::drawLine<false, false, true, true>(TinyGL::ZBufferPoint const*, TinyGL::ZBufferPoint const*)",
  "void TinyGL::FrameBuffer::drawLine<false, true, false, false>(TinyGL::ZBufferPoint const*, TinyGL::ZBufferPoint const*)",
  "void TinyGL::FrameBuffer::drawLine<false, true, false, true>(TinyGL::ZBufferPoint const*, TinyGL::ZBufferPoint const*)",
  "void TinyGL::FrameBuffer::drawLine<false, true, true, false>(TinyGL::ZBufferPoint const*, TinyGL::ZBufferPoint const*)",
  "void TinyGL::FrameBuffer::drawLine<false, true, true, true>(TinyGL::ZBufferPoint const*, TinyGL::ZBufferPoint const*)",
  "void TinyGL::FrameBuffer::drawLine<true, true, false, false>(TinyGL::ZBufferPoint const*, TinyGL::ZBufferPoint const*)",
  "void TinyGL::FrameBuffer::drawLine<true, true, false, true>(TinyGL::ZBufferPoint const*, TinyGL::ZBufferPoint const*)",
  "void TinyGL::FrameBuffer::drawLine<true, true, true, false>(TinyGL::ZBufferPoint const*, TinyGL::ZBufferPoint const*)",
  "void TinyGL::FrameBuffer::drawLine<true, true, true, true>(TinyGL::ZBufferPoint const*, TinyGL::ZBufferPoint const*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, false, false, false, false, false, false, false, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, false, false, false, false, false, false, false, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, false, false, false, false, false, false, true, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, false, false, false, false, false, false, true, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, false, false, false, false, false, true, false, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, false, false, false, false, false, true, false, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, false, false, false, false, false, true, true, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, false, false, false, false, false, true, true, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, false, false, false, false, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, false, false, false, false, true, false, false, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, false, false, false, false, true, false, false, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, false, false, false, false, true, false, true, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, false, false, false, false, true, false, true, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, false, false, false, false, true, true, false, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, false, false, false, false, true, true, false, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, false, false, false, false, true, true, true, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, false, false, false, false, true, true, true, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, false, false, false, false, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, false, false, false, true, false, false, false, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, false, false, false, true, false, false, false, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, false, false, false, true, false, false, true, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, false, false, false, true, false, false, true, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, false, false, false, true, false, true, false, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, false, false, false, true, false, true, false, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, false, false, false, true, false, true, true, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, false, false, false, true, false, true, true, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, false, false, false, true, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, false, false, false, true, true, false, false, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, false, false, false, true, true, false, false, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, false, false, false, true, true, false, true, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, false, false, false, true, true, false, true, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, false, false, false, true, true, true, false, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, false, false, false, true, true, true, false, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, false, false, false, true, true, true, true, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, false, false, false, true, true, true, true, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, false, false, false, true, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, false, false, true, false, false, false, false, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, false, false, true, false, false, false, false, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, false, false, true, false, false, false, true, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, false, false, true, false, false, false, true, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, false, false, true, false, false, true, false, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, false, false, true, false, false, true, false, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, false, false, true, false, false, true, true, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, false, false, true, false, false, true, true, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, false, false, true, false, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, false, false, true, false, true, false, false, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, false, false, true, false, true, false, false, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, false, false, true, false, true, false, true, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, false, false, true, false, true, false, true, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, false, false, true, false, true, true, false, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, false, false, true, false, true, true, false, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, false, false, true, false, true, true, true, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, false, false, true, false, true, true, true, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, false, false, true, false, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, false, false, true, true, false, false, false, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, false, false, true, true, false, false, false, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, false, false, true, true, false, false, true, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, false, false, true, true, false, false, true, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, false, false, true, true, false, true, false, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, false, false, true, true, false, true, false, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, false, false, true, true, false, true, true, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, false, false, true, true, false, true, true, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, false, false, true, true, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, false, false, true, true, true, false, false, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, false, false, true, true, true, false, false, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, false, false, true, true, true, false, true, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, false, false, true, true, true, false, true, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, false, false, true, true, true, true, false, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, false, false, true, true, true, true, false, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, false, false, true, true, true, true, true, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, false, false, true, true, true, true, true, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, false, false, true, true, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, false, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, false, true, false, false, false, false, false, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, false, true, false, false, false, false, false, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, false, true, false, false, false, false, true, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, false, true, false, false, false, false, true, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, false, true, false, false, false, true, false, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, false, true, false, false, false, true, false, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, false, true, false, false, false, true, true, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, false, true, false, false, false, true, true, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, false, true, false, false, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, false, true, false, false, true, false, false, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, false, true, false, false, true, false, false, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, false, true, false, false, true, false, true, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, false, true, false, false, true, false, true, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, false, true, false, false, true, true, false, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, false, true, false, false, true, true, false, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, false, true, false, false, true, true, true, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, false, true, false, false, true, true, true, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, false, true, false, false, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, false, true, false, true, false, false, false, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, false, true, false, true, false, false, false, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, false, true, false, true, false, false, true, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, false, true, false, true, false, false, true, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, false, true, false, true, false, true, false, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, false, true, false, true, false, true, false, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, false, true, false, true, false, true, true, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, false, true, false, true, false, true, true, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, false, true, false, true, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, false, true, false, true, true, false, false, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, false, true, false, true, true, false, false, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, false, true, false, true, true, false, true, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, false, true, false, true, true, false, true, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, false, true, false, true, true, true, false, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, false, true, false, true, true, true, false, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, false, true, false, true, true, true, true, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, false, true, false, true, true, true, true, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, false, true, false, true, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, false, true, true, false, false, false, false, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, false, true, true, false, false, false, false, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, false, true, true, false, false, false, true, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, false, true, true, false, false, false, true, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, false, true, true, false, false, true, false, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, false, true, true, false, false, true, false, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, false, true, true, false, false, true, true, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, false, true, true, false, false, true, true, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, false, true, true, false, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, false, true, true, false, true, false, false, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, false, true, true, false, true, false, false, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, false, true, true, false, true, false, true, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, false, true, true, false, true, false, true, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, false, true, true, false, true, true, false, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, false, true, true, false, true, true, false, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, false, true, true, false, true, true, true, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, false, true, true, false, true, true, true, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, false, true, true, false, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, false, true, true, true, false, false, false, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, false, true, true, true, false, false, false, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, false, true, true, true, false, false, true, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, false, true, true, true, false, false, true, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, false, true, true, true, false, true, false, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, false, true, true, true, false, true, false, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, false, true, true, true, false, true, true, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, false, true, true, true, false, true, true, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, false, true, true, true, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, false, true, true, true, true, false, false, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, false, true, true, true, true, false, false, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, false, true, true, true, true, false, true, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, false, true, true, true, true, false, true, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, false, true, true, true, true, true, false, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, false, true, true, true, true, true, false, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, false, true, true, true, true, true, true, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, false, true, true, true, true, true, true, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, false, true, true, true, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, false, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, true, false, false, false, false, false, false, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, true, false, false, false, false, false, false, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, true, false, false, false, false, false, true, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, true, false, false, false, false, false, true, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, true, false, false, false, false, true, false, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, true, false, false, false, false, true, false, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, true, false, false, false, false, true, true, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, true, false, false, false, false, true, true, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, true, false, false, false, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, true, false, false, false, true, false, false, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, true, false, false, false, true, false, false, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, true, false, false, false, true, false, true, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, true, false, false, false, true, false, true, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, true, false, false, false, true, true, false, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, true, false, false, false, true, true, false, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, true, false, false, false, true, true, true, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, true, false, false, false, true, true, true, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, true, false, false, false, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, true, false, false, true, false, false, false, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, true, false, false, true, false, false, false, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, true, false, false, true, false, false, true, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, true, false, false, true, false, false, true, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, true, false, false, true, false, true, false, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, true, false, false, true, false, true, false, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, true, false, false, true, false, true, true, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, true, false, false, true, false, true, true, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, true, false, false, true, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, true, false, false, true, true, false, false, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, true, false, false, true, true, false, false, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, true, false, false, true, true, false, true, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, true, false, false, true, true, false, true, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, true, false, false, true, true, true, false, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, true, false, false, true, true, true, false, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, true, false, false, true, true, true, true, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, true, false, false, true, true, true, true, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, true, false, false, true, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, true, false, true, false, false, false, false, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, true, false, true, false, false, false, false, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, true, false, true, false, false, false, true, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, true, false, true, false, false, false, true, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, true, false, true, false, false, true, false, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, true, false, true, false, false, true, false, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, true, false, true, false, false, true, true, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, true, false, true, false, false, true, true, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, true, false, true, false, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, true, false, true, false, true, false, false, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, true, false, true, false, true, false, false, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, true, false, true, false, true, false, true, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, true, false, true, false, true, false, true, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, true, false, true, false, true, true, false, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, true, false, true, false, true, true, false, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, true, false, true, false, true, true, true, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, true, false, true, false, true, true, true, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, true, false, true, false, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, true, false, true, true, false, false, false, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, true, false, true, true, false, false, false, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, true, false, true, true, false, false, true, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, true, false, true, true, false, false, true, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, true, false, true, true, false, true, false, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, true, false, true, true, false, true, false, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, true, false, true, true, false, true, true, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, true, false, true, true, false, true, true, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, true, false, true, true, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, true, false, true, true, true, false, false, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, true, false, true, true, true, false, false, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, true, false, true, true, true, false, true, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, true, false, true, true, true, false, true, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, true, false, true, true, true, true, false, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, true, false, true, true, true, true, false, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, true, false, true, true, true, true, true, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, true, false, true, true, true, true, true, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, true, false, true, true, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, true, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, true, true, false, false, false, false, false, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, true, true, false, false, false, false, false, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, true, true, false, false, false, false, true, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, true, true, false, false, false, false, true, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, true, true, false, false, false, true, false, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, true, true, false, false, false, true, false, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, true, true, false, false, false, true, true, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, true, true, false, false, false, true, true, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, true, true, false, false, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, true, true, false, false, true, false, false, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, true, true, false, false, true, false, false, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, true, true, false, false, true, false, true, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, true, true, false, false, true, false, true, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, true, true, false, false, true, true, false, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, true, true, false, false, true, true, false, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, true, true, false, false, true, true, true, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, true, true, false, false, true, true, true, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, true, true, false, false, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, true, true, false, true, false, false, false, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, true, true, false, true, false, false, false, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, true, true, false, true, false, false, true, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, true, true, false, true, false, false, true, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, true, true, false, true, false, true, false, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, true, true, false, true, false, true, false, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, true, true, false, true, false, true, true, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, true, true, false, true, false, true, true, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, true, true, false, true, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, true, true, false, true, true, false, false, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, true, true, false, true, true, false, false, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, true, true, false, true, true, false, true, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, true, true, false, true, true, false, true, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, true, true, false, true, true, true, false, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, true, true, false, true, true, true, false, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, true, true, false, true, true, true, true, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, true, true, false, true, true, true, true, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, true, true, false, true, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, true, true, true, false, false, false, false, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, true, true, true, false, false, false, false, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, true, true, true, false, false, false, true, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, true, true, true, false, false, false, true, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, true, true, true, false, false, true, false, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, true, true, true, false, false, true, false, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, true, true, true, false, false, true, true, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, true, true, true, false, false, true, true, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, true, true, true, false, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, true, true, true, false, true, false, false, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, true, true, true, false, true, false, false, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, true, true, true, false, true, false, true, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, true, true, true, false, true, false, true, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, true, true, true, false, true, true, false, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, true, true, true, false, true, true, false, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, true, true, true, false, true, true, true, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, true, true, true, false, true, true, true, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, true, true, true, false, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, true, true, true, true, false, false, false, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, true, true, true, true, false, false, false, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, true, true, true, true, false, false, true, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, true, true, true, true, false, false, true, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, true, true, true, true, false, true, false, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, true, true, true, true, false, true, false, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, true, true, true, true, false, true, true, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, true, true, true, true, false, true, true, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, true, true, true, true, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, true, true, true, true, true, false, false, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, true, true, true, true, true, false, false, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, true, true, true, true, true, false, true, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, true, true, true, true, true, false, true, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, true, true, true, true, true, true, false, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, true, true, true, true, true, true, false, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, true, true, true, true, true, true, true, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, true, true, true, true, true, true, true, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, true, true, true, true, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, false, true, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, true, false, false, false, false, false, false, false, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, true, false, false, false, false, false, false, false, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, true, false, false, false, false, false, false, true, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, true, false, false, false, false, false, false, true, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, true, false, false, false, false, false, true, false, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, true, false, false, false, false, false, true, false, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, true, false, false, false, false, false, true, true, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, true, false, false, false, false, false, true, true, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, true, false, false, false, false, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, true, false, false, false, false, true, false, false, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, true, false, false, false, false, true, false, false, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, true, false, false, false, false, true, false, true, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, true, false, false, false, false, true, false, true, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, true, false, false, false, false, true, true, false, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, true, false, false, false, false, true, true, false, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, true, false, false, false, false, true, true, true, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, true, false, false, false, false, true, true, true, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, true, false, false, false, false, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, true, false, false, false, true, false, false, false, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, true, false, false, false, true, false, false, false, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, true, false, false, false, true, false, false, true, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, true, false, false, false, true, false, false, true, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, true, false, false, false, true, false, true, false, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, true, false, false, false, true, false, true, false, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, true, false, false, false, true, false, true, true, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, true, false, false, false, true, false, true, true, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, true, false, false, false, true, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, true, false, false, false, true, true, false, false, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, true, false, false, false, true, true, false, false, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, true, false, false, false, true, true, false, true, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, true, false, false, false, true, true, false, true, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, true, false, false, false, true, true, true, false, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, true, false, false, false, true, true, true, false, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, true, false, false, false, true, true, true, true, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, true, false, false, false, true, true, true, true, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, true, false, false, false, true, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, true, false, false, true, false, false, false, false, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, true, false, false, true, false, false, false, false, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, true, false, false, true, false, false, false, true, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, true, false, false, true, false, false, false, true, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, true, false, false, true, false, false, true, false, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, true, false, false, true, false, false, true, false, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, true, false, false, true, false, false, true, true, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, true, false, false, true, false, false, true, true, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, true, false, false, true, false, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, true, false, false, true, false, true, false, false, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, true, false, false, true, false, true, false, false, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, true, false, false, true, false, true, false, true, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, true, false, false, true, false, true, false, true, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, true, false, false, true, false, true, true, false, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, true, false, false, true, false, true, true, false, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, true, false, false, true, false, true, true, true, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, true, false, false, true, false, true, true, true, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, true, false, false, true, false, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, true, false, false, true, true, false, false, false, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, true, false, false, true, true, false, false, false, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, true, false, false, true, true, false, false, true, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, true, false, false, true, true, false, false, true, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, true, false, false, true, true, false, true, false, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, true, false, false, true, true, false, true, false, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, true, false, false, true, true, false, true, true, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, true, false, false, true, true, false, true, true, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, true, false, false, true, true, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, true, false, false, true, true, true, false, false, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, true, false, false, true, true, true, false, false, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, true, false, false, true, true, true, false, true, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, true, false, false, true, true, true, false, true, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, true, false, false, true, true, true, true, false, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, true, false, false, true, true, true, true, false, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, true, false, false, true, true, true, true, true, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, true, false, false, true, true, true, true, true, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, true, false, false, true, true, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, true, false, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, true, false, true, false, false, false, false, false, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, true, false, true, false, false, false, false, false, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, true, false, true, false, false, false, false, true, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, true, false, true, false, false, false, false, true, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, true, false, true, false, false, false, true, false, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, true, false, true, false, false, false, true, false, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, true, false, true, false, false, false, true, true, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, true, false, true, false, false, false, true, true, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, true, false, true, false, false, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, true, false, true, false, false, true, false, false, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, true, false, true, false, false, true, false, false, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, true, false, true, false, false, true, false, true, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, true, false, true, false, false, true, false, true, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, true, false, true, false, false, true, true, false, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, true, false, true, false, false, true, true, false, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, true, false, true, false, false, true, true, true, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, true, false, true, false, false, true, true, true, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, true, false, true, false, false, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, true, false, true, false, true, false, false, false, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, true, false, true, false, true, false, false, false, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, true, false, true, false, true, false, false, true, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, true, false, true, false, true, false, false, true, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, true, false, true, false, true, false, true, false, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, true, false, true, false, true, false, true, false, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, true, false, true, false, true, false, true, true, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, true, false, true, false, true, false, true, true, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, true, false, true, false, true, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, true, false, true, false, true, true, false, false, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, true, false, true, false, true, true, false, false, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, true, false, true, false, true, true, false, true, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, true, false, true, false, true, true, false, true, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, true, false, true, false, true, true, true, false, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, true, false, true, false, true, true, true, false, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, true, false, true, false, true, true, true, true, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, true, false, true, false, true, true, true, true, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, true, false, true, false, true, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, true, false, true, true, false, false, false, false, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, true, false, true, true, false, false, false, false, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, true, false, true, true, false, false, false, true, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, true, false, true, true, false, false, false, true, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, true, false, true, true, false, false, true, false, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, true, false, true, true, false, false, true, false, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, true, false, true, true, false, false, true, true, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, true, false, true, true, false, false, true, true, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, true, false, true, true, false, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, true, false, true, true, false, true, false, false, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, true, false, true, true, false, true, false, false, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, true, false, true, true, false, true, false, true, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, true, false, true, true, false, true, false, true, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, true, false, true, true, false, true, true, false, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, true, false, true, true, false, true, true, false, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, true, false, true, true, false, true, true, true, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, true, false, true, true, false, true, true, true, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, true, false, true, true, false, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, true, false, true, true, true, false, false, false, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, true, false, true, true, true, false, false, false, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, true, false, true, true, true, false, false, true, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, true, false, true, true, true, false, false, true, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, true, false, true, true, true, false, true, false, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, true, false, true, true, true, false, true, false, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, true, false, true, true, true, false, true, true, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, true, false, true, true, true, false, true, true, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, true, false, true, true, true, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, true, false, true, true, true, true, false, false, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, true, false, true, true, true, true, false, false, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, true, false, true, true, true, true, false, true, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, true, false, true, true, true, true, false, true, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, true, false, true, true, true, true, true, false, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, true, false, true, true, true, true, true, false, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, true, false, true, true, true, true, true, true, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, true, false, true, true, true, true, true, true, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, true, false, true, true, true, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, false, true, false, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, true, true, true, false, false, false, false, false, false, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, true, true, true, false, false, false, false, false, false, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, true, true, true, false, false, false, false, false, true, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, true, true, true, false, false, false, false, false, true, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, true, true, true, false, false, false, false, true, false, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, true, true, true, false, false, false, false, true, false, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, true, true, true, false, false, false, false, true, true, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, true, true, true, false, false, false, false, true, true, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, true, true, true, false, false, false, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, true, true, true, false, false, false, true, false, false, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, true, true, true, false, false, false, true, false, false, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, true, true, true, false, false, false, true, false, true, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, true, true, true, false, false, false, true, false, true, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, true, true, true, false, false, false, true, true, false, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, true, true, true, false, false, false, true, true, false, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, true, true, true, false, false, false, true, true, true, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, true, true, true, false, false, false, true, true, true, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, true, true, true, false, false, false, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, true, true, true, false, false, true, false, false, false, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, true, true, true, false, false, true, false, false, false, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, true, true, true, false, false, true, false, false, true, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, true, true, true, false, false, true, false, false, true, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, true, true, true, false, false, true, false, true, false, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, true, true, true, false, false, true, false, true, false, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, true, true, true, false, false, true, false, true, true, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, true, true, true, false, false, true, false, true, true, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, true, true, true, false, false, true, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, true, true, true, false, false, true, true, false, false, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, true, true, true, false, false, true, true, false, false, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, true, true, true, false, false, true, true, false, true, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, true, true, true, false, false, true, true, false, true, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, true, true, true, false, false, true, true, true, false, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, true, true, true, false, false, true, true, true, false, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, true, true, true, false, false, true, true, true, true, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, true, true, true, false, false, true, true, true, true, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, true, true, true, false, false, true, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, true, true, true, false, true, false, false, false, false, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, true, true, true, false, true, false, false, false, false, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, true, true, true, false, true, false, false, false, true, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, true, true, true, false, true, false, false, false, true, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, true, true, true, false, true, false, false, true, false, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, true, true, true, false, true, false, false, true, false, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, true, true, true, false, true, false, false, true, true, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, true, true, true, false, true, false, false, true, true, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, true, true, true, false, true, false, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, true, true, true, false, true, false, true, false, false, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, true, true, true, false, true, false, true, false, false, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, true, true, true, false, true, false, true, false, true, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, true, true, true, false, true, false, true, false, true, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, true, true, true, false, true, false, true, true, false, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, true, true, true, false, true, false, true, true, false, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, true, true, true, false, true, false, true, true, true, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, true, true, true, false, true, false, true, true, true, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, true, true, true, false, true, false, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, true, true, true, false, true, true, false, false, false, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, true, true, true, false, true, true, false, false, false, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, true, true, true, false, true, true, false, false, true, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, true, true, true, false, true, true, false, false, true, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, true, true, true, false, true, true, false, true, false, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, true, true, true, false, true, true, false, true, false, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, true, true, true, false, true, true, false, true, true, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, true, true, true, false, true, true, false, true, true, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, true, true, true, false, true, true, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, true, true, true, false, true, true, true, false, false, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, true, true, true, false, true, true, true, false, false, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, true, true, true, false, true, true, true, false, true, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, true, true, true, false, true, true, true, false, true, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, true, true, true, false, true, true, true, true, false, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, true, true, true, false, true, true, true, true, false, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, true, true, true, false, true, true, true, true, true, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, true, true, true, false, true, true, true, true, true, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, true, true, true, false, true, true, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, true, true, true, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, true, true, true, true, false, false, false, false, false, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, true, true, true, true, false, false, false, false, false, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, true, true, true, true, false, false, false, false, true, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, true, true, true, true, false, false, false, false, true, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, true, true, true, true, false, false, false, true, false, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, true, true, true, true, false, false, false, true, false, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, true, true, true, true, false, false, false, true, true, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, true, true, true, true, false, false, false, true, true, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, true, true, true, true, false, false, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, true, true, true, true, false, false, true, false, false, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, true, true, true, true, false, false, true, false, false, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, true, true, true, true, false, false, true, false, true, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, true, true, true, true, false, false, true, false, true, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, true, true, true, true, false, false, true, true, false, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, true, true, true, true, false, false, true, true, false, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, true, true, true, true, false, false, true, true, true, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, true, true, true, true, false, false, true, true, true, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, true, true, true, true, false, false, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, true, true, true, true, false, true, false, false, false, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, true, true, true, true, false, true, false, false, false, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, true, true, true, true, false, true, false, false, true, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, true, true, true, true, false, true, false, false, true, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, true, true, true, true, false, true, false, true, false, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, true, true, true, true, false, true, false, true, false, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, true, true, true, true, false, true, false, true, true, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, true, true, true, true, false, true, false, true, true, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, true, true, true, true, false, true, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, true, true, true, true, false, true, true, false, false, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, true, true, true, true, false, true, true, false, false, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, true, true, true, true, false, true, true, false, true, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, true, true, true, true, false, true, true, false, true, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, true, true, true, true, false, true, true, true, false, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, true, true, true, true, false, true, true, true, false, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, true, true, true, true, false, true, true, true, true, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, true, true, true, true, false, true, true, true, true, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, true, true, true, true, false, true, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, true, true, true, true, true, false, false, false, false, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, true, true, true, true, true, false, false, false, false, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, true, true, true, true, true, false, false, false, true, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, true, true, true, true, true, false, false, false, true, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, true, true, true, true, true, false, false, true, false, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, true, true, true, true, true, false, false, true, false, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, true, true, true, true, true, false, false, true, true, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, true, true, true, true, true, false, false, true, true, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, true, true, true, true, true, false, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, true, true, true, true, true, false, true, false, false, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, true, true, true, true, true, false, true, false, false, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, true, true, true, true, true, false, true, false, true, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, true, true, true, true, true, false, true, false, true, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, true, true, true, true, true, false, true, true, false, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, true, true, true, true, true, false, true, true, false, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, true, true, true, true, true, false, true, true, true, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, true, true, true, true, true, false, true, true, true, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, true, true, true, true, true, false, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, true, true, true, true, true, true, false, false, false, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, true, true, true, true, true, true, false, false, false, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, true, true, true, true, true, true, false, false, true, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, true, true, true, true, true, true, false, false, true, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, true, true, true, true, true, true, false, true, false, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, true, true, true, true, true, true, false, true, false, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, true, true, true, true, true, true, false, true, true, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, true, true, true, true, true, true, false, true, true, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, true, true, true, true, true, true, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, true, true, true, true, true, true, true, false, false, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, true, true, true, true, true, true, true, false, false, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, true, true, true, true, true, true, true, false, true, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, true, true, true, true, true, true, true, false, true, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, true, true, true, true, true, true, true, true, false, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, true, true, true, true, true, true, true, true, false, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, true, true, true, true, true, true, true, true, true, false>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, true, true, true, true, true, true, true, true, true, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, true, true, true, true, true, true, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::fillTriangle<true, true, true, true, true, true>(TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*, TinyGL::ZBufferPoint*)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<false, false, false, false, false, false, false, true>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<false, false, false, false, false, false, true, false>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<false, false, false, false, false, false, true, true>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<false, false, false, false, false, true, false, false>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<false, false, false, false, false, true, false, true>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<false, false, false, false, false, true, true, false>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<false, false, false, false, false, true, true, true>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<false, false, false, false, true, false, false, false>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<false, false, false, false, true, false, false, true>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<false, false, false, false, true, false, true, false>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<false, false, false, false, true, false, true, true>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<false, false, false, false, true, true, false, false>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<false, false, false, false, true, true, false, true>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<false, false, false, false, true, true, true, false>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<false, false, false, false, true, true, true, true>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<false, false, false, true, false, false, false, false>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<false, false, false, true, false, false, false, true>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<false, false, false, true, false, false, true, false>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<false, false, false, true, false, false, true, true>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<false, false, false, true, false, true, false, false>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<false, false, false, true, false, true, false, true>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<false, false, false, true, false, true, true, false>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<false, false, false, true, false, true, true, true>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<false, false, false, true, true, false, false, false>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<false, false, false, true, true, false, false, true>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<false, false, false, true, true, false, true, false>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<false, false, false, true, true, false, true, true>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<false, false, false, true, true, true, false, false>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<false, false, false, true, true, true, false, true>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<false, false, false, true, true, true, true, false>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<false, false, false, true, true, true, true, true>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<false, false, true, false, false, false, false, false>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<false, false, true, false, false, false, false, true>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<false, false, true, false, false, false, true, false>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<false, false, true, false, false, false, true, true>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<false, false, true, false, false, true, false, false>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<false, false, true, false, false, true, false, true>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<false, false, true, false, false, true, true, false>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<false, false, true, false, false, true, true, true>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<false, false, true, false, true, false, false, false>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<false, false, true, false, true, false, false, true>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<false, false, true, false, true, false, true, false>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<false, false, true, false, true, false, true, true>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<false, false, true, false, true, true, false, false>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<false, false, true, false, true, true, false, true>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<false, false, true, false, true, true, true, false>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<false, false, true, false, true, true, true, true>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<false, false, true, true, false, false, false, false>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<false, false, true, true, false, false, false, true>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<false, false, true, true, false, false, true, false>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<false, false, true, true, false, false, true, true>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<false, false, true, true, false, true, false, false>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<false, false, true, true, false, true, false, true>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<false, false, true, true, false, true, true, false>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<false, false, true, true, false, true, true, true>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<false, false, true, true, true, false, false, false>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<false, false, true, true, true, false, false, true>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<false, false, true, true, true, false, true, false>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<false, false, true, true, true, false, true, true>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<false, false, true, true, true, true, false, false>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<false, false, true, true, true, true, false, true>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<false, false, true, true, true, true, true, false>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<false, false, true, true, true, true, true, true>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<false, true, false, false, false, false, false, true>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<false, true, false, false, false, false, true, false>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<false, true, false, false, false, false, true, true>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<false, true, false, false, false, true, false, false>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<false, true, false, false, false, true, false, true>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<false, true, false, false, false, true, true, false>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<false, true, false, false, false, true, true, true>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<false, true, false, false, true, false, false, false>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<false, true, false, false, true, false, false, true>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<false, true, false, false, true, false, true, false>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<false, true, false, false, true, false, true, true>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<false, true, false, false, true, true, false, false>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<false, true, false, false, true, true, false, true>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<false, true, false, false, true, true, true, false>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<false, true, false, false, true, true, true, true>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<false, true, false, true, false, false, false, false>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<false, true, false, true, false, false, false, true>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<false, true, false, true, false, false, true, false>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<false, true, false, true, false, false, true, true>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<false, true, false, true, false, true, false, false>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<false, true, false, true, false, true, false, true>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<false, true, false, true, false, true, true, false>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<false, true, false, true, false, true, true, true>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<false, true, false, true, true, false, false, false>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<false, true, false, true, true, false, false, true>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<false, true, false, true, true, false, true, false>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<false, true, false, true, true, false, true, true>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<false, true, false, true, true, true, false, false>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<false, true, false, true, true, true, false, true>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<false, true, false, true, true, true, true, false>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<false, true, false, true, true, true, true, true>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<false, true, true, false, false, false, false, false>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<false, true, true, false, false, false, false, true>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<false, true, true, false, false, false, true, false>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<false, true, true, false, false, false, true, true>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<false, true, true, false, false, true, false, false>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<false, true, true, false, false, true, false, true>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<false, true, true, false, false, true, true, false>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<false, true, true, false, false, true, true, true>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<false, true, true, false, true, false, false, false>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<false, true, true, false, true, false, false, true>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<false, true, true, false, true, false, true, false>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<false, true, true, false, true, false, true, true>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<false, true, true, false, true, true, false, false>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<false, true, true, false, true, true, false, true>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<false, true, true, false, true, true, true, false>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<false, true, true, false, true, true, true, true>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<false, true, true, true, false, false, false, false>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<false, true, true, true, false, false, false, true>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<false, true, true, true, false, false, true, false>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<false, true, true, true, false, false, true, true>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<false, true, true, true, false, true, false, false>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<false, true, true, true, false, true, false, true>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<false, true, true, true, false, true, true, false>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<false, true, true, true, false, true, true, true>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<false, true, true, true, true, false, false, false>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<false, true, true, true, true, false, false, true>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<false, true, true, true, true, false, true, false>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<false, true, true, true, true, false, true, true>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<false, true, true, true, true, true, false, false>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<false, true, true, true, true, true, false, true>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<false, true, true, true, true, true, true, false>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<false, true, true, true, true, true, true, true>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<true, false, false, false, false, false, false, true>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<true, false, false, false, false, false, true, false>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<true, false, false, false, false, false, true, true>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<true, false, false, false, false, true, false, false>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<true, false, false, false, false, true, false, true>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<true, false, false, false, false, true, true, false>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<true, false, false, false, false, true, true, true>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<true, false, false, false, true, false, false, false>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<true, false, false, false, true, false, false, true>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<true, false, false, false, true, false, true, false>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<true, false, false, false, true, false, true, true>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<true, false, false, false, true, true, false, false>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<true, false, false, false, true, true, false, true>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<true, false, false, false, true, true, true, false>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<true, false, false, false, true, true, true, true>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<true, false, false, true, false, false, false, false>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<true, false, false, true, false, false, false, true>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<true, false, false, true, false, false, true, false>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<true, false, false, true, false, false, true, true>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<true, false, false, true, false, true, false, false>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<true, false, false, true, false, true, false, true>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<true, false, false, true, false, true, true, false>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<true, false, false, true, false, true, true, true>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<true, false, false, true, true, false, false, false>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<true, false, false, true, true, false, false, true>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<true, false, false, true, true, false, true, false>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<true, false, false, true, true, false, true, true>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<true, false, false, true, true, true, false, false>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<true, false, false, true, true, true, false, true>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<true, false, false, true, true, true, true, false>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<true, false, false, true, true, true, true, true>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<true, false, true, false, false, false, false, false>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<true, false, true, false, false, false, false, true>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<true, false, true, false, false, false, true, false>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<true, false, true, false, false, false, true, true>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<true, false, true, false, false, true, false, false>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<true, false, true, false, false, true, false, true>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<true, false, true, false, false, true, true, false>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<true, false, true, false, false, true, true, true>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<true, false, true, false, true, false, false, false>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<true, false, true, false, true, false, false, true>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<true, false, true, false, true, false, true, false>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<true, false, true, false, true, false, true, true>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<true, false, true, false, true, true, false, false>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<true, false, true, false, true, true, false, true>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<true, false, true, false, true, true, true, false>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<true, false, true, false, true, true, true, true>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<true, false, true, true, false, false, false, false>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<true, false, true, true, false, false, false, true>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<true, false, true, true, false, false, true, false>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<true, false, true, true, false, false, true, true>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<true, false, true, true, false, true, false, false>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<true, false, true, true, false, true, false, true>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<true, false, true, true, false, true, true, false>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<true, false, true, true, false, true, true, true>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<true, false, true, true, true, false, false, false>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<true, false, true, true, true, false, false, true>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<true, false, true, true, true, false, true, false>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<true, false, true, true, true, false, true, true>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<true, false, true, true, true, true, false, false>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<true, false, true, true, true, true, false, true>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<true, false, true, true, true, true, true, false>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<true, false, true, true, true, true, true, true>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<true, true, false, false, false, false, false, false>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<true, true, false, false, false, false, false, true>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<true, true, false, false, false, false, true, false>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<true, true, false, false, false, false, true, true>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<true, true, false, false, false, true, false, false>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<true, true, false, false, false, true, false, true>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<true, true, false, false, false, true, true, false>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<true, true, false, false, false, true, true, true>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<true, true, false, false, true, false, false, false>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<true, true, false, false, true, false, false, true>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<true, true, false, false, true, false, true, false>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<true, true, false, false, true, false, true, true>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<true, true, false, false, true, true, false, false>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<true, true, false, false, true, true, false, true>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<true, true, false, false, true, true, true, false>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<true, true, false, false, true, true, true, true>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<true, true, false, true, false, false, false, false>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<true, true, false, true, false, false, false, true>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<true, true, false, true, false, false, true, false>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<true, true, false, true, false, false, true, true>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<true, true, false, true, false, true, false, false>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<true, true, false, true, false, true, false, true>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<true, true, false, true, false, true, true, false>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<true, true, false, true, false, true, true, true>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<true, true, false, true, true, false, false, false>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<true, true, false, true, true, false, false, true>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<true, true, false, true, true, false, true, false>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<true, true, false, true, true, false, true, true>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<true, true, false, true, true, true, false, false>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<true, true, false, true, true, true, false, true>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<true, true, false, true, true, true, true, false>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<true, true, false, true, true, true, true, true>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<true, true, true, false, false, false, false, false>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<true, true, true, false, false, false, false, true>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<true, true, true, false, false, false, true, false>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<true, true, true, false, false, false, true, true>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<true, true, true, false, false, true, false, false>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<true, true, true, false, false, true, false, true>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<true, true, true, false, false, true, true, false>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<true, true, true, false, false, true, true, true>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<true, true, true, false, true, false, false, false>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<true, true, true, false, true, false, false, true>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<true, true, true, false, true, false, true, false>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<true, true, true, false, true, false, true, true>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<true, true, true, false, true, true, false, false>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<true, true, true, false, true, true, false, true>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<true, true, true, false, true, true, true, false>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<true, true, true, false, true, true, true, true>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<true, true, true, true, false, false, false, false>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<true, true, true, true, false, false, false, true>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<true, true, true, true, false, false, true, false>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<true, true, true, true, false, false, true, true>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<true, true, true, true, false, true, false, false>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<true, true, true, true, false, true, false, true>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<true, true, true, true, false, true, true, false>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<true, true, true, true, false, true, true, true>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<true, true, true, true, true, false, false, false>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<true, true, true, true, true, false, false, true>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<true, true, true, true, true, false, true, false>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<true, true, true, true, true, false, true, true>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<true, true, true, true, true, true, false, false>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<true, true, true, true, true, true, false, true>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<true, true, true, true, true, true, true, false>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelNoTexture<true, true, true, true, true, true, true, true>(int, unsigned int*, unsigned char*, int, int, int, unsigned int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<false, true, false, false, false, false, false, false, false>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<false, true, false, false, false, false, false, false, true>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<false, true, false, false, false, false, false, true, false>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<false, true, false, false, false, false, false, true, true>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<false, true, false, false, false, false, true, false, false>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<false, true, false, false, false, false, true, false, true>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<false, true, false, false, false, false, true, true, false>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<false, true, false, false, false, false, true, true, true>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<false, true, false, false, false, true, false, false, false>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<false, true, false, false, false, true, false, false, true>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<false, true, false, false, false, true, false, true, false>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<false, true, false, false, false, true, false, true, true>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<false, true, false, false, false, true, true, false, false>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<false, true, false, false, false, true, true, false, true>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<false, true, false, false, false, true, true, true, false>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<false, true, false, false, false, true, true, true, true>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<false, true, false, false, true, false, false, false, false>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<false, true, false, false, true, false, false, false, true>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<false, true, false, false, true, false, false, true, false>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<false, true, false, false, true, false, false, true, true>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<false, true, false, false, true, false, true, false, false>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<false, true, false, false, true, false, true, false, true>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<false, true, false, false, true, false, true, true, false>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<false, true, false, false, true, false, true, true, true>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<false, true, false, false, true, true, false, false, false>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<false, true, false, false, true, true, false, false, true>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<false, true, false, false, true, true, false, true, false>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<false, true, false, false, true, true, false, true, true>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<false, true, false, false, true, true, true, false, false>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<false, true, false, false, true, true, true, false, true>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<false, true, false, false, true, true, true, true, false>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<false, true, false, false, true, true, true, true, true>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<false, true, false, true, false, false, false, false, false>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<false, true, false, true, false, false, false, false, true>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<false, true, false, true, false, false, false, true, false>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<false, true, false, true, false, false, false, true, true>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<false, true, false, true, false, false, true, false, false>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<false, true, false, true, false, false, true, false, true>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<false, true, false, true, false, false, true, true, false>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<false, true, false, true, false, false, true, true, true>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<false, true, false, true, false, true, false, false, false>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<false, true, false, true, false, true, false, false, true>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<false, true, false, true, false, true, false, true, false>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<false, true, false, true, false, true, false, true, true>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<false, true, false, true, false, true, true, false, false>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<false, true, false, true, false, true, true, false, true>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<false, true, false, true, false, true, true, true, false>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<false, true, false, true, false, true, true, true, true>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<false, true, false, true, true, false, false, false, false>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<false, true, false, true, true, false, false, false, true>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<false, true, false, true, true, false, false, true, false>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<false, true, false, true, true, false, false, true, true>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<false, true, false, true, true, false, true, false, false>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<false, true, false, true, true, false, true, false, true>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<false, true, false, true, true, false, true, true, false>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<false, true, false, true, true, false, true, true, true>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<false, true, false, true, true, true, false, false, false>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<false, true, false, true, true, true, false, false, true>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<false, true, false, true, true, true, false, true, false>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<false, true, false, true, true, true, false, true, true>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<false, true, false, true, true, true, true, false, false>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<false, true, false, true, true, true, true, false, true>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<false, true, false, true, true, true, true, true, false>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<false, true, false, true, true, true, true, true, true>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<false, true, true, false, false, false, false, false, false>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<false, true, true, false, false, false, false, false, true>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<false, true, true, false, false, false, false, true, false>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<false, true, true, false, false, false, false, true, true>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<false, true, true, false, false, false, true, false, false>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<false, true, true, false, false, false, true, false, true>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<false, true, true, false, false, false, true, true, false>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<false, true, true, false, false, false, true, true, true>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<false, true, true, false, false, true, false, false, false>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<false, true, true, false, false, true, false, false, true>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<false, true, true, false, false, true, false, true, false>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<false, true, true, false, false, true, false, true, true>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<false, true, true, false, false, true, true, false, false>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<false, true, true, false, false, true, true, false, true>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<false, true, true, false, false, true, true, true, false>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<false, true, true, false, false, true, true, true, true>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<false, true, true, false, true, false, false, false, false>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<false, true, true, false, true, false, false, false, true>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<false, true, true, false, true, false, false, true, false>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<false, true, true, false, true, false, false, true, true>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<false, true, true, false, true, false, true, false, false>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<false, true, true, false, true, false, true, false, true>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<false, true, true, false, true, false, true, true, false>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<false, true, true, false, true, false, true, true, true>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<false, true, true, false, true, true, false, false, false>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<false, true, true, false, true, true, false, false, true>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<false, true, true, false, true, true, false, true, false>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<false, true, true, false, true, true, false, true, true>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<false, true, true, false, true, true, true, false, false>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<false, true, true, false, true, true, true, false, true>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<false, true, true, false, true, true, true, true, false>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<false, true, true, false, true, true, true, true, true>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<false, true, true, true, false, false, false, false, false>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<false, true, true, true, false, false, false, false, true>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<false, true, true, true, false, false, false, true, false>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<false, true, true, true, false, false, false, true, true>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<false, true, true, true, false, false, true, false, false>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<false, true, true, true, false, false, true, false, true>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<false, true, true, true, false, false, true, true, false>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<false, true, true, true, false, false, true, true, true>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<false, true, true, true, false, true, false, false, false>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<false, true, true, true, false, true, false, false, true>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<false, true, true, true, false, true, false, true, false>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<false, true, true, true, false, true, false, true, true>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<false, true, true, true, false, true, true, false, false>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<false, true, true, true, false, true, true, false, true>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<false, true, true, true, false, true, true, true, false>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<false, true, true, true, false, true, true, true, true>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<false, true, true, true, true, false, false, false, false>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<false, true, true, true, true, false, false, false, true>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<false, true, true, true, true, false, false, true, false>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<false, true, true, true, true, false, false, true, true>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<false, true, true, true, true, false, true, false, false>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<false, true, true, true, true, false, true, false, true>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<false, true, true, true, true, false, true, true, false>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<false, true, true, true, true, false, true, true, true>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<false, true, true, true, true, true, false, false, false>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<false, true, true, true, true, true, false, false, true>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<false, true, true, true, true, true, false, true, false>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<false, true, true, true, true, true, false, true, true>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<false, true, true, true, true, true, true, false, false>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<false, true, true, true, true, true, true, false, true>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<false, true, true, true, true, true, true, true, false>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<false, true, true, true, true, true, true, true, true>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<true, true, false, false, false, false, false, false, false>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<true, true, false, false, false, false, false, false, true>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<true, true, false, false, false, false, false, true, false>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<true, true, false, false, false, false, false, true, true>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<true, true, false, false, false, false, true, false, false>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<true, true, false, false, false, false, true, false, true>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<true, true, false, false, false, false, true, true, false>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<true, true, false, false, false, false, true, true, true>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<true, true, false, false, false, true, false, false, false>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<true, true, false, false, false, true, false, false, true>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<true, true, false, false, false, true, false, true, false>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<true, true, false, false, false, true, false, true, true>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<true, true, false, false, false, true, true, false, false>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<true, true, false, false, false, true, true, false, true>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<true, true, false, false, false, true, true, true, false>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<true, true, false, false, false, true, true, true, true>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<true, true, false, false, true, false, false, false, false>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<true, true, false, false, true, false, false, false, true>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<true, true, false, false, true, false, false, true, false>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<true, true, false, false, true, false, false, true, true>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<true, true, false, false, true, false, true, false, false>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<true, true, false, false, true, false, true, false, true>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<true, true, false, false, true, false, true, true, false>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<true, true, false, false, true, false, true, true, true>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<true, true, false, false, true, true, false, false, false>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<true, true, false, false, true, true, false, false, true>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<true, true, false, false, true, true, false, true, false>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<true, true, false, false, true, true, false, true, true>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<true, true, false, false, true, true, true, false, false>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<true, true, false, false, true, true, true, false, true>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<true, true, false, false, true, true, true, true, false>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<true, true, false, false, true, true, true, true, true>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<true, true, false, true, false, false, false, false, false>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<true, true, false, true, false, false, false, false, true>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<true, true, false, true, false, false, false, true, false>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<true, true, false, true, false, false, false, true, true>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<true, true, false, true, false, false, true, false, false>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<true, true, false, true, false, false, true, false, true>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<true, true, false, true, false, false, true, true, false>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<true, true, false, true, false, false, true, true, true>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<true, true, false, true, false, true, false, false, false>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<true, true, false, true, false, true, false, false, true>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<true, true, false, true, false, true, false, true, false>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<true, true, false, true, false, true, false, true, true>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<true, true, false, true, false, true, true, false, false>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<true, true, false, true, false, true, true, false, true>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<true, true, false, true, false, true, true, true, false>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<true, true, false, true, false, true, true, true, true>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<true, true, false, true, true, false, false, false, false>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<true, true, false, true, true, false, false, false, true>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<true, true, false, true, true, false, false, true, false>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<true, true, false, true, true, false, false, true, true>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<true, true, false, true, true, false, true, false, false>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<true, true, false, true, true, false, true, false, true>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<true, true, false, true, true, false, true, true, false>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<true, true, false, true, true, false, true, true, true>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<true, true, false, true, true, true, false, false, false>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<true, true, false, true, true, true, false, false, true>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<true, true, false, true, true, true, false, true, false>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<true, true, false, true, true, true, false, true, true>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<true, true, false, true, true, true, true, false, false>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<true, true, false, true, true, true, true, false, true>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<true, true, false, true, true, true, true, true, false>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<true, true, false, true, true, true, true, true, true>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<true, true, true, false, false, false, false, false, false>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<true, true, true, false, false, false, false, false, true>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<true, true, true, false, false, false, false, true, false>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<true, true, true, false, false, false, false, true, true>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<true, true, true, false, false, false, true, false, false>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<true, true, true, false, false, false, true, false, true>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<true, true, true, false, false, false, true, true, false>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<true, true, true, false, false, false, true, true, true>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<true, true, true, false, false, true, false, false, false>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<true, true, true, false, false, true, false, false, true>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<true, true, true, false, false, true, false, true, false>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<true, true, true, false, false, true, false, true, true>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<true, true, true, false, false, true, true, false, false>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<true, true, true, false, false, true, true, false, true>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<true, true, true, false, false, true, true, true, false>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<true, true, true, false, false, true, true, true, true>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<true, true, true, false, true, false, false, false, false>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<true, true, true, false, true, false, false, false, true>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<true, true, true, false, true, false, false, true, false>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<true, true, true, false, true, false, false, true, true>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<true, true, true, false, true, false, true, false, false>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<true, true, true, false, true, false, true, false, true>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<true, true, true, false, true, false, true, true, false>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<true, true, true, false, true, false, true, true, true>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<true, true, true, false, true, true, false, false, false>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<true, true, true, false, true, true, false, false, true>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<true, true, true, false, true, true, false, true, false>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<true, true, true, false, true, true, false, true, true>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<true, true, true, false, true, true, true, false, false>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<true, true, true, false, true, true, true, false, true>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<true, true, true, false, true, true, true, true, false>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<true, true, true, false, true, true, true, true, true>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<true, true, true, true, false, false, false, false, false>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<true, true, true, true, false, false, false, false, true>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<true, true, true, true, false, false, false, true, false>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<true, true, true, true, false, false, false, true, true>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<true, true, true, true, false, false, true, false, false>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<true, true, true, true, false, false, true, false, true>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<true, true, true, true, false, false, true, true, false>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<true, true, true, true, false, false, true, true, true>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<true, true, true, true, false, true, false, false, false>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<true, true, true, true, false, true, false, false, true>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<true, true, true, true, false, true, false, true, false>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<true, true, true, true, false, true, false, true, true>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<true, true, true, true, false, true, true, false, false>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<true, true, true, true, false, true, true, false, true>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<true, true, true, true, false, true, true, true, false>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<true, true, true, true, false, true, true, true, true>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<true, true, true, true, true, false, false, false, false>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<true, true, true, true, true, false, false, false, true>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<true, true, true, true, true, false, false, true, false>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<true, true, true, true, true, false, false, true, true>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<true, true, true, true, true, false, true, false, false>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<true, true, true, true, true, false, true, false, true>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<true, true, true, true, true, false, true, true, false>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<true, true, true, true, true, false, true, true, true>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<true, true, true, true, true, true, false, false, false>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<true, true, true, true, true, true, false, false, true>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<true, true, true, true, true, true, false, true, false>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<true, true, true, true, true, true, false, true, true>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<true, true, true, true, true, true, true, false, false>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<true, true, true, true, true, true, true, false, true>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<true, true, true, true, true, true, true, true, false>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::FrameBuffer::putPixelTexture<true, true, true, true, true, true, true, true, true>(int, TinyGL::TexelBuffer const*, unsigned int, unsigned int, unsigned int*, unsigned char*, int, int, int, unsigned int&, int&, int&, unsigned int&, unsigned int&, unsigned int&, unsigned int&, int&, int&, int&, int&, int&, int&, unsigned int, unsigned int&, int, int, int, int&)",
  "void TinyGL::Internal::tglBlit<false, false, false>(TinyGL::BlitImage*, TinyGL::BlitTransform const&, bool)",
  "void TinyGL::Internal::tglBlit<false, false, true, false>(TinyGL::BlitImage*, TinyGL::BlitTransform const&)",
  "void TinyGL::Internal::tglBlit<false, false, true, true>(TinyGL::BlitImage*, TinyGL::BlitTransform const&)",
  "void TinyGL::Internal::tglBlit<false, true, false>(TinyGL::BlitImage*, TinyGL::BlitTransform const&, bool)",
  "void TinyGL::Internal::tglBlit<false, true, true, false>(TinyGL::BlitImage*, TinyGL::BlitTransform const&)",
  "void TinyGL::Internal::tglBlit<false, true, true, true>(TinyGL::BlitImage*, TinyGL::BlitTransform const&)",
  "void TinyGL::Internal::tglBlit<true, false, false>(TinyGL::BlitImage*, TinyGL::BlitTransform const&, bool)",
  "void TinyGL::Internal::tglBlit<true, false, true, false>(TinyGL::BlitImage*, TinyGL::BlitTransform const&)",
  "void TinyGL::Internal::tglBlit<true, false, true, true>(TinyGL::BlitImage*, TinyGL::BlitTransform const&)",
  "void TinyGL::Internal::tglBlit<true, true, false>(TinyGL::BlitImage*, TinyGL::BlitTransform const&, bool)",
  "void TinyGL::Internal::tglBlit<true, true, true, false>(TinyGL::BlitImage*, TinyGL::BlitTransform const&)",
  "void TinyGL::Internal::tglBlit<true, true, true, true>(TinyGL::BlitImage*, TinyGL::BlitTransform const&)",
  "void Video::BinkDecoder::BinkVideoTrack::readDCS<11, false>(Video::BinkDecoder::VideoFrame&, Video::BinkDecoder::BinkVideoTrack::Bundle&)",
  "void Video::BinkDecoder::BinkVideoTrack::readDCS<11, true>(Video::BinkDecoder::VideoFrame&, Video::BinkDecoder::BinkVideoTrack::Bundle&)",
  "void std::__2::(anonymous namespace)::throw_helper<std::invalid_argument>(std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>> const&)",
  "void std::__2::(anonymous namespace)::throw_helper<std::out_of_range>(std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>> const&)",
  "void std::__2::__call_once_param<std::__2::tuple<std::__2::(anonymous namespace)::__fake_bind&&>>::__execute[abi:v15006]<>(std::__2::__tuple_indices<>)",
  "void std::__2::__call_once_proxy[abi:v15006]<std::__2::tuple<std::__2::(anonymous namespace)::__fake_bind&&>>(void*)",
  "void std::__2::__double_or_nothing<char>(std::__2::unique_ptr<char, void (*)(void*)>&, char*&, char*&)",
  "void std::__2::__double_or_nothing<unsigned int>(std::__2::unique_ptr<unsigned int, void (*)(void*)>&, unsigned int*&, unsigned int*&)",
  "void std::__2::__double_or_nothing<wchar_t>(std::__2::unique_ptr<wchar_t, void (*)(void*)>&, wchar_t*&, wchar_t*&)",
  "void std::__2::__fs::filesystem::_PathCVT<char>::__append_source[abi:v15006]<char [1]>(std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>>&, char const (&) [1])",
  "void std::__2::__fs::filesystem::_PathCVT<char>::__append_source[abi:v15006]<char [2]>(std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>>&, char const (&) [2])",
  "void std::__2::__fs::filesystem::_PathCVT<char>::__append_source[abi:v15006]<char [3]>(std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>>&, char const (&) [3])",
  "void std::__2::__fs::filesystem::_PathCVT<char>::__append_source[abi:v15006]<char const*>(std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>>&, char const* const&)",
  "void std::__2::__fs::filesystem::_PathCVT<char>::__append_source[abi:v15006]<char*>(std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>>&, char* const&)",
  "void std::__2::__fs::filesystem::_PathCVT<char>::__append_source[abi:v15006]<std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>>>(std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>>&, std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>> const&)",
  "void std::__2::__fs::filesystem::_PathCVT<char>::__append_source[abi:v15006]<std::__2::basic_string_view<char, std::__2::char_traits<char>>>(std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>>&, std::__2::basic_string_view<char, std::__2::char_traits<char>> const&)",
  "void std::__2::__init_pat<char>(std::__2::money_base::pattern&, std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char>>&, bool, char, char, char, char)",
  "void std::__2::__init_pat<wchar_t>(std::__2::money_base::pattern&, std::__2::basic_string<wchar_t, std::__2::char_traits<wchar_t>, std::__2::allocator<wchar_t>>&, bool, char, char, char, wchar_t)",
  "void std::__2::allocator_traits<std::__2::allocator<std::__2::__fs::filesystem::__dir_stream>>::construct[abi:v15006]<std::__2::__fs::filesystem::__dir_stream, std::__2::__fs::filesystem::path const&, std::__2::__fs::filesystem::directory_options&, std::__2::error_code&, void, void>(std::__2::allocator<std::__2::__fs::filesystem::__dir_stream>&, std::__2::__fs::filesystem::__dir_stream*, std::__2::__fs::filesystem::path const&, std::__2::__fs::filesystem::directory_options&, std::__2::error_code&)",
  "void std::__2::call_once[abi:v15006]<std::__2::(anonymous namespace)::__fake_bind>(std::__2::once_flag&, std::__2::(anonymous namespace)::__fake_bind&&)",
  "void std::__2::locale::__imp::install<std::__2::codecvt<char, char, __mbstate_t>>(std::__2::codecvt<char, char, __mbstate_t>*)",
  "void std::__2::locale::__imp::install<std::__2::codecvt<char16_t, char, __mbstate_t>>(std::__2::codecvt<char16_t, char, __mbstate_t>*)",
  "void std::__2::locale::__imp::install<std::__2::codecvt<char16_t, char8_t, __mbstate_t>>(std::__2::codecvt<char16_t, char8_t, __mbstate_t>*)",
  "void std::__2::locale::__imp::install<std::__2::codecvt<char32_t, char, __mbstate_t>>(std::__2::codecvt<char32_t, char, __mbstate_t>*)",
  "void std::__2::locale::__imp::install<std::__2::codecvt<char32_t, char8_t, __mbstate_t>>(std::__2::codecvt<char32_t, char8_t, __mbstate_t>*)",
  "void std::__2::locale::__imp::install<std::__2::codecvt<wchar_t, char, __mbstate_t>>(std::__2::codecvt<wchar_t, char, __mbstate_t>*)",
  "void std::__2::locale::__imp::install<std::__2::codecvt_byname<char, char, __mbstate_t>>(std::__2::codecvt_byname<char, char, __mbstate_t>*)",
  "void std::__2::locale::__imp::install<std::__2::codecvt_byname<char16_t, char, __mbstate_t>>(std::__2::codecvt_byname<char16_t, char, __mbstate_t>*)",
  "void std::__2::locale::__imp::install<std::__2::codecvt_byname<char16_t, char8_t, __mbstate_t>>(std::__2::codecvt_byname<char16_t, char8_t, __mbstate_t>*)",
  "void std::__2::locale::__imp::install<std::__2::codecvt_byname<char32_t, char, __mbstate_t>>(std::__2::codecvt_byname<char32_t, char, __mbstate_t>*)",
  "void std::__2::locale::__imp::install<std::__2::codecvt_byname<char32_t, char8_t, __mbstate_t>>(std::__2::codecvt_byname<char32_t, char8_t, __mbstate_t>*)",
  "void std::__2::locale::__imp::install<std::__2::codecvt_byname<wchar_t, char, __mbstate_t>>(std::__2::codecvt_byname<wchar_t, char, __mbstate_t>*)",
  "void std::__2::locale::__imp::install<std::__2::collate<char>>(std::__2::collate<char>*)",
  "void std::__2::locale::__imp::install<std::__2::collate<wchar_t>>(std::__2::collate<wchar_t>*)",
  "void std::__2::locale::__imp::install<std::__2::collate_byname<char>>(std::__2::collate_byname<char>*)",
  "void std::__2::locale::__imp::install<std::__2::collate_byname<wchar_t>>(std::__2::collate_byname<wchar_t>*)",
  "void std::__2::locale::__imp::install<std::__2::ctype<char>>(std::__2::ctype<char>*)",
  "void std::__2::locale::__imp::install<std::__2::ctype<wchar_t>>(std::__2::ctype<wchar_t>*)",
  "void std::__2::locale::__imp::install<std::__2::ctype_byname<char>>(std::__2::ctype_byname<char>*)",
  "void std::__2::locale::__imp::install<std::__2::ctype_byname<wchar_t>>(std::__2::ctype_byname<wchar_t>*)",
  "void std::__2::locale::__imp::install<std::__2::messages<char>>(std::__2::messages<char>*)",
  "void std::__2::locale::__imp::install<std::__2::messages<wchar_t>>(std::__2::messages<wchar_t>*)",
  "void std::__2::locale::__imp::install<std::__2::messages_byname<char>>(std::__2::messages_byname<char>*)",
  "void std::__2::locale::__imp::install<std::__2::messages_byname<wchar_t>>(std::__2::messages_byname<wchar_t>*)",
  "void std::__2::locale::__imp::install<std::__2::money_get<char, std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>>>(std::__2::money_get<char, std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>>*)",
  "void std::__2::locale::__imp::install<std::__2::money_get<wchar_t, std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>>>(std::__2::money_get<wchar_t, std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>>*)",
  "void std::__2::locale::__imp::install<std::__2::money_put<char, std::__2::ostreambuf_iterator<char, std::__2::char_traits<char>>>>(std::__2::money_put<char, std::__2::ostreambuf_iterator<char, std::__2::char_traits<char>>>*)",
  "void std::__2::locale::__imp::install<std::__2::money_put<wchar_t, std::__2::ostreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>>>(std::__2::money_put<wchar_t, std::__2::ostreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>>*)",
  "void std::__2::locale::__imp::install<std::__2::moneypunct<char, false>>(std::__2::moneypunct<char, false>*)",
  "void std::__2::locale::__imp::install<std::__2::moneypunct<char, true>>(std::__2::moneypunct<char, true>*)",
  "void std::__2::locale::__imp::install<std::__2::moneypunct<wchar_t, false>>(std::__2::moneypunct<wchar_t, false>*)",
  "void std::__2::locale::__imp::install<std::__2::moneypunct<wchar_t, true>>(std::__2::moneypunct<wchar_t, true>*)",
  "void std::__2::locale::__imp::install<std::__2::moneypunct_byname<char, false>>(std::__2::moneypunct_byname<char, false>*)",
  "void std::__2::locale::__imp::install<std::__2::moneypunct_byname<char, true>>(std::__2::moneypunct_byname<char, true>*)",
  "void std::__2::locale::__imp::install<std::__2::moneypunct_byname<wchar_t, false>>(std::__2::moneypunct_byname<wchar_t, false>*)",
  "void std::__2::locale::__imp::install<std::__2::moneypunct_byname<wchar_t, true>>(std::__2::moneypunct_byname<wchar_t, true>*)",
  "void std::__2::locale::__imp::install<std::__2::num_get<char, std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>>>(std::__2::num_get<char, std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>>*)",
  "void std::__2::locale::__imp::install<std::__2::num_get<wchar_t, std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>>>(std::__2::num_get<wchar_t, std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>>*)",
  "void std::__2::locale::__imp::install<std::__2::num_put<char, std::__2::ostreambuf_iterator<char, std::__2::char_traits<char>>>>(std::__2::num_put<char, std::__2::ostreambuf_iterator<char, std::__2::char_traits<char>>>*)",
  "void std::__2::locale::__imp::install<std::__2::num_put<wchar_t, std::__2::ostreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>>>(std::__2::num_put<wchar_t, std::__2::ostreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>>*)",
  "void std::__2::locale::__imp::install<std::__2::numpunct<char>>(std::__2::numpunct<char>*)",
  "void std::__2::locale::__imp::install<std::__2::numpunct<wchar_t>>(std::__2::numpunct<wchar_t>*)",
  "void std::__2::locale::__imp::install<std::__2::numpunct_byname<char>>(std::__2::numpunct_byname<char>*)",
  "void std::__2::locale::__imp::install<std::__2::numpunct_byname<wchar_t>>(std::__2::numpunct_byname<wchar_t>*)",
  "void std::__2::locale::__imp::install<std::__2::time_get<char, std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>>>(std::__2::time_get<char, std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>>*)",
  "void std::__2::locale::__imp::install<std::__2::time_get<wchar_t, std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>>>(std::__2::time_get<wchar_t, std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>>*)",
  "void std::__2::locale::__imp::install<std::__2::time_get_byname<char, std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>>>(std::__2::time_get_byname<char, std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>>*)",
  "void std::__2::locale::__imp::install<std::__2::time_get_byname<wchar_t, std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>>>(std::__2::time_get_byname<wchar_t, std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>>*)",
  "void std::__2::locale::__imp::install<std::__2::time_put<char, std::__2::ostreambuf_iterator<char, std::__2::char_traits<char>>>>(std::__2::time_put<char, std::__2::ostreambuf_iterator<char, std::__2::char_traits<char>>>*)",
  "void std::__2::locale::__imp::install<std::__2::time_put<wchar_t, std::__2::ostreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>>>(std::__2::time_put<wchar_t, std::__2::ostreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>>*)",
  "void std::__2::locale::__imp::install<std::__2::time_put_byname<char, std::__2::ostreambuf_iterator<char, std::__2::char_traits<char>>>>(std::__2::time_put_byname<char, std::__2::ostreambuf_iterator<char, std::__2::char_traits<char>>>*)",
  "void std::__2::locale::__imp::install<std::__2::time_put_byname<wchar_t, std::__2::ostreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>>>(std::__2::time_put_byname<wchar_t, std::__2::ostreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>>*)",
  "void std::__2::locale::__imp::install_from<std::__2::codecvt<char, char, __mbstate_t>>(std::__2::locale::__imp const&)",
  "void std::__2::locale::__imp::install_from<std::__2::codecvt<char16_t, char, __mbstate_t>>(std::__2::locale::__imp const&)",
  "void std::__2::locale::__imp::install_from<std::__2::codecvt<char16_t, char8_t, __mbstate_t>>(std::__2::locale::__imp const&)",
  "void std::__2::locale::__imp::install_from<std::__2::codecvt<char32_t, char, __mbstate_t>>(std::__2::locale::__imp const&)",
  "void std::__2::locale::__imp::install_from<std::__2::codecvt<char32_t, char8_t, __mbstate_t>>(std::__2::locale::__imp const&)",
  "void std::__2::locale::__imp::install_from<std::__2::codecvt<wchar_t, char, __mbstate_t>>(std::__2::locale::__imp const&)",
  "void std::__2::locale::__imp::install_from<std::__2::collate<char>>(std::__2::locale::__imp const&)",
  "void std::__2::locale::__imp::install_from<std::__2::collate<wchar_t>>(std::__2::locale::__imp const&)",
  "void std::__2::locale::__imp::install_from<std::__2::ctype<char>>(std::__2::locale::__imp const&)",
  "void std::__2::locale::__imp::install_from<std::__2::ctype<wchar_t>>(std::__2::locale::__imp const&)",
  "void std::__2::locale::__imp::install_from<std::__2::messages<char>>(std::__2::locale::__imp const&)",
  "void std::__2::locale::__imp::install_from<std::__2::messages<wchar_t>>(std::__2::locale::__imp const&)",
  "void std::__2::locale::__imp::install_from<std::__2::money_get<char, std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>>>(std::__2::locale::__imp const&)",
  "void std::__2::locale::__imp::install_from<std::__2::money_get<wchar_t, std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>>>(std::__2::locale::__imp const&)",
  "void std::__2::locale::__imp::install_from<std::__2::money_put<char, std::__2::ostreambuf_iterator<char, std::__2::char_traits<char>>>>(std::__2::locale::__imp const&)",
  "void std::__2::locale::__imp::install_from<std::__2::money_put<wchar_t, std::__2::ostreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>>>(std::__2::locale::__imp const&)",
  "void std::__2::locale::__imp::install_from<std::__2::moneypunct<char, false>>(std::__2::locale::__imp const&)",
  "void std::__2::locale::__imp::install_from<std::__2::moneypunct<char, true>>(std::__2::locale::__imp const&)",
  "void std::__2::locale::__imp::install_from<std::__2::moneypunct<wchar_t, false>>(std::__2::locale::__imp const&)",
  "void std::__2::locale::__imp::install_from<std::__2::moneypunct<wchar_t, true>>(std::__2::locale::__imp const&)",
  "void std::__2::locale::__imp::install_from<std::__2::num_get<char, std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>>>(std::__2::locale::__imp const&)",
  "void std::__2::locale::__imp::install_from<std::__2::num_get<wchar_t, std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>>>(std::__2::locale::__imp const&)",
  "void std::__2::locale::__imp::install_from<std::__2::num_put<char, std::__2::ostreambuf_iterator<char, std::__2::char_traits<char>>>>(std::__2::locale::__imp const&)",
  "void std::__2::locale::__imp::install_from<std::__2::num_put<wchar_t, std::__2::ostreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>>>(std::__2::locale::__imp const&)",
  "void std::__2::locale::__imp::install_from<std::__2::numpunct<char>>(std::__2::locale::__imp const&)",
  "void std::__2::locale::__imp::install_from<std::__2::numpunct<wchar_t>>(std::__2::locale::__imp const&)",
  "void std::__2::locale::__imp::install_from<std::__2::time_get<char, std::__2::istreambuf_iterator<char, std::__2::char_traits<char>>>>(std::__2::locale::__imp const&)",
  "void std::__2::locale::__imp::install_from<std::__2::time_get<wchar_t, std::__2::istreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>>>(std::__2::locale::__imp const&)",
  "void std::__2::locale::__imp::install_from<std::__2::time_put<char, std::__2::ostreambuf_iterator<char, std::__2::char_traits<char>>>>(std::__2::locale::__imp const&)",
  "void std::__2::locale::__imp::install_from<std::__2::time_put<wchar_t, std::__2::ostreambuf_iterator<wchar_t, std::__2::char_traits<wchar_t>>>>(std::__2::locale::__imp const&)",
  "void std::__2::vector<std::__2::__assoc_sub_state*, std::__2::__hidden_allocator<std::__2::__assoc_sub_state*>>::__push_back_slow_path<std::__2::__assoc_sub_state* const&>(std::__2::__assoc_sub_state* const&)",
  "void std::__2::vector<std::__2::basic_string_view<char, std::__2::char_traits<char>>, std::__2::allocator<std::__2::basic_string_view<char, std::__2::char_traits<char>>>>::__push_back_slow_path<std::__2::basic_string_view<char, std::__2::char_traits<char>>>(std::__2::basic_string_view<char, std::__2::char_traits<char>>&&)",
  "void std::__2::vector<std::__2::pair<std::__2::basic_string_view<char, std::__2::char_traits<char>>, std::__2::__fs::filesystem::PathPartKind>, std::__2::allocator<std::__2::pair<std::__2::basic_string_view<char, std::__2::char_traits<char>>, std::__2::__fs::filesystem::PathPartKind>>>::__emplace_back_slow_path<std::__2::basic_string_view<char, std::__2::char_traits<char>>&, std::__2::__fs::filesystem::PathPartKind&>(std::__2::basic_string_view<char, std::__2::char_traits<char>>&, std::__2::__fs::filesystem::PathPartKind&)",
  "void std::__2::vector<std::__2::pair<std::__2::condition_variable*, std::__2::mutex*>, std::__2::__hidden_allocator<std::__2::pair<std::__2::condition_variable*, std::__2::mutex*>>>::__push_back_slow_path<std::__2::pair<std::__2::condition_variable*, std::__2::mutex*>>(std::__2::pair<std::__2::condition_variable*, std::__2::mutex*>&&)",
  "void* std::__2::__libcpp_operator_new[abi:v15006]<unsigned long, std::align_val_t>(unsigned long, std::align_val_t)",
  "void* std::__2::__libcpp_operator_new[abi:v15006]<unsigned long>(unsigned long)",
  "vprintf",
  "vscanf",
  "vsiprintf",
  "vsniprintf",
  "vsnprintf",
  "vsprintf",
  "vsscanf",
  "vstrfmon_l",
  "vswprintf",
  "vswscanf",
  "vwarn",
  "vwarnx",
  "vwprintf",
  "vwscanf",
  "walk",
  "warn",
  "warning(char const*, ...)",
  "warnx",
  "wchar_t const* std::__2::__find_end_classic[abi:v15006]<wchar_t const*, wchar_t const*, bool (wchar_t, wchar_t) noexcept>(wchar_t const*, wchar_t const*, wchar_t const*, wchar_t const*, bool (&)(wchar_t, wchar_t) noexcept)",
  "wchar_t const* std::__2::__find_first_of_ce<wchar_t const*, wchar_t const*, bool (&)(wchar_t, wchar_t) noexcept>(wchar_t const*, wchar_t const*, wchar_t const*, wchar_t const*, bool (&)(wchar_t, wchar_t) noexcept)",
  "wchar_t const* std::__2::__num_get<wchar_t>::__do_widen_p<wchar_t>(std::__2::ios_base&, wchar_t*) const",
  "wcstod",
  "wcstof",
  "wcstoimax",
  "wcstol",
  "wcstold",
  "wcstoll",
  "wcstoul",
  "wcstoull",
  "wcstoumax",
  "wcstox",
  "wprintf",
  "wprintf_core",
  "wrapper_cmp",
  "write_colormap",
  "write_file_header",
  "write_file_trailer",
  "write_frame_header",
  "write_marker_byte",
  "write_marker_header",
  "write_scan_header",
  "write_tables_only",
  "writer(lua_State*, void const*, unsigned long, void*)",
  "wscanf",
  "zcalloc",
  "zcfree"
]